/*! For license information please see chunk.60.e69472d654794fd7b398.js.LICENSE.txt */
(globalThis.webpackChunk_ember_auto_import_=globalThis.webpackChunk_ember_auto_import_||[]).push([[60],{2279:(e,a,n)=>{"use strict"
n.d(a,{ej:()=>s,kG:()=>l,U6:()=>h})
var i=n(2985),r="Invariant Violation",t=Object.setPrototypeOf,o=void 0===t?function(e,a){return e.__proto__=a,e}:t,s=function(e){function a(n){void 0===n&&(n=r)
var i=e.call(this,"number"==typeof n?r+": "+n+" (see https://github.com/apollographql/invariant-packages)":n)||this
return i.framesToPop=1,i.name=r,o(i,a.prototype),i}return(0,i.ZT)(a,e),a}(Error)
function l(e,a){if(!e)throw new s(a)}var u=["debug","log","warn","error","silent"],c=u.indexOf("log")
function d(e){return function(){if(u.indexOf(e)>=c){var a=console[e]||console.log
return a.apply(console,arguments)}}}function h(e){var a=u[c]
return c=Math.max(0,u.indexOf(e)),a}!function(e){e.debug=d("debug"),e.log=d("log"),e.warn=d("warn"),e.error=d("error")}(l||(l={}))},1862:e=>{e.exports=function(e,a){(null==a||a>e.length)&&(a=e.length)
for(var n=0,i=new Array(a);n<a;n++)i[n]=e[n]
return i},e.exports.__esModule=!0,e.exports.default=e.exports},9525:(e,a,n)=>{var i=n(1862)
e.exports=function(e){if(Array.isArray(e))return i(e)},e.exports.__esModule=!0,e.exports.default=e.exports},4115:e=>{e.exports=function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")},e.exports.__esModule=!0,e.exports.default=e.exports},7392:e=>{function a(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}e.exports=function(e,n,i){return n&&a(e.prototype,n),i&&a(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e},e.exports.__esModule=!0,e.exports.default=e.exports},8069:e=>{e.exports=function(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e},e.exports.__esModule=!0,e.exports.default=e.exports},4896:e=>{e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},855:e=>{e.exports=function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},3635:e=>{e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},5176:(e,a,n)=>{var i=n(9525),r=n(855),t=n(5559),o=n(3635)
e.exports=function(e){return i(e)||r(e)||t(e)||o()},e.exports.__esModule=!0,e.exports.default=e.exports},5559:(e,a,n)=>{var i=n(1862)
e.exports=function(e,a){if(e){if("string"==typeof e)return i(e,a)
var n=Object.prototype.toString.call(e).slice(8,-1)
return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?i(e,a):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},8781:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{Faker:()=>bre,default:()=>Are,faker:()=>Sre})
var i,r=Object.create,t=Object.defineProperty,o=Object.getOwnPropertyDescriptor,s=Object.getOwnPropertyNames,l=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty,c=(e,a)=>()=>(e&&(a=e(e=0)),a)
function d(){let e=new Array(624),a=625
function n(e){return e<0?2147483648+(2147483648^e):e}function i(e,a){return e<a?n(4294967296-(a-e)&4294967295):e-a}function r(e,a){return n(e+a&4294967295)}function t(e,a){let i=0
for(let t=0;t<32;++t)e>>>t&1&&(i=r(i,n(a<<t)))
return i}this.init_genrand=function(i){for(e[0]=n(4294967295&i),a=1;a<624;a++)e[a]=r(t(1812433253,n(e[a-1]^e[a-1]>>>30)),a),e[a]=n(4294967295&e[a])},this.init_by_array=function(a,o){this.init_genrand(19650218)
let s=1,l=0,u=624>o?624:o
for(;u;u--)e[s]=r(r(n(e[s]^t(n(e[s-1]^e[s-1]>>>30),1664525)),a[l]),l),e[s]=n(4294967295&e[s]),s++,l++,s>=624&&(e[0]=e[623],s=1),l>=o&&(l=0)
for(u=623;u;u--)e[s]=i(n(e[s]^t(n(e[s-1]^e[s-1]>>>30),1566083941)),s),e[s]=n(4294967295&e[s]),s++,s>=624&&(e[0]=e[623],s=1)
e[0]=2147483648}
let o=[0,2567483615]
this.genrand_int32=function(){let i
if(a>=624){let r
for(625==a&&this.init_genrand(5489),r=0;r<227;r++)i=n(2147483648&e[r]|2147483647&e[r+1]),e[r]=n(e[r+397]^i>>>1^o[1&i])
for(;r<623;r++)i=n(2147483648&e[r]|2147483647&e[r+1]),e[r]=n(e[r+-227]^i>>>1^o[1&i])
i=n(2147483648&e[623]|2147483647&e[0]),e[623]=n(e[396]^i>>>1^o[1&i]),a=0}return i=e[a++],i=n(i^i>>>11),i=n(i^i<<7&2636928640),i=n(i^i<<15&4022730752),i=n(i^i>>>18),i},this.genrand_int31=function(){return this.genrand_int32()>>>1},this.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},this.genrand_real2=function(){return this.genrand_int32()*(1/4294967296)},this.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},this.genrand_res53=function(){return(67108864*(this.genrand_int32()>>>5)+(this.genrand_int32()>>>6))*(1/9007199254740992)}}var h,p,m,f,v,g,k,y,b,S,A,M=c((()=>{h=d})),T=c((()=>{M(),p=class{constructor(){this.gen=new h,this.gen.init_genrand((new Date).getTime()%1e9)
for(let e of Object.getOwnPropertyNames(p.prototype))"constructor"===e||"function"!=typeof this[e]||(this[e]=this[e].bind(this))}rand(e,a){return void 0===e&&(a=0,e=32768),Math.floor(this.gen.genrand_real2()*(e-a)+a)}seed(e){if("number"!=typeof e)throw new Error("seed(S) must take numeric argument; is "+typeof e)
this.gen.init_genrand(e)}seed_array(e){if("object"!=typeof e)throw new Error("seed_array(A) must take array of numbers; is "+typeof e)
this.gen.init_by_array(e,e.length)}}})),_=c((()=>{f=class{constructor(e){this.faker=e,m=this.faker.fake,this.Helpers=this.faker.helpers
for(let a of Object.getOwnPropertyNames(f.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))
this.direction.schema={description:"Generates a direction. Use optional useAbbr bool to return abbreviation",sampleResults:["Northwest","South","SW","E"]},this.cardinalDirection.schema={description:"Generates a cardinal direction. Use optional useAbbr boolean to return abbreviation",sampleResults:["North","South","E","W"]},this.ordinalDirection.schema={description:"Generates an ordinal direction. Use optional useAbbr boolean to return abbreviation",sampleResults:["Northwest","Southeast","SW","NE"]}}zipCode(e){if(typeof e>"u"){let a=this.faker.definitions.address.postcode
e="string"==typeof a?a:this.faker.random.arrayElement(a)}return this.Helpers.replaceSymbols(e)}zipCodeByState(e){let a=this.faker.definitions.address.postcode_by_state[e]
return a?this.faker.datatype.number(a):this.faker.address.zipCode()}city(e){let a=["{{address.cityPrefix}} {{name.firstName}}{{address.citySuffix}}","{{address.cityPrefix}} {{name.firstName}}","{{name.firstName}}{{address.citySuffix}}","{{name.lastName}}{{address.citySuffix}}"]
return!e&&this.faker.definitions.address.city_name&&a.push("{{address.cityName}}"),"number"!=typeof e&&(e=this.faker.datatype.number(a.length-1)),m(a[e])}cityPrefix(){return this.faker.random.arrayElement(this.faker.definitions.address.city_prefix)}citySuffix(){return this.faker.random.arrayElement(this.faker.definitions.address.city_suffix)}cityName(){return this.faker.random.arrayElement(this.faker.definitions.address.city_name)}streetName(){let e,a=this.faker.address.streetSuffix()
switch(""!==a&&(a=" "+a),this.faker.datatype.number(1)){case 0:e=this.faker.name.lastName()+a
break
case 1:e=this.faker.name.firstName()+a}return e}streetAddress(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],a=""
switch(this.faker.datatype.number(2)){case 0:a=this.Helpers.replaceSymbolWithNumber("#####")+" "+this.faker.address.streetName()
break
case 1:a=this.Helpers.replaceSymbolWithNumber("####")+" "+this.faker.address.streetName()
break
case 2:a=this.Helpers.replaceSymbolWithNumber("###")+" "+this.faker.address.streetName()}return e?a+" "+this.faker.address.secondaryAddress():a}streetSuffix(){return this.faker.random.arrayElement(this.faker.definitions.address.street_suffix)}streetPrefix(){return this.faker.random.arrayElement(this.faker.definitions.address.street_prefix)}secondaryAddress(){return this.Helpers.replaceSymbolWithNumber(this.faker.random.arrayElement(["Apt. ###","Suite ###"]))}county(){return this.faker.random.arrayElement(this.faker.definitions.address.county)}country(){return this.faker.random.arrayElement(this.faker.definitions.address.country)}countryCode(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"alpha-2"
return"alpha-2"===e?this.faker.random.arrayElement(this.faker.definitions.address.country_code):"alpha-3"===e?this.faker.random.arrayElement(this.faker.definitions.address.country_code_alpha_3):this.faker.random.arrayElement(this.faker.definitions.address.country_code)}state(e){return this.faker.random.arrayElement(this.faker.definitions.address.state)}stateAbbr(){return this.faker.random.arrayElement(this.faker.definitions.address.state_abbr)}latitude(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:90,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-90,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4
return this.faker.datatype.number({max:e,min:a,precision:parseFloat((0).toPrecision(n)+"1")}).toFixed(n)}longitude(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:180,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-180,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4
return this.faker.datatype.number({max:e,min:a,precision:parseFloat((0).toPrecision(n)+"1")}).toFixed(n)}direction(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.faker.random.arrayElement(this.faker.definitions.address.direction_abbr):this.faker.random.arrayElement(this.faker.definitions.address.direction)}cardinalDirection(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.faker.random.arrayElement(this.faker.definitions.address.direction_abbr.slice(0,4)):this.faker.random.arrayElement(this.faker.definitions.address.direction.slice(0,4))}ordinalDirection(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.faker.random.arrayElement(this.faker.definitions.address.direction_abbr.slice(4,8)):this.faker.random.arrayElement(this.faker.definitions.address.direction.slice(4,8))}nearbyGPSCoordinate(e,a,n){function i(e){return e*(Math.PI/180)}function r(e){return e*(180/Math.PI)}if(void 0===e)return[this.faker.address.latitude(),this.faker.address.longitude()]
a=a||10,n=n||!1
let t=function(e,a,n,t){let o=t?n:function(e){return.621371*e}(n),s=i(e[0]),l=i(e[1]),u=Math.asin(Math.sin(s)*Math.cos(o/6378.137)+Math.cos(s)*Math.sin(o/6378.137)*Math.cos(a)),c=l+Math.atan2(Math.sin(a)*Math.sin(o/6378.137)*Math.cos(s),Math.cos(o/6378.137)-Math.sin(s)*Math.sin(u))
return c>i(180)?c-=i(360):c<i(-180)&&(c+=i(360)),[r(u),r(c)]}(e,i(360*Math.random()),a,n)
return[t[0].toFixed(4),t[1].toFixed(4)]}timeZone(){return this.faker.random.arrayElement(this.faker.definitions.address.time_zone)}}})),w=c((()=>{v=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(v.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}dog(){return this.faker.random.arrayElement(this.faker.definitions.animal.dog)}cat(){return this.faker.random.arrayElement(this.faker.definitions.animal.cat)}snake(){return this.faker.random.arrayElement(this.faker.definitions.animal.snake)}bear(){return this.faker.random.arrayElement(this.faker.definitions.animal.bear)}lion(){return this.faker.random.arrayElement(this.faker.definitions.animal.lion)}cetacean(){return this.faker.random.arrayElement(this.faker.definitions.animal.cetacean)}horse(){return this.faker.random.arrayElement(this.faker.definitions.animal.horse)}bird(){return this.faker.random.arrayElement(this.faker.definitions.animal.bird)}cow(){return this.faker.random.arrayElement(this.faker.definitions.animal.cow)}fish(){return this.faker.random.arrayElement(this.faker.definitions.animal.fish)}crocodilia(){return this.faker.random.arrayElement(this.faker.definitions.animal.crocodilia)}insect(){return this.faker.random.arrayElement(this.faker.definitions.animal.insect)}rabbit(){return this.faker.random.arrayElement(this.faker.definitions.animal.rabbit)}type(){return this.faker.random.arrayElement(this.faker.definitions.animal.type)}}})),j=c((()=>{g=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(g.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}color(){return this.faker.random.arrayElement(this.faker.definitions.commerce.color)}department(){return this.faker.random.arrayElement(this.faker.definitions.commerce.department)}productName(){return this.faker.commerce.productAdjective()+" "+this.faker.commerce.productMaterial()+" "+this.faker.commerce.product()}price(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:""
if(e<0||a<0)return`${i}0`
let r=this.faker.datatype.number({max:a,min:e})
return i+(Math.round(r*Math.pow(10,n))/Math.pow(10,n)).toFixed(n)}productAdjective(){return this.faker.random.arrayElement(this.faker.definitions.commerce.product_name.adjective)}productMaterial(){return this.faker.random.arrayElement(this.faker.definitions.commerce.product_name.material)}product(){return this.faker.random.arrayElement(this.faker.definitions.commerce.product_name.product)}productDescription(){return this.faker.random.arrayElement(this.faker.definitions.commerce.product_description)}}})),E=c((()=>{y=class{constructor(e){this.faker=e,k=this.faker.fake
for(let a of Object.getOwnPropertyNames(y.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}suffixes(){return this.faker.definitions.company.suffix.slice(0)}companyName(e){let a=["{{name.lastName}} {{company.companySuffix}}","{{name.lastName}} - {{name.lastName}}","{{name.lastName}}, {{name.lastName}} and {{name.lastName}}"]
return"number"!=typeof e&&(e=this.faker.datatype.number(a.length-1)),k(a[e])}companySuffix(){return this.faker.random.arrayElement(this.faker.company.suffixes())}catchPhrase(){return k("{{company.catchPhraseAdjective}} {{company.catchPhraseDescriptor}} {{company.catchPhraseNoun}}")}bs(){return k("{{company.bsBuzz}} {{company.bsAdjective}} {{company.bsNoun}}")}catchPhraseAdjective(){return this.faker.random.arrayElement(this.faker.definitions.company.adjective)}catchPhraseDescriptor(){return this.faker.random.arrayElement(this.faker.definitions.company.descriptor)}catchPhraseNoun(){return this.faker.random.arrayElement(this.faker.definitions.company.noun)}bsAdjective(){return this.faker.random.arrayElement(this.faker.definitions.company.bs_adjective)}bsBuzz(){return this.faker.random.arrayElement(this.faker.definitions.company.bs_verb)}bsNoun(){return this.faker.random.arrayElement(this.faker.definitions.company.bs_noun)}}})),N=c((()=>{b=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(b.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}column(){return this.faker.random.arrayElement(this.faker.definitions.database.column)}type(){return this.faker.random.arrayElement(this.faker.definitions.database.type)}collation(){return this.faker.random.arrayElement(this.faker.definitions.database.collation)}engine(){return this.faker.random.arrayElement(this.faker.definitions.database.engine)}}})),B=c((()=>{S=class{constructor(e,a){this.faker=e,Array.isArray(a)&&a.length?this.faker.mersenne.seed_array(a):isNaN(a)||this.faker.mersenne.seed(a)
for(let n of Object.getOwnPropertyNames(S.prototype))"constructor"===n||"function"!=typeof this[n]||(this[n]=this[n].bind(this))}number(e){"number"==typeof e&&(e={max:e}),typeof(e=null!=e?e:{}).min>"u"&&(e.min=0),typeof e.max>"u"&&(e.max=99999),typeof e.precision>"u"&&(e.precision=1)
let a=e.max
a>=0&&(a+=e.precision)
let n=Math.floor(this.faker.mersenne.rand(a/e.precision,e.min/e.precision))
return n/=1/e.precision,n}float(e){"number"==typeof e&&(e={precision:e}),e=e||{}
let a={}
for(let n in e)a[n]=e[n]
return typeof a.precision>"u"&&(a.precision=.01),this.faker.datatype.number(a)}datetime(e){let a="number"==typeof e||null==e?void 0:e.min,n="number"==typeof e?e:null==e?void 0:e.max
return(typeof a>"u"||a<-864e13)&&(a=(new Date).setFullYear(1990,1,1)),(typeof n>"u"||n>864e13)&&(n=(new Date).setFullYear(2100,1,1)),new Date(this.faker.datatype.number({min:a,max:n}))}string(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,a=Math.pow(2,20)
e>=a&&(e=a)
let n={min:33,max:125},i=""
for(let r=0;r<e;r++)i+=String.fromCharCode(this.faker.datatype.number(n))
return i}uuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{let a=this.faker.datatype.number({min:0,max:15})
return("x"==e?a:3&a|8).toString(16)}))}boolean(){return!!this.faker.datatype.number(1)}hexaDecimal(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=""
for(let n=0;n<e;n++)a+=this.faker.random.arrayElement(["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","A","B","C","D","E","F"])
return"0x"+a}json(){let e={}
return["foo","bar","bike","a","b","name","prop"].forEach((a=>{e[a]=this.faker.datatype.boolean()?this.faker.datatype.string():this.faker.datatype.number()})),JSON.stringify(e)}array(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,a=new Array(e)
for(let n=0;n<e;n++)a[n]=this.faker.datatype.boolean()?this.faker.datatype.string():this.faker.datatype.number()
return a}bigInt(e){return void 0===e&&(e=Math.floor(99999999999*this.faker.datatype.number())+1e10),BigInt(e)}}})),P=c((()=>{A=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(A.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}past(e,a){let n=new Date
typeof a<"u"&&(n=new Date(Date.parse(a)))
let i={min:1e3,max:365*(e||1)*24*3600*1e3},r=n.getTime()
return r-=this.faker.datatype.number(i),n.setTime(r),n}future(e,a){let n=new Date
typeof a<"u"&&(n=new Date(Date.parse(a)))
let i={min:1e3,max:365*(e||1)*24*3600*1e3},r=n.getTime()
return r+=this.faker.datatype.number(i),n.setTime(r),n}between(e,a){let n=Date.parse(e),i=this.faker.datatype.number(Date.parse(a)-n)
return new Date(n+i)}betweens(e,a,n){typeof n>"u"&&(n=3)
let i=[],r=Date.parse(e),t=(Date.parse(a)-r)/(n+1),o=e
for(let s=0;s<n;s++)r=Date.parse(o),o=new Date(r+t),i.push(o)
return i}recent(e,a){let n=new Date
typeof a<"u"&&(n=new Date(Date.parse(a)))
let i={min:1e3,max:24*(e||1)*3600*1e3},r=n.getTime()
return r-=this.faker.datatype.number(i),n.setTime(r),n}soon(e,a){let n=new Date
typeof a<"u"&&(n=new Date(Date.parse(a)))
let i={min:1e3,max:24*(e||1)*3600*1e3},r=n.getTime()
return r+=this.faker.datatype.number(i),n.setTime(r),n}month(e){let a="wide";(e=e||{}).abbr&&(a="abbr"),e.context&&typeof this.faker.definitions.date.month[a+"_context"]<"u"&&(a+="_context")
let n=this.faker.definitions.date.month[a]
return this.faker.random.arrayElement(n)}weekday(e){let a="wide";(e=e||{}).abbr&&(a="abbr"),e.context&&typeof this.faker.definitions.date.weekday[a+"_context"]<"u"&&(a+="_context")
let n=this.faker.definitions.date.weekday[a]
return this.faker.random.arrayElement(n)}}}))
function L(){return function(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
return a}}var D,x,C,K,R,z,O,I,V,G,H,F,J,U,W,Z,q,Q,Y,$,X,ee,ae,ne,ie,re,te,oe,se,le,ue,ce,de,he,pe,me,fe,ve,ge,ke,ye,be,Se,Ae,Me,Te,_e,we,je,Ee,Ne,Be,Pe,Le,De,xe,Ce,Ke,Re,ze,Oe,Ie,Ve,Ge,He,Fe,Je,Ue,We,Ze,qe,Qe,Ye,$e,Xe,ea,aa,na,ia,ra,ta,oa,sa,la,ua,ca,da,ha,pa,ma,fa,va,ga,ka,ya,ba,Sa,Aa,Ma,Ta,_a,wa,ja,Ea,Na,Ba,Pa,La,Da,xa,Ca,Ka,Ra,za,Oa,Ia,Va,Ga,Ha,Fa,Ja,Ua,Wa,Za,qa,Qa,Ya,$a,Xa,en,an,nn,rn,tn,on,sn,ln,un,cn,dn,hn,pn,mn,fn,vn,gn,kn,yn,bn,Sn,An,Mn,Tn,_n,wn,jn,En,Nn,Bn,Pn,Ln,Dn,xn,Cn,Kn,Rn,zn,On,In,Vn,Gn,Hn,Fn,Jn,Un,Wn,Zn,qn,Qn,Yn,$n,Xn,ei,ai,ni,ii,ri,ti,oi,si,li,ui,ci,di,hi,pi,mi,fi,vi,gi,ki,yi,bi,Si,Ai,Mi,Ti,_i,wi,ji,Ei,Ni,Bi,Pi,Li,Di,xi,Ci,Ki,Ri,zi,Oi,Ii,Vi,Gi,Hi,Fi,Ji,Ui,Wi,Zi,qi,Qi,Yi,$i,Xi,er,ar,nr,ir,rr,tr,or,sr,lr,ur,cr,dr,hr,pr,mr,fr,vr,gr,kr,yr,br,Sr,Ar,Mr,Tr,_r,wr,jr,Er,Nr,Br,Pr,Lr,Dr,xr,Cr,Kr,Rr,zr,Or,Ir,Vr,Gr,Hr,Fr,Jr,Ur,Wr,Zr,qr,Qr,Yr,$r,Xr,et,at,nt,it,rt,tt,ot,st,lt,ut,ct,dt,ht,pt,mt,ft,vt,gt,kt,yt,bt,St,At,Mt,Tt,_t,wt,jt,Et,Nt,Bt,Pt,Lt,Dt,xt,Ct,Kt,Rt,zt,Ot,It,Vt,Gt,Ht,Ft,Jt,Ut,Wt,Zt,qt,Qt,Yt,$t,Xt,eo,ao,no,io,ro,to,oo,so,lo,uo,co,ho,po,mo,fo,vo,go,ko,yo,bo,So,Ao,Mo,To,_o,wo,jo,Eo,No,Bo,Po,Lo,Do,xo,Co,Ko,Ro,zo,Oo,Io,Vo,Go,Ho,Fo,Jo,Uo,Wo,Zo,qo,Qo,Yo,$o,Xo,es,as,ns,is,rs,ts,os,ss,ls,us,cs,ds,hs,ps,ms,fs,vs,gs,ks,ys,bs,Ss,As,Ms,Ts,_s,ws,js,Es,Ns,Bs,Ps,Ls,Ds,xs,Cs,Ks,Rs,zs,Os,Is,Vs,Gs,Hs,Fs,Js,Us,Ws,Zs,qs,Qs,Ys,$s,Xs,el,al,nl,il,rl,tl,ol,sl,ll,ul,cl,dl,hl,pl,ml,fl,vl,gl,kl,yl,bl,Sl,Al,Ml,Tl,_l,wl,jl,El,Nl,Bl,Pl,Ll,Dl,xl,Cl,Kl,Rl,zl,Ol,Il,Vl,Gl,Hl,Fl,Jl,Ul,Wl,Zl,ql,Ql,Yl,$l,Xl,eu,au,nu,iu,ru,tu,ou,su,lu,uu,cu,du,hu,pu,mu,fu,vu,gu,ku,yu,bu,Su,Au,Mu,Tu,_u,wu,ju,Eu,Nu,Bu,Pu,Lu,Du,xu,Cu,Ku,Ru,zu,Ou,Iu,Vu,Gu,Hu,Fu,Ju,Uu,Wu,Zu,qu,Qu,Yu,$u,Xu,ec,ac,nc,ic,rc,tc,oc,sc,lc,uc,cc,dc,hc,pc,mc,fc,vc,gc,kc,yc,bc,Sc,Ac,Mc,Tc,_c,wc,jc,Ec,Nc,Bc,Pc,Lc,Dc,xc,Cc,Kc,Rc,zc,Oc,Ic,Vc,Gc,Hc,Fc,Jc,Uc,Wc,Zc,qc,Qc,Yc,$c,Xc,ed,ad,nd,id,rd,td,od,sd,ld,ud,cd,dd,hd,pd,md,fd,vd,gd,kd,yd,bd,Sd,Ad,Md,Td,_d,wd,jd,Ed,Nd,Bd,Pd,Ld,Dd,xd,Cd,Kd,Rd,zd,Od,Id,Vd,Gd,Hd,Fd,Jd,Ud,Wd,Zd,qd,Qd,Yd,$d,Xd,eh,ah,nh,ih,rh,th,oh,sh,lh,uh,ch,dh,hh,ph,mh,fh,vh,gh,kh,yh,bh,Sh,Ah,Mh,Th,_h,wh,jh,Eh,Nh,Bh,Ph,Lh,Dh,xh,Ch,Kh,Rh,zh,Oh,Ih,Vh,Gh,Hh,Fh,Jh,Uh,Wh,Zh,qh,Qh,Yh,$h,Xh,ep,ap,np,ip,rp,tp,op,sp,lp,up,cp,dp,hp,pp,mp,fp,vp,gp,kp,yp,bp,Sp,Ap,Mp,Tp,_p,wp,jp,Ep,Np,Bp,Pp,Lp,Dp,xp,Cp,Kp,Rp,zp,Op,Ip,Vp,Gp,Hp,Fp,Jp,Up,Wp,Zp,qp,Qp,Yp,$p,Xp,em,am,nm,im,rm,tm,om,sm,lm,um,cm,dm,hm,pm,mm,fm,vm,gm,km,ym,bm,Sm,Am,Mm,Tm,_m,wm,jm,Em,Nm,Bm,Pm,Lm,Dm,xm,Cm,Km,Rm,zm,Om,Im,Vm,Gm,Hm,Fm,Jm,Um,Wm,Zm,qm,Qm,Ym,$m,Xm,ef,af,nf,rf,tf,of,sf,lf,uf,cf,df,hf,pf,mf,ff,vf,gf,kf,yf,bf,Sf,Af,Mf,Tf,_f,wf,jf,Ef,Nf,Bf,Pf,Lf,Df,xf,Cf,Kf,Rf,zf,Of,If,Vf,Gf,Hf,Ff,Jf,Uf,Wf,Zf,qf,Qf,Yf,$f,Xf,ev,av,nv,iv,rv,tv,ov,sv,lv,uv,cv,dv,hv,pv,mv,fv,vv,gv,kv,yv,bv,Sv,Av,Mv,Tv,_v,wv,jv,Ev,Nv,Bv,Pv,Lv,Dv,xv,Cv,Kv,Rv,zv,Ov,Iv,Vv,Gv,Hv,Fv,Jv,Uv,Wv,Zv,qv,Qv,Yv,$v,Xv,eg,ag,ng,ig,rg,tg,og,sg,lg,ug,cg,dg,hg,pg,mg,fg,vg,gg,kg,yg,bg,Sg,Ag,Mg,Tg,_g,wg,jg,Eg,Ng,Bg,Pg,Lg,Dg,xg,Cg,Kg,Rg,zg,Og,Ig,Vg,Gg,Hg,Fg,Jg,Ug,Wg,Zg,qg,Qg,Yg,$g,Xg,ek,ak,nk,ik,rk,tk,ok,sk,lk,uk,ck,dk,hk,pk,mk,fk,vk,gk,kk,yk,bk,Sk,Ak,Mk,Tk,_k,wk,jk,Ek,Nk,Bk,Pk,Lk,Dk,xk,Ck,Kk,Rk,zk,Ok,Ik,Vk,Gk,Hk,Fk,Jk,Uk,Wk,Zk,qk,Qk,Yk,$k,Xk,ey,ay,ny,iy,ry,ty,oy,sy,ly,uy,cy,dy,hy,py,my,fy,vy,gy,ky,yy,by,Sy,Ay,My,Ty,_y,wy,jy,Ey,Ny,By,Py,Ly,Dy,xy,Cy,Ky,Ry,zy,Oy,Iy,Vy,Gy,Hy,Fy,Jy,Uy,Wy,Zy,qy,Qy,Yy,$y,Xy,eb,ab,nb,ib,rb,tb,ob,sb,lb,ub,cb,db,hb,pb,mb,fb,vb,gb,kb,yb,bb,Sb,Ab,Mb,Tb,_b,wb,jb,Eb,Nb,Bb,Pb,Lb,Db,xb,Cb,Kb,Rb,zb,Ob,Ib,Vb,Gb,Hb,Fb,Jb,Ub,Wb,Zb,qb,Qb,Yb,$b,Xb,eS,aS,nS,iS,rS,tS,oS,sS,lS,uS,cS,dS,hS,pS,mS,fS,vS,gS,kS,yS,bS,SS,AS,MS,TS,_S,wS,jS,ES,NS,BS,PS,LS,DS,xS,CS,KS,RS,zS,OS,IS,VS,GS,HS,FS,JS,US,WS,ZS,qS,QS,YS,$S,XS,eA,aA,nA,iA,rA,tA,oA,sA,lA,uA,cA,dA,hA,pA,mA,fA,vA,gA,kA,yA,bA,SA,AA,MA,TA,_A,wA,jA,EA,NA,BA,PA,LA,DA,xA,CA,KA,RA,zA,OA,IA,VA,GA,HA,FA,JA,UA,WA,ZA,qA,QA,YA,$A,XA,eM,aM,nM,iM,rM,tM,oM,sM,lM,uM,cM,dM,hM,pM,mM,fM,vM,gM,kM,yM,bM,SM,AM,MM,TM,_M,wM,jM,EM,NM,BM,PM,LM,DM,xM,CM,KM,RM,zM,OM,IM,VM,GM,HM,FM,JM,UM,WM,ZM,qM,QM,YM,$M,XM,eT,aT,nT,iT,rT,tT,oT,sT,lT,uT,cT,dT,hT,pT,mT,fT,vT,gT,kT,yT,bT,ST,AT,MT,TT,_T,wT,jT,ET,NT,BT,PT,LT,DT,xT,CT,KT,RT,zT,OT,IT,VT,GT,HT,FT,JT,UT,WT,ZT,qT,QT,YT,$T,XT,e_,a_,n_,i_,r_,t_,o_,s_,l_,u_,c_,d_,h_,p_,m_,f_,v_,g_,k_,y_,b_,S_,A_,M_,T_,__,w_,j_,E_,N_,B_,P_,L_,D_,x_,C_,K_,R_,z_,O_,I_,V_,G_,H_,F_,J_,U_,W_,Z_,q_,Q_,Y_,$_,X_,ew,aw,nw,iw,rw,tw,ow,sw,lw,uw,cw,dw,hw,pw,mw,fw,vw,gw,kw,yw,bw,Sw,Aw,Mw,Tw,_w,ww,jw,Ew,Nw,Bw,Pw,Lw,Dw,xw,Cw,Kw,Rw,zw,Ow,Iw,Vw,Gw,Hw,Fw,Jw,Uw,Ww,Zw,qw,Qw,Yw,$w,Xw,ej,aj,nj,ij,rj,tj,oj,sj,lj,uj,cj,dj,hj,pj,mj,fj,vj,gj,kj,yj,bj,Sj,Aj,Mj,Tj,_j,wj,jj,Ej,Nj,Bj,Pj,Lj,Dj,xj,Cj,Kj,Rj,zj,Oj,Ij,Vj,Gj,Hj,Fj,Jj,Uj,Wj,Zj,qj,Qj,Yj,$j,Xj,eE,aE,nE,iE,rE,tE,oE,sE,lE,uE,cE,dE,hE,pE,mE,fE,vE,gE,kE,yE,bE,SE,AE,ME,TE,_E,wE,jE,EE,NE,BE,PE,LE,DE,xE,CE,KE,RE,zE,OE,IE,VE,GE,HE,FE,JE,UE,WE,ZE,qE,QE,YE,$E,XE,eN,aN,nN,iN,rN,tN,oN,sN,lN,uN,cN,dN,hN,pN,mN,fN,vN,gN,kN,yN,bN,SN,AN,MN,TN,_N,wN,jN,EN,NN,BN,PN,LN,DN,xN,CN,KN,RN,zN,ON,IN,VN,GN,HN,FN,JN,UN,WN,ZN,qN,QN,YN,$N,XN,eB,aB,nB,iB,rB,tB,oB,sB,lB,uB,cB,dB,hB,pB,mB,fB,vB,gB,kB,yB,bB,SB,AB,MB,TB,_B,wB,jB,EB,NB,BB,PB,LB,DB,xB,CB,KB,RB,zB,OB,IB,VB,GB,HB,FB,JB,UB,WB,ZB,qB,QB,YB,$B,XB,eP,aP,nP,iP,rP,tP,oP,sP,lP,uP,cP,dP,hP,pP,mP,fP,vP,gP,kP,yP,bP,SP,AP,MP,TP,_P,wP,jP,EP,NP,BP,PP,LP,DP,xP,CP,KP,RP,zP,OP,IP,VP,GP,HP,FP,JP,UP,WP,ZP,qP,QP,YP,$P,XP,eL,aL,nL,iL,rL,tL,oL,sL,lL,uL,cL,dL,hL,pL,mL,fL,vL,gL,kL,yL,bL,SL,AL,ML,TL,_L,wL,jL,EL,NL,BL,PL,LL,DL,xL,CL,KL,RL,zL,OL,IL,VL,GL,HL,FL,JL,UL,WL,ZL,qL,QL,YL,$L,XL,eD,aD,nD,iD,rD,tD,oD,sD,lD,uD,cD,dD,hD,pD,mD,fD,vD,gD,kD,yD,bD,SD,AD,MD,TD,_D,wD,jD,ED,ND,BD,PD,LD,DD,xD,CD,KD,RD,zD,OD,ID,VD,GD,HD,FD,JD=c((()=>{})),UD=c((()=>{JD(),D=L()("postcode_by_state","postcode","city_name","city_prefix","city_suffix","country","state","state_abbr","county","direction_abbr","direction","street_prefix","street_suffix","secondary_address","country_code","country_code_alpha_3","time_zone")})),WD=c((()=>{JD(),x=L()("dog","cat","snake","bear","lion","cetacean","insect","crocodilia","cow","bird","fish","rabbit","horse","type")})),ZD=c((()=>{JD(),C=L()("color","department","product_name","product_description")})),qD=c((()=>{JD(),K=L()("bs_adjective","bs_noun","bs_verb","adjective","descriptor","noun","suffix")})),QD=c((()=>{JD(),R=L()("collation","column","engine","type")})),YD=c((()=>{JD(),z=L()("month","weekday")})),$D=c((()=>{JD(),O=L()("account_type","credit_card","currency","transaction_type")})),XD=c((()=>{JD(),I=L()("abbreviation","adjective","ingverb","noun","phrase","verb")})),ex=c((()=>{JD(),V=L()("domain_suffix","example_email","free_email")})),ax=c((()=>{JD(),G=L()("words")})),nx=c((()=>{JD(),H=L()("genre")})),ix=c((()=>{JD(),F=L()("gender","binary_gender","prefix","female_prefix","male_prefix","first_name","female_first_name","male_first_name","middle_name","female_middle_name","male_middle_name","last_name","female_last_name","male_last_name","suffix","name","title")})),rx=c((()=>{JD(),J=L()("formats")})),tx=c((()=>{JD(),U=L()("directoryPaths","mimeTypes")})),ox=c((()=>{JD(),W=L()("bicycle_type","fuel","manufacturer","model","type")})),sx=c((()=>{JD(),Z=L()("adjective","adverb","conjunction","interjection","noun","preposition","verb")})),lx=c((()=>{UD(),WD(),ZD(),qD(),QD(),YD(),$D(),XD(),ex(),ax(),nx(),ix(),rx(),tx(),ox(),sx(),q={title:"",separator:"",address:D,animal:x,company:K,commerce:C,database:R,date:z,finance:O,hacker:I,internet:V,lorem:G,music:H,name:F,phone_number:J,system:U,vehicle:W,word:Z}})),ux=c((()=>{lx()})),cx=c((()=>{Q=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(Q.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}fake(e){let a=""
if("string"!=typeof e||0===e.length)throw new Error("string parameter is required!")
let n=e.search("{{"),i=e.search("}}")
if(-1===n||-1===i)return e
let r=e.substr(n+2,i-n-2),t=r.replace("}}","").replace("{{",""),o=/\(([^)]+)\)/,s=o.exec(t),l=""
s&&(t=t.replace(o,""),l=s[1])
let u=t.split(".")
if(typeof this.faker[u[0]]>"u")throw new Error("Invalid module: "+u[0])
if(typeof this.faker[u[0]][u[1]]>"u")throw new Error("Invalid method: "+u[0]+"."+u[1])
let c,d,h=this.faker[u[0]][u[1]]
h=h.bind(this)
try{c=JSON.parse(l)}catch{c=l}return d="string"==typeof c&&0===c.length?h():h(c),a=e.replace("{{"+r+"}}",d),this.fake(a)}}})),dx=c((()=>{Y=((e,a)=>((e,a,n,i)=>{if(a&&"object"==typeof a||"function"==typeof a)for(let r of s(a))!u.call(e,r)&&"default"!==r&&t(e,r,{get:()=>a[r],enumerable:!(i=o(a,r))||i.enumerable})
return e})((e=>t(e,"__esModule",{value:!0}))(t(null!=e?r(l(e)):{},"default",e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e))((i||((e,a)=>{a.exports={alpha:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],pattern10:["01","02","03","04","05","06","07","08","09"],pattern100:["001","002","003","004","005","006","007","008","009"],toDigitString:e=>e.replace(/[A-Z]/gi,(e=>e.toUpperCase().charCodeAt(0)-55)),mod97:e=>{let a=0
for(let n=0;n<e.length;n++)a=(10*a+(0|e[n]))%97
return a},formats:[{country:"AL",total:28,bban:[{type:"n",count:8},{type:"c",count:16}],format:"ALkk bbbs sssx cccc cccc cccc cccc"},{country:"AD",total:24,bban:[{type:"n",count:8},{type:"c",count:12}],format:"ADkk bbbb ssss cccc cccc cccc"},{country:"AT",total:20,bban:[{type:"n",count:5},{type:"n",count:11}],format:"ATkk bbbb bccc cccc cccc"},{country:"AZ",total:28,bban:[{type:"a",count:4},{type:"n",count:20}],format:"AZkk bbbb cccc cccc cccc cccc cccc"},{country:"BH",total:22,bban:[{type:"a",count:4},{type:"c",count:14}],format:"BHkk bbbb cccc cccc cccc cc"},{country:"BE",total:16,bban:[{type:"n",count:3},{type:"n",count:9}],format:"BEkk bbbc cccc ccxx"},{country:"BA",total:20,bban:[{type:"n",count:6},{type:"n",count:10}],format:"BAkk bbbs sscc cccc ccxx"},{country:"BR",total:29,bban:[{type:"n",count:13},{type:"n",count:10},{type:"a",count:1},{type:"c",count:1}],format:"BRkk bbbb bbbb ssss sccc cccc ccct n"},{country:"BG",total:22,bban:[{type:"a",count:4},{type:"n",count:6},{type:"c",count:8}],format:"BGkk bbbb ssss ddcc cccc cc"},{country:"CR",total:21,bban:[{type:"n",count:3},{type:"n",count:14}],format:"CRkk bbbc cccc cccc cccc c"},{country:"HR",total:21,bban:[{type:"n",count:7},{type:"n",count:10}],format:"HRkk bbbb bbbc cccc cccc c"},{country:"CY",total:28,bban:[{type:"n",count:8},{type:"c",count:16}],format:"CYkk bbbs ssss cccc cccc cccc cccc"},{country:"CZ",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"CZkk bbbb ssss sscc cccc cccc"},{country:"DK",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"DKkk bbbb cccc cccc cc"},{country:"DO",total:28,bban:[{type:"a",count:4},{type:"n",count:20}],format:"DOkk bbbb cccc cccc cccc cccc cccc"},{country:"TL",total:23,bban:[{type:"n",count:3},{type:"n",count:16}],format:"TLkk bbbc cccc cccc cccc cxx"},{country:"EE",total:20,bban:[{type:"n",count:4},{type:"n",count:12}],format:"EEkk bbss cccc cccc cccx"},{country:"FO",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"FOkk bbbb cccc cccc cx"},{country:"FI",total:18,bban:[{type:"n",count:6},{type:"n",count:8}],format:"FIkk bbbb bbcc cccc cx"},{country:"FR",total:27,bban:[{type:"n",count:10},{type:"c",count:11},{type:"n",count:2}],format:"FRkk bbbb bggg ggcc cccc cccc cxx"},{country:"GE",total:22,bban:[{type:"a",count:2},{type:"n",count:16}],format:"GEkk bbcc cccc cccc cccc cc"},{country:"DE",total:22,bban:[{type:"n",count:8},{type:"n",count:10}],format:"DEkk bbbb bbbb cccc cccc cc"},{country:"GI",total:23,bban:[{type:"a",count:4},{type:"c",count:15}],format:"GIkk bbbb cccc cccc cccc ccc"},{country:"GR",total:27,bban:[{type:"n",count:7},{type:"c",count:16}],format:"GRkk bbbs sssc cccc cccc cccc ccc"},{country:"GL",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"GLkk bbbb cccc cccc cc"},{country:"GT",total:28,bban:[{type:"c",count:4},{type:"c",count:4},{type:"c",count:16}],format:"GTkk bbbb mmtt cccc cccc cccc cccc"},{country:"HU",total:28,bban:[{type:"n",count:8},{type:"n",count:16}],format:"HUkk bbbs sssk cccc cccc cccc cccx"},{country:"IS",total:26,bban:[{type:"n",count:6},{type:"n",count:16}],format:"ISkk bbbb sscc cccc iiii iiii ii"},{country:"IE",total:22,bban:[{type:"c",count:4},{type:"n",count:6},{type:"n",count:8}],format:"IEkk aaaa bbbb bbcc cccc cc"},{country:"IL",total:23,bban:[{type:"n",count:6},{type:"n",count:13}],format:"ILkk bbbn nncc cccc cccc ccc"},{country:"IT",total:27,bban:[{type:"a",count:1},{type:"n",count:10},{type:"c",count:12}],format:"ITkk xaaa aabb bbbc cccc cccc ccc"},{country:"JO",total:30,bban:[{type:"a",count:4},{type:"n",count:4},{type:"n",count:18}],format:"JOkk bbbb nnnn cccc cccc cccc cccc cc"},{country:"KZ",total:20,bban:[{type:"n",count:3},{type:"c",count:13}],format:"KZkk bbbc cccc cccc cccc"},{country:"XK",total:20,bban:[{type:"n",count:4},{type:"n",count:12}],format:"XKkk bbbb cccc cccc cccc"},{country:"KW",total:30,bban:[{type:"a",count:4},{type:"c",count:22}],format:"KWkk bbbb cccc cccc cccc cccc cccc cc"},{country:"LV",total:21,bban:[{type:"a",count:4},{type:"c",count:13}],format:"LVkk bbbb cccc cccc cccc c"},{country:"LB",total:28,bban:[{type:"n",count:4},{type:"c",count:20}],format:"LBkk bbbb cccc cccc cccc cccc cccc"},{country:"LI",total:21,bban:[{type:"n",count:5},{type:"c",count:12}],format:"LIkk bbbb bccc cccc cccc c"},{country:"LT",total:20,bban:[{type:"n",count:5},{type:"n",count:11}],format:"LTkk bbbb bccc cccc cccc"},{country:"LU",total:20,bban:[{type:"n",count:3},{type:"c",count:13}],format:"LUkk bbbc cccc cccc cccc"},{country:"MK",total:19,bban:[{type:"n",count:3},{type:"c",count:10},{type:"n",count:2}],format:"MKkk bbbc cccc cccc cxx"},{country:"MT",total:31,bban:[{type:"a",count:4},{type:"n",count:5},{type:"c",count:18}],format:"MTkk bbbb ssss sccc cccc cccc cccc ccc"},{country:"MR",total:27,bban:[{type:"n",count:10},{type:"n",count:13}],format:"MRkk bbbb bsss sscc cccc cccc cxx"},{country:"MU",total:30,bban:[{type:"a",count:4},{type:"n",count:4},{type:"n",count:15},{type:"a",count:3}],format:"MUkk bbbb bbss cccc cccc cccc 000d dd"},{country:"MC",total:27,bban:[{type:"n",count:10},{type:"c",count:11},{type:"n",count:2}],format:"MCkk bbbb bsss sscc cccc cccc cxx"},{country:"MD",total:24,bban:[{type:"c",count:2},{type:"c",count:18}],format:"MDkk bbcc cccc cccc cccc cccc"},{country:"ME",total:22,bban:[{type:"n",count:3},{type:"n",count:15}],format:"MEkk bbbc cccc cccc cccc xx"},{country:"NL",total:18,bban:[{type:"a",count:4},{type:"n",count:10}],format:"NLkk bbbb cccc cccc cc"},{country:"NO",total:15,bban:[{type:"n",count:4},{type:"n",count:7}],format:"NOkk bbbb cccc ccx"},{country:"PK",total:24,bban:[{type:"a",count:4},{type:"n",count:16}],format:"PKkk bbbb cccc cccc cccc cccc"},{country:"PS",total:29,bban:[{type:"c",count:4},{type:"n",count:9},{type:"n",count:12}],format:"PSkk bbbb xxxx xxxx xccc cccc cccc c"},{country:"PL",total:28,bban:[{type:"n",count:8},{type:"n",count:16}],format:"PLkk bbbs sssx cccc cccc cccc cccc"},{country:"PT",total:25,bban:[{type:"n",count:8},{type:"n",count:13}],format:"PTkk bbbb ssss cccc cccc cccx x"},{country:"QA",total:29,bban:[{type:"a",count:4},{type:"c",count:21}],format:"QAkk bbbb cccc cccc cccc cccc cccc c"},{country:"RO",total:24,bban:[{type:"a",count:4},{type:"c",count:16}],format:"ROkk bbbb cccc cccc cccc cccc"},{country:"SM",total:27,bban:[{type:"a",count:1},{type:"n",count:10},{type:"c",count:12}],format:"SMkk xaaa aabb bbbc cccc cccc ccc"},{country:"SA",total:24,bban:[{type:"n",count:2},{type:"c",count:18}],format:"SAkk bbcc cccc cccc cccc cccc"},{country:"RS",total:22,bban:[{type:"n",count:3},{type:"n",count:15}],format:"RSkk bbbc cccc cccc cccc xx"},{country:"SK",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"SKkk bbbb ssss sscc cccc cccc"},{country:"SI",total:19,bban:[{type:"n",count:5},{type:"n",count:10}],format:"SIkk bbss sccc cccc cxx"},{country:"ES",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"ESkk bbbb gggg xxcc cccc cccc"},{country:"SE",total:24,bban:[{type:"n",count:3},{type:"n",count:17}],format:"SEkk bbbc cccc cccc cccc cccc"},{country:"CH",total:21,bban:[{type:"n",count:5},{type:"c",count:12}],format:"CHkk bbbb bccc cccc cccc c"},{country:"TN",total:24,bban:[{type:"n",count:5},{type:"n",count:15}],format:"TNkk bbss sccc cccc cccc cccc"},{country:"TR",total:26,bban:[{type:"n",count:5},{type:"n",count:1},{type:"n",count:16}],format:"TRkk bbbb bxcc cccc cccc cccc cc"},{country:"AE",total:23,bban:[{type:"n",count:3},{type:"n",count:16}],format:"AEkk bbbc cccc cccc cccc ccc"},{country:"GB",total:22,bban:[{type:"a",count:4},{type:"n",count:6},{type:"n",count:8}],format:"GBkk bbbb ssss sscc cccc cc"},{country:"VG",total:24,bban:[{type:"c",count:4},{type:"n",count:16}],format:"VGkk bbbb cccc cccc cccc cccc"}],iso3166:["AC","AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BU","BV","BW","BY","BZ","CA","CC","CD","CE","CF","CG","CH","CI","CK","CL","CM","CN","CO","CP","CR","CS","CS","CU","CV","CW","CX","CY","CZ","DD","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","EU","FI","FJ","FK","FM","FO","FR","FX","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NT","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SU","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","YU","ZA","ZM","ZR","ZW"]}})(i={exports:{}},i),i.exports)),$=class{constructor(e){this.faker=e,this.ibanLib=Y.default,this.Helpers=this.faker.helpers
for(let a of Object.getOwnPropertyNames($.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}account(e){e=e||8
let a=""
for(let n=0;n<e;n++)a+="#"
return e=null,this.Helpers.replaceSymbolWithNumber(a)}accountName(){return[this.Helpers.randomize(this.faker.definitions.finance.account_type),"Account"].join(" ")}routingNumber(){let e=this.Helpers.replaceSymbolWithNumber("########"),a=0
for(let n=0;n<e.length;n+=3)a+=3*Number(e[n]),a+=7*Number(e[n+1]),a+=Number(e[n+2])||0
return`${e}${10*Math.ceil(a/10)-a}`}mask(e,a,n){e=0==e||!e||typeof e>"u"?4:e,a=null==a||a,n=null==n||n
let i=""
for(let r=0;r<e;r++)i+="#"
return i=n?["...",i].join(""):i,i=a?["(",i,")"].join(""):i,i=this.Helpers.replaceSymbolWithNumber(i),i}amount(){let e,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",t=arguments.length>4?arguments[4]:void 0,o=this.faker.datatype.number({max:n,min:a,precision:Math.pow(10,-i)})
return e=t?o.toLocaleString(void 0,{minimumFractionDigits:i}):o.toFixed(i),r+e}transactionType(){return this.Helpers.randomize(this.faker.definitions.finance.transaction_type)}currencyCode(){return this.faker.random.objectElement(this.faker.definitions.finance.currency).code}currencyName(){return this.faker.random.objectElement(this.faker.definitions.finance.currency,"key")}currencySymbol(){let e
for(;!e;)e=this.faker.random.objectElement(this.faker.definitions.finance.currency).symbol
return e}bitcoinAddress(){let e=this.faker.datatype.number({min:25,max:34}),a=this.faker.random.arrayElement(["1","3"])
for(let n=0;n<e-1;n++)a+=this.faker.random.arrayElement("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ".split(""))
return a}litecoinAddress(){let e=this.faker.datatype.number({min:26,max:33}),a=this.faker.random.arrayElement(["L","M","3"])
for(let n=0;n<e-1;n++)a+=this.faker.random.arrayElement("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ".split(""))
return a}creditCardNumber(){let e,a,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",i=this.faker.definitions.finance.credit_card
return n in i?(a=i[n],e="string"==typeof a?a:this.faker.random.arrayElement(a)):n.match(/#/)?e=n:"string"==typeof i?e=i:"object"==typeof i&&(a=this.faker.random.objectElement(i,"value"),e="string"==typeof a?a:this.faker.random.arrayElement(a)),e=e.replace(/\//g,""),this.Helpers.replaceCreditCardSymbols(e)}creditCardCVV(){let e=""
for(let a=0;a<3;a++)e+=this.faker.datatype.number({max:9}).toString()
return e}ethereumAddress(){return this.faker.datatype.hexaDecimal(40).toLowerCase()}iban(){let e,a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=arguments.length>1?arguments[1]:void 0
if(n){let a=e=>e.country===n
e=this.ibanLib.formats.find(a)}else e=this.faker.random.arrayElement(this.ibanLib.formats)
if(!e)throw new Error("Country code "+n+" not supported.")
let i="",r=0
for(let s=0;s<e.bban.length;s++){let a=e.bban[s],n=a.count
for(r+=a.count;n>0;)"a"==a.type?i+=this.faker.random.arrayElement(this.ibanLib.alpha):"c"==a.type?this.faker.datatype.number(100)<80?i+=this.faker.datatype.number(9):i+=this.faker.random.arrayElement(this.ibanLib.alpha):n>=3&&this.faker.datatype.number(100)<30?this.faker.datatype.boolean()?(i+=this.faker.random.arrayElement(this.ibanLib.pattern100),n-=2):(i+=this.faker.random.arrayElement(this.ibanLib.pattern10),n--):i+=this.faker.datatype.number(9),n--
i=i.substring(0,r)}let t=98-this.ibanLib.mod97(this.ibanLib.toDigitString(`${i}${e.country}00`))
t<10&&(t=`0${t}`)
let o=`${e.country}${t}${i}`
return a?o.match(/.{1,4}/g).join(" "):o}bic(){let e=["A","E","I","O","U"],a=this.faker.datatype.number(100)
return this.Helpers.replaceSymbols("???")+this.faker.random.arrayElement(e)+this.faker.random.arrayElement(this.ibanLib.iso3166)+this.Helpers.replaceSymbols("?")+"1"+(a<10?this.Helpers.replaceSymbols("?"+this.faker.random.arrayElement(e)+"?"):a<40?this.Helpers.replaceSymbols("###"):"")}transactionDescription(){let e=this.Helpers.createTransaction(),a=e.account,n=e.amount
return e.type+" transaction at "+e.business+" using card ending with ***"+this.faker.finance.mask()+" for "+this.faker.finance.currencyCode()+" "+n+" in account ***"+a}}})),hx=c((()=>{X=class{constructor(e){this.faker=e,this.hexChars=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"]
for(let a of Object.getOwnPropertyNames(X.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}branch(){return this.faker.hacker.noun().replace(" ","-")+"-"+this.faker.hacker.verb().replace(" ","-")}commitEntry(){let e="commit {{git.commitSha}}\r\n"
return((arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).merge||0===this.faker.datatype.number({min:0,max:4}))&&(e+="Merge: {{git.shortSha}} {{git.shortSha}}\r\n"),e+="Author: {{name.firstName}} {{name.lastName}} <{{internet.email}}>\r\n",e+="Date: "+this.faker.date.recent().toString()+"\r\n",e+="\r\n    {{git.commitMessage}}\r\n",this.faker.fake(e)}commitMessage(){return this.faker.fake("{{hacker.verb}} {{hacker.adjective}} {{hacker.noun}}")}commitSha(){let e=""
for(let a=0;a<40;a++)e+=this.faker.random.arrayElement(this.hexChars)
return e}shortSha(){let e=""
for(let a=0;a<7;a++)e+=this.faker.random.arrayElement(this.hexChars)
return e}}})),px=c((()=>{ee=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(ee.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}abbreviation(){return this.faker.random.arrayElement(this.faker.definitions.hacker.abbreviation)}adjective(){return this.faker.random.arrayElement(this.faker.definitions.hacker.adjective)}noun(){return this.faker.random.arrayElement(this.faker.definitions.hacker.noun)}verb(){return this.faker.random.arrayElement(this.faker.definitions.hacker.verb)}ingverb(){return this.faker.random.arrayElement(this.faker.definitions.hacker.ingverb)}phrase(){let e={abbreviation:this.abbreviation,adjective:this.adjective,ingverb:this.ingverb,noun:this.noun,verb:this.verb},a=this.faker.random.arrayElement(this.faker.definitions.hacker.phrase)
return this.faker.helpers.mustache(a,e)}}})),mx=c((()=>{ae=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(ae.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}randomize(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["a","b","c"]
return this.faker.random.arrayElement(e)}slugify(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"").replace(/ /g,"-").replace(/[^\一-龠\ぁ-ゔ\ァ-ヴー\w\.\-]+/g,"")}replaceSymbolWithNumber(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"#",n=""
for(let i=0;i<e.length;i++)e.charAt(i)==a?n+=this.faker.datatype.number(9):"!"==e.charAt(i)?n+=this.faker.datatype.number({min:2,max:9}):n+=e.charAt(i)
return n}replaceSymbols(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",a=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],n=""
for(let i=0;i<e.length;i++)"#"==e.charAt(i)?n+=this.faker.datatype.number(9):"?"==e.charAt(i)?n+=this.faker.random.arrayElement(a):"*"==e.charAt(i)?n+=this.faker.datatype.boolean()?this.faker.random.arrayElement(a):this.faker.datatype.number(9):n+=e.charAt(i)
return n}replaceCreditCardSymbols(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"6453-####-####-####-###L",a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"#"
e=this.faker.helpers.regexpStyleStringParse(e),e=this.faker.helpers.replaceSymbolWithNumber(e,a)
let n=((i=e.replace(/\D/g,"").split("").map((e=>parseInt(e)))).reverse(),(i=i.map(((e,a)=>(a%2==0&&(e*=2)>9&&(e-=9),e)))).reduce(((e,a)=>e+a))%10)
var i
return e.replace("L",n)}repeatString(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=""
for(let i=0;i<a;i++)n+=e.toString()
return n}regexpStyleStringParse(){let e,a,n,i,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=/(.)\{(\d+)\,(\d+)\}/,o=/(.)\{(\d+)\}/,s=/\[(\d+)\-(\d+)\]/,l=r.match(t)
for(;null!==l;)e=parseInt(l[2]),a=parseInt(l[3]),e>a&&(n=a,a=e,e=n),i=this.faker.datatype.number({min:e,max:a}),r=r.slice(0,l.index)+this.faker.helpers.repeatString(l[1],i)+r.slice(l.index+l[0].length),l=r.match(t)
for(l=r.match(o);null!==l;)i=parseInt(l[2]),r=r.slice(0,l.index)+this.faker.helpers.repeatString(l[1],i)+r.slice(l.index+l[0].length),l=r.match(o)
for(l=r.match(s);null!==l;)e=parseInt(l[1]),a=parseInt(l[2]),e>a&&(n=a,a=e,e=n),r=r.slice(0,l.index)+this.faker.datatype.number({min:e,max:a}).toString()+r.slice(l.index+l[0].length),l=r.match(s)
return r}shuffle(e){if(typeof e>"u"||0===e.length)return e||[]
for(let a,n,i=(e=e||["a","b","c"]).length-1;i>0;--i)n=this.faker.datatype.number(i),a=e[i],e[i]=e[n],e[n]=a
return e}uniqueArray(e,a){if(Array.isArray(e)){let n=new Set(e),i=Array.from(n)
return this.faker.helpers.shuffle(i).splice(0,a)}let n=new Set
try{if("function"==typeof e)for(;n.size<a;)n.add(e())}finally{return Array.from(n)}}mustache(e,a){if(typeof e>"u")return""
for(let n in a){let i=new RegExp("{{"+n+"}}","g")
e=e.replace(i,a[n])}return e}createCard(){return{name:this.faker.name.findName(),username:this.faker.internet.userName(),email:this.faker.internet.email(),address:{streetA:this.faker.address.streetName(),streetB:this.faker.address.streetAddress(),streetC:this.faker.address.streetAddress(!0),streetD:this.faker.address.secondaryAddress(),city:this.faker.address.city(),state:this.faker.address.state(),country:this.faker.address.country(),zipcode:this.faker.address.zipCode(),geo:{lat:this.faker.address.latitude(),lng:this.faker.address.longitude()}},phone:this.faker.phone.phoneNumber(),website:this.faker.internet.domainName(),company:{name:this.faker.company.companyName(),catchPhrase:this.faker.company.catchPhrase(),bs:this.faker.company.bs()},posts:[{words:this.faker.lorem.words(),sentence:this.faker.lorem.sentence(),sentences:this.faker.lorem.sentences(),paragraph:this.faker.lorem.paragraph()},{words:this.faker.lorem.words(),sentence:this.faker.lorem.sentence(),sentences:this.faker.lorem.sentences(),paragraph:this.faker.lorem.paragraph()},{words:this.faker.lorem.words(),sentence:this.faker.lorem.sentence(),sentences:this.faker.lorem.sentences(),paragraph:this.faker.lorem.paragraph()}],accountHistory:[this.faker.helpers.createTransaction(),this.faker.helpers.createTransaction(),this.faker.helpers.createTransaction()]}}contextualCard(){let e=this.faker.name.firstName(),a=this.faker.internet.userName(e)
return{name:e,username:a,avatar:this.faker.internet.avatar(),email:this.faker.internet.email(a),dob:this.faker.date.past(50,new Date("Sat Sep 20 1992 21:35:02 GMT+0200 (CEST)")),phone:this.faker.phone.phoneNumber(),address:{street:this.faker.address.streetName(),suite:this.faker.address.secondaryAddress(),city:this.faker.address.city(),zipcode:this.faker.address.zipCode(),geo:{lat:this.faker.address.latitude(),lng:this.faker.address.longitude()}},website:this.faker.internet.domainName(),company:{name:this.faker.company.companyName(),catchPhrase:this.faker.company.catchPhrase(),bs:this.faker.company.bs()}}}userCard(){return{name:this.faker.name.findName(),username:this.faker.internet.userName(),email:this.faker.internet.email(),address:{street:this.faker.address.streetName(),suite:this.faker.address.secondaryAddress(),city:this.faker.address.city(),zipcode:this.faker.address.zipCode(),geo:{lat:this.faker.address.latitude(),lng:this.faker.address.longitude()}},phone:this.faker.phone.phoneNumber(),website:this.faker.internet.domainName(),company:{name:this.faker.company.companyName(),catchPhrase:this.faker.company.catchPhrase(),bs:this.faker.company.bs()}}}createTransaction(){return{amount:this.faker.finance.amount(),date:new Date(2012,1,2),business:this.faker.company.companyName(),name:[this.faker.finance.accountName(),this.faker.finance.mask()].join(" "),type:this.randomize(this.faker.definitions.finance.transaction_type),account:this.faker.finance.account()}}}})),fx=c((()=>{ne=class{constructor(e){this.faker=e}image(e,a,n){return this[this.faker.random.arrayElement(["abstract","animals","business","cats","city","food","nightlife","fashion","people","nature","sports","technics","transport"])](e,a,n)}avatar(){return this.faker.internet.avatar()}imageUrl(e,a,n,i){let r=`https://lorempixel.com/${e=e||640}/${a=a||480}`
return typeof n<"u"&&(r+="/"+n),i&&(r+=`?${this.faker.datatype.number()}`),r}abstract(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"abstract",n)}animals(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"animals",n)}business(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"business",n)}cats(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"cats",n)}city(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"city",n)}food(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"food",n)}nightlife(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"nightlife",n)}fashion(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"fashion",n)}people(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"people",n)}nature(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"nature",n)}sports(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"sports",n)}technics(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"technics",n)}transport(e,a,n){return this.faker.image.lorempixel.imageUrl(e,a,"transport",n)}}})),vx=c((()=>{ie=class{constructor(e){this.faker=e,this.categories=["food","nature","people","technology","objects","buildings"]}image(e,a,n){return this.imageUrl(e,a,void 0,n)}avatar(){return this.faker.internet.avatar()}imageUrl(e,a,n,i){let r="https://source.unsplash.com"
return typeof n<"u"&&(r+="/category/"+n),r+=`/${e=e||640}x${a=a||480}`,typeof i<"u"&&new RegExp("^([A-Za-z0-9].+,[A-Za-z0-9]+)$|^([A-Za-z0-9]+)$").test(i)&&(r+="?"+i),r}food(e,a,n){return this.faker.image.unsplash.imageUrl(e,a,"food",n)}people(e,a,n){return this.faker.image.unsplash.imageUrl(e,a,"people",n)}nature(e,a,n){return this.faker.image.unsplash.imageUrl(e,a,"nature",n)}technology(e,a,n){return this.faker.image.unsplash.imageUrl(e,a,"technology",n)}objects(e,a,n){return this.faker.image.unsplash.imageUrl(e,a,"objects",n)}buildings(e,a,n){return this.faker.image.unsplash.imageUrl(e,a,"buildings",n)}}})),gx=c((()=>{re=class{constructor(e){this.faker=e}image(e,a,n,i){return this.imageUrl(e,a,n,i)}imageGrayscale(e,a,n){return this.imageUrl(e,a,n)}imageBlurred(e,a,n){return this.imageUrl(e,a,void 0,n)}imageRandomSeeded(e,a,n,i,r){return this.imageUrl(e,a,n,i,r)}avatar(){return this.faker.internet.avatar()}imageUrl(e,a,n,i,r){let t="https://picsum.photos"
return r&&(t+="/seed/"+r),t+=`/${e=e||640}/${a=a||480}`,n&&i?`${t}?grayscale&blur=${i}`:n?t+"?grayscale":i?`${t}?blur=${i}`:t}}})),kx=c((()=>{fx(),vx(),gx(),te=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(te.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))
this.lorempixel=new ne(this.faker),this.unsplash=new ie(this.faker),this.lorempicsum=new re(this.faker)}image(e,a,n){return this[this.faker.random.arrayElement(["abstract","animals","business","cats","city","food","nightlife","fashion","people","nature","sports","technics","transport"])](e,a,n)}avatar(){return this.faker.internet.avatar()}imageUrl(e,a,n,i,r){let t="http://"
typeof r<"u"&&!0===r&&(t="https://")
let o=`${t}placeimg.com/${e=e||640}/${a=a||480}`
return typeof n<"u"&&(o+="/"+n),i&&(o+=`?${this.faker.datatype.number()}`),o}abstract(e,a,n){return this.faker.image.imageUrl(e,a,"abstract",n)}animals(e,a,n){return this.faker.image.imageUrl(e,a,"animals",n)}business(e,a,n){return this.faker.image.imageUrl(e,a,"business",n)}cats(e,a,n){return this.faker.image.imageUrl(e,a,"cats",n)}city(e,a,n){return this.faker.image.imageUrl(e,a,"city",n)}food(e,a,n){return this.faker.image.imageUrl(e,a,"food",n)}nightlife(e,a,n){return this.faker.image.imageUrl(e,a,"nightlife",n)}fashion(e,a,n){return this.faker.image.imageUrl(e,a,"fashion",n)}people(e,a,n){return this.faker.image.imageUrl(e,a,"people",n)}nature(e,a,n){return this.faker.image.imageUrl(e,a,"nature",n)}sports(e,a,n){return this.faker.image.imageUrl(e,a,"sports",n)}technics(e,a,n){return this.faker.image.imageUrl(e,a,"technics",n)}transport(e,a,n){return this.faker.image.imageUrl(e,a,"transport",n)}dataUri(e,a){return"data:image/svg+xml;charset=UTF-8,"+encodeURIComponent(`<svg xmlns="http://www.w3.org/2000/svg" version="1.1" baseProfile="full" width="${e}" height="${a}"><rect width="100%" height="100%" fill="${arguments.length>2&&void 0!==arguments[2]?arguments[2]:"grey"}"/><text x="${e/2}" y="${a/2}" font-size="20" alignment-baseline="middle" text-anchor="middle" fill="white">${e}x${a}</text></svg>`)}}})),yx=c((()=>{})),bx=c((()=>{yx(),oe=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(oe.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))
this.avatar.schema={description:"Generates a URL for an avatar.",sampleResults:["https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/754.jpg"]},this.email.schema={description:"Generates a valid email address based on optional input criteria",sampleResults:["foo.bar@gmail.com"],properties:{firstName:{type:"string",required:!1,description:"The first name of the user"},lastName:{type:"string",required:!1,description:"The last name of the user"},provider:{type:"string",required:!1,description:"The domain of the user"}}},this.userName.schema={description:"Generates a username based on one of several patterns. The pattern is chosen randomly.",sampleResults:["Kirstin39","Kirstin.Smith","Kirstin.Smith39","KirstinSmith","KirstinSmith39"],properties:{firstName:{type:"string",required:!1,description:"The first name of the user"},lastName:{type:"string",required:!1,description:"The last name of the user"}}},this.protocol.schema={description:"Randomly generates http or https",sampleResults:["https","http"]},this.httpMethod.schema={description:"Randomly generates HTTP Methods (GET, POST, PUT, DELETE, PATCH)",sampleResults:["GET","POST","PUT","DELETE","PATCH"]},this.url.schema={description:"Generates a random URL. The URL could be secure or insecure.",sampleResults:["http://rashawn.name","https://rashawn.name"]},this.domainName.schema={description:"Generates a random domain name.",sampleResults:["marvin.org"]},this.domainSuffix.schema={description:"Generates a random domain suffix.",sampleResults:["net"]},this.domainWord.schema={description:"Generates a random domain word.",sampleResults:["alyce"]},this.ip.schema={description:"Generates a random IP.",sampleResults:["97.238.241.11"]},this.ipv6.schema={description:"Generates a random IPv6 address.",sampleResults:["2001:0db8:6276:b1a7:5213:22f1:25df:c8a0"]},this.port.schema={description:"Generates a random port number.",sampleResults:["4422"]},this.userAgent.schema={description:"Generates a random user agent.",sampleResults:["Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_7_5 rv:6.0; SL) AppleWebKit/532.0.1 (KHTML, like Gecko) Version/7.1.6 Safari/532.0.1"]},this.color.schema={description:"Generates a random hexadecimal color.",sampleResults:["#06267f"],properties:{baseRed255:{type:"number",required:!1,description:"The red value. Valid values are 0 - 255."},baseGreen255:{type:"number",required:!1,description:"The green value. Valid values are 0 - 255."},baseBlue255:{type:"number",required:!1,description:"The blue value. Valid values are 0 - 255."}}},this.mac.schema={description:"Generates a random mac address.",sampleResults:["78:06:cc:ae:b3:81"]},this.password.schema={description:"Generates a random password.",sampleResults:["AM7zl6Mg","susejofe"],properties:{length:{type:"number",required:!1,description:"The number of characters in the password."},memorable:{type:"boolean",required:!1,description:"Whether a password should be easy to remember."},pattern:{type:"regex",required:!1,description:"A regex to match each character of the password against. This parameter will be negated if the memorable setting is turned on."},prefix:{type:"string",required:!1,description:"A value to prepend to the generated password. The prefix counts towards the length of the password."}}}}avatar(){return`https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/${this.faker.datatype.number(1249)}.jpg`}email(e,a,n){return n=n||this.faker.random.arrayElement(this.faker.definitions.internet.free_email),this.faker.helpers.slugify(this.faker.internet.userName(e,a))+"@"+n}exampleEmail(e,a){let n=this.faker.random.arrayElement(this.faker.definitions.internet.example_email)
return this.email(e,a,n)}userName(e,a){let n
switch(e=e||this.faker.name.firstName(),a=a||this.faker.name.lastName(),this.faker.datatype.number(2)){case 0:n=`${e}${this.faker.datatype.number(99)}`
break
case 1:n=e+this.faker.random.arrayElement([".","_"])+a
break
case 2:n=`${e}${this.faker.random.arrayElement([".","_"])}${a}${this.faker.datatype.number(99)}`}return n=n.toString().replace(/'/g,""),n=n.replace(/ /g,""),n}protocol(){return this.faker.random.arrayElement(["http","https"])}httpMethod(){return this.faker.random.arrayElement(["GET","POST","PUT","DELETE","PATCH"])}url(){return this.faker.internet.protocol()+"://"+this.faker.internet.domainName()}domainName(){return this.faker.internet.domainWord()+"."+this.faker.internet.domainSuffix()}domainSuffix(){return this.faker.random.arrayElement(this.faker.definitions.internet.domain_suffix)}domainWord(){return(this.faker.word.adjective()+"-"+this.faker.word.noun()).replace(/([\\~#&*{}/:<>?|\"'])/gi,"").replace(/\s/g,"-").replace(/-{2,}/g,"-").toLowerCase()}ip(){let e=()=>this.faker.datatype.number(255).toFixed(0),a=[]
for(let n=0;n<4;n++)a[n]=e()
return a.join(".")}ipv6(){let e=()=>{let e=""
for(let a=0;a<4;a++)e+=this.faker.random.arrayElement(["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"])
return e},a=[]
for(let n=0;n<8;n++)a[n]=e()
return a.join(":")}port(){return this.faker.datatype.number({min:0,max:65535})}userAgent(){return function(e){function a(n,i){if(n=n||0,"number"==typeof(i=i||100)&&"number"==typeof n)return e.datatype.number({min:n,max:i})
if(Array.isArray(n))return e.random.arrayElement(n)
if(n&&"object"==typeof n)return(e=>{let n,i=a(0,100)/100,r=0,t=0
for(let a in e)if(Object.prototype.hasOwnProperty.call(e,a)){if(t=e[a]+r,n=a,i>=r&&i<=t)break
r+=e[a]}return n})(n)
throw new TypeError(`Invalid arguments passed to rnd. (${i?`${n}, ${i}`:n})`)}function n(){return a(["AB","AF","AN","AR","AS","AZ","BE","BG","BN","BO","BR","BS","CA","CE","CO","CS","CU","CY","DA","DE","EL","EN","EO","ES","ET","EU","FA","FI","FJ","FO","FR","FY","GA","GD","GL","GV","HE","HI","HR","HT","HU","HY","ID","IS","IT","JA","JV","KA","KG","KO","KU","KW","KY","LA","LB","LI","LN","LT","LV","MG","MK","MN","MO","MS","MT","MY","NB","NE","NL","NN","NO","OC","PL","PT","RM","RO","RU","SC","SE","SK","SL","SO","SQ","SR","SV","SW","TK","TR","TY","UK","UR","UZ","VI","VO","YI","ZH"])}function i(e){return a({lin:["i686","x86_64"],mac:{Intel:.48,PPC:.01,"U; Intel":.48,"U; PPC":.01},win:["","WOW64","Win64; x64"]}[e])}let r=()=>`${a(5,6)}.${a(0,3)}`,t=e=>[10,a(5,10),a(0,9)].join(e||"."),o=()=>[a(13,39),0,a(800,899),0].join("."),s=()=>`2.9.${a(160,190)}`,l=()=>`${a(10,12)}.00`,u=()=>`${a(531,538)}.${a(0,2)}.${a(0,2)}`,c={firefox(e){let n=`${a(5,15)}${function(e){let n=""
for(let i=0;i<2;i++)n+=`.${a(0,9)}`
return n}()}`,o="Gecko/20100101 Firefox/"+n,s=i(e)
return"Mozilla/5.0 "+("win"===e?"(Windows NT "+r()+(s?`; ${s}`:""):"mac"===e?`(Macintosh; ${s} Mac OS X ${t()}`:`(X11; Linux ${s}`)+"; rv:"+n.slice(0,-2)+") "+o},iexplorer(){let e=a(7,11)
return e>=11?`Mozilla/5.0 (Windows NT 6.${a(1,3)}; Trident/7.0; ${a(["Touch; ",""])}rv:11.0) like Gecko`:`Mozilla/5.0 (compatible; MSIE ${e}.0; Windows NT ${r()}; Trident/${a(3,7)}.${a(0,1)}${1===a(0,1)?"; .NET CLR "+[a(1,4),a(0,9),a(1e4,99999),a(0,9)].join("."):""})`},opera(e){let o=" Presto/"+s()+" Version/"+l()+")",u="win"===e?`(Windows NT ${r()}; U; ${n()}${o}`:"lin"===e?`(X11; Linux ${i(e)}; U; ${n()}${o}`:`(Macintosh; Intel Mac OS X ${t()} U; ${n()} Presto/${s()} Version/${l()})`
return`Opera/${a(9,14)}.${a(0,99)} ${u}`},safari(e){let o=u(),s=`${a(4,7)}.${a(0,1)}.${a(0,10)}`
return"Mozilla/5.0 "+("mac"===e?`(Macintosh; ${i("mac")} Mac OS X ${t("_")} rv:${a(2,6)}.0; ${n()}) `:"(Windows; U; Windows NT "+r()+")")+"AppleWebKit/"+o+" (KHTML, like Gecko) Version/"+s+" Safari/"+o},chrome(e){let a=u()
return"Mozilla/5.0 "+("mac"===e?`(Macintosh; ${i("mac")} Mac OS X ${t("_")}) `:"win"===e?"(Windows; U; Windows NT "+r()+")":`(X11; Linux ${i(e)}`)+" AppleWebKit/"+a+" (KHTML, like Gecko) Chrome/"+o()+" Safari/"+a}},d=function(){let e=a({chrome:.45132810566,iexplorer:.27477061836,firefox:.19384170608,safari:.06186781118,opera:.01574236955})
return[e,a({chrome:{win:.89,mac:.09,lin:.02},firefox:{win:.83,mac:.16,lin:.01},opera:{win:.91,mac:.03,lin:.06},safari:{win:.04,mac:.96},iexplorer:["win"]}[e])]}()
return c[d[0]](d[1])}(this.faker)}color(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=Math.floor((this.faker.datatype.number(256)+e)/2),r=Math.floor((this.faker.datatype.number(256)+a)/2),t=Math.floor((this.faker.datatype.number(256)+n)/2),o=i.toString(16),s=r.toString(16),l=t.toString(16)
return"#"+(1===o.length?"0":"")+o+(1===s.length?"0":"")+s+(1===l.length?"0":"")+l}mac(e){let a,n="",i=":"
for(-1!==["-",""].indexOf(e)&&(i=e),a=0;a<12;a++)n+=this.faker.datatype.number(15).toString(16),a%2==1&&11!=a&&(n+=i)
return n}password(e,a,n,i){var r=this
typeof a>"u"&&(a=!1)
let t=/[aeiouAEIOU]$/,o=/[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/,s=function(){let e,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:/\w/,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:""
if(l.length>=a)return l
n&&(i=l.match(o)?t:o)
let u=r.faker.datatype.number(94)+33
return e=String.fromCharCode(u),n&&(e=e.toLowerCase()),e.match(i)?s(a,n,i,""+l+e):s(a,n,i,l)}
return s(e=e||15,a,n,i)}}})),Sx=c((()=>{se=["South Africa"]})),Ax=c((()=>{le=["#####","####"]})),Mx=c((()=>{Sx(),Ax(),ue={default_country:se,postcode:le}})),Tx=c((()=>{ce=["082 ### ####","084 ### ####","083 ### ####","065 ### ####","082#######","082 #######"]})),_x=c((()=>{Tx(),de={formats:ce}})),wx=c((()=>{he=["Pty Ltd","Ltd","CC"]})),jx=c((()=>{wx(),pe={suffix:he}})),Ex=c((()=>{me=["co.za","com","org.za","info","net.za"]})),Nx=c((()=>{Ex(),fe={domain_suffix:me}})),Bx=c((()=>{ve=["Susan","Monica","Linda","Elsa","Susan","Margaret","Lisa","Karen","Helen","Sandra","Sara","Kimberly","Angelique","Melissa","Brenda","Anna","Annelie","Katryn","Amanda","Stefanie","Marie","Janet","Rosemarie","Nicoleen","Paula","Robin","Rita","Edna","Carmen","Cindy","Edith","Ethel","Ellen","Elaine","Charlotte","Pauline","Juanita","Anita","Rhonda","Hazel","Debbie","Clara","Lucille","Eleanor","Alicia","Michele","Geraldine","Erika","Bernice","Audrey","Yvonne","Annette","Renette","Ida","Melanie","Jolanda","Vanessa","Alma","Sue-Marie","Elsa","Carla","Rosemary","Wilma","Kristin","Natalie","Charlene","Melinda","Maureen","Tanya","Marlene","Heidi","Lydia","Vickie","Nina","Leona","Jenny","Sonia","Kristina","Erika","Katrina","Belinda","Natasha","Cecile","Angie","Lynda","Amelia","Monique","Kayla","Yvette","Olivia","Antoinette","Bridgette","Karla","Leticia","Krista","Robyn","Rosalie","Bernadette","Krystal","Nadine","Estelle","Lynette","Eloise","Jana","Kerry","Jenna","Tasha","Sonja","Elsa","Elisa","Kristie"]})),Px=c((()=>{ge=["Susan","Monica","Linda","Elsa","Susan","Margaret","Lisa","Karen","Helen","Sandra","Sara","Kimberly","Angelique","Melissa","Brenda","Anna","Annelie","Katryn","Amanda","Stefanie","Marie","Janet","Rosemarie","Nicoleen","Paula","Robin","Rita","Edna","Carmen","Cindy","Edith","Ethel","Ellen","Elaine","Charlotte","Pauline","Juanita","Anita","Rhonda","Hazel","Debbie","Clara","Lucille","Eleanor","Alicia","Michele","Geraldine","Erika","Bernice","Audrey","Yvonne","Annette","Renette","Ida","Melanie","Jolanda","Vanessa","Alma","Sue-Marie","Elsa","Carla","Rosemarie","Wilma","Kristin","Natalie","Charlene","Melinda","Maureen","Tanya","Marlene","Heidi","Lydia","Vickie","Nina","Leona","Jenny","Sonia","Kristina","Erika","Katrina","Belinda","Natasha","Cecile","Angie","Lynda","Amelia","Monique","Kayla","Yvette","Olivia","Antoinette","Bridgette","Karla","Leticia","Krista","Robyn","Rosalie","Bernadette","Krystal","Nadine","Estelle","Lynette","Eloise","Jana","Kerry","Jenna","Tasha","Sonja","Elsa","Elisa","Kristie","Johan","Robert","Michael","William","Willem","David","Richard","Thomas","Charl","Christopher","Daniel","Dante","Paul","Mark","George","Kenneth","Steven","Edward","Ronald","Anthony","Albert","Kevin","Jaco","Jacobus","Mathuys","Frankie","Stephen","Andre","Raymond","Joshua","Dennis","Pieter","Henrie","Rigard","Riaan","Joe","Johannes","Hannes","Gerald","Gerhard","Willie","Roy","Adam","Harry","Wayne","Billy","Steve","Louis","Eugene","Russell","Bobbie","Victor","Martin","Ernest","Phillip","Craig","Alan","Shawn","Chris","Earl","Jimmy","Brian","Mike","Leonard","Dale","Allen","Vincent","Francois","Eddie","Alexander","Bernard","Markus","Micheal","Theo","Oscar","Derek","Wesley","Derrick","Herman","Rick","Ruben","Cecil","Andre","Roland","Harvey","Adriaan","Karl","Erik","Neil","Ian","Iwan","Julian","Nick","Shaun","Cameron","Wilbur","Rudolph","Rudy","Bennie","Lukas","Simon","Rufus","Hugo","Conrad","Tommie","Jan","Jacques","Morne","Vernon","Duanne","Theunis","Theuns","Wessel","Stephaans"]})),Lx=c((()=>{ke=["van de Merwe","Schoeman","Barnard","de Kock","Meintjies","le Roux","Koen","Morkel","Viljoen","Smit","Nel","Grobelaar","Oppenheimer","Castelyn","du Preez","Cronnje","Donald","Pringle","Snell","Burger","van Heerden","van de Heefer","Wessels","Eksteen","Kirsten","de Villiers","Olivier","Steyn","Kallis","Ackerman","Dippenaar","Strydon","Boje","Pretorius","Langeveldt","Botha","Duminy","Fuller","Philander","Daniels","Fichardt","van Zyl","de Bruyn","van der Bijl","Dyer","van Buuren","Boyes","Versfeld","Bisset","Castens","Louw","Powell","Snedden","van Renen","Myburg","Bredenkamp","Mellett","Hertzog","Theunissen","de Waal","Cloete","Krige","Melker","Loubser","Stegmann","Joubert","Luyt","Roos","Lombard","van der Hoff","Immelman","Els","Delaney","Strauss","Meyer","Pienaar","du Plessis","van Rooyen","Kruger","Mostert","Scholtz","Aucamp","Albertyn","Bosman","Bester","Truter","Prinsloo","van Niekerk","Zimmerman","Venter","van den Berg","de Wet","Marais","van Jaarsveld","Jordaan","Malan","Viviers","Myburgh","Hoffman","Bekker","Rossouw","Rens","Lochner","Hanekom","Schmidt","Bekker","Wentzel","van Zyl","Bezuidenhout","Cilliers","Truter","Naude","de Vos","Goosen","Durand","Potgieter","van Deventer","de Klerk","Spies","Snyman","Oosthuizen","Bosch","Vogel","Fourie","van Staden","Wagenaar","Wolmerans","Veldsman","Tromp","Serfontein","Claasen","Heunis","Visagie","Ferreira","Erasmus","Knoetze","Jansen van Rensburg","Styger","Roberts","Richter","Lotter","Swart","Badenhorst","Laubscher","Hattingh","Visser","Brink","Theron","Paulse","Basson","van der Westhuyzen","Gerber","Human","Uys","Hougaard","Steenkamp","Pieterse","Brits","Jantjies","Etzebeth","de Jager","Boshoff","Kriel","Vosloo","Carstens"]})),Dx=c((()=>{ye=["Johan","Robert","Michael","William","Willem","David","Richard","Thomas","Charl","Christopher","Daniel","Dante","Paul","Mark","George","Kenneth","Steven","Edward","Ronald","Anthony","Albert","Kevin","Jaco","Jacobus","Mathuys","Frankie","Stephen","Andre","Raymond","Joshua","Dennis","Pieter","Henrie","Rigard","Riaan","Joe","Johannes","Hannes","Gerald","Gerhard","Willie","Roy","Adam","Harry","Wayne","Billy","Steve","Louis","Eugene","Russell","Bobbie","Victor","Martin","Ernest","Phillip","Craig","Alan","Shawn","Chris","Earl","Jimmy","Brian","Mike","Leonard","Dale","Allen","Vincent","Francois","Eddie","Alexander","Bernard","Markus","Micheal","Theo","Oscar","Derek","Wesley","Derrick","Herman","Rick","Ruben","Cecil","Andre","Roland","Harvey","Adriaan","Karl","Erik","Neil","Ian","Iwan","Julian","Nick","Shaun","Cameron","Wilbur","Rudolph","Rudy","Bennie","Lukas","Simon","Rufus","Hugo","Conrad","Tommie","Jan","Jacques","Morne","Vernon","Duanne","Theunis","Theuns","Wessel","Stephaans"]})),xx=c((()=>{Bx(),Px(),Lx(),Dx(),be={female_first_name:ve,first_name:ge,last_name:ke,male_first_name:ye}})),Cx=c((()=>{Se=["01# ### #####","02# ### #####","03# ### #####","04# ### #####","05# ### #####","0800 ### ###","0860 ### ###","01#########","01# ########"]})),Kx=c((()=>{Cx(),Ae={formats:Se}})),Rx=c((()=>{Mx(),_x(),jx(),Nx(),xx(),Kx(),Me={title:"Afrikaans",address:ue,cell_phone:de,company:pe,internet:fe,name:be,phone_number:Ae}})),zx=c((()=>{Te=["#####","####","###"]})),Ox=c((()=>{_e=["#{city_name}"]})),Ix=c((()=>{we=["مكة","المدينة","القاهرة","جدة","تونس","طرابلس","بيروت","الإسكندرية","بنغازي","صفاقس","مراكش","الدار البيضاء","غرناطة","فاس","وهران","الجزائر","الخرطوم","مقديشو","القدس","غزة","جنين","نابلس","دمشق","بغداد","البصرة","صلاح الدين","الكوفة","عمان","صنعاء","حضرموت","المنامة","صيدا","بنزرت","سوسة","نابل","الحمامات","جربة","حلب","الرياض","الدّمام","أبها","جازان","القطيف","الدرعية","عُنيزة","نجد","رابغ","دبي","العين","رأس الخيمة","أبو ظبي","عجمان","الفجيرة","الرويس","مصفح","دوز","السلع","الرحبة","الجهراء","الكويت","الفرْوانية","حَوَلِّـي","الأحمدي","الدوحة","الريان","دخان","الخور","أبو الظلوف","العريش","الغنيم","الغرية","الموصل","أربيل","نينوى","الأنبار","الحلة","سامراء","ذي قار","بابل","واسط","القادسية","العقبة","الكرك","إربد","عنجرة","المفرق","الفحيص","أريحا","يافا","عكا","رام الله","جنين","بيت لحم","الرملة","بيسان","صفد","قلقيلية","طولكرم","بيت حانون","صور","بعلبك","مرجعيون","عنجر","الخيام","الشرقية","حمص","اللاذقية","تدمر","حماة","طرسوس","بصرى","معرة النعمان","دير الزور","داريا","دوما","التل","إدلب","عدن","مأرب","إب","عمران","الشحر","البيضاء","بيحان","يريم","تريم","معبر","الضالع","بورسعيد","أسيوط","الأقصر","أسوان","العريش","المنيا","سوهاج","دمياط","قنا","سبك الأحد","نواكشوط","شمقيط","وادان","دورا"]})),Vx=c((()=>{je=["أفغانستان","ألبانيا","الجزائر","أمريكا ساماو","أندورا","أنجولا","أنجويلا","أنتاركتيكا","أنتيغوا وباربودا","الأرجنتين","أرمينيا","أروبا","أرستراليا","أستريا","أذرابيجان","بهماس","البحرين","بنغلادش","بربادوس","بلاروسيا","بلجيكا","بليز","بينين","برمودا","بوتان","بوليفيا","البوسنة والهرسك","بوتسوانا","جزيرة بوفيه","البرازيل","إقليم المحيط الهندي البريطاني","برونوي دار السلام","بلغاريا","بوركينا فاسو","بوروندي","كمبوديا","كاميرون","كندا","الرأس الأخضر","جزر كايمان","جمهورية إفريقيا الوسطى","التشاد","شيلي","الصين","جزيرة عيد الميلاد","جزر كوكوس","كولومبيا","جزر القمر","كونجو","جزر كوك","كوستا ريكا","ساحل العاج","كرواتيا","كوبا","قبرص","التشيك","دنمارك","جيبوتي","دومينيكا","جمهورية الدومينيكان","إكوادور","مصر","السلفادور","غينيا الاستوائية","إريتريا","إستونيا","أثيوبيا","جزر فارو","جزر فوكلاند","فيجي","فلندا","فرنست","غويانا الفرنسية","بولينزيا الفرنسية","أراض فرنسية جنوبية وأنتارتيكية","جابون","غمبيا","جورجيا","ألمانيا","غانا","جبل طارق","اليونان","الأرض الخضراء","غرينادا","غوادلوب","غوام","غواتيمالا","غيرنزي","غينيا","غينيا بيساو","غيانا","هايتي","جزيرة هيرد وجزر ماكدونالد","الفاتيكان","هندوراس","هونكونغ","هنقاريا","إسلاند","الهند","أندونيسيا","إيران","العراق","إيرلامدا","جزيرة مان","إيطاليا","جامايكا","اليابان","جيرزي","الأردن","كازاخستان","كنيا","كيريباتي","كوريا الشمالية","كوريا الجنوبية","الكويت","قيرغيزستان","لاوس","لتفيا","لبنان","ليسوتو","ليبيريا","ليبيا","ليختنشتاين","ليتيواتيا","ليكسمبورغ","ماكاو","مقدونيا","مدغشقر","ملاوي","ماليزيا","ملديف","مالي","مالطا","جزر مارشال","مارتينيك","موريتانيا","موريشيوس","مايوت","المكسيك","ولايات ميكرونيسيا المتحدة","مولدوفا","موناكو","منغوليا","مونتينيغرو","مونتسرات","المغرب","موزنبيق","ميانمار","ناميبيا","ناورو","نيبال","جزر الأنتيل الهولندية","هولاندا","كالودونيا الجديدة","زيلاندا الجديدة","نيكاراغوا","النيجر","نيجيريا","نييوي","جزيرة نورفولك","جزر ماريانا الشمالية","نورواي","عمان","باكستان","بالاو","فلسطين","بانما","بابوا غينيا الجديدة","باراغواي","بيرو","الفيليبين","جزر بيتكيرن","بولندا","البرتغال","بورتو ريكو","قطر","لا ريونيون","رومانيا","روسيا","روندا","سان بارتيلمي","سانت هيلانة","سانت كيتس ونيفيس","سانت لوسيا","سانت نرتان","سان بيير وميكلون","سانت فينسنت والغرينادين","ساماو","سان مارينو","ساو تومي وبرينسيب","السعودية","السنغال","صربيا","سيشال","سيراليون","سنغفورة","سلوفاكيا","سلوفينيا","جزر سليمان","الصومال","جنوب إفريقيا","جورجيا الجنوبية وجزر ساندويتش الجنوبية","إسبانيا","سيري لانكا","السودان","سيرينام","سفالبارد ويان ماين","سوازيلاند","السويد","سويسرا","سوريا","تايوات","طاجكستان","تنزانيا","تايلاند","تيمور الشرقية","توغو","توكيلاو","تونغوا","ترينيداد وتوباغو","تونس","تركيا","تركمنستان","جزر توركس وكايكوس","توفالو","أوغندا","أكرانيا","الإمارات العربية المتحدة","بريطانيا","أمريكا","جزر الولايات المتحدة الصغيرة النائية","أرغواي","أزباكستان","فانواتو","فينيزويلا","فيتنام","جزر العذراء البريطانية","جزر العذراء الأمريكية","واليس وفوتونا","اليمن","زمبيا","زمبابوي"]})),Gx=c((()=>{Ee=["المملكة العربية السعودية"]})),Hx=c((()=>{Ne=["#####","#####-####"]})),Fx=c((()=>{Be=["#####","#####-####"]})),Jx=c((()=>{Pe=["### عمارة","### طابق","### شقة","### بناية","### بيت"]})),Ux=c((()=>{Le=["القدس","تل الربيع","صفد","أريحا","بئر السبع","غزة","نابلس","الناصرة","بيت لحم","الخليل","يافا","حيفا","اللد","الرملة","عكا","سخنين","قلنسوة","طيرة","عرابة","رام الله","طولكرم","بئر السبع ","تونس","بن عروس","أريانة","باجة","بنزرت","قابس","قفصة","جندوبة","القيروان","القصرين","قبلي","الكاف","المهدية","منوبة","مدنين","المنستير","نابل","صفاقس","بوزيد","سليانة","سوسة","تطاوين","توزر","زغوان","أدرار","الشلف","الأغواط","أم البواقي","باتنة","بجاية","بسكرة","بشار","البليدة","البويرة","تمنراست","تبسة","تلمسان","تيارت","تيزي وزو","الجزائر","الجلفة","جيجل","سطيف","سعيدة","سكيكدة","بلعباس","عنابة","قالمة","قسنطينة","المدية","عمان","الزرقاء","إربد","العقبة","السلط","المفرق","جرش","معان","عجلون","حلب","دمشق","حمص","اللاذقية","حماة","طرطوس","دير الزور","السويداء","الحسكة","درعا","إدلب","بيروت","طرابلس","صيدا","صور","النبطية","زحلة","جونيه","حبوش","بعلبك","بغداد","البصرة","نينوى","أربيل","النجف","كركوك","المثنى","القادسية"," بابل","كربلاء"]})),Wx=c((()=>{De=["#{building_number} #{street_name}"]})),Zx=c((()=>{xe=["#{street_prefix} #{Name.first_name}","#{street_prefix} #{Name.last_name}"]})),qx=c((()=>{Ce=["درب، طريق","شارع","سبيل","جادة","رصيف","مَمَر","طريق مسدود","ساحة"]})),Qx=c((()=>{zx(),Ox(),Ix(),Vx(),Gx(),Hx(),Fx(),Jx(),Ux(),Wx(),Zx(),qx(),Ke={building_number:Te,city:_e,city_name:we,country:je,default_country:Ee,postcode:Ne,postcode_by_state:Be,secondary_address:Pe,state:Le,street_address:De,street_name:xe,street_prefix:Ce}})),Yx=c((()=>{Re=["###-###-####","(###) ###-####","1-###-###-####","###.###.####"]})),$x=c((()=>{Yx(),ze={formats:Re}})),Xx=c((()=>{Oe=["أحمر","أحمر غامق","أحمر فاتح","أخضر","أخضر غامق","أخضر فاتح","زيتوني","فيروزي","أزرق","أزرق غامق","أزرق فاتح","تركواز","أزرق سماوي","أصفر","ليموني","أرجواني","بنفسجي","أرجواني فاتح","أرجواني خفيف","أبيض","أسود","برتقالي","زهري","بني","كستنائي","أسمر","عاجي","نيلي","ذهبي","فضي","رمادي","رصاصي"]})),eC=c((()=>{Ie=["كتب","ألعاب","إلكترونيات","حواسيب","بيت","حديقة","أدوات","بقالة","صحة","جمال","ألعاب","أطفال","رضع","ملابس","أحذية","مجوهرات","أغراض رياضية","في الهواء الطلق","السيارات","صناعة"]})),aC=c((()=>{Ve={adjective:["صغير","مريح","ريفي","ذكي","رائع","لا يصدق","عملي","أملس","ممتاز","عام","يدويا","صنع يدوي","مرخص","مشتق","بدون علامة","طيب المذاق"],material:["فولاذ","خشبي","خرسانة","بلاستيك","قطن","صوان","مطاط","معدن","ناعم","طازج","مجمد"],product:["كرسي","سيارة","حاسوب","لوحة المفاتيح","فأر","دراجة هوائية","كرة","قفازات","بنطال","قميص","طاولة","أحذية","قبعة","مناشف","صابون","تونة","دجاج","سمك","جبن","لحم خنزير مقدد","بيتزا","سلطة","سجق","رقائق بطاطس"]}})),nC=c((()=>{Xx(),eC(),aC(),Ge={color:Oe,department:Ie,product_name:Ve}})),iC=c((()=>{He={wide:["كَانُون ٱلثَّانِي","شُبَاط","آذَار","نَيْسَان","أَيَّار","حَزِيرَان","تَمُّوز","آب","أَيْلُول","تِشْرِين ٱلْأَوَّل","تِشْرِين ٱلثَّانِي","كَانُون ٱلْأَوَّل"],wide_context:["كَانُون ٱلثَّانِي","شُبَاط","آذَار","نَيْسَان","أَيَّار","حَزِيرَان","تَمُّوز","آب","أَيْلُول","تِشْرِين ٱلْأَوَّل","تِشْرِين ٱلثَّانِي","كَانُون ٱلْأَوَّل"],abbr:["يناير","فبراير","مارس","إبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"],abbr_context:["يناير","فبراير","مارس","إبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"]}})),rC=c((()=>{Fe={wide:["الأحَد","الإثنين","الثلاثاء","الأربعاء","الخميس","الجمعة","السبت"],wide_context:["الأحَد","الإثنين","الثلاثاء","الأربعاء","الخميس","الجمعة","السبت"]}})),tC=c((()=>{iC(),rC(),Je={month:He,weekday:Fe}})),oC=c((()=>{Ue=["محمد","أحمد","آسر","أركان","أسامة","أسعد","أشرف","أكرم","أليف","أمان","أمجد","أمير","أمين","أنس","أنيس","أوس","أيمن","إسلام","إيهاب","إياد","إياس","القاسم","المقداد","باسل","باسم","بدر","بدران","بركات","برهان","بسام","بسيم","بشار","بلال","بلبل","بليغ","بندر","بهيج","تميم","توفيق","تيسير","ثابت","جابر","جاد","جاسر","جاسم","جبريل","جسور","جعفر","جلال","جليل","جمال","جمعة","جميل","جهاد","جوهر","حاتم","حاجب","حارث","حازم","حافظ","حامد","حبيب","حذيفة","حسام","حسان","حسني","حسون","حطاب","حفيظ","حكيم","حلمي","حليم","حمدان","حمدي","حمزة","حمودة","حميد","حيدرة","خالد","خباب","خلدون","خليل","خيري","داوود","دريد","ديسم","ذاكر","رؤوف","رائد","رائف","رابح","راتب","راسم","راشد","راغب","راكان","رامز","رامي","ربيع","رتيب","رجب","رزق","رسلان","رشاد","رشدي","رشيد","رضا","رضوان","رعد","رفيع","رفيق","ركان","رمزي","رمضان","رنيم","رياض","ريان","زاهر","زياد","زيدون","زين الدين","سالم","سامح","سامر","سامي","سراج","سرحان","سرمد","سريج","سعد","سعيد","سفيان","سلامة","سلمان","سليم","سماح","سمير","سهيل","سيف","شادي","شاكر","شريف","شعبان","شفيع","شفيق","شكري","شكيب","شمس الدين","شهاب","شوقي","صابر","صادق","صبحي","صبري","صخر","صداح","صدقي","صفوان","صقر","صلاح","صهيب","ضياء","طارق","طاهر","طلال","طيب","ظافر","عادل","عارف","عاشور","عاصم","عاصي","عاطف","عامر","عباس","عثمان","عجمي","عدلان","عدلي","عدنان","عدي","عرفات","عرفان","عز الدين","عزام","عزمي","عزيز","عطا","عطية","عفيف","علاء","علوي","علي","عماد","عمار","عمر","عمران","عياض","غازي","غانم","غسان","غفار","غيث","فؤاد","فائز","فاخر","فادي","فارس","فاروق","فاضل","فاكر","فتاح","فتحي","فخري","فراس","فرج","فرحات","فريد","فضل","فضيل","فكري","فهد","فهمي","فواز","فوزي","فيصل","قاسم","قدري","قيس","كاظم","كامل","كرم","كمال","لبيب","لطفي","ليث","مأمون","مؤمن","مؤنس","ماجد","مازن","مبارك","مبروك","مجاهد","مجد","مجدي","مجيد","محجوب","محرز","محسن","محفوظ","محمود","مختار","مخلص","مراد","مرتضى","مرزوق","مرسي","مرشد","مرعي","مروان","مستعين","مسعد","مسعود","مصطفى","مصعب","مصلح","مطيع","معاذ","معتز","معز","معين","مفتاح","مقداد","ممتاز","ممدوح","منتصر","منذر","منصف","منصور","منعم","منيب","منير","مهدي","مهند","مهيب","ناجح","ناجي","نادر","ناصح","ناصر","ناصف","ناظم","نافع","نبيل","نجيب","نديم","نزار","نزيه","نسيم","نصحي","نصر","نضال","نعمان","نعيم","نهاد","نور الدين","نوري","نوفل","هاشم","هاني","هشام","هيثم","هيكل","وائل","واصف","وجدي","وديع","وسام","وسيم","وصفي","وليد","ياسر","ياسين","يافع","يامن","يحيى"]})),sC=c((()=>{We=["يافع","هذيل","همدان","يافع","الأشراف","الكراي","الرقيق","بودوارة","خنفير","السقا","الطريقي","الشريف","المنيف","النفير","الشتيوي","الشيباني","الخليفي","المولدي","الكافي","العواني","بن عبد السلام","عاشور","النفطي","بن عثمان","بن عاشور","البشيري","السقاط","ادريس","بن حسين","القلشاني","الحجيج","بن عبد الكريم","فقوسة","بن حمودة","العنابي","القلال","الدنوني","النقاش","الغربي","نيفر","العطار","المحجوب","زقية","تومي","بن عبدالله","سعيد","النابلي","بن عمر","شنيق","عنون","الرصاع","النخلي","الصفار","الزوابي","العلاني","الع لويني","الحمامي","جاوحدو","شقرون","العلايمي","العواني","الصغير","جابالله","بنسلامة","جراد","بوديبة","الدرقاش","بوهاها","عطالله","سويس","عظومة","المدقي","الوحيشي","لخشين","زروق","النجار","غويلة","الطويل"]})),lC=c((()=>{Ze=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name}","#{last_name} #{first_name}"]})),uC=c((()=>{qe=["سيد","سيدة","آنسة","دكتور","بروفيسور"]})),cC=c((()=>{Qe={job:["مشرف","تنفيذي","مدير","مهندس","متخصص","رئيس مؤسسة","منسق","إداري","مخطط","محلل","مصمم","تقني","مبرمج","منتج","مستشار","مساعد","وكيل","متدرب"]}})),dC=c((()=>{oC(),sC(),lC(),uC(),cC(),Ye={first_name:Ue,last_name:We,name:Ze,prefix:qe,title:Qe}})),hC=c((()=>{$e=["###-###-####","(###) ###-####","1-###-###-####","###.###.####","###-###-####","(###) ###-####","1-###-###-####","###.###.####","###-###-#### x###","(###) ###-#### x###","1-###-###-#### x###","###.###.#### x###","###-###-#### x####","(###) ###-#### x####","1-###-###-#### x####","###.###.#### x####","###-###-#### x#####","(###) ###-#### x#####","1-###-###-#### x#####","###.###.#### x#####"]})),pC=c((()=>{hC(),Xe={formats:$e}})),mC=c((()=>{ea=["النمل","الخفافيش","تتحمل","النحل","الطيور","الجاموس","القطط","دجاجة","ماشية","الكلاب","الدلافين","البط","الفيلة","الأسماك","الثعالب","الضفادع","أوز","الماعز","خيل","الكنغر","الأسود","القرود","البوم","الثيران","طيور البطريق","اشخاص","الخنازير","الأرانب","خروف","النمور","الحيتان","الذئاب","حمار","الشؤم","الغربان","قطط سوداء","الوهم","أشباح","المتآمرين","التنين","الأقزام","الجان","السحرة","التعويذيون","أبناء","الأعداء","العمالقة","التماثيل","العفاريت","لحم الوز","العنقاء","استذئاب","عدو","الغيلان","أقوال","الأنبياء","السحرة","العناكب","معنويات","مصاصي دماء","السحرة","الثعالب","ذئاب ضارية","السحرة","عبدة","الاموات الاحياء","درويدس"]})),fC=c((()=>{aa=["#{Address.state} #{creature}"]})),vC=c((()=>{mC(),fC(),na={creature:ea,name:aa}})),gC=c((()=>{ia=["ديزل","كهربائي","بنزين","هجين"]})),kC=c((()=>{ra=["شيفروليه","كاديلاك","فورد","كرايسلر","دودج","جيب","تسلا","تويوتا","هوندا","نيسان","أودي","مرسيدس بنز","بي إم دبليو","فولكس واجن","بورش","جاكوار","استون مارتن","لاند روفر","بنتلي","ميني","رولزرويس","فيات","لامبورغيني","مازيراتي","فيراري","بوجاتي","كيا","هيونداي"]})),yC=c((()=>{ta=["فييستا","التركيز","الثور","موستانج","اكسبلورر","البعثة","نموذج T","رانتشيرو","فولت","كروز","ماليبو","إمبالا","كامارو","كورفيت","كولورادو","سيلفرادو","ش كامينو","إسكاليد","جبال الألب","شاحن","لو بارون","بي تي كروزر","تشالنجر","دورانجو","القافلة الكبرى","رانجلر","جراند شيروكي","رودستر","عارضات ازياء","النموذج 3","كامري","بريوس","لاند كروزر","اتفاق","المدنية","جزء","سنترا","ألتيما","خنفساء","جيتا","جولف","سبايدر","الكونتاش","مورسيلاغو","أفينتادور"]})),bC=c((()=>{oa=["كارغو فان","مكشوفة","كوبيه","طاقم الكابينة بيك آب","تمديد الكابينة بيك آب","هاتشباك","ميني فان","سيارة الركاب","سيارة رياضية","سيدان","عربة"]})),SC=c((()=>{gC(),kC(),yC(),bC(),sa={fuel:ia,manufacturer:ra,module:ta,type:oa}})),AC=c((()=>{Qx(),$x(),nC(),tC(),dC(),pC(),vC(),SC(),la={title:"Arabic",separator:" & ",address:Ke,cell_phone:ze,commerce:Ge,date:Je,name:Ye,phone_number:Xe,team:na,vehicle:sa}})),MC=c((()=>{ua=["###"]})),TC=c((()=>{ca=["#{Address.city_name}"]})),_C=c((()=>{da=["Ağcabədi","Ağdam","Ağdaş","Ağdərə","Ağstafa","Ağsu","Astara","Bakı","Balakən","Beyləqan","Bərdə","Biləsuvar","Cəbrayıl","Cəlilabad","Culfa","Daşkəsən","Dəliməmmədli","Füzuli","Gədəbəy","Gəncə","Goranboy","Göyçay","Göygöl","Göytəpə","Hacıqabul","Horadiz","Xaçmaz","Xankəndi","Xocalı","Xocavənd","Xırdalan","Xızı","Xudat","İmişli","İsmayıllı","Kəlbəcər","Kürdəmir","Qax","Qazax","Qəbələ","Qobustan","Qovlar","Quba","Qubadlı","Qusar","Laçın","Lerik","Lənkəran","Liman","Masallı","Mingəçevir","Naftalan","Naxçıvan (şəhər)","Neftçala","Oğuz","Ordubad","Saatlı","Sabirabad","Salyan","Samux","Siyəzən","Sumqayıt","Şabran","Şahbuz","Şamaxı","Şəki","Şəmkir","Şərur","Şirvan","Şuşa","Tərtər","Tovuz","Ucar","Yardımlı","Yevlax","Zaqatala","Zəngilan","Zərdab"]})),wC=c((()=>{ha=["Akrotiri və Dekeliya","Aland adaları","Albaniya","Almaniya","Amerika Samoası","Andorra","Angilya","Anqola","Antiqua və Barbuda","Argentina","Aruba","Avstraliya","Avstriya","Azərbaycan","Baham adaları","Banqladeş","Barbados","Belçika","Beliz","Belarus","Benin","Bermud adaları","BƏƏ","ABŞ","Boliviya","Bolqarıstan","Bosniya və Herseqovina","Botsvana","Böyük Britaniya","Braziliya","Bruney","Burkina-Faso","Burundi","Butan","Bəhreyn","Cersi","Cəbəli-Tariq","CAR","Cənubi Sudan","Cənubi Koreya","Cibuti","Çad","Çexiya","Monteneqro","Çili","ÇXR","Danimarka","Dominika","Dominikan Respublikası","Efiopiya","Ekvador","Ekvatorial Qvineya","Eritreya","Ermənistan","Estoniya","Əfqanıstan","Əlcəzair","Farer adaları","Fələstin Dövləti","Fici","Kot-d’İvuar","Filippin","Finlandiya","Folklend adaları","Fransa","Fransa Polineziyası","Gernsi","Gürcüstan","Haiti","Hindistan","Honduras","Honkonq","Xorvatiya","İndoneziya","İordaniya","İraq","İran","İrlandiya","İslandiya","İspaniya","İsrail","İsveç","İsveçrə","İtaliya","Kabo-Verde","Kamboca","Kamerun","Kanada","Kayman adaları","Keniya","Kipr","Kiribati","Kokos adaları","Kolumbiya","Komor adaları","Konqo Respublikası","KDR","Kosovo","Kosta-Rika","Kuba","Kuk adaları","Küveyt","Qabon","Qambiya","Qana","Qətər","Qayana","Qazaxıstan","Qərbi Sahara","Qırğızıstan","Qrenada","Qrenlandiya","Quam","Qvatemala","Qvineya","Qvineya-Bisau","Laos","Latviya","Lesoto","Liberiya","Litva","Livan","Liviya","Lixtenşteyn","Lüksemburq","Macarıstan","Madaqaskar","Makao","Makedoniya","Malavi","Malayziya","Maldiv adaları","Mali","Malta","Marşall adaları","Mavriki","Mavritaniya","Mayotta","Meksika","Men adası","Mərakeş","MAR","Mikroneziya","Milad adası","Misir","Myanma","Moldova","Monako","Monqolustan","Montserrat","Mozambik","Müqəddəs Yelena, Askenson və Tristan-da-Kunya adaları","Namibiya","Nauru","Nepal","Niderland","Niderland Antil adaları","Niger","Nigeriya","Nikaraqua","Niue","Norfolk adası","Norveç","Oman","Özbəkistan","Pakistan","Palau","Panama","Papua-Yeni Qvineya","Paraqvay","Peru","Pitkern adaları","Polşa","Portuqaliya","Prednestroviya","Puerto-Riko","Ruanda","Rumıniya","Rusiya","Salvador","Samoa","San-Marino","San-Tome və Prinsipi","Seneqal","Sen-Bartelemi","Sent-Kits və Nevis","Sent-Lüsiya","Sen-Marten","Sen-Pyer və Mikelon","Sent-Vinsent və Qrenadina","Serbiya","Seyşel adaları","Səudiyyə Ərəbistanı","Sinqapur","Slovakiya","Sloveniya","Solomon adaları","Somali","Somalilend","Sudan","Surinam","Suriya","Svazilend","Syerra-Leone","Şərqi Timor","Şimali Marian adaları","Şpisbergen və Yan-Mayen","Şri-Lanka","Tacikistan","Tanzaniya","Tailand","Çin Respublikası","Törks və Kaykos adaları","Tokelau","Tonqa","Toqo","Trinidad və Tobaqo","Tunis","Tuvalu","Türkiyə","Türkmənistan","Ukrayna","Uollis və Futuna","Uqanda","Uruqvay","Vanuatu","Vatikan","Venesuela","Amerika Virgin adaları","Britaniya Virgin adaları","Vyetnam","Yamayka","Yaponiya","Yeni Kaledoniya","Yeni Zelandiya","Yəmən","Yunanıstan","Zambiya","Zimbabve"]})),jC=c((()=>{pa=["Azərbaycan"]})),EC=c((()=>{ma=["AZ####"]})),NC=c((()=>{fa=["m. ###"]})),BC=c((()=>{va=[]})),PC=c((()=>{ga=["#{street_name}, #{building_number}"]})),LC=c((()=>{ka=["#{street_suffix} #{Address.street_title}","#{Address.street_title} #{street_suffix}"]})),DC=c((()=>{ya=["küç.","küçəsi","prospekti","pr.","sahəsi","sh."]})),xC=c((()=>{ba=["Abbas Fətullayev","Abbas Mirzə Şərifzadə","Abbas Səhhət","Abdulla Şaiq","Afiyəddin Cəlilov","Axundov","Ağa Nemətulla","Ağadadaş Qurbanov","Akademik Həsən Əliyev","Akademik Lətif İmanov","Alı Mustafayev","Almas İldırım","Asəf Zeynallı","Asif Əsədullayev","Aşıq Alı","Aşıq Ələsgər","Azadlıq prospekti","Bakıxanov","Balababa Məcidov","Balaəmi Dadaşov","Behbud Şaxtantinski","Bəkir Çobanzadə","Bəsti Bağırova","Bəşir Səfəroğlu","Böyük Qala","Cabir Əliyev","Camal Hacıəliyev","Cavadxan","Cavanşir","Ceyhun Səlimov","Ceyhunbəy Hacıbəyli","Cəbiyev","Cəfər Xəndan","Cəfər Cabbarlı","Cəlal Qurbanov","Cəlil Məmmədquluzadə","Çingiz Mustafayev","Çobanzadə","Dadaş Bünyadzadə","Dağlı Yunus","Dilarə Əliyeva","Elçin Əzimov","Eldar və Abdulla Əlibəyovlar","Elxan Həsənov","Elşən Mehdiyev","Elşən Süleymanov","Etibar Bəkirov","Əbdüləzəl Dəmirçizadə","Əbdülhəsən Anaplı","Əbdülkərim Əlizadə","Əhməd bəy Ağaoğlu","Əhməd Cavad","Əhməd Cəmil","Əhməd Mehbalıyev","Əhməd Rəcəbli","Əjdər Xanbabayev","Əkrəm Cəfərov","Ələsgər Qayıbov","Əliağa Vahid","Əli Bəy Hüseynzadə","Əlimərdan bəy Topçubaşov","Əliyar Əliyev","Əlövsət Abdulrəhimov","Əlövsət Quliyev","Əmir Bağırov","Əsəd Əhmədov","Əşrəf Yunusov","Əzim Əzimzadə","Əziz Əliyev","Heybət Heybətov","Həqiqət Rzayeva","Həmid Araslı","Hənifə Ələsgərova","Hərbçilər","Həsənoğu","Həsən Seyidbəyli","Hətəm Allahverdiyev","Həzi Aslanov","Hüsü Hacıyev","Hüseynqulu Sarabski","Fətəli xan Xoyski","Fəzail Bayramov","Fikrət Əmirov","Fuad İbrahimbəyov","Fuad Yusifov","General Əliağa Şıxlinski","Gülayə Qədirbəyova","Gənclik","Xaqani","Xan Şuşinski","Xanlar","Xudu Məmmədov","İbrahimpaşa Dadaşov","İdris Süleymanov","İlqar Abbasov","İlqar İsmayılov","İmran Qasımov","İnqilab İsmayılov","İsfəndiyar Zülalov","İslam Abışov","İslam Səfərli","İsmayıl bəy Qutqaşınlı","İsmayıl Mirzəgülov","İstiqlaliyyət","28 May","İsgəndərov","İvan Turgenev","İzmir","İzzət Həmidov","İzzət Orucova","Kamal Rəhimov","Kazım Kazımzadə","Kazımağa Kərimov","Kərəm İsmayılov","Kiçik Qala","Koroğlu Rəhimov","Qaçaq Nəbi","Qarabağ","Qədirbəyov","Qəzənfər Musabəyov","Qəzənfər Vəliyev","Leyla Məmmədbəyova","Mahmud İbrahimov","Malik Məmmədov","Mehdi Abbasov","Mehdi Mehdizadə","Məhəmməd Əmin Rəsulzadə","Məhəmməd Hadi","Məhəmməd Xiyabani","Məhəmməd ibn Hinduşah Naxçıvani","Məhsəti Gəncəvi","Məmmədyarov","Mərdanov qardaşları","Mətləb Ağayev","Məşədi Hilal","Məzahir Rüstəmov","Mikayıl Müşviq","Mingəçevir","Mirəli Qaşqay","Mirəli Seyidov","Mirzağa Əliyev","Mirzə İbrahimov","Mirzə Mənsur","Mirzə Mustafayev","Murtuza Muxtarov","Mustafa Topçubaşov","Müqtədir Aydınbəyov","Müslüm Maqomayev","Müzəffər Həsənov","Nabat Aşurbəyova","Naxçıvani","Naximov","Nazim İsmaylov","Neapol","Neftçi Qurban Abbasov","Neftçilər prospekti","Nəcəfbəy Vəzirov","Nəcəfqulu Rəfiyev","Nəriman Nərimanov","Nəsirəddin Tusi","Nigar Rəfibəyli","Niyazi","Nizami","Nizami Abdullayev","Nobel prospekti","Novruz","Novruzov qardaşları","Oqtay Vəliyev","Parlament","Puşkin","Rafiq Ağayev","Ramiz Qəmbərov","Rəşid Behbudov","Rəşid Məcidov","Ruhulla Axundov","Ruslan Allahverdiyev","Rüstəm Rüstəmov","Tahir Bağırov","Tarzan Hacı Məmmədov","Tbilisi prospekti","Təbriz (Bakı)","Təbriz Xəlilbəyli","Tofiq Məmmədov","Tolstoy","Sabit Orucov","Sabit Rəhman","Sahib Hümmətov","Salatın Əsgərova","Sarayevo","Seyid Əzim Şirvani","Seyid Şuşinski","Seyidov","Səməd bəy Mehmandarov","Səməd Vurğun","Səttar Bəhlulzadə","Sona xanım Vəlixanlı","Sübhi Salayev","Süleyman Əhmədov","Süleyman Rəhimov","Süleyman Rüstəm","Süleyman Sani Axundov","Süleyman Vəzirov","Şahin Səmədov","Şamil Əzizbəyov","Şamil Kamilov","Şeyx Şamil","Şəfayət Mehdiyev","Şəmsi Bədəlbəyli","Şirin Mirzəyev","Şıxəli Qurbanov","Şövkət Ələkbərova","Ülvi Bünyadzadə","Üzeyir Hacıbəyov","Vasif Əliyev","Vəli Məmmədov","Vladislav Plotnikov","Vüqar Quliyev","Vunq Tau","Yaqub Əliyev","Yaşar Abdullayev","Yaşar Əliyev","Yavər Əliyev","Yesenin","Yəhya Hüseynov","Yılmaz Axundzadə","Yüsif Eyvazov","Yusif Qasımov","Yusif Məmmədəliyev","Yusif Səfərov","Yusif Vəzir Çəmənzəminli","Zahid Əliyev","Zahid Xəlilov","Zaur Kərimov","Zavod","Zərgərpalan"]})),CC=c((()=>{MC(),TC(),_C(),wC(),jC(),EC(),NC(),BC(),PC(),LC(),DC(),xC(),Sa={building_number:ua,city:ca,city_name:da,country:ha,default_country:pa,postcode:ma,secondary_address:fa,state:va,street_address:ga,street_name:ka,street_suffix:ya,street_title:ba}})),KC=c((()=>{Aa=["ala","açıq bənövşəyi","ağ","mavi","boz","bənövşəyi","göy rəng","gümüşü","kardinal","narıncı","qara","qırmızı","qəhvəyi","tünd göy","tünd qırmızı","xlorofil","yaşıl","çəhrayı"]})),RC=c((()=>{Ma=["Kitablar","Filmlər","musiqi","oyunlar","Elektronika","Kompyuterlər","Ev","садинструмент","Səhiyyə","gözəllik","Oyuncaqlar","uşaq üçün","Geyim","Ayyaqqabı","bəzək","İdman","turizm","Avtomobil"]})),zC=c((()=>{Ta={adjective:["Balaca","Ergonomik","Kobud","İntellektual","Möhtəşəm","İnanılmaz","Fantastik","Əlverişli","Parlaq","Mükəmməl"],material:["Polad","Ağac","Beton","Plastik","Pambıq","Qranit","Rezin"],product:["Stul","Avtomobil","Kompyuter","Beret","Kulon","Stol","Sviter","Kəmər"]}})),OC=c((()=>{KC(),RC(),zC(),_a={color:Aa,department:Ma,product_name:Ta}})),IC=c((()=>{wa=["#{prefix} #{Name.female_first_name}","#{prefix} #{Name.male_first_name}","#{prefix} #{Name.male_last_name}","#{prefix} #{suffix}#{suffix}","#{prefix} #{suffix}#{suffix}#{suffix}","#{prefix} #{Address.city_name}#{suffix}","#{prefix} #{Address.city_name}#{suffix}#{suffix}","#{prefix} #{Address.city_name}#{suffix}#{suffix}#{suffix}"]})),VC=c((()=>{ja=["ASC","MMC","QSC"]})),GC=c((()=>{Ea=[]})),HC=c((()=>{IC(),VC(),GC(),Na={name:wa,prefix:ja,suffix:Ea}})),FC=c((()=>{Ba={wide:["yanvar","fevral","mart","aprel","may","iyun","iyul","avqust","sentyabr","oktyabr","noyabr","dekabr"],wide_context:["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"],abbr:["янв.","февр.","март","апр.","май","июнь","июль","авг.","сент.","окт.","нояб.","дек."],abbr_context:["янв.","февр.","марта","апр.","мая","июня","июля","авг.","сент.","окт.","нояб.","дек."]}})),JC=c((()=>{Pa={wide:["Bazar","Bazar ertəsi","Çərşənbə axşamı","Çərşənbə","Cümə axşamı","Cümə","Şənbə"],wide_context:["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],abbr:["Ba","BE","ÇA","Çə","CA","Cü","Şə"],abbr_context:["вс","пн","вт","ср","чт","пт","сб"]}})),UC=c((()=>{FC(),JC(),La={month:Ba,weekday:Pa}})),WC=c((()=>{Da=["com","az","com.az","info","net","org"]})),ZC=c((()=>{xa=["box.az","mail.az","gmail.com","yahoo.com","hotmail.com"]})),qC=c((()=>{WC(),ZC(),Ca={domain_suffix:Da,free_email:xa}})),QC=c((()=>{Ka=["Anna","Adeliya","Afaq","Afət","Afərim","Aidə","Aygün","Aynur","Alsu","Ayan","Aytən","Aygül","Aydan","Aylin","Bahar","Banu","Bəyaz","Billurə","Cansu","Ceyla","Damla","Dəniz","Diana","Dilarə","Ella","Elza","Elyanora","Ellada","Elvira","Elnarə","Esmira","Estella","Fatimə","Fəxriyyə","Fərəh","Fərqanə","Fidan","Firuzə","Gövhər","Günay","Gülay","Gülçin","Gülər","Gülsüm","Humay","Hüriyə","Hülya","Jalə","Jasmin","Kübra","Ləman","Lamiyə","Lalə","Liliya","Laura","Leyla","Maya","Mehriban","Mələk","Nuray","Nurgün","Nərgiz","Nigar","Ofelya","Pəri","Röya","Səbinə","Selcan","Tansu","Tuba","Ülviyyə","Ulduz","Ülkər"]})),YC=c((()=>{Ra=["Qasımova","Əfəndiyeva","Soltanova","Abdullayeva","Rəşidova","Ələkbərova","Əliyeva","Tahirova","Seyidova","Vəsiyeva"]})),$C=c((()=>{za=["Anar","Amid","Afəl","Abbas","Abdulla","Adil","Akif","Aqil","Bəhram","Nurlan","Rafiq","Tərlan","Zaur","Emin","Emil","Kamran","Elnur","Natiq","Rəşad","Rəşid","Tahir","Əhməd","Zahir","İlham","İlqar","Nahid","Nihad","Faiq","İxtiyar","Şəhriyar","Şaiq","Bəxtiyar","Bəhruz","Tunar","Nadir"]})),XC=c((()=>{Oa=["Əhmədov","Ələkbərov","Əliyev","Vəliyev","Soltanov","Quliyev","Məmmədov","Xəlilov","Nəzərov","Rəhimov"]})),eK=c((()=>{Ia=["#{male_first_name}","#{male_last_name} #{male_first_name}","#{male_first_name} #{male_last_name}","#{female_first_name}","#{female_first_name} #{female_last_name}","#{female_last_name} #{female_first_name}"]})),aK=c((()=>{Va=[]})),nK=c((()=>{Ga=[]})),iK=c((()=>{QC(),YC(),$C(),XC(),eK(),aK(),nK(),Ha={female_first_name:Ka,female_last_name:Ra,male_first_name:za,male_last_name:Oa,name:Ia,prefix:Va,suffix:Ga}})),rK=c((()=>{Fa=["(9##)###-##-##"]})),tK=c((()=>{rK(),Ja={formats:Fa}})),oK=c((()=>{CC(),OC(),HC(),UC(),qC(),iK(),tK(),Ua={title:"Azerbaijani",separator:" və ",address:Sa,commerce:_a,company:Na,date:La,internet:Ca,name:Ha,phone_number:Ja}})),sK=c((()=>{Wa=["#","##","###"]})),lK=c((()=>{Za=["#{city_name}"]})),uK=c((()=>{qa=["Abertamy","Adamov","Andělská Hora","Aš","Bakov nad Jizerou","Bavorov","Bechyně","Bečov nad Teplou","Bělá nad Radbuzou","Bělá pod Bezdězem","Benátky nad Jizerou","Benešov","Benešov nad Ploučnicí","Beroun","Bezdružice","Bílina","Bílovec","Blansko","Blatná","Blovice","Blšany","Bochov","Bohumín","Bohušovice nad Ohří","Bojkovice","Bor","Borohrádek","Borovany","Boskovice","Boží Dar","Brandýs nad Labem-Stará Boleslav","Brandýs nad Orlicí","Brno","Broumov","Brtnice","Brumov-Bylnice","Bruntál","Brušperk","Břeclav","Březnice","Březová","Březová nad Svitavou","Břidličná","Bučovice","Budišov nad Budišovkou","Budyně nad Ohří","Buštěhrad","Bystré","Bystřice","Bystřice nad Pernštejnem","Bystřice pod Hostýnem","Bzenec","Chabařovice","Cheb","Chlumec","Chlumec nad Cidlinou","Choceň","Chodov","Chomutov","Chotěboř","Chrast","Chrastava","Chropyně","Chrudim","Chřibská","Chvaletice","Chýnov","Chyše","Cvikov","Čáslav","Čelákovice","Černošice","Černošín","Černovice","Červená Řečice","Červený Kostelec","Česká Kamenice","Česká Lípa","Česká Skalice","Česká Třebová","České Budějovice","České Velenice","Český Brod","Český Dub","Český Krumlov","Český Těšín","Dačice","Dašice","Děčín","Desná","Deštná","Dobrovice","Dobruška","Dobřany","Dobřichovice","Dobříš","Doksy","Dolní Benešov","Dolní Bousov","Dolní Kounice","Dolní Poustevna","Domažlice","Dubá","Dubí","Dubňany","Duchcov","Dvůr Králové nad Labem","Františkovy Lázně","Frenštát pod Radhoštěm","Frýdek-Místek","Frýdlant","Frýdlant nad Ostravicí","Fryšták","Fulnek","Golčův Jeníkov","Habartov","Habry","Hanušovice","Harrachov","Hartmanice","Havířov","Havlíčkův Brod","Hejnice","Heřmanův Městec","Hlinsko","Hluboká nad Vltavou","Hlučín","Hluk","Hodkovice nad Mohelkou","Hodonín","Holešov","Holice","Holýšov","Hora Svaté Kateřiny","Horažďovice","Horní Benešov","Horní Blatná","Horní Bříza","Horní Cerekev","Horní Jelení","Horní Jiřetín","Horní Planá","Horní Slavkov","Horšovský Týn","Hořice","Hořovice","Hostinné","Hostivice","Hostomice","Hostouň","Hoštka","Hradec Králové","Hradec nad Moravicí","Hrádek","Hrádek nad Nisou","Hranice (okres Cheb)","Hranice (okres Přerov)","Hrob","Hrochův Týnec","Hronov","Hrotovice","Hroznětín","Hrušovany nad Jevišovkou","Hulín","Humpolec","Husinec","Hustopeče","Ivančice","Ivanovice na Hané","Jablonec nad Jizerou","Jablonec nad Nisou","Jablonné nad Orlicí","Jablonné v Podještědí","Jablunkov","Jáchymov","Janov","Janovice nad Úhlavou","Janské Lázně","Jaroměř","Jaroměřice nad Rokytnou","Javorník","Jemnice","Jesenice (okres Rakovník)","Jeseník","Jevíčko","Jevišovice","Jičín","Jihlava","Jilemnice","Jílové","Jílové u Prahy","Jindřichův Hradec","Jirkov","Jiříkov","Jistebnice","Kadaň","Kamenice nad Lipou","Kamenický Šenov","Kaplice","Kardašova Řečice","Karlovy Vary","Karolinka","Karviná","Kasejovice","Kašperské Hory","Kaznějov","Kdyně","Kelč","Kladno","Kladruby","Klášterec nad Ohří","Klatovy","Klecany","Klimkovice","Klobouky u Brna","Kojetín","Kolín","Konice","Kopidlno","Kopřivnice","Koryčany","Kosmonosy","Kostelec na Hané","Kostelec nad Černými lesy","Kostelec nad Labem","Kostelec nad Orlicí","Košťany","Kouřim","Kožlany","Králíky","Kralovice","Kralupy nad Vltavou","Králův Dvůr","Kraslice","Krásná Hora nad Vltavou","Krásná Lípa","Krásné Údolí","Krásno","Kravaře","Krnov","Kroměříž","Krupka","Kryry","Kunovice","Kunštát","Kuřim","Kutná Hora","Kyjov","Kynšperk nad Ohří","Lanškroun","Lanžhot","Lázně Bělohrad","Lázně Bohdaneč","Lázně Kynžvart","Ledeč nad Sázavou","Ledvice","Letohrad","Letovice","Libáň","Libčice nad Vltavou","Liběchov","Liberec","Libochovice","Libušín","Lipník nad Bečvou","Lišov","Litoměřice","Litomyšl","Litovel","Litvínov","Loket","Lom","Lomnice nad Lužnicí","Lomnice nad Popelkou","Loštice","Loučná pod Klínovcem","Louny","Lovosice","Luby","Lučany nad Nisou","Luhačovice","Luže","Lysá nad Labem","Manětín","Mariánské Lázně","Mašťov","Měčín","Mělník","Městec Králové","Město Albrechtice","Město Touškov","Meziboří","Meziměstí","Mikulášovice","Mikulov","Miletín","Milevsko","Milovice","Mimoň","Miroslav","Mirošov","Mirotice","Mirovice","Mladá Boleslav","Mladá Vožice","Mnichovice","Mnichovo Hradiště","Mníšek pod Brdy","Modřice","Mohelnice","Moravská Třebová","Moravské Budějovice","Moravský Beroun","Moravský Krumlov","Morkovice-Slížany","Most","Mšeno","Mýto","Náchod","Nalžovské Hory","Náměšť nad Oslavou","Napajedla","Nasavrky","Nechanice","Nejdek","Němčice nad Hanou","Nepomuk","Neratovice","Netolice","Neveklov","Nová Bystřice","Nová Paka","Nová Role","Nová Včelnice","Nové Hrady","Nové Město na Moravě","Nové Město nad Metují","Nové Město pod Smrkem","Nové Sedlo","Nové Strašecí","Nový Bor","Nový Bydžov","Nový Jičín","Nový Knín","Nymburk","Nýrsko","Nýřany","Odolena Voda","Odry","Olešnice","Olomouc","Oloví","Opava","Opočno","Orlová","Osečná","Osek","Oslavany","Ostrava","Ostrov","Otrokovice","Pacov","Pardubice","Paskov","Pec pod Sněžkou","Pečky","Pelhřimov","Petřvald","Pilníkov","Písek","Planá","Planá nad Lužnicí","Plánice","Plasy","Plesná","Plumlov","Plzeň","Poběžovice","Počátky","Podbořany","Poděbrady","Podivín","Pohořelice","Police nad Metují","Polička","Polná","Postoloprty","Potštát","Prachatice","Praha","Proseč","Prostějov","Protivín","Přebuz","Přelouč","Přerov","Přeštice","Příbor","Příbram","Přibyslav","Přimda","Pyšely","Rabí","Radnice","Rájec-Jestřebí","Rajhrad","Rakovník","Ralsko","Raspenava","Rejštejn","Rokycany","Rokytnice nad Jizerou","Rokytnice v Orlických horách","Ronov nad Doubravou","Rosice","Rotava","Roudnice nad Labem","Rousínov","Rovensko pod Troskami","Roztoky","Rožďalovice","Rožmberk nad Vltavou","Rožmitál pod Třemšínem","Rožnov pod Radhoštěm","Rtyně v Podkrkonoší","Rudná","Rudolfov","Rumburk","Rychnov nad Kněžnou","Rychnov u Jablonce nad Nisou","Rychvald","Rýmařov","Řevnice","Říčany","Sadská","Sázava","Seč","Sedlčany","Sedlec-Prčice","Sedlice","Semily","Sezemice","Sezimovo Ústí","Skalná","Skuteč","Slaný","Slatiňany","Slavičín","Slavkov u Brna","Slavonice","Slušovice","Smečno","Smiřice","Smržovka","Soběslav","Sobotka","Sokolov","Solnice","Spálené Poříčí","Staňkov","Staré Město (okres Šumperk)","Staré Město (okres Uherské Hradiště)","Stárkov","Starý Plzenec","Stochov","Stod","Strakonice","Stráž nad Nežárkou","Stráž pod Ralskem","Strážnice","Strážov","Strmilov","Stříbro","Studénka","Suchdol nad Lužnicí","Sušice","Světlá nad Sázavou","Svitavy","Svoboda nad Úpou","Svratka","Šenov","Šlapanice","Šluknov","Špindlerův Mlýn","Šternberk","Štětí","Štíty","Štramberk","Šumperk","Švihov","Tábor","Tachov","Tanvald","Telč","Teplá","Teplice","Teplice nad Metují","Terezín","Tišnov","Toužim","Tovačov","Trhové Sviny","Trhový Štěpánov","Trmice","Trutnov","Třebechovice pod Orebem","Třebenice","Třebíč","Třeboň","Třemošná","Třemošnice","Třešť","Třinec","Turnov","Týn nad Vltavou","Týnec nad Labem","Týnec nad Sázavou","Týniště nad Orlicí","Uherské Hradiště","Uherský Brod","Uherský Ostroh","Uhlířské Janovice","Újezd u Brna","Unhošť","Uničov","Úpice","Úsov","Ústí nad Labem","Ústí nad Orlicí","Úštěk","Úterý","Úvaly","Valašské Klobouky","Valašské Meziříčí","Valtice","Vamberk","Varnsdorf","Vejprty","Velešín","Velká Bíteš","Velká Bystřice","Velké Bílovice","Velké Hamry","Velké Meziříčí","Velké Opatovice","Velké Pavlovice","Velký Šenov","Veltrusy","Velvary","Verneřice","Veselí nad Lužnicí","Veselí nad Moravou","Vidnava","Vimperk","Vítkov","Vizovice","Vlachovo Březí","Vlašim","Vodňany","Volary","Volyně","Votice","Vracov","Vratimov","Vrbno pod Pradědem","Vrchlabí","Vroutek","Vsetín","Všeruby","Výsluní","Vysoké Mýto","Vysoké nad Jizerou","Vysoké Veselí","Vyškov","Vyšší Brod","Zábřeh","Zákupy","Zásmuky","Zbiroh","Zbýšov","Zdice","Zlaté Hory","Zlín","Zliv","Znojmo","Zruč nad Sázavou","Zubří","Žacléř","Žamberk","Žandov","Žatec","Ždánice","Žďár nad Sázavou","Ždírec nad Doubravou","Žebrák","Železná Ruda","Železnice","Železný Brod","Židlochovice","Žirovnice","Žlutice","Žulová"]})),cK=c((()=>{Qa=["Afghánistán","Albánie","Alžírsko","Andorra","Angola","Antigua a Barbuda","Argentina","Arménie","Austrálie","Ázerbájdžán","Bahamy","Bahrajn","Bangladéš","Barbados","Belgie","Belize","Benin","Bělorusko","Bhútán","Bolívie","Bosna a Hercegovina","Botswana","Brazílie","Brunej","Bulharsko","Burkina Faso","Burundi","Čad","Černá Hora","Česko","Čína","Dánsko","DR Kongo","Dominika","Dominik","Džibutsko","Egypt","Ekvádor","Eritrea","Estonsko","Etiopie","Fidži","Filipíny","Finsko","Francie","Gabon","Gambie","Gruzie","Německo","Ghana","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Chile","Chorvatsko","Indie","Indonésie","Irák","Írán","Irsko","Island","Itálie","Izrael","Jamajka","Japonsko","Jemen","Jihoaf","Jižní Korea","Jižní Súdán","Jordánsko","Kambodža","Kamerun","Kanada","Kapverdy","Katar","Kazachstán","Keňa","Kiribati","Kolumbie","Komory","Kongo","Kostarika","Kuba","Kuvajt","Kypr","Kyrgyzstán","Laos","Lesotho","Libanon","Libérie","Libye","Lichtenštejnsko","Litva","Lotyšsko","Lucembursko","Madagaskar","Maďarsko","Makedonie","Malajsie","Malawi","Maledivy","Mali","Malta","Maroko","Marshallovy ostrovy","Mauritánie","Mauricius","Mexiko","Mikronésie","Moldavsko","Monako","Mongolsko","Mosambik","Myanmar (Barma)","Namibie","Nauru","Nepál","Niger","Nigérie","Nikaragua","Nizozemsko","Norsko","Nový Zéland","Omán","Pákistán","Palau","Palestina","Panama","Papua-Nová Guinea","Paraguay","Peru","Pobřeží slonoviny","Polsko","Portugalsko","Rakousko","Rovníková Guinea","Rumunsko","Rusko","Rwanda","Řecko","Salvador","Samoa","San Marino","Saúdská Arábie","Senegal","Severní Korea","Seychely","Sierra Leone","Singapur","Slovensko","Slovinsko","Srbsko","Středo","Somálsko","Surinam","Súdán","Svatá Lucie","Svatý Kryštof a Nevis","Svatý Tomáš a Princův ostrov","Svatý Vincenc a Grenadiny","Svazijsko","Spojené arabské emiráty","Spojené království","Spojené státy americké","Sýrie","Šalamounovy ostrovy","Španělsko","Srí Lanka","Švédsko","Švýcarsko","Tádžikistán","Tanzanie","Thajsko","Togo","Tonga","Trinidad a Tobago","Tunisko","Turecko","Turkmenistán","Tuvalu","Uganda","Ukrajina","Uruguay","Uzbekistán","Vanuatu","Vatikán","Venezuela","Vietnam","Východní Timor","Zambie","Zimbabwe"]})),dK=c((()=>{Ya=["Česká republika"]})),hK=c((()=>{$a=["#####","### ##","###-##"]})),pK=c((()=>{Xa=["Apt. ###","Suite ###"]})),mK=c((()=>{en=[]})),fK=c((()=>{an=[]})),vK=c((()=>{nn=["17. Listopadu","17. Listopadu","28. Pluku","28. Října","28. Října","5. Května","5. Května","5. Máje","7. Května","8. Listopadu","9. Května","Achátová","Adamova","Adamovská","Adélčina","Africká","Akademická","Aksamitova","Akátová","Alabastrová","Albertov","Albrechtická","Albánská","Albíny Hochové","Aldašínská","Alej Českých Exulantů","Aleny Santarové","Aloisovská","Aloisovská","Aloisovská","Altajská","Alšovo Nábř.","Alšovo Nábřeží","Alšovy Sady","Alžírská","Ambrožova","Americká","Ametystová","Amforová","Amortova","Ampérova","Amurská","Anastázova","Anderleho","Andersenova","Andrštova","Andělova","Anenská","Anenské Nám.","Anenské Náměstí","Anežky Malé","Anežská","Angelovova","Anglická","Angolská","Anhaltova","Ankarská","Anny Drabíkové","Anny Letenské","Anny Rybníčkové","Anny Čížkové","Anny Čížkové","Antala Staška","Antonína Hodného","Antonína Čermáka","Antonínská","Anýzová","Apolinářská","Arabská","Aranžérská","Arbesovo Nám.","Arbesovo Náměstí","Archangelská","Archeologická","Archimédova","Archivní","Argentinská","Aristotelova","Arkalycká","Armádní","Armádního Sboru","Armády","Arménská","Arnošta Valenty","Astlova","Athénská","Atletická","Aubrechtové","Augustinova","Augustova","Austova","Aviatická","Axmanova","Azalková","Azuritová","Ašská","Baarova","Babická","Babiččina","Babočková","Babská","Babylonská","Babákova","Bachmačské Nám.","Bachmačské Náměstí","Bachova","Bacháčkova","Badeniho","Badeniho","Bajgarova","Bajkalská","Bajkonurská","Bakalářská","Bakovská","Bakurinova","Balabánova","Balbínova","Banskobystrická","Baranova","Barchovická","Barešova","Barrandova","Barrandovská","Bartolomějská","Bartoňkova","Bartoňova","Bartoškova","Bartoškova","Bartoškova","Bartákova","Bartůňkova","Barunčina","Barvířská","Barákova","Basilejské Nám.","Basilejské Náměstí","Bassova","Batelovská","Batličkova","Bavorovská","Bavorská","Bazalková","Bazovského","Bačetínská","Baňská","Baškirská","Bašteckého","Baštýřská","Bažantní","Beaufortova","Bechlínská","Bechyňova","Bechyňská","Beckovská","Bedlová","Bednářská","Bedrnova","Bedřichovská","Beethovenova","Beldova","Belgická","Bellova","Bellušova","Bendlova","Bendova","Benecká","Benediktská","Benešovská","Benická","Benkova","Benákova","Benátská","Benáčanova","Beníškové","Beranových","Bergerova","Bergmanova","Berkovská","Berlínská","Bermanova","Bernartická","Bernolákova","Berounská","Bertrámová","Berylová","Besední","Beskydská","Betlémská","Betlémské Nám.","Betlémské Náměstí","Betáňská","Bezdrevská","Bezděkovská","Bezinková","Bezová","Bezprašná","Bečovská","Bečvářova","Bečvářská","Bečvářská","Beřkovická","Bešťákova","Bieblova","Binarova","Biskupcova","Biskupská","Biskupský Dvůr","Blachutova","Blahníkova","Blahoslavova","Blanická","Blatenská","Blatnická","Blatovská","Blatská","Blattného","Blažimská","Blažkova","Blažíčkova","Blešnovská","Blodkova","Bludovická","Blériotova","Blšanecká","Bobkova","Bochovská","Bodláková","Bohdalec","Bohdalec","Bohdalecká","Bohdalecká","Bohdanečská","Bohdašínská","Bohnická","Bohrova","Bohumínská","Bohuslava Martinů","Bohuslava Martinů","Bohuslava Ze Švamberka","Bohuslavická","Bohušovická","Bohušovická","Boháčova","Bohúňova","Bojanovická","Bojasova","Bojetická","Boješická","Bojkovická","Bojovská","Bojínková","Bojčenkova","Bolebořská","Boleratická","Boleslavova","Boleslavská","Boletická","Bolevecká","Bolinská","Boloňská","Bolzanova","Bolívarova","Borecká","Borečkova","Borodinská","Borotínská","Borovanská","Borovanského","Borovnická","Borovská","Borová","Borošova","Borská","Borského","Boršov","Boršovská","Borůvková","Boseňská","Botevova","Botičská","Botičská","Boudova","Bousovská","Boučkova","Bouřilova","Boušova","Bozděchova","Boční I","Boční Ii","Bořanovická","Bořetická","Bořetínská","Bořivojova","Bořivojova","Boříkova","Bošická","Bošilecká","Bošínská","Božanovská","Božecká","Božejovická","Boženy Hofmeisterové","Boženy Jandlové","Boženy Němcové","Boženy Němcové","Boženy Stárkové","Božetická","Božetěchova","Božkova","Božkovská","Božídarská","Brabcova","Bramboříková","Branaldova","Brandejsova","Brandejsovo Nám.","Brandejsovo Náměstí","Brandlova","Brandýská","Branická","Branická","Branické Nám.","Branické Náměstí","Branislavova","Branišovská","Branská","Bratislavská","Bratranců Veverkových","Bratří Dohalských","Bratří Venclíků","Bratří Čapků","Bratříkovská","Braunerova","Braunova","Braškovská","Brdecká","Brdičkova","Brdlíkova","Brechtova","Brechtova","Brehmova","Breitcetlova","Brichtova","Brigádnická","Brigádníků","Brixiho","Brodecká","Brodecká","Brodského","Bromova","Bronzová","Broskvoňová","Broumarská","Broumovská","Brozánská","Brožíkova","Brtecká","Brtnická","Brumovická","Brunclíkova","Brunelova","Brunnerova","Bruselská","Brusinková","Bruslařská","Bryksova","Brzická","Brzorádových","Brázdimská","Brňovská","Bubenečská","Bubenečská","Bubenská","Bubenské Nábř.","Bubenské Nábřeží","Bubeníčkova","Bublavská","Bublíkova","Bubnova","Bucharova","Buchlovská","Buchovcova","Budapešťská","Budečská","Budilova","Budilovská","Budovatelská","Budyňská","Budyšínská","Budínova","Budčická","Budějovická","Budějovická","Bukolská","Bukovecká","Bukovinská","Buková","Bulharská","Buližníková","Bulovka","Burdova","Burešova","Burianova","Butovická","Butovická","Buzulucká","Buštěhradská","Bydhošťská","Bydžovská","Bydžovského","Bylanská","Bystrá","Bystřická","Bystřičná","Byšická","Byškovická","Bzenecká","Bártlova","Bášťská","Bílenecké Nám.","Bílenecké Náměstí","Bílinská","Bílkova","Bílkova","Bílovská","Bílá","Bílčická","Bínova","Bítovská","Böhmova","Býšovská","Běchorská","Běchovická","Běhounkova","Bělehradská","Bělehradská","Bělehradská","Bělečská","Bělinského","Bělocerkevská","Bělocká","Bělohorská","Bělohorská","Bělomlýnská","Bělomlýnská","Běloveská","Běluňská","Bělušická","Bělásková","Bělčická","Bělčická","Běžecká","Běžná","Břeclavská","Břehová","Břehová","Břetislavova","Břevnovská","Březanova","Březecká","Březenská","Březinova","Březiněveská","Březnická","Březnová","Březovická","Březovského","Březová","Břečťanová","Břežanská","Břežánecká","Břidlicová","Břidličná","Břízova","Bříšťanská","Cafourkova","Cedrová","Celetná","Celniční","Celsiova","Cementářská","Ceplechova","Cerhenická","Cerhýnská","Cetyňská","Chabařovická","Chaberská","Chabeřická","Chabská","Chalabalova","Chaloupeckého","Chaloupky","Chaltická","Chalupkova","Chalupnická","Chaplinovo Nám.","Chaplinovo Náměstí","Charkovská","Charlese De Gaulla","Charvátova","Chatařská","Chatová","Chebská","Chelčického","Chemická","Chilská","Chittussiho","Chladírenská","Chlebovická","Chlumecká","Chlumecká","Chlumecká","Chlumova","Chlumínská","Chlumčanského","Chlupova","Chlupáčova","Chládkova","Chmelařská","Chmelická","Chmelová","Chmelířova","Choceradská","Choceňská","Chocholouškova","Chocholova","Chodecká","Chodovecké Nám.","Chodovecké Náměstí","Chodovická","Chodovská","Chodovská","Chodovská","Chodská","Cholupická","Chomutovická","Chomutovská","Chopinova","Choratická","Chorošová","Chorušická","Chorvatská","Chotečská","Chotkova","Chotouchovská","Chotouňská","Chotovická","Chotutická","Chotěbuzská","Chotěnovská","Chotětovská","Chotěšovská","Chovatelská","Chrastavská","Chrobolská","Chrpová","Chrudimská","Chráněná","Chrášťanská","Chuchelská","Chudenická","Chudoměřická","Churnajevova","Churáňovská","Chvaletická","Chvaletická","Chvalečská","Chvalkovická","Chvalova","Chvalská","Chvalská","Chvalšovická","Chvatěrubská","Chvojenecká","Chyjická","Chýnická","Chýnovská","Chýňská","Chřibská","Cibulka","Cidlinská","Cigánkova","Cihelná","Cihlářova","Cihlářská","Cimburkova","Ciolkovského","Cirkusová","Cisterciácká","Citolibská","Coriových","Ctiborova","Ctiněveská","Ctiradova","Ctěnická","Cukerní","Cukrovarnická","Cukrovarská","Cuřínova","Cvikovská","Cvičebná","Cvrčkova","Cvrčkova","Cvrčkova","Cyprichova","Cíglerova","Cílkova","Cínovecká","Církova","Církvická","Církvičná","Císařská Louka","Císařský Ostrov","Císařský Ostrov","Císařský Ostrov","Cítovská","Daimlerova","Dalejská","Dalejská","Dalešická","Daliborova","Dalimilova","Dalovická","Dandova","Danielova","Dany Medřické","Darwinova","Dasnická","Davelská","Davidovičova","Davídkova","Davídkova","Dačická","Dačického","Daňkova","Dašická","Daškova","Dehtínská","Dejvická","Dejvická","Demlova","Demoliční","Desenská","Destinnové","Destinové","Devonská","Deylova","Deštná","Dešťová","Diabasová","Diamantová","Diblíkova","Diblíkova","Dienzenhoferovy Sady","Dieselova","Diskařská","Diskařská","Dismanova","Dittrichova","Divadelní","Divadelní","Divecká","Diviznová","Divišova","Divišovská","Divoká Šárka","Divoká Šárka","Dlabačov","Dlabačov","Dlouhá","Dlážděná","Do Blatin","Do Borovin","Do Chuchle","Do Dolnic","Do Dubin","Do Dubče","Do Hlinek","Do Klukovic","Do Kopečka","Do Koutů","Do Koutů","Do Lipan","Do Lipin","Do Lipin","Do Luk","Do Panenek","Do Podkovy","Do Polí","Do Potoků","Do Píšovic","Do Roklí","Do Rybníčků","Do Svépravic","Do Vozovny","Do Vrchu","Do Vršku","Do Zahrádek I","Do Zahrádek I","Do Zahrádek I","Do Zahrádek Ii","Do Zahrádek Ii","Do Zátiší","Do Údolí","Do Újezda","Do Čertous","Do Čtvrti","Do Říčan","Dobevská","Dobnerova","Dobratická","Dobronická","Dobronická","Dobropolská","Dobrovická","Dobrovolného","Dobrovolského","Dobrovského","Dobrovízská","Dobročovická","Dobrošovská","Dobrušská","Dobřanská","Dobřejovická","Dobřenická","Dobřichovská","Dobšická","Dobšínská","Dohalická","Doksanská","Dolanská","Dolejškova","Doležalova","Dolina","Dolnobranská","Dolnobřežanská","Dolnocholupická","Dolnojirčanská","Dolnokrčská","Dolnokřeslická","Dolnomlýnská","Dolnoměcholupská","Dolnoměcholupská","Dolnopočernická","Dolnočernošická","Dolní","Dolní","Dolní Chaloupky","Dolomitová","Dolská","Dolákova","Dolínecká","Dolňanská","Domanovická","Domašínská","Domažlická","Dominova","Dominínská","Domkovská","Domkářská","Domousnická","Donatellova","Donovalská","Donská","Donátova","Donínská","Dopplerova","Dopravní","Dopraváků","Dopraváků","Dostihová","Dostojevského","Doubecká","Doubická","Doubravická","Doubravská","Doubravínova","Doubravčická","Doudlebská","Doudova","Doupovská","Dr. Marodyho","Dr. Zikmunda Wintra","Dr.Zikmunda Wintra","Dragounská","Drahanská","Drahanská","Drahelická","Drahelčická","Drahobejlova","Drahorádova","Drahotická","Drahotínská","Drahovská","Drahovská","Drahoňovského","Draženovská","Draženovská","Dražetická","Dražická","Dražického","Dražického Nám.","Dražického Náměstí","Dražkovská","Dreyerova","Drimlova","Drnovská","Drobná","Drtikolova","Drtinova","Druhanická","Druhého Odboje","Družicová","Družnosti","Družná","Družstevní","Družstevní Ochoz","Družstevní Ochoz","Drážní","Drůbežnická","Drůbežářská","Dubanská","Dubenecká","Dubečská","Dubečské Horky","Dubinská","Dubnická","Dubnova","Dubovická","Dubová","Dubrovnická","Dubská","Duchcovská","Duchoslávka","Dudkova","Dudínská","Duhová","Dukelská","Dukelských Hrdinů","Dunajevského","Dunajská","Dunická","Dunovského","Durychova","Durychova","Dusíkova","Duškova","Duškova","Dušní","Dušní","Dvorecká","Dvorecké Nám.","Dvorecké Náměstí","Dvorní","Dvorská","Dvoudílná","Dvouletky","Dvouramenná","Dvořeckého","Dvořišťská","Dvořákova","Dvořákovo Nábř.","Dvořákovo Nábřeží","Dygrýnova","Dyjská","Dykova","Dářská","Dürerova","Dýšinská","Děbolínská","Dědická","Dědinova","Dědinská","Děkanská","Děkanská Vinice I","Děkanská Vinice Ii","Dělená","Dělnická","Dělostřelecká","Dětenická","Dětská","Dětský Ostrov","Děvínská","Děčínská","Děčínská","Dřevařská","Dřevnická","Dřevná","Dřevčická","Dřínovská","Dřínová","Dřítenská","Eberlova","Ebrova","Edisonova","Edvardova","Egyptská","Eichlerova","Einsteinova","Ejpovická","Ekonomická","Eledrova","Elektrárenská","Eliášova","Eliášova","Elišky Junkové","Elišky Krásnohorské","Elišky Krásnohorské","Elišky Peškové","Elišky Přemyslovny","Ellnerové","Elsnicovo Náměstí","Emilie Hyblerové","Emlerova","Engelmüllerova","Engelova","Engelova","Englerova","Erbenova","Erbenova","Estonská","Etiopská","Euklidova","Evropská","Evropská","Evropská","Evropská","Evropská","Evy Olmerové","Exnárova","F.V.Veselého","Fabiánova","Fabiánská","Fadějevova","Fajmanové","Fajtlova","Falcká","Faltysova","Famfulíkova","Fantova","Faradayova","Farkašova","Farní","Farská","Farského","Fastrova","Federova","Fejfarova","Felberova","Fenyklová","Fetrovská","Feřtekova","Fialková","Fibichova","Fikerova","Filipova","Filipovského","Filipíny Welserové","Fillova","Filmařská","Filosofská","Fingerova","Finkovská","Finská","Firkušného","Fischlova","Fišerova","Flemingovo Nám.","Flemingovo Náměstí","Flájská","Flöglova","Foerstrova","Folmavská","Formanská","Formánkova","Fořtova","Fragnerova","Francouzská","Francouzská","Francouzská","Františka Diviše","Františka Jansy","Františka Kadlece","Františka Křížka","Františka Černého","Františka Červeného","Františka Šimáčka","Františkova","Franty Kocourka","Frančíkova","Freiwaldova","Freyova","Frimlova","Fričova","Froncova","Frostova","Froňkova","Frydrychova","Fryčovická","Fráni Šrámka","Frézařská","Frýdecká","Frýdlantská","Fuchsova","Fügnerovo Nám.","Fügnerovo Náměstí","Gabinova","Gabčíkova","Gagarinova","Galandova","Galileova","Gallašova","Galvaniho","Gaussova","Gdaňská","Generála Janouška","Generála Mejstříka","Generála Píky","Generála Šišky","Generála Šišky","Gensovská","Geologická","Gercenova","Gerstnerova","Ginzova","Glazunovova","Glinkova","Glowackého","Goetheho","Gogolova","Golfová","Gollova","Golčova","Gončarenkova","Gončarenkova","Gorazdova","Gotthardská","Goyova","Gočárova","Grafická","Grafitová","Grammova","Granátová","Gregorova","Grussova","Gruzínská","Gutfreundova","Gutova","Gymnasijní","Gymnastická","Habartická","Habartická","Habartovská","Haberfeldova","Habrovská","Habrová","Habřická","Habřická","Hackerova","Hadovitá","Hadravská","Hajní","Hakenova","Halasova","Halenkovská","Halštatská","Hamerská","Hamplova","Hamrová","Hamsíkova","Hankova","Hanouškova","Hanusova","Hanušova","Hanzelkova","Hanzlíkova","Harantova","Harcovská","Harlacherova","Harmonická","Harrachovská","Hartenberská","Hasičská","Hasičů","Hasova","Hastrmanská","Haunerova","Hauptova","Hausmannova","Havanská","Havelská","Havelská Ulička","Havlovického","Havlovického","Havlovská","Havlínova","Havlíčkova","Havlíčkovo Nám.","Havlíčkovo Náměstí","Havlíčkovy Sady","Havlůjové","Havlůjové","Havranická","Havraní","Havránkova","Havířovská","Havířská","Haškova","Hašlerova","Haštalská","Haštalské Nám.","Haštalské Náměstí","Heckelova","Heineho","Heinemannova","Hejnická","Hejnická","Hejplíkova","Hejtmanská","Hejtmánkova","Hekova","Hekrova","Heldova","Heleny Malířové","Hellichova","Helmova","Helsinská","Helénská","Hennerova","Heranova","Herbenova","Herdovská","Herlíkovická","Hermanická","Hermelínská","Hermíny Týrlové","Heroldovy Sady","Herrmannova","Herrova","Hertzova","Herálecká I","Herálecká Ii","Herálecká Iii","Herálecká Iv","Herčíkova","Hevlínská","Heydukova","Heyrovského Nám.","Heyrovského Nám.","Heyrovského Náměstí","Heyrovského Náměstí","Hečkova","Heřmanova","Heřmánková","Hildy Čihákové","Hillebrantova","Hilmarova","Hiršlova","Hlavatého","Hlavenecká","Hlavní","Hlavova","Hlaváčkova","Hlaváčova","Hlaďova","Hledíková","Hlinská","Hlivická","Hlohová","Hloubětínská","Hloubětínská","Hlubocká","Hluboká","Hlubočepská","Hlušičkova","Hládkov","Hládkov","Hlávkova","Hněvkovská","Hněvkovského","Hnězdenská","Hoblířská","Hodkovická","Hodkovská","Hodonínská","Hodčina","Hodějovská","Hodějovská","Hoděšovická","Hofbauerova","Hoffmannova","Hokejová","Hokešovo Nám.","Hokešovo Náměstí","Holandská","Holekova","Holenická","Holenská","Holečkova","Holečkova","Holešovické Nábřeží","Holešovický Přístav","Holická","Hollarovo Nám.","Hollarovo Náměstí","Holohlavská","Holotínská","Holoubkova","Holoubkovská","Holubická","Holubinková","Holubkova","Holubova","Holubí","Holušická","Holyňská","Holátova","Holínská","Holýšovská","Holčovická","Holšická","Homolová","Homérova","Honzíkova","Hornická","Hornocholupická","Hornocholupická","Hornofova","Hornokrčská","Hornokřeslická","Hornomlýnská","Hornoměcholupská","Hornoměcholupská","Hornopočernická","Horní","Horní Chaloupky","Horní Hrdlořezská","Horní Stromky","Horníčkova","Horolezecká","Horoměřická","Horoměřická","Horoušanská","Horoušanská","Horovo Nám.","Horovo Náměstí","Horská","Horusická","Horymírovo Nám.","Horymírovo Náměstí","Horákova","Horáčkova","Horčičkova","Horňátecká","Horšovská","Horšovská","Hospodářská","Hostavická","Hostavická","Hostinského","Hostivařská","Hostivařské Nám.","Hostivařské Náměstí","Hostivická","Hostivítova","Hostišovská","Hostouňská","Hostošova","Hostýnská","Hostýnská","Houbařská","Houdova","Hovorčovická","Hořanská","Hořejší Náb.","Hořejší Nábřeží","Hořejšího","Hořelická","Hořická","Hořovského","Hořínecká","Hoškova","Hoštická","Hošťálkova","Hrabačovská","Hrabákova","Hrachovská","Hrad I. Nádvoří","Hrad Ii. Nádvoří","Hrad Iii. Nádvoří","Hradební","Hradecká","Hradeckých","Hradečkova","Hradešínská","Hradčanské Nám.","Hradčanské Náměstí","Hraniční","Hrazanská","Hrazanská","Hrdinova","Hrdličkova","Hrdlořezská","Hrdoňovická","Hroncova","Hronovská","Hronětická","Hrozenkovská","Hroznová","Hrozného","Hrubého","Hrubínova","Hrudičkova","Hrusická","Hruškovská","Hruškovská","Hrušovanské Nám.","Hrušovanské Náměstí","Hrušovická","Hrušovská","Hrušínského","Hrušňová","Hrušňová","Hrádková","Hráského","Huberova","Hubičkova","Hubáčkova","Hudcova","Hudební","Hudečkova","Hudečkova","Hugo Haase","Hulanova","Hulická","Humenecká","Humpolecká","Huntířovská","Hurbanova","Husařská","Husinecká","Husitská","Husitská","Husníkova","Husova","Husovo Nám.","Husovo Náměstí","Hustopečská","Hutnická","Huťská","Hviezdoslavova","Hviezdoslavova","Hvozdecká","Hvozdnická","Hvozdíková","Hvožďanská","Hvězdonická","Hvězdova","Hvězdářská","Hyacintová","Hybernská","Hybešova","Hynaisova","Hypšmanova","Hábova","Hájecká","Hájenská","Hájkova","Hájovna U Podjezdu","Hájovna V Šárce","Hájová","Hájíčkova","Hájčí","Hákova","Hálkova","Hálova","Hálův Statek","Högerova","Hübnerové","Hřbitovní","Hřebenová","Hřebíkova","Hřenská","Hřibojedská","Hřibská","Hříbková","Hřídelecká","Hůlkova","Hůlkova","Hůrská","Ibsenova","Imrychova","Ingrišova","Internacionální","Irkutská","Irská","Irvingova","Italská","Italská","Italská","Ivančická","Izraelská","Izraelská","Jabkenická","Jablonecká","Jablonecká","Jablonského","Jabloňová","Jablunkovská","Jagellonská","Jagellonská","Jahodnická","Jahodová","Jakobiho","Jakubovská","Jakubská","Jakutská","Jalodvorská","Jalovcová","Jaltská","Jamborova","Jamská","Jana Bílka","Jana Jindřicha","Jana Karafiáta","Jana Kašpara","Jana Marka","Jana Masaryka","Jana Ouřady","Jana Přibíka","Jana Růžičky","Jana Srba","Jana Zajíce","Jana Čerstvého","Jana Želivského","Janderova","Jandova","Janečkova","Jankovcova","Jankovská","Janouchova","Janouškova","Janovická","Janovská","Janovského","Jansenova","Janského","Jansova","Jantarová","Janákova","Janáčkovo Nábř.","Janáčkovo Nábř.","Janáčkovo Nábřeží","Janáčkovo Nábřeží","Janýrova","Jančova","Jarešova","Jarkovská","Jarmily Novotné","Jarní","Jarníkova","Jaromíra Jindry","Jaromíra Vejvody","Jaromírova","Jaroměřská","Jaroslava Foglara","Jaroslava Švehly","Jaroslavická","Jasanová","Jaselská","Jaselská","Jasenická","Jasenná","Jasmínová","Jasná I","Jasná Ii","Jaspisová","Jateční","Jaurisova","Jaurisova","Javorenská","Javornická","Javorová","Javorská","Javořická","Jašíkova","Jažlovická","Jedlová","Jednostranná","Jednostranná","Jednotného Zemědělského Družstva","Jednořadá","Jelenovská","Jelení","Jelínkova","Jemenská","Jemnická","Jenerálka","Jenečská","Jenišovská","Jenská","Jeníkovická","Jenštejnská","Jeremenkova","Jeremenkova","Jeremenkova","Jeremiášova","Jeremiášova","Jerevanská","Jeronýmova","Jeruzalémská","Jesenická","Jeseniova","Jestřebická","Jetelová","Jetřichovická","Jevanská","Jezdecká","Jezdovická","Jezerní","Jezerská","Jezevčí","Ječná","Jeřabinová","Jeřabinová","Jeřická","Jeřábkova","Jeřábnická","Jeřábová","Ješetická","Ještědská","Ježdíkova","Ježkova","Ježovická","Ježovická","Ježovská","Jihlavská","Jihovýchodní I","Jihovýchodní Ii","Jihovýchodní Iii","Jihovýchodní Iv","Jihovýchodní Ix","Jihovýchodní V","Jihovýchodní Vi","Jihovýchodní Vii","Jihovýchodní Viii","Jihozápadní I","Jihozápadní Ii","Jihozápadní Iii","Jihozápadní Iv","Jihozápadní V","Jihozápadní Vi","Jihočeská","Jilemnická","Jilemnická","Jilemnického","Jilmová","Jilská","Jindrova","Jindřicha Jindřicha","Jindřicha Plachty","Jindřichova","Jindřišská","Jinolická","Jinonická","Jinonická","Jinočanská","Jirenská","Jirečkova","Jirkovská","Jirsákova","Jirsíkova","Jiránkova","Jiráskovo Nám.","Jiráskovo Náměstí","Jirčanská","Jiskrova","Jistebnická","Jitkovská","Jitravská","Jitravská","Jitrocelová","Jitřní","Jivenská","Jizerská","Jičínská","Jičínská","Jiřická","Jiřinková","Jiřiny Štěpničkové","Jiřská","Jiřího Jandy","Jiřího Mašína","Jiřího Ze Vtelna","Jiříčkova","Jiříčkové","Jižní I","Jižní Ii","Jižní Iii","Jižní Iv","Jižní Ix","Jižní Nám.","Jižní Náměstí","Jižní Spojka","Jižní Spojka","Jižní Spojka","Jižní Spojka","Jižní V","Jižní Vi","Jižní Vii","Jižní Viii","Jižní Xi","Jižní Xii","Jižní Xiii","Jižní Xiv","Jižní Xv","Jižní Xvi","Jižní Xvii","Johanitská","Jordana Jovkova","Jordánská","Josefa Bíbrdlíka","Josefa Houdka","Josefa Houdka","Josefa Kočího","Josefa Němce","Josefa Vašíčka","Josefa Šimůnka","Josefská","José Martího","Juarézova","Jugoslávská","Jugoslávských Partyzánů","Jugoslávských Partyzánů","Jungmannova","Jungmannova","Jungmannovo Náměstí","Junácká","Jupiterova","Jurkovičova","Juárezova","Jzd","Jáchymova","Jáchymova","Jáchymovská","Jánošíkova","Jánská","Jánský Vršek","Jíchova","Jílkova","Jílovická","Jílovišťská","Jílovská","Jílovská","Jílová","Jírova","Jírovcovo Nám.","Jírovcovo Náměstí","Jívanská","Jívová","K Austisu","K Avii","K Barrandovu","K Bateriím","K Bažantnici","K Belvederu","K Berance","K Beranovu","K Berounce","K Beránku","K Betonárně","K Betáni","K Blatovu","K Bohnicím","K Borovíčku","K Botiči","K Brance","K Brnkám","K Brusce","K Brusce","K Brůdku","K Bílému Vrchu","K Běchovicům","K Březince","K Březiněvsi","K Břečkám","K Celinám","K Cementárně","K Chabům","K Chabům","K Chaloupce","K Chaloupkám","K Chatám","K Chmelnici","K Chumberku","K Cihelně","K Cikánce","K Cíli","K Dalejím","K Dobré Vodě","K Dobré Vodě","K Dolům","K Drahani","K Drahani","K Drazdům","K Drsnici","K Dubinám","K Dubovému Mlýnu","K Dubu","K Dubči","K Dálnici","K Dálnici","K Dýmači","K Děrám","K Fantovu Mlýnu","K Farkám","K Fialce","K Fišpance","K Habrovce","K Habru","K Haltýři","K Havlínu","K Hluboké Cestě","K Hlásku","K Holyni","K Holému Vrchu","K Holému Vrchu","K Homolce","K Horkám","K Horkám","K Horkám","K Horním Počernicím","K Horoměřicům","K Hořavce","K Hradišti","K Hrnčířům","K Hrušovu","K Hrušovu","K Hrázi","K Hutím","K Hutím","K Hutím","K Hádku","K Háječku","K Háji","K Háji","K Hájku","K Hájovně","K Hájovně","K Hájovně","K Hájům","K Hárunce","K Interně","K Jalovce","K Jasánkám","K Jelenu","K Jelenám","K Jezeru","K Jezeru","K Jezu","K Jezírku","K Jihu","K Jihu","K Jinočanům","K Jinočanům","K Jižnímu Městu","K Juliáně","K Jízdárně","K Labeškám","K Ladům","K Lahovičkám","K Lahovské","K Lažance","K Lesoparku","K Lesu","K Lesu","K Lesíku","K Letišti","K Letňanům","K Libuši","K Lindě","K Lipanům","K Lipinám","K Lipám","K Lochkovu","K Lomu","K Louži","K Luhu","K Lukám","K Lučinám","K Lužinám","K Ládví","K Ládví","K Lánu","K Lávce","K Lázním","K Lípě","K Markétě","K Matěji","K Mejtu","K Metru","K Metru","K Milíčovu","K Mlíčníku","K Mlýnu","K Modřanskému Nádraží","K Mohyle","K Moravině","K Moravině","K Mostku","K Mostu","K Motelu","K Motolu","K Mírám","K Měcholupům","K Měchurce","K Nedvězí","K Netlukám","K Noskovně","K Nouzovu","K Nové Vsi","K Nové Vsi","K Nové Škole","K Novému Dvoru","K Novému Hradu","K Novému Sídlišti","K Novým Domkům","K Nádraží","K Nádrži","K Náhonu","K Náměstí","K Náplavce","K Náplavce","K Návrší","K Návrší","K Návsi","K Obci","K Obecním Hájovnám","K Oboře","K Obsinám","K Ochozu","K Ohradě","K Okrouhlíku","K Olympiku","K Opatřilce","K Opatřilce","K Oplocení","K Orionce","K Osmidomkům","K Otočce","K Ovčínu","K Ovčínu","K Padesátníku","K Palečku","K Panenkám","K Parku","K Pastvinám","K Pazderkám","K Pekárně","K Peluňku","K Petrově Komoře","K Pitkovicům","K Podchodu","K Podjezdu","K Podjezdu","K Polím","K Pomníku","K Popelce","K Popelce","K Potoku","K Poště","K Pramenu","K Prelátům","K Prádelně","K Průhonicům","K Průhonu","K Průmstavu","K Pyramidce","K Pérovně","K Pískovně","K Písnici","K Přehradám","K Přejezdu","K Přístavišti","K Přívozu","K Radhošti","K Radonicům","K Radotínu","K Radotínu","K Remízku","K Rokli","K Rokytce","K Rotundě","K Rovinám","K Rozkoši","K Rozmezí","K Roztokům","K Rozvodně","K Rukavičkárně","K Rybníku","K Rybníčku","K Rybníčkům","K Rybárně","K Ryšánce","K Ryšánce","K Sadu","K Safině","K Samoobsluze","K Samotě","K Sedlišti","K Sibřině","K Sokolovně","K Sopce","K Sopce","K Starému Bubenči","K Starému Lomu","K Stavebninám","K Sukovu","K Sádkám","K Sádkám","K Sídlišti","K Sídlišti","K Teplárně","K Topolům","K Topírně","K Transformátoru","K Trati","K Trninám","K Trnkám","K Trníčku","K Truhlářce","K Tržišti","K Tuchoměřicům","K Táboru","K Třebonicům","K Třešňovce","K Tůni","K Ubytovnám","K Uhříněvsi","K Uhříněvsi","K Učilišti","K Valu","K Vejvoďáku","K Velké Ohradě","K Velké Ohradě","K Velkému Dvoru","K Verneráku","K Viaduktu","K Vidouli","K Vilkám","K Vinici","K Vinicím","K Vinoři","K Vizerce","K Višňovce","K Višňovce","K Višňovému Sadu","K Vltavě","K Vlásence","K Vodici","K Vodojemu","K Vodárně","K Vodě","K Vrbičkám","K Vrbě","K Vrcholu","K Vrtilce","K Vršíčku","K Vyhlídce","K Vysoké Cestě","K Vystrkovu","K Václavce","K Vápence","K Váze","K Výboru","K Výtopně","K Výzkumným Ústavům","K Větrolamu","K Zabrkům","K Zadní Kopanině","K Zadní Kopanině","K Zahradnictví","K Zahradám","K Zahrádkám","K Zastávce","K Zatáčce","K Zelené Louce","K Zeleným Domkům","K Zelenči","K Zámku","K Zátiší","K Závodišti","K Závorám","K Závěrce","K Závětinám","K Údolí","K Údolí Hvězd","K Újezdu","K Ústavu","K Úvozu","K Černošicím","K Červenému Dvoru","K Červenému Dvoru","K Červenému Dvoru","K Červenému Vrchu","K Čestlicům","K Čihadlům","K Ďáblicům","K Řece","K Řeporyjím","K Řeporyjím","K Říčanům","K Šafránce","K Šafránce","K Šancím","K Šeberovu","K Šeberáku","K Šedivce","K Šubrtce","K Železnici","K Žižkovu","Kabeláčova","Kabešova","Kabátové","Kadaňská","Kadeřávkovská","Kafkova","Kahovská","Kaizlovy Sady","Kakosova","Kakostová","Kalabisova","Kalašova","Kalinová","Kališnická","Kališťská","Kalská","Kalvodova","Kamelova","Kamencová","Kamenická","Kamenická","Kamenitá","Kamenná","Kameníků","Kamerunská","Kampanova","Kamzíková","Kamýcká","Kamýcká","Kamýcká","Kanadská","Kandertova","Kanovnická","Kapitulská","Kaplanova","Kaplická","Kapraďová","Kaprova","Kaprova","Kapucínská","Karafiátová","Karasova","Karasovská","Kardausova","Kardašovská","Kardašovská","Karenova","Karfíkova","Karla Engliše","Karla Hlaváčka","Karla Kryla","Karla Křížka","Karla Michala","Karla Rachůnka","Karla Tomáše","Karla Zicha","Karla Černého","Karlická","Karlova","Karlovarská","Karlovarská","Karlovická","Karlovo Nám.","Karlovo Nám.","Karlovo Náměstí","Karlovo Náměstí","Karlínské Nám.","Karlínské Náměstí","Karlštejnská","Karmelitská","Karolinská","Karoliny Světlé","Karpatská","Kartounářů","Kartouzská","Kasalická","Kateřinská","Kateřinské Nám.","Kateřinské Náměstí","Katovická","Katusická","Kavkazská","Kazaňská","Kazašská","Kazimírova","Kaznějovská","Kazín","Kazínská","Kačerovská","Kačínská","Kaňkova","Kaňkovského","Kaňovská","Kašeho","Kaškova","Kašovická","Kašparovo Nám.","Kašparovo Náměstí","Kašperská","Kaštanová","Kbelská","Kbelská","Kbelská","Kbelská","Kdoulová","Ke Březině","Ke Břvům","Ke Cvičišti","Ke Dračkám","Ke Dráze","Ke Dvoru","Ke Džbánu","Ke Garážím","Ke Golfu","Ke Goniu","Ke Hlásce","Ke Hrádku","Ke Hrázi","Ke Hrázi","Ke Hřbitovu","Ke Hřišti","Ke Kablu","Ke Kablu","Ke Kalvárii","Ke Kaménce","Ke Kamínce","Ke Kamýku","Ke Kapličce","Ke Kapslovně","Ke Karlovu","Ke Kateřinkám","Ke Kazínu","Ke Kašně","Ke Kinu","Ke Kladivům","Ke Klimentce","Ke Klubovně","Ke Klínku","Ke Klínku","Ke Klíčovu","Ke Koh-I-Nooru","Ke Kolodějskému Zámku","Ke Kolodějům","Ke Kolonii","Ke Konstruktivě","Ke Kopečku","Ke Korunce","Ke Kostelu","Ke Kostelíčku","Ke Kotlářce","Ke Koulce","Ke Koupališti","Ke Kovárně","Ke Kozím Hřbetům","Ke Královicům","Ke Krči","Ke Krčské Stráni","Ke Kulišce","Ke Kulturnímu Domu","Ke Kurtům","Ke Kyjovu","Ke Kálku","Ke Křížku","Ke Křížkám","Ke Lhoteckému Lesu","Ke Mlýnku","Ke Mlýnu","Ke Mlýnu","Ke Schodům","Ke Skalce","Ke Skalkám","Ke Skladům","Ke Sklárně","Ke Skále","Ke Slatinám","Ke Slivenci","Ke Smrčině","Ke Smíchovu","Ke Smíchovu","Ke Splávku","Ke Spofě","Ke Spořilovu","Ke Spálence","Ke Srážku","Ke Stadionu","Ke Stanici","Ke Starému Hřišti","Ke Starým Rybníkům","Ke Stinkovskému Rybníku","Ke Strašnické","Ke Strouze","Ke Stráni","Ke Strži","Ke Studni","Ke Studni","Ke Studánce","Ke Stupicím","Ke Stáčírně","Ke Stírce","Ke Střelnici","Ke Střelnici","Ke Sv. Izidoru","Ke Třem Mostům","Ke Xaverovu","Ke Zbraslavi","Ke Zbrojnici","Ke Zbuzanům","Ke Zdibům","Ke Zdravotnímu Středisku","Ke Zděři","Ke Zlatému Kopci","Ke Zličínu","Ke Znaku","Ke Zvonici","Ke Zvoničce","Ke Školce","Ke Škole","Ke Šmejkalu","Ke Štvanici","Ke Štítu","Ke Štěpcům","Ke Štěrkovně","Ke Švestkovce","Kecova","Kejhova","Kejnická","Kellnerova","Keltská","Keltů","Kelvinova","Kemrova","Keplerova","Keplerova","Keramická","Kesnerka","Kestřanská","Keteňská","Kettnerova","Keřová","Khodlova","Kischova","Kišiněvská","Kladenská","Kladenská","Kladenská","Kladinovská","Kladrubská","Kladská","Klamovka","Klapkova","Klapálkova","Klatovská","Klausova","Klecandova","Klecanská","Klenečská","Klenovická","Klenovská","Klenová","Klečkova","Klečákova","Klešická","Klicperova","Klidná","Klihařská","Klikatá","Klikatá","Klimentská","Klivarova","Kloboukova","Kloboučnická","Kloknerova","Klokotská","Klostermannova","Klouzková","Kludských","Klukovická","Klánova","Klánova","Klánova","Klánovická","Klánovická","Klárov","Klášterecká","Klášterská","Klášterského","Klímova","Klímova","Klínecká","Klínovecká","Klínová","Klírova","Klíčanská","Klíčova","Klíčovská","Klíčovská","Kmochova","Knínická","Kněževeská","Kněžická","Koberkova","Kobrova","Kobyliská","Kobyliské Nám.","Kobyliské Náměstí","Kobylákova","Kochanova","Kocianova","Koclířova","Kocourova","Kodaňská","Kodicilova","Kodymova","Kohoutovská","Kohoutových","Kojetická","Kojická","Kokořínská","Kolbenova","Kolbenova","Kolbenova","Koldínova","Kolejní","Kolektivní","Kolešovská","Kollárova","Kolmistrova","Kolmá","Kolocova","Kolodějská","Kolonie U Obecní Cihelny","Kolonka","Kolovečská","Kolovratská","Kolová","Kolátorova","Koláčkova","Koláře Kaliny","Kolářova","Kolínova","Kolínská","Kolčavka","Komenského Nám.","Komenského Náměstí","Komornická","Komořanská","Komořanská","Komořanská","Komunardů","Komárkova","Komárovská","Koncová","Konecchlumského","Konečná","Kongresová","Konojedská","Konopišťská","Konopova","Konopáskova","Konstantinova","Konvalinková","Konviktská","Konzumní","Konzumní","Koníčkovo Nám.","Koníčkovo Náměstí","Konětopská","Koněvova","Konšelská","Konžská","Kopalova","Kopanina","Kopanská","Kopeckého","Koperníkova","Kopečná","Kopretinová","Kopřivnická","Korandova","Korandova","Korunní","Korunní","Korunní","Korunovační","Korunovační","Korybutova","Korycanská","Korytná","Kosatcová","Kosařova","Kosmická","Kosmonoská","Kosova","Kosořická","Kosořská","Kostelecká","Kostelecká","Kostelní","Kostelní Náměstí","Kostečná","Kostková","Kostlivého","Kostnické Nám.","Kostnické Náměstí","Kostomlatská","Kostrbova","Kostřínská","Kosárkovo Nábř.","Kosárkovo Nábřeží","Kosí","Koterovská","Koterovská","Kotevní","Kotlaska","Kotlářka","Kotorská","Kotovka","Kotrčová","Kotršálova","Kotíkova","Kotěrova","Koubkova","Koubkova","Koubova","Koukolová","Koulka","Koulova","Kounická","Kounovská","Koutská","Kouřimská","Kovanecká","Kovařovicova","Kovriginova","Kováků","Kovárenská","Kovářova","Kovářská","Kováříkova","Kozinova","Kozinovo Náměstí","Kozlova","Kozlovská","Kozmíkova","Kozomínská","Kozácká","Kozákovská","Kozáková","Kozí","Kočova","Kořenského","Košařova","Košická","Koštířova","Košátecká","Košíkářská","Košířské Nám.","Košířské Náměstí","Košťálkova","Koťátkova","Koželužská","Kožlanská","Kožná","Kožíškova","Kpt. Nálepky","Kpt. Stránského","Krabošická","Krahulčí","Krajanská","Krajní","Krajová","Krajánkova","Krakovská","Kralická","Kralupská","Krameriova","Kramlova","Kramolná","Kramolínská","Kramperova","Kraslická","Krasnická","Krasnojarská","Kratochvílova","Krausova","Krbická","Krchlebská","Krejnická","Krejčího","Kremličkova","Kremnická","Kremnická","Krhanická","Krhanická","Kristiánova","Kriváňská","Krkonošská","Krnovská","Krnská","Krocínova","Krocínovská","Kroftova","Krohova","Krokova","Krolmusova","Kropáčkova","Krosenská","Kroupova","Kroupova","Krouzova","Krovova","Krteňská","Kruhová","Krumlovská","Krupkovo Nám.","Krupkovo Náměstí","Krupná","Krupská","Krušovická","Kružberská","Krylovecká","Krylovecká","Krymská","Krynická","Krystalová","Kryšpínova","Kryštofova","Krále Václava Iv.","Králodvorská","Králova","Královická","Královny Žofie","Královská Obora","Královská Obora","Krásnolipská","Krásného","Krásova","Krátká","Krátká","Krátkého","Krátký Lán","Krčmářovská","Krčská","Krčínovo Nám.","Krčínovo Náměstí","Krčínská","Krňovická","Krškova","Kubatova","Kubaštova","Kubelíkova","Kubišova","Kubištova","Kubova","Kubánské Nám.","Kubánské Náměstí","Kubíkova","Kubínova","Kuchařská","Kudeříkové","Kudrnova","Kukelská","Kukelská","Kukulova","Kukulova","Kukučínova","Kulhavého","Kulhánkovská","Kuncova","Kundratka","Kunešova","Kunická","Kunratická","Kunratická Spojka","Kunratická Spojka","Kuní","Kuní","Kunínova","Kunčická","Kunětická","Kupeckého","Kupkova","Kurandové","Kurkova","Kurta Konráda","Kurzova","Kurčatovova","Kusá","Kusého","Kutilova","Kutnauerovo Náměstí","Kutnohorská","Kutnohorská","Kutrovická","Kuttelwascherova","Kutvirtova","Kučerova","Kučerové","Kuťatská","Kuželova","Kvapilova","Kvasinská","Kvestorská","Květinková","Květinářská","Květnická","Květnová","Květnového Povstání","Květnového Povstání","Květnového Vítězství","Květnového Vítězství","Květná","Květoslavova","Květová","Kyjevská","Kyjevská","Kyjovská","Kyjská","Kyjská","Kykalova","Kymrova","Kynická","Kyselova","Kyslíková","Kysucká","Kysúcká","Kytlická","Kytínská","Kácovská","Kádnerova","Kálikova","Kálmánova","Káranská","Křejpského","Křelovická","Křemelná","Křemencova","Křemenná","Křemenáčová","Křemílkova","Křenická","Křenova","Křepelčí","Křepelčí","Křesadlova","Křesanovská","Křeslická","Křesomyslova","Křešínská","Křimická","Křimovská","Křivatcová","Křivenická","Křivoklátská","Křivá","Křičkova","Křišťanova","Křišťálová","Křižovnická","Křižovnické Nám.","Křižovnické Náměstí","Křižíkova","Křižíkova","Křovinovo Nám.","Křovinovo Náměstí","Křtinská","Kříženeckého Nám.","Kříženeckého Náměstí","Křížkovského","Křížová","Křížová","Labská","Labětínská","Ladislava Coňka","Ladova","Laglerové","Lahovská","Lahovská","Lamačova","Langweilova","Lannova","Lanýžová","Lanžhotská","Lanžovská","Laténská","Laubova","Laudonova","Laudova","Laurinova","Lazarská","Lazarská","Lačnovská","Lažanská","Lažanská","Lažanského","Lebeděvova","Ledařská","Ledecká","Ledečská","Ledkovská","Lednická","Lednová","Ledvická","Ledvinova","Ledč","Ledčická","Legerova","Legerova","Legerova","Legerova","Legionářů","Lehárova","Leitzova","Leknínová","Leopoldova","Leskovecká","Lesnická","Lesného","Lesní","Lessnerova","Lesáků","Letců","Letecká","Letenská","Letenské Nám.","Letenské Nám.","Letenské Náměstí","Letenské Náměstí","Letenské Sady","Letní","Letohradská","Letovská","Letňanská","Letňanská","Levandulová","Levobřežní","Levského","Levá","Lexova","Lečkova","Lešanská","Lešenská","Lešetínská","Lešovská","Leštínská","Lhenická","Lhotecká","Lhotecká","Lhotská","Lhotákova","Liberecká","Liberijská","Libečkova","Libeňská","Libeňský Ostrov","Libeňský Ostrov","Libeřská","Libichovská","Libická","Libišanská","Libišská","Libkovská","Liblická","Liblická","Libochovická","Libocká","Liborova","Libotovská","Libovická","Libočanská","Liboňovská","Libošovická","Libuňská","Libušina","Libušská","Libušská","Libušská","Libušská","Libáňská","Libínská","Libčanská","Libčická","Liběchovská","Libědická","Liběšická","Libřická","Lichá","Lidečská","Lidická","Lidického","Lihovarská","Liliová","Lilková","Limuzská","Limuzská","Lindavská","Lindleyova","Lindnerova","Linhartova","Linhartská","Lipanská","Lipecká","Lipenecká","Lipenská","Lipenská","Lipenské Nám.","Lipenské Náměstí","Lipnická","Lipoltická","Lipovická","Lipovská","Lipová Alej","Lipové Náměstí","Lipského","Lipí","Lisabonská","Lisabonská","Listopadová","Lisztova","Litavská","Litevská","Litická","Litochlebská","Litoměřická","Litoměřická","Litovická","Litošická","Litošická","Litožnická","Litvínovská","Litvínovská","Livornská","Lišanská","Lišická","Liškova","Lišovická","Liščí","Liščí","Lnářská","Lobečská","Lochenická","Lochkovská","Lochotínská","Lodecká","Lodní Mlýny","Loděnická","Lodžská","Lodžská","Lohenická","Lohniského","Lojovická","Lojovická","Lojovická","Lolkova","Lomařská","Lomecká","Lomená","Lomnická","Lomnického","Lomová","Londýnská","Loosova","Lopatecká","Lopatecká","Lopuchová","Loretánská","Loretánské Nám.","Loretánské Náměstí","Losinská","Lotyšská","Loucká","Loudova","Lounská","Lounských","Loutkářská","Loučanská","Loučimská","Loučná","Louňovická","Lovecká","Lovosická","Lovosická","Lovosická","Lovčenská","Lovčická","Lozická","Lošetická","Lošáková","Lstibořská","Lubenecká","Lublaňská","Lublaňská","Lublinská","Lubnická","Lucemburská","Lucemburská","Lucinková","Ludmilina","Ludvíkova","Luhovská","Lukavecká","Lukavského","Lukešova","Lukešova","Lukovská","Lukášova","Lumiérů","Lumírova","Lumírova","Luníkovská","Lupenická","Lupáčova","Lutínská","Luční","Luštěnická","Lužanská","Lužecká","Lužická","Lužnická","Lužná","Lužní","Lužská","Lvovská","Lysinská","Lysolajská","Lysolajské Údolí","Lyčkovo Nám.","Lyčkovo Náměstí","Lyžařská","Ládevská","Lánovská","Lánská","Lásenická","Láskova","Lázeňská","Lékařská","Lékořicová","Líbalova","Líbeznická","Lípová","Lískovická","Lísková","Líšnická","Lýskova","M. J. Lermontova","Macešková","Macharovo Nám.","Macharovo Náměstí","Machatého","Machkova","Machnova","Machovcova","Machovická","Machovská","Machuldova","Macháčkova","Madarova","Madaťjanova","Madridská","Magd. Rettigové","Magdalény Rettigové","Magistrů","Magnitogorská","Mahenova","Mahlerovy Sady","Mahulenina","Maiselova","Maiselova","Majerové","Majerského","Makedonská","Makovská","Makovského","Maková","Malachitová","Malebná","Malenická","Malešická","Malešická","Malešická","Malešické Nám.","Malešické Náměstí","Malešovská","Malinová","Maličká","Malkovského","Malletova","Malletova","Malobřevnovská","Malostranské Nábř.","Malostranské Nábřeží","Malostranské Náměstí","Malotická","Malovická","Maltézské Nám.","Maltézské Náměstí","Malá","Malá Bylanská","Malá Houdova","Malá Klášterní","Malá Lada","Malá Michnovka","Malá Plynární","Malá Skloněná","Malá Smidarská","Malá Tyršovka","Malá Xaveriova","Malá Štupartská","Malá Štěpánská","Malátova","Malé Nám.","Malé Náměstí","Malého","Malínská","Malířská","Malý Dvůr","Malý Okrouhlík","Malšovická","Malšovské Nám.","Malšovské Náměstí","Mandloňová","Mandova","Mansfeldova","Manská Zahrada","Mantovská","Manželů Dostálových","Manželů Kotrbových","Manželů Lyčkových","Marciho","Marešova","Marie Cibulkové","Marie Podvalové","Mariánská","Mariánská","Mariánské Hradby","Mariánské Hradby","Mariánské Nám.","Mariánské Náměstí","Markova","Markupova","Markušova","Markvartická","Markyta","Markétská","Maroldova","Martinelliho","Martinická","Martinova","Martinovská","Martinská","Marty Krásové","Marvanova","Maršovská","Masarykovo Nábř.","Masarykovo Nábř.","Masarykovo Nábřeží","Masarykovo Nábřeží","Masná","Matek","Matenská","Maternova","Mateřská","Mateřídoušková","Matjuchinova","Matoušova","Mattioliho","Matúškova","Matěchova","Matějkova","Matějovského","Matějská","Maxovská","Mazancova","Mazovská","Mazurská","Maďarská","Maňákova","Mařatkova","Mařákova","Maříkova","Mašatova","Maškova","Mašovická","Maštěřovského","Mašínova","Mechovka","Mechová","Medinská","Medkova","Medlovská","Medová","Meduňková","Meinlinova","Mejstříkova","Melantrichova","Meliorační","Melodická","Melounová","Menclova","Mendelova","Mendíků","Menšíkova","Menšíkovská","Merhoutova","Merkurova","Meruňková","Meskářova","Meteorologická","Meteorologická","Metodějova","Metujská","Mexická","Mezi Chatami","Mezi Domky","Mezi Domy","Mezi Humny","Mezi Lysinami","Mezi Lány","Mezi Poli","Mezi Potoky","Mezi Rolemi","Mezi Rybníky","Mezi Sklady","Mezi Stráněmi","Mezi Vodami","Mezi Úvozy","Mezi Školami","Mezibranská","Mezihorská","Mezihoří","Mezilehlá","Mezilesní","Mezilesí","Meziluží","Mezipolí","Mezitraťová","Mezitraťová","Mezitraťová","Mezivrší","Meziškolská","Mečislavova","Mečovská","Mečíková","Michalovicova","Michalská","Michelangelova","Michelská","Michelská","Michnova","Michnovka","Mickiewiczova","Mikanova","Mikova","Mikovcova","Mikovická","Mikulandská","Mikuleckého","Mikulova","Mikulovická","Mikuláše Z Husi","Mikulášská","Mikulčická","Mikšovského","Milady Horákové","Milady Horákové","Milady Horákové","Milady Horákové","Milady Horákové","Milana Kadlece","Milenovská","Milerova","Miletická","Miletínská","Milevská","Milevská","Milešovská","Milotická","Milovická","Milovická","Milánská","Milínská","Milíčova","Milíčovská","Mimoňská","Minaříkova","Minerální","Minická","Minská","Miranova","Miroslava Hajna","Miroslava Hamra","Mirotická","Mirotická","Mirovická","Mirošovická","Mirošovská","Mistrovská","Mistřínská","Miřetická","Miškovická","Mladenovova","Mladoboleslavská","Mladoboleslavská","Mladoboleslavská","Mladoboleslavská","Mladoboleslavská","Mladotická","Mladotova","Mladých","Mladých Běchovic","Mladčina","Mladějovská","Mlynářská","Mládeže","Mládežnická","Mládkova","Mládí","Mlázovická","Mlékárenská","Mlýnská","Mlýnská","Mnichovická","Mochovská","Mochovská","Modenská","Modlanská","Modletická","Modletínská","Modravská","Modrá","Modrého","Modřanská","Modřanská","Modřanská","Modřanská","Modřínová","Mohelnická","Mohylová","Mojmírova","Mokrá","Mokřanská","Moldavská","Molitorovská","Molákova","Mongolská","Moravanská","Moravanů","Moravská","Morseova","Morstadtova","Morušová","Morušová","Morávkova","Moskevská","Mostecká","Motolská","Moulíkova","Moysesova","Mozambická","Mozartova","Mošnova","Možného","Mramorová","Mratínská","Mračnická","Mrkosova","Mrkvičkova","Mrákovská","Mrázkova","Mrázovka","Mráčkova","Mrštíkova","Mrštíkova","Muchomůrková","Muchova","Mukařovská","Mukařovského","Murgašova","Murmanská","Musilova","Musorgského","Musílkova","Mutěnínská","Muzejní","Muzikova","Muškova","Mydlářka","Myjavská","Mylnerovka","Myslbekova","Myslbekova","Myslivecká","Myslivečkova","Myslíkova","Myslíkova","Myšlínská","Máchova","Máchova","Mádrova","Májovková","Májová","Málkovská","Mánesova","Márova","Máslova","Máslovická","Mátová","Mílovská","Mílová","Mírová","Mírového Hnutí","Mírového Hnutí","Místecká","Míčova","Míšeňská","Míšovická","Münzbergerových","Mýtní","Měchenická","Měcholupská","Měděnecká","Mělická","Mělnická","Městská","Měsíčková","Měsíční","Měšická","Měšínská","Mšecká","Mšenská","N. A. Někrasova","Na Babách","Na Babě","Na Bahnech","Na Balkáně","Na Balkáně","Na Bambouzku","Na Baních","Na Barikádách","Na Bartoňce","Na Bateriích","Na Bateriích","Na Bačálkách","Na Baště Sv. Jiří","Na Baště Sv. Ludmily","Na Baště Sv. Tomáše","Na Bendovce","Na Benátkách","Na Beránce","Na Betonce","Na Bečvářce","Na Bitevní Pláni","Na Blanici","Na Blanseku","Na Blatech","Na Bluku","Na Bohdalci","Na Bojišti","Na Boleslavce","Na Borovém","Na Botiči","Na Botě","Na Božkovně","Na Brabenci","Na Brázdě","Na Bučance","Na Bělici","Na Bělidle","Na Bělohorské Pláni","Na Břehu","Na Břevnovské Pláni","Na Březince","Na Celné","Na Cestě","Na Chmelnici","Na Chobotě","Na Chodovci","Na Chvalce","Na Chvalské Tvrzi","Na Cihelně","Na Cihlářce","Na Cikorce","Na Cikánce","Na Cimbále","Na Cípu","Na Císařce","Na Dionysce","Na Dlouhé Mezi","Na Dlouhé Mezi","Na Dlouhé Mezi","Na Dlouhé Mezi","Na Dlouhém Lánu","Na Dlážděnce","Na Dlážděnce","Na Dlážděnce","Na Dlážděnce","Na Dobešce","Na Dobré Vodě","Na Dolinách","Na Dolinách","Na Dolnici","Na Dolíku","Na Domovině","Na Doubkové","Na Drahách","Na Dračkách","Na Dračkách","Na Dražkách","Na Dubině","Na Dvorcích","Na Dyrince","Na Dílcích","Na Dílech","Na Dědince","Na Dědinách","Na Děkance","Na Děkance","Na Dělostřílnách","Na Džbánu","Na Fabiánce","Na Farkách","Na Farkáně I","Na Farkáně Ii","Na Farkáně Iii","Na Farkáně Iv","Na Fialce I","Na Fialce Ii","Na Fidlovačce","Na Fišerce","Na Florenci","Na Florenci","Na Floře","Na Folimance","Na Formance","Na Františku","Na Groši","Na Habrovce","Na Habrové","Na Hanspaulce","Na Harfě","Na Havránce","Na Hlavní","Na Hlinách","Na Hloubětínské Vinici","Na Hlídce","Na Holém Vrchu","Na Homolce","Na Homoli","Na Horce","Na Horkách","Na Hradním Vodovodu","Na Hranicích","Na Hranicích","Na Hrobci","Na Hroudě","Na Hroudě","Na Hrádku","Na Hrázi","Na Hubálce","Na Humnech","Na Hupech","Na Hutmance","Na Hutích","Na Hutích","Na Hvížďalce","Na Hvězdárně","Na Hádku","Na Hájku","Na Hřebenech I","Na Hřebenech Ii","Na Hřebenech Ii","Na Hřebenkách","Na Hůrce","Na Jabloňce","Na Jabloňce","Na Jahodách","Na Jarově","Na Jelenách","Na Jelenách","Na Jetelce","Na Jetelce","Na Jezerce","Na Jezerách","Na Jitřence","Na Jivinách","Na Julisce","Na Jílech","Na Jílu","Na Kameni","Na Kampě","Na Kapličce","Na Karlovce","Na Kavčích Horách","Na Kazance","Na Kačence","Na Kačerově","Na Kindlovce","Na Klaudiánce","Na Klaudiánce","Na Kleovce","Na Klikovce","Na Klimentce","Na Klášterním","Na Klínech","Na Klínech","Na Klínku","Na Knížce","Na Kocourkách","Na Kocínce","Na Kodymce","Na Kolejním Statku","Na Komořsku","Na Komořsku","Na Konci","Na Konečné","Na Konvářce","Na Kopanině","Na Kopci","Na Kopečku","Na Kopytářce","Na Korunce","Na Korábě","Na Korálově","Na Kotlářce","Na Koupaliště","Na Kovárně","Na Kozačce","Na Kozinci","Na Košince","Na Košíku","Na Kraji","Na Krocínce","Na Krutci","Na Královce","Na Královně","Na Krčské Stráni","Na Kuthence","Na Kvintusce","Na Květnici","Na Kyjově","Na Křemínku","Na Křenkově","Na Křečku","Na Křivce","Na Křivce","Na Křivce","Na Křivině","Na Křtině","Na Křídle","Na Labuťce","Na Labuťce I","Na Labuťce Ii","Na Labuťce Iii","Na Labuťce Iv","Na Ladách","Na Lahovské","Na Laurové","Na Lepším","Na Lhotech","Na Lhotkách","Na Libušince","Na Losách","Na Louce","Na Loukoti","Na Louži","Na Loužku","Na Luka","Na Lukách","Na Luzích","Na Lučinách","Na Lužci","Na Lysinách","Na Lysině","Na Ládví","Na Lánech","Na Lávce","Na Lázeňce","Na Líše","Na Malovance","Na Malé Šárce","Na Malém Klínu","Na Maninách","Na Manoušce","Na Markvartce","Na Marně","Na Mezi","Na Mlejnku","Na Moklině","Na Mokřině","Na Moráni","Na Močále","Na Mrázovce","Na Musilech","Na Mírách","Na Míčánce","Na Míčánkách","Na Mýtě","Na Můstku","Na Neklance","Na Nežárce","Na Nivách","Na Novině","Na Nové Silnici","Na Náspu","Na Návrati","Na Návrší","Na Návsi","Na Obrátce","Na Obrátce","Na Odbočce","Na Ohradě","Na Okraji","Na Okraji","Na Okrouhlíku","Na Okruhu","Na Opyši","Na Opyši","Na Ostrohu","Na Ostrově","Na Ostrůvku","Na Ovesníku","Na Ovčinách","Na Ovčáckém","Na Ovčíně","Na Ořechovce","Na Padesátníku I","Na Padesátníku Ii","Na Padesátníku Iii","Na Padesátníku Iv","Na Padesátníku V","Na Padesátém","Na Pahorku","Na Pahoubce","Na Palouku","Na Paloučku","Na Pankráci","Na Panorámě","Na Parcelách","Na Parkáně","Na Parukářce","Na Pasece","Na Pasece","Na Pastvinách","Na Pavím Vrchu","Na Pazderce","Na Pecích","Na Pernikářce","Na Perštýně","Na Petynce","Na Petynce","Na Petřinách","Na Petřinách","Na Placích","Na Planině","Na Plužině","Na Plzeňce","Na Plácku","Na Pláni","Na Plískavě","Na Podkovce","Na Pokraji","Na Pokraji","Na Poli","Na Polníku","Na Pomezí","Na Pomezí","Na Popelce","Na Popelce","Na Potůčku","Na Poustkách","Na Pozorce","Na Poříčním Právu","Na Poříčí","Na Poříčí","Na Požáru","Na Požáru","Na Pramenech","Na Pramenech","Na Prosecké Vyhlídce","Na Proseku","Na Prostřední Cestě","Na Proutcích","Na Provaznici","Na Průhonu","Na Průseku","Na Pučálce","Na Pískovně","Na Písku","Na Pískách","Na Pěkné Vyhlídce","Na Pěšinách","Na Pěšinách","Na Pěšině","Na Předevsi","Na Přesypu","Na Přesypu","Na Přídole","Na Příkopě","Na Příkopě","Na Přívozích","Na Příčce","Na Příčné Mezi","Na Radosti","Na Radosti","Na Rampách","Na Rejdišti","Na Roháčku","Na Rokytce","Na Rolích","Na Rovinách","Na Rovině","Na Rovni","Na Rovnosti","Na Rovném","Na Rozcestí","Na Rozdílu","Na Rozdílu","Na Rozhledu","Na Rozhraní","Na Rozhraní","Na Rozvodí","Na Ročkově","Na Rybníčku","Na Rybářce","Na Rybářce","Na Rymáni","Na Rynku","Na Salabce","Na Samotě","Na Schodech","Na Schůdkách","Na Sedlišti","Na Sekyrce","Na Selském","Na Seníku","Na Skalce","Na Skalách","Na Sklonku","Na Skále","Na Slatince","Na Slatinách","Na Slatinách","Na Slatinách","Na Slavíkově","Na Slovance","Na Slupi","Na Slupi","Na Smetance","Na Souvrati","Na Souvrati","Na Spojce","Na Spádu","Na Spáleništi","Na Srpečku","Na Srázu","Na Srážku","Na Staré","Na Staré Cestě","Na Staré Návsi","Na Staré Silnici","Na Staré Vinici","Na Stezce","Na Stezce","Na Struze","Na Stráni","Na Stráňkách","Na Stráži","Na Stráži","Na Strži","Na Strži","Na Stupních","Na Stárce","Na Stírce","Na Střelnici","Na Svahu","Na Svěcence","Na Sychrově","Na Sychrově","Na Sypkém","Na Sypčině","Na Sádce","Na Terase","Na Topolce","Na Topolce","Na Truhlářce","Na Tržišti","Na Tykačce","Na Táboře","Na Třebešíně","Na Třebešíně","Na Universitním Statku","Na Usedlosti","Na Vackově","Na Valech","Na Valentince","Na Vartě","Na Vaňhově","Na Veselí","Na Vidouli","Na Viktorce","Na Vinici","Na Viničce","Na Viničkách","Na Viničních Horách","Na Vinobraní","Na Vinohradu","Na Višňovce","Na Vlasačce","Na Vlastní Půdě","Na Vlastním","Na Vlku","Na Vlčovce","Na Volánové","Na Vrchmezí","Na Vrchmezí","Na Vrchmezí","Na Vrcholu","Na Vrchu","Na Vrchu","Na Vrchách","Na Vrchách","Na Vrstevnici","Na Vrstvách","Na Vršku","Na Vrškách","Na Vrších","Na Vrších","Na Vydrholci","Na Vyhlídce","Na Vypichu","Na Vypichu","Na Vysoké I","Na Vysoké I","Na Vysoké Ii","Na Vysočanských Vinicích","Na Vysočině","Na Václavce","Na Vápence","Na Vápenném","Na Vítězné Pláni","Na Výběžku","Na Výhledech","Na Výhonku","Na Výrovně","Na Výsledku I","Na Výsledku Ii","Na Výsluní","Na Výspě","Na Výspě","Na Výstupu","Na Výtoni","Na Výši","Na Výšince","Na Výšinách","Na Výšině","Na Věnečku","Na Větrníku","Na Větrníku","Na Větrově","Na Větru","Na Zahrádkách","Na Zatlance","Na Zavadilce","Na Zbořenci","Na Zderaze","Na Zedníkové","Na Zelené Louce","Na Zemance","Na Zkratce","Na Zlatnici","Na Zlaté","Na Zlíchově","Na Zlíchově","Na Zmrzlíku","Na Znělci","Na Zvoničce","Na Zábradlí","Na Záhonech","Na Zájezdu","Na Zámecké","Na Zámkách","Na Zámyšli","Na Zástřelu","Na Zástřelu","Na Zátorce","Na Zátorách","Na Závěji","Na Úbočí","Na Úhoru","Na Úlehli","Na Úseku","Na Úspěchu","Na Černé Hoře","Na Černé Strouze","Na Černém Vrchu","Na Července","Na Čečeličce","Na Čihadle","Na Čisté","Na Říháku","Na Šabatce","Na Šachtě","Na Šafránce","Na Šancích","Na Šedivé","Na Šejdru","Na Šejdru","Na Šmukýřce","Na Špejcharu","Na Špitálce","Na Špitálsku","Na Štamberku","Na Štěpnici","Na Šubě","Na Šumavě","Na Šutce","Na Švihance","Na Šťáhlavce","Na Žertvách","Na Žvahově","Naardenská","Nad Akcízem","Nad Akáty","Nad Alejí","Nad Belvederem","Nad Belárií","Nad Berounkou","Nad Bertramkou","Nad Botičem","Nad Bořislavkou","Nad Bořislavkou","Nad Branickým Pivovarem","Nad Brůdkem","Nad Brůdkem","Nad Buďánkami I","Nad Buďánkami Ii","Nad Buďánkami Iii","Nad Cementárnou","Nad Chaloupkami","Nad Chuchlí","Nad Cihelnou","Nad Dalejským Údolím","Nad Doly","Nad Dolíky","Nad Drahou","Nad Dubovým Mlýnem","Nad Dvorem","Nad Dálnicí","Nad Elektrárnou","Nad Elektrárnou","Nad Flajšnerkou","Nad Habrovkou","Nad Havlem","Nad Helmrovkou","Nad Hercovkou","Nad Hercovkou","Nad Hliníkem","Nad Hliníkem","Nad Horizontem","Nad Hradním Potokem","Nad Hradním Vodojemem","Nad Husovými Sady","Nad Hutěmi","Nad Hutěmi","Nad Hájem","Nad Hřištěm","Nad Jenerálkou","Nad Jetelkou","Nad Jezem","Nad Jezerkou","Nad Jordánkem","Nad Kajetánkou","Nad Kamínkou","Nad Kaplankou","Nad Kapličkou","Nad Kavalírkou","Nad Kazankou","Nad Kazínem","Nad Kelerkou","Nad Kesnerkou","Nad Klamovkou","Nad Klikovkou","Nad Klíčovem","Nad Kolonií","Nad Kolčavkou","Nad Komornickou","Nad Konečnou","Nad Konvářkou","Nad Kostelem","Nad Kotlaskou I","Nad Kotlaskou Ii","Nad Kotlaskou Iii","Nad Kotlaskou Iv","Nad Kotlaskou V","Nad Koulkou","Nad Koupadly","Nad Koupalištěm","Nad Košinkou","Nad Košíkem","Nad Krocínkou","Nad Krocínkou","Nad Královskou Oborou","Nad Kuliškou","Nad Kundratkou","Nad Kundratkou","Nad Kundratkou","Nad Křížkem","Nad Laurovou","Nad Lesem","Nad Lesním Divadlem","Nad Lesíkem","Nad Libeňským Nádražím","Nad Libeřským Potokem","Nad Libušským Potokem","Nad Libří","Nad Lomem","Nad Lomy","Nad Lukami","Nad Lávkou","Nad Malým Mýtem","Nad Manovkou","Nad Markytou","Nad Mazankou","Nad Meandry","Nad Mlynářkou","Nad Mlýnem","Nad Mlýnským Potokem","Nad Mohylou","Nad Mokřinou","Nad Mostem","Nad Motolskou Nemocnicí","Nad Motolskou Nemocnicí","Nad Mrázovkou","Nad Mušlovkou","Nad Mušlovkou","Nad Novou Libní","Nad Nuslemi","Nad Nádražím","Nad Nádrží","Nad Náhonem","Nad Náměstím","Nad Návsí","Nad Obcí I","Nad Obcí Ii","Nad Octárnou","Nad Odbočkou","Nad Ohradou","Nad Okrouhlíkem","Nad Olšinami","Nad Olšinami","Nad Ondřejovem","Nad Opatovem","Nad Ostrovem","Nad Pahorkem","Nad Palatou","Nad Panenskou","Nad Parkem","Nad Parkánem","Nad Paťankou","Nad Pentlovkou","Nad Petruskou","Nad Petynkou","Nad Plynovodem","Nad Podbabskou Skálou","Nad Pomníkem","Nad Popelkou","Nad Popelářkou","Nad Potůčkem","Nad Prahou","Nad Pramenem","Nad Primaskou","Nad Primaskou","Nad Propustí","Nad Pruhy","Nad Pískovnou","Nad Přehradou","Nad Přívozem","Nad Radotínem","Nad Rohatci","Nad Roklí","Nad Rokoskou","Nad Rokytkou","Nad Rybníkem","Nad Rybníkem","Nad Rybníčky","Nad Ryšánkou","Nad Rážákem","Nad Sadem","Nad Sady","Nad Santoškou","Nad Schody","Nad Skálou","Nad Slávií","Nad Slávií","Nad Smetankou","Nad Sokolovnou","Nad Soutokem","Nad Soutokem","Nad Splavem","Nad Spádem","Nad Spáleným Mlýnem","Nad Stanicí","Nad Starou Pískovnou","Nad Statkem","Nad Strakovkou","Nad Strouhou","Nad Strání","Nad Strání","Nad Studánkou","Nad Svahem","Nad Sýpkou","Nad Tejnkou","Nad Teplárnou","Nad Topoly","Nad Tratí","Nad Trnkovem","Nad Trojou","Nad Turbovou","Nad Třebešínem I","Nad Třebešínem Ii","Nad Třebešínem Ii","Nad Třebešínem Iii","Nad Třebešínem Iii","Nad Vavrouškou","Nad Vernerákem","Nad Vinicí","Nad Vinným Potokem","Nad Vinným Potokem","Nad Vinným Potokem","Nad Vinohradem","Nad Višňovkou","Nad Vltavou","Nad Vodovodem","Nad Vodovodem","Nad Vojenským Hřbitovem","Nad Vokolky","Nad Volyňkou","Nad Vrbami","Nad Vrstvami","Nad Vršovskou Horou","Nad Vsí","Nad Vysočany","Nad Václavkou","Nad Výpustí","Nad Výšinkou","Nad Zahradnictvím","Nad Zatáčkou","Nad Zavážkou","Nad Zbraslaví","Nad Zbrojnicí","Nad Zemankou","Nad Zemankou","Nad Zlatnicí","Nad Zlíchovem","Nad Záložnou","Nad Zámečkem","Nad Zámečnicí","Nad Zátiším","Nad Závodištěm","Nad Závěrkou","Nad Údolím","Nad Údolím Hvězd","Nad Úpadem","Nad Úvozem","Nad Úžlabinou","Nad Úžlabinou","Nad Šafránkou","Nad Šancemi","Nad Šauerovými Sady","Nad Šeberákem","Nad Šejdrem","Nad Šestikopy","Nad Šetelkou","Nad Štolou","Nad Šutkou","Nad Šálkovnou","Nad Šárkou","Nad Želivkou","Nad Žlábkem","Nademlejnská","Nadějovská","Narcisová","Naskové","Natanaelka","Navarova","Navigátorů","Navrátilova","Načeradecká","Načešická","Neapolská","Nebeského","Nebovidská","Nebozízek-Sady","Nebušická","Nechanická","Nechanského","Nechvalická","Nechvílova","Nechybova","Nedašovská","Nedbalova","Nedokončená","Nedokončená","Nedošínské","Nedražická","Nedvědická","Nedvědovo Nám.","Nedvědovo Náměstí","Nedvězská","Neffova","Nefritová","Neherovská","Nehvizdská","Nehvizdská","Nejdkova","Neklanova","Nekvasilova","Nekázanka","Nemocniční","Nemošická","Nepasické Nám.","Nepasické Náměstí","Nepelova","Nepilova","Nepomucká","Nepomuckých","Nepovolená","Nepravidelná","Neprůjezdná","Nepálská","Neratovická","Nerudova","Nerudova","Nesměřická","Nespecká","Nesvadbova","Netlucká","Netluky","Netolická","Netušilská","Netínská","Netřebická","Netřebská","Neumannova","Neustupného","Neužilova","Nevanova","Neveklovská","Newtonova","Nezamyslova","Nezdova","Nezvalova","Nečova","Nešporova","Nežárská","Nickerleho","Niederleho","Nikodémova","Nikoly Tesly","Nikoly Vapcarova","Niská","Nitranská","Nitranská","Nivnická","Nobelova","Norbertov","Norská","Nosická","Nosticova","Notečská","Noutonická","Nouzov","Nouzovské Nám.","Nouzovské Náměstí","Nouzová","Novgorodská","Novobohdalecká","Novoborská","Novoborská","Novochuchelská","Novodvorská","Novodvorská","Novodvorská","Novodvorská","Novohradská","Novohrádecká","Novohrádecká","Novolhotská","Novolipanská","Novomeského","Novomeského","Novomlýnská","Novopacká","Novopetrovická","Novorossijská","Novosibřinská","Novostrašnická","Novosuchdolská","Novosvětská","Novotného Lávka","Novoveská","Novoveská","Novovysočanská","Novovysočanská","Novovysočanská","Novozámecká","Novozámecká","Novoškolská","Novoštěrboholská","Nová","Nová Cesta","Nová Kolonie","Nová Ves","Nová Ves","Nová Šárka","Novákovo Nám.","Novákovo Náměstí","Novákových","Nové Domy","Nové Dvory","Nové Mlýny","Nové Náměstí","Nového","Nový Lesík","Nový Svět","Nový Zlíchov","Nový Zlíchov","Nupacká","Nuselská","Nuselská","Nučická","Nušlova","Nymburská","Nábř. Edvarda Beneše","Nábř. Edvarda Beneše","Nábř. Edvarda Beneše","Nábř. Kapitána Jaroše","Nábř. Kapitána Jaroše","Nábřežní","Nábřeží Edvarda Beneše","Nábřeží Edvarda Beneše","Nábřeží Edvarda Beneše","Nábřeží Kapitána Jaroše","Nábřeží Ludvíka Svobody","Náchodská","Nádražní","Nádražní","Nádvorní","Náhorní","Nákupní","Nám. 14. Října","Nám. 25. Března","Nám. Antonína Pecáka","Nám. Barikád","Nám. Bořislavka","Nám. Bratří Synků","Nám. Chuchelských Bojovníků","Nám. Chuchleských Bojovníků","Nám. Curieových","Nám. Dr. V. Holého","Nám. Franze Kafky","Nám. Generála Kutlvašra","Nám. Hrdinů","Nám. I. P. Pavlova","Nám. Interbrigády","Nám. Jana Palacha","Nám. Jana Palacha","Nám. Jiřího Berana","Nám. Jiřího Z Lobkovic","Nám. Jiřího Z Poděbrad","Nám. Jiřího Z Poděbrad","Nám. Josefa Machka","Nám. Kinských","Nám. Kinských","Nám. Mezi Zahrádkami","Nám. Na Balabence","Nám. Na Farkáně","Nám. Na Lužinách","Nám. Na Santince","Nám. Na Stráži","Nám. Omladiny","Nám. Osvoboditelů","Nám. Padlých","Nám. Pod Kaštany","Nám. Pod Lípou","Nám. Prezidenta Masaryka","Nám. Před Bateriemi","Nám. Republiky","Nám. Smiřických","Nám. Svatopluka Čecha","Nám. Svobody","Nám. U Lva","Nám. U Lípy Svobody","Nám. U Svatého Jiří","Nám. Winstona Churchilla","Nám. Českého Povstání","Nám.Organizace Spojených Národ","Nám.Plukovníka Vlčka","Náměstí 14. Října","Náměstí 25. Března","Náměstí Antonína Pecáka","Náměstí Barikád","Náměstí Bořislavka","Náměstí Bořislavka","Náměstí Bratří Jandusů","Náměstí Bratří Synků","Náměstí Chuchelských Bojovníků","Náměstí Curieových","Náměstí Dr. Václava Holého","Náměstí Generála Kutlvašra","Náměstí Hrdinů","Náměstí I. P. Pavlova","Náměstí Interbrigády","Náměstí Jana Palacha","Náměstí Jana Palacha","Náměstí Jiřího Berana","Náměstí Jiřího Z Lobkovic","Náměstí Jiřího Z Poděbrad","Náměstí Jiřího Z Poděbrad","Náměstí Josefa Machka","Náměstí Junkových","Náměstí Kinských","Náměstí Kinských","Náměstí Kosmonautů","Náměstí Mezi Zahrádkami","Náměstí Míru","Náměstí Na Balabence","Náměstí Na Farkáně","Náměstí Na Lužinách","Náměstí Na Santince","Náměstí Na Stráži","Náměstí Omladiny","Náměstí Organizace Spojených Národů","Náměstí Osvoboditelů","Náměstí Padlých","Náměstí Plukovníka Vlčka","Náměstí Pod Emauzy","Náměstí Pod Kaštany","Náměstí Pod Lípou","Náměstí Prezidenta Masaryka","Náměstí Protifašistických Bojovníků","Náměstí Před Bateriemi","Náměstí Přátelství","Náměstí Republiky","Náměstí Republiky","Náměstí Smiřických","Náměstí Sv. Petra A Pavla","Náměstí Svatopluka Čecha","Náměstí Svobody","Náměstí U Lva","Náměstí U Lípy Svobody","Náměstí U Svatého Jiří","Náměstí Winstona Churchilla","Náměstí Zdenky Braunerové","Náměstí Českého Povstání","Náplavní","Náprstkova","Národní","Národní","Národní Obrany","Národních Hrdinů","Nárožní","Násirovo Nám.","Násirovo Náměstí","Nástrojářská","Návazná","Návršní","Návětrná","Návětrná","Názovská","Nýdecká","Nýrská","Nýřanská","Němčická","Něvská","Obchodní","Obchodní Nám.","Obchodní Náměstí","Obilní","Objízdná","Oblouková","Obora Hvězda","Oborská","Obrataňská","Obrovského","Obsiny","Obslužná","Obvodová","Obědovická","Obětí 6. Května","Obětí 6.Května","Ocelkova","Ocelářská","Ocelářská","Ocelíkova","Ochozská","Ochranovská","Od Rozcestí","Od Vysoké","Od Školy","Odboje","Odborů","Odbočná","Oddechová","Oddělená","Oderská","Odlehlá","Ohmova","Ohnivcova","Ohnišťanská","Ohradní","Ohradní","Ohradská","Ohradské Nám.","Ohradské Náměstí","Ohrobecká","Okenská","Okořská","Okrajní","Okrajová","Okrajová","Okrasná","Okrouhlická","Okrouhlíkova","Okrová","Okruhová","Okružní","Okružní","Okřínecká","Olbrachtova","Olbramovická","Oldřichova","Olešnická","Olešská","Olgy Havlové","Olivova","Olomoucká","Olympijská","Olšanská","Olšanské Nám.","Olšanské Náměstí","Olšovická","Olšová","Olštýnská","Omladinářů","Omská","Ondřejovská","Ondříčkova","Ondříčkova","Onšovecká","Opata Konráda","Opatovická","Opatovská","Opatovská","Opatřilka","Opatřilka","Opařanská","Oplanská","Opletalova","Opolská","Opočenská","Opočínská","Opravářská","Opuková","Opálkova","Opálová","Oravská","Ordovická","Orebitská","Orelská","Orlická","Ortenovo Náměstí","Osadní","Osamocená","Osecká","Osetá","Osická","Osiková","Osinalická","Osluněná","Osmého Listopadu","Osnická","Osnická","Osnická","Ostravická","Ostravská","Ostromečská","Ostrov Štvanice","Ostrovní","Ostrovského","Ostruženská","Ostružinová","Ostrá","Ostrčilovo Nám.","Ostrčilovo Náměstí","Ostředecká","Ostřicová","Osvobození","Osvětová","Otakara Vrby","Otakarova","Otavova","Otavova","Otavská","Otevřená","Otická","Otlíkovská","Otopašská","Otovická","Otradovická","Ottova","Otvovická","Oty Pavla","Otínská","Otěšínská","Ouholická","Ouhrabkova","Ovenecká","Ovenecká","Ovesná","Ovocná","Ovocnářská","Ovocný Trh","Ovsíková","Oválová","Ovčárská","Ovčí Hájek","Ořechová","Ořešská","Paběnická","Paběnická","Pacajevova","Paceřická","Pacholíkova","Pacovská","Paculova","Padovská","Pajerova","Pakoměřická","Palackého","Palackého Nám.","Palackého Náměstí","Palmetová","Palmovka","Paláskova","Pampelišková","Pancířova","Panelová","Panenky","Panenská","Pankrácké Náměstí","Panská","Panská Zahrada","Panský Dvůr","Panuškova","Paprsková","Papírenská","Papírníkova","Parašutistů","Pardubická","Park Přátelství","Parková","Parléřova","Parléřova","Parmská","Paroplavební","Partyzánská","Pasecká","Pasteurova","Pastevců","Patočkova","Patočkova","Patočkova","Pavelkova","Pavla Beneše","Pavla Švandy Ze Semčic","Pavlická","Pavlišovská","Pavlovická","Pavlovská","Pavlíkova","Pavrovského","Paříkova","Pařízkova","Pařížská","Pařížská","Paškova","Paťanka","Peceradská","Pecharova","Pechlátova","Pechlátova","Pecháčkova","Peckova","Pejevové","Pekařova","Pekařova","Pekařská","Pekárenská","Pekárkova","Pelclova","Pelechovská","Pelhřimovská","Pelikánova","Pelléova","Pelléova","Pelnářova","Pelušková","Pelyňková","Pelzova","Penízovková","Perlitová","Perlitová","Perlová","Pernerova","Pernerova","Peroutkova","Peroutkova","Peroutkova","Peroutkova","Perspektivní","Pertoldova","Perucká","Perunova","Perštejnská","Petra Bezruče","Petra Rezka","Petra Slezáka","Petrbokova","Petrklíčová","Petrohradská","Petrovická","Petrovská","Petrská","Petrské Nám.","Petrské Náměstí","Petráčkova","Petržílkova","Petržílova","Petýrkova","Petříkova","Petříkovská","Petřínská","Petřínská","Petřínské Sady","Petřínské Sady","Pevnostní","Pečárková","Pešinova","Peškova","Pešlova","Pešova","Peštukova","Pešákova","Picassova","Pickova","Pihelská","Pikovická","Pikrtova","Pilařská","Pilníkovská","Pilotů","Pilovská","Pilovská","Pilská","Pirinská","Pirnerova","Pitkovická","Pitterova","Pivcova","Pivovarnická","Pivovarská","Pivoňková","Pištěkova","Placina","Placina","Plajnerova","Plamínkové","Plaská","Platanová","Platnéřská","Platónova","Plavecká","Plavínová","Plačická","Plaňanská","Plevenská","Plečnikova","Plhovská","Plickova","Plkovská","Plojharova","Ploskovická","Ploučnická","Plovdivská","Plošná","Ploštilova","Plukovníka Mráze","Plumlovská","Plutova","Plynární","Plzeňská","Plzeňská","Plzeňská","Plzeňská","Plzeňská","Plánická","Pláničkova","Poberova","Pobočná","Pobořská","Poběžovická","Pobřežní","Pobřežní Cesta","Pod Akáty","Pod Altánem","Pod Altánem","Pod Andělkou","Pod Areálem","Pod Aritmou","Pod Ateliéry","Pod Bahnivkou","Pod Balkánem","Pod Barvířkou","Pod Bateriemi","Pod Baštami","Pod Belvederem","Pod Belárií","Pod Beránkem","Pod Beránkou","Pod Betání","Pod Bohdalcem I","Pod Bohdalcem I","Pod Bohdalcem Ii","Pod Brentovou","Pod Bruskou","Pod Buďánkou","Pod Bání","Pod Březinou","Pod Chaloupkami","Pod Chodovem","Pod Cihelnou","Pod Cihelnou","Pod Cukrákem","Pod Císařkou","Pod Dlážděnkou","Pod Domky","Pod Drinopolem","Pod Dráhou","Pod Duby","Pod Dvorem","Pod Dálnicí","Pod Děkankou","Pod Děkankou","Pod Děvínem","Pod Farou","Pod Fialkou","Pod Formankou","Pod Fořtem","Pod Garážemi","Pod Habrovkou","Pod Habrovou","Pod Haltýřem","Pod Harfou","Pod Havlínem","Pod Havránkou","Pod Havránkou","Pod Hliništěm","Pod Hloubětínskou Zastávkou","Pod Hláskem","Pod Homolkou","Pod Hotelem","Pod Hořavkou","Pod Hrachovkou","Pod Hradbami","Pod Hradem","Pod Hranicí","Pod Hrází","Pod Hvězdou","Pod Hvězdárnou","Pod Hvězdárnou","Pod Hybšmankou","Pod Hájem","Pod Hájkem","Pod Hájovnou","Pod Hřbitovem","Pod Hřištěm","Pod Jalovým Dvorem","Pod Jankovem","Pod Jarovem","Pod Javory","Pod Jiráskovou Čtvrtí","Pod Juliskou","Pod Kamínkou","Pod Kapličkou","Pod Kapličkou","Pod Karlovarskou Silnicí","Pod Karlovem","Pod Kavalírkou","Pod Kaštany","Pod Kaštany","Pod Kesnerkou","Pod Kladenskou Silnicí","Pod Klamovkou","Pod Klapicí","Pod Klaudiánkou","Pod Klikovkou","Pod Kopcem","Pod Kostelem","Pod Kotlaskou","Pod Kotlářkou","Pod Kotlářkou","Pod Kotlářkou","Pod Krejcárkem","Pod Krocínkou","Pod Královkou","Pod Krčským Lesem","Pod Kulturním Domem","Pod Kynclovkou","Pod Křížem","Pod Křížkem","Pod Labuťkou","Pod Lahovskou","Pod Lesem","Pod Lesíkem","Pod Letištěm","Pod Lečí","Pod Lipami","Pod Lipkami","Pod Lisem","Pod Lisem","Pod Lochkovem","Pod Lomem","Pod Lysinami","Pod Lázní","Pod Marjánkou","Pod Markétou","Pod Martinem","Pod Meliškou","Pod Mlýnkem","Pod Mohylou","Pod Mostem","Pod Napětím","Pod Nouzovem","Pod Novou Školou","Pod Novým Lesem","Pod Novým Lesem","Pod Nuselskými Schody","Pod Náměstím","Pod Náplavkou","Pod Náplavkou","Pod Náspem","Pod Návsí","Pod Oborou","Pod Ovčínem","Pod Ořechovkou","Pod Palatou","Pod Palírkou","Pod Parukářkou","Pod Paťankou","Pod Paťankou","Pod Pekařkou","Pod Pekárnami","Pod Petřinami","Pod Plynojemem","Pod Plynojemem","Pod Plynojemem","Pod Plískavou","Pod Poštou","Pod Pramenem","Pod Prodejnou","Pod Průsekem","Pod Písečnou","Pod Přehradou","Pod Přesypem","Pod Radnicí","Pod Rapidem","Pod Rapidem","Pod Rapidem","Pod Remízkem","Pod Rovinou","Pod Rozvodnou","Pod Rybníkem","Pod Rybníčkem","Pod Sady","Pod Salabkou","Pod Sirénou","Pod Skalkou","Pod Skalou","Pod Sklenářkou","Pod Slovany","Pod Smetankou","Pod Sokolovnou","Pod Soutratím","Pod Spalovnou","Pod Spiritkou","Pod Spravedlností","Pod Srázem","Pod Stadiony","Pod Stanicí","Pod Starou Školou","Pod Starákem","Pod Statky","Pod Strašnickou Vinicí","Pod Strojírnami","Pod Strání","Pod Studánkou","Pod Stupni","Pod Stárkou","Pod Stárkou","Pod Stírkou","Pod Svahem","Pod Sychrovem I","Pod Sychrovem I","Pod Sychrovem I","Pod Sychrovem Ii","Pod Sídlištěm","Pod Terasami","Pod Terebkou","Pod Topoly","Pod Tratí","Pod Turnovskou Tratí","Pod Turnovskou Tratí","Pod Táborem","Pod Táborem","Pod Třebešínem","Pod Třešněmi","Pod Třešňovkou","Pod Urnovým Hájem","Pod Valem","Pod Vartou","Pod Vavřincem","Pod Velkým Hájem","Pod Viaduktem","Pod Vidoulí","Pod Viktorkou","Pod Vilami","Pod Vinicemi","Pod Vinicí","Pod Vinohradem","Pod Višňovkou","Pod Vlachovkou","Pod Vlastním Krovem","Pod Vlkem","Pod Vodojemem","Pod Vodovodem","Pod Vodárenskou Věží","Pod Vrchem","Pod Vrcholem","Pod Vrstevnicí","Pod Vrškem","Pod Vrškem","Pod Vršovickou Vodárnou I","Pod Vršovickou Vodárnou Ii","Pod Vršovickou Vodárnou Iii","Pod Vsí","Pod Vyhlídkou","Pod Vysokou","Pod Vysokou Mezí","Pod Vysílačkou","Pod Vyšehradem","Pod Václavem","Pod Vítkovem","Pod Výtopnou","Pod Výšinkou","Pod Větrolamem","Pod Větrovem","Pod Věží","Pod Zahradami","Pod Zahrádkami","Pod Zastávkou","Pod Zatáčkou","Pod Zbuzany","Pod Zemankou","Pod Zličínem","Pod Zvonařkou","Pod Zvoničkou","Pod Zámečkem","Pod Závěrkou","Pod Útesy","Pod Čertovou Skalou","Pod Čihadlem","Pod Čimickým Hájem","Pod Šancemi","Pod Školou","Pod Šmukýřkou","Pod Špejcharem","Pod Špitálem","Pod Štěpem","Pod Žvahovem","Podbabská","Podbabská","Podbělohorská","Podbělová","Podchýšská","Podedvorská","Podhajská Pole","Podholí","Podhorská","Podhořská","Podivínská","Podjavorinské","Podjezd","Podkovářská","Podkrkonošská","Podkrkonošských Tkalců","Podle Kačerova","Podle Lomu","Podle Lomu","Podle Náhonu","Podle Náhonu","Podle Sadů","Podle Trati","Podlesek","Podleská","Podlesní","Podlešínská","Podlibská","Podlipného","Podlišovská","Podlužanská","Podléšková","Podnikatelská","Podnádražní","Podohradská","Podolanská","Podolská","Podolská","Podolské Nábř.","Podolské Nábřeží","Podolské Schody","Podpěrova","Podskalská","Podsychrovská","Podvinný Mlýn","Podvinný Mlýn","Podzámecká","Podéšťova","Poděbradova","Poděbradova","Poděbradská","Poděbradská","Poděbradská","Podůlší","Pohledná","Pohnertova","Pohořelec","Pohořelec","Pokojná","Pokorného","Pokřivená","Polabská","Polabská","Polaneckého","Polední","Polední","Polenská","Polepská","Poleradská","Polesná","Polešovická","Politických Vězňů","Poličanská","Poljanovova","Polní","Polovnická","Polská","Polygrafická","Polákova","Poláčkova","Políkenská","Polívkova","Pomezní","Pomněnková","Pomořanská","Ponrepova","Poplužní","Popovická","Popovova","Poslední","Pospíchalova","Pospíšilova","Postlova","Postranní","Postupická","Postřekovská","Postřižínská","Postřižínská","Potocká","Potoční","Pouchova","Poupětova","Poustka","Povltavská","Povltavská","Povltavská","Povodňová","Pozdeňská","Poznaňská","Počeradská","Počernická","Počernická","Počátecká","Počátecká","Poříčanská","Poříčanská","Poříčská","Pošepného Nám.","Pošepného Náměstí","Poštovská","Požárnická","Pplk. Nováčka","Pplk. Sochora","Prachatická","Prachnerova","Prachovická","Prachovská","Pramenná","Pramenná","Pravoúhlá","Pravská","Pravá","Prašná","Pražská","Pražského","Pražského Povstání","Pražský Okruh","Pražákovská","Prefátova","Preislerova","Preláta","Prelátská","Preslova","Primátorská","Probluzská","Proboštská","Procházkova","Prodloužená","Prokofjevova","Prokopka","Prokopova","Prokopovo Nám.","Prokopovo Náměstí","Prokopových","Prokopská","Prokopské Údolí","Prokopské Údolí","Prorektorská","Prosecká","Prosecká","Prosecká","Prosincová","Prosluněná","Prosná","Prostřední","Proti Proudu","Protilehlá","Protivínská","Proutěná","Prouzova","Provaznická","Provozní","Prunéřovská","Prusická","Prusíkova","Prušánecká","Prvního Pluku","Prvního Pluku","Prvomájová","Prácheňská","Práčská","Průběžná","Průchodní","Průchova","Průhledová","Průhonek","Průhonek","Průhonická","Průhonská","Průjezdná","Průmyslová","Průmyslová","Průmyslová","Průmyslová","Průtažní","Průčelní","Průškova","Psohlavců","Pstružná","Psárská","Ptáčnická","Puchmajerova","Puchmajerova","Pujmanové","Pujmanové","Pujmanové","Purkrabská","Purkyňova","Putimská","Pučova","Puškinovo Nám.","Puškinovo Náměstí","Pyšelská","Pálavská","Pálkařská","Pámelníková","Pánkova","Pátkova","Pávovské Náměstí","Písecká","Píseckého","Písečná","Pískařská","Pískovcová","Pískovna","Písková","Písnická","Písnická","Písnické Zahrady","Písčitá","Píškova","Píšovická","Pöslova","Púchovská","Púchovská","Pýchavková","Pýrová","Pěnkaví","Pěstitelská","Pětidomí","Pětipeského","Pěší","Přecechtělova","Přechodní","Před Cibulkami","Před Dráhou","Před Mosty","Před Nádražím","Před Oborou","Před Rybníkem","Před Skalkami I","Před Skalkami Ii","Před Skálou","Před Sokolovnou","Před Tratí","Před Ústavem","Předbořská","Předměřická","Přední","Předpolní","Předposlední","Předvoje","Předvoje","Předškolní","Přeletová","Přeloučská","Přemyslova","Přemyslovská","Přemyslovská","Přemyšlenská","Přerušená","Přesličková","Přespolní","Přetlucká","Přeučilova","Převoznická","Přezletická","Přeštická","Přeštínská","Přeťatá","Při Hranici","Při Hranici","Při Trati","Přibyslavská","Přibíkova","Přistoupimská","Přádova","Přátelství","Příborská","Příbramská","Příběnická","Příchovická","Přídolská","Příkrá","Přílepská","Přímské Nám.","Přímské Náměstí","Přímá","Přímětická","Přípotoční","Přípřežní","Přírodní","Přístavní","Přívorská","Přívozní","Příčka","Příčná","Pšeničná","Pšenčíkova","Pšovanská","Pštrossova","Půdova","Půlkruhová","Půlnoční","Půtova","R.A. Dvorského","Rabasova","Rabyňská","Rackova","Rackova Zahrada","Radbuzská","Radechovská","Radešovská","Radhošťská","Radhošťská","Radimova","Radimovická","Radimská","Radiová","Radiová","Radistů","Radkovská","Radlická","Radlická","Radlická","Radnické Schody","Radomská","Radonická","Radostavická","Radostná","Radotínská","Radotínská","Radouňova","Radouňova","Radouňova","Radova","Radovská","Radošovická","Radvanická","Radúzova","Radčina","Radějovská","Raffaelova","Raichlova","Raisova","Rajhradská","Rajmonova","Rajská","Rakousova","Rakovnická","Rakovského","Randova","Ranská","Ratajova","Ratajská","Ratbořská","Ratibořická","Ratibořská","Ratibořská","Ravennská","Račická","Račiněveská","Rašilovova","Rašova","Rašovická","Rašovská","Rašínovo Nábř.","Rašínovo Nábř.","Rašínovo Nábřeží","Rašínovo Nábřeží","Rašínská","Ražická","Reinerova","Rejchova","Rejskova","Rekreační","Rektorská","Rembrandtova","Remízková","Renoirova","Resslova","Revoluce","Revoluční","Revoluční","Rezedová","Rezlerova","Rečkova","Richtrova","Riegrova","Riegrovy Sady","Rilská","Ringhofferova","Ringhofferova","Rižská","Roblínská","Rochovská","Rochovská","Rodopská","Rodovská","Rodvinovská","Roentgenova","Rohanovská","Rohanské Nábřeží","Rohanský Ostrov","Rohatecká","Rohenická","Rohlovská","Rohová","Rohozecká","Rohožnická","Roháčova","Roithova","Rojická","Roklova","Rokycanova","Rokycanská","Rokytnická","Rokytná","Rolnická","Rolní","Romaina Rollanda","Romana Blahníka","Ronalda Reagana","Ronešova","Ronkova","Ronovská","Rooseveltova","Rorýsová","Rosečská","Rosická","Rostislavova","Rostoklatská","Rostovská","Rotavská","Rotenská","Roudnická","Rousovická","Rousínovská","Rovenská","Rovnoběžná","Rovná","Rozdělená","Rozdělovská","Rozhovická","Rozkošného","Rozkošská","Rozmarýnová","Rozrazilová","Roztocká","Roztylská","Roztylské Náměstí","Roztylské Sady","Rozvadovská","Rozvodova","Rozvojová","Rozárčina","Rozýnova","Rozšířená","Ročovská","Rošických","Roškotova","Rošovická","Rožmberská","Rožmitálská","Rožnovská","Rožďalovická","Rtyňská","Rubensova","Rubeška","Rubešova","Rubličova","Rubínová","Rudečská","Rudníkovská","Rudolfa Holeky","Rudoltická","Rudoltická","Rujanská","Rumburská","Rumunská","Rumunská","Ruprechtická","Ruská","Ruská","Ruzyňská","Ruzyňská","Ruzyňské Schody","Ružinovská","Rybalkova","Rybalkova","Rybalkova","Rybničná","Rybná","Rybova","Rybářská","Rybízová","Rychnovská","Rychtáře Petříka","Rychtáře Šimona","Rychtářská","Rypkova","Rytířova","Rytířská","Ryzcová","Ryzlinková","Ryšánkova","Rájecká","Rámová","Rápošovská","Rážova","Révová","Rýmařovská","Rýnská","Rýznerova","Růženínová","Růženínská","Růženínská","Růžová","S. K. Neumanna","Sabinova","Sadařská","Sadová","Sadská","Sadská","Sady Bratří Čapků","Safírová","Salabova","Salačova","Salmovská","Salvátorská","Samcova","Samohelova","Samota U Podleského Rybníka","Sarajevská","Saratovská","Sartoriova","Sasanková","Saská","Satalická","Saturnova","Saudkova","Sauerova","Saveljevova","Savojská","Sazečská","Sazečská","Sazovická","Sbíhavá I","Sbíhavá Ii","Schnirchova","Schodišťová","Schodová","Schoellerova","Schoellerova","Schulhoffova","Schwaigerova","Schwarzenberská","Schöfflerova","Sdružení","Sechterova","Sedlecká","Sedlovická","Sedloňovská","Sedlčanská","Sedmidomky","Sedmidomky","Sedmikrásková","Sedmnáctého Listopadu","Seidlova","Seifertova","Sekaninova","Sekeřická","Sekorova","Selmická","Selská","Selských Baterií","Semanského","Semická","Semilská","Semilská","Seminární","Seminářská","Seminářská Zahrada","Semonická","Semtínská","Semčická","Sendražická","Senegalská","Senohrabská","Senovážná","Senovážné Nám.","Senovážné Náměstí","Senožatská","Sestupná","Sestupná","Setbová","Sevastopolská","Severní I","Severní Ii","Severní Iii","Severní Iv","Severní Ix","Severní V","Severní Vi","Severní Vii","Severní Viii","Severní X","Severní Xi","Severovýchodní I","Severovýchodní Ii","Severovýchodní Iii","Severovýchodní Iv","Severovýchodní V","Severovýchodní Vi","Severozápadní I","Severozápadní Ii","Severozápadní Iii","Severozápadní Iv","Severozápadní V","Severozápadní Vi","Severýnova","Sevřená","Seydlerova","Sezemická","Sezemínská","Sezimova","Sečská","Sibeliova","Sibiřské Nám.","Sibiřské Náměstí","Sicherova","Sichrovského","Siemensova","Silurská","Sinkulova","Sinkulova","Sitteho","Siwiecova","Skalecká","Skalnatá","Skalnická","Skalní","Skalská","Skaláků","Skandinávská","Skandinávská","Skautská","Sklenská","Skloněná","Sklářská","Skokanská","Skorkovská","Skorkovská","Skotská","Skořepka","Skořicová","Skryjská","Skupova","Skuteckého","Skálova","Skřivanova","Skřivanská","Skřivánčí","Sladkovského Nám.","Sladkovského Náměstí","Sladovnická","Slancova","Slaná","Slapská","Slatinová","Slatinská","Slatiny","Slatiňanská","Slavatova","Slaviborské Nám.","Slaviborské Náměstí","Slavická","Slavičí","Slavičínská","Slavníkova","Slavojova","Slavonická","Slavíkova","Slavíkova","Slavíkova","Slavínského","Slavíčkova","Slavětínská","Slepá I","Slepá Ii","Slezanů","Slezská","Slezská","Sliačská","Sliačská","Slibná","Slinková","Slivenecká","Slovanský Ostrov","Slovačíkova","Slovenská","Slovenská","Slovinská","Slunečnicová","Slunečná","Sluneční","Sluneční Nám.","Sluneční Náměstí","Slunná","Sluštická","Služeb","Služeb","Služská","Sládkova","Sládkovičova","Slámova","Slánská","Slávy Horníka","Slévačská","Slévačská","Slévačská","Slídová","Slívová","Smaragdová","Smetanovo Nábř.","Smetanovo Nábřeží","Smetáčkova","Smidarská","Smikova","Smiřická","Smiřického","Smolenská","Smolkova","Smolíkova","Smotlachova","Smotlachova","Smrková","Smrčinská","Smržovská","Smržová","Smíchovská","Smíchovská","Smíchovská","Smírná","Snopkova","Sněmovní","Sněženková","Sněžná","Sobolákova","Soborská","Sobotecká","Sobínská","Soběslavova","Soběslavská","Sobětická","Sobětušská","Soběšínská","Sochařská","Socháňova","Sodomkova","Sofijské Nám.","Sofijské Náměstí","Sojkovská","Sojovická","Sojčí","Sojčí","Sokolovská","Sokolovská","Sokolovská","Sokolovská","Sokolská","Sokratova","Solidarity","Solnická","Solná","Sopotská","Sosnovecká","Souběžná I","Souběžná Ii","Souběžná Iii","Souběžná Iv","Soudní","Soukalova","Soukenická","Soumarská","Sousední","Sousední","Sousedská","Sousedíkova","Soustružnická","Soustružnická","Souvratní","Součkova","Sovenická","Sovova","Sovákova","Soví Vršek","Spinozova","Spiritka","Splavná","Spodní","Spojařů","Spojenců","Spojená","Spojná","Spojovací","Spojovací","Spojovací","Spojovací","Spojová","Společná","Spolská","Spolupráce","Sportovců","Sportovců","Sportovní","Spotřebitelská","Spořická","Spořilovská","Spytihněvova","Spádná","Spádová","Spálená","Spálená","Spálený Mlýn","Srbova","Srbská","Srbínská","Srnečkova","Srnčí","Srnčí","Srpnová","Srázná","Stachova","Stadická","Stadionová","Stadiónová","Stallichova","Stamicova","Staniční","Starobylá","Starochodovská","Starochuchelská","Starodejvická","Starodubečská","Starodvorská","Staroklánovická","Starokolínská","Starokošířská","Starolázeňská","Staromlýnská","Staromodřanská","Staroměstské Nám.","Staroměstské Náměstí","Staropacká","Staropramenná","Starostrašnická","Starostřešovická","Starosuchdolská","Staroújezdská","Staročeská","Stará Cesta","Stará Náves","Stará Obec","Stará Spojovací","Stará Stodůlecká","Staré Nám.","Staré Náměstí","Staré Zámecké Schody","Staré Zámecké Schody","Starého","Starý Lis","Statenická","Statková","Stavbařů","Stavební","Stavitelská","Stavovská","Staňkova","Staňkovka","Staňkovská","Stehlíkova","Steinerova","Stejskalova","Stiessova","Stinkovská","Stochovská","Stodůlecká","Stojická","Stoličkova","Stoliňská","Stoupající","Stoupající","Stradonická","Strahovská","Strahovské Nádvoří","Strakatého","Strakonická","Strakonická","Strakonická","Strakonická","Strakonická","Strakonická","Strakošová","Strančická","Stratovská","Strašnická","Strašnická","Strašovská","Strašínská","Strmá","Strmý Vrch","Strnadova","Strnady","Strojická","Strojnická","Strojírenská","Stromovka","Stromovka","Stropnická","Stropnická","Stropnická","Strossmayerovo Nám.","Strossmayerovo Náměstí","Strouhalova","Stroupežnického","Struhařovská","Strunkovská","Stružky","Stružná","Strážkovická","Strážnická","Strážní","Strážovská","Stržná","Studenecká","Studentská","Studená","Studnická","Studničkova","Studniční","Studánková","Stulíková","Stupická","Stupkova","Stupská","Stupňová","Stádlecká","Stárkova","Stýblova","Střední","Středohorská","Středová","Střekovská","Střelecký Ostrov","Střelečská","Střelničná","Střelničná","Střemchová","Střešovická","Střešovická","Střimelická","Stříbrná","Stříbrského","Stříbrského","Střížkovská","Střížkovská","Střížkovská","Suchardova","Suchdolská","Suchdolská","Suchdolská","Suchdolské Nám.","Suchdolské Náměstí","Suchý Vršek","Sudkova","Sudoměřská","Sudějovická","Sukova","Sulanského","Sulická","Sulická","Sulova","Sulovická","Sumova","Suppého","Suttnerové","Sušická","Sušilova","Svahová","Svatavina","Svatojánská","Svatoplukova","Svatoslavova","Svatovítská","Svatovítská","Svatoňovická","Svažitá","Svijanská","Svitavská","Svitákova","Svobodova","Svobodova","Svojetická","Svojsíkova","Svojšická","Svojšovická","Svornosti","Svratecká","Svárovská","Svátkova","Svážná","Svépomoci","Svépomocná","Svépravická","Svépravická","Svídnická","Svěceného","Světická","Světova","Světská","Sychrovská","Symfonická","Synkovická","Synkovská","Syrská","Sádky","Sádovská","Sámova","Sárská","Sárská","Sárská","Sázavská","Sáňkařská","Sídlištní","Sídlištní","Sídliště","Súdánská","Sýkorčí","Sýkovecká","Tachlovická","Tachovská","Tachovské Nám.","Tachovské Náměstí","Tadrova","Tajovského","Talafúsova","Talichova","Talmberská","Tanvaldská","Tasovská","Tatarkova","Tatranská","Tauerova","Tauferova","Taussigova","Tavolníková","Tařicová","Taškentská","Technická","Technologická","Tehovská","Tejnická","Tejnka","Telčská","Templová","Tenisová","Teplická","Teplárenská","Teplárenská","Terasovitá","Tererova","Terezínská","Terronská","Tesaříkova","Tetínská","Theinova","Thomayerova","Thunovská","Thurnova","Thákurova","Thámova","Tibetská","Tichnova","Tichnova","Tichonická","Tichá","Tichého","Tigridova","Tikovská","Tilleho Nám.","Tilleho Náměstí","Tilschové","Tiskařská","Tismická","Tišická","Tlumačovská","Tlustého","Tobrucká","Tolstého","Tomanova","Tomická","Tomkova","Tomsova","Tomáškova","Tomášská","Tomíčkova","Topasová","Topolová","Toruňská","Toulovská","Toušeňská","Toušická","Toužimská","Toužimská","Tovarova","Tovačovského","Tovární","Točenská","Točitá","Trabantská","Trachtova","Trampotova","Travnatá","Travná","Travná","Trenčínská","Trhanovské Náměstí","Trmická","Trnavská","Trnavská","Trnitá","Trnkovo Nám.","Trnkovo Náměstí","Trnková","Trnovanská","Trní","Trocnovská","Troilova","Trojanova","Trojanův Mlýn","Trojdílná","Trojická","Trojmezní","Trojmezní","Trojská","Trojská","Trojská","Trojská","Troskovická","Trousilova","Truhlářka","Truhlářova","Truhlářská","Trutnovská","Tryskovická","Tryskovická","Trytova","Trávnická","Trávníčkova","Tréglova","Tržiště","Tuchoměřická","Tuchorazská","Tuchotická","Tuháňská","Tuklatská","Tulešická","Tulipánová","Tulkova","Tulská","Tunelářů","Tuniská","Tupolevova","Turgeněvova","Turistická","Turkmenská","Turkovická","Turkovská","Turnovská","Turnovského","Turská","Turínská","Tusarova","Tuřická","Tušimická","Tužebníková","Tvrdonická","Tvrdého","Tychonova","Tylišovská","Tylovická","Tylovo Nám.","Tylovo Náměstí","Tymiánová","Tyrkysová","Tyršova","Táboritská","Táborská","Tádžická","Táhlá","Tálínská","Türkova","Týmlova","Týmlova","Týn","Týnecká","Týnská","Týnská Ulička","Týřovická","Tělovýchovná","Těšnov","Těšovická","Těšíkova","Těšínská","Třanovského","Třebanická","Třebechovická","Třebenická","Třebešovská","Třebihošťská","Třebohostická","Třebonická","Třeboradická","Třebotovská","Třeboňská","Třebízského","Třebějická","Třebětínská","Třešňová","Třešňová","Třešňová","Třinecká","Třtinová","Třídomá","Třístoličná","Tůmova","U Akademie","U Akátů","U Albrechtova Vrchu","U Andělky","U Arborky","U Bakaláře","U Balabenky","U Bazénu","U Bažantnice","U Berounky","U Beránky","U Besedy","U Blaženky","U Boroviček","U Botiče","U Botiče","U Božích Bojovníků","U Branek","U Bruských Kasáren","U Brusnice","U Brusnice","U Bubce","U Bulhara","U Bulhara","U Bílého Mlýnku","U Břehu","U Chaloupek","U Chmelnice","U Chodovského Hřbitova","U Cibulky","U Cihelny","U Cikánky","U Cukrovaru","U Císařské Cesty","U Dejvického Rybníčku","U Demartinky","U Divadla","U Divadla","U Dobešky","U Dobráků","U Dobráků","U Dobřenských","U Domu Služeb","U Drahaně","U Druhé Baterie","U Druhé Baterie","U Drupolu","U Družstev","U Družstva Ideál","U Družstva Klid","U Družstva Práce","U Družstva Práce","U Družstva Repo","U Družstva Tempo","U Družstva Život","U Dráhy","U Dráhy","U Drážky","U Drůbežárny","U Dubečské Tvrze","U Dubu","U Dvojdomů","U Dvora","U Dvou Srpů","U Dálnice","U Dívčích Hradů","U Dívčích Hradů","U Děkanky","U Dělnického Cvičiště","U Dětského Domova","U Dětského Hřiště","U Elektry","U Elektry","U Elektrárny","U Floriána","U Fořta","U Gabrielky","U Garáží","U Golfu","U Gymnázia","U Habeše","U Habrovky","U Hadovky","U Harfy","U Hasičské Zbrojnice","U Hasičské Zbrojnice","U Havlíčkových Sadů","U Hellady","U Hercovky","U Hliníku","U Hodin","U Homolky","U Hostavického Potoka","U Hostivařského Nádraží","U Hostivařského Nádraží","U Hotelu","U Hranic","U Hrnčířského Rybníka","U Hrocha","U Hrušky","U Hráze","U Hudební Školy","U Hvozdu","U Hvězdy","U Hvězdy","U Háje","U Hájku","U Hájovny","U Házů","U Hřbitovů","U Hřiště","U Invalidovny","U Jamské","U Jankovky","U Javoru","U Jedličkova Ústavu","U Jednoty","U Jeslí","U Jezera","U Jezerky","U Jezu","U Jezírka","U Jinonického Rybníčka","U Jirkovské","U Jizby","U Járku","U Jízdárny","U Kabelovny","U Kabelovny","U Kaménky","U Kamýku","U Kanálky","U Kapliček","U Kapličky","U Karlova Stánku","U Kasáren","U Kavalírky","U Kazína","U Kašny","U Kaštanu","U Kempinku","U Kina","U Klavírky","U Klikovky","U Klimentky","U Kloubových Domů","U Klubovny","U Klubu","U Kněžské Louky","U Kola","U Kolejí","U Kolejí","U Koloděj","U Kolonie","U Koloniálu","U Kombinátu","U Konečné","U Koní","U Kosinů","U Kostela","U Kostrounku","U Kotlářky","U Koupadel","U Košíku","U Krbu","U Krbu","U Krelovy Studánky","U Kruhovky","U Královské Louky","U Krčské Vodárny","U Krčského Nádraží","U Kublova","U Kunratického Lesa","U Křižovatky","U Kříže","U Kříže","U Křížku","U Laboratoře","U Ladronky","U Lanové Dráhy","U Ledáren","U Lesa","U Lesa","U Lesíka","U Letenského Sadu","U Letiště","U Letohrádku Královny Anny","U Libeňského Pivovaru","U Libeňského Zámku","U Libušiných Lázní","U Libušské Sokolovny","U Lidového Domu","U Lip","U Lipové Aleje","U Lisu","U Loděnice","U Lomu","U Loskotů","U Louky","U Lužického Semináře","U Lázeňky","U Lázní","U Lékárny","U Líhní","U Lípy","U Malvazinky","U Malé Řeky","U Markéty","U Mateřské Školy","U Matěje","U Maří Magdaleny","U Meteoru","U Mezníku","U Michelské Školy","U Michelského Lesa","U Michelského Lesa","U Michelského Mlýna","U Milosrdných","U Mlýna","U Mlýna","U Mlýnského Rybníka","U Modré Školy","U Modřanské Školy","U Močálu","U Mrázovky","U Mydlárny","U Myslivny","U Městských Domů","U Měšťanského Pivovaru","U Měšťanských Škol","U Nadýmače","U Nemocenské Pojišťovny","U Nemocnice","U Nesypky","U Nikolajky","U Nové Dálnice","U Nové Louky","U Nové Školy","U Nového Dvora","U Nového Suchdola","U Nového Suchdola","U Nových Domů I","U Nových Domů Ii","U Nových Domů Iii","U Nových Vil","U Nádražní Lávky","U Nádraží","U Nádrže","U Náhonu","U Náhonu","U Nákladového Nádraží","U Nákladového Nádraží","U Národní Galerie","U Nás","U Obce","U Obecního Domu","U Obecního Dvora","U Obory","U Okrouhlíku","U Olšiček","U Opatrovny","U Ovčína","U Palaty","U Paliárky","U Paloučku","U Památníku","U Panské Zahrady","U Papírny","U Parku","U Parkánu","U Parního Mlýna","U Pastoušky","U Pavilónu","U Pazderek","U Pejřárny","U Pekařky","U Pekáren","U Pentlovky","U Pergamenky","U Pernikářky","U Pernštejnských","U Petřin","U Pily","U Plovárny","U Plynárny","U Plynárny","U Plátenice","U Podchodu","U Podjezdu","U Podolského Hřbitova","U Podolského Sanatoria","U Pohádky","U Polikliniky","U Pomníku","U Potoka","U Poustek","U Poštovky","U Pošty","U Pramene","U Prašné Brány","U Prašného Mostu","U Prašného Mostu","U Pražských Lomů","U Prefy","U Prioru","U Prknovky","U Prodejny","U Propusti","U Prosecké Školy","U Proseckého Kostela","U První Baterie","U První Baterie","U Prádelny","U Průhonu","U Průseku","U Pumpy","U Párníků","U Páté Baterie","U Páté Baterie","U Písecké Brány","U Pískovny","U Přechodu","U Přehrady","U Přejezdu","U Půjčovny","U Radiály","U Radnice","U Rajské Zahrady","U Rakovky","U Roháčových Kasáren","U Rokytky","U Rokytky","U Rokytky","U Rozkoše","U Roztockého Háje","U Rybníka","U Rybníčka","U Rybářství","U Rychty","U Rychty","U Ryšánky","U Ryšánky","U Sadu","U Sanatoria","U Sanopzu","U Santošky","U Schodů","U Sedlecké Školy","U Seřadiště","U Sila","U Silnice","U Silnice","U Skalky","U Skladu","U Skládky","U Skopců","U Skály","U Sladovny","U Slavie","U Sloupu","U Slovanky","U Slovanské Pojišťovny","U Sluncové","U Slévárny","U Smaltovny","U Smetanky","U Smolnic","U Smíchovského Hřbitova","U Sokolovny","U Soutoku","U Sovových Mlýnů","U Sparty","U Splavu","U Spojky","U Spojů","U Společenské Zahrady","U Sportoviště","U Spořitelny","U Stanice","U Staré Cihelny","U Staré Plynárny","U Staré Pošty","U Staré Skládky","U Staré Sokolovny","U Staré Studánky","U Staré Tvrze","U Staré Školy","U Staré Školy","U Starého Hřbitova","U Starého Hřiště","U Starého Mlýna","U Starého Nádraží","U Starého Splavu","U Starého Stadionu","U Starého Stadiónu","U Starého Židovského Hřbitova","U Starého Židovského Hřbitova","U Statku","U Stavoservisu","U Stojanu","U Strouhy","U Strže","U Studny","U Studánky","U Studánky","U Stárovny","U Státní Dráhy","U Státní Dráhy","U Stírky","U Střediska","U Střešovických Hřišť","U Sušičky","U Svahu","U Svatého Ducha","U Svobodárny","U Svodnice","U Svornosti","U Svépomoci","U Světličky","U Synagogy","U Sádek","U Sídliště","U Tabulky","U Technoplynu","U Tenisu","U Teplárny","U Topíren","U Továren","U Transformační Stanice","U Transformátoru","U Trati","U Trativodu","U Trezorky","U Trojice","U Trojského Zámku","U Trpce","U Tržnice","U Tvrze","U Tyrše","U Tyršovky","U Tyršovy Školy","U Třetí Baterie","U Třešňovky","U Třešňového Sadu","U Tůně","U Uhříněveské Obory","U Uranie","U Učiliště","U Valu","U Velké Skály","U Vesny","U Viktorky","U Vinice","U Viniček","U Vinné Révy","U Vinných Sklepů","U Vinohradské Nemocnice","U Vinohradského Hřbitova","U Vinohradského Hřbitova","U Vizerky","U Višňovky","U Višňovky","U Vlachovky","U Vlasačky","U Vlečky","U Vlečky","U Vltavy","U Voborníků","U Vodice","U Vodojemu","U Vodojemu","U Vodotoku","U Vody","U Vodárny","U Vojanky","U Vojenské Nemocnice","U Vojtěšky","U Vokovické Školy","U Vorlíků","U Vozovny","U Vrbiček","U Vrby","U Vrtilky","U Vršovického Hřbitova","U Vršovického Hřbitova","U Vršovického Nádraží","U Vysočanského Cukrovaru","U Vysočanského Pivovaru","U Václava","U Váhy","U Vápenice","U Vápenky","U Vápenné Skály","U Výkupního Střediska","U Výstavby","U Výstaviště","U Výstaviště","U Výzkumu","U Včely","U Větrníku","U Větrolamu","U Větrolamu","U Věže","U Waltrovky","U Zahradnictví","U Zahradního Města","U Zahrady","U Zahrádek","U Zahrádkářské Kolonie","U Zastávky","U Zbrojnice","U Zdravotního Ústavu","U Zeleného Ptáka","U Zemníku","U Zeměpisného Ústavu","U Zlaté Studně","U Zličína","U Zličína","U Zličínského Hřiště","U Zvonařky","U Zvoničky","U Záběhlického Zámku","U Zájezdku","U Zákrutu","U Zámeckého Parku","U Zámečku","U Zámečnice","U Zásobní Zahrady","U Zátiší","U Závodiště","U Závor","U Úlů","U Čekárny","U Černé Rokle","U Červeného Mlýnku","U Červeného Mlýnku","U Českých Loděnic","U Čihadel","U Čističky","U Čokoládoven","U Čtvrté Baterie","U Čtyř Domů","U Řempa","U Říčanky","U Šalamounky","U Šalamounky","U Šesté Baterie","U Šesté Baterie","U Školičky","U Školky","U Školního Pole","U Školské Zahrady","U Školy","U Štěpu","U Šumavy","U Šumavěnky","U Šálkovny","U Šíchů","U Šípků","U Železnice","U Železničního Mostu","U Železné Lávky","U Želivky","U Židovského Hřbitova","U Žlábku","U Županských","Uhelný Trh","Uherská","Uhříněveská","Ukončená","Ukrajinská","Uljanovská","Ulrychova","Ulčova","Umělecká","Ungarova","Unhošťská","Univerzitní","Upolínová","Upravená","Uralská","Urbanická","Urbanova","Urbánkova","Urešova","Uruguayská","Urxova","Utěšilova","Uzavřená","Uzbecká","Uzoučká","Učitelská","Učňovská","Užocká","V Aleji","V Alejích","V Americe","V Babyku","V Bambouskách","V Bažinách","V Benátkách","V Bezpečí","V Bokách I","V Bokách Ii","V Bokách Iii","V Borovičkách","V Botanice","V Brance","V Brůdku","V Brůdku","V Bytovkách","V Bílce","V Březinkách","V Březině","V Březí","V Břízkách","V Celnici","V Cestičkách","V Cestkách","V Chaloupkách","V Chaloupkách","V Chatách","V Chotejně","V Cibulkách","V Cihelně","V Cípu","V Dolinách","V Dolině","V Dolině","V Dolích","V Domcích","V Domově","V Doubcích","V Dílcích","V Edenu","V Haltýři","V Hliništi","V Hluboké","V Hodkovičkách","V Holešovičkách","V Honu","V Horkách","V Horní Stromce","V Hrobech","V Humenci","V Humenci","V Humnech","V Háji","V Hájkách","V Hájích","V Hůrkách","V Jahodách","V Javorech","V Javoříčku","V Jehličině","V Jehličí","V Jezerách","V Jezevčinách","V Jezírkách","V Jirchářích","V Jámě","V Kališti","V Kališti","V Kapslovně","V Klukovicích","V Kole","V Kolkovně","V Korytech","V Korytech","V Kotcích","V Koutku","V Koutě","V Kratinách","V Kruhu","V Kuťatech","V Kálku","V Křepelkách","V Křovinách","V Křížkách","V Ladech","V Lesíčku","V Lipinách","V Lipinách","V Lipkách","V Lipách","V Listnáčích","V Lomech","V Louce","V Luhu","V Lukách","V Lučinách","V Lužích","V Lánech","V Lázních","V Lískách","V Malých Domech I","V Malých Domech Ii","V Malých Domech Iii","V Mezihoří","V Milíři","V Mokřinách","V Mydlinkách","V Nové Hostivaři","V Nové Vsi","V Nové Vsi","V Nové Čtvrti","V Novém Hloubětíně","V Novém Hloubětíně","V Nových Bohnicích","V Nových Domcích","V Nových Vokovicích","V Náklích","V Násypu","V Nížinách","V Oblouku","V Občanském Domově","V Obůrkách","V Ochozu","V Ohradě","V Ohybu","V Okruží","V Okálech","V Olšinách","V Olšinách","V Olšině","V Ondřejově","V Opatově","V Osikách","V Ostružiní","V Oudolku","V Ořeší","V Pachmance","V Padolině","V Parcelách","V Parku","V Parníku","V Pačátkách","V Pařezinách","V Pevnosti","V Pevnosti","V Pitkovičkách","V Planinách","V Platýzu","V Pláni","V Podbabě","V Podhoří","V Podhájí","V Podhájí","V Podluží","V Podskalí","V Podvrší","V Podzámčí","V Poli","V Polích","V Potokách","V Potočinách","V Potočkách","V Prutinách","V Průhledu","V Průčelí","V Pátém","V Pískovně","V Pěšinkách","V Předním Hloubětíně","V Předním Veleslavíně","V Předpolí","V Předpolí","V Přelomu","V Přístavu","V Remízku","V Rohožníku","V Rohu","V Roháčích","V Rokli","V Roklích","V Rovinách","V Rovinách","V Rybníkách","V Rybníčkách","V Ráji","V Ráji","V Rákosí","V Sadech","V Sedlci","V Sedlci","V Slavětíně","V Soudním","V Stráni","V Středu","V Sudech","V Sídlišti","V Tehovičkách","V Tišině","V Trninách","V Třešňovce","V Tůních","V Uličce","V Uličkách","V Zahradní Čtvrti","V Zahradách","V Zahrádkách","V Zatáčce","V Zeleni","V Zeleném Údolí","V Záhorském","V Záhybu","V Zákopech","V Zákoutí","V Zálesí","V Zálomu","V Zámcích","V Zápolí","V Zátiší","V Zátočce","V Závitu","V Závětří","V Zářezu","V Údolí","V Údolí Hvězd","V Úhlu","V Úhoru","V Úvalu","V Úvoze","V Úzké","V Úžlabině","V Úžlabině","V Čeňku","V Štíhlách","V Šáreckém Údolí","V Žabokřiku","V Žáčku","V. P. Čkalova","V. P. Čkalova","Vachkova","Vackova","Vacovská","Vacínova","Vacínovská","Vajdova","Vajgarská","Valcířská","Valdická","Valdovská","Valdštejnská","Valdštejnské Nám.","Valdštejnské Náměstí","Valentinská","Valentinská","Valentova","Valečovská","Valská","Valtická","Valtínovská","Valčíkova","Valšovská","Vamberská","Vanická","Vaníčkova","Vaníčkova","Varhulíkové","Varnsdorfská","Varšavská","Vavákova","Vavřenova","Vavřinecká","Vazovova","Vačkářova","Vaňkova","Vaňkova","Vašátkova","Ve Dvoře","Ve Lhotce","Ve Lhotce","Ve Skalkách","Ve Skalách","Ve Skále","Ve Slatinách","Ve Smečkách","Ve Smrčině","Ve Stromořadí","Ve Struhách","Ve Struhách","Ve Stráni","Ve Studeném","Ve Stínu","Ve Střešovičkách","Ve Střešovičkách","Ve Svahu","Ve Vilkách","Ve Vilách","Ve Višňovce","Ve Vratech","Ve Vrbách","Ve Vrchu","Ve Vrších","Ve Výhledu","Ve Výhledu","Ve Výrech","Ve Zliči","Ve Štěpnici","Ve Žlíbku","Vedlejší","Vehlovická","Vejražkova","Vejvanovského","Vejvodova","Velebného","Velehradská","Velemínská","Velemínská","Velenická","Velenovského","Veleslavínova","Veleslavínská","Veleslavínská","Veletovská","Veletržní","Veletržní","Veleňská","Velešínská","Velfloviců","Velflíkova","Velhartická","Velichovská","Velimská","Velkoborská","Velkoosecká","Velkopřevorské Nám.","Velkopřevorské Náměstí","Velká Lada","Velká Lada","Velká Skála","Velké Kunratické","Veltruská","Veltěžská","Velvarská","Velínská","Venušina","Verdiho","Verdunská","Verneřická","Verneřická","Vernéřovská","Veronské Nám.","Veselská","Veská","Veslařský Ostrov","Vestavěná","Vestecká","Veverkova","Večerní","Vidimova","Vidimská","Vidlicová","Vidlák","Vidonická","Vidoulská","Vidovická","Vietnamská","Viklefova","Vikova","Viktora Huga","Viktorinova","Viktorčina","Vikářská","Vilová","Vilímkova","Vilímovská","Vimperské Náměstí","Vinařického","Vinařská","Viničná","Vinohradská","Vinohradská","Vinohradská","Vinohradská","Vinohradská","Vinohradská","Vinohradská","Vinohrady","Vinopalnická","Vinořská","Vinořské Nám.","Vinořské Náměstí","Vinšova","Violková","Vitošská","Vitíkova","Vitějovská","Vizovická","Višňovka","Višňovka","Višňová","Vlachova","Vladimírova","Vladislava Vančury","Vladislavova","Vladivostocká","Vladycká","Vlastibořská","Vlastina","Vlastina","Vlastislavova","Vlasty Buriana","Vlasty Hilské","Vlasty Průchové","Vlasákova","Vlašimská","Vlašská","Vlašská","Vlaštovčí","Vlkanovská","Vlkova","Vlkovická","Vlnitá","Vltavanů","Vltavanů","Vltavanů","Vltavická","Vltavská","Vltavínová","Vlárská","Vlásenická","Vlčická","Vlčkova","Vlčnovská","Vnislavova","Vnitřní","Vnoučkova","Vnější","Voborského","Vobrubova","Vocelova","Voctářova","Voctářova","Vodická","Vodičkova","Vodičkova","Vodnická","Vodní","Vodochodská","Vodojemská","Vodácká","Vodárenská","Voděradská","Vodňanská","Vodňanského","Vojenova","Vojetická","Vojická","Vojkovická","Vojslavická","Vojtova","Vojtíškova","Vojtěšská","Vojáčkova","Vokovická","Vokovická","Vokrojova","Vokáčova","Vokřínská","Volarská","Volavkova","Voleníkova","Volkova","Volkovova","Voltova","Volutová","Volyňská","Volšovská","Volšovská","Vondroušova","Vorařská","Voroněžská","Voroněžská","Voráčovská","Voršilská","Voskova","Voskovcova","Vosmíkových","Vostrovská","Vostrého","Vosátkova","Votavova","Votická","Votočkova","Votrubova","Votuzská","Vozová","Vozová","Voňkova","Voříškova","Vošahlíkova","Vožická","Vrabčí","Vranická","Vranovská","Vranská","Vratimovská","Vratislavova","Vratislavská","Vratičová","Vraňanská","Vrbenského","Vrbická","Vrbková","Vrbova","Vrbčanská","Vrchlabská","Vrchlického","Vrchlického Sady","Vrchovinská","Vrátenská","Vrátkovská","Vrázova","Vrážská","Vrútecká","Vršní","Vršovická","Vršovické Nám.","Vršovické Náměstí","Vršovka","Vsetínská","Vstavačová","Vstupní","Vybíralova","Vycpálkova","Vyderská","Vydrova","Vyhlídkova","Vykoukových","Vykáňská","Vyskočilova","Vysokovská","Vysokoškolská","Vysoká Cesta","Vysočanská","Vysočanská","Vysočanská","Vysočanské Nám.","Vysočanské Náměstí","Vyvýšená","Vyšebrodská","Vyšehradská","Vyšší","Vyžlovská","Vzdušná","Vzdálená","Vzestupná","Vzpoury","Váchalova","Václava Balého","Václava Kovaříka","Václava Rady","Václava Trojana","Václava Špačka","Václavická","Václavkova","Václavská","Václavské Nám.","Václavské Náměstí","Vágnerova","Vánková","Vápencová","Vápenná","Vápeníkova","Vášova","Vážská","Vídeňská","Vídeňská","Vídeňská","Vírská","Víta Nejedlého","Vítkova","Vítkovická","Vítovcova","Vítovcova","Vítězná","Vítězná","Vítězné Nám.","Vítězné Nám.","Vítězné Náměstí","Vítězné Náměstí","Východní","Východní Nám.","Východní Náměstí","Výchozí","Výhledová","Výhledské Nám.","Výhledské Náměstí","Výjezdní","Výjezdová","Výletní","Výletní","Výmarova","Výmolova","Výpadová","Výpadová","Výravská","Výrobní","Výstaviště","Výstavní","Výstupní","Výtoňská","Výtvarnická","Výtvarná","Výzkumníků","Včelařská","Včelničná","Věkova","Věstonická","Větrná","Větrovcova","Větrová","Větrušická","Vězeňská","Vězeňská","Věštínská","Věšínova","Věžická","Vřesovická","Vřesová","Všehrdova","Všejanská","Všelipská","Všerubská","Všestarská","Všetatská","Všeňská","Wagnerova","Waldesova","Washingtonova","Wassermannova","Wattova","Weberova","Weberova","Weilova","Weissova","Wenzigova","Wenzigova","Werichova","Wichterlova","Wiedermannova","Wiesenthalova","Wilsonova","Wilsonova","Winklerova","Wolfova","Wolkerova","Wuchterlova","Xaveriova","Xaverovská","Za Archivem","Za Arielem","Za Avií","Za Bažantnicí","Za Botičem","Za Brankou","Za Brumlovkou","Za Brůdkem","Za Břízami","Za Chalupami","Za Cukrovarem","Za Císařským Mlýnem","Za Dolejšákem","Za Drahou","Za Dvorem","Za Dálnicí","Za Dálnicí","Za Elektrárnou","Za Elektrárnou","Za Farou","Za Fořtem","Za Hanspaulkou","Za Haštalem","Za Hládkovem","Za Horou","Za Horou","Za Hospodou","Za Hrází","Za Humny","Za Hájem","Za Hájem","Za Hájovnou","Za Hřbitovem","Za Invalidovnou","Za Jalovým Dvorem","Za Jednotou","Za Kajetánkou","Za Kapličkou","Za Karlínským Přístavem","Za Kačabkou","Za Klíčovem","Za Knotkem","Za Knotkem","Za Kostelem","Za Kovárnou","Za Kovářským Rybníkem","Za Křížem","Za Křížkem","Za Lesíkem","Za Lidovým Domem","Za Luhem","Za Lužinami","Za Lány","Za Lázeňkou","Za Mlýnem","Za Mosty","Za Mosty","Za Mototechnou","Za Můstkem","Za Nadýmačem","Za Novákovou Zahradou","Za Návsí","Za Obecním Úřadem","Za Oborou","Za Opravnou","Za Opusem","Za Ovčínem","Za Papírnou","Za Parkem","Za Pavilónem","Za Pekařkou","Za Pekárnou","Za Pivovarem","Za Ploty","Za Podjezdem","Za Pohořelcem","Za Pohádkou","Za Potokem","Za Poříčskou Branou","Za Poříčskou Bránou","Za Poštou","Za Poštovskou Zahradou","Za Poštovskou Zahradou","Za Prodejnou","Za Pruhy","Za Průsekem","Za Pískovnou","Za Radostí","Za Rokytkou","Za Rybníkem","Za Rybníčky","Za Rybářstvím","Za Rájem","Za Sadem","Za Sedmidomky","Za Skalkou","Za Skalkou","Za Slatinami","Za Slovankou","Za Sokolovnou","Za Stadionem","Za Statkem","Za Statky","Za Stodolami","Za Stodolou","Za Strahovem","Za Strašnickou Vozovnou","Za Strašnickou Vozovnou","Za Strojírnami","Za Studánkou","Za Střelnicí","Za Sídlištěm","Za Teplárnou","Za Tratí","Za Tratí","Za Třebešínem","Za Vackovem","Za Valem","Za Viaduktem","Za Vinicí","Za Vlasačkou","Za Vodárnou","Za Vokovickou Vozovnou","Za Vokovickou Vozovnou","Za Větrem","Za Zahradami","Za Zahradou","Za Zastávkou","Za Zelenou Liškou","Za Zámečkem","Za Černým Mostem","Za Černým Mostem","Za Černým Mostem","Za Školkou","Za Školou","Za Šmatlíkem","Za Železnicí","Za Ženskými Domovy","Za Žižkovskou Vozovnou","Zacharská","Zachova","Zadní","Zahrada Na Baště","Zahradnická","Zahradní","Zahradníčkova","Zahradníčkova","Zahrádecká","Zahrádecká","Zahrádkářská","Zahrádkářů","Zaječická","Zaječí","Zaječí","Zakouřilova","Zakrytá","Zakšínská","Zalešanská","Zalinská","Zamašská","Zamenhofova","Zapadlá","Zapomenutá","Zapova","Zapských","Zastavěná","Zastrčená","Zavadilova","Zavátá","Zaříčanská","Zbečenská","Zborovská","Zborovská","Zbraslavská","Zbraslavská","Zbraslavské Nám.","Zbraslavské Náměstí","Zbrojnická","Zbudovská","Zbuzanská","Zbuzkova","Zbynická","Zbyslavská","Zbytinská","Zbýšovská","Zdaru","Zdařilá","Zderazská","Zdeňky Nyplové","Zdibská","Zdická","Zdiměřická","Zdislavická","Zdobnická","Zdoňovská","Zdíkovská","Zelenečská","Zelenečská","Zelenkova","Zelenky-Hajského","Zelenohorská","Zelená","Zelená","Zelená Louka","Zelený Pruh","Zelený Pruh","Zelený Pruh","Zelinářská","Zemanka","Zemské Právo","Zemědělská","Zengrova","Zenklova","Zenklova","Zeyerova Alej","Zhořelecká","Zikova","Zimova","Zimákova","Zkrácená","Zlatnice","Zlatnická","Zlatokorunská","Zlatá","Zlatá Ulička U Daliborky","Zlenická","Zlešická","Zlivská","Zličínská","Zličínská","Zlonická","Zlonínská","Zlončická","Zlíchovská","Znojemská","Zoubkova","Zrzavého","Ztracená","Zubatého","Zubrnická","Zvolenská","Zvolská","Zvolská","Zvonařova","Zvonařovská","Zvonařská","Zvoncovitá","Zvonická","Zvonková","Zvoníčkova","Zvánovická","Zvíkovská","Záblatská","Záblatská","Zábranská","Zábrodí","Záběhlická","Zádražanská","Záhornická","Záhorského","Záhořanská","Záhořanského","Záhřebská","Zájezdní","Zákolanská","Zákostelní","Zákupská","Zálesí","Zálesí","Zálesí","Záluské","Zálužanského","Zálužická","Zálužská","Zálužská","Zámecká","Zámecké Schody","Zámezí","Zámišova","Zámělská","Západní","Zápasnická","Zápolská","Zápotoční","Zápská","Zárubova","Zárybnická","Zárybničná","Zárybská","Zásadská","Zásmucká","Zátišská","Zátiší","Zátopkova","Zátoňská","Závadova","Záveská","Závist","Závišova","Závišova","Závodní","Závrchy","Závěrka","Zázvorkova","Zářijová","Zítkova","Zívrova","Zúžená","Údlická","Údolní","Údolní","Údolí Hvězd","Úhlavská","Úhlová","Újezd","Újezd","Újezdská","Úlibická","Únorová","Únětická","Únětická","Úpická","Úprkova","Úpská","Úslavská","Ústavní","Ústecká","Ústecká","Ústřední","Útulná","Útulná","Úvalská","Úvoz","Úvoz","Úvozová","Úzká","Čajkovského","Čakovická","Čakovická","Čankovská","Čapkova","Častavina","Častonická","Čechova","Čechtická","Čechurova","Čedičová","Čejetická","Čejkovická","Čekanková","Čekanková","Čekanovská","Čelakovského Sady","Čelakovského Sady","Čeljabinská","Čelkovická","Čelná","Čelákovická","Čenkovská","Čenovická","Čentická","Čenětická","Čeperská","Čeradická","Čerchovská","Čermákova","Černická","Černilovská","Černičná","Černochova","Černockého","Černohorského","Černokostelecká","Černokostelecká","Černokostelecká","Černomořská","Černotínská","Černovická","Černošická","Černá","Černého","Černínova","Černínská","Čerpadlová","Čertouská","Čertouská","Čertův Vršek","Červencová","Červenkova","Červená","Červená Báň","Červený Mlýn","Červeňanského","Červnová","Čerčanská","Českobratrská","Českobrodská","Českobrodská","Českobrodská","Českobrodská","Českobrodská","Českobrodská","Českobrodská","Českobrodská","Českodubská","Českolipská","Českolipská","Českomalínská","Českomoravská","Českomoravská","Československého Exilu","Československého Exilu","Česká","České Družiny","Českého Červeného Kříže","Čestlická","Čestmírova","Česákova","Čečelická","Čeňkova","Češovská","Čibuzská","Čihákova","Čiklova","Čiklova","Čimelická","Čimická","Čimická","Čimická","Čimická","Čirůvková","Čistovická","Čmelická","Čs. Armády","Čs. Tankistů","Čtyřdílná","Čtyřkolská","Čumpelíkova","Čuprova","Čábelecká","Čápova","Čáslavská","Čílova","Čílova","Čínská","Čínská","Čížovská","Ďáblická","Ďáblická","Ďáblická","Řadová","Řehořova","Řepečská","Řepná","Řeporyjská","Řeporyjská","Řeporyjská","Řeporyjské Náměstí","Řepová","Řepská","Řepíková","Řepínská","Řepčická","Řepčická","Řetězokovářů","Řetězová","Řevnická","Řevnická","Řeznická","Řezáčovo Nám.","Řezáčovo Náměstí","Řečického","Řešetovská","Řešovská","Řipská","Řipská","Řásnovka","Říjnová","Římovská","Římovská","Římská","Říčanova","Říčanská","Říční","Šachovská","Šafaříkova","Šafránecká","Šafránkova","Šafránová","Šafářova","Šakvická","Šaldova","Šalounova","Šalvějová","Šanovská","Šantrochova","Šatrova","Šatrova","Šebelova","Šeberovská","Šebestiánská","Šebkova","Šedivého","Šedova","Šejbalové","Šemberova","Šenovská","Šermířská","Šermířská","Šestajovická","Šestajovická","Šestidomí","Šetelíkova","Ševce Matouše","Ševčenkova","Ševčíkova","Šeříková","Šeříková","Šibřinská","Šikmá","Šimanovská","Šimkova","Šimonova","Šimáčkova","Šimůnkova","Šircova","Široká","Široká","Šiškova","Školní","Školská","Škroupovo Nám.","Škroupovo Náměstí","Škrétova","Škvorecká","Škábova","Šlechtitelská","Šlejnická","Šlikova","Šlitrova","Šluknovská","Šmeralova","Šmilovského","Šmolíkova","Šolínova","Šostakovičovo Nám.","Šostakovičovo Náměstí","Španielova","Španělská","Špačkova","Špeciánova","Šperlova","Špirkova","Špitálská","Šplechnerova","Šporkova","Špotzova","Špálova","Šrobárova","Šrobárova","Šromova","Štamberk","Štefkova","Štefánikova","Štemberova","Šternberkova","Šternova","Šternovská","Štichova","Štiplova","Štičkova","Štiřínská","Štochlova","Štolbova","Štolcova","Štolmířská","Štolmířská","Štorchova","Štorkánova","Štramberská","Štulcova","Štupartská","Štursova","Štverákova","Štychova","Štychova","Štíbrova","Štíhlická","Štítného","Štítová","Štúrova","Štúrova","Štěchovická","Štěpanická","Štěpařská","Štěpničná","Štěpánkova","Štěpánovská","Štěpánská","Štěpánská","Štěrboholská","Štěrková","Štětkova","Štětínská","Šubertova","Šulcova","Šultysova","Šumavská","Šumavského","Šumberova","Šumenská","Šumická","Šumperská","Šustova","Švabinského","Švecova","Švehlova","Švehlova","Švejcarovo Náměstí","Švestková","Švestková","Švestková","Švihovská","Švábky","Švábova","Švédská","Šárecká","Šárovo Kolo","Šárčina","Šátalská","Šífařská","Šímova","Šípková","Šítkova","Šťastného","Šůrova","Žabovřeská","Žacléřská","Žalanského","Žalmanova","Žalovská","Žamberská","Žampašská","Žampiónová","Žandovská","Žatecká","Žatecká","Žateckých","Ždírnická","Žehuňská","Žehušická","Želetavská","Železniční","Železničářů","Železnobrodská","Železná","Želivecká","Želivka","Želivská","Želkovická","Želnavská","Ženíškova","Žeretická","Žermanická","Žernosecká","Žernovská","Žerotínova","Žherská","Žichlínská","Židlického","Žilinská","Žilovská","Žinkovská","Žirovnická","Žitavská","Žitavského","Žitná","Žitná","Žitomírská","Živanická","Živcová","Živcových","Živonínská","Žiželická","Žižkova","Žižkovo Nám.","Žižkovo Náměstí","Žlebská","Žluťásková","Žofie Podlipské","Žufanova","Žukovského","Žukovského","Žulová","Županovická","Žvahovská","Žábova","Žákovská","Žárovická","Žíšovská","Žďárská"]})),gK=c((()=>{rn=["#{street_name} #{building_number}"]})),kK=c((()=>{tn=["#{street}"]})),yK=c((()=>{sK(),lK(),uK(),cK(),dK(),hK(),pK(),mK(),fK(),vK(),gK(),kK(),on={building_number:Wa,city:Za,city_name:qa,country:Qa,default_country:Ya,postcode:$a,secondary_address:Xa,state:en,state_abbr:an,street:nn,street_address:rn,street_name:tn}})),bK=c((()=>{sn=["Adaptive","Advanced","Ameliorated","Assimilated","Automated","Balanced","Business-focused","Centralized","Cloned","Compatible","Configurable","Cross-group","Cross-platform","Customer-focused","Customizable","Decentralized","De-engineered","Devolved","Digitized","Distributed","Diverse","Down-sized","Enhanced","Enterprise-wide","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Function-based","Fundamental","Future-proofed","Grass-roots","Horizontal","Implemented","Innovative","Integrated","Intuitive","Inverse","Managed","Mandatory","Monitored","Multi-channelled","Multi-lateral","Multi-layered","Multi-tiered","Networked","Object-based","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Pre-emptive","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Re-contextualized","Re-engineered","Reduced","Reverse-engineered","Right-sized","Robust","Seamless","Secured","Self-enabling","Sharable","Stand-alone","Streamlined","Switchable","Synchronised","Synergistic","Synergized","Team-oriented","Total","Triple-buffered","Universal","Up-sized","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary","Vision-oriented"]})),SK=c((()=>{ln=["clicks-and-mortar","value-added","vertical","proactive","robust","revolutionary","scalable","leading-edge","innovative","intuitive","strategic","e-business","mission-critical","sticky","one-to-one","24/7","end-to-end","global","B2B","B2C","granular","frictionless","virtual","viral","dynamic","24/365","best-of-breed","killer","magnetic","bleeding-edge","web-enabled","interactive","dot-com","sexy","back-end","real-time","efficient","front-end","distributed","seamless","extensible","turn-key","world-class","open-source","cross-platform","cross-media","synergistic","bricks-and-clicks","out-of-the-box","enterprise","integrated","impactful","wireless","transparent","next-generation","cutting-edge","user-centric","visionary","customized","ubiquitous","plug-and-play","collaborative","compelling","holistic","rich","synergies","web-readiness","paradigms","markets","partnerships","infrastructures","platforms","initiatives","channels","eyeballs","communities","ROI","solutions","e-tailers","e-services","action-items","portals","niches","technologies","content","vortals","supply-chains","convergence","relationships","architectures","interfaces","e-markets","e-commerce","systems","bandwidth","infomediaries","models","mindshare","deliverables","users","schemas","networks","applications","metrics","e-business","functionalities","experiences","web services","methodologies"]})),AK=c((()=>{un=["implement","utilize","integrate","streamline","optimize","evolve","transform","embrace","enable","orchestrate","leverage","reinvent","aggregate","architect","enhance","incentivize","morph","empower","envisioneer","monetize","harness","facilitate","seize","disintermediate","synergize","strategize","deploy","brand","grow","target","syndicate","synthesize","deliver","mesh","incubate","engage","maximize","benchmark","expedite","reintermediate","whiteboard","visualize","repurpose","innovate","scale","unleash","drive","extend","engineer","revolutionize","generate","exploit","transition","e-enable","iterate","cultivate","matrix","productize","redefine","recontextualize"]})),MK=c((()=>{cn=["24 hour","24/7","3rd generation","4th generation","5th generation","6th generation","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","background","bandwidth-monitored","bi-directional","bifurcated","bottom-line","clear-thinking","client-driven","client-server","coherent","cohesive","composite","context-sensitive","contextually-based","content-based","dedicated","demand-driven","didactic","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","even-keeled","executive","explicit","exuding","fault-tolerant","foreground","fresh-thinking","full-range","global","grid-enabled","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","multimedia","multi-state","multi-tasking","national","needs-based","neutral","next generation","non-volatile","object-oriented","optimal","optimizing","radical","real-time","reciprocal","regional","responsive","scalable","secondary","solution-oriented","stable","static","systematic","systemic","system-worthy","tangible","tertiary","transitional","uniform","upward-trending","user-facing","value-added","web-enabled","well-modulated","zero administration","zero defect","zero tolerance"]})),TK=c((()=>{dn=["#{Name.last_name} #{suffix}","#{Name.last_name} #{suffix}","#{Name.man_last_name} a #{Name.man_last_name} #{suffix}"]})),_K=c((()=>{hn=["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","artificial intelligence","array","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","database","data-warehouse","definition","emulation","encoding","encryption","extranet","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","Graphic Interface","groupware","Graphical User Interface","hardware","help-desk","hierarchy","hub","implementation","info-mediaries","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge user","knowledge base","local area network","leverage","matrices","matrix","methodology","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","open system","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","secured line","service-desk","software","solution","standardization","strategy","structure","success","superstructure","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"]})),wK=c((()=>{pn=["s.r.o.","a.s.","v.o.s."]})),jK=c((()=>{bK(),SK(),AK(),MK(),TK(),_K(),wK(),mn={adjective:sn,bs_noun:ln,bs_verb:un,descriptor:cn,name:dn,noun:hn,suffix:pn}})),EK=c((()=>{fn={wide:["Leden","Únor","Březen","Duben","Květen","Červen","Červenec","Srpen","Září","Říjen","Listopad","Prosinec"],wide_context:["Leden","Únor","Březen","Duben","Květen","Červen","Červenec","Srpen","Září","Říjen","Listopad","Prosinec"],abbr:["Led","Úno","Bře","Dub","Kvě","Čer","Črc","Srp","Zář","Říj","Lis","Pro"],abbr_context:["Led","Úno","Bře","Dub","Kvě","Čer","Črc","Srp","Zář","Říj","Lis","Pro"]}})),NK=c((()=>{vn={wide:["Pondělí","Úterý","Středa","čtvrtek","Pátek","Sobota","Neděle"],wide_context:["Pondělí","Úterý","Středa","čtvrtek","Pátek","Sobota","Neděle"],abbr:["Po","Út","St","čt","Pá","So","Ne"],abbr_context:["Po","Út","St","čt","Pá","So","Ne"]}})),BK=c((()=>{EK(),NK(),gn={month:fn,weekday:vn}})),PK=c((()=>{kn=["cz","com","net","eu","org"]})),LK=c((()=>{yn=["gmail.com","seznam.cz","centrum.cz","volny.cz","atlas.cz"]})),DK=c((()=>{PK(),LK(),bn={domain_suffix:kn,free_email:yn}})),xK=c((()=>{Sn=["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]})),CK=c((()=>{xK(),An={words:Sn}})),KK=c((()=>{Mn=["Abigail","Ada","Adalberta","Adéla","Adelaida","Adina","Adolfa","Adolfína","Adriana","Adriána","Adriena","Afra","Agáta","Aglaja","Aida","Alana","Albena","Alberta","Albertina","Albertýna","Albína","Alena","Aleška","Alexandra","Alfréda","Alice","Alida","Alina","Alma","Aloisie","Alojzije","Alžběta","Amálie","Amanda","Amáta","Amélie","Anabela","Anastázie","Anatázie","Anatolie","Anatólie","Anděla","Andělína","Andrea","Aneta","Anežka","Angela","Angelika","Anita","Anna","Anselma","Antonie","Apolena","Arabela","Aranka","Areta","Ariadna","Ariana","Ariela","Arleta","Armida","Arna","Arnolda","Arnoštka","Astrid","Astrida","Atanázie","Augusta","Augustina","Augustýna","Aura","Aurélie","Aurora","Babeta","Barbara","Barbora","Beáta","Beatrice","Bedřiška","Bela","Běla","Belinda","Benedikta","Berenika","Berit","Bernarda","Berta","Bertolda","Bianka","Bibiana","Birgit","Birgita","Blahomila","Blahomíra","Blahoslava","Blanka","Blažena","Bohdana","Bohumila","Bohumíra","Bohuna","Bohuslava","Bohuše","Bojana","Bojislava","Boleslava","Borislava","Bořislava","Božena","Božetěcha","Božidara","Branimíra","Branislava","Bratislava","Brenda","Brigita","Brita","Bronislava","Bruna","Brunhilda","Břetislava","Cecilie","Cecílie","Celestina","Celestýna","Celie","Celina","Ctibora","Ctirada","Ctislava","Cyntie","Cyrila","Čeňka","Čestmíra","Čistoslava","Dagmar","Dagmara","Dalibora","Dalida","Dalie","Dalila","Dalimila","Dalimíra","Damaris","Damiana","Damiána","Dana","Danica","Daniela","Danuše","Danuta","Daria","Darie","Darina","Darja","Davida","Debora","Delie","Denisa","Diana","Dina","Dita","Diviška","Dobrava","Dobromila","Dobromíra","Dobroslava","Dominika","Donalda","Donáta","Dora","Doris","Dorota","Doubrava","Doubravka","Drahomila","Drahomíra","Drahoslava","Drahotína","Drahuše","Dulcinea","Dušana","Edita","Eduarda","Edvarda","Egona","Ela","Elektra","Elena","Eleonora","Elfrída","Eliška","Elsa","Elvíra","Elza","Ema","Emanuela","Emilie","Emílie","Erika","Erna","Ervína","Estela","Ester","Estera","Etela","Eufrozina","Eufrozína","Eugenie","Eulálie","Eunika","Eusebie","Eva","Evelina","Evelína","Evženie","Fabiána","Fabie","Fatima","Faustina","Faustýna","Féba","Fedora","Felicie","Felície","Felicita","Ferdinanda","Fidelie","Filipa","Filoména","Flavie","Flora","Flóra","Florentina","Florentýna","Františka","Frída","Gabriela","Gaja","Gajana","Galina","Garika","Gema","Geralda","Geraldina","Gerarda","Gerardina","Gerda","Gerharda","Gertruda","Gilberta","Gina","Gisela","Gita","Gizela","Glorie","Gordana","Graciána","Gracie","Grácie","Gražina","Gréta","Griselda","Grizelda","Gudrun","Gustava","Gvendolina","Gvendolína","Halina","Hana","Háta","Havla","Heda","Hedvika","Heidrun","Helena","Helga","Herberta","Hermína","Herta","Hilda","Hortensie","Hortenzie","Horymíra","Hostimila","Hostimíra","Hostislava","Hvězdoslava","Hyacinta","Chranislava","Iboja","Ida","Ignácie","Ignáta","Ildika","Iljana","Ilona","Ilsa","Ilza","Ines","Inesa","Inéz","Ingeborg","Ingeborga","Ingrid","Ingrida","Inka","Irena","Iris","Irma","Isabela","Isidora","Isolda","Iva","Ivana","Iveta","Ivona","Izabela","Izidora","Izolda","Jadrana","Jadranka","Jakuba","Jakubka","Jana","Jarmila","Jarolíma","Jaromíra","Jaroslava","Jasmína","Jasna","Jasněna","Jelena","Jenovéfa","Jesika","Jindra","Jindřiška","Jiřina","Jitka","Johana","Jolana","Jolanta","Jordana","Jorga","Josefa","Josefína","Jovana","Jozefa","Jozefína","Judita","Juliana","Juliána","Julie","Justina","Justýna","Juta","Kamila","Karin","Karina","Karla","Karmela","Karmen","Karolina","Karolína","Kateřina","Katrin","Katrina","Kazi","Kazimíra","Kira","Klára","Klaudie","Klementina","Klementýna","Kleopatra","Klotylda","Koleta","Kolombína","Kolumbína","Konstance","Konstancie","Konsuela","Konzuela","Kora","Kordula","Korina","Kornélie","Krasava","Krasomila","Kristina","Kristýna","Kunhuta","Květa","Květoslava","Květuše","Lada","Ladislava","Larisa","Laura","Laurencie","Lea","Léda","Leila","Lejla","Lena","Lenka","Leokádie","Leona","Leonora","Leontina","Leontýna","Leopolda","Leopoldina","Leopoldýna","Leticie","Lia","Liana","Liběna","Libora","Liboslava","Libuše","Lidmila","Liliana","Lina","Linda","Livie","Ljuba","Lola","Loreta","Lorna","Lota","Lubomíra","Luboslava","Luciána","Lucie","Ludiše","Luďka","Ludmila","Ludomíra","Ludoslava","Ludvika","Ludvíka","Luisa","Lujza","Lukrécie","Lumíra","Lydie","Lýdie","Mabel","Mabela","Magda","Magdalena","Magdaléna","Mahulena","Maja","Mája","Malvína","Manon","Manona","Manuela","Marcela","Marcelína","Margit","Margita","Mariana","Marie","Marieta","Marika","Marilyn","Marina","Mariola","Marion","Marisa","Marita","Markéta","Marlena","Marta","Martina","Matylda","Maud","Maxima","Mečislava","Medea","Médea","Melánie","Melinda","Melisa","Melita","Mercedes","Michaela","Michala","Milada","Milana","Milena","Miloslava","Milred","Miluše","Mína","Mira","Mirabela","Miranda","Mirela","Miriam","Mirjam","Mirka","Miromila","Miroslava","Mnislava","Mona","Monika","Muriel","Muriela","Myrna","Naďa","Naděžda","Naneta","Narcisa","Natalie","Natálie","Nataša","Neda","Nela","Nevena","Nika","Niké","Nikodéma","Nikol","Nikola","Nila","Nina","Noema","Noemi","Nona","Nora","Norberta","Norma","Odeta","Ofélie","Oktavie","Oktávie","Oldřiška","Olga","Oliva","Olivie","Olympie","Ondřejka","Otakara","Otilie","Otýlie","Oxana","Palmira","Pamela","Paskala","Patricie","Pavla","Pavlína","Pelagie","Penelopa","Perla","Persida","Perzida","Petra","Petrana","Petronela","Petronila","Petruše","Petula","Pilar","Polyxena","Pravdomila","Pravomila","Pravoslav","Pravoslava","Priscila","Priska","Prokopa","Přibyslava","Radana","Radimíra","Radislava","Radka","Radmila","Radomila","Radomíra","Radoslava","Radovana","Radslava","Rafaela","Ráchel","Raisa","Rajsa","Ramona","Rastislava","Rebeka","Regina","Regína","Renata","Renáta","René","Ria","Riana","Richarda","Rina","Rita","Roberta","Robina","Romana","Rosa","Rosalinda","Rosamunda","Rosana","Rostislava","Rovena","Roxana","Róza","Rozálie","Rozalinda","Rozamunda","Rozana","Rozina","Rozita","Rozvita","Rudolfa","Rudolfina","Rudolfína","Rut","Rút","Růžena","Řehořka","Sabina","Sabrina","Salomea","Salomena","Samuela","Sandra","Sára","Saskia","Saskie","Saxona","Selena","Selma","Senta","Serafína","Serena","Scholastika","Sibyla","Sidonie","Silvána","Silvie","Simeona","Simona","Skarlet","Skarleta","Slavěna","Slávka","Slavomila","Slavomíra","Soběslava","Sofie","Sofronie","Solveig","Solveiga","Soňa","Sotira","Stanislava","Stáza","Stela","Svatava","Svatoslava","Světla","Světlana","Světluše","Sylva","Sylvie","Sylvie","Šárka","Šarlota","Šimona","Štěpána","Štěpánka","Tamara","Táňa","Taťána","Tea","Tekla","Teodora","Teodozie","Teofila","Tereza","Terezie","Thea","Theodora","Theodosie","Theofila","Tomáška","Toska","Ulrika","Una","Uršula","Václava","Valburga","Valdemara","Valentina","Valentýna","Valerie","Valérie","Vanda","Vanesa","Věduna","Veleslava","Velislava","Věnceslava","Vendelína","Vendula","Vendulka","Věnka","Venuše","Věra","Verona","Veronika","Věroslava","Věslava","Vesna","Viktorie","Viléma","Vilemína","Vilma","Vincencie","Viola","Violeta","Virginie","Virgínie","Víta","Vítězslava","Viviana","Vladana","Vladěna","Vladimíra","Vladislava","Vlasta","Vlastimila","Vlastimíra","Vlastislava","Vojmíra","Vojslava","Vojtěška","Voršila","Vratislava","Xaverie","Xenie","Zaida","Zaira","Zbyhněva","Zbyňka","Zbyslava","Zbyška","Zdena","Zdenka","Zdeňka","Zdeslava","Zdislava","Zenobie","Zina","Zinaida","Zita","Zlata","Zlatomíra","Zlatuše","Zoe","Zoja","Zora","Zoroslava","Zuzana","Zvonimíra","Žakelina","Žakelína","Žaneta","Ždana","Želimíra","Želislava","Želmíra","Žitomíra","Žitoslava","Živa","Živana","Žofie"]})),RK=c((()=>{Tn=["Adamová","Adamcová","Adámková","Albrechtová","Ambrožová","Andělová","Andrlová","Antošová","Bajerová","Balážová","Balcarová","Balogová","Balounová","Baráková","Baranová","Barešová","Bártová","Bartáková","Bartoňová","Bartošová","Bartošková","Bartůňková","Baštová","Bauerová","Bayerová","Bažantová","Bečková","Bečvářová","Bednářová","Bednaříková","Bělohlávková","Bendová","Benešová","Beranová","Beránková","Bergrová","Berková","Berkyová","Bernardová","Bezděková","Bílková","Bílá","Bínová","Bittnerová","Blahová","Bláhová","Blažková","Blechová","Bobková","Bočková","Boháčová","Boháčková","Böhmová","Borovičková","Boučková","Boudová","Boušková","Brabcová","Brabencová","Bradová","Bradáčová","Braunová","Brázdová","Brázdilová","Brejchová","Březinová","Břízová","Brožová","Brožková","Brychtová","Bubeníková","Bučková","Buchtová","Burdová","Burešová","Burianová","Buriánková","Byrtusová","Čadová","Cahová","Čápová","Čapková","Čechová","Čejková","Čermáková","Černíková","Černochová","Černohorská","Černá","Červeňáková","Červenková","Červená","Červinková","Chaloupková","Chalupová","Charvátová","Chládková","Chlupová","Chmelařová","Chmelíková","Chovancová","Chromá","Chudobová","Chvátalová","Chvojková","Chytilová","Cibulková","Čiháková","Cihlářová","Císařová","Čížková","Čonková","Coufalová","Čurdová","Danková","Danilová","Danišová","Davidová","Dědková","Demetrová","Dittrichová","Divišová","Dlouhá","Dobešová","Dobiášová","Dobrovolná","Dočekalová","Dočkalová","Dohnalová","Dokoupilová","Dolečková","Dolejšová","Dolejší","Doležalová","Doleželová","Doskočilová","Dostálová","Doubková","Doubravová","Doušová","Drábková","Drozdová","Dubská","Duchoňová","Dudová","Dudková","Dufková","Dunková","Dušková","Dvořáčková","Dvořáková","Dvorská","Eliášová","Erbenová","Fabiánová","Fantová","Farkašová","Fejfarová","Fenclová","Ferencová","Ferková","Fialová","Fiedlerová","Filipová","Fischerová","Fišerová","Floriánová","Fojtíková","Foltýnová","Formanová","Formánková","Fořtová","Fousková","Francová","Franková","Franková","Fridrichová","Frydrychová","Fuchsová","Fučíková","Fuksová","Gáborová","Gabrielová","Gajdošová","Gažiová","Gottwaldová","Gregorová","Grubrová","Grundzová","Grygarová","Hájková","Hajná","Hálová","Hamplová","Hánová","Hanáčková","Hanáková","Hanousková","Hanusová","Hanušová","Hanzalová","Hanzlová","Hanzlíková","Hartmanová","Hašková","Havlová","Havelková","Havlíčková","Havlíková","Havránková","Heczková","Hegerová","Hejdová","Hejduková","Hejlová","Hejnová","Hendrychová","Hermanová","Heřmanová","Heřmánková","Hladíková","Hladká","Hlaváčová","Hlaváčková","Hlavatá","Hlávková","Hloušková","Hoffmannová","Hofmanová","Holanová","Holasová","Holcová","Holečková","Holíková","Holoubková","Holubová","Holá","Homolová","Homolková","Horová","Horáčková","Horáková","Hořejší","Horký","Horňáková","Horníčková","Horníková","Horská","Horvátová","Horváthová","Hošková","Houdková","Houšková","Hovorková","Hrabalová","Hrabovská","Hradecká","Hradilová","Hrbáčková","Hrbková","Hrdinová","Hrdličková","Hrdá","Hrnčířová","Hrochová","Hromádková","Hronová","Hrubešová","Hrubá","Hrušková","Hrůzová","Hubáčková","Hudcová","Hudečková","Hůlková","Humlová","Husáková","Hušková","Hýblová","Hynková","Jahodová","Jakešová","Jaklová","Jakoubková","Jakubcová","Janáčková","Janáková","Janatová","Jančová","Jančíková","Jandová","Janečková","Janečková","Janíčková","Janíková","Janků","Janotová","Janoušková","Janovská","Jansová","Jánská","Janů","Jarešová","Jarošová","Jašková","Javůrková","Jechová","Jedličková","Jelenová","Jelínková","Jeníčková","Jeřábková","Ježová","Ježková","Jílková","Jindrová","Jírová","Jiráková","Jiránková","Jirásková","Jiříková","Jirková","Jirků","Jiroušková","Jirsová","Johnová","Jonášová","Junková","Jurčíková","Jurečková","Juřicová","Juříková","Kabátová","Kačírková","Kadeřábková","Kadlecová","Kafková","Kaisrová","Kalová","Kalábová","Kalašová","Kalinová","Kalivodová","Kalousová","Kalousková","Kameníková","Kaňová","Káňová","Kaňková","Kantorová","Kaplanová","Karasová","Karásková","Karbanová","Karlová","Karlíková","Kasalová","Kašíková","Kašparová","Kašpárková","Kavková","Kazdová","Kindlová","Klečková","Kleinová","Klementová","Klímová","Klimentová","Klimešová","Kloučková","Kloudová","Knapová","Knotková","Kochová","Kočí","Kociánová","Kocmanová","Kocourková","Kohoutová","Kohoutková","Koláčková","Kolářová","Kolaříková","Kolková","Kolmanová","Komárková","Komínková","Konečná","Koníčková","Kopalová","Kopečková","Kopecká","Kopečná","Kopřivová","Korbelová","Kořínková","Kosová","Kosíková","Kosinová","Košťálová","Kostková","Kotasová","Kotková","Kotlárová","Kotrbová","Koubová","Koubková","Koudelová","Koudelková","Koukalová","Kouřilová","Koutná","Kováčová","Kovářová","Kovaříková","Kováříková","Kozáková","Kozlová","Krajíčková","Králová","Králíčková","Králíková","Krátká","Kratochvílová","Krausová","Krčmářová","Křečková","Krejčová","Krejčíková","Krejčířová","Křenková","Krištofová","Křivánková","Křížová","Křížková","Kropáčková","Kroupová","Krupová","Krupičková","Krupková","Kubová","Kubánková","Kubátová","Kubcová","Kubelková","Kubešová","Kubicová","Kubíčková","Kubíková","Kubínová","Kubišová","Kučová","Kučerová","Kuchařová","Kuchtová","Kudláčková","Kudrnová","Kuklová","Kulhánková","Kulhavá","Kuncová","Kunešová","Kupcová","Kupková","Kurková","Kuželová","Kvapilová","Kvasničková","Kynclová","Kyselová","Lacinová","Lacková","Lakatošová","Landová","Langová","Langrová","Langrová","Látalová","Lavičková","Le","Lebedová","Levá","Líbalová","Linhartová","Lišková","Lorencová","Loudová","Ludvíková","Lukáčová","Lukášová","Lukášková","Lukešová","Macáková","Macková","Machová","Máchová","Machačová","Macháčová","Macháčková","Machalová","Machálková","Macurová","Majerová","Malečková","Málková","Malíková","Malinová","Malá","Maňáková","Marečková","Marková","Marešová","Maříková","Maršálková","Maršíková","Martincová","Martinková","Martínková","Mašková","Masopustová","Matějíčková","Matějková","Matoušová","Matoušková","Matulová","Matušková","Matyášová","Matysová","Maxová","Mayerová","Mazánková","Medková","Melicharová","Menclová","Menšíková","Mertová","Michalová","Michalcová","Michálková","Michalíková","Michnová","Mičková","Miková","Míková","Mikešová","Miková","Mikulová","Mikulášková","Minářová","Minaříková","Mirgová","Mládková","Mlčochová","Mlejnková","Mojžíšová","Mokrá","Molnárová","Moravcová","Morávková","Motlová","Motyčková","Moučková","Moudrá","Mráčková","Mrázová","Mrázková","Mrkvičková","Muchová","Müllerová","Műllerová","Musilová","Mužíková","Myšková","Nagyová","Najmanová","Navrátilová","Nečasová","Nedbalová","Nedomová","Nedvědová","Nejedlá","Němcová","Němečková","Nešporová","Nesvadbová","Neubauerová","Neumanová","Neumannová","Nguyenová","Nguyen vanová","Nosková","Nováčková","Nováková","Novosadová","Novotná","Nová","Odehnalová","Oláhová","Olivová","Ondrová","Ondráčková","Orságová","Otáhalová","Palečková","Pánková","Papežová","Pařízková","Pašková","Pátková","Patočková","Paulová","Pavlová","Pavelková","Pavelková","Pavlasová","Pavlicová","Pavlíčková","Pavlíková","Pavlů","Pazderová","Pechová","Pechová","Pecháčková","Pecková","Pekařová","Pekárková","Pelcová","Pelikánová","Peřinová","Pernicová","Peroutková","Pešková","Pešková","Peštová","Peterková","Petrová","Petráková","Petrášová","Petříčková","Petříková","Petrů","Pham","Píchová","Pilařová","Pilátová","Píšová","Pivoňková","Plačková","Plachá","Plšková","Pluhařová","Podzimková","Pohlová","Pokorná","Poláčková","Poláchová","Poláková","Polanská","Polášková","Polívková","Popelková","Pospíchalová","Pospíšilová","Potůčková","Pourová","Prachařová","Prášková","Pražáková","Prchalová","Přibylová","Příhodová","Přikrylová","Procházková","Prokešová","Prokopová","Prošková","Provazníková","Průchová","Průšová","Pšeničková","Ptáčková","Rácová","Radová","Raková","Rambousková","Rašková","Ratajová","Řeháčková","Řeháková","Řehořová","Remešová","Řezáčová","Rezková","Řezníčková","Richtrová","Richtrová","Říhová","Roubalová","Rousová","Rozsypalová","Rudolfová","Růžková","Růžičková","Rybová","Rybářová","Rýdlová","Ryšavá","Sadílková","Šafářová","Šafaříková","Šafránková","Šálková","Samková","Šandová","Šašková","Schejbalová","Schmidtová","Schneidrová","Schwarzová","Šebková","Šebelová","Šebestová","Šedová","Šedivá","Sedláčková","Sedláková","Sedlářová","Sehnalová","Seidlová","Seifertová","Sekaninová","Semerádová","Šenková","Šestáková","Ševčíková","Severová","Sikorová","Šilhavá","Šímová","Šimáčková","Šimáková","Šimánková","Šimčíková","Šimečková","Šimková","Šimonová","Šimůnková","Šindelářová","Šindlerová","Šípová","Šípková","Šírová","Široká","Šišková","Siváková","Skácelová","Skalová","Skálová","Skalická","Sklenářová","Škodová","Skopalová","Skořepová","Škrabalová","Skřivánková","Slabá","Sládková","Sladká","Slámová","Slaninová","Slavíčková","Slavíková","Šlechtová","Slezáková","Slováčková","Slováková","Sluková","Smejkalová","Šmejkalová","Smékalová","Šmerdová","Smetanová","Šmídová","Smolová","Smolíková","Smolková","Smrčková","Smržová","Smutná","Šnajdrová","Sobková","Sobotková","Sochorová","Sojková","Sokolová","Šolcová","Sommrová","Součková","Soukupová","Sovová","Špačková","Spáčilová","Špičková","Šplíchalová","Spurná","Šrámková","Srbová","Staňková","Stárková","Stará","Šťastná","Štefanová","Štefková","Šteflová","Stehlíková","Steinerová","Stejskalová","Štěpánová","Štěpánková","Štěrbová","Stiborová","Stoklasová","Straková","Stránská","Strejčková","Strnadová","Strouhalová","Stuchlíková","Studená","Studničková","Stupková","Šubrtová","Suchánková","Suchomelová","Suchá","Suková","Šulcová","Šustrová","Švábová","Svačinová","Švandová","Švarcová","Svatoňová","Svatošová","Švecová","Švehlová","Švejdová","Švestková","Světlíková","Svitáková","Svobodová","Svozilová","Sýkorová","Synková","Syrová","Táborská","Tancošová","Teplá","Tesařová","Tichá","Tomanová","Tománková","Tomášová","Tomášková","Tomečková","Tomková","Tomešová","Tóthová","Tranová","Trávníčková","Trčková","Třísková","Trnková","Trojanová","Truhlářová","Tučková","Tůmová","Turečková","Turková","Tvrdíková","Tvrdá","Uhrová","Uhlířová","Ulrichová","Urbanová","Urbancová","Urbánková","Vacková","Váchová","Václavková","Václavíková","Vaculíková","Vágnerová","Valová","Valášková","Válková","Valentová","Valešová","Váňová","Vančurová","Vaněčková","Vaňková","Vaníčková","Vargová","Vašáková","Vašková","Vašíčková","Vávrová","Vavříková","Večeřová","Vejvodová","Vernerová","Veselá","Veverková","Víchová","Vilímková","Vinšová","Víšková","Vítová","Vitásková","Vítková","Vlachová","Vlasáková","Vlčková","Vlková","Vobořilová","Vodáková","Vodičková","Vodrážková","Vojáčková","Vojtová","Vojtěchová","Vojtková","Vojtíšková","Vokounová","Volková","Volfová","Volná","Vondrová","Vondráčková","Vondráková","Voráčková","Vorlová","Voříšková","Vorlíčková","Votavová","Votrubová","Vrabcová","Vránová","Vrbová","Vrzalová","Vybíralová","Vydrová","Vymazalová","Vyskočilová","Vysloužilová","Wagnerová","Waltrová","Webrová","Weissová","Winklerová","Wolfová","Zábranská","Žáčková","Zachová","Zahrádková","Zahradníková","Zajícová","Zajíčková","Žáková","Zálešáková","Zámečníková","Zapletalová","Zárubová","Zatloukalová","Zavadilová","Zavřelová","Zbořilová","Žďárská","Zdražilová","Zedníková","Zelenková","Zelená","Zelinková","Zemanová","Zemánková","Žemličková","Zezulová","Žídková","Žigová","Zíková","Zikmundová","Zimová","Žižková","Zlámalová","Zoubková","Zouharová","Žůrková","Zvěřinová"]})),zK=c((()=>{_n=["Abadon","Abdon","Ábel","Abelard","Abraham","Abrahám","Absolon","Absolón","Adalbert","Adam","Adin","Adolf","Adrian","Adrián","Agaton","Achil","Achiles","Alan","Alban","Albert","Albín","Albrecht","Aldo","Alen","Aleš","Alexandr","Alexej","Alfons","Alfréd","Alois","Alojz","Alva","Alvar","Alvin","Amadeus","Amand","Amát","Ambrož","Amos","Ámos","Anastáz","Anatol","Anděl","Andělín","Andrej","Anselm","Antal","Antonín","Aram","Ariel","Aristid","Arkád","Armand","Armin","Arne","Arnold","Arnošt","Áron","Árón","Arpád","Arsen","Artur","Artuš","Arzen","Atanas","Atanáš","Atila","August","Augustin","Augustýn","Aurel","Aurelián","Axel","Baltazar","Barnabáš","Bartoloměj","Basil","Bazil","Beatus","Bedřich","Benedikt","Benjamin","Benjamín","Bernard","Bertold","Bertram","Bivoj","Blahomil","Blahomír","Blahoslav","Blažej","Bohdan","Bohuchval","Bohumil","Bohumír","Bohun","Bohuslav","Bohuš","Bojan","Bolemír","Boleslav","Bonifác","Borek","Boris","Borislav","Bořek","Bořislav","Bořivoj","Božetěch","Božidar","Božislav","Branimír","Branislav","Bratislav","Bret","Brian","Brit","Bronislav","Bruno","Břetislav","Budimír","Budislav","Budivoj","Cecil","Cedrik","Celestin","Celestýn","César","Cézar","Ctibor","Ctirad","Ctislav","Cyprián","Cyril","Čeněk","Čestmír","Čistoslav","Dag","Dalibor","Dalimil","Dalimír","Damián","Dan","Daniel","Darek","Darius","David","Denis","Děpold","Dětmar","Dětřich","Dezider","Dimitrij","Dino","Dionýz","Dionýzos","Diviš","Dluhoš","Dobromil","Dobromír","Dobroslav","Dominik","Donald","Donát","Dorian","Dorián","Drahomil","Drahomír","Drahoň","Drahoslav","Drahoš","Drahotín","Drahutin","Dušan","Edgar","Edmond","Edmund","Eduard","Edvard","Edvin","Edvín","Egmont","Egon","Eliáš","Elizej","Elizeus","Elmar","Elvis","Emanuel","Emanuel","Emerich","Emil","Emilián","Engelbert","Erazim","Erazmus","Erhard","Erich","Erik","Ernest","Ernst","Ervín","Eugen","Eusebius","Evald","Evan","Evarist","Evžen","Ezechiel","Ezra","Fabián","Faust","Faustin","Faustýn","Fedor","Felicián","Felix","Ferdinand","Fidel","Fidelius","Filemon","Filibert","Filip","Filomen","Flavián","Flavius","Florentin","Florentýn","Florián","Fortunát","Fráňa","Franc","František","Fridolín","Gabin","Gabriel","Gál","Garik","Gaston","Gedeon","Gejza","Genadij","Gerald","Gerard","Gerazim","Gerhard","Géza","Gilbert","Gleb","Glen","Gorazd","Gordon","Gothard","Gracián","Grant","Gunter","Gűnter","Gustav","Hanuš","Harald","Harold","Haštal","Havel","Helmut","Herbert","Herman","Heřman","Hilar","Hilarius","Hjalmar","Homér","Honor","Honorius","Horác","Horst","Horymír","Hostimil","Hostimír","Hostislav","Hostivít","Hovard","Hubert","Hugo","Hvězdoslav","Hyacint","Hynek","Hypolit","Chrabroš","Chraniboj","Chranibor","Chranislav","Chrudoš","Chval","Ignác","Ignát","Igor","Ilja","Inocenc","Irenej","Ireneus","Irvin","Isidor","Ivan","Ivar","Ivo","Ivor","Izaiáš","Izák","Izidor","Izmael","Jacek","Jáchym","Jakub","Jan","Jarmil","Jarolím","Jaromil","Jaromír","Jaroslav","Jason","Jasoň","Jeremiáš","Jeroným","Jiljí","Jimram","Jindřich","Jiří","Job","Joel","Jonáš","Jonatan","Jonathan","Jordan","Josef","Jošt","Jozef","Jozue","Juda","Julián","Julius","Justin","Justýn","Kajetán","Kamil","Karel","Kasián","Kastor","Kašpar","Kazimír","Kilián","Kim","Klaudián","Klaudius","Klement","Kliment","Knut","Koloman","Kolombín","Kolumbán","Kolumbín","Konrád","Konstantin","Konstantýn","Kornel","Kornelius","Kosma","Kosmas","Krasomil","Krasoslav","Kristián","Kryšpín","Kryštof","Křesomysl","Křišťan","Kurt","Květoň","Květoslav","Květoš","Kvido","Ladislav","Lambert","Lars","Laurenc","Lazar","Leander","Leandr","Leo","Leodegar","Leon","Leonard","Leonid","Leontýn","Leopold","Leoš","Lešek","Lev","Libor","Liboslav","Lionel","Livius","Lorenc","Lotar","Lothar","Lubomír","Lubor","Luboslav","Luboš","Lucián","Lucius","Luděk","Ludivoj","Ludomír","Ludoslav","Ludvík","Lukáš","Lukrecius","Lumír","Lutibor","Lutobor","Magnus","Makar","Manfred","Manfréd","Mansvet","Manuel","Marcel","Marek","Marian","Marián","Marin","Mario","Marius","Martin","Matěj","Matouš","Matyáš","Max","Maxim","Maximilián","Maxmilián","Mečislav","Medard","Melichar","Merlin","Mervin","Metod","Metoděj","Michael","Michal","Mikoláš","Mikuláš","Milan","Milíč","Milík","Milivoj","Miloň","Milorad","Miloslav","Miloš","Milota","Milouš","Milovan","Milovín","Milutín","Mirek","Mirko","Miromil","Miron","Miroslav","Mirtil","Mlad","Mladen","Mnata","Mnislav","Modest","Mojmír","Mojžíš","Morgan","Moric","Moris","Mořic","Mstislav","Myron","Myrtil","Napoleon","Narcis","Natan","Natanael","Nathan","Nathanael","Něhoslav","Neklan","Nepomuk","Nezamysl","Nikita","Nikodém","Nikola","Nikolas","Norbert","Norman","Odolen","Odon","Oktavián","Oktavius","Olaf","Olbram","Oldřich","Oleg","Oliver","Omar","Ondřej","Orest","Oskar","Osvald","Ota","Otakar","Otmar","Oto","Otokar","Otomar","Ovidius","Palmiro","Pankrác","Pantaleon","Paris","Parsival","Paskal","Patrik","Pavel","Pavlín","Pelhřim","Perikles","Petr","Petronius","Pius","Platon","Platón","Polykarp","Pravdomil","Pravomil","Prokop","Prosper","Přemysl","Přibyslav","Radan","Radegast","Radek","Radhost","Radim","Radimír","Radislav","Radivoj","Radko","Radmil","Radomil","Radomír","Radoslav","Radoš","Radovan","Radúz","Radvan","Rafael","Raimund","Rainald","Rainer","Rainhard","Rainold","Rajko","Ralf","Ramon","Randolf","Ranek","Ranko","Rastislav","Ratibor","Ratmír","Redmond","Reginald","Remig","Remus","Renát","René","Richard","Robert","Robin","Robinson","Rodan","Roderik","Rodrigo","Roger","Roch","Roland","Rolf","Roman","Romeo","Romuald","Romul","Romulus","Ronald","Rostislav","Ruben","Rudolf","Rufus","Rupert","Ruprecht","Ruslan","Řehoř","Sába","Sámo","Samson","Samuel","Saturnin","Saul","Sáva","Sebastian","Sebastián","Sebestian","Sedrik","Serafín","Serenus","Sergej","Servác","Severín","Sidon","Sigfríd","Silvan","Silván","Silvestr","Silvius","Simeon","Simon","Sinkler","Sixt","Sixtus","Slávek","Slaviboj","Slavibor","Slavoboj","Slavoj","Slavomil","Slavomír","Smil","Soběslav","Sokrat","Soter","Spytihněv","Stanimír","Stanislav","Stojan","Stojmír","Svatoboj","Svatobor","Svatomír","Svatopluk","Svatoslav","Sven","Svetozar","Šalamoun","Šalomoun","Šavel","Šebastián","Šimon","Šťasta","Štefan","Štěpán","Tadeáš","Tankred","Taras","Teobald","Teodor","Teodorik","Teodoz","Teofan","Teofil","Terenc","Terencius","Theobald","Theodor","Theodorik","Theofan","Theofil","Tiber","Tiberius","Tibor","Tiburcius","Tichomil","Tichomír","Tichon","Timon","Timotej","Timoteus","Timur","Titus","Tobiáš","Tomáš","Tomislav","Tor","Torkvát","Torsten","Tristan","Udo","Ulrich","Upton","Urban","Uve","Václav","Vadim","Valdemar","Valentin","Valentýn","Valerián","Valter","Valtr","Vasil","Vavřinec","Veleslav","Velimír","Velislav","Věnceslav","Vendelín","Věnek","Verner","Věroslav","Vidor","Viktor","Viktorin","Viktorín","Vilém","Vilibald","Vilmar","Vincenc","Virgil","Virgin","Vít","Vítězslav","Vitold","Vítoslav","Vivian","Vladan","Vladimír","Vladislav","Vladivoj","Vlastimil","Vlastimír","Vlastislav","Vlk","Vojen","Vojmil","Vojmír","Vojslav","Vojtěch","Vok","Volfgang","Vratislav","Vsevolod","Všeboj","Všebor","Všerad","Všeslav","Xaver","Xaverius","Záboj","Zachar","Zachariáš","Záviš","Zbislav","Zbyhněv","Zbyněk","Zbyslav","Zbyšek","Zdeněk","Zderad","Zdeslav","Zdík","Zdirad","Zdislav","Zeno","Zenon","Zikmund","Zlatan","Zlatko","Zlatomír","Zoltán","Zoran","Zoroslav","Zosim","Zvonimír","Žarko","Ždan","Želibor","Želimír","Želislav","Želmír","Žitomír","Žitoslav","Živan"]})),OK=c((()=>{KK(),zK(),wn=Mn.concat(_n)})),IK=c((()=>{jn=["Adam","Adamec","Adámek","Albrecht","Ambrož","Anděl","Andrle","Antoš","Bajer","Baláž","Balcar","Balog","Baloun","Barák","Baran","Bareš","Bárta","Barták","Bartoň","Bartoš","Bartošek","Bartůněk","Bašta","Bauer","Bayer","Bažant","Bečka","Bečvář","Bednář","Bednařík","Bělohlávek","Benda","Beneš","Beran","Beránek","Berger","Berka","Berky","Bernard","Bezděk","Bílek","Bílý","Bína","Bittner","Blaha","Bláha","Blažek","Blecha","Bobek","Boček","Boháč","Boháček","Böhm","Borovička","Bouček","Bouda","Bouška","Brabec","Brabenec","Brada","Bradáč","Braun","Brázda","Brázdil","Brejcha","Březina","Bříza","Brož","Brožek","Brychta","Bubeník","Buček","Buchta","Burda","Bureš","Burian","Buriánek","Byrtus","Čada","Caha","Čáp","Čapek","Čech","Čejka","Čermák","Černík","Černoch","Černohorský","Černý","Červeňák","Červenka","Červený","Červinka","Chaloupka","Chalupa","Charvát","Chládek","Chlup","Chmelař","Chmelík","Chovanec","Chromý","Chudoba","Chvátal","Chvojka","Chytil","Cibulka","Čihák","Cihlář","Císař","Čížek","Čonka","Coufal","Čurda","Daněk","Daniel","Daniš","David","Dědek","Demeter","Dittrich","Diviš","Dlouhý","Dobeš","Dobiáš","Dobrovolný","Dočekal","Dočkal","Dohnal","Dokoupil","Doleček","Dolejš","Dolejší","Doležal","Doležel","Doskočil","Dostál","Doubek","Doubrava","Douša","Drábek","Drozd","Dubský","Duchoň","Duda","Dudek","Dufek","Dunka","Dušek","Dvořáček","Dvořák","Dvorský","Eliáš","Erben","Fabián","Fanta","Farkaš","Fejfar","Fencl","Ferenc","Ferko","Fiala","Fiedler","Filip","Fischer","Fišer","Florián","Fojtík","Foltýn","Forman","Formánek","Fořt","Fousek","Franc","Franěk","Frank","Fridrich","Frydrych","Fuchs","Fučík","Fuksa","Gábor","Gabriel","Gajdoš","Gaži","Gottwald","Gregor","Gruber","Grundza","Grygar","Hájek","Hajný","Hála","Hampl","Hána","Hanáček","Hanák","Hanousek","Hanus","Hanuš","Hanzal","Hanzl","Hanzlík","Hartman","Hašek","Havel","Havelka","Havlíček","Havlík","Havránek","Heczko","Heger","Hejda","Hejduk","Hejl","Hejna","Hendrych","Herman","Heřman","Heřmánek","Hladík","Hladký","Hlaváč","Hlaváček","Hlavatý","Hlávka","Hloušek","Hoffmann","Hofman","Holan","Holas","Holec","Holeček","Holík","Holoubek","Holub","Holý","Homola","Homolka","Hora","Horáček","Horák","Hořejší","Horký","Horňák","Horníček","Horník","Horský","Horvát","Horváth","Hošek","Houdek","Houška","Hovorka","Hrabal","Hrabovský","Hradecký","Hradil","Hrbáček","Hrbek","Hrdina","Hrdlička","Hrdý","Hrnčíř","Hroch","Hromádka","Hron","Hrubeš","Hrubý","Hruška","Hrůza","Hubáček","Hudec","Hudeček","Hůlka","Huml","Husák","Hušek","Hýbl","Hynek","Jahoda","Jakeš","Jakl","Jakoubek","Jakubec","Janáček","Janák","Janata","Janča","Jančík","Janda","Janeček","Janečka","Janíček","Janík","Janků","Janota","Janoušek","Janovský","Jansa","Jánský","Janů","Jareš","Jaroš","Jašek","Javůrek","Jech","Jedlička","Jelen","Jelínek","Jeníček","Jeřábek","Jež","Ježek","Jílek","Jindra","Jíra","Jirák","Jiránek","Jirásek","Jiřík","Jirka","Jirků","Jiroušek","Jirsa","John","Jonáš","Junek","Jurčík","Jurečka","Juřica","Juřík","Kabát","Kačírek","Kadeřábek","Kadlec","Kafka","Kaiser","Kala","Kaláb","Kalaš","Kalina","Kalivoda","Kalous","Kalousek","Kameník","Kaňa","Káňa","Kaňka","Kantor","Kaplan","Karas","Karásek","Karban","Karel","Karlík","Kasal","Kašík","Kašpar","Kašpárek","Kavka","Kazda","Kindl","Klečka","Klein","Klement","Klíma","Kliment","Klimeš","Klouček","Klouda","Knap","Knotek","Koch","Kočí","Kocián","Kocman","Kocourek","Kohout","Kohoutek","Koláček","Kolář","Kolařík","Kolek","Kolman","Komárek","Komínek","Konečný","Koníček","Kopal","Kopeček","Kopecký","Kopečný","Kopřiva","Korbel","Kořínek","Kos","Kosík","Kosina","Košťál","Kostka","Kotas","Kotek","Kotlár","Kotrba","Kouba","Koubek","Koudela","Koudelka","Koukal","Kouřil","Koutný","Kováč","Kovář","Kovařík","Kovářík","Kozák","Kozel","Krajíček","Král","Králíček","Králík","Krátký","Kratochvíl","Kraus","Krčmář","Křeček","Krejčí","Krejčík","Krejčíř","Křenek","Krištof","Křivánek","Kříž","Křížek","Kropáček","Kroupa","Krupa","Krupička","Krupka","Kuba","Kubánek","Kubát","Kubec","Kubelka","Kubeš","Kubica","Kubíček","Kubík","Kubín","Kubiš","Kuča","Kučera","Kuchař","Kuchta","Kudláček","Kudrna","Kukla","Kulhánek","Kulhavý","Kunc","Kuneš","Kupec","Kupka","Kurka","Kužel","Kvapil","Kvasnička","Kyncl","Kysela","Lacina","Lacko","Lakatoš","Landa","Lang","Langer","Langr","Látal","Lavička","Le","Lebeda","Levý","Líbal","Linhart","Liška","Lorenc","Louda","Ludvík","Lukáč","Lukáš","Lukášek","Lukeš","Macák","Macek","Mach","Mácha","Machač","Macháč","Macháček","Machala","Machálek","Macura","Majer","Maleček","Málek","Malík","Malina","Malý","Maňák","Mareček","Marek","Mareš","Mařík","Maršálek","Maršík","Martinec","Martinek","Martínek","Mašek","Masopust","Matějíček","Matějka","Matouš","Matoušek","Matula","Matuška","Matyáš","Matys","Maxa","Mayer","Mazánek","Medek","Melichar","Mencl","Menšík","Merta","Michal","Michalec","Michálek","Michalík","Michna","Mička","Mika","Míka","Mikeš","Miko","Mikula","Mikulášek","Minář","Minařík","Mirga","Mládek","Mlčoch","Mlejnek","Mojžíš","Mokrý","Molnár","Moravec","Morávek","Motl","Motyčka","Moučka","Moudrý","Mráček","Mráz","Mrázek","Mrkvička","Mucha","Müller","Műller","Musil","Mužík","Myška","Nagy","Najman","Navrátil","Nečas","Nedbal","Nedoma","Nedvěd","Nejedlý","Němec","Němeček","Nešpor","Nesvadba","Neubauer","Neuman","Neumann","Nguyen","Nguyen van","Nosek","Nováček","Novák","Novosad","Novotný","Nový","Odehnal","Oláh","Oliva","Ondra","Ondráček","Orság","Otáhal","Paleček","Pánek","Papež","Pařízek","Pašek","Pátek","Patočka","Paul","Pavel","Pavelek","Pavelka","Pavlas","Pavlica","Pavlíček","Pavlík","Pavlů","Pazdera","Pech","Pecha","Pecháček","Pecka","Pekař","Pekárek","Pelc","Pelikán","Peřina","Pernica","Peroutka","Pešek","Peška","Pešta","Peterka","Petr","Petrák","Petráš","Petříček","Petřík","Petrů","Pham","Pícha","Pilař","Pilát","Píša","Pivoňka","Plaček","Plachý","Plšek","Pluhař","Podzimek","Pohl","Pokorný","Poláček","Polách","Polák","Polanský","Polášek","Polívka","Popelka","Pospíchal","Pospíšil","Potůček","Pour","Prachař","Prášek","Pražák","Prchal","Přibyl","Příhoda","Přikryl","Procházka","Prokeš","Prokop","Prošek","Provazník","Průcha","Průša","Pšenička","Ptáček","Rác","Rada","Rak","Rambousek","Raška","Rataj","Řeháček","Řehák","Řehoř","Remeš","Řezáč","Rezek","Řezníček","Richter","Richtr","Říha","Roubal","Rous","Rozsypal","Rudolf","Růžek","Růžička","Ryba","Rybář","Rýdl","Ryšavý","Sadílek","Šafář","Šafařík","Šafránek","Šálek","Samek","Šanda","Šašek","Schejbal","Schmidt","Schneider","Schwarz","Šebek","Šebela","Šebesta","Šeda","Šedivý","Sedláček","Sedlák","Sedlář","Sehnal","Seidl","Seifert","Sekanina","Semerád","Šenk","Šesták","Ševčík","Severa","Sikora","Šilhavý","Šíma","Šimáček","Šimák","Šimánek","Šimčík","Šimeček","Šimek","Šimon","Šimůnek","Šindelář","Šindler","Šíp","Šípek","Šír","Široký","Šiška","Sivák","Skácel","Skala","Skála","Skalický","Sklenář","Škoda","Skopal","Skořepa","Škrabal","Skřivánek","Slabý","Sládek","Sladký","Sláma","Slanina","Slavíček","Slavík","Šlechta","Slezák","Slováček","Slovák","Sluka","Smejkal","Šmejkal","Smékal","Šmerda","Smetana","Šmíd","Smola","Smolík","Smolka","Smrčka","Smrž","Smutný","Šnajdr","Sobek","Sobotka","Sochor","Sojka","Sokol","Šolc","Sommer","Souček","Soukup","Sova","Špaček","Spáčil","Špička","Šplíchal","Spurný","Šrámek","Srb","Staněk","Stárek","Starý","Šťastný","Štefan","Štefek","Štefl","Stehlík","Steiner","Stejskal","Štěpán","Štěpánek","Štěrba","Stibor","Stoklasa","Straka","Stránský","Strejček","Strnad","Strouhal","Stuchlík","Studený","Studnička","Stupka","Šubrt","Suchánek","Suchomel","Suchý","Suk","Šulc","Šustr","Šváb","Svačina","Švanda","Švarc","Svatoň","Svatoš","Švec","Švehla","Švejda","Švestka","Světlík","Sviták","Svoboda","Svozil","Sýkora","Synek","Syrový","Táborský","Tancoš","Teplý","Tesař","Tichý","Toman","Tománek","Tomáš","Tomášek","Tomeček","Tomek","Tomeš","Tóth","Tran","Trávníček","Trčka","Tříska","Trnka","Trojan","Truhlář","Tuček","Tůma","Tureček","Turek","Tvrdík","Tvrdý","Uher","Uhlíř","Ulrich","Urban","Urbanec","Urbánek","Vacek","Vácha","Václavek","Václavík","Vaculík","Vágner","Vala","Valášek","Válek","Valenta","Valeš","Váňa","Vančura","Vaněček","Vaněk","Vaníček","Varga","Vašák","Vašek","Vašíček","Vávra","Vavřík","Večeřa","Vejvoda","Verner","Veselý","Veverka","Vícha","Vilímek","Vinš","Víšek","Vít","Vitásek","Vítek","Vlach","Vlasák","Vlček","Vlk","Vobořil","Vodák","Vodička","Vodrážka","Vojáček","Vojta","Vojtěch","Vojtek","Vojtíšek","Vokoun","Volek","Volf","Volný","Vondra","Vondráček","Vondrák","Voráček","Vorel","Voříšek","Vorlíček","Votava","Votruba","Vrabec","Vrána","Vrba","Vrzal","Vybíral","Vydra","Vymazal","Vyskočil","Vysloužil","Wagner","Walter","Weber","Weiss","Winkler","Wolf","Zábranský","Žáček","Zach","Zahrádka","Zahradník","Zajíc","Zajíček","Žák","Zálešák","Zámečník","Zapletal","Záruba","Zatloukal","Zavadil","Zavřel","Zbořil","Žďárský","Zdražil","Zedník","Zelenka","Zelený","Zelinka","Zeman","Zemánek","Žemlička","Zezula","Žídek","Žiga","Zíka","Zikmund","Zima","Žižka","Zlámal","Zoubek","Zouhar","Žůrek","Zvěřina"]})),VK=c((()=>{RK(),IK(),En=Tn.concat(jn)})),GK=c((()=>{Nn=["#{prefix} #{male_first_name} #{male_last_name}","#{prefix} #{female_first_name} #{female_last_name}","#{male_first_name} #{male_last_name} #{suffix}","#{female_first_name} #{female_last_name} #{suffix}","#{male_first_name} #{male_last_name}","#{male_first_name} #{male_last_name}","#{male_first_name} #{male_last_name}","#{female_first_name} #{female_last_name}","#{female_first_name} #{female_last_name}","#{female_first_name} #{female_last_name}"]})),HK=c((()=>{Bn=["Ing.","Mgr.","JUDr.","MUDr."]})),FK=c((()=>{Pn=["Phd."]})),JK=c((()=>{Ln={descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","Dynamic","International","Legacy","Forward","Internal","Human","Chief","Principal"],level:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job:["Supervisor","Associate","Executive","Liason","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"]}})),UK=c((()=>{KK(),RK(),OK(),VK(),zK(),IK(),GK(),HK(),FK(),JK(),Dn={female_first_name:Mn,female_last_name:Tn,first_name:wn,last_name:En,male_first_name:_n,male_last_name:jn,name:Nn,prefix:Bn,suffix:Pn,title:Ln}})),WK=c((()=>{xn=["601 ### ###","737 ### ###","736 ### ###","### ### ###","+420 ### ### ###","00420 ### ### ###"]})),ZK=c((()=>{WK(),Cn={formats:xn}})),qK=c((()=>{yK(),jK(),BK(),DK(),CK(),UK(),ZK(),Kn={title:"Czech",address:on,company:mn,date:gn,internet:bn,lorem:An,name:Dn,phone_number:Cn}})),QK=c((()=>{Rn=["###","##","#","##a","##b","##c"]})),YK=c((()=>{zn=["#{city_prefix} #{Name.first_name}#{city_suffix}","#{city_prefix} #{Name.first_name}","#{Name.first_name}#{city_suffix}","#{Name.last_name}#{city_suffix}"]})),$K=c((()=>{On=["Nord","Ost","West","Süd","Neu","Alt","Bad"]})),XK=c((()=>{In=["stadt","dorf","land","scheid","burg"]})),eR=c((()=>{Vn=["Ägypten","Äquatorialguinea","Äthiopien","Österreich","Afghanistan","Albanien","Algerien","Amerikanisch-Samoa","Amerikanische Jungferninseln","Andorra","Angola","Anguilla","Antarktis","Antigua und Barbuda","Argentinien","Armenien","Aruba","Aserbaidschan","Australien","Bahamas","Bahrain","Bangladesch","Barbados","Belarus","Belgien","Belize","Benin","die Bermudas","Bhutan","Bolivien","Bosnien und Herzegowina","Botsuana","Bouvetinsel","Brasilien","Britische Jungferninseln","Britisches Territorium im Indischen Ozean","Brunei Darussalam","Bulgarien","Burkina Faso","Burundi","Chile","China","Cookinseln","Costa Rica","Dänemark","Demokratische Republik Kongo","Demokratische Volksrepublik Korea","Deutschland","Dominica","Dominikanische Republik","Dschibuti","Ecuador","El Salvador","Eritrea","Estland","Färöer","Falklandinseln","Fidschi","Finnland","Frankreich","Französisch-Guayana","Französisch-Polynesien","Französische Gebiete im südlichen Indischen Ozean","Gabun","Gambia","Georgien","Ghana","Gibraltar","Grönland","Grenada","Griechenland","Guadeloupe","Guam","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Heard und McDonaldinseln","Honduras","Hongkong","Indien","Indonesien","Irak","Iran","Irland","Island","Israel","Italien","Jamaika","Japan","Jemen","Jordanien","Jugoslawien","Kaimaninseln","Kambodscha","Kamerun","Kanada","Kap Verde","Kasachstan","Katar","Kenia","Kirgisistan","Kiribati","Kleinere amerikanische Überseeinseln","Kokosinseln","Kolumbien","Komoren","Kongo","Kroatien","Kuba","Kuwait","Laos","Lesotho","Lettland","Libanon","Liberia","Libyen","Liechtenstein","Litauen","Luxemburg","Macau","Madagaskar","Malawi","Malaysia","Malediven","Mali","Malta","ehemalige jugoslawische Republik Mazedonien","Marokko","Marshallinseln","Martinique","Mauretanien","Mauritius","Mayotte","Mexiko","Mikronesien","Monaco","Mongolei","Montserrat","Mosambik","Myanmar","Nördliche Marianen","Namibia","Nauru","Nepal","Neukaledonien","Neuseeland","Nicaragua","Niederländische Antillen","Niederlande","Niger","Nigeria","Niue","Norfolkinsel","Norwegen","Oman","Osttimor","Pakistan","Palau","Panama","Papua-Neuguinea","Paraguay","Peru","Philippinen","Pitcairninseln","Polen","Portugal","Puerto Rico","Réunion","Republik Korea","Republik Moldau","Ruanda","Rumänien","Russische Föderation","São Tomé und Príncipe","Südafrika","Südgeorgien und Südliche Sandwichinseln","Salomonen","Sambia","Samoa","San Marino","Saudi-Arabien","Schweden","Schweiz","Senegal","Seychellen","Sierra Leone","Simbabwe","Singapur","Slowakei","Slowenien","Somalien","Spanien","Sri Lanka","St. Helena","St. Kitts und Nevis","St. Lucia","St. Pierre und Miquelon","St. Vincent und die Grenadinen","Sudan","Surinam","Svalbard und Jan Mayen","Swasiland","Syrien","Türkei","Tadschikistan","Taiwan","Tansania","Thailand","Togo","Tokelau","Tonga","Trinidad und Tobago","Tschad","Tschechische Republik","Tunesien","Turkmenistan","Turks- und Caicosinseln","Tuvalu","Uganda","Ukraine","Ungarn","Uruguay","Usbekistan","Vanuatu","Vatikanstadt","Venezuela","Vereinigte Arabische Emirate","Vereinigte Staaten","Vereinigtes Königreich","Vietnam","Wallis und Futuna","Weihnachtsinsel","Westsahara","Zentralafrikanische Republik","Zypern"]})),aR=c((()=>{Gn=["Deutschland"]})),nR=c((()=>{Hn=["#####","#####"]})),iR=c((()=>{Fn=["Apt. ###","Zimmer ###","# OG"]})),rR=c((()=>{Jn=["Baden-Württemberg","Bayern","Berlin","Brandenburg","Bremen","Hamburg","Hessen","Mecklenburg-Vorpommern","Niedersachsen","Nordrhein-Westfalen","Rheinland-Pfalz","Saarland","Sachsen","Sachsen-Anhalt","Schleswig-Holstein","Thüringen"]})),tR=c((()=>{Un=["BW","BY","BE","BB","HB","HH","HE","MV","NI","NW","RP","SL","SN","ST","SH","TH"]})),oR=c((()=>{Wn=["#{street_name} #{building_number}"]})),sR=c((()=>{Zn=["#{street_root}"]})),lR=c((()=>{qn=["Ackerweg","Adalbert-Stifter-Str.","Adalbertstr.","Adolf-Baeyer-Str.","Adolf-Kaschny-Str.","Adolf-Reichwein-Str.","Adolfsstr.","Ahornweg","Ahrstr.","Akazienweg","Albert-Einstein-Str.","Albert-Schweitzer-Str.","Albertus-Magnus-Str.","Albert-Zarthe-Weg","Albin-Edelmann-Str.","Albrecht-Haushofer-Str.","Aldegundisstr.","Alexanderstr.","Alfred-Delp-Str.","Alfred-Kubin-Str.","Alfred-Stock-Str.","Alkenrather Str.","Allensteiner Str.","Alsenstr.","Alt Steinbücheler Weg","Alte Garten","Alte Heide","Alte Landstr.","Alte Ziegelei","Altenberger Str.","Altenhof","Alter Grenzweg","Altstadtstr.","Am Alten Gaswerk","Am Alten Schafstall","Am Arenzberg","Am Benthal","Am Birkenberg","Am Blauen Berg","Am Borsberg","Am Brungen","Am Büchelter Hof","Am Buttermarkt","Am Ehrenfriedhof","Am Eselsdamm","Am Falkenberg","Am Frankenberg","Am Gesundheitspark","Am Gierlichshof","Am Graben","Am Hagelkreuz","Am Hang","Am Heidkamp","Am Hemmelrather Hof","Am Hofacker","Am Hohen Ufer","Am Höllers Eck","Am Hühnerberg","Am Jägerhof","Am Junkernkamp","Am Kemperstiegel","Am Kettnersbusch","Am Kiesberg","Am Klösterchen","Am Knechtsgraben","Am Köllerweg","Am Köttersbach","Am Kreispark","Am Kronefeld","Am Küchenhof","Am Kühnsbusch","Am Lindenfeld","Am Märchen","Am Mittelberg","Am Mönchshof","Am Mühlenbach","Am Neuenhof","Am Nonnenbruch","Am Plattenbusch","Am Quettinger Feld","Am Rosenhügel","Am Sandberg","Am Scherfenbrand","Am Schokker","Am Silbersee","Am Sonnenhang","Am Sportplatz","Am Stadtpark","Am Steinberg","Am Telegraf","Am Thelenhof","Am Vogelkreuz","Am Vogelsang","Am Vogelsfeldchen","Am Wambacher Hof","Am Wasserturm","Am Weidenbusch","Am Weiher","Am Weingarten","Am Werth","Amselweg","An den Irlen","An den Rheinauen","An der Bergerweide","An der Dingbank","An der Evangelischen Kirche","An der Evgl. Kirche","An der Feldgasse","An der Fettehenne","An der Kante","An der Laach","An der Lehmkuhle","An der Lichtenburg","An der Luisenburg","An der Robertsburg","An der Schmitten","An der Schusterinsel","An der Steinrütsch","An St. Andreas","An St. Remigius","Andreasstr.","Ankerweg","Annette-Kolb-Str.","Apenrader Str.","Arnold-Ohletz-Str.","Atzlenbacher Str.","Auerweg","Auestr.","Auf dem Acker","Auf dem Blahnenhof","Auf dem Bohnbüchel","Auf dem Bruch","Auf dem End","Auf dem Forst","Auf dem Herberg","Auf dem Lehn","Auf dem Stein","Auf dem Weierberg","Auf dem Weiherhahn","Auf den Reien","Auf der Donnen","Auf der Grieße","Auf der Ohmer","Auf der Weide","Auf'm Berg","Auf'm Kamp","Augustastr.","August-Kekulé-Str.","A.-W.-v.-Hofmann-Str.","Bahnallee","Bahnhofstr.","Baltrumstr.","Bamberger Str.","Baumberger Str.","Bebelstr.","Beckers Kämpchen","Beerenstr.","Beethovenstr.","Behringstr.","Bendenweg","Bensberger Str.","Benzstr.","Bergische Landstr.","Bergstr.","Berliner Platz","Berliner Str.","Bernhard-Letterhaus-Str.","Bernhard-Lichtenberg-Str.","Bernhard-Ridder-Str.","Bernsteinstr.","Bertha-Middelhauve-Str.","Bertha-von-Suttner-Str.","Bertolt-Brecht-Str.","Berzeliusstr.","Bielertstr.","Biesenbach","Billrothstr.","Birkenbergstr.","Birkengartenstr.","Birkenweg","Bismarckstr.","Bitterfelder Str.","Blankenburg","Blaukehlchenweg","Blütenstr.","Boberstr.","Böcklerstr.","Bodelschwinghstr.","Bodestr.","Bogenstr.","Bohnenkampsweg","Bohofsweg","Bonifatiusstr.","Bonner Str.","Borkumstr.","Bornheimer Str.","Borsigstr.","Borussiastr.","Bracknellstr.","Brahmsweg","Brandenburger Str.","Breidenbachstr.","Breslauer Str.","Bruchhauser Str.","Brückenstr.","Brucknerstr.","Brüder-Bonhoeffer-Str.","Buchenweg","Bürgerbuschweg","Burgloch","Burgplatz","Burgstr.","Burgweg","Bürriger Weg","Burscheider Str.","Buschkämpchen","Butterheider Str.","Carl-Duisberg-Platz","Carl-Duisberg-Str.","Carl-Leverkus-Str.","Carl-Maria-von-Weber-Platz","Carl-Maria-von-Weber-Str.","Carlo-Mierendorff-Str.","Carl-Rumpff-Str.","Carl-von-Ossietzky-Str.","Charlottenburger Str.","Christian-Heß-Str.","Claasbruch","Clemens-Winkler-Str.","Concordiastr.","Cranachstr.","Dahlemer Str.","Daimlerstr.","Damaschkestr.","Danziger Str.","Debengasse","Dechant-Fein-Str.","Dechant-Krey-Str.","Deichtorstr.","Dhünnberg","Dhünnstr.","Dianastr.","Diedenhofener Str.","Diepental","Diepenthaler Str.","Dieselstr.","Dillinger Str.","Distelkamp","Dohrgasse","Domblick","Dönhoffstr.","Dornierstr.","Drachenfelsstr.","Dr.-August-Blank-Str.","Dresdener Str.","Driescher Hecke","Drosselweg","Dudweilerstr.","Dünenweg","Dünfelder Str.","Dünnwalder Grenzweg","Düppeler Str.","Dürerstr.","Dürscheider Weg","Düsseldorfer Str.","Edelrather Weg","Edmund-Husserl-Str.","Eduard-Spranger-Str.","Ehrlichstr.","Eichenkamp","Eichenweg","Eidechsenweg","Eifelstr.","Eifgenstr.","Eintrachtstr.","Elbestr.","Elisabeth-Langgässer-Str.","Elisabethstr.","Elisabeth-von-Thadden-Str.","Elisenstr.","Elsa-Brändström-Str.","Elsbachstr.","Else-Lasker-Schüler-Str.","Elsterstr.","Emil-Fischer-Str.","Emil-Nolde-Str.","Engelbertstr.","Engstenberger Weg","Entenpfuhl","Erbelegasse","Erftstr.","Erfurter Str.","Erich-Heckel-Str.","Erich-Klausener-Str.","Erich-Ollenhauer-Str.","Erlenweg","Ernst-Bloch-Str.","Ernst-Ludwig-Kirchner-Str.","Erzbergerstr.","Eschenallee","Eschenweg","Esmarchstr.","Espenweg","Euckenstr.","Eulengasse","Eulenkamp","Ewald-Flamme-Str.","Ewald-Röll-Str.","Fährstr.","Farnweg","Fasanenweg","Faßbacher Hof","Felderstr.","Feldkampstr.","Feldsiefer Weg","Feldsiefer Wiesen","Feldstr.","Feldtorstr.","Felix-von-Roll-Str.","Ferdinand-Lassalle-Str.","Fester Weg","Feuerbachstr.","Feuerdornweg","Fichtenweg","Fichtestr.","Finkelsteinstr.","Finkenweg","Fixheider Str.","Flabbenhäuschen","Flensburger Str.","Fliederweg","Florastr.","Florianweg","Flotowstr.","Flurstr.","Föhrenweg","Fontanestr.","Forellental","Fortunastr.","Franz-Esser-Str.","Franz-Hitze-Str.","Franz-Kail-Str.","Franz-Marc-Str.","Freiburger Str.","Freiheitstr.","Freiherr-vom-Stein-Str.","Freudenthal","Freudenthaler Weg","Fridtjof-Nansen-Str.","Friedenberger Str.","Friedensstr.","Friedhofstr.","Friedlandstr.","Friedlieb-Ferdinand-Runge-Str.","Friedrich-Bayer-Str.","Friedrich-Bergius-Platz","Friedrich-Ebert-Platz","Friedrich-Ebert-Str.","Friedrich-Engels-Str.","Friedrich-List-Str.","Friedrich-Naumann-Str.","Friedrich-Sertürner-Str.","Friedrichstr.","Friedrich-Weskott-Str.","Friesenweg","Frischenberg","Fritz-Erler-Str.","Fritz-Henseler-Str.","Fröbelstr.","Fürstenbergplatz","Fürstenbergstr.","Gabriele-Münter-Str.","Gartenstr.","Gebhardstr.","Geibelstr.","Gellertstr.","Georg-von-Vollmar-Str.","Gerhard-Domagk-Str.","Gerhart-Hauptmann-Str.","Gerichtsstr.","Geschwister-Scholl-Str.","Gezelinallee","Gierener Weg","Ginsterweg","Gisbert-Cremer-Str.","Glücksburger Str.","Gluckstr.","Gneisenaustr.","Goetheplatz","Goethestr.","Golo-Mann-Str.","Görlitzer Str.","Görresstr.","Graebestr.","Graf-Galen-Platz","Gregor-Mendel-Str.","Greifswalder Str.","Grillenweg","Gronenborner Weg","Große Kirchstr.","Grunder Wiesen","Grundermühle","Grundermühlenhof","Grundermühlenweg","Grüner Weg","Grunewaldstr.","Grünstr.","Günther-Weisenborn-Str.","Gustav-Freytag-Str.","Gustav-Heinemann-Str.","Gustav-Radbruch-Str.","Gut Reuschenberg","Gutenbergstr.","Haberstr.","Habichtgasse","Hafenstr.","Hagenauer Str.","Hahnenblecher","Halenseestr.","Halfenleimbach","Hallesche Str.","Halligstr.","Hamberger Str.","Hammerweg","Händelstr.","Hannah-Höch-Str.","Hans-Arp-Str.","Hans-Gerhard-Str.","Hans-Sachs-Str.","Hans-Schlehahn-Str.","Hans-von-Dohnanyi-Str.","Hardenbergstr.","Haselweg","Hauptstr.","Haus-Vorster-Str.","Hauweg","Havelstr.","Havensteinstr.","Haydnstr.","Hebbelstr.","Heckenweg","Heerweg","Hegelstr.","Heidberg","Heidehöhe","Heidestr.","Heimstättenweg","Heinrich-Böll-Str.","Heinrich-Brüning-Str.","Heinrich-Claes-Str.","Heinrich-Heine-Str.","Heinrich-Hörlein-Str.","Heinrich-Lübke-Str.","Heinrich-Lützenkirchen-Weg","Heinrichstr.","Heinrich-Strerath-Str.","Heinrich-von-Kleist-Str.","Heinrich-von-Stephan-Str.","Heisterbachstr.","Helenenstr.","Helmestr.","Hemmelrather Weg","Henry-T.-v.-Böttinger-Str.","Herderstr.","Heribertstr.","Hermann-Ehlers-Str.","Hermann-Hesse-Str.","Hermann-König-Str.","Hermann-Löns-Str.","Hermann-Milde-Str.","Hermann-Nörrenberg-Str.","Hermann-von-Helmholtz-Str.","Hermann-Waibel-Str.","Herzogstr.","Heymannstr.","Hindenburgstr.","Hirzenberg","Hitdorfer Kirchweg","Hitdorfer Str.","Höfer Mühle","Höfer Weg","Hohe Str.","Höhenstr.","Höltgestal","Holunderweg","Holzer Weg","Holzer Wiesen","Hornpottweg","Hubertusweg","Hufelandstr.","Hufer Weg","Humboldtstr.","Hummelsheim","Hummelweg","Humperdinckstr.","Hüscheider Gärten","Hüscheider Str.","Hütte","Ilmstr.","Im Bergischen Heim","Im Bruch","Im Buchenhain","Im Bühl","Im Burgfeld","Im Dorf","Im Eisholz","Im Friedenstal","Im Frohental","Im Grunde","Im Hederichsfeld","Im Jücherfeld","Im Kalkfeld","Im Kirberg","Im Kirchfeld","Im Kreuzbruch","Im Mühlenfeld","Im Nesselrader Kamp","Im Oberdorf","Im Oberfeld","Im Rosengarten","Im Rottland","Im Scheffengarten","Im Staderfeld","Im Steinfeld","Im Weidenblech","Im Winkel","Im Ziegelfeld","Imbach","Imbacher Weg","Immenweg","In den Blechenhöfen","In den Dehlen","In der Birkenau","In der Dasladen","In der Felderhütten","In der Hartmannswiese","In der Höhle","In der Schaafsdellen","In der Wasserkuhl","In der Wüste","In Holzhausen","Insterstr.","Jacob-Fröhlen-Str.","Jägerstr.","Jahnstr.","Jakob-Eulenberg-Weg","Jakobistr.","Jakob-Kaiser-Str.","Jenaer Str.","Johannes-Baptist-Str.","Johannes-Dott-Str.","Johannes-Popitz-Str.","Johannes-Wislicenus-Str.","Johannisburger Str.","Johann-Janssen-Str.","Johann-Wirtz-Weg","Josefstr.","Jüch","Julius-Doms-Str.","Julius-Leber-Str.","Kaiserplatz","Kaiserstr.","Kaiser-Wilhelm-Allee","Kalkstr.","Kämpchenstr.","Kämpenwiese","Kämper Weg","Kamptalweg","Kanalstr.","Kandinskystr.","Kantstr.","Kapellenstr.","Karl-Arnold-Str.","Karl-Bosch-Str.","Karl-Bückart-Str.","Karl-Carstens-Ring","Karl-Friedrich-Goerdeler-Str.","Karl-Jaspers-Str.","Karl-König-Str.","Karl-Krekeler-Str.","Karl-Marx-Str.","Karlstr.","Karl-Ulitzka-Str.","Karl-Wichmann-Str.","Karl-Wingchen-Str.","Käsenbrod","Käthe-Kollwitz-Str.","Katzbachstr.","Kerschensteinerstr.","Kiefernweg","Kieler Str.","Kieselstr.","Kiesweg","Kinderhausen","Kleiberweg","Kleine Kirchstr.","Kleingansweg","Kleinheider Weg","Klief","Kneippstr.","Knochenbergsweg","Kochergarten","Kocherstr.","Kockelsberg","Kolberger Str.","Kolmarer Str.","Kölner Gasse","Kölner Str.","Kolpingstr.","Königsberger Platz","Konrad-Adenauer-Platz","Köpenicker Str.","Kopernikusstr.","Körnerstr.","Köschenberg","Köttershof","Kreuzbroicher Str.","Kreuzkamp","Krummer Weg","Kruppstr.","Kuhlmannweg","Kump","Kumper Weg","Kunstfeldstr.","Küppersteger Str.","Kursiefen","Kursiefer Weg","Kurtekottenweg","Kurt-Schumacher-Ring","Kyllstr.","Langenfelder Str.","Längsleimbach","Lärchenweg","Legienstr.","Lehner Mühle","Leichlinger Str.","Leimbacher Hof","Leinestr.","Leineweberstr.","Leipziger Str.","Lerchengasse","Lessingstr.","Libellenweg","Lichstr.","Liebigstr.","Lindenstr.","Lingenfeld","Linienstr.","Lippe","Löchergraben","Löfflerstr.","Loheweg","Lohrbergstr.","Lohrstr.","Löhstr.","Lortzingstr.","Lötzener Str.","Löwenburgstr.","Lucasstr.","Ludwig-Erhard-Platz","Ludwig-Girtler-Str.","Ludwig-Knorr-Str.","Luisenstr.","Lupinenweg","Lurchenweg","Lützenkirchener Str.","Lycker Str.","Maashofstr.","Manforter Str.","Marc-Chagall-Str.","Maria-Dresen-Str.","Maria-Terwiel-Str.","Marie-Curie-Str.","Marienburger Str.","Mariendorfer Str.","Marienwerderstr.","Marie-Schlei-Str.","Marktplatz","Markusweg","Martin-Buber-Str.","Martin-Heidegger-Str.","Martin-Luther-Str.","Masurenstr.","Mathildenweg","Maurinusstr.","Mauspfad","Max-Beckmann-Str.","Max-Delbrück-Str.","Max-Ernst-Str.","Max-Holthausen-Platz","Max-Horkheimer-Str.","Max-Liebermann-Str.","Max-Pechstein-Str.","Max-Planck-Str.","Max-Scheler-Str.","Max-Schönenberg-Str.","Maybachstr.","Meckhofer Feld","Meisenweg","Memelstr.","Menchendahler Str.","Mendelssohnstr.","Merziger Str.","Mettlacher Str.","Metzer Str.","Michaelsweg","Miselohestr.","Mittelstr.","Mohlenstr.","Moltkestr.","Monheimer Str.","Montanusstr.","Montessoriweg","Moosweg","Morsbroicher Str.","Moselstr.","Moskauer Str.","Mozartstr.","Mühlenweg","Muhrgasse","Muldestr.","Mülhausener Str.","Mülheimer Str.","Münsters Gäßchen","Münzstr.","Müritzstr.","Myliusstr.","Nachtigallenweg","Nauener Str.","Neißestr.","Nelly-Sachs-Str.","Netzestr.","Neuendriesch","Neuenhausgasse","Neuenkamp","Neujudenhof","Neukronenberger Str.","Neustadtstr.","Nicolai-Hartmann-Str.","Niederblecher","Niederfeldstr.","Nietzschestr.","Nikolaus-Groß-Str.","Nobelstr.","Norderneystr.","Nordstr.","Ober dem Hof","Obere Lindenstr.","Obere Str.","Oberölbach","Odenthaler Str.","Oderstr.","Okerstr.","Olof-Palme-Str.","Ophovener Str.","Opladener Platz","Opladener Str.","Ortelsburger Str.","Oskar-Moll-Str.","Oskar-Schlemmer-Str.","Oststr.","Oswald-Spengler-Str.","Otto-Dix-Str.","Otto-Grimm-Str.","Otto-Hahn-Str.","Otto-Müller-Str.","Otto-Stange-Str.","Ottostr.","Otto-Varnhagen-Str.","Otto-Wels-Str.","Ottweilerstr.","Oulustr.","Overfeldweg","Pappelweg","Paracelsusstr.","Parkstr.","Pastor-Louis-Str.","Pastor-Scheibler-Str.","Pastorskamp","Paul-Klee-Str.","Paul-Löbe-Str.","Paulstr.","Peenestr.","Pescher Busch","Peschstr.","Pestalozzistr.","Peter-Grieß-Str.","Peter-Joseph-Lenné-Str.","Peter-Neuenheuser-Str.","Petersbergstr.","Peterstr.","Pfarrer-Jekel-Str.","Pfarrer-Klein-Str.","Pfarrer-Röhr-Str.","Pfeilshofstr.","Philipp-Ott-Str.","Piet-Mondrian-Str.","Platanenweg","Pommernstr.","Porschestr.","Poststr.","Potsdamer Str.","Pregelstr.","Prießnitzstr.","Pützdelle","Quarzstr.","Quettinger Str.","Rat-Deycks-Str.","Rathenaustr.","Ratherkämp","Ratiborer Str.","Raushofstr.","Regensburger Str.","Reinickendorfer Str.","Renkgasse","Rennbaumplatz","Rennbaumstr.","Reuschenberger Str.","Reusrather Str.","Reuterstr.","Rheinallee","Rheindorfer Str.","Rheinstr.","Rhein-Wupper-Platz","Richard-Wagner-Str.","Rilkestr.","Ringstr.","Robert-Blum-Str.","Robert-Koch-Str.","Robert-Medenwald-Str.","Rolandstr.","Romberg","Röntgenstr.","Roonstr.","Ropenstall","Ropenstaller Weg","Rosenthal","Rostocker Str.","Rotdornweg","Röttgerweg","Rückertstr.","Rudolf-Breitscheid-Str.","Rudolf-Mann-Platz","Rudolf-Stracke-Str.","Ruhlachplatz","Ruhlachstr.","Rüttersweg","Saalestr.","Saarbrücker Str.","Saarlauterner Str.","Saarstr.","Salamanderweg","Samlandstr.","Sanddornstr.","Sandstr.","Sauerbruchstr.","Schäfershütte","Scharnhorststr.","Scheffershof","Scheidemannstr.","Schellingstr.","Schenkendorfstr.","Schießbergstr.","Schillerstr.","Schlangenhecke","Schlebuscher Heide","Schlebuscher Str.","Schlebuschrath","Schlehdornstr.","Schleiermacherstr.","Schloßstr.","Schmalenbruch","Schnepfenflucht","Schöffenweg","Schöllerstr.","Schöne Aussicht","Schöneberger Str.","Schopenhauerstr.","Schubertplatz","Schubertstr.","Schulberg","Schulstr.","Schumannstr.","Schwalbenweg","Schwarzastr.","Sebastianusweg","Semmelweisstr.","Siebelplatz","Siemensstr.","Solinger Str.","Sonderburger Str.","Spandauer Str.","Speestr.","Sperberweg","Sperlingsweg","Spitzwegstr.","Sporrenberger Mühle","Spreestr.","St. Ingberter Str.","Starenweg","Stauffenbergstr.","Stefan-Zweig-Str.","Stegerwaldstr.","Steglitzer Str.","Steinbücheler Feld","Steinbücheler Str.","Steinstr.","Steinweg","Stephan-Lochner-Str.","Stephanusstr.","Stettiner Str.","Stixchesstr.","Stöckenstr.","Stralsunder Str.","Straßburger Str.","Stresemannplatz","Strombergstr.","Stromstr.","Stüttekofener Str.","Sudestr.","Sürderstr.","Syltstr.","Talstr.","Tannenbergstr.","Tannenweg","Taubenweg","Teitscheider Weg","Telegrafenstr.","Teltower Str.","Tempelhofer Str.","Theodor-Adorno-Str.","Theodor-Fliedner-Str.","Theodor-Gierath-Str.","Theodor-Haubach-Str.","Theodor-Heuss-Ring","Theodor-Storm-Str.","Theodorstr.","Thomas-Dehler-Str.","Thomas-Morus-Str.","Thomas-von-Aquin-Str.","Tönges Feld","Torstr.","Treptower Str.","Treuburger Str.","Uhlandstr.","Ulmenweg","Ulmer Str.","Ulrichstr.","Ulrich-von-Hassell-Str.","Umlag","Unstrutstr.","Unter dem Schildchen","Unterölbach","Unterstr.","Uppersberg","Van\\'t-Hoff-Str.","Veit-Stoß-Str.","Vereinsstr.","Viktor-Meyer-Str.","Vincent-van-Gogh-Str.","Virchowstr.","Voigtslach","Volhardstr.","Völklinger Str.","Von-Brentano-Str.","Von-Diergardt-Str.","Von-Eichendorff-Str.","Von-Ketteler-Str.","Von-Knoeringen-Str.","Von-Pettenkofer-Str.","Von-Siebold-Str.","Wacholderweg","Waldstr.","Walter-Flex-Str.","Walter-Hempel-Str.","Walter-Hochapfel-Str.","Walter-Nernst-Str.","Wannseestr.","Warnowstr.","Warthestr.","Weddigenstr.","Weichselstr.","Weidenstr.","Weidfeldstr.","Weiherfeld","Weiherstr.","Weinhäuser Str.","Weißdornweg","Weißenseestr.","Weizkamp","Werftstr.","Werkstättenstr.","Werner-Heisenberg-Str.","Werrastr.","Weyerweg","Widdauener Str.","Wiebertshof","Wiehbachtal","Wiembachallee","Wiesdorfer Platz","Wiesenstr.","Wilhelm-Busch-Str.","Wilhelm-Hastrich-Str.","Wilhelm-Leuschner-Str.","Wilhelm-Liebknecht-Str.","Wilhelmsgasse","Wilhelmstr.","Willi-Baumeister-Str.","Willy-Brandt-Ring","Winand-Rossi-Str.","Windthorststr.","Winkelweg","Winterberg","Wittenbergstr.","Wolf-Vostell-Str.","Wolkenburgstr.","Wupperstr.","Wuppertalstr.","Wüstenhof","Yitzhak-Rabin-Str.","Zauberkuhle","Zedernweg","Zehlendorfer Str.","Zehntenweg","Zeisigweg","Zeppelinstr.","Zschopaustr.","Zum Claashäuschen","Zündhütchenweg","Zur Alten Brauerei","Zur alten Fabrik"]})),uR=c((()=>{QK(),YK(),$K(),XK(),eR(),aR(),nR(),iR(),rR(),tR(),oR(),sR(),lR(),Qn={building_number:Rn,city:zn,city_prefix:On,city_suffix:In,country:Vn,default_country:Gn,postcode:Hn,secondary_address:Fn,state:Jn,state_abbr:Un,street_address:Wn,street_name:Zn,street_root:qn}})),cR=c((()=>{Yn=["+49-1##-#######","+49-1###-########"]})),dR=c((()=>{cR(),$n={formats:Yn}})),hR=c((()=>{Xn=["GmbH","AG","Gruppe","KG","GmbH & Co. KG","UG","OHG"]})),pR=c((()=>{ei=["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} und #{Name.last_name}"]})),mR=c((()=>{ai=["GmbH","AG","Gruppe","KG","GmbH & Co. KG","UG","OHG"]})),fR=c((()=>{hR(),pR(),mR(),ni={legal_form:Xn,name:ei,suffix:ai}})),vR=c((()=>{ii={wide:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],wide_context:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],abbr:["Jan","Feb","Mrz","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],abbr_context:["Jan","Feb","Mrz","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"]}})),gR=c((()=>{ri={wide:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],wide_context:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],abbr:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],abbr_context:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."]}})),kR=c((()=>{vR(),gR(),ti={month:ii,weekday:ri}})),yR=c((()=>{oi=["com","info","name","net","org","de","ch"]})),bR=c((()=>{si=["gmail.com","yahoo.com","hotmail.com"]})),SR=c((()=>{yR(),bR(),li={domain_suffix:oi,free_email:si}})),AR=c((()=>{ui=["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]})),MR=c((()=>{AR(),ci={words:ui}})),TR=c((()=>{di=["Aaliyah","Abby","Abigail","Ada","Adelina","Adriana","Aileen","Aimee","Alana","Alea","Alena","Alessa","Alessia","Alexa","Alexandra","Alexia","Alexis","Aleyna","Alia","Alica","Alice","Alicia","Alina","Alisa","Alisha","Alissa","Aliya","Aliyah","Allegra","Alma","Alyssa","Amalia","Amanda","Amelia","Amelie","Amina","Amira","Amy","Ana","Anabel","Anastasia","Andrea","Angela","Angelina","Angelique","Anja","Ann","Anna","Annabel","Annabell","Annabelle","Annalena","Anne","Anneke","Annelie","Annemarie","Anni","Annie","Annika","Anny","Anouk","Antonia","Arda","Ariana","Ariane","Arwen","Ashley","Asya","Aurelia","Aurora","Ava","Ayleen","Aylin","Ayse","Azra","Betty","Bianca","Bianka","Caitlin","Cara","Carina","Carla","Carlotta","Carmen","Carolin","Carolina","Caroline","Cassandra","Catharina","Catrin","Cecile","Cecilia","Celia","Celina","Celine","Ceyda","Ceylin","Chantal","Charleen","Charlotta","Charlotte","Chayenne","Cheyenne","Chiara","Christin","Christina","Cindy","Claire","Clara","Clarissa","Colleen","Collien","Cora","Corinna","Cosima","Dana","Daniela","Daria","Darleen","Defne","Delia","Denise","Diana","Dilara","Dina","Dorothea","Ecrin","Eda","Eileen","Ela","Elaine","Elanur","Elea","Elena","Eleni","Eleonora","Eliana","Elif","Elina","Elisa","Elisabeth","Ella","Ellen","Elli","Elly","Elsa","Emelie","Emely","Emilia","Emilie","Emily","Emma","Emmely","Emmi","Emmy","Enie","Enna","Enya","Esma","Estelle","Esther","Eva","Evelin","Evelina","Eveline","Evelyn","Fabienne","Fatima","Fatma","Felicia","Felicitas","Felina","Femke","Fenja","Fine","Finia","Finja","Finnja","Fiona","Flora","Florentine","Francesca","Franka","Franziska","Frederike","Freya","Frida","Frieda","Friederike","Giada","Gina","Giulia","Giuliana","Greta","Hailey","Hana","Hanna","Hannah","Heidi","Helen","Helena","Helene","Helin","Henriette","Henrike","Hermine","Ida","Ilayda","Imke","Ina","Ines","Inga","Inka","Irem","Isa","Isabel","Isabell","Isabella","Isabelle","Ivonne","Jacqueline","Jamie","Jamila","Jana","Jane","Janin","Janina","Janine","Janna","Janne","Jara","Jasmin","Jasmina","Jasmine","Jella","Jenna","Jennifer","Jenny","Jessica","Jessy","Jette","Jil","Jill","Joana","Joanna","Joelina","Joeline","Joelle","Johanna","Joleen","Jolie","Jolien","Jolin","Jolina","Joline","Jona","Jonah","Jonna","Josefin","Josefine","Josephin","Josephine","Josie","Josy","Joy","Joyce","Judith","Judy","Jule","Julia","Juliana","Juliane","Julie","Julienne","Julika","Julina","Juna","Justine","Kaja","Karina","Karla","Karlotta","Karolina","Karoline","Kassandra","Katarina","Katharina","Kathrin","Katja","Katrin","Kaya","Kayra","Kiana","Kiara","Kim","Kimberley","Kimberly","Kira","Klara","Korinna","Kristin","Kyra","Laila","Lana","Lara","Larissa","Laura","Laureen","Lavinia","Lea","Leah","Leana","Leandra","Leann","Lee","Leila","Lena","Lene","Leni","Lenia","Lenja","Lenya","Leona","Leoni","Leonie","Leonora","Leticia","Letizia","Levke","Leyla","Lia","Liah","Liana","Lili","Lilia","Lilian","Liliana","Lilith","Lilli","Lillian","Lilly","Lily","Lina","Linda","Lindsay","Line","Linn","Linnea","Lisa","Lisann","Lisanne","Liv","Livia","Liz","Lola","Loreen","Lorena","Lotta","Lotte","Louisa","Louise","Luana","Luca","Lucia","Lucie","Lucienne","Lucy","Luisa","Luise","Luka","Luna","Luzie","Lya","Lydia","Lyn","Lynn","Madeleine","Madita","Madleen","Madlen","Magdalena","Maike","Mailin","Maira","Maja","Malena","Malia","Malin","Malina","Mandy","Mara","Marah","Mareike","Maren","Maria","Mariam","Marie","Marieke","Mariella","Marika","Marina","Marisa","Marissa","Marit","Marla","Marleen","Marlen","Marlena","Marlene","Marta","Martha","Mary","Maryam","Mathilda","Mathilde","Matilda","Maxi","Maxima","Maxine","Maya","Mayra","Medina","Medine","Meike","Melanie","Melek","Melike","Melina","Melinda","Melis","Melisa","Melissa","Merle","Merve","Meryem","Mette","Mia","Michaela","Michelle","Mieke","Mila","Milana","Milena","Milla","Mina","Mira","Miray","Miriam","Mirja","Mona","Monique","Nadine","Nadja","Naemi","Nancy","Naomi","Natalia","Natalie","Nathalie","Neele","Nela","Nele","Nelli","Nelly","Nia","Nicole","Nika","Nike","Nikita","Nila","Nina","Nisa","Noemi","Nora","Olivia","Patricia","Patrizia","Paula","Paulina","Pauline","Penelope","Philine","Phoebe","Pia","Rahel","Rania","Rebecca","Rebekka","Riana","Rieke","Rike","Romina","Romy","Ronja","Rosa","Rosalie","Ruby","Sabrina","Sahra","Sally","Salome","Samantha","Samia","Samira","Sandra","Sandy","Sanja","Saphira","Sara","Sarah","Saskia","Selin","Selina","Selma","Sena","Sidney","Sienna","Silja","Sina","Sinja","Smilla","Sofia","Sofie","Sonja","Sophia","Sophie","Soraya","Stefanie","Stella","Stephanie","Stina","Sude","Summer","Susanne","Svea","Svenja","Sydney","Tabea","Talea","Talia","Tamara","Tamia","Tamina","Tanja","Tara","Tarja","Teresa","Tessa","Thalea","Thalia","Thea","Theresa","Tia","Tina","Tomke","Tuana","Valentina","Valeria","Valerie","Vanessa","Vera","Veronika","Victoria","Viktoria","Viola","Vivian","Vivien","Vivienne","Wibke","Wiebke","Xenia","Yara","Yaren","Yasmin","Ylvi","Ylvie","Yvonne","Zara","Zehra","Zeynep","Zoe","Zoey","Zoé"]})),_R=c((()=>{hi=["Aaron","Abdul","Abdullah","Adam","Adrian","Adriano","Ahmad","Ahmed","Ahmet","Alan","Albert","Alessandro","Alessio","Alex","Alexander","Alfred","Ali","Amar","Amir","Amon","Andre","Andreas","Andrew","Angelo","Ansgar","Anthony","Anton","Antonio","Arda","Arian","Armin","Arne","Arno","Arthur","Artur","Arved","Arvid","Ayman","Baran","Baris","Bastian","Batuhan","Bela","Ben","Benedikt","Benjamin","Bennet","Bennett","Benno","Bent","Berat","Berkay","Bernd","Bilal","Bjarne","Björn","Bo","Boris","Brandon","Brian","Bruno","Bryan","Burak","Calvin","Can","Carl","Carlo","Carlos","Caspar","Cedric","Cedrik","Cem","Charlie","Chris","Christian","Christiano","Christoph","Christopher","Claas","Clemens","Colin","Collin","Conner","Connor","Constantin","Corvin","Curt","Damian","Damien","Daniel","Danilo","Danny","Darian","Dario","Darius","Darren","David","Davide","Davin","Dean","Deniz","Dennis","Denny","Devin","Diego","Dion","Domenic","Domenik","Dominic","Dominik","Dorian","Dustin","Dylan","Ecrin","Eddi","Eddy","Edgar","Edwin","Efe","Ege","Elia","Eliah","Elias","Elijah","Emanuel","Emil","Emilian","Emilio","Emir","Emirhan","Emre","Enes","Enno","Enrico","Eren","Eric","Erik","Etienne","Fabian","Fabien","Fabio","Fabrice","Falk","Felix","Ferdinand","Fiete","Filip","Finlay","Finley","Finn","Finnley","Florian","Francesco","Franz","Frederic","Frederick","Frederik","Friedrich","Fritz","Furkan","Fynn","Gabriel","Georg","Gerrit","Gian","Gianluca","Gino","Giuliano","Giuseppe","Gregor","Gustav","Hagen","Hamza","Hannes","Hanno","Hans","Hasan","Hassan","Hauke","Hendrik","Hennes","Henning","Henri","Henrick","Henrik","Henry","Hugo","Hussein","Ian","Ibrahim","Ilias","Ilja","Ilyas","Immanuel","Ismael","Ismail","Ivan","Iven","Jack","Jacob","Jaden","Jakob","Jamal","James","Jamie","Jan","Janek","Janis","Janne","Jannek","Jannes","Jannik","Jannis","Jano","Janosch","Jared","Jari","Jarne","Jarno","Jaron","Jason","Jasper","Jay","Jayden","Jayson","Jean","Jens","Jeremias","Jeremie","Jeremy","Jermaine","Jerome","Jesper","Jesse","Jim","Jimmy","Joe","Joel","Joey","Johann","Johannes","John","Johnny","Jon","Jona","Jonah","Jonas","Jonathan","Jonte","Joost","Jordan","Joris","Joscha","Joschua","Josef","Joseph","Josh","Joshua","Josua","Juan","Julian","Julien","Julius","Juri","Justin","Justus","Kaan","Kai","Kalle","Karim","Karl","Karlo","Kay","Keanu","Kenan","Kenny","Keno","Kerem","Kerim","Kevin","Kian","Kilian","Kim","Kimi","Kjell","Klaas","Klemens","Konrad","Konstantin","Koray","Korbinian","Kurt","Lars","Lasse","Laurence","Laurens","Laurenz","Laurin","Lean","Leander","Leandro","Leif","Len","Lenn","Lennard","Lennart","Lennert","Lennie","Lennox","Lenny","Leo","Leon","Leonard","Leonardo","Leonhard","Leonidas","Leopold","Leroy","Levent","Levi","Levin","Lewin","Lewis","Liam","Lian","Lias","Lino","Linus","Lio","Lion","Lionel","Logan","Lorenz","Lorenzo","Loris","Louis","Luan","Luc","Luca","Lucas","Lucian","Lucien","Ludwig","Luis","Luiz","Luk","Luka","Lukas","Luke","Lutz","Maddox","Mads","Magnus","Maik","Maksim","Malik","Malte","Manuel","Marc","Marcel","Marco","Marcus","Marek","Marian","Mario","Marius","Mark","Marko","Markus","Marlo","Marlon","Marten","Martin","Marvin","Marwin","Mateo","Mathis","Matis","Mats","Matteo","Mattes","Matthias","Matthis","Matti","Mattis","Maurice","Max","Maxim","Maximilian","Mehmet","Meik","Melvin","Merlin","Mert","Michael","Michel","Mick","Miguel","Mika","Mikail","Mike","Milan","Milo","Mio","Mirac","Mirco","Mirko","Mohamed","Mohammad","Mohammed","Moritz","Morten","Muhammed","Murat","Mustafa","Nathan","Nathanael","Nelson","Neo","Nevio","Nick","Niclas","Nico","Nicolai","Nicolas","Niels","Nikita","Niklas","Niko","Nikolai","Nikolas","Nils","Nino","Noah","Noel","Norman","Odin","Oke","Ole","Oliver","Omar","Onur","Oscar","Oskar","Pascal","Patrice","Patrick","Paul","Peer","Pepe","Peter","Phil","Philip","Philipp","Pierre","Piet","Pit","Pius","Quentin","Quirin","Rafael","Raik","Ramon","Raphael","Rasmus","Raul","Rayan","René","Ricardo","Riccardo","Richard","Rick","Rico","Robert","Robin","Rocco","Roman","Romeo","Ron","Ruben","Ryan","Said","Salih","Sam","Sami","Sammy","Samuel","Sandro","Santino","Sascha","Sean","Sebastian","Selim","Semih","Shawn","Silas","Simeon","Simon","Sinan","Sky","Stefan","Steffen","Stephan","Steve","Steven","Sven","Sönke","Sören","Taha","Tamino","Tammo","Tarik","Tayler","Taylor","Teo","Theo","Theodor","Thies","Thilo","Thomas","Thorben","Thore","Thorge","Tiago","Til","Till","Tillmann","Tim","Timm","Timo","Timon","Timothy","Tino","Titus","Tizian","Tjark","Tobias","Tom","Tommy","Toni","Tony","Torben","Tore","Tristan","Tyler","Tyron","Umut","Valentin","Valentino","Veit","Victor","Viktor","Vin","Vincent","Vito","Vitus","Wilhelm","Willi","William","Willy","Xaver","Yannic","Yannick","Yannik","Yannis","Yasin","Youssef","Yunus","Yusuf","Yven","Yves","Ömer","Aaliyah","Abby","Abigail","Ada","Adelina","Adriana","Aileen","Aimee","Alana","Alea","Alena","Alessa","Alessia","Alexa","Alexandra","Alexia","Alexis","Aleyna","Alia","Alica","Alice","Alicia","Alina","Alisa","Alisha","Alissa","Aliya","Aliyah","Allegra","Alma","Alyssa","Amalia","Amanda","Amelia","Amelie","Amina","Amira","Amy","Ana","Anabel","Anastasia","Andrea","Angela","Angelina","Angelique","Anja","Ann","Anna","Annabel","Annabell","Annabelle","Annalena","Anne","Anneke","Annelie","Annemarie","Anni","Annie","Annika","Anny","Anouk","Antonia","Arda","Ariana","Ariane","Arwen","Ashley","Asya","Aurelia","Aurora","Ava","Ayleen","Aylin","Ayse","Azra","Betty","Bianca","Bianka","Caitlin","Cara","Carina","Carla","Carlotta","Carmen","Carolin","Carolina","Caroline","Cassandra","Catharina","Catrin","Cecile","Cecilia","Celia","Celina","Celine","Ceyda","Ceylin","Chantal","Charleen","Charlotta","Charlotte","Chayenne","Cheyenne","Chiara","Christin","Christina","Cindy","Claire","Clara","Clarissa","Colleen","Collien","Cora","Corinna","Cosima","Dana","Daniela","Daria","Darleen","Defne","Delia","Denise","Diana","Dilara","Dina","Dorothea","Ecrin","Eda","Eileen","Ela","Elaine","Elanur","Elea","Elena","Eleni","Eleonora","Eliana","Elif","Elina","Elisa","Elisabeth","Ella","Ellen","Elli","Elly","Elsa","Emelie","Emely","Emilia","Emilie","Emily","Emma","Emmely","Emmi","Emmy","Enie","Enna","Enya","Esma","Estelle","Esther","Eva","Evelin","Evelina","Eveline","Evelyn","Fabienne","Fatima","Fatma","Felicia","Felicitas","Felina","Femke","Fenja","Fine","Finia","Finja","Finnja","Fiona","Flora","Florentine","Francesca","Franka","Franziska","Frederike","Freya","Frida","Frieda","Friederike","Giada","Gina","Giulia","Giuliana","Greta","Hailey","Hana","Hanna","Hannah","Heidi","Helen","Helena","Helene","Helin","Henriette","Henrike","Hermine","Ida","Ilayda","Imke","Ina","Ines","Inga","Inka","Irem","Isa","Isabel","Isabell","Isabella","Isabelle","Ivonne","Jacqueline","Jamie","Jamila","Jana","Jane","Janin","Janina","Janine","Janna","Janne","Jara","Jasmin","Jasmina","Jasmine","Jella","Jenna","Jennifer","Jenny","Jessica","Jessy","Jette","Jil","Jill","Joana","Joanna","Joelina","Joeline","Joelle","Johanna","Joleen","Jolie","Jolien","Jolin","Jolina","Joline","Jona","Jonah","Jonna","Josefin","Josefine","Josephin","Josephine","Josie","Josy","Joy","Joyce","Judith","Judy","Jule","Julia","Juliana","Juliane","Julie","Julienne","Julika","Julina","Juna","Justine","Kaja","Karina","Karla","Karlotta","Karolina","Karoline","Kassandra","Katarina","Katharina","Kathrin","Katja","Katrin","Kaya","Kayra","Kiana","Kiara","Kim","Kimberley","Kimberly","Kira","Klara","Korinna","Kristin","Kyra","Laila","Lana","Lara","Larissa","Laura","Laureen","Lavinia","Lea","Leah","Leana","Leandra","Leann","Lee","Leila","Lena","Lene","Leni","Lenia","Lenja","Lenya","Leona","Leoni","Leonie","Leonora","Leticia","Letizia","Levke","Leyla","Lia","Liah","Liana","Lili","Lilia","Lilian","Liliana","Lilith","Lilli","Lillian","Lilly","Lily","Lina","Linda","Lindsay","Line","Linn","Linnea","Lisa","Lisann","Lisanne","Liv","Livia","Liz","Lola","Loreen","Lorena","Lotta","Lotte","Louisa","Louise","Luana","Luca","Lucia","Lucie","Lucienne","Lucy","Luisa","Luise","Luka","Luna","Luzie","Lya","Lydia","Lyn","Lynn","Madeleine","Madita","Madleen","Madlen","Magdalena","Maike","Mailin","Maira","Maja","Malena","Malia","Malin","Malina","Mandy","Mara","Marah","Mareike","Maren","Maria","Mariam","Marie","Marieke","Mariella","Marika","Marina","Marisa","Marissa","Marit","Marla","Marleen","Marlen","Marlena","Marlene","Marta","Martha","Mary","Maryam","Mathilda","Mathilde","Matilda","Maxi","Maxima","Maxine","Maya","Mayra","Medina","Medine","Meike","Melanie","Melek","Melike","Melina","Melinda","Melis","Melisa","Melissa","Merle","Merve","Meryem","Mette","Mia","Michaela","Michelle","Mieke","Mila","Milana","Milena","Milla","Mina","Mira","Miray","Miriam","Mirja","Mona","Monique","Nadine","Nadja","Naemi","Nancy","Naomi","Natalia","Natalie","Nathalie","Neele","Nela","Nele","Nelli","Nelly","Nia","Nicole","Nika","Nike","Nikita","Nila","Nina","Nisa","Noemi","Nora","Olivia","Patricia","Patrizia","Paula","Paulina","Pauline","Penelope","Philine","Phoebe","Pia","Rahel","Rania","Rebecca","Rebekka","Riana","Rieke","Rike","Romina","Romy","Ronja","Rosa","Rosalie","Ruby","Sabrina","Sahra","Sally","Salome","Samantha","Samia","Samira","Sandra","Sandy","Sanja","Saphira","Sara","Sarah","Saskia","Selin","Selina","Selma","Sena","Sidney","Sienna","Silja","Sina","Sinja","Smilla","Sofia","Sofie","Sonja","Sophia","Sophie","Soraya","Stefanie","Stella","Stephanie","Stina","Sude","Summer","Susanne","Svea","Svenja","Sydney","Tabea","Talea","Talia","Tamara","Tamia","Tamina","Tanja","Tara","Tarja","Teresa","Tessa","Thalea","Thalia","Thea","Theresa","Tia","Tina","Tomke","Tuana","Valentina","Valeria","Valerie","Vanessa","Vera","Veronika","Victoria","Viktoria","Viola","Vivian","Vivien","Vivienne","Wibke","Wiebke","Xenia","Yara","Yaren","Yasmin","Ylvi","Ylvie","Yvonne","Zara","Zehra","Zeynep","Zoe","Zoey","Zoé"]})),wR=c((()=>{pi=["Abel","Abicht","Abraham","Abramovic","Abt","Achilles","Achkinadze","Ackermann","Adam","Adams","Ade","Agostini","Ahlke","Ahrenberg","Ahrens","Aigner","Albert","Albrecht","Alexa","Alexander","Alizadeh","Allgeyer","Amann","Amberg","Anding","Anggreny","Apitz","Arendt","Arens","Arndt","Aryee","Aschenbroich","Assmus","Astafei","Auer","Axmann","Baarck","Bachmann","Badane","Bader","Baganz","Bahl","Bak","Balcer","Balck","Balkow","Balnuweit","Balzer","Banse","Barr","Bartels","Barth","Barylla","Baseda","Battke","Bauer","Bauermeister","Baumann","Baumeister","Bauschinger","Bauschke","Bayer","Beavogui","Beck","Beckel","Becker","Beckmann","Bedewitz","Beele","Beer","Beggerow","Beh","Behr","Behrenbruch","Belz","Bender","Benecke","Benner","Benninger","Benzing","Berends","Berger","Berner","Berning","Bertenbreiter","Best","Bethke","Betz","Beushausen","Beutelspacher","Beyer","Biba","Bichler","Bickel","Biedermann","Bieler","Bielert","Bienasch","Bienias","Biesenbach","Bigdeli","Birkemeyer","Bittner","Blank","Blaschek","Blassneck","Bloch","Blochwitz","Blockhaus","Blum","Blume","Bock","Bode","Bogdashin","Bogenrieder","Bohge","Bolm","Borgschulze","Bork","Bormann","Bornscheuer","Borrmann","Borsch","Boruschewski","Bos","Bosler","Bourrouag","Bouschen","Boxhammer","Boyde","Bozsik","Brand","Brandenburg","Brandis","Brandt","Brauer","Braun","Brehmer","Breitenstein","Bremer","Bremser","Brenner","Brettschneider","Breu","Breuer","Briesenick","Bringmann","Brinkmann","Brix","Broening","Brosch","Bruckmann","Bruder","Bruhns","Brunner","Bruns","Bräutigam","Brömme","Brüggmann","Buchholz","Buchrucker","Buder","Bultmann","Bunjes","Burger","Burghagen","Burkhard","Burkhardt","Burmeister","Busch","Buschbaum","Busemann","Buss","Busse","Bussmann","Byrd","Bäcker","Böhm","Bönisch","Börgeling","Börner","Böttner","Büchele","Bühler","Büker","Büngener","Bürger","Bürklein","Büscher","Büttner","Camara","Carlowitz","Carlsohn","Caspari","Caspers","Chapron","Christ","Cierpinski","Clarius","Cleem","Cleve","Co","Conrad","Cordes","Cornelsen","Cors","Cotthardt","Crews","Cronjäger","Crosskofp","Da","Dahm","Dahmen","Daimer","Damaske","Danneberg","Danner","Daub","Daubner","Daudrich","Dauer","Daum","Dauth","Dautzenberg","De","Decker","Deckert","Deerberg","Dehmel","Deja","Delonge","Demut","Dengler","Denner","Denzinger","Derr","Dertmann","Dethloff","Deuschle","Dieckmann","Diedrich","Diekmann","Dienel","Dies","Dietrich","Dietz","Dietzsch","Diezel","Dilla","Dingelstedt","Dippl","Dittmann","Dittmar","Dittmer","Dix","Dobbrunz","Dobler","Dohring","Dolch","Dold","Dombrowski","Donie","Doskoczynski","Dragu","Drechsler","Drees","Dreher","Dreier","Dreissigacker","Dressler","Drews","Duma","Dutkiewicz","Dyett","Dylus","Dächert","Döbel","Döring","Dörner","Dörre","Dück","Eberhard","Eberhardt","Ecker","Eckhardt","Edorh","Effler","Eggenmueller","Ehm","Ehmann","Ehrig","Eich","Eifert","Einert","Eisenlauer","Ekpo","Elbe","Eleyth","Elss","Emert","Emmelmann","Ender","Engel","Engelen","Engelmann","Eplinius","Erdmann","Erhardt","Erlei","Erm","Ernst","Ertl","Erwes","Esenwein","Esser","Evers","Everts","Ewald","Fahner","Faller","Falter","Farber","Fassbender","Faulhaber","Fehrig","Feld","Felke","Feller","Fenner","Fenske","Feuerbach","Fietz","Figl","Figura","Filipowski","Filsinger","Fincke","Fink","Finke","Fischer","Fitschen","Fleischer","Fleischmann","Floder","Florczak","Flore","Flottmann","Forkel","Forst","Frahmeke","Frank","Franke","Franta","Frantz","Franz","Franzis","Franzmann","Frauen","Frauendorf","Freigang","Freimann","Freimuth","Freisen","Frenzel","Frey","Fricke","Fried","Friedek","Friedenberg","Friedmann","Friedrich","Friess","Frisch","Frohn","Frosch","Fuchs","Fuhlbrügge","Fusenig","Fust","Förster","Gaba","Gabius","Gabler","Gadschiew","Gakstädter","Galander","Gamlin","Gamper","Gangnus","Ganzmann","Garatva","Gast","Gastel","Gatzka","Gauder","Gebhardt","Geese","Gehre","Gehrig","Gehring","Gehrke","Geiger","Geisler","Geissler","Gelling","Gens","Gerbennow","Gerdel","Gerhardt","Gerschler","Gerson","Gesell","Geyer","Ghirmai","Ghosh","Giehl","Gierisch","Giesa","Giesche","Gilde","Glatting","Goebel","Goedicke","Goldbeck","Goldfuss","Goldkamp","Goldkühle","Goller","Golling","Gollnow","Golomski","Gombert","Gotthardt","Gottschalk","Gotz","Goy","Gradzki","Graf","Grams","Grasse","Gratzky","Grau","Greb","Green","Greger","Greithanner","Greschner","Griem","Griese","Grimm","Gromisch","Gross","Grosser","Grossheim","Grosskopf","Grothaus","Grothkopp","Grotke","Grube","Gruber","Grundmann","Gruning","Gruszecki","Gröss","Grötzinger","Grün","Grüner","Gummelt","Gunkel","Gunther","Gutjahr","Gutowicz","Gutschank","Göbel","Göckeritz","Göhler","Görlich","Görmer","Götz","Götzelmann","Güldemeister","Günther","Günz","Gürbig","Haack","Haaf","Habel","Hache","Hackbusch","Hackelbusch","Hadfield","Hadwich","Haferkamp","Hahn","Hajek","Hallmann","Hamann","Hanenberger","Hannecker","Hanniske","Hansen","Hardy","Hargasser","Harms","Harnapp","Harter","Harting","Hartlieb","Hartmann","Hartwig","Hartz","Haschke","Hasler","Hasse","Hassfeld","Haug","Hauke","Haupt","Haverney","Heberstreit","Hechler","Hecht","Heck","Hedermann","Hehl","Heidelmann","Heidler","Heinemann","Heinig","Heinke","Heinrich","Heinze","Heiser","Heist","Hellmann","Helm","Helmke","Helpling","Hengmith","Henkel","Hennes","Henry","Hense","Hensel","Hentel","Hentschel","Hentschke","Hepperle","Herberger","Herbrand","Hering","Hermann","Hermecke","Herms","Herold","Herrmann","Herschmann","Hertel","Herweg","Herwig","Herzenberg","Hess","Hesse","Hessek","Hessler","Hetzler","Heuck","Heydemüller","Hiebl","Hildebrand","Hildenbrand","Hilgendorf","Hillard","Hiller","Hingsen","Hingst","Hinrichs","Hirsch","Hirschberg","Hirt","Hodea","Hoffman","Hoffmann","Hofmann","Hohenberger","Hohl","Hohn","Hohnheiser","Hold","Holdt","Holinski","Holl","Holtfreter","Holz","Holzdeppe","Holzner","Hommel","Honz","Hooss","Hoppe","Horak","Horn","Horna","Hornung","Hort","Howard","Huber","Huckestein","Hudak","Huebel","Hugo","Huhn","Hujo","Huke","Huls","Humbert","Huneke","Huth","Häber","Häfner","Höcke","Höft","Höhne","Hönig","Hördt","Hübenbecker","Hübl","Hübner","Hügel","Hüttcher","Hütter","Ibe","Ihly","Illing","Isak","Isekenmeier","Itt","Jacob","Jacobs","Jagusch","Jahn","Jahnke","Jakobs","Jakubczyk","Jambor","Jamrozy","Jander","Janich","Janke","Jansen","Jarets","Jaros","Jasinski","Jasper","Jegorov","Jellinghaus","Jeorga","Jerschabek","Jess","John","Jonas","Jossa","Jucken","Jung","Jungbluth","Jungton","Just","Jürgens","Kaczmarek","Kaesmacher","Kahl","Kahlert","Kahles","Kahlmeyer","Kaiser","Kalinowski","Kallabis","Kallensee","Kampf","Kampschulte","Kappe","Kappler","Karhoff","Karrass","Karst","Karsten","Karus","Kass","Kasten","Kastner","Katzinski","Kaufmann","Kaul","Kausemann","Kawohl","Kazmarek","Kedzierski","Keil","Keiner","Keller","Kelm","Kempe","Kemper","Kempter","Kerl","Kern","Kesselring","Kesselschläger","Kette","Kettenis","Keutel","Kick","Kiessling","Kinadeter","Kinzel","Kinzy","Kirch","Kirst","Kisabaka","Klaas","Klabuhn","Klapper","Klauder","Klaus","Kleeberg","Kleiber","Klein","Kleinert","Kleininger","Kleinmann","Kleinsteuber","Kleiss","Klemme","Klimczak","Klinger","Klink","Klopsch","Klose","Kloss","Kluge","Kluwe","Knabe","Kneifel","Knetsch","Knies","Knippel","Knobel","Knoblich","Knoll","Knorr","Knorscheidt","Knut","Kobs","Koch","Kochan","Kock","Koczulla","Koderisch","Koehl","Koehler","Koenig","Koester","Kofferschlager","Koha","Kohle","Kohlmann","Kohnle","Kohrt","Koj","Kolb","Koleiski","Kolokas","Komoll","Konieczny","Konig","Konow","Konya","Koob","Kopf","Kosenkow","Koster","Koszewski","Koubaa","Kovacs","Kowalick","Kowalinski","Kozakiewicz","Krabbe","Kraft","Kral","Kramer","Krauel","Kraus","Krause","Krauspe","Kreb","Krebs","Kreissig","Kresse","Kreutz","Krieger","Krippner","Krodinger","Krohn","Krol","Kron","Krueger","Krug","Kruger","Krull","Kruschinski","Krämer","Kröckert","Kröger","Krüger","Kubera","Kufahl","Kuhlee","Kuhnen","Kulimann","Kulma","Kumbernuss","Kummle","Kunz","Kupfer","Kupprion","Kuprion","Kurnicki","Kurrat","Kurschilgen","Kuschewitz","Kuschmann","Kuske","Kustermann","Kutscherauer","Kutzner","Kwadwo","Kähler","Käther","Köhler","Köhrbrück","Köhre","Kölotzei","König","Köpernick","Köseoglu","Kúhn","Kúhnert","Kühn","Kühnel","Kühnemund","Kühnert","Kühnke","Küsters","Küter","Laack","Lack","Ladewig","Lakomy","Lammert","Lamos","Landmann","Lang","Lange","Langfeld","Langhirt","Lanig","Lauckner","Lauinger","Laurén","Lausecker","Laux","Laws","Lax","Leberer","Lehmann","Lehner","Leibold","Leide","Leimbach","Leipold","Leist","Leiter","Leiteritz","Leitheim","Leiwesmeier","Lenfers","Lenk","Lenz","Lenzen","Leo","Lepthin","Lesch","Leschnik","Letzelter","Lewin","Lewke","Leyckes","Lg","Lichtenfeld","Lichtenhagen","Lichtl","Liebach","Liebe","Liebich","Liebold","Lieder","Lienshöft","Linden","Lindenberg","Lindenmayer","Lindner","Linke","Linnenbaum","Lippe","Lipske","Lipus","Lischka","Lobinger","Logsch","Lohmann","Lohre","Lohse","Lokar","Loogen","Lorenz","Losch","Loska","Lott","Loy","Lubina","Ludolf","Lufft","Lukoschek","Lutje","Lutz","Löser","Löwa","Lübke","Maak","Maczey","Madetzky","Madubuko","Mai","Maier","Maisch","Malek","Malkus","Mallmann","Malucha","Manns","Manz","Marahrens","Marchewski","Margis","Markowski","Marl","Marner","Marquart","Marschek","Martel","Marten","Martin","Marx","Marxen","Mathes","Mathies","Mathiszik","Matschke","Mattern","Matthes","Matula","Mau","Maurer","Mauroff","May","Maybach","Mayer","Mebold","Mehl","Mehlhorn","Mehlorn","Meier","Meisch","Meissner","Meloni","Melzer","Menga","Menne","Mensah","Mensing","Merkel","Merseburg","Mertens","Mesloh","Metzger","Metzner","Mewes","Meyer","Michallek","Michel","Mielke","Mikitenko","Milde","Minah","Mintzlaff","Mockenhaupt","Moede","Moedl","Moeller","Moguenara","Mohr","Mohrhard","Molitor","Moll","Moller","Molzan","Montag","Moormann","Mordhorst","Morgenstern","Morhelfer","Moritz","Moser","Motchebon","Motzenbbäcker","Mrugalla","Muckenthaler","Mues","Muller","Mulrain","Mächtig","Mäder","Möcks","Mögenburg","Möhsner","Möldner","Möllenbeck","Möller","Möllinger","Mörsch","Mühleis","Müller","Münch","Nabein","Nabow","Nagel","Nannen","Nastvogel","Nau","Naubert","Naumann","Ne","Neimke","Nerius","Neubauer","Neubert","Neuendorf","Neumair","Neumann","Neupert","Neurohr","Neuschwander","Newton","Ney","Nicolay","Niedermeier","Nieklauson","Niklaus","Nitzsche","Noack","Nodler","Nolte","Normann","Norris","Northoff","Nowak","Nussbeck","Nwachukwu","Nytra","Nöh","Oberem","Obergföll","Obermaier","Ochs","Oeser","Olbrich","Onnen","Ophey","Oppong","Orth","Orthmann","Oschkenat","Osei","Osenberg","Ostendarp","Ostwald","Otte","Otto","Paesler","Pajonk","Pallentin","Panzig","Paschke","Patzwahl","Paukner","Peselman","Peter","Peters","Petzold","Pfeiffer","Pfennig","Pfersich","Pfingsten","Pflieger","Pflügner","Philipp","Pichlmaier","Piesker","Pietsch","Pingpank","Pinnock","Pippig","Pitschugin","Plank","Plass","Platzer","Plauk","Plautz","Pletsch","Plotzitzka","Poehn","Poeschl","Pogorzelski","Pohl","Pohland","Pohle","Polifka","Polizzi","Pollmächer","Pomp","Ponitzsch","Porsche","Porth","Poschmann","Poser","Pottel","Prah","Prange","Prediger","Pressler","Preuk","Preuss","Prey","Priemer","Proske","Pusch","Pöche","Pöge","Raabe","Rabenstein","Rach","Radtke","Rahn","Ranftl","Rangen","Ranz","Rapp","Rath","Rau","Raubuch","Raukuc","Rautenkranz","Rehwagen","Reiber","Reichardt","Reichel","Reichling","Reif","Reifenrath","Reimann","Reinberg","Reinelt","Reinhardt","Reinke","Reitze","Renk","Rentz","Renz","Reppin","Restle","Restorff","Retzke","Reuber","Reumann","Reus","Reuss","Reusse","Rheder","Rhoden","Richards","Richter","Riedel","Riediger","Rieger","Riekmann","Riepl","Riermeier","Riester","Riethmüller","Rietmüller","Rietscher","Ringel","Ringer","Rink","Ripken","Ritosek","Ritschel","Ritter","Rittweg","Ritz","Roba","Rockmeier","Rodehau","Rodowski","Roecker","Roggatz","Rohländer","Rohrer","Rokossa","Roleder","Roloff","Roos","Rosbach","Roschinsky","Rose","Rosenauer","Rosenbauer","Rosenthal","Rosksch","Rossberg","Rossler","Roth","Rother","Ruch","Ruckdeschel","Rumpf","Rupprecht","Ruth","Ryjikh","Ryzih","Rädler","Räntsch","Rödiger","Röse","Röttger","Rücker","Rüdiger","Rüter","Sachse","Sack","Saflanis","Sagafe","Sagonas","Sahner","Saile","Sailer","Salow","Salzer","Salzmann","Sammert","Sander","Sarvari","Sattelmaier","Sauer","Sauerland","Saumweber","Savoia","Scc","Schacht","Schaefer","Schaffarzik","Schahbasian","Scharf","Schedler","Scheer","Schelk","Schellenbeck","Schembera","Schenk","Scherbarth","Scherer","Schersing","Scherz","Scheurer","Scheuring","Scheytt","Schielke","Schieskow","Schildhauer","Schilling","Schima","Schimmer","Schindzielorz","Schirmer","Schirrmeister","Schlachter","Schlangen","Schlawitz","Schlechtweg","Schley","Schlicht","Schlitzer","Schmalzle","Schmid","Schmidt","Schmidtchen","Schmitt","Schmitz","Schmuhl","Schneider","Schnelting","Schnieder","Schniedermeier","Schnürer","Schoberg","Scholz","Schonberg","Schondelmaier","Schorr","Schott","Schottmann","Schouren","Schrader","Schramm","Schreck","Schreiber","Schreiner","Schreiter","Schroder","Schröder","Schuermann","Schuff","Schuhaj","Schuldt","Schult","Schulte","Schultz","Schultze","Schulz","Schulze","Schumacher","Schumann","Schupp","Schuri","Schuster","Schwab","Schwalm","Schwanbeck","Schwandke","Schwanitz","Schwarthoff","Schwartz","Schwarz","Schwarzer","Schwarzkopf","Schwarzmeier","Schwatlo","Schweisfurth","Schwennen","Schwerdtner","Schwidde","Schwirkschlies","Schwuchow","Schäfer","Schäffel","Schäffer","Schäning","Schöckel","Schönball","Schönbeck","Schönberg","Schönebeck","Schönenberger","Schönfeld","Schönherr","Schönlebe","Schötz","Schüler","Schüppel","Schütz","Schütze","Seeger","Seelig","Sehls","Seibold","Seidel","Seiders","Seigel","Seiler","Seitz","Semisch","Senkel","Sewald","Siebel","Siebert","Siegling","Sielemann","Siemon","Siener","Sievers","Siewert","Sihler","Sillah","Simon","Sinnhuber","Sischka","Skibicki","Sladek","Slotta","Smieja","Soboll","Sokolowski","Soller","Sollner","Sommer","Somssich","Sonn","Sonnabend","Spahn","Spank","Spelmeyer","Spiegelburg","Spielvogel","Spinner","Spitzmüller","Splinter","Sporrer","Sprenger","Spöttel","Stahl","Stang","Stanger","Stauss","Steding","Steffen","Steffny","Steidl","Steigauf","Stein","Steinecke","Steinert","Steinkamp","Steinmetz","Stelkens","Stengel","Stengl","Stenzel","Stepanov","Stephan","Stern","Steuk","Stief","Stifel","Stoll","Stolle","Stolz","Storl","Storp","Stoutjesdijk","Stratmann","Straub","Strausa","Streck","Streese","Strege","Streit","Streller","Strieder","Striezel","Strogies","Strohschank","Strunz","Strutz","Stube","Stöckert","Stöppler","Stöwer","Stürmer","Suffa","Sujew","Sussmann","Suthe","Sutschet","Swillims","Szendrei","Sören","Sürth","Tafelmeier","Tang","Tasche","Taufratshofer","Tegethof","Teichmann","Tepper","Terheiden","Terlecki","Teufel","Theele","Thieke","Thimm","Thiomas","Thomas","Thriene","Thränhardt","Thust","Thyssen","Thöne","Tidow","Tiedtke","Tietze","Tilgner","Tillack","Timmermann","Tischler","Tischmann","Tittman","Tivontschik","Tonat","Tonn","Trampeli","Trauth","Trautmann","Travan","Treff","Tremmel","Tress","Tsamonikian","Tschiers","Tschirch","Tuch","Tucholke","Tudow","Tuschmo","Tächl","Többen","Töpfer","Uhlemann","Uhlig","Uhrig","Uibel","Uliczka","Ullmann","Ullrich","Umbach","Umlauft","Umminger","Unger","Unterpaintner","Urban","Urbaniak","Urbansky","Urhig","Vahlensieck","Van","Vangermain","Vater","Venghaus","Verniest","Verzi","Vey","Viellehner","Vieweg","Voelkel","Vogel","Vogelgsang","Vogt","Voigt","Vokuhl","Volk","Volker","Volkmann","Von","Vona","Vontein","Wachenbrunner","Wachtel","Wagner","Waibel","Wakan","Waldmann","Wallner","Wallstab","Walter","Walther","Walton","Walz","Wanner","Wartenberg","Waschbüsch","Wassilew","Wassiluk","Weber","Wehrsen","Weidlich","Weidner","Weigel","Weight","Weiler","Weimer","Weis","Weiss","Weller","Welsch","Welz","Welzel","Weniger","Wenk","Werle","Werner","Werrmann","Wessel","Wessinghage","Weyel","Wezel","Wichmann","Wickert","Wiebe","Wiechmann","Wiegelmann","Wierig","Wiese","Wieser","Wilhelm","Wilky","Will","Willwacher","Wilts","Wimmer","Winkelmann","Winkler","Winter","Wischek","Wischer","Wissing","Wittich","Wittl","Wolf","Wolfarth","Wolff","Wollenberg","Wollmann","Woytkowska","Wujak","Wurm","Wyludda","Wölpert","Wöschler","Wühn","Wünsche","Zach","Zaczkiewicz","Zahn","Zaituc","Zandt","Zanner","Zapletal","Zauber","Zeidler","Zekl","Zender","Zeuch","Zeyen","Zeyhle","Ziegler","Zimanyi","Zimmer","Zimmermann","Zinser","Zintl","Zipp","Zipse","Zschunke","Zuber","Zwiener","Zümsande","Östringer","Überacker"]})),jR=c((()=>{mi=["Aaron","Abdul","Abdullah","Adam","Adrian","Adriano","Ahmad","Ahmed","Ahmet","Alan","Albert","Alessandro","Alessio","Alex","Alexander","Alfred","Ali","Amar","Amir","Amon","Andre","Andreas","Andrew","Angelo","Ansgar","Anthony","Anton","Antonio","Arda","Arian","Armin","Arne","Arno","Arthur","Artur","Arved","Arvid","Ayman","Baran","Baris","Bastian","Batuhan","Bela","Ben","Benedikt","Benjamin","Bennet","Bennett","Benno","Bent","Berat","Berkay","Bernd","Bilal","Bjarne","Björn","Bo","Boris","Brandon","Brian","Bruno","Bryan","Burak","Calvin","Can","Carl","Carlo","Carlos","Caspar","Cedric","Cedrik","Cem","Charlie","Chris","Christian","Christiano","Christoph","Christopher","Claas","Clemens","Colin","Collin","Conner","Connor","Constantin","Corvin","Curt","Damian","Damien","Daniel","Danilo","Danny","Darian","Dario","Darius","Darren","David","Davide","Davin","Dean","Deniz","Dennis","Denny","Devin","Diego","Dion","Domenic","Domenik","Dominic","Dominik","Dorian","Dustin","Dylan","Ecrin","Eddi","Eddy","Edgar","Edwin","Efe","Ege","Elia","Eliah","Elias","Elijah","Emanuel","Emil","Emilian","Emilio","Emir","Emirhan","Emre","Enes","Enno","Enrico","Eren","Eric","Erik","Etienne","Fabian","Fabien","Fabio","Fabrice","Falk","Felix","Ferdinand","Fiete","Filip","Finlay","Finley","Finn","Finnley","Florian","Francesco","Franz","Frederic","Frederick","Frederik","Friedrich","Fritz","Furkan","Fynn","Gabriel","Georg","Gerrit","Gian","Gianluca","Gino","Giuliano","Giuseppe","Gregor","Gustav","Hagen","Hamza","Hannes","Hanno","Hans","Hasan","Hassan","Hauke","Hendrik","Hennes","Henning","Henri","Henrick","Henrik","Henry","Hugo","Hussein","Ian","Ibrahim","Ilias","Ilja","Ilyas","Immanuel","Ismael","Ismail","Ivan","Iven","Jack","Jacob","Jaden","Jakob","Jamal","James","Jamie","Jan","Janek","Janis","Janne","Jannek","Jannes","Jannik","Jannis","Jano","Janosch","Jared","Jari","Jarne","Jarno","Jaron","Jason","Jasper","Jay","Jayden","Jayson","Jean","Jens","Jeremias","Jeremie","Jeremy","Jermaine","Jerome","Jesper","Jesse","Jim","Jimmy","Joe","Joel","Joey","Johann","Johannes","John","Johnny","Jon","Jona","Jonah","Jonas","Jonathan","Jonte","Joost","Jordan","Joris","Joscha","Joschua","Josef","Joseph","Josh","Joshua","Josua","Juan","Julian","Julien","Julius","Juri","Justin","Justus","Kaan","Kai","Kalle","Karim","Karl","Karlo","Kay","Keanu","Kenan","Kenny","Keno","Kerem","Kerim","Kevin","Kian","Kilian","Kim","Kimi","Kjell","Klaas","Klemens","Konrad","Konstantin","Koray","Korbinian","Kurt","Lars","Lasse","Laurence","Laurens","Laurenz","Laurin","Lean","Leander","Leandro","Leif","Len","Lenn","Lennard","Lennart","Lennert","Lennie","Lennox","Lenny","Leo","Leon","Leonard","Leonardo","Leonhard","Leonidas","Leopold","Leroy","Levent","Levi","Levin","Lewin","Lewis","Liam","Lian","Lias","Lino","Linus","Lio","Lion","Lionel","Logan","Lorenz","Lorenzo","Loris","Louis","Luan","Luc","Luca","Lucas","Lucian","Lucien","Ludwig","Luis","Luiz","Luk","Luka","Lukas","Luke","Lutz","Maddox","Mads","Magnus","Maik","Maksim","Malik","Malte","Manuel","Marc","Marcel","Marco","Marcus","Marek","Marian","Mario","Marius","Mark","Marko","Markus","Marlo","Marlon","Marten","Martin","Marvin","Marwin","Mateo","Mathis","Matis","Mats","Matteo","Mattes","Matthias","Matthis","Matti","Mattis","Maurice","Max","Maxim","Maximilian","Mehmet","Meik","Melvin","Merlin","Mert","Michael","Michel","Mick","Miguel","Mika","Mikail","Mike","Milan","Milo","Mio","Mirac","Mirco","Mirko","Mohamed","Mohammad","Mohammed","Moritz","Morten","Muhammed","Murat","Mustafa","Nathan","Nathanael","Nelson","Neo","Nevio","Nick","Niclas","Nico","Nicolai","Nicolas","Niels","Nikita","Niklas","Niko","Nikolai","Nikolas","Nils","Nino","Noah","Noel","Norman","Odin","Oke","Ole","Oliver","Omar","Onur","Oscar","Oskar","Pascal","Patrice","Patrick","Paul","Peer","Pepe","Peter","Phil","Philip","Philipp","Pierre","Piet","Pit","Pius","Quentin","Quirin","Rafael","Raik","Ramon","Raphael","Rasmus","Raul","Rayan","René","Ricardo","Riccardo","Richard","Rick","Rico","Robert","Robin","Rocco","Roman","Romeo","Ron","Ruben","Ryan","Said","Salih","Sam","Sami","Sammy","Samuel","Sandro","Santino","Sascha","Sean","Sebastian","Selim","Semih","Shawn","Silas","Simeon","Simon","Sinan","Sky","Stefan","Steffen","Stephan","Steve","Steven","Sven","Sönke","Sören","Taha","Tamino","Tammo","Tarik","Tayler","Taylor","Teo","Theo","Theodor","Thies","Thilo","Thomas","Thorben","Thore","Thorge","Tiago","Til","Till","Tillmann","Tim","Timm","Timo","Timon","Timothy","Tino","Titus","Tizian","Tjark","Tobias","Tom","Tommy","Toni","Tony","Torben","Tore","Tristan","Tyler","Tyron","Umut","Valentin","Valentino","Veit","Victor","Viktor","Vin","Vincent","Vito","Vitus","Wilhelm","Willi","William","Willy","Xaver","Yannic","Yannick","Yannik","Yannis","Yasin","Youssef","Yunus","Yusuf","Yven","Yves","Ömer"]})),ER=c((()=>{fi=["#{prefix} #{first_name} #{last_name}","#{first_name} #{nobility_title_prefix} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),NR=c((()=>{vi=["zu","von","vom","von der"]})),BR=c((()=>{gi=["Hr.","Fr.","Dr.","Prof. Dr."]})),PR=c((()=>{TR(),_R(),wR(),jR(),ER(),NR(),BR(),ki={female_first_name:di,first_name:hi,last_name:pi,male_first_name:mi,name:fi,nobility_title_prefix:vi,prefix:gi}})),LR=c((()=>{yi=["(0###) #########","(0####) #######","+49-###-#######","+49-####-########"]})),DR=c((()=>{LR(),bi={formats:yi}})),xR=c((()=>{uR(),dR(),fR(),kR(),SR(),MR(),PR(),DR(),Si={title:"German",address:Qn,cell_phone:$n,company:ni,date:ti,internet:li,lorem:ci,name:ki,phone_number:bi}})),CR=c((()=>{Ai=["###","##","#","##a","##b","##c"]})),KR=c((()=>{Mi=["#{city_name}"]})),RR=c((()=>{Ti=["Aigen im Mühlkreis","Allerheiligen bei Wildon","Altenfelden","Arriach","Axams","Baumgartenberg","Bergern im Dunkelsteinerwald","Berndorf bei Salzburg","Bregenz","Breitenbach am Inn","Deutsch-Wagram","Dienten am Hochkönig","Dietach","Dornbirn","Dürnkrut","Eben im Pongau","Ebenthal in Kärnten","Eichgraben","Eisenstadt","Ellmau","Feistritz am Wechsel","Finkenberg","Fiss","Frantschach-St. Gertraud","Fritzens","Gams bei Hieflau","Geiersberg","Graz","Großhöflein","Gößnitz","Hartl","Hausleiten","Herzogenburg","Hinterhornbach","Hochwolkersdorf","Ilz","Ilztal","Innerbraz","Innsbruck","Itter","Jagerberg","Jeging","Johnsbach","Johnsdorf-Brunn","Jungholz","Kindberg","Kirchdorf am Inn","Klagenfurt","Kottes-Purk","Krumau am Kamp","Krumbach","Lavamünd","Lech","Linz","Ludesch","Lödersdorf","Marbach an der Donau","Mattsee","Mautern an der Donau","Mauterndorf","Mitterbach am Erlaufsee","Neudorf bei Passail","Neudorf bei Staatz","Neukirchen an der Enknach","Neustift an der Lafnitz","Niederleis","Oberndorf in Tirol","Oberstorcha","Oberwaltersdorf","Oed-Oehling","Ort im Innkreis","Pilgersdorf","Pitschgau","Pollham","Preitenegg","Purbach am Neusiedler See","Rabenwald","Raiding","Rastenfeld","Ratten","Rettenegg","Salzburg","Sankt Johann im Saggautal","St. Peter am Kammersberg","St. Pölten","St. Veit an der Glan","Taxenbach","Tragwein","Trebesing","Trieben","Turnau","Ungerdorf","Unterauersbach","Unterstinkenbrunn","Untertilliach","Uttendorf","Vals","Velden am Wörther See","Viehhofen","Villach","Vitis","Waidhofen an der Thaya","Waldkirchen am Wesen","Weißkirchen an der Traun","Wien","Wimpassing im Schwarzatale","Ybbs an der Donau","Ybbsitz","Yspertal","Zeillern","Zell am Pettenfirst","Zell an der Pram","Zerlach","Zwölfaxing","Öblarn","Übelbach","Überackern","Übersaxen","Übersbach"]})),zR=c((()=>{_i=["Ägypten","Äquatorialguinea","Äthiopien","Österreich","Afghanistan","Albanien","Algerien","Amerikanisch-Samoa","Amerikanische Jungferninseln","Andorra","Angola","Anguilla","Antarktis","Antigua und Barbuda","Argentinien","Armenien","Aruba","Aserbaidschan","Australien","Bahamas","Bahrain","Bangladesch","Barbados","Belarus","Belgien","Belize","Benin","die Bermudas","Bhutan","Bolivien","Bosnien und Herzegowina","Botsuana","Bouvetinsel","Brasilien","Britische Jungferninseln","Britisches Territorium im Indischen Ozean","Brunei Darussalam","Bulgarien","Burkina Faso","Burundi","Chile","China","Cookinseln","Costa Rica","Dänemark","Demokratische Republik Kongo","Demokratische Volksrepublik Korea","Deutschland","Dominica","Dominikanische Republik","Dschibuti","Ecuador","El Salvador","Eritrea","Estland","Färöer","Falklandinseln","Fidschi","Finnland","Frankreich","Französisch-Guayana","Französisch-Polynesien","Französische Gebiete im südlichen Indischen Ozean","Gabun","Gambia","Georgien","Ghana","Gibraltar","Grönland","Grenada","Griechenland","Guadeloupe","Guam","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Heard und McDonaldinseln","Honduras","Hongkong","Indien","Indonesien","Irak","Iran","Irland","Island","Israel","Italien","Jamaika","Japan","Jemen","Jordanien","Jugoslawien","Kaimaninseln","Kambodscha","Kamerun","Kanada","Kap Verde","Kasachstan","Katar","Kenia","Kirgisistan","Kiribati","Kleinere amerikanische Überseeinseln","Kokosinseln","Kolumbien","Komoren","Kongo","Kroatien","Kuba","Kuwait","Laos","Lesotho","Lettland","Libanon","Liberia","Libyen","Liechtenstein","Litauen","Luxemburg","Macau","Madagaskar","Malawi","Malaysia","Malediven","Mali","Malta","ehemalige jugoslawische Republik Mazedonien","Marokko","Marshallinseln","Martinique","Mauretanien","Mauritius","Mayotte","Mexiko","Mikronesien","Monaco","Mongolei","Montserrat","Mosambik","Myanmar","Nördliche Marianen","Namibia","Nauru","Nepal","Neukaledonien","Neuseeland","Nicaragua","Niederländische Antillen","Niederlande","Niger","Nigeria","Niue","Norfolkinsel","Norwegen","Oman","Osttimor","Pakistan","Palau","Panama","Papua-Neuguinea","Paraguay","Peru","Philippinen","Pitcairninseln","Polen","Portugal","Puerto Rico","Réunion","Republik Korea","Republik Moldau","Ruanda","Rumänien","Russische Föderation","São Tomé und Príncipe","Südafrika","Südgeorgien und Südliche Sandwichinseln","Salomonen","Sambia","Samoa","San Marino","Saudi-Arabien","Schweden","Schweiz","Senegal","Seychellen","Sierra Leone","Simbabwe","Singapur","Slowakei","Slowenien","Somalien","Spanien","Sri Lanka","St. Helena","St. Kitts und Nevis","St. Lucia","St. Pierre und Miquelon","St. Vincent und die Grenadinen","Sudan","Surinam","Svalbard und Jan Mayen","Swasiland","Syrien","Türkei","Tadschikistan","Taiwan","Tansania","Thailand","Togo","Tokelau","Tonga","Trinidad und Tobago","Tschad","Tschechische Republik","Tunesien","Turkmenistan","Turks- und Caicosinseln","Tuvalu","Uganda","Ukraine","Ungarn","Uruguay","Usbekistan","Vanuatu","Vatikanstadt","Venezuela","Vereinigte Arabische Emirate","Vereinigte Staaten","Vereinigtes Königreich","Vietnam","Wallis und Futuna","Weihnachtsinsel","Westsahara","Zentralafrikanische Republik","Zypern"]})),OR=c((()=>{wi=["Österreich"]})),IR=c((()=>{ji=["####"]})),VR=c((()=>{Ei=["Apt. ###","Zimmer ###","# OG"]})),GR=c((()=>{Ni=["Burgenland","Kärnten","Niederösterreich","Oberösterreich","Salzburg","Steiermark","Tirol","Vorarlberg","Wien"]})),HR=c((()=>{Bi=["Bgld.","Ktn.","NÖ","OÖ","Sbg.","Stmk.","T","Vbg.","W"]})),FR=c((()=>{Pi=["#{street_name} #{building_number}"]})),JR=c((()=>{Li=["#{street_root}"]})),UR=c((()=>{Di=["Ahorn","Ahorngasse (St. Andrä)","Alleestraße (Poysbrunn)","Alpenlandstraße","Alte Poststraße","Alte Ufergasse","Am Kronawett (Hagenbrunn)","Am Mühlwasser","Am Rebenhang","Am Sternweg","Anton Wildgans-Straße","Auer-von-Welsbach-Weg","Auf der Stift","Aufeldgasse","Bahngasse","Bahnhofstraße","Bahnstraße (Gerhaus)","Basteigasse","Berggasse","Bergstraße","Birkenweg","Blasiussteig","Blattur","Bruderhofgasse","Brunnelligasse","Bühelweg","Darnautgasse","Donaugasse","Dorfplatz (Haselbach)","Dr.-Oberreiter-Straße","Dr.Karl Holoubek-Str.","Drautal Bundesstraße","Dürnrohrer Straße","Ebenthalerstraße","Eckgrabenweg","Erlenstraße","Erlenweg","Eschenweg","Etrichgasse","Fassergasse","Feichteggerwiese","Feld-Weg","Feldgasse","Feldstapfe","Fischpointweg","Flachbergstraße","Flurweg","Franz Schubert-Gasse","Franz-Schneeweiß-Weg","Franz-von-Assisi-Straße","Fritz-Pregl-Straße","Fuchsgrubenweg","Födlerweg","Föhrenweg","Fünfhaus (Paasdorf)","Gabelsbergerstraße","Gartenstraße","Geigen","Geigergasse","Gemeindeaugasse","Gemeindeplatz","Georg-Aichinger-Straße","Glanfeldbachweg","Graben (Burgauberg)","Grub","Gröretgasse","Grünbach","Gösting","Hainschwang","Hans-Mauracher-Straße","Hart","Teichstraße","Hauptplatz","Hauptstraße","Heideweg","Heinrich Landauer Gasse","Helenengasse","Hermann von Gilmweg","Hermann-Löns-Gasse","Herminengasse","Hernstorferstraße","Hirsdorf","Hochfeistritz","Hochhaus Neue Donau","Hof","Hussovits Gasse","Höggen","Hütten","Janzgasse","Jochriemgutstraße","Johann-Strauß-Gasse","Julius-Raab-Straße","Kahlenberger Straße","Karl Kraft-Straße","Kegelprielstraße","Keltenberg-Eponaweg","Kennedybrücke","Kerpelystraße","Kindergartenstraße","Kinderheimgasse","Kirchenplatz","Kirchweg","Klagenfurter Straße","Klamm","Kleinbaumgarten","Klingergasse","Koloniestraße","Konrad-Duden-Gasse","Krankenhausstraße","Kubinstraße","Köhldorfergasse","Lackenweg","Lange Mekotte","Leifling","Leopold Frank-Straße (Pellendorf)","Lerchengasse (Pirka)","Lichtensternsiedlung V","Lindenhofstraße","Lindenweg","Luegstraße","Maierhof","Malerweg","Mitterweg","Mittlere Hauptstraße","Moosbachgasse","Morettigasse","Musikpavillon Riezlern","Mühlboden","Mühle","Mühlenweg","Neustiftgasse","Niederegg","Niedergams","Nordwestbahnbrücke","Oberbödenalm","Obere Berggasse","Oedt","Am Färberberg","Ottogasse","Paul Peters-Gasse","Perspektivstraße","Poppichl","Privatweg","Prixgasse","Pyhra","Radetzkystraße","Raiden","Reichensteinstraße","Reitbauernstraße","Reiterweg","Reitschulgasse","Ringweg","Rupertistraße","Römerstraße","Römerweg","Sackgasse","Schaunbergerstraße","Schloßweg","Schulgasse (Langeck)","Schönholdsiedlung","Seeblick","Seestraße","Semriacherstraße","Simling","Sipbachzeller Straße","Sonnenweg","Spargelfeldgasse","Spiesmayrweg","Sportplatzstraße","St.Ulrich","Steilmannstraße","Steingrüneredt","Strassfeld","Straßerau","Stöpflweg","Stüra","Taferngasse","Tennweg","Thomas Koschat-Gasse","Tiroler Straße","Torrogasse","Uferstraße (Schwarzau am Steinfeld)","Unterdörfl","Unterer Sonnrainweg","Verwaltersiedlung","Waldhang","Wasen","Weidenstraße","Weiherweg","Wettsteingasse","Wiener Straße","Windisch","Zebragasse","Zellerstraße","Ziehrerstraße","Zulechnerweg","Zwergjoch","Ötzbruck"]})),WR=c((()=>{CR(),KR(),RR(),zR(),OR(),IR(),VR(),GR(),HR(),FR(),JR(),UR(),xi={building_number:Ai,city:Mi,city_name:Ti,country:_i,default_country:wi,postcode:ji,secondary_address:Ei,state:Ni,state_abbr:Bi,street_address:Pi,street_name:Li,street_root:Di}})),ZR=c((()=>{Ci=["+43-6##-#######","06##-########","+436#########","06##########"]})),qR=c((()=>{ZR(),Ki={formats:Ci}})),QR=c((()=>{Ri=["GmbH","AG","Gruppe","KG","GmbH & Co. KG","UG","OHG"]})),YR=c((()=>{zi=["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} und #{Name.last_name}"]})),$R=c((()=>{Oi=["GmbH","AG","Gruppe","KG","GmbH & Co. KG","UG","OHG"]})),XR=c((()=>{QR(),YR(),$R(),Ii={legal_form:Ri,name:zi,suffix:Oi}})),ez=c((()=>{Vi=["com","info","name","net","org","de","ch","at"]})),az=c((()=>{Gi=["gmail.com","yahoo.com","hotmail.com"]})),nz=c((()=>{ez(),az(),Hi={domain_suffix:Vi,free_email:Gi}})),iz=c((()=>{Fi=["Aaron","Abdul","Abdullah","Adam","Adrian","Adriano","Ahmad","Ahmed","Ahmet","Alan","Albert","Alessandro","Alessio","Alex","Alexander","Alfred","Ali","Amar","Amir","Amon","Andre","Andreas","Andrew","Angelo","Ansgar","Anthony","Anton","Antonio","Arda","Arian","Armin","Arne","Arno","Arthur","Artur","Arved","Arvid","Ayman","Baran","Baris","Bastian","Batuhan","Bela","Ben","Benedikt","Benjamin","Bennet","Bennett","Benno","Bent","Berat","Berkay","Bernd","Bilal","Bjarne","Björn","Bo","Boris","Brandon","Brian","Bruno","Bryan","Burak","Calvin","Can","Carl","Carlo","Carlos","Caspar","Cedric","Cedrik","Cem","Charlie","Chris","Christian","Christiano","Christoph","Christopher","Claas","Clemens","Colin","Collin","Conner","Connor","Constantin","Corvin","Curt","Damian","Damien","Daniel","Danilo","Danny","Darian","Dario","Darius","Darren","David","Davide","Davin","Dean","Deniz","Dennis","Denny","Devin","Diego","Dion","Domenic","Domenik","Dominic","Dominik","Dorian","Dustin","Dylan","Ecrin","Eddi","Eddy","Edgar","Edwin","Efe","Ege","Elia","Eliah","Elias","Elijah","Emanuel","Emil","Emilian","Emilio","Emir","Emirhan","Emre","Enes","Enno","Enrico","Eren","Eric","Erik","Etienne","Fabian","Fabien","Fabio","Fabrice","Falk","Felix","Ferdinand","Fiete","Filip","Finlay","Finley","Finn","Finnley","Florian","Francesco","Franz","Frederic","Frederick","Frederik","Friedrich","Fritz","Furkan","Fynn","Gabriel","Georg","Gerrit","Gian","Gianluca","Gino","Giuliano","Giuseppe","Gregor","Gustav","Hagen","Hamza","Hannes","Hanno","Hans","Hasan","Hassan","Hauke","Hendrik","Hennes","Henning","Henri","Henrick","Henrik","Henry","Hugo","Hussein","Ian","Ibrahim","Ilias","Ilja","Ilyas","Immanuel","Ismael","Ismail","Ivan","Iven","Jack","Jacob","Jaden","Jakob","Jamal","James","Jamie","Jan","Janek","Janis","Janne","Jannek","Jannes","Jannik","Jannis","Jano","Janosch","Jared","Jari","Jarne","Jarno","Jaron","Jason","Jasper","Jay","Jayden","Jayson","Jean","Jens","Jeremias","Jeremie","Jeremy","Jermaine","Jerome","Jesper","Jesse","Jim","Jimmy","Joe","Joel","Joey","Johann","Johannes","John","Johnny","Jon","Jona","Jonah","Jonas","Jonathan","Jonte","Joost","Jordan","Joris","Joscha","Joschua","Josef","Joseph","Josh","Joshua","Josua","Juan","Julian","Julien","Julius","Juri","Justin","Justus","Kaan","Kai","Kalle","Karim","Karl","Karlo","Kay","Keanu","Kenan","Kenny","Keno","Kerem","Kerim","Kevin","Kian","Kilian","Kim","Kimi","Kjell","Klaas","Klemens","Konrad","Konstantin","Koray","Korbinian","Kurt","Lars","Lasse","Laurence","Laurens","Laurenz","Laurin","Lean","Leander","Leandro","Leif","Len","Lenn","Lennard","Lennart","Lennert","Lennie","Lennox","Lenny","Leo","Leon","Leonard","Leonardo","Leonhard","Leonidas","Leopold","Leroy","Levent","Levi","Levin","Lewin","Lewis","Liam","Lian","Lias","Lino","Linus","Lio","Lion","Lionel","Logan","Lorenz","Lorenzo","Loris","Louis","Luan","Luc","Luca","Lucas","Lucian","Lucien","Ludwig","Luis","Luiz","Luk","Luka","Lukas","Luke","Lutz","Maddox","Mads","Magnus","Maik","Maksim","Malik","Malte","Manuel","Marc","Marcel","Marco","Marcus","Marek","Marian","Mario","Marius","Mark","Marko","Markus","Marlo","Marlon","Marten","Martin","Marvin","Marwin","Mateo","Mathis","Matis","Mats","Matteo","Mattes","Matthias","Matthis","Matti","Mattis","Maurice","Max","Maxim","Maximilian","Mehmet","Meik","Melvin","Merlin","Mert","Michael","Michel","Mick","Miguel","Mika","Mikail","Mike","Milan","Milo","Mio","Mirac","Mirco","Mirko","Mohamed","Mohammad","Mohammed","Moritz","Morten","Muhammed","Murat","Mustafa","Nathan","Nathanael","Nelson","Neo","Nevio","Nick","Niclas","Nico","Nicolai","Nicolas","Niels","Nikita","Niklas","Niko","Nikolai","Nikolas","Nils","Nino","Noah","Noel","Norman","Odin","Oke","Ole","Oliver","Omar","Onur","Oscar","Oskar","Pascal","Patrice","Patrick","Paul","Peer","Pepe","Peter","Phil","Philip","Philipp","Pierre","Piet","Pit","Pius","Quentin","Quirin","Rafael","Raik","Ramon","Raphael","Rasmus","Raul","Rayan","René","Ricardo","Riccardo","Richard","Rick","Rico","Robert","Robin","Rocco","Roman","Romeo","Ron","Ruben","Ryan","Said","Salih","Sam","Sami","Sammy","Samuel","Sandro","Santino","Sascha","Sean","Sebastian","Selim","Semih","Shawn","Silas","Simeon","Simon","Sinan","Sky","Stefan","Steffen","Stephan","Steve","Steven","Sven","Sönke","Sören","Taha","Tamino","Tammo","Tarik","Tayler","Taylor","Teo","Theo","Theodor","Thies","Thilo","Thomas","Thorben","Thore","Thorge","Tiago","Til","Till","Tillmann","Tim","Timm","Timo","Timon","Timothy","Tino","Titus","Tizian","Tjark","Tobias","Tom","Tommy","Toni","Tony","Torben","Tore","Tristan","Tyler","Tyron","Umut","Valentin","Valentino","Veit","Victor","Viktor","Vin","Vincent","Vito","Vitus","Wilhelm","Willi","William","Willy","Xaver","Yannic","Yannick","Yannik","Yannis","Yasin","Youssef","Yunus","Yusuf","Yven","Yves","Ömer","Aaliyah","Abby","Abigail","Ada","Adelina","Adriana","Aileen","Aimee","Alana","Alea","Alena","Alessa","Alessia","Alexa","Alexandra","Alexia","Alexis","Aleyna","Alia","Alica","Alice","Alicia","Alina","Alisa","Alisha","Alissa","Aliya","Aliyah","Allegra","Alma","Alyssa","Amalia","Amanda","Amelia","Amelie","Amina","Amira","Amy","Ana","Anabel","Anastasia","Andrea","Angela","Angelina","Angelique","Anja","Ann","Anna","Annabel","Annabell","Annabelle","Annalena","Anne","Anneke","Annelie","Annemarie","Anni","Annie","Annika","Anny","Anouk","Antonia","Arda","Ariana","Ariane","Arwen","Ashley","Asya","Aurelia","Aurora","Ava","Ayleen","Aylin","Ayse","Azra","Betty","Bianca","Bianka","Caitlin","Cara","Carina","Carla","Carlotta","Carmen","Carolin","Carolina","Caroline","Cassandra","Catharina","Catrin","Cecile","Cecilia","Celia","Celina","Celine","Ceyda","Ceylin","Chantal","Charleen","Charlotta","Charlotte","Chayenne","Cheyenne","Chiara","Christin","Christina","Cindy","Claire","Clara","Clarissa","Colleen","Collien","Cora","Corinna","Cosima","Dana","Daniela","Daria","Darleen","Defne","Delia","Denise","Diana","Dilara","Dina","Dorothea","Ecrin","Eda","Eileen","Ela","Elaine","Elanur","Elea","Elena","Eleni","Eleonora","Eliana","Elif","Elina","Elisa","Elisabeth","Ella","Ellen","Elli","Elly","Elsa","Emelie","Emely","Emilia","Emilie","Emily","Emma","Emmely","Emmi","Emmy","Enie","Enna","Enya","Esma","Estelle","Esther","Eva","Evelin","Evelina","Eveline","Evelyn","Fabienne","Fatima","Fatma","Felicia","Felicitas","Felina","Femke","Fenja","Fine","Finia","Finja","Finnja","Fiona","Flora","Florentine","Francesca","Franka","Franziska","Frederike","Freya","Frida","Frieda","Friederike","Giada","Gina","Giulia","Giuliana","Greta","Hailey","Hana","Hanna","Hannah","Heidi","Helen","Helena","Helene","Helin","Henriette","Henrike","Hermine","Ida","Ilayda","Imke","Ina","Ines","Inga","Inka","Irem","Isa","Isabel","Isabell","Isabella","Isabelle","Ivonne","Jacqueline","Jamie","Jamila","Jana","Jane","Janin","Janina","Janine","Janna","Janne","Jara","Jasmin","Jasmina","Jasmine","Jella","Jenna","Jennifer","Jenny","Jessica","Jessy","Jette","Jil","Jill","Joana","Joanna","Joelina","Joeline","Joelle","Johanna","Joleen","Jolie","Jolien","Jolin","Jolina","Joline","Jona","Jonah","Jonna","Josefin","Josefine","Josephin","Josephine","Josie","Josy","Joy","Joyce","Judith","Judy","Jule","Julia","Juliana","Juliane","Julie","Julienne","Julika","Julina","Juna","Justine","Kaja","Karina","Karla","Karlotta","Karolina","Karoline","Kassandra","Katarina","Katharina","Kathrin","Katja","Katrin","Kaya","Kayra","Kiana","Kiara","Kim","Kimberley","Kimberly","Kira","Klara","Korinna","Kristin","Kyra","Laila","Lana","Lara","Larissa","Laura","Laureen","Lavinia","Lea","Leah","Leana","Leandra","Leann","Lee","Leila","Lena","Lene","Leni","Lenia","Lenja","Lenya","Leona","Leoni","Leonie","Leonora","Leticia","Letizia","Levke","Leyla","Lia","Liah","Liana","Lili","Lilia","Lilian","Liliana","Lilith","Lilli","Lillian","Lilly","Lily","Lina","Linda","Lindsay","Line","Linn","Linnea","Lisa","Lisann","Lisanne","Liv","Livia","Liz","Lola","Loreen","Lorena","Lotta","Lotte","Louisa","Louise","Luana","Luca","Lucia","Lucie","Lucienne","Lucy","Luisa","Luise","Luka","Luna","Luzie","Lya","Lydia","Lyn","Lynn","Madeleine","Madita","Madleen","Madlen","Magdalena","Maike","Mailin","Maira","Maja","Malena","Malia","Malin","Malina","Mandy","Mara","Marah","Mareike","Maren","Maria","Mariam","Marie","Marieke","Mariella","Marika","Marina","Marisa","Marissa","Marit","Marla","Marleen","Marlen","Marlena","Marlene","Marta","Martha","Mary","Maryam","Mathilda","Mathilde","Matilda","Maxi","Maxima","Maxine","Maya","Mayra","Medina","Medine","Meike","Melanie","Melek","Melike","Melina","Melinda","Melis","Melisa","Melissa","Merle","Merve","Meryem","Mette","Mia","Michaela","Michelle","Mieke","Mila","Milana","Milena","Milla","Mina","Mira","Miray","Miriam","Mirja","Mona","Monique","Nadine","Nadja","Naemi","Nancy","Naomi","Natalia","Natalie","Nathalie","Neele","Nela","Nele","Nelli","Nelly","Nia","Nicole","Nika","Nike","Nikita","Nila","Nina","Nisa","Noemi","Nora","Olivia","Patricia","Patrizia","Paula","Paulina","Pauline","Penelope","Philine","Phoebe","Pia","Rahel","Rania","Rebecca","Rebekka","Riana","Rieke","Rike","Romina","Romy","Ronja","Rosa","Rosalie","Ruby","Sabrina","Sahra","Sally","Salome","Samantha","Samia","Samira","Sandra","Sandy","Sanja","Saphira","Sara","Sarah","Saskia","Selin","Selina","Selma","Sena","Sidney","Sienna","Silja","Sina","Sinja","Smilla","Sofia","Sofie","Sonja","Sophia","Sophie","Soraya","Stefanie","Stella","Stephanie","Stina","Sude","Summer","Susanne","Svea","Svenja","Sydney","Tabea","Talea","Talia","Tamara","Tamia","Tamina","Tanja","Tara","Tarja","Teresa","Tessa","Thalea","Thalia","Thea","Theresa","Tia","Tina","Tomke","Tuana","Valentina","Valeria","Valerie","Vanessa","Vera","Veronika","Victoria","Viktoria","Viola","Vivian","Vivien","Vivienne","Wibke","Wiebke","Xenia","Yara","Yaren","Yasmin","Ylvi","Ylvie","Yvonne","Zara","Zehra","Zeynep","Zoe","Zoey","Zoé"]})),rz=c((()=>{Ji=["Abel","Abicht","Abraham","Abramovic","Abt","Achilles","Achkinadze","Ackermann","Adam","Adams","Ade","Agostini","Ahlke","Ahrenberg","Ahrens","Aigner","Albert","Albrecht","Alexa","Alexander","Alizadeh","Allgeyer","Amann","Amberg","Anding","Anggreny","Apitz","Arendt","Arens","Arndt","Aryee","Aschenbroich","Assmus","Astafei","Auer","Axmann","Baarck","Bachmann","Badane","Bader","Baganz","Bahl","Bak","Balcer","Balck","Balkow","Balnuweit","Balzer","Banse","Barr","Bartels","Barth","Barylla","Baseda","Battke","Bauer","Bauermeister","Baumann","Baumeister","Bauschinger","Bauschke","Bayer","Beavogui","Beck","Beckel","Becker","Beckmann","Bedewitz","Beele","Beer","Beggerow","Beh","Behr","Behrenbruch","Belz","Bender","Benecke","Benner","Benninger","Benzing","Berends","Berger","Berner","Berning","Bertenbreiter","Best","Bethke","Betz","Beushausen","Beutelspacher","Beyer","Biba","Bichler","Bickel","Biedermann","Bieler","Bielert","Bienasch","Bienias","Biesenbach","Bigdeli","Birkemeyer","Bittner","Blank","Blaschek","Blassneck","Bloch","Blochwitz","Blockhaus","Blum","Blume","Bock","Bode","Bogdashin","Bogenrieder","Bohge","Bolm","Borgschulze","Bork","Bormann","Bornscheuer","Borrmann","Borsch","Boruschewski","Bos","Bosler","Bourrouag","Bouschen","Boxhammer","Boyde","Bozsik","Brand","Brandenburg","Brandis","Brandt","Brauer","Braun","Brehmer","Breitenstein","Bremer","Bremser","Brenner","Brettschneider","Breu","Breuer","Briesenick","Bringmann","Brinkmann","Brix","Broening","Brosch","Bruckmann","Bruder","Bruhns","Brunner","Bruns","Bräutigam","Brömme","Brüggmann","Buchholz","Buchrucker","Buder","Bultmann","Bunjes","Burger","Burghagen","Burkhard","Burkhardt","Burmeister","Busch","Buschbaum","Busemann","Buss","Busse","Bussmann","Byrd","Bäcker","Böhm","Bönisch","Börgeling","Börner","Böttner","Büchele","Bühler","Büker","Büngener","Bürger","Bürklein","Büscher","Büttner","Camara","Carlowitz","Carlsohn","Caspari","Caspers","Chapron","Christ","Cierpinski","Clarius","Cleem","Cleve","Co","Conrad","Cordes","Cornelsen","Cors","Cotthardt","Crews","Cronjäger","Crosskofp","Da","Dahm","Dahmen","Daimer","Damaske","Danneberg","Danner","Daub","Daubner","Daudrich","Dauer","Daum","Dauth","Dautzenberg","De","Decker","Deckert","Deerberg","Dehmel","Deja","Delonge","Demut","Dengler","Denner","Denzinger","Derr","Dertmann","Dethloff","Deuschle","Dieckmann","Diedrich","Diekmann","Dienel","Dies","Dietrich","Dietz","Dietzsch","Diezel","Dilla","Dingelstedt","Dippl","Dittmann","Dittmar","Dittmer","Dix","Dobbrunz","Dobler","Dohring","Dolch","Dold","Dombrowski","Donie","Doskoczynski","Dragu","Drechsler","Drees","Dreher","Dreier","Dreissigacker","Dressler","Drews","Duma","Dutkiewicz","Dyett","Dylus","Dächert","Döbel","Döring","Dörner","Dörre","Dück","Eberhard","Eberhardt","Ecker","Eckhardt","Edorh","Effler","Eggenmueller","Ehm","Ehmann","Ehrig","Eich","Eifert","Einert","Eisenlauer","Ekpo","Elbe","Eleyth","Elss","Emert","Emmelmann","Ender","Engel","Engelen","Engelmann","Eplinius","Erdmann","Erhardt","Erlei","Erm","Ernst","Ertl","Erwes","Esenwein","Esser","Evers","Everts","Ewald","Fahner","Faller","Falter","Farber","Fassbender","Faulhaber","Fehrig","Feld","Felke","Feller","Fenner","Fenske","Feuerbach","Fietz","Figl","Figura","Filipowski","Filsinger","Fincke","Fink","Finke","Fischer","Fitschen","Fleischer","Fleischmann","Floder","Florczak","Flore","Flottmann","Forkel","Forst","Frahmeke","Frank","Franke","Franta","Frantz","Franz","Franzis","Franzmann","Frauen","Frauendorf","Freigang","Freimann","Freimuth","Freisen","Frenzel","Frey","Fricke","Fried","Friedek","Friedenberg","Friedmann","Friedrich","Friess","Frisch","Frohn","Frosch","Fuchs","Fuhlbrügge","Fusenig","Fust","Förster","Gaba","Gabius","Gabler","Gadschiew","Gakstädter","Galander","Gamlin","Gamper","Gangnus","Ganzmann","Garatva","Gast","Gastel","Gatzka","Gauder","Gebhardt","Geese","Gehre","Gehrig","Gehring","Gehrke","Geiger","Geisler","Geissler","Gelling","Gens","Gerbennow","Gerdel","Gerhardt","Gerschler","Gerson","Gesell","Geyer","Ghirmai","Ghosh","Giehl","Gierisch","Giesa","Giesche","Gilde","Glatting","Goebel","Goedicke","Goldbeck","Goldfuss","Goldkamp","Goldkühle","Goller","Golling","Gollnow","Golomski","Gombert","Gotthardt","Gottschalk","Gotz","Goy","Gradzki","Graf","Grams","Grasse","Gratzky","Grau","Greb","Green","Greger","Greithanner","Greschner","Griem","Griese","Grimm","Gromisch","Gross","Grosser","Grossheim","Grosskopf","Grothaus","Grothkopp","Grotke","Grube","Gruber","Grundmann","Gruning","Gruszecki","Gröss","Grötzinger","Grün","Grüner","Gummelt","Gunkel","Gunther","Gutjahr","Gutowicz","Gutschank","Göbel","Göckeritz","Göhler","Görlich","Görmer","Götz","Götzelmann","Güldemeister","Günther","Günz","Gürbig","Haack","Haaf","Habel","Hache","Hackbusch","Hackelbusch","Hadfield","Hadwich","Haferkamp","Hahn","Hajek","Hallmann","Hamann","Hanenberger","Hannecker","Hanniske","Hansen","Hardy","Hargasser","Harms","Harnapp","Harter","Harting","Hartlieb","Hartmann","Hartwig","Hartz","Haschke","Hasler","Hasse","Hassfeld","Haug","Hauke","Haupt","Haverney","Heberstreit","Hechler","Hecht","Heck","Hedermann","Hehl","Heidelmann","Heidler","Heinemann","Heinig","Heinke","Heinrich","Heinze","Heiser","Heist","Hellmann","Helm","Helmke","Helpling","Hengmith","Henkel","Hennes","Henry","Hense","Hensel","Hentel","Hentschel","Hentschke","Hepperle","Herberger","Herbrand","Hering","Hermann","Hermecke","Herms","Herold","Herrmann","Herschmann","Hertel","Herweg","Herwig","Herzenberg","Hess","Hesse","Hessek","Hessler","Hetzler","Heuck","Heydemüller","Hiebl","Hildebrand","Hildenbrand","Hilgendorf","Hillard","Hiller","Hingsen","Hingst","Hinrichs","Hirsch","Hirschberg","Hirt","Hodea","Hoffman","Hoffmann","Hofmann","Hohenberger","Hohl","Hohn","Hohnheiser","Hold","Holdt","Holinski","Holl","Holtfreter","Holz","Holzdeppe","Holzner","Hommel","Honz","Hooss","Hoppe","Horak","Horn","Horna","Hornung","Hort","Howard","Huber","Huckestein","Hudak","Huebel","Hugo","Huhn","Hujo","Huke","Huls","Humbert","Huneke","Huth","Häber","Häfner","Höcke","Höft","Höhne","Hönig","Hördt","Hübenbecker","Hübl","Hübner","Hügel","Hüttcher","Hütter","Ibe","Ihly","Illing","Isak","Isekenmeier","Itt","Jacob","Jacobs","Jagusch","Jahn","Jahnke","Jakobs","Jakubczyk","Jambor","Jamrozy","Jander","Janich","Janke","Jansen","Jarets","Jaros","Jasinski","Jasper","Jegorov","Jellinghaus","Jeorga","Jerschabek","Jess","John","Jonas","Jossa","Jucken","Jung","Jungbluth","Jungton","Just","Jürgens","Kaczmarek","Kaesmacher","Kahl","Kahlert","Kahles","Kahlmeyer","Kaiser","Kalinowski","Kallabis","Kallensee","Kampf","Kampschulte","Kappe","Kappler","Karhoff","Karrass","Karst","Karsten","Karus","Kass","Kasten","Kastner","Katzinski","Kaufmann","Kaul","Kausemann","Kawohl","Kazmarek","Kedzierski","Keil","Keiner","Keller","Kelm","Kempe","Kemper","Kempter","Kerl","Kern","Kesselring","Kesselschläger","Kette","Kettenis","Keutel","Kick","Kiessling","Kinadeter","Kinzel","Kinzy","Kirch","Kirst","Kisabaka","Klaas","Klabuhn","Klapper","Klauder","Klaus","Kleeberg","Kleiber","Klein","Kleinert","Kleininger","Kleinmann","Kleinsteuber","Kleiss","Klemme","Klimczak","Klinger","Klink","Klopsch","Klose","Kloss","Kluge","Kluwe","Knabe","Kneifel","Knetsch","Knies","Knippel","Knobel","Knoblich","Knoll","Knorr","Knorscheidt","Knut","Kobs","Koch","Kochan","Kock","Koczulla","Koderisch","Koehl","Koehler","Koenig","Koester","Kofferschlager","Koha","Kohle","Kohlmann","Kohnle","Kohrt","Koj","Kolb","Koleiski","Kolokas","Komoll","Konieczny","Konig","Konow","Konya","Koob","Kopf","Kosenkow","Koster","Koszewski","Koubaa","Kovacs","Kowalick","Kowalinski","Kozakiewicz","Krabbe","Kraft","Kral","Kramer","Krauel","Kraus","Krause","Krauspe","Kreb","Krebs","Kreissig","Kresse","Kreutz","Krieger","Krippner","Krodinger","Krohn","Krol","Kron","Krueger","Krug","Kruger","Krull","Kruschinski","Krämer","Kröckert","Kröger","Krüger","Kubera","Kufahl","Kuhlee","Kuhnen","Kulimann","Kulma","Kumbernuss","Kummle","Kunz","Kupfer","Kupprion","Kuprion","Kurnicki","Kurrat","Kurschilgen","Kuschewitz","Kuschmann","Kuske","Kustermann","Kutscherauer","Kutzner","Kwadwo","Kähler","Käther","Köhler","Köhrbrück","Köhre","Kölotzei","König","Köpernick","Köseoglu","Kúhn","Kúhnert","Kühn","Kühnel","Kühnemund","Kühnert","Kühnke","Küsters","Küter","Laack","Lack","Ladewig","Lakomy","Lammert","Lamos","Landmann","Lang","Lange","Langfeld","Langhirt","Lanig","Lauckner","Lauinger","Laurén","Lausecker","Laux","Laws","Lax","Leberer","Lehmann","Lehner","Leibold","Leide","Leimbach","Leipold","Leist","Leiter","Leiteritz","Leitheim","Leiwesmeier","Lenfers","Lenk","Lenz","Lenzen","Leo","Lepthin","Lesch","Leschnik","Letzelter","Lewin","Lewke","Leyckes","Lg","Lichtenfeld","Lichtenhagen","Lichtl","Liebach","Liebe","Liebich","Liebold","Lieder","Lienshöft","Linden","Lindenberg","Lindenmayer","Lindner","Linke","Linnenbaum","Lippe","Lipske","Lipus","Lischka","Lobinger","Logsch","Lohmann","Lohre","Lohse","Lokar","Loogen","Lorenz","Losch","Loska","Lott","Loy","Lubina","Ludolf","Lufft","Lukoschek","Lutje","Lutz","Löser","Löwa","Lübke","Maak","Maczey","Madetzky","Madubuko","Mai","Maier","Maisch","Malek","Malkus","Mallmann","Malucha","Manns","Manz","Marahrens","Marchewski","Margis","Markowski","Marl","Marner","Marquart","Marschek","Martel","Marten","Martin","Marx","Marxen","Mathes","Mathies","Mathiszik","Matschke","Mattern","Matthes","Matula","Mau","Maurer","Mauroff","May","Maybach","Mayer","Mebold","Mehl","Mehlhorn","Mehlorn","Meier","Meisch","Meissner","Meloni","Melzer","Menga","Menne","Mensah","Mensing","Merkel","Merseburg","Mertens","Mesloh","Metzger","Metzner","Mewes","Meyer","Michallek","Michel","Mielke","Mikitenko","Milde","Minah","Mintzlaff","Mockenhaupt","Moede","Moedl","Moeller","Moguenara","Mohr","Mohrhard","Molitor","Moll","Moller","Molzan","Montag","Moormann","Mordhorst","Morgenstern","Morhelfer","Moritz","Moser","Motchebon","Motzenbbäcker","Mrugalla","Muckenthaler","Mues","Muller","Mulrain","Mächtig","Mäder","Möcks","Mögenburg","Möhsner","Möldner","Möllenbeck","Möller","Möllinger","Mörsch","Mühleis","Müller","Münch","Nabein","Nabow","Nagel","Nannen","Nastvogel","Nau","Naubert","Naumann","Ne","Neimke","Nerius","Neubauer","Neubert","Neuendorf","Neumair","Neumann","Neupert","Neurohr","Neuschwander","Newton","Ney","Nicolay","Niedermeier","Nieklauson","Niklaus","Nitzsche","Noack","Nodler","Nolte","Normann","Norris","Northoff","Nowak","Nussbeck","Nwachukwu","Nytra","Nöh","Oberem","Obergföll","Obermaier","Ochs","Oeser","Olbrich","Onnen","Ophey","Oppong","Orth","Orthmann","Oschkenat","Osei","Osenberg","Ostendarp","Ostwald","Otte","Otto","Paesler","Pajonk","Pallentin","Panzig","Paschke","Patzwahl","Paukner","Peselman","Peter","Peters","Petzold","Pfeiffer","Pfennig","Pfersich","Pfingsten","Pflieger","Pflügner","Philipp","Pichlmaier","Piesker","Pietsch","Pingpank","Pinnock","Pippig","Pitschugin","Plank","Plass","Platzer","Plauk","Plautz","Pletsch","Plotzitzka","Poehn","Poeschl","Pogorzelski","Pohl","Pohland","Pohle","Polifka","Polizzi","Pollmächer","Pomp","Ponitzsch","Porsche","Porth","Poschmann","Poser","Pottel","Prah","Prange","Prediger","Pressler","Preuk","Preuss","Prey","Priemer","Proske","Pusch","Pöche","Pöge","Raabe","Rabenstein","Rach","Radtke","Rahn","Ranftl","Rangen","Ranz","Rapp","Rath","Rau","Raubuch","Raukuc","Rautenkranz","Rehwagen","Reiber","Reichardt","Reichel","Reichling","Reif","Reifenrath","Reimann","Reinberg","Reinelt","Reinhardt","Reinke","Reitze","Renk","Rentz","Renz","Reppin","Restle","Restorff","Retzke","Reuber","Reumann","Reus","Reuss","Reusse","Rheder","Rhoden","Richards","Richter","Riedel","Riediger","Rieger","Riekmann","Riepl","Riermeier","Riester","Riethmüller","Rietmüller","Rietscher","Ringel","Ringer","Rink","Ripken","Ritosek","Ritschel","Ritter","Rittweg","Ritz","Roba","Rockmeier","Rodehau","Rodowski","Roecker","Roggatz","Rohländer","Rohrer","Rokossa","Roleder","Roloff","Roos","Rosbach","Roschinsky","Rose","Rosenauer","Rosenbauer","Rosenthal","Rosksch","Rossberg","Rossler","Roth","Rother","Ruch","Ruckdeschel","Rumpf","Rupprecht","Ruth","Ryjikh","Ryzih","Rädler","Räntsch","Rödiger","Röse","Röttger","Rücker","Rüdiger","Rüter","Sachse","Sack","Saflanis","Sagafe","Sagonas","Sahner","Saile","Sailer","Salow","Salzer","Salzmann","Sammert","Sander","Sarvari","Sattelmaier","Sauer","Sauerland","Saumweber","Savoia","Scc","Schacht","Schaefer","Schaffarzik","Schahbasian","Scharf","Schedler","Scheer","Schelk","Schellenbeck","Schembera","Schenk","Scherbarth","Scherer","Schersing","Scherz","Scheurer","Scheuring","Scheytt","Schielke","Schieskow","Schildhauer","Schilling","Schima","Schimmer","Schindzielorz","Schirmer","Schirrmeister","Schlachter","Schlangen","Schlawitz","Schlechtweg","Schley","Schlicht","Schlitzer","Schmalzle","Schmid","Schmidt","Schmidtchen","Schmitt","Schmitz","Schmuhl","Schneider","Schnelting","Schnieder","Schniedermeier","Schnürer","Schoberg","Scholz","Schonberg","Schondelmaier","Schorr","Schott","Schottmann","Schouren","Schrader","Schramm","Schreck","Schreiber","Schreiner","Schreiter","Schroder","Schröder","Schuermann","Schuff","Schuhaj","Schuldt","Schult","Schulte","Schultz","Schultze","Schulz","Schulze","Schumacher","Schumann","Schupp","Schuri","Schuster","Schwab","Schwalm","Schwanbeck","Schwandke","Schwanitz","Schwarthoff","Schwartz","Schwarz","Schwarzer","Schwarzkopf","Schwarzmeier","Schwatlo","Schweisfurth","Schwennen","Schwerdtner","Schwidde","Schwirkschlies","Schwuchow","Schäfer","Schäffel","Schäffer","Schäning","Schöckel","Schönball","Schönbeck","Schönberg","Schönebeck","Schönenberger","Schönfeld","Schönherr","Schönlebe","Schötz","Schüler","Schüppel","Schütz","Schütze","Seeger","Seelig","Sehls","Seibold","Seidel","Seiders","Seigel","Seiler","Seitz","Semisch","Senkel","Sewald","Siebel","Siebert","Siegling","Sielemann","Siemon","Siener","Sievers","Siewert","Sihler","Sillah","Simon","Sinnhuber","Sischka","Skibicki","Sladek","Slotta","Smieja","Soboll","Sokolowski","Soller","Sollner","Sommer","Somssich","Sonn","Sonnabend","Spahn","Spank","Spelmeyer","Spiegelburg","Spielvogel","Spinner","Spitzmüller","Splinter","Sporrer","Sprenger","Spöttel","Stahl","Stang","Stanger","Stauss","Steding","Steffen","Steffny","Steidl","Steigauf","Stein","Steinecke","Steinert","Steinkamp","Steinmetz","Stelkens","Stengel","Stengl","Stenzel","Stepanov","Stephan","Stern","Steuk","Stief","Stifel","Stoll","Stolle","Stolz","Storl","Storp","Stoutjesdijk","Stratmann","Straub","Strausa","Streck","Streese","Strege","Streit","Streller","Strieder","Striezel","Strogies","Strohschank","Strunz","Strutz","Stube","Stöckert","Stöppler","Stöwer","Stürmer","Suffa","Sujew","Sussmann","Suthe","Sutschet","Swillims","Szendrei","Sören","Sürth","Tafelmeier","Tang","Tasche","Taufratshofer","Tegethof","Teichmann","Tepper","Terheiden","Terlecki","Teufel","Theele","Thieke","Thimm","Thiomas","Thomas","Thriene","Thränhardt","Thust","Thyssen","Thöne","Tidow","Tiedtke","Tietze","Tilgner","Tillack","Timmermann","Tischler","Tischmann","Tittman","Tivontschik","Tonat","Tonn","Trampeli","Trauth","Trautmann","Travan","Treff","Tremmel","Tress","Tsamonikian","Tschiers","Tschirch","Tuch","Tucholke","Tudow","Tuschmo","Tächl","Többen","Töpfer","Uhlemann","Uhlig","Uhrig","Uibel","Uliczka","Ullmann","Ullrich","Umbach","Umlauft","Umminger","Unger","Unterpaintner","Urban","Urbaniak","Urbansky","Urhig","Vahlensieck","Van","Vangermain","Vater","Venghaus","Verniest","Verzi","Vey","Viellehner","Vieweg","Voelkel","Vogel","Vogelgsang","Vogt","Voigt","Vokuhl","Volk","Volker","Volkmann","Von","Vona","Vontein","Wachenbrunner","Wachtel","Wagner","Waibel","Wakan","Waldmann","Wallner","Wallstab","Walter","Walther","Walton","Walz","Wanner","Wartenberg","Waschbüsch","Wassilew","Wassiluk","Weber","Wehrsen","Weidlich","Weidner","Weigel","Weight","Weiler","Weimer","Weis","Weiss","Weller","Welsch","Welz","Welzel","Weniger","Wenk","Werle","Werner","Werrmann","Wessel","Wessinghage","Weyel","Wezel","Wichmann","Wickert","Wiebe","Wiechmann","Wiegelmann","Wierig","Wiese","Wieser","Wilhelm","Wilky","Will","Willwacher","Wilts","Wimmer","Winkelmann","Winkler","Winter","Wischek","Wischer","Wissing","Wittich","Wittl","Wolf","Wolfarth","Wolff","Wollenberg","Wollmann","Woytkowska","Wujak","Wurm","Wyludda","Wölpert","Wöschler","Wühn","Wünsche","Zach","Zaczkiewicz","Zahn","Zaituc","Zandt","Zanner","Zapletal","Zauber","Zeidler","Zekl","Zender","Zeuch","Zeyen","Zeyhle","Ziegler","Zimanyi","Zimmer","Zimmermann","Zinser","Zintl","Zipp","Zipse","Zschunke","Zuber","Zwiener","Zümsande","Östringer","Überacker"]})),tz=c((()=>{Ui=["#{prefix} #{first_name} #{last_name}","#{first_name} #{nobility_title_prefix} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}"]})),oz=c((()=>{Wi=["zu","von","vom","von der"]})),sz=c((()=>{Zi=["Dr.","Prof. Dr."]})),lz=c((()=>{iz(),rz(),tz(),oz(),sz(),qi={first_name:Fi,last_name:Ji,name:Ui,nobility_title_prefix:Wi,prefix:Zi}})),uz=c((()=>{Qi=["01 #######","01#######","+43-1-#######","+431#######","0#### ####","0#########","+43-####-####","+43 ########"]})),cz=c((()=>{uz(),Yi={formats:Qi}})),dz=c((()=>{WR(),qR(),XR(),nz(),lz(),cz(),$i={title:"German (Austria)",address:xi,cell_phone:Ki,company:Ii,internet:Hi,name:qi,phone_number:Yi}})),hz=c((()=>{Xi=["#{city_name}"]})),pz=c((()=>{er=["Aarau","Adliswil","Allschwil","Arbon","Baar","Baden","Basel","Bellinzona","Bern","Biel/Bienne","Binningen","Brig-Glis","Bulle","Burgdorf","Bülach","Carouge","Cham","Chur","Dietikon","Dübendorf","Einsiedeln","Emmen","Frauenfeld","Freiburg","Freienbach","Genf","Glarus Nord","Gossau","Grenchen","Herisau","Horgen","Horw","Illnau-Effretikon","Kloten","Kreuzlingen","Kriens","Köniz","Küsnacht","La Chaux-de-Fonds","Lancy","Langenthal","Lausanne","Liestal","Locarno","Lugano","Luzern","Lyss","Martigny","Meilen","Mendrisio","Meyrin","Monthey","Montreux","Morges","Muri bei Bern","Muttenz","Neuenburg","Nyon","Oftringen","Olten","Onex","Opfikon","Ostermundigen","Pratteln","Pully","Rapperswil-Jona","Regensdorf","Reinach","Renens","Rheinfelden","Richterswil","Riehen","Schaffhausen","Schlieren","Schwyz","Siders","Sitten","Solothurn","St. Gallen","Steffisburg","Stäfa","Thalwil","Thun","Thônex","Uster","Val-de-Ruz","Vernier","Versoix","Vevey","Volketswil","Wallisellen","Wettingen","Wetzikon","Wil","Winterthur","Wohlen","Wädenswil","Yverdon-les-Bains","Zug","Zürich"]})),mz=c((()=>{ar=["CH","CH","CH","DE","AT","US","LI","US","HK","VN"]})),fz=c((()=>{nr=["Schweiz"]})),vz=c((()=>{ir=["1###","2###","3###","4###","5###","6###","7###","8###","9###"]})),gz=c((()=>{rr=["Aargau","Appenzell Ausserrhoden","Appenzell Innerrhoden","Basel-Land","Basel-Stadt","Bern","Freiburg","Genf","Glarus","Graubünden","Jura","Luzern","Neuenburg","Nidwalden","Obwalden","St. Gallen","Schaffhausen","Schwyz","Solothurn","Tessin","Thurgau","Uri","Waadt","Wallis","Zug","Zürich"]})),kz=c((()=>{tr=["AG","AR","AI","BL","BS","BE","FR","GE","GL","GR","JU","LU","NE","NW","OW","SG","SH","SZ","SO","TI","TG","UR","VD","VS","ZG","ZH"]})),yz=c((()=>{hz(),pz(),mz(),fz(),vz(),gz(),kz(),or={city:Xi,city_name:er,country_code:ar,default_country:nr,postcode:ir,state:rr,state_abbr:tr}})),bz=c((()=>{sr=["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} und #{Name.last_name}"]})),Sz=c((()=>{lr=["AG","GmbH","und Söhne","und Partner","& Co.","Gruppe","LLC","Inc."]})),Az=c((()=>{bz(),Sz(),ur={name:sr,suffix:lr}})),Mz=c((()=>{cr=["com","net","biz","ch","de","li","at","ch","ch"]})),Tz=c((()=>{Mz(),dr={domain_suffix:cr}})),_z=c((()=>{hr=["Adolf","Adrian","Agnes","Alain","Albert","Alberto","Aldo","Alex","Alexander","Alexandre","Alfons","Alfred","Alice","Alois","André","Andrea","Andreas","Angela","Angelo","Anita","Anna","Anne","Anne-Marie","Annemarie","Antoine","Anton","Antonio","Armin","Arnold","Arthur","Astrid","Barbara","Beat","Beatrice","Beatrix","Bernadette","Bernard","Bernhard","Bettina","Brigitta","Brigitte","Bruno","Carlo","Carmen","Caroline","Catherine","Chantal","Charles","Charlotte","Christa","Christian","Christiane","Christina","Christine","Christoph","Christophe","Claire","Claude","Claudia","Claudine","Claudio","Corinne","Cornelia","Daniel","Daniela","Daniele","Danielle","David","Denis","Denise","Didier","Dieter","Dominik","Dominique","Dora","Doris","Edgar","Edith","Eduard","Edwin","Eliane","Elisabeth","Elsa","Elsbeth","Emil","Enrico","Eric","Erica","Erich","Erika","Ernst","Erwin","Esther","Eugen","Eva","Eveline","Evelyne","Fabienne","Felix","Ferdinand","Florence","Francesco","Francis","Franco","François","Françoise","Frank","Franz","Franziska","Frédéric","Fredy","Fridolin","Friedrich","Fritz","Gabriel","Gabriela","Gabrielle","Georg","Georges","Gérald","Gérard","Gerhard","Gertrud","Gianni","Gilbert","Giorgio","Giovanni","Gisela","Giuseppe","Gottfried","Guido","Guy","Hanna","Hans","Hans-Peter","Hans-Rudolf","Hans-Ulrich","Hansjörg","Hanspeter","Hansruedi","Hansueli","Harry","Heidi","Heinrich","Heinz","Helen","Helena","Helene","Helmut","Henri","Herbert","Hermann","Hildegard","Hubert","Hugo","Ingrid","Irene","Iris","Isabelle","Jacqueline","Jacques","Jakob","Jan","Janine","Jean","Jean-Claude","Jean-Daniel","Jean-François","Jean-Jacques","Jean-Louis","Jean-Luc","Jean-Marc","Jean-Marie","Jean-Paul","Jean-Pierre","Johann","Johanna","Johannes","John","Jolanda","Jörg","Josef","Joseph","Josette","Josiane","Judith","Julia","Jürg","Karin","Karl","Katharina","Klaus","Konrad","Kurt","Laura","Laurence","Laurent","Leo","Liliane","Liselotte","Louis","Luca","Luigi","Lukas","Lydia","Madeleine","Maja","Manfred","Manuel","Manuela","Marc","Marcel","Marco","Margrit","Margrith","Maria","Marianne","Mario","Marion","Markus","Marlène","Marlies","Marlis","Martha","Martin","Martina","Martine","Massimo","Matthias","Maurice","Max","Maya","Michael","Michel","Michele","Micheline","Monica","Monika","Monique","Myriam","Nadia","Nadja","Nathalie","Nelly","Nicolas","Nicole","Niklaus","Norbert","Olivier","Oskar","Otto","Paola","Paolo","Pascal","Patricia","Patrick","Paul","Peter","Petra","Philipp","Philippe","Pia","Pierre","Pierre-Alain","Pierre-André","Pius","Priska","Rainer","Raymond","Regina","Regula","Reinhard","Remo","Renata","Renate","Renato","Rene","René","Reto","Richard","Rita","Robert","Roberto","Roger","Roland","Rolf","Roman","Rosa","Rosemarie","Rosmarie","Rudolf","Ruedi","Ruth","Sabine","Samuel","Sandra","Sandro","Serge","Silvia","Silvio","Simon","Simone","Sonia","Sonja","Stefan","Stephan","Stéphane","Stéphanie","Susanna","Susanne","Suzanne","Sylvia","Sylvie","Theo","Theodor","Therese","Thomas","Toni","Ueli","Ulrich","Urs","Ursula","Verena","Véronique","Victor","Viktor","Vreni","Walter","Werner","Willi","Willy","Wolfgang","Yolande","Yves","Yvette","Yvonne"]})),wz=c((()=>{pr=["Ackermann","Aebi","Albrecht","Ammann","Amrein","Arnold","Bachmann","Bader","Bär","Bättig","Bauer","Baumann","Baumgartner","Baur","Beck","Benz","Berger","Bernasconi","Betschart","Bianchi","Bieri","Blaser","Blum","Bolliger","Bosshard","Braun","Brun","Brunner","Bucher","Bühler","Bühlmann","Burri","Christen","Egger","Egli","Eichenberger","Erni","Ernst","Eugster","Fankhauser","Favre","Fehr","Felber","Felder","Ferrari","Fischer","Flückiger","Forster","Frei","Frey","Frick","Friedli","Fuchs","Furrer","Gasser","Geiger","Gerber","Gfeller","Giger","Gloor","Graf","Grob","Gross","Gut","Haas","Häfliger","Hafner","Hartmann","Hasler","Hauser","Hermann","Herzog","Hess","Hirt","Hodel","Hofer","Hoffmann","Hofmann","Hofstetter","Hotz","Huber","Hug","Hunziker","Hürlimann","Imhof","Isler","Iten","Jäggi","Jenni","Jost","Kägi","Kaiser","Kälin","Käser","Kaufmann","Keller","Kern","Kessler","Knecht","Koch","Kohler","Kuhn","Küng","Kunz","Lang","Lanz","Lehmann","Leu","Leunberger","Lüscher","Lustenberger","Lüthi","Lutz","Mäder","Maier","Marti","Martin","Maurer","Mayer","Meier","Meili","Meister","Merz","Mettler","Meyer","Michel","Moser","Müller","Näf","Ott","Peter","Pfister","Portmann","Probst","Rey","Ritter","Roos","Roth","Rüegg","Schäfer","Schaller","Schär","Schärer","Schaub","Scheidegger","Schenk","Scherrer","Schlatter","Schmid","Schmidt","Schneider","Schnyder","Schoch","Schuler","Schumacher","Schürch","Schwab","Schwarz","Schweizer","Seiler","Senn","Sidler","Siegrist","Sigrist","Spörri","Stadelmann","Stalder","Staub","Stauffer","Steffen","Steiger","Steiner","Steinmann","Stettler","Stocker","Stöckli","Stucki","Studer","Stutz","Suter","Sutter","Tanner","Thommen","Tobler","Vogel","Vogt","Wagner","Walder","Walter","Weber","Wegmann","Wehrli","Weibel","Wenger","Wettstein","Widmer","Winkler","Wirth","Wirz","Wolf","Wüthrich","Wyss","Zbinden","Zehnder","Ziegler","Zimmermann","Zingg","Zollinger","Zürcher"]})),jz=c((()=>{mr=["#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}"]})),Ez=c((()=>{fr=["Hr.","Fr.","Dr."]})),Nz=c((()=>{_z(),wz(),jz(),Ez(),vr={first_name:hr,last_name:pr,name:mr,prefix:fr}})),Bz=c((()=>{gr=["0800 ### ###","0800 ## ## ##","0## ### ## ##","0## ### ## ##","+41 ## ### ## ##","0900 ### ###","076 ### ## ##","+4178 ### ## ##","0041 79 ### ## ##"]})),Pz=c((()=>{Bz(),kr={formats:gr}})),Lz=c((()=>{yz(),Az(),Tz(),Nz(),Pz(),yr={title:"German (Switzerland)",address:or,company:ur,internet:dr,name:vr,phone_number:kr}})),Dz=c((()=>{br=["Αθήνα","Θεσσαλονίκη","Πειραιάς","Πάτρα","Ηράκλειο","Λάρισα","Βόλος","Ιωάννινα","Τρίκαλα","Σέρρες","Χαλκίδα","Αλεξανδρούπολη","Ξάνθη","Κατερίνη","Αγρίνιο","Καλαμάτα","Καβάλα","Χανιά","Λαμία","Κομοτηνή","Ρόδος","Δράμα","Βέροια","Κοζάνη","Καρδίτσα","Ρέθυμνο","Πτολεμαΐδα","Τρίπολη","Κόρινθος","Γέρακας","Γιαννιτσά","Μυτιλήνη","Χίος","Σαλαμίνα","Ελευσίνα","Κέρκυρα","Πύργος","Μέγαρα","Κιλκίς","Θήβα","Άργος","Άρτα","Άρτεμη","Λιβαδειά","Ωραιόκαστρο","Αίγιο","Κως","Κορωπί","Πρέβεζα","Νάουσα","Ορεστιάδα","Έδεσσα","Φλώρινα","Αμαλιάδα","Παλλήνη","Σπάρτη","Θέρμη","Βάρη","Νέα","Αλεξάνδρεια","Παιανία","Καλύβια","Ναύπλιο","Ναύπακτος","Καστοριά","Γρεβενά","Νέα","Μεσολόγγι","Γάζι","Ιεράπετρα","Κάλυμνος","Ραφήνα","Λουτράκι","Άγιος","Ερμούπολη","Ιαλυσός","Τύρναβος","Γλυκά Νερά"]})),xz=c((()=>{Sr=["Ελλάδα"]})),Cz=c((()=>{Dz(),xz(),Ar={county:br,default_country:Sr}})),Kz=c((()=>{Mr=["#{Name.name}","#{Company.name}"]})),Rz=c((()=>{Tr=["ΤΡΑΠΕΖΑ ΤΗΣ ΕΛΛΑΔΟΣ","ΕΜΠΟΡΙΚΗ ΤΡΑΠΕΖΑ ΤΗΣ ΕΛΛΑΔΟΣ Α.Ε.","Η ΕΘΝΙΚΗ (ΕΛΛ. ΕΤΑΙΡΙΑ ΓΕΝ. ΑΣΦΑΛΕΙΩΝ)","ΑΙΟΛΙΚΗ Α.Ε.Ε.Χ.","ΚΑΖΙΝΟ ΠΟΡΤΟ ΚΑΡΡΑΣ Α.Ε.","ΛΑΝΑΚΑΜ Α.Ε.","ΠΛΑΣΤΙΚΑ ΘΡΑΚΗΣ Α.Β.Ε.Ε.","ΤΙΤΑΝ ΑΝΩΝΥΜΗ ΕΤΑΙΡΙΑ ΤΣΙΜΕΝΤΩΝ","S & B ΒΙΟΜΗΧΑΝΙΚΑ ΟΡΥΚΤΑ Α.Ε.","Α. ΚΑΛΠΙΝΗΣ - Ν.ΣΙΜΟΣ Α.Ε.Β.Ε.","Χ. ΡΟΚΑΣ Α.Β.Ε.Ε.","ELBISCO A.E ΣΥΜΜΕΤΟΧΩΝ","ΚΥΛΙΝΔΡΟΜΥΛΟΙ Κ. ΣΑΡΑΝΤΟΠΟΥΛΟΣ Α.Ε.","ΑΛΥΣΙΔΑ Α.Β.Ε.Ε.","ΕΜΠΟΡΙΚΟΣ ΔΕΣΜΟΣ Α.Ε.Β.Ε","ΙΠΠΟΤΟΥΡ Α.Ε.","ΣΠ. ΤΑΣΟΓΛΟΥ Α.Ε.- DELONGHI","ΕΚΤΕΡ Α.Ε.","ΙΜΠΕΡΙΟ Α.Ε.","ΡΑΔΙΟ Α. ΚΟΡΑΣΙΔΗΣ Ε.Ε.Α.Ε.","ΜΙΝΩΙΚΕΣ ΓΡΑΜΜΕΣ","MEVACO ΜΕΤΑΛΛΟΥΡΓΙΚΗ Α.Β.Ε.Ε.","Ε.ΥΔ.Α.Π. Α.Ε.","ΒΟΓΙΑΤΖΟΓΛΟΥ SYSTEMS Α.Ε.","ΑΓΡΟΤΙΚΗ ΤΡΑΠΕΖΑ ΤΗΣ ΕΛΛΑΔΟΣ Α.Ε.","ΠΡΟΜΟΤΑ ΕΛΛΑΣ Α.Ε","COMPUCON ΕΦΑΡΜΟΓΕΣ ΥΠΟΛΟΓΙΣΤΩΝ ΑΒΕΕ","CENTRIC ΠΟΛΥΜΕΣΑ ΑΝΩΝΥΜΗ ΕΤΑΙΡΕΙΑ","FASHION BOX ΕΛΛΑΣ ΑΕ","Ι. ΚΛΟΥΚΙΝΑΣ - Ι. ΛΑΠΠΑΣ ΤΕΧΝΙΚΗ ΚΑΙ ΕΜΠΟΡΙΚΗ Α.Ε.","ΕΛΙΝΟΙΛ ΕΛΛΗΝΙΚΗ ΕΤΑΙΡΙΑ ΠΕΤΡΕΛΑΙΩΝ ΑΝΩΝΥΜΗ ΕΤΑΙΡΙΑ","ΔΕΛΤΑ ΜΗΧΑΝΟΛΟΓΙΚΟΣ ΕΞΟΠΛΙΣΜΟΣ & ΟΛΟΚΛΗΡΩΜΕΝΑ ΕΡΓΑ ΑΒΕΤΕ"]})),zz=c((()=>{_r=["0.#.#","0.##","#.##","#.#","#.#.#"]})),Oz=c((()=>{Kz(),Rz(),zz(),wr={author:Mr,name:Tr,version:_r}})),Iz=c((()=>{jr=["2011-10-12","2012-11-12","2015-11-11","2013-9-12"]})),Vz=c((()=>{Er=["1234-2121-1221-1211","1212-1221-1121-1234","1211-1221-1234-2201","1228-1221-1221-1431"]})),Gz=c((()=>{Nr=["visa","mastercard","americanexpress","discover"]})),Hz=c((()=>{Iz(),Vz(),Gz(),Br={credit_card_expiry_dates:jr,credit_card_numbers:Er,credit_card_types:Nr}})),Fz=c((()=>{Pr=["697## ######","698## ######","699## ######","692## ######"]})),Jz=c((()=>{Fz(),Lr={formats:Pr}})),Uz=c((()=>{Dr=["κοκκικο","πράσινο","μπλε","κίτρινο","μωβ","λευκό","μαύρο","πορτοκαλί","ροζ","γκρί","βιολετί","τρικουάζ","λαδί","χρυσό","φουξια","κυανό","ασημί"]})),Wz=c((()=>{xr=["Βιβλία","Ταινίες","Μουσική","Παιχνίδια","Ηλεκτρονικές Συσκευές","Υπολογιστές","Σπίτι","Κήπος","Εργαλεία","Grocery","Υγεία","Ομορφιά","Παιχνίδια","Παιδί","Μωρό","Ρουχισμός","Παπούτσια","Κοσμήματα","Sports","Εξοχή","Αυτοκίνητο","Βιομηχανικά"]})),Zz=c((()=>{Cr={adjective:["Μικρό","Εργονομικό","Αγροτικό","Απίστευτο","Φανταστικό","Πρακτικό","Κομψό","Χειροποίητα","Χειροποίητο","Άδεια"],material:["Ξύλινο","Πλαστικό","Μέταλο","Φρέσκο","Κατεψυγμένο"],product:["Καρέκλα","Αυτοκίνητο","Υπολογιστής","Πληκτρολόγιο","Ποντίκι","Ποδήλατο","Μπάλα","Γάντια","Παντελόνι","Πουκάμισο","Τραπέζι","Παπούτσια","Καπέλο","Πετσέτες","Σαπούνι","Τόνος","Κοτόπουλο","Ωάρι","Τυρί","Pizza","Σαλάτα","Λουκάνικα"]}})),qz=c((()=>{Uz(),Wz(),Zz(),Kr={color:Dr,department:xr,product_name:Cr}})),Qz=c((()=>{Rr=["Για προχωρημένους","Αυτοματοποιημένη","Ισορροπημένη","Συγκεντρωτική","Κλωνοποιημένα","Συμβατές","Παραμετρικές","Προσαρμόσιμα","Αποκεντρωμένη","Ψηφιακές","Κατανεμημένα","Διαφορετικές","Ενισχυμένη","Εργονομία","Διευρυμένη","Επέκταση","Ειδικός","Πρώτης γραμμής","Πλήρως παραμετροποιήσιμο","Θεμελιώδη","Λαϊκά","Οριζόντια","Καινοτόμες","ολοκληρωμένη","Έξυπνο","Αντιστροφή","Υπεύθυνη για τη διαχείριση","Υποχρεωτικά","Πολυμερής","Πολυεπίπεδη","Πολυεπίπεδη","Δικτυωμένες","Ανοιχτή πηγή","Λειτουργικής","Βελτιστοποιημένη","Προαιρετικό","Βιολογικά","Οργανωμένες","Μένοντας","Επίμονη","Σταδιακή","Προληπτική","Προληπτική","Ριζική","Προοδευτική","Αντιδραστική","Ευθυγραμμισμένο","Μειωμένη","Αντίστροφης μηχανικής","Ανθεκτική","Αδιάλειπτη","Ασφαλής","Κοινόχρηστο","Βελτιωμένη","Εναλλαγή","Σύγχρονη","Αναβαθμίσιμα","Χρηστοκεντρικών","Φιλική προς το χρήστη","Ευέλικτο","Εικονική","Οραματιστής"]})),Yz=c((()=>{zr=["Προστιθέμενη αξία","Κάθετη","Προληπτική","Εύρωστο","Επαναστατικό","Κλιμακούμενες","Προβάδισμα","Καινοτόμες","Διαισθητική","Στρατηγικών","E-business","Κρίσιμης σημασίας","Κολλάει","Ένα προς ένα","24/7","Παγκόσμια","B2B","B2C","Κοκκώδη","Τριβές","Εικονική","Ιογενείς","Δυναμική","24/365","Δολοφόνος","Μαγνητικά","Διαδραστικό","Σέξι","Πραγματικός χρόνος","Αποτελεσματικό","Κατανεμημένες","Επεκτάσιμο","Κλειδί στο χέρι","Παγκόσμιας κλάσης","Ανοιχτή πηγή","Συνεργιστική","Επιχείρηση","Ολοκληρωμένη","Εύστοχος","Ασύρματο","Διαφανής","Επόμενη γενιά","Αιχμής","Επίκεντρο τον χρήστη","Οραματιστής","Προσαρμοσμένη","Πανταχού παρούσα","Plug-and-play","Συνεργατική","Συναρπαστικό","Ολιστική","Πλούσια"]})),$z=c((()=>{Or=["συνέργειες","παραδείγματα","αγορές","συνεργασίες","υποδομές","πλατφόρμες","πρωτοβουλίες","κανάλια","μάτια","κοινότητες","λύσεις","δράση-αντικείμενα","πύλες","θέσεις","τεχνολογίες","περιεχόμενο","αλυσίδες προμηθειών","σύγκλιση","σχέσεις","αρχιτεκτονικές","διασυνδέσεις","e-αγορές","ηλεκτρονικό εμπόριο","συστήματα","μοντέλα","παραδοτέα","χρήστες","σχήματα","δίκτυα","εφαρμογές","μετρήσεις","e-business","λειτουργίες","εμπειρίες","διαδικτυακές υπηρεσίες","μεθοδολογίες"]})),Xz=c((()=>{Ir=["χρησιμοποιούν","ενσωμάτωση","βελτιστοποιήσουν","εξελιχθεί","μεταμορφώσει","αγκαλιάζουν","επιτρέψει","ενορχηστρώσει","επανεφεύρουμε","ενισχύσουν","διευκολύνουν","αδράξουν","συνεργούν","μεγαλώνουν","συνθέσει","παραδώσει","αναλάβουν","επιταχύνει","απεικονίσει","επαναπροσδιορίσουν","καινοτομία","απελευθερώσουν","επεκτείνει","δημιουργούν","εκμεταλλεύονται","επαναλάβει","καλλιεργούν","επαναπροσδιορίσει"]})),eO=c((()=>{Vr=["24 ώρες το 24ώρο","24/7","3η γενιά","4η γενικά","5η γενιά","6η γενιά","asymmetric","ασύγχρονο","συνεχής","αφιερωμένο","διαδακτικό","διακριτό","δυναμικό","παγκόσμιο","υβριδικό","δριαδραστικό","τοπικό","πολυμεσικό","διεθνές","επόμενης γενιάς","αντικειμενοστραφή","ιδανικό","πραγματικού χρόνου","δευτερεύων","σταθερό","στατικό","προστιθέμενης αξίας"]})),aO=c((()=>{Gr=["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} and #{Name.last_name}"]})),nO=c((()=>{Hr=["ικανότητα","πρόσβαση","αλγόριθμος","αναλυτής","εφαρμογή","προσέγγιση","αρχιτεκτονική","αρχείο","τεχνητή νοημοσύνη","χωρητικότητα","πρόκληση","συνεργασία","περιπλοκότητα","πυρήνας","βάση δεδομένων","ορισμός","συνάρτηση","Διεπαφή Χρήστη","υλικό","υλοποίηση","εγκατάσταση","εγχειρίδιο χρήστη","διεπαφή","υπηρεσίες internet","γνωσιακή βάση","τοπικό δίκτυο","μετρικές","μεθοδολογία","μοντέλο","ανοιχτή αρχιτεκτονική","ενορχήστρωση","προϊόν","παραγωγικότητα","πρωτόκολο","ασφαλής γραμμή","λογισμικό","στρατηγική","επιτυχία","υποστήρυξη"]})),iO=c((()=>{Fr=["Ε.Π.Ε.","Α.Ε.","και Υιοί","Όμιλος"]})),rO=c((()=>{Qz(),Yz(),$z(),Xz(),eO(),aO(),nO(),iO(),Jr={adjective:Rr,bs_adjective:zr,bs_noun:Or,bs_verb:Ir,descriptor:Vr,name:Gr,noun:Hr,suffix:Fr}})),tO=c((()=>{Ur=["/34##-######-####L/","/37##-######-####L/"]})),oO=c((()=>{Wr=["/6011-####-####-###L/","/65##-####-####-###L/","/64[4-9]#-####-####-###L/","/6011-62##-####-####-###L/","/65##-62##-####-####-###L/","/64[4-9]#-62##-####-####-###L/"]})),sO=c((()=>{Zr=["/50#{9,16}L/","/5[6-8]#{9,16}L/","/56##{9,16}L/"]})),lO=c((()=>{qr=["/5[1-5]##-####-####-###L/","/6771-89##-####-###L/"]})),uO=c((()=>{Qr=["/4###########L/","/4###-####-####-###L/"]})),cO=c((()=>{tO(),oO(),sO(),lO(),uO(),Yr={american_express:Ur,discover:Wr,maestro:Zr,mastercard:qr,visa:Qr}})),dO=c((()=>{$r=["Καταθετικός","Μισθοδοσίας","Δανειακός"]})),hO=c((()=>{Xr={"Ευρώ":{code:"EUR",symbol:"€"}}})),pO=c((()=>{et=["κατάθεση","ανάληψη","πληρωμή","τιμολόγιο"]})),mO=c((()=>{dO(),hO(),pO(),at={account_type:$r,currency:Xr,transaction_type:et}})),fO=c((()=>{nt=["TCP","HTTP","SDD","RAM","GB","CSS","SSL","AGP","SQL","FTP","PCI","AI","ADP","RSS","XML","EXE","COM","HDD","THX","SMTP","SMS","USB","PNG","SAS","IB","SCSI","JSON","XSS","JBOD"]})),vO=c((()=>{it=["οδηγός","πρωτογενής","ψηφιακή","ανοιχτή πηγή","εικονική","ασύρματο","1080p","οπτική","κινητό"]})),gO=c((()=>{rt=["οδηγός","πρωτόκολο","ταχύτητα","panel","μικρότσιπ","πρόγραμμα","πόρτα","κάρτα","διεπαφή","σύστημα","σένσορας","ασφάλεια","σκληρός δίσκος","feed","οθόνη","εφαρμογή","δίαυλος","διάγραμμα","πυκνωτής","πίνακας"]})),kO=c((()=>{tt=["back up","bypass","hack","προσπέραση","συμπίεση","αντιγραφή","περιήγηση","σύνδεση","υπολογισμός","είσοδος","μεταφορά","πρόγραμμα","επανεκκίνηση","προσπέλαση"]})),yO=c((()=>{fO(),vO(),gO(),kO(),ot={abbreviation:nt,adjective:it,noun:rt,verb:tt}})),bO=c((()=>{st=["gr","com","biz","info","name"]})),SO=c((()=>{lt=["gmail.com","yahoo.com","hotmail.com"]})),AO=c((()=>{bO(),SO(),ut={domain_suffix:st,free_email:lt}})),MO=c((()=>{ct=["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]})),TO=c((()=>{MO(),dt={words:ct}})),_O=c((()=>{ht=["Γεώργιος","Ιωάννης","Κώστας","Δημήτρης","Νικόλαος","Παναγιώτης","Βασίλης","Χρήστος","Αθανάσιος","Μιχαήλ","Ευάγγελος","Σπύρος","Αντώνης","Αναστάσιος","Θεόδωρος","Ανδρέας","Χαράλαμπος","Αλέξανδρος","Εμμανουήλ","Ηλίας","Σταύρος","Πέτρος","Σωτήριος","Στυλιανός","Ελευθέριος","Απόστολος","Φώτιος","Διονύσιος","Γρηγόριος","Άγγελος","Στέφανος","Ευστάθιος","Παύλος","Παρασκευάς","Αριστείδης","Λεωνίδας"]})),wO=c((()=>{pt=["Αβραμίδης","Αγγελίδης","Αγγελίδου","Αγγελόπουλος","Αγγελοπούλου","Αθανασιάδης","Αθανασίου","Ακρίδας","Αλαβάνος","Αλαφούζος","Αλεβιζόπουλος","Αλεβίζος","Αλεξάκης","Αλεξίου","Αλεξόπουλος","Αλεξανδρίδης","Αλεξάνδρου","Αλεξιάδης","Αλιβιζάτος","Αναγνωστάκης","Αναγνώστου","Αναστασιάδης","Ανδρεάδης","Ανδρέου","Αντωνιάδης","Αντωνόπουλος","Αντωνοπούλου","Αξιώτης","Αποστόλου","Αποστολίδης","Αρβανίτης","Αργυριάδης","Ασπάσιος","Αυγερινός (επώνυμο)","Βάμβας","Βαμβακάς","Βαρνακιώτης","Βαρουξής","Βασιλόπουλος","Βασιλείου","Βασιλειάδης","Βασιλικός","Βενιζέλος","Βέργας","Βικελίδης","Βιλαέτης","Βιτάλη","Βιτάλης","Βλαβιανός","Βλαστός","Βλαχόπουλος","Βούλγαρης","Βονόρτας","Βουγιουκλάκης","Βουρδουμπάς","Βυζάντιος","Γαλάνη","Γαλάνης","Γεννάδιος","Γερμανός","Γερμανού","Γεωργίου","Γεωργιάδης","Γιάγκος","Γιαννόπουλος","Γιαννακόπουλος","Γιάνναρης","Γκόφας","Γλυκύς","Γούναρης","Γούσιος","Δάβης","Δαγκλής","Δαμασκηνός","Δασκαλόπουλος","Δασκαλοπούλου","Δελή","Δεσποτόπουλος","Δημαράς","Δημητρίου","Δημητρακόπουλος","Διαμαντόπουλος","Διδασκάλου","Δοξαράς","Δουμπιώτης","Δουρέντης","Δράκος","Δραγούμης","Δυοβουνιώτης","Ελευθερόπουλος","Ελευθεριάδης","Ελευθερίου","Ευταξίας","Ζάνος","Ζάππας","Ζάρκος","Ζάχος","Ζέρβας","Ζαΐμης","Ζαφειρόπουλος","Ζαχαρίου","Ζερβός","Ζυγομαλάς","Ζωγράφος","Ζωγράφου","Ηλιόπουλος","Θεοδοσίου","Θεοδωρίδης","Θεοτόκης","Ιωαννίδης","Ιωάννου","Καζαντζής","Κακριδής","Καλάρης","Καλύβας","Καλαμογδάρτης","Καλλιγάς","Καλογιάννης","Κανακάρης-Ρούφος","Καραβίας","Καραμήτσος","Καραμανλής","Καρράς","Κασιδιάρης","Καψής","Κεδίκογλου","Κούνδουρος","Κολιάτσος","Κομνηνός","Κοντολέων","Κοντόσταυλος","Κόρακας","Κορνάρος","Κορομηλάς","Κορωναίος","Κοσμόπουλος","Κοτζιάς","Κουβέλης","Κουντουριώτης","Κουρμούλης","Κουταλιανός","Κρεστενίτης","Κυπραίος","Κωνσταντίνου","Κωνσταντόπουλος","Λόντος","Λύτρας","Λαγός","Λαιμός (επώνυμο)","Λαμέρας","Λαμπρόπουλος","Λειβαδάς","Λιάπης","Λιακόπουλος","Λούλης","Λούπης","Λύκος","Μάγκας","Μήτζου","Μαγγίνας","Μακρή","Μακρής","Μαλαξός","Μανιάκης","Μανωλάς","Μαρής","Μαρκόπουλος","Μαυρίδης","Μαυρογένης","Μελετόπουλος","Μέλιοι","Μεσσηνέζης","Μεταξάς","Μητσοτάκης","Μιαούλης","Μιχαηλίδης","Μιχαλολιάκος","Μοσχοβάκης","Μπότσαρης","Μπλέτσας","Μπουκουβαλαίοι","Νικολαΐδης","Νικολάκος","Οικονόμου","Ουζουνίδης","Πανταζής","Παπαγεωργίου","Παπάγος","Παπαδάκης","Παπαδόπουλος","Παπάζογλου","Παπακώστας","Παπακωνσταντίνου","Παπανδρέου","Παπανικολάου","Παπαντωνίου","Παπαστεφάνου","Παπαφιλίππου","Παπαϊωάννου","Παππάς"]})),jO=c((()=>{mt=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}"]})),EO=c((()=>{ft=["Κυρία","Δυς","Κύριος","Δόκτορ"]})),NO=c((()=>{vt={descriptor:["Senior","Εταιρείες","Πελάτης","Επενδυτής","Εσωτερικό","Κύριος"],level:["Λύσεις","Πρόγραμμα","Μάρκα","Ασφάλεια","Έρευνα","Μάρκετινγκ","Οδηγιών","Εφαρμογή","Ενσωμάτωση","Λειτουργικότητα","Τακτική","Ταυτότητα","Αγορές","Όμιλος","Εφαρμογές","Βελτιστοποίηση","Δραστηριότητες","Υποδομή","Intranet","Επικοινωνίες","Web","Branding","Ποιότητα","Διασφάλιση","Κινητικότητα","Λογαριασμοί","Δεδομένα","Δημιουργική","Διαμόρφωση","Μετρήσεις"],job:["Επόπτης","Συνεργάτης","Σύμβουλος","Διευθυντής","Μηχανικός","Ειδικός","Διευθυντής","Συντονιστή","Διαχειριστής","Αναλυτής","Designer","Τεχνικός","Προγραμματιστής","Παραγωγός","Σύμβουλος","Βοηθός","Συντονιστής","Εκπρόσωπος","Αντιπρόσωπος"]}})),BO=c((()=>{_O(),wO(),jO(),EO(),NO(),gt={first_name:ht,last_name:pt,name:mt,prefix:ft,title:vt}})),PO=c((()=>{kt=["2310# #####","2312# #####","2313# #####","222# ######","223# ######","227# ######","224# ######","226# ######","225# ######","232# ######","229# ######","228# ######","233# ######","234# ######","235# ######","237# ######","238# ######","239# ######","241# ######","242# ######","243# ######","244# ######","246# ######","249# ######","251# ######","252# ######","253# ######","254# ######","255# ######","259# ######","261# ######","262# ######","263# ######","264# ######","265# ######","266# ######","267# ######","268# ######","269# ######","271# ######","272# ######","273# ######","274# ######","275# ######","276# ######","279# ######","281# ######","282# ######","283# ######","284# ######","289# ######","0800 ######"]})),LO=c((()=>{PO(),yt={formats:kt}})),DO=c((()=>{bt=["μυρμήγκια","νυχτερίδες","αρκούδες","μέλισσες","πουλιά","βουβάλια","γάτες","κοτόπουλα","βοοειδή","σκυλιά","δελφίνια","πάπιες","ελέφαντες","ψάρια","αλεπούδες","βατράχια","χήνες","ερίφια","άλογα","καγκουρό","λιοντάρια","μαϊμούδες","κουκουβάγιες","βόδια","πιγκουίνοι","Άνθρωποι","γουρούνια","κουνέλια","πρόβατα","τίγρεις","φάλαινες","λύκοι","ζέβρες","κοράκια","μαύρεςγάτες","χίμαιρες","φαντάσματα","συνωμότες","δράκους","νάνοι","ξωτικά","enchanters","εξορκιστές","γιοι","εχθρούς","γίγαντες","στοιχειά","ξωτικά","χήνες","γρύπες","Νέμεσις","δράκοι","χρησμούς","προφήτες","αράχνες","πνεύματα","βαμπίρ","warlocks","Vixens","λυκάνθρωποι","μάγισσες","προσκυνητές","ζόμπι","Δρυίδες"]})),xO=c((()=>{St=["#{Address.state} #{creature}"]})),CO=c((()=>{DO(),xO(),At={creature:bt,name:St}})),KO=c((()=>{Cz(),Oz(),Hz(),Jz(),qz(),rO(),cO(),mO(),yO(),AO(),TO(),BO(),LO(),CO(),Mt={title:"Greek",separator:" & ",address:Ar,app:wr,business:Br,cell_phone:Lr,commerce:Kr,company:Jr,credit_card:Yr,finance:at,hacker:ot,internet:ut,lorem:dt,name:gt,phone_number:yt,team:At}})),RO=c((()=>{Tt=["#####","####","###"]})),zO=c((()=>{_t=["#{city_prefix} #{Name.first_name}#{city_suffix}","#{city_prefix} #{Name.first_name}","#{Name.first_name}#{city_suffix}","#{Name.last_name}#{city_suffix}"]})),OO=c((()=>{wt=["Abilene","Akron","Alafaya","Alameda","Albany","Albany","Albany","Albuquerque","Alexandria","Alexandria","Alhambra","Aliso Viejo","Allen","Allentown","Aloha","Alpharetta","Altadena","Altamonte Springs","Altoona","Amarillo","Ames","Anaheim","Anchorage","Anderson","Ankeny","Ann Arbor","Annandale","Antelope","Antioch","Apex","Apopka","Apple Valley","Apple Valley","Appleton","Arcadia","Arden-Arcade","Arecibo","Arlington","Arlington","Arlington","Arlington Heights","Arvada","Ashburn","Asheville","Aspen Hill","Atascocita","Athens-Clarke County","Atlanta","Attleboro","Auburn","Auburn","Augusta-Richmond County","Aurora","Aurora","Austin","Avondale","Azusa","Bakersfield","Baldwin Park","Baltimore","Barnstable Town","Bartlett","Bartlett","Baton Rouge","Battle Creek","Bayamon","Bayonne","Baytown","Beaumont","Beaumont","Beavercreek","Beaverton","Bedford","Bel Air South","Bell Gardens","Belleville","Bellevue","Bellevue","Bellflower","Bellingham","Bend","Bentonville","Berkeley","Berwyn","Bethesda","Bethlehem","Billings","Biloxi","Binghamton","Birmingham","Bismarck","Blacksburg","Blaine","Bloomington","Bloomington","Bloomington","Blue Springs","Boca Raton","Boise City","Bolingbrook","Bonita Springs","Bossier City","Boston","Bothell","Boulder","Bountiful","Bowie","Bowling Green","Boynton Beach","Bozeman","Bradenton","Brandon","Brentwood","Brentwood","Bridgeport","Bristol","Brockton","Broken Arrow","Brookhaven","Brookline","Brooklyn Park","Broomfield","Brownsville","Bryan","Buckeye","Buena Park","Buffalo","Buffalo Grove","Burbank","Burien","Burke","Burleson","Burlington","Burlington","Burnsville","Caguas","Caldwell","Camarillo","Cambridge","Camden","Canton","Cape Coral","Carlsbad","Carmel","Carmichael","Carolina","Carrollton","Carson","Carson City","Cary","Casa Grande","Casas Adobes","Casper","Castle Rock","Castro Valley","Catalina Foothills","Cathedral City","Catonsville","Cedar Hill","Cedar Park","Cedar Rapids","Centennial","Centreville","Ceres","Cerritos","Champaign","Chandler","Chapel Hill","Charleston","Charleston","Charlotte","Charlottesville","Chattanooga","Cheektowaga","Chesapeake","Chesterfield","Cheyenne","Chicago","Chico","Chicopee","Chino","Chino Hills","Chula Vista","Cicero","Cincinnati","Citrus Heights","Clarksville","Clearwater","Cleveland","Cleveland","Cleveland Heights","Clifton","Clovis","Coachella","Coconut Creek","Coeur d'Alene","College Station","Collierville","Colorado Springs","Colton","Columbia","Columbia","Columbia","Columbus","Columbus","Columbus","Commerce City","Compton","Concord","Concord","Concord","Conroe","Conway","Coon Rapids","Coral Gables","Coral Springs","Corona","Corpus Christi","Corvallis","Costa Mesa","Council Bluffs","Country Club","Covina","Cranston","Cupertino","Cutler Bay","Cuyahoga Falls","Cypress","Dale City","Dallas","Daly City","Danbury","Danville","Danville","Davenport","Davie","Davis","Dayton","Daytona Beach","DeKalb","DeSoto","Dearborn","Dearborn Heights","Decatur","Decatur","Deerfield Beach","Delano","Delray Beach","Deltona","Denton","Denver","Des Moines","Des Plaines","Detroit","Diamond Bar","Doral","Dothan","Downers Grove","Downey","Draper","Dublin","Dublin","Dubuque","Duluth","Dundalk","Dunwoody","Durham","Eagan","East Hartford","East Honolulu","East Lansing","East Los Angeles","East Orange","East Providence","Eastvale","Eau Claire","Eden Prairie","Edina","Edinburg","Edmond","El Cajon","El Centro","El Dorado Hills","El Monte","El Paso","Elgin","Elizabeth","Elk Grove","Elkhart","Ellicott City","Elmhurst","Elyria","Encinitas","Enid","Enterprise","Erie","Escondido","Euclid","Eugene","Euless","Evanston","Evansville","Everett","Everett","Fairfield","Fairfield","Fall River","Fargo","Farmington","Farmington Hills","Fayetteville","Fayetteville","Federal Way","Findlay","Fishers","Flagstaff","Flint","Florence-Graham","Florin","Florissant","Flower Mound","Folsom","Fond du Lac","Fontana","Fort Collins","Fort Lauderdale","Fort Myers","Fort Pierce","Fort Smith","Fort Wayne","Fort Worth","Fountain Valley","Fountainebleau","Framingham","Franklin","Frederick","Freeport","Fremont","Fresno","Frisco","Fullerton","Gainesville","Gaithersburg","Galveston","Garden Grove","Gardena","Garland","Gary","Gastonia","Georgetown","Germantown","Gilbert","Gilroy","Glen Burnie","Glendale","Glendale","Glendora","Glenview","Goodyear","Grand Forks","Grand Island","Grand Junction","Grand Prairie","Grand Rapids","Grapevine","Great Falls","Greeley","Green Bay","Greensboro","Greenville","Greenville","Greenwood","Gresham","Guaynabo","Gulfport","Hacienda Heights","Hackensack","Haltom City","Hamilton","Hammond","Hampton","Hanford","Harlingen","Harrisburg","Harrisonburg","Hartford","Hattiesburg","Haverhill","Hawthorne","Hayward","Hemet","Hempstead","Henderson","Hendersonville","Hesperia","Hialeah","Hicksville","High Point","Highland","Highlands Ranch","Hillsboro","Hilo","Hoboken","Hoffman Estates","Hollywood","Homestead","Honolulu","Hoover","Houston","Huntersville","Huntington","Huntington Beach","Huntington Park","Huntsville","Hutchinson","Idaho Falls","Independence","Indianapolis","Indio","Inglewood","Iowa City","Irondequoit","Irvine","Irving","Jackson","Jackson","Jacksonville","Jacksonville","Janesville","Jefferson City","Jeffersonville","Jersey City","Johns Creek","Johnson City","Joliet","Jonesboro","Joplin","Jupiter","Jurupa Valley","Kalamazoo","Kannapolis","Kansas City","Kansas City","Kearny","Keller","Kendale Lakes","Kendall","Kenner","Kennewick","Kenosha","Kent","Kentwood","Kettering","Killeen","Kingsport","Kirkland","Kissimmee","Knoxville","Kokomo","La Crosse","La Habra","La Mesa","La Mirada","Lacey","Lafayette","Lafayette","Laguna Niguel","Lake Charles","Lake Elsinore","Lake Forest","Lake Havasu City","Lake Ridge","Lakeland","Lakeville","Lakewood","Lakewood","Lakewood","Lakewood","Lakewood","Lancaster","Lancaster","Lansing","Laredo","Largo","Las Cruces","Las Vegas","Lauderhill","Lawrence","Lawrence","Lawrence","Lawton","Layton","League City","Lee's Summit","Leesburg","Lehi","Lehigh Acres","Lenexa","Levittown","Levittown","Lewisville","Lexington-Fayette","Lincoln","Lincoln","Linden","Little Rock","Littleton","Livermore","Livonia","Lodi","Logan","Lombard","Lompoc","Long Beach","Longmont","Longview","Lorain","Los Angeles","Louisville/Jefferson County","Loveland","Lowell","Lubbock","Lynchburg","Lynn","Lynwood","Macon-Bibb County","Madera","Madison","Madison","Malden","Manchester","Manhattan","Mansfield","Mansfield","Manteca","Maple Grove","Margate","Maricopa","Marietta","Marysville","Mayaguez","McAllen","McKinney","McLean","Medford","Medford","Melbourne","Memphis","Menifee","Mentor","Merced","Meriden","Meridian","Mesa","Mesquite","Metairie","Methuen Town","Miami","Miami Beach","Miami Gardens","Middletown","Middletown","Midland","Midland","Midwest City","Milford","Millcreek","Milpitas","Milwaukee","Minneapolis","Minnetonka","Minot","Miramar","Mishawaka","Mission","Mission Viejo","Missoula","Missouri City","Mobile","Modesto","Moline","Monroe","Montebello","Monterey Park","Montgomery","Moore","Moreno Valley","Morgan Hill","Mount Pleasant","Mount Prospect","Mount Vernon","Mountain View","Muncie","Murfreesboro","Murray","Murrieta","Nampa","Napa","Naperville","Nashua","Nashville-Davidson","National City","New Bedford","New Braunfels","New Britain","New Brunswick","New Haven","New Orleans","New Rochelle","New York","Newark","Newark","Newark","Newport Beach","Newport News","Newton","Niagara Falls","Noblesville","Norfolk","Normal","Norman","North Bethesda","North Charleston","North Highlands","North Las Vegas","North Lauderdale","North Little Rock","North Miami","North Miami Beach","North Port","North Richland Hills","Norwalk","Norwalk","Novato","Novi","O'Fallon","Oak Lawn","Oak Park","Oakland","Oakland Park","Ocala","Oceanside","Odessa","Ogden","Oklahoma City","Olathe","Olympia","Omaha","Ontario","Orange","Orem","Orland Park","Orlando","Oro Valley","Oshkosh","Overland Park","Owensboro","Oxnard","Palatine","Palm Bay","Palm Beach Gardens","Palm Coast","Palm Desert","Palm Harbor","Palm Springs","Palmdale","Palo Alto","Paradise","Paramount","Parker","Parma","Pasadena","Pasadena","Pasco","Passaic","Paterson","Pawtucket","Peabody","Pearl City","Pearland","Pembroke Pines","Pensacola","Peoria","Peoria","Perris","Perth Amboy","Petaluma","Pflugerville","Pharr","Philadelphia","Phoenix","Pico Rivera","Pine Bluff","Pine Hills","Pinellas Park","Pittsburg","Pittsburgh","Pittsfield","Placentia","Plainfield","Plainfield","Plano","Plantation","Pleasanton","Plymouth","Pocatello","Poinciana","Pomona","Pompano Beach","Ponce","Pontiac","Port Arthur","Port Charlotte","Port Orange","Port St. Lucie","Portage","Porterville","Portland","Portland","Portsmouth","Potomac","Poway","Providence","Provo","Pueblo","Quincy","Racine","Raleigh","Rancho Cordova","Rancho Cucamonga","Rancho Palos Verdes","Rancho Santa Margarita","Rapid City","Reading","Redding","Redlands","Redmond","Redondo Beach","Redwood City","Reno","Renton","Reston","Revere","Rialto","Richardson","Richland","Richmond","Richmond","Rio Rancho","Riverside","Riverton","Riverview","Roanoke","Rochester","Rochester","Rochester Hills","Rock Hill","Rockford","Rocklin","Rockville","Rockwall","Rocky Mount","Rogers","Rohnert Park","Rosemead","Roseville","Roseville","Roswell","Roswell","Round Rock","Rowland Heights","Rowlett","Royal Oak","Sacramento","Saginaw","Salem","Salem","Salina","Salinas","Salt Lake City","Sammamish","San Angelo","San Antonio","San Bernardino","San Bruno","San Buenaventura (Ventura)","San Clemente","San Diego","San Francisco","San Jacinto","San Jose","San Juan","San Leandro","San Luis Obispo","San Marcos","San Marcos","San Mateo","San Rafael","San Ramon","San Tan Valley","Sandy","Sandy Springs","Sanford","Santa Ana","Santa Barbara","Santa Clara","Santa Clarita","Santa Cruz","Santa Fe","Santa Maria","Santa Monica","Santa Rosa","Santee","Sarasota","Savannah","Sayreville","Schaumburg","Schenectady","Scottsdale","Scranton","Seattle","Severn","Shawnee","Sheboygan","Shoreline","Shreveport","Sierra Vista","Silver Spring","Simi Valley","Sioux City","Sioux Falls","Skokie","Smyrna","Smyrna","Somerville","South Bend","South Gate","South Hill","South Jordan","South San Francisco","South Valley","South Whittier","Southaven","Southfield","Sparks","Spokane","Spokane Valley","Spring","Spring Hill","Spring Valley","Springdale","Springfield","Springfield","Springfield","Springfield","Springfield","St. Charles","St. Clair Shores","St. Cloud","St. Cloud","St. George","St. Joseph","St. Louis","St. Louis Park","St. Paul","St. Peters","St. Petersburg","Stamford","State College","Sterling Heights","Stillwater","Stockton","Stratford","Strongsville","Suffolk","Sugar Land","Summerville","Sunnyvale","Sunrise","Sunrise Manor","Surprise","Syracuse","Tacoma","Tallahassee","Tamarac","Tamiami","Tampa","Taunton","Taylor","Taylorsville","Temecula","Tempe","Temple","Terre Haute","Texas City","The Hammocks","The Villages","The Woodlands","Thornton","Thousand Oaks","Tigard","Tinley Park","Titusville","Toledo","Toms River","Tonawanda","Topeka","Torrance","Town 'n' Country","Towson","Tracy","Trenton","Troy","Troy","Trujillo Alto","Tuckahoe","Tucson","Tulare","Tulsa","Turlock","Tuscaloosa","Tustin","Twin Falls","Tyler","Union City","Union City","University","Upland","Urbana","Urbandale","Utica","Vacaville","Valdosta","Vallejo","Vancouver","Victoria","Victorville","Vineland","Virginia Beach","Visalia","Vista","Waco","Waipahu","Waldorf","Walnut Creek","Waltham","Warner Robins","Warren","Warwick","Washington","Waterbury","Waterloo","Watsonville","Waukegan","Waukesha","Wauwatosa","Wellington","Wesley Chapel","West Allis","West Babylon","West Covina","West Des Moines","West Hartford","West Haven","West Jordan","West Lafayette","West New York","West Palm Beach","West Sacramento","West Seneca","West Valley City","Westfield","Westland","Westminster","Westminster","Weston","Weymouth Town","Wheaton","Wheaton","White Plains","Whittier","Wichita","Wichita Falls","Wilmington","Wilmington","Wilson","Winston-Salem","Woodbury","Woodland","Worcester","Wylie","Wyoming","Yakima","Yonkers","Yorba Linda","York","Youngstown","Yuba City","Yucaipa","Yuma"]})),IO=c((()=>{jt=["North","East","West","South","New","Lake","Port"]})),VO=c((()=>{Et=["town","ton","land","ville","berg","burgh","borough","bury","view","port","mouth","stad","furt","chester","mouth","fort","haven","side","shire"]})),GO=c((()=>{Nt=["Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica (the territory South of 60 deg S)","Antigua and Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island (Bouvetoya)","Brazil","British Indian Ocean Territory (Chagos Archipelago)","Brunei Darussalam","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos (Keeling) Islands","Colombia","Comoros","Congo","Cook Islands","Costa Rica","Cote d'Ivoire","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Faroe Islands","Falkland Islands (Malvinas)","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guinea-Bissau","Guyana","Haiti","Heard Island and McDonald Islands","Holy See (Vatican City State)","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Isle of Man","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Democratic People's Republic of Korea","Republic of Korea","Kuwait","Kyrgyz Republic","Lao People's Democratic Republic","Latvia","Lebanon","Lesotho","Liberia","Libyan Arab Jamahiriya","Liechtenstein","Lithuania","Luxembourg","Macao","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands Antilles","Netherlands","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestinian Territory","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn Islands","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russian Federation","Rwanda","Saint Barthelemy","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Martin","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia (Slovak Republic)","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","Spain","Sri Lanka","Sudan","Suriname","Svalbard & Jan Mayen Islands","Swaziland","Sweden","Switzerland","Syrian Arab Republic","Taiwan","Tajikistan","Tanzania","Thailand","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Virgin Islands, British","Virgin Islands, U.S.","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe"]})),HO=c((()=>{Bt=["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW"]})),FO=c((()=>{Pt=["BGD","BEL","BFA","BGR","BIH","BRB","WLF","BLM","BMU","BRN","BOL","BHR","BDI","BEN","BTN","JAM","BVT","BWA","WSM","BES","BRA","BHS","JEY","BLR","BLZ","RUS","RWA","SRB","TLS","REU","TKM","TJK","ROU","TKL","GNB","GUM","GTM","SGS","GRC","GNQ","GLP","JPN","GUY","GGY","GUF","GEO","GRD","GBR","GAB","SLV","GIN","GMB","GRL","GIB","GHA","OMN","TUN","JOR","HRV","HTI","HUN","HKG","HND","HMD","VEN","PRI","PSE","PLW","PRT","SJM","PRY","IRQ","PAN","PYF","PNG","PER","PAK","PHL","PCN","POL","SPM","ZMB","ESH","EST","EGY","ZAF","ECU","ITA","VNM","SLB","ETH","SOM","ZWE","SAU","ESP","ERI","MNE","MDA","MDG","MAF","MAR","MCO","UZB","MMR","MLI","MAC","MNG","MHL","MKD","MUS","MLT","MWI","MDV","MTQ","MNP","MSR","MRT","IMN","UGA","TZA","MYS","MEX","ISR","FRA","IOT","SHN","FIN","FJI","FLK","FSM","FRO","NIC","NLD","NOR","NAM","VUT","NCL","NER","NFK","NGA","NZL","NPL","NRU","NIU","COK","XKX","CIV","CHE","COL","CHN","CMR","CHL","CCK","CAN","COG","CAF","COD","CZE","CYP","CXR","CRI","CUW","CPV","CUB","SWZ","SYR","SXM","KGZ","KEN","SSD","SUR","KIR","KHM","KNA","COM","STP","SVK","KOR","SVN","PRK","KWT","SEN","SMR","SLE","SYC","KAZ","CYM","SGP","SWE","SDN","DOM","DMA","DJI","DNK","VGB","DEU","YEM","DZA","USA","URY","MYT","UMI","LBN","LCA","LAO","TUV","TWN","TTO","TUR","LKA","LIE","LVA","TON","LTU","LUX","LBR","LSO","THA","ATF","TGO","TCD","TCA","LBY","VAT","VCT","ARE","AND","ATG","AFG","AIA","VIR","ISL","IRN","ARM","ALB","AGO","ATA","ASM","ARG","AUS","AUT","ABW","IND","ALA","AZE","IRL","IDN","UKR","QAT","MOZ"]})),JO=c((()=>{Lt=["Avon","Bedfordshire","Berkshire","Borders","Buckinghamshire","Cambridgeshire"]})),UO=c((()=>{Dt=["United States of America"]})),WO=c((()=>{xt=["North","East","South","West","Northeast","Northwest","Southeast","Southwest"]})),ZO=c((()=>{Ct=["N","E","S","W","NE","NW","SE","SW"]})),qO=c((()=>{Kt=["#####","#####-####"]})),QO=c((()=>{Rt=["#####","#####-####"]})),YO=c((()=>{zt=["Apt. ###","Suite ###"]})),$O=c((()=>{Ot=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]})),XO=c((()=>{It=["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"]})),eI=c((()=>{Vt=["#{building_number} #{street_name}"]})),aI=c((()=>{Gt=["#{Name.first_name} #{street_suffix}","#{Name.last_name} #{street_suffix}"]})),nI=c((()=>{Ht=["Alley","Avenue","Branch","Bridge","Brook","Brooks","Burg","Burgs","Bypass","Camp","Canyon","Cape","Causeway","Center","Centers","Circle","Circles","Cliff","Cliffs","Club","Common","Corner","Corners","Course","Court","Courts","Cove","Coves","Creek","Crescent","Crest","Crossing","Crossroad","Curve","Dale","Dam","Divide","Drive","Drive","Drives","Estate","Estates","Expressway","Extension","Extensions","Fall","Falls","Ferry","Field","Fields","Flat","Flats","Ford","Fords","Forest","Forge","Forges","Fork","Forks","Fort","Freeway","Garden","Gardens","Gateway","Glen","Glens","Green","Greens","Grove","Groves","Harbor","Harbors","Haven","Heights","Highway","Hill","Hills","Hollow","Inlet","Inlet","Island","Island","Islands","Islands","Isle","Isle","Junction","Junctions","Key","Keys","Knoll","Knolls","Lake","Lakes","Land","Landing","Lane","Light","Lights","Loaf","Lock","Locks","Locks","Lodge","Lodge","Loop","Mall","Manor","Manors","Meadow","Meadows","Mews","Mill","Mills","Mission","Mission","Motorway","Mount","Mountain","Mountain","Mountains","Mountains","Neck","Orchard","Oval","Overpass","Park","Parks","Parkway","Parkways","Pass","Passage","Path","Pike","Pine","Pines","Place","Plain","Plains","Plains","Plaza","Plaza","Point","Points","Port","Port","Ports","Ports","Prairie","Prairie","Radial","Ramp","Ranch","Rapid","Rapids","Rest","Ridge","Ridges","River","Road","Road","Roads","Roads","Route","Row","Rue","Run","Shoal","Shoals","Shore","Shores","Skyway","Spring","Springs","Springs","Spur","Spurs","Square","Square","Squares","Squares","Station","Station","Stravenue","Stravenue","Stream","Stream","Street","Street","Streets","Summit","Summit","Terrace","Throughway","Trace","Track","Trafficway","Trail","Trail","Tunnel","Tunnel","Turnpike","Turnpike","Underpass","Union","Unions","Valley","Valleys","Via","Viaduct","View","Views","Village","Village","Villages","Ville","Vista","Vista","Walk","Walks","Wall","Way","Ways","Well","Wells"]})),iI=c((()=>{Ft=["Pacific/Midway","Pacific/Pago_Pago","Pacific/Honolulu","America/Juneau","America/Los_Angeles","America/Tijuana","America/Denver","America/Phoenix","America/Chihuahua","America/Mazatlan","America/Chicago","America/Regina","America/Mexico_City","America/Mexico_City","America/Monterrey","America/Guatemala","America/New_York","America/Indiana/Indianapolis","America/Bogota","America/Lima","America/Lima","America/Halifax","America/Caracas","America/La_Paz","America/Santiago","America/St_Johns","America/Sao_Paulo","America/Argentina/Buenos_Aires","America/Guyana","America/Godthab","Atlantic/South_Georgia","Atlantic/Azores","Atlantic/Cape_Verde","Europe/Dublin","Europe/London","Europe/Lisbon","Europe/London","Africa/Casablanca","Africa/Monrovia","Etc/UTC","Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Prague","Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris","Europe/Amsterdam","Europe/Berlin","Europe/Berlin","Europe/Rome","Europe/Stockholm","Europe/Vienna","Africa/Algiers","Europe/Bucharest","Africa/Cairo","Europe/Helsinki","Europe/Kiev","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Vilnius","Europe/Athens","Europe/Istanbul","Europe/Minsk","Asia/Jerusalem","Africa/Harare","Africa/Johannesburg","Europe/Moscow","Europe/Moscow","Europe/Moscow","Asia/Kuwait","Asia/Riyadh","Africa/Nairobi","Asia/Baghdad","Asia/Tehran","Asia/Muscat","Asia/Muscat","Asia/Baku","Asia/Tbilisi","Asia/Yerevan","Asia/Kabul","Asia/Yekaterinburg","Asia/Karachi","Asia/Karachi","Asia/Tashkent","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kathmandu","Asia/Dhaka","Asia/Dhaka","Asia/Colombo","Asia/Almaty","Asia/Novosibirsk","Asia/Rangoon","Asia/Bangkok","Asia/Bangkok","Asia/Jakarta","Asia/Krasnoyarsk","Asia/Shanghai","Asia/Chongqing","Asia/Hong_Kong","Asia/Urumqi","Asia/Kuala_Lumpur","Asia/Singapore","Asia/Taipei","Australia/Perth","Asia/Irkutsk","Asia/Ulaanbaatar","Asia/Seoul","Asia/Tokyo","Asia/Tokyo","Asia/Tokyo","Asia/Yakutsk","Australia/Darwin","Australia/Adelaide","Australia/Melbourne","Australia/Melbourne","Australia/Sydney","Australia/Brisbane","Australia/Hobart","Asia/Vladivostok","Pacific/Guam","Pacific/Port_Moresby","Asia/Magadan","Asia/Magadan","Pacific/Noumea","Pacific/Fiji","Asia/Kamchatka","Pacific/Majuro","Pacific/Auckland","Pacific/Auckland","Pacific/Tongatapu","Pacific/Fakaofo","Pacific/Apia"]})),rI=c((()=>{RO(),zO(),OO(),IO(),VO(),GO(),HO(),FO(),JO(),UO(),WO(),ZO(),qO(),QO(),YO(),$O(),XO(),eI(),aI(),nI(),iI(),Jt={postcode:Kt,postcode_by_state:Rt,city:_t,city_name:wt,city_prefix:jt,city_suffix:Et,country:Nt,state:Ot,state_abbr:It,county:Lt,direction:xt,direction_abbr:Ct,street_suffix:Ht,secondary_address:zt,country_code:Bt,country_code_alpha_3:Pt,time_zone:Ft,street_address:Vt,street_name:Gt,default_country:Dt,building_number:Tt}})),tI=c((()=>{Ut=["Giant panda","Spectacled bear","Sun bear","Sloth bear","American black bear","Asian black bear","Brown bear","Polar bear"]})),oI=c((()=>{Wt=["Red-throated Loon","Arctic Loon","Pacific Loon","Common Loon","Yellow-billed Loon","Least Grebe","Pied-billed Grebe","Horned Grebe","Red-necked Grebe","Eared Grebe","Western Grebe","Clark's Grebe","Yellow-nosed Albatross","Shy Albatross","Black-browed Albatross","Wandering Albatross","Laysan Albatross","Black-footed Albatross","Short-tailed Albatross","Northern Fulmar","Herald Petrel","Murphy's Petrel","Mottled Petrel","Black-capped Petrel","Cook's Petrel","Stejneger's Petrel","White-chinned Petrel","Streaked Shearwater","Cory's Shearwater","Pink-footed Shearwater","Flesh-footed Shearwater","Greater Shearwater","Wedge-tailed Shearwater","Buller's Shearwater","Sooty Shearwater","Short-tailed Shearwater","Manx Shearwater","Black-vented Shearwater","Audubon's Shearwater","Little Shearwater","Wilson's Storm-Petrel","White-faced Storm-Petrel","European Storm-Petrel","Fork-tailed Storm-Petrel","Leach's Storm-Petrel","Ashy Storm-Petrel","Band-rumped Storm-Petrel","Wedge-rumped Storm-Petrel","Black Storm-Petrel","Least Storm-Petrel","White-tailed Tropicbird","Red-billed Tropicbird","Red-tailed Tropicbird","Masked Booby","Blue-footed Booby","Brown Booby","Red-footed Booby","Northern Gannet","American White Pelican","Brown Pelican","Brandt's Cormorant","Neotropic Cormorant","Double-crested Cormorant","Great Cormorant","Red-faced Cormorant","Pelagic Cormorant","Anhinga","Magnificent Frigatebird","Great Frigatebird","Lesser Frigatebird","American Bittern","Yellow Bittern","Least Bittern","Great Blue Heron","Great Egret","Chinese Egret","Little Egret","Western Reef-Heron","Snowy Egret","Little Blue Heron","Tricolored Heron","Reddish Egret","Cattle Egret","Green Heron","Black-crowned Night-Heron","Yellow-crowned Night-Heron","White Ibis","Scarlet Ibis","Glossy Ibis","White-faced Ibis","Roseate Spoonbill","Jabiru","Wood Stork","Black Vulture","Turkey Vulture","California Condor","Greater Flamingo","Black-bellied Whistling-Duck","Fulvous Whistling-Duck","Bean Goose","Pink-footed Goose","Greater White-fronted Goose","Lesser White-fronted Goose","Emperor Goose","Snow Goose","Ross's Goose","Canada Goose","Brant","Barnacle Goose","Mute Swan","Trumpeter Swan","Tundra Swan","Whooper Swan","Muscovy Duck","Wood Duck","Gadwall","Falcated Duck","Eurasian Wigeon","American Wigeon","American Black Duck","Mallard","Mottled Duck","Spot-billed Duck","Blue-winged Teal","Cinnamon Teal","Northern Shoveler","White-cheeked Pintail","Northern Pintail","Garganey","Baikal Teal","Green-winged Teal","Canvasback","Redhead","Common Pochard","Ring-necked Duck","Tufted Duck","Greater Scaup","Lesser Scaup","Steller's Eider","Spectacled Eider","King Eider","Common Eider","Harlequin Duck","Labrador Duck","Surf Scoter","White-winged Scoter","Black Scoter","Oldsquaw","Bufflehead","Common Goldeneye","Barrow's Goldeneye","Smew","Hooded Merganser","Common Merganser","Red-breasted Merganser","Masked Duck","Ruddy Duck","Osprey","Hook-billed Kite","Swallow-tailed Kite","White-tailed Kite","Snail Kite","Mississippi Kite","Bald Eagle","White-tailed Eagle","Steller's Sea-Eagle","Northern Harrier","Sharp-shinned Hawk","Cooper's Hawk","Northern Goshawk","Crane Hawk","Gray Hawk","Common Black-Hawk","Harris's Hawk","Roadside Hawk","Red-shouldered Hawk","Broad-winged Hawk","Short-tailed Hawk","Swainson's Hawk","White-tailed Hawk","Zone-tailed Hawk","Red-tailed Hawk","Ferruginous Hawk","Rough-legged Hawk","Golden Eagle","Collared Forest-Falcon","Crested Caracara","Eurasian Kestrel","American Kestrel","Merlin","Eurasian Hobby","Aplomado Falcon","Gyrfalcon","Peregrine Falcon","Prairie Falcon","Plain Chachalaca","Chukar","Himalayan Snowcock","Gray Partridge","Ring-necked Pheasant","Ruffed Grouse","Sage Grouse","Spruce Grouse","Willow Ptarmigan","Rock Ptarmigan","White-tailed Ptarmigan","Blue Grouse","Sharp-tailed Grouse","Greater Prairie-chicken","Lesser Prairie-chicken","Wild Turkey","Mountain Quail","Scaled Quail","California Quail","Gambel's Quail","Northern Bobwhite","Montezuma Quail","Yellow Rail","Black Rail","Corn Crake","Clapper Rail","King Rail","Virginia Rail","Sora","Paint-billed Crake","Spotted Rail","Purple Gallinule","Azure Gallinule","Common Moorhen","Eurasian Coot","American Coot","Limpkin","Sandhill Crane","Common Crane","Whooping Crane","Double-striped Thick-knee","Northern Lapwing","Black-bellied Plover","European Golden-Plover","American Golden-Plover","Pacific Golden-Plover","Mongolian Plover","Collared Plover","Snowy Plover","Wilson's Plover","Common Ringed Plover","Semipalmated Plover","Piping Plover","Little Ringed Plover","Killdeer","Mountain Plover","Eurasian Dotterel","Eurasian Oystercatcher","American Oystercatcher","Black Oystercatcher","Black-winged Stilt","Black-necked Stilt","American Avocet","Northern Jacana","Common Greenshank","Greater Yellowlegs","Lesser Yellowlegs","Marsh Sandpiper","Spotted Redshank","Wood Sandpiper","Green Sandpiper","Solitary Sandpiper","Willet","Wandering Tattler","Gray-tailed Tattler","Common Sandpiper","Spotted Sandpiper","Terek Sandpiper","Upland Sandpiper","Little Curlew","Eskimo Curlew","Whimbrel","Bristle-thighed Curlew","Far Eastern Curlew","Slender-billed Curlew","Eurasian Curlew","Long-billed Curlew","Black-tailed Godwit","Hudsonian Godwit","Bar-tailed Godwit","Marbled Godwit","Ruddy Turnstone","Black Turnstone","Surfbird","Great Knot","Red Knot","Sanderling","Semipalmated Sandpiper","Western Sandpiper","Red-necked Stint","Little Stint","Temminck's Stint","Long-toed Stint","Least Sandpiper","White-rumped Sandpiper","Baird's Sandpiper","Pectoral Sandpiper","Sharp-tailed Sandpiper","Purple Sandpiper","Rock Sandpiper","Dunlin","Curlew Sandpiper","Stilt Sandpiper","Spoonbill Sandpiper","Broad-billed Sandpiper","Buff-breasted Sandpiper","Ruff","Short-billed Dowitcher","Long-billed Dowitcher","Jack Snipe","Common Snipe","Pin-tailed Snipe","Eurasian Woodcock","American Woodcock","Wilson's Phalarope","Red-necked Phalarope","Red Phalarope","Oriental Pratincole","Great Skua","South Polar Skua","Pomarine Jaeger","Parasitic Jaeger","Long-tailed Jaeger","Laughing Gull","Franklin's Gull","Little Gull","Black-headed Gull","Bonaparte's Gull","Heermann's Gull","Band-tailed Gull","Black-tailed Gull","Mew Gull","Ring-billed Gull","California Gull","Herring Gull","Yellow-legged Gull","Thayer's Gull","Iceland Gull","Lesser Black-backed Gull","Slaty-backed Gull","Yellow-footed Gull","Western Gull","Glaucous-winged Gull","Glaucous Gull","Great Black-backed Gull","Sabine's Gull","Black-legged Kittiwake","Red-legged Kittiwake","Ross's Gull","Ivory Gull","Gull-billed Tern","Caspian Tern","Royal Tern","Elegant Tern","Sandwich Tern","Roseate Tern","Common Tern","Arctic Tern","Forster's Tern","Least Tern","Aleutian Tern","Bridled Tern","Sooty Tern","Large-billed Tern","White-winged Tern","Whiskered Tern","Black Tern","Brown Noddy","Black Noddy","Black Skimmer","Dovekie","Common Murre","Thick-billed Murre","Razorbill","Great Auk","Black Guillemot","Pigeon Guillemot","Long-billed Murrelet","Marbled Murrelet","Kittlitz's Murrelet","Xantus's Murrelet","Craveri's Murrelet","Ancient Murrelet","Cassin's Auklet","Parakeet Auklet","Least Auklet","Whiskered Auklet","Crested Auklet","Rhinoceros Auklet","Atlantic Puffin","Horned Puffin","Tufted Puffin","Rock Dove","Scaly-naped Pigeon","White-crowned Pigeon","Red-billed Pigeon","Band-tailed Pigeon","Oriental Turtle-Dove","European Turtle-Dove","Eurasian Collared-Dove","Spotted Dove","White-winged Dove","Zenaida Dove","Mourning Dove","Passenger Pigeon","Inca Dove","Common Ground-Dove","Ruddy Ground-Dove","White-tipped Dove","Key West Quail-Dove","Ruddy Quail-Dove","Budgerigar","Monk Parakeet","Carolina Parakeet","Thick-billed Parrot","White-winged Parakeet","Red-crowned Parrot","Common Cuckoo","Oriental Cuckoo","Black-billed Cuckoo","Yellow-billed Cuckoo","Mangrove Cuckoo","Greater Roadrunner","Smooth-billed Ani","Groove-billed Ani","Barn Owl","Flammulated Owl","Oriental Scops-Owl","Western Screech-Owl","Eastern Screech-Owl","Whiskered Screech-Owl","Great Horned Owl","Snowy Owl","Northern Hawk Owl","Northern Pygmy-Owl","Ferruginous Pygmy-Owl","Elf Owl","Burrowing Owl","Mottled Owl","Spotted Owl","Barred Owl","Great Gray Owl","Long-eared Owl","Short-eared Owl","Boreal Owl","Northern Saw-whet Owl","Lesser Nighthawk","Common Nighthawk","Antillean Nighthawk","Common Pauraque","Common Poorwill","Chuck-will's-widow","Buff-collared Nightjar","Whip-poor-will","Jungle Nightjar","Black Swift","White-collared Swift","Chimney Swift","Vaux's Swift","White-throated Needletail","Common Swift","Fork-tailed Swift","White-throated Swift","Antillean Palm Swift","Green Violet-ear","Green-breasted Mango","Broad-billed Hummingbird","White-eared Hummingbird","Xantus's Hummingbird","Berylline Hummingbird","Buff-bellied Hummingbird","Cinnamon Hummingbird","Violet-crowned Hummingbird","Blue-throated Hummingbird","Magnificent Hummingbird","Plain-capped Starthroat","Bahama Woodstar","Lucifer Hummingbird","Ruby-throated Hummingbird","Black-chinned Hummingbird","Anna's Hummingbird","Costa's Hummingbird","Calliope Hummingbird","Bumblebee Hummingbird","Broad-tailed Hummingbird","Rufous Hummingbird","Allen's Hummingbird","Elegant Trogon","Eared Trogon","Hoopoe","Ringed Kingfisher","Belted Kingfisher","Green Kingfisher","Eurasian Wryneck","Lewis's Woodpecker","Red-headed Woodpecker","Acorn Woodpecker","Gila Woodpecker","Golden-fronted Woodpecker","Red-bellied Woodpecker","Williamson's Sapsucker","Yellow-bellied Sapsucker","Red-naped Sapsucker","Red-breasted Sapsucker","Great Spotted Woodpecker","Ladder-backed Woodpecker","Nuttall's Woodpecker","Downy Woodpecker","Hairy Woodpecker","Strickland's Woodpecker","Red-cockaded Woodpecker","White-headed Woodpecker","Three-toed Woodpecker","Black-backed Woodpecker","Northern Flicker","Gilded Flicker","Pileated Woodpecker","Ivory-billed Woodpecker","Northern Beardless-Tyrannulet","Greenish Elaenia","Caribbean Elaenia","Tufted Flycatcher","Olive-sided Flycatcher","Greater Pewee","Western Wood-Pewee","Eastern Wood-Pewee","Yellow-bellied Flycatcher","Acadian Flycatcher","Alder Flycatcher","Willow Flycatcher","Least Flycatcher","Hammond's Flycatcher","Dusky Flycatcher","Gray Flycatcher","Pacific-slope Flycatcher","Cordilleran Flycatcher","Buff-breasted Flycatcher","Black Phoebe","Eastern Phoebe","Say's Phoebe","Vermilion Flycatcher","Dusky-capped Flycatcher","Ash-throated Flycatcher","Nutting's Flycatcher","Great Crested Flycatcher","Brown-crested Flycatcher","La Sagra's Flycatcher","Great Kiskadee","Sulphur-bellied Flycatcher","Variegated Flycatcher","Tropical Kingbird","Couch's Kingbird","Cassin's Kingbird","Thick-billed Kingbird","Western Kingbird","Eastern Kingbird","Gray Kingbird","Loggerhead Kingbird","Scissor-tailed Flycatcher","Fork-tailed Flycatcher","Rose-throated Becard","Masked Tityra","Brown Shrike","Loggerhead Shrike","Northern Shrike","White-eyed Vireo","Thick-billed Vireo","Bell's Vireo","Black-capped Vireo","Gray Vireo","Yellow-throated Vireo","Plumbeous Vireo","Cassin's Vireo","Blue-headed Vireo","Hutton's Vireo","Warbling Vireo","Philadelphia Vireo","Red-eyed Vireo","Yellow-green Vireo","Black-whiskered Vireo","Yucatan Vireo","Gray Jay","Steller's Jay","Blue Jay","Green Jay","Brown Jay","Florida Scrub-Jay","Island Scrub-Jay","Western Scrub-Jay","Mexican Jay","Pinyon Jay","Clark's Nutcracker","Black-billed Magpie","Yellow-billed Magpie","Eurasian Jackdaw","American Crow","Northwestern Crow","Tamaulipas Crow","Fish Crow","Chihuahuan Raven","Common Raven","Sky Lark","Horned Lark","Purple Martin","Cuban Martin","Gray-breasted Martin","Southern Martin","Brown-chested Martin","Tree Swallow","Violet-green Swallow","Bahama Swallow","Northern Rough-winged Swallow","Bank Swallow","Cliff Swallow","Cave Swallow","Barn Swallow","Common House-Martin","Carolina Chickadee","Black-capped Chickadee","Mountain Chickadee","Mexican Chickadee","Chestnut-backed Chickadee","Boreal Chickadee","Gray-headed Chickadee","Bridled Titmouse","Oak Titmouse","Juniper Titmouse","Tufted Titmouse","Verdin","Bushtit","Red-breasted Nuthatch","White-breasted Nuthatch","Pygmy Nuthatch","Brown-headed Nuthatch","Brown Creeper","Cactus Wren","Rock Wren","Canyon Wren","Carolina Wren","Bewick's Wren","House Wren","Winter Wren","Sedge Wren","Marsh Wren","American Dipper","Red-whiskered Bulbul","Golden-crowned Kinglet","Ruby-crowned Kinglet","Middendorff's Grasshopper-Warbler","Lanceolated Warbler","Wood Warbler","Dusky Warbler","Arctic Warbler","Blue-gray Gnatcatcher","California Gnatcatcher","Black-tailed Gnatcatcher","Black-capped Gnatcatcher","Narcissus Flycatcher","Mugimaki Flycatcher","Red-breasted Flycatcher","Siberian Flycatcher","Gray-spotted Flycatcher","Asian Brown Flycatcher","Siberian Rubythroat","Bluethroat","Siberian Blue Robin","Red-flanked Bluetail","Northern Wheatear","Stonechat","Eastern Bluebird","Western Bluebird","Mountain Bluebird","Townsend's Solitaire","Veery","Gray-cheeked Thrush","Bicknell's Thrush","Swainson's Thrush","Hermit Thrush","Wood Thrush","Eurasian Blackbird","Eyebrowed Thrush","Dusky Thrush","Fieldfare","Redwing","Clay-colored Robin","White-throated Robin","Rufous-backed Robin","American Robin","Varied Thrush","Aztec Thrush","Wrentit","Gray Catbird","Black Catbird","Northern Mockingbird","Bahama Mockingbird","Sage Thrasher","Brown Thrasher","Long-billed Thrasher","Bendire's Thrasher","Curve-billed Thrasher","California Thrasher","Crissal Thrasher","Le Conte's Thrasher","Blue Mockingbird","European Starling","Crested Myna","Siberian Accentor","Yellow Wagtail","Citrine Wagtail","Gray Wagtail","White Wagtail","Black-backed Wagtail","Tree Pipit","Olive-backed Pipit","Pechora Pipit","Red-throated Pipit","American Pipit","Sprague's Pipit","Bohemian Waxwing","Cedar Waxwing","Gray Silky-flycatcher","Phainopepla","Olive Warbler","Bachman's Warbler","Blue-winged Warbler","Golden-winged Warbler","Tennessee Warbler","Orange-crowned Warbler","Nashville Warbler","Virginia's Warbler","Colima Warbler","Lucy's Warbler","Crescent-chested Warbler","Northern Parula","Tropical Parula","Yellow Warbler","Chestnut-sided Warbler","Magnolia Warbler","Cape May Warbler","Black-throated Blue Warbler","Yellow-rumped Warbler","Black-throated Gray Warbler","Golden-cheeked Warbler","Black-throated Green Warbler","Townsend's Warbler","Hermit Warbler","Blackburnian Warbler","Yellow-throated Warbler","Grace's Warbler","Pine Warbler","Kirtland's Warbler","Prairie Warbler","Palm Warbler","Bay-breasted Warbler","Blackpoll Warbler","Cerulean Warbler","Black-and-white Warbler","American Redstart","Prothonotary Warbler","Worm-eating Warbler","Swainson's Warbler","Ovenbird","Northern Waterthrush","Louisiana Waterthrush","Kentucky Warbler","Connecticut Warbler","Mourning Warbler","MacGillivray's Warbler","Common Yellowthroat","Gray-crowned Yellowthroat","Hooded Warbler","Wilson's Warbler","Canada Warbler","Red-faced Warbler","Painted Redstart","Slate-throated Redstart","Fan-tailed Warbler","Golden-crowned Warbler","Rufous-capped Warbler","Yellow-breasted Chat","Bananaquit","Hepatic Tanager","Summer Tanager","Scarlet Tanager","Western Tanager","Flame-colored Tanager","Stripe-headed Tanager","White-collared Seedeater","Yellow-faced Grassquit","Black-faced Grassquit","Olive Sparrow","Green-tailed Towhee","Spotted Towhee","Eastern Towhee","Canyon Towhee","California Towhee","Abert's Towhee","Rufous-winged Sparrow","Cassin's Sparrow","Bachman's Sparrow","Botteri's Sparrow","Rufous-crowned Sparrow","Five-striped Sparrow","American Tree Sparrow","Chipping Sparrow","Clay-colored Sparrow","Brewer's Sparrow","Field Sparrow","Worthen's Sparrow","Black-chinned Sparrow","Vesper Sparrow","Lark Sparrow","Black-throated Sparrow","Sage Sparrow","Lark Bunting","Savannah Sparrow","Grasshopper Sparrow","Baird's Sparrow","Henslow's Sparrow","Le Conte's Sparrow","Nelson's Sharp-tailed Sparrow","Saltmarsh Sharp-tailed Sparrow","Seaside Sparrow","Fox Sparrow","Song Sparrow","Lincoln's Sparrow","Swamp Sparrow","White-throated Sparrow","Harris's Sparrow","White-crowned Sparrow","Golden-crowned Sparrow","Dark-eyed Junco","Yellow-eyed Junco","McCown's Longspur","Lapland Longspur","Smith's Longspur","Chestnut-collared Longspur","Pine Bunting","Little Bunting","Rustic Bunting","Yellow-breasted Bunting","Gray Bunting","Pallas's Bunting","Reed Bunting","Snow Bunting","McKay's Bunting","Crimson-collared Grosbeak","Northern Cardinal","Pyrrhuloxia","Yellow Grosbeak","Rose-breasted Grosbeak","Black-headed Grosbeak","Blue Bunting","Blue Grosbeak","Lazuli Bunting","Indigo Bunting","Varied Bunting","Painted Bunting","Dickcissel","Bobolink","Red-winged Blackbird","Tricolored Blackbird","Tawny-shouldered Blackbird","Eastern Meadowlark","Western Meadowlark","Yellow-headed Blackbird","Rusty Blackbird","Brewer's Blackbird","Common Grackle","Boat-tailed Grackle","Great-tailed Grackle","Shiny Cowbird","Bronzed Cowbird","Brown-headed Cowbird","Black-vented Oriole","Orchard Oriole","Hooded Oriole","Streak-backed Oriole","Spot-breasted Oriole","Altamira Oriole","Audubon's Oriole","Baltimore Oriole","Bullock's Oriole","Scott's Oriole","Common Chaffinch","Brambling","Gray-crowned Rosy-Finch","Black Rosy-Finch","Brown-capped Rosy-Finch","Pine Grosbeak","Common Rosefinch","Purple Finch","Cassin's Finch","House Finch","Red Crossbill","White-winged Crossbill","Common Redpoll","Hoary Redpoll","Eurasian Siskin","Pine Siskin","Lesser Goldfinch","Lawrence's Goldfinch","American Goldfinch","Oriental Greenfinch","Eurasian Bullfinch","Evening Grosbeak","Hawfinch","House Sparrow","Eurasian Tree Sparrow"]})),sI=c((()=>{Zt=["Abyssinian","American Bobtail","American Curl","American Shorthair","American Wirehair","Balinese","Bengal","Birman","Bombay","British Shorthair","Burmese","Chartreux","Chausie","Cornish Rex","Devon Rex","Donskoy","Egyptian Mau","Exotic Shorthair","Havana","Highlander","Himalayan","Japanese Bobtail","Korat","Kurilian Bobtail","LaPerm","Maine Coon","Manx","Minskin","Munchkin","Nebelung","Norwegian Forest Cat","Ocicat","Ojos Azules","Oriental","Persian","Peterbald","Pixiebob","Ragdoll","Russian Blue","Savannah","Scottish Fold","Selkirk Rex","Serengeti","Siberian","Siamese","Singapura","Snowshoe","Sokoke","Somali","Sphynx","Thai","Tonkinese","Toyger","Turkish Angora","Turkish Van"]})),lI=c((()=>{qt=["Blue Whale","Fin Whale","Sei Whale","Sperm Whale","Bryde’s whale","Omura’s whale","Humpback whale","Long-Beaked Common Dolphin","Short-Beaked Common Dolphin","Bottlenose Dolphin","Indo-Pacific Bottlenose Dolphin","Northern Rightwhale Dolphin","Southern Rightwhale Dolphin","Tucuxi","Costero","Indo-Pacific Hump-backed Dolphin","Chinese White Dolphin","Atlantic Humpbacked Dolphin","Atlantic Spotted Dolphin","Clymene Dolphin","Pantropical Spotted Dolphin","Spinner Dolphin","Striped Dolphin","Rough-Toothed Dolphin","Chilean Dolphin","Commerson’s Dolphin","Heaviside’s Dolphin","Hector’s Dolphin","Risso’s Dolphin","Fraser’s Dolphin","Atlantic White-Sided Dolphin","Dusky Dolphin","Hourglass Dolphin","Pacific White-Sided Dolphin","Peale’s Dolphin","White-Beaked Dolphin","Australian Snubfin Dolphin","Irrawaddy Dolphin","Melon-headed Whale","Killer Whale (Orca)","Pygmy Killer Whale","False Killer Whale","Long-finned Pilot Whale","Short-finned Pilot Whale","Guiana Dolphin","Burrunan Dolphin","Australian humpback Dolphin","Amazon River Dolphin","Chinese River Dolphin","Ganges River Dolphin","La Plata Dolphin","Southern Bottlenose Whale","Longman's Beaked Whale","Arnoux's Beaked Whale"]})),uI=c((()=>{Qt=["Aberdeen Angus","Abergele","Abigar","Abondance","Abyssinian Shorthorned Zebu","Aceh","Achham","Adamawa","Adaptaur","Afar","Africangus","Afrikaner","Agerolese","Alambadi","Alatau","Albanian","Albera","Alderney","Alentejana","Aleutian wild cattle","Aliad Dinka","Alistana-Sanabresa","Allmogekor","Alur","American","American Angus","American Beef Friesian","American Brown Swiss","American Milking Devon","American White Park","Amerifax","Amrit Mahal","Amsterdam Island cattle","Anatolian Black","Andalusian Black","Andalusian Blond","Andalusian Grey","Angeln","Angoni","Ankina","Ankole","Ankole-Watusi","Aracena","Arado","Argentine Criollo","Argentine Friesian","Armorican","Arouquesa","Arsi","Asturian Mountain","Asturian Valley","Aubrac","Aulie-Ata","Aure et Saint-Girons","Australian Braford","Australian Brangus","Australian Charbray","Australian Friesian Sahiwal","Australian Lowline","Australian Milking Zebu","Australian Shorthorn","Austrian Simmental","Austrian Yellow","Avétonou","Avileña-Negra Ibérica","Aweil Dinka","Ayrshire","Azaouak","Azebuado","Azerbaijan Zebu","Azores","Bedit","Breed","Bachaur cattle","Baherie cattle","Bakosi cattle","Balancer","Baoule","Bargur cattle","Barrosã","Barzona","Bazadaise","Beef Freisian","Beefalo","Beefmaker","Beefmaster","Begayt","Belgian Blue","Belgian Red","Belgian Red Pied","Belgian White-and-Red","Belmont Red","Belted Galloway","Bernese","Berrenda cattle","Betizu","Bianca Modenese","Blaarkop","Black Angus","Black Baldy","Black Hereford","Blanca Cacereña","Blanco Orejinegro BON","Blonde d'Aquitaine","Blue Albion","Blue Grey","Bohuskulla","Bonsmara","Boran","Boškarin","Braford","Brahman","Brahmousin","Brangus","Braunvieh","Brava","British White","British Friesian","Brown Carpathian","Brown Caucasian","Brown Swiss","Bue Lingo","Burlina","Buša cattle","Butana cattle","Bushuyev","Cedit","Breed","Cachena","Caldelana","Camargue","Campbell Island cattle","Canadian Speckle Park","Canadienne","Canaria","Canchim","Caracu","Cárdena Andaluza","Carinthian Blondvieh","Carora","Charbray","Charolais","Chateaubriand","Chiangus","Chianina","Chillingham cattle","Chinese Black Pied","Cholistani","Coloursided White Back","Commercial","Corriente","Corsican cattle","Costeño con Cuernos","Crioulo Lageano","Dedit","Breed","Dajal","Dangi cattle","Danish Black-Pied","Danish Jersey","Danish Red","Deep Red cattle","Deoni","Devon","Dexter cattle","Dhanni","Doayo cattle","Doela","Drakensberger","Dølafe","Droughtmaster","Dulong'","Dutch Belted","Dutch Friesian","Dwarf Lulu","Eedit","Breed","East Anatolian Red","Eastern Finncattle","Eastern Red Polled","Enderby Island cattle","English Longhorn","Ennstaler Bergscheck","Estonian Holstein","Estonian Native","Estonian Red cattle","Évolène cattle","Fedit","Breed","Fēng Cattle","Finnish Ayrshire","Finncattle","Finnish Holstein-Friesian","Fjäll","Fleckvieh","Florida Cracker cattle","Fogera","French Simmental","Fribourgeoise","Friesian Red and White","Fulani Sudanese","Gedit","Breed","Galician Blond","Galloway cattle","Gangatiri","Gaolao","Garvonesa","Gascon cattle","Gelbvieh","Georgian Mountain cattle","German Angus","German Black Pied cattle","German Black Pied Dairy","German Red Pied","Gir","Glan cattle","Gloucester","Gobra","Greek Shorthorn","Greek Steppe","Greyman cattle","Gudali","Guernsey cattle","Guzerá","Hedit","Breed","Hallikar4","Hanwoo","Hariana cattle","Hartón del Valle","Harzer Rotvieh","Hays Converter","Heck cattle","Hereford","Herens","Hybridmaster","Highland cattle","Hinterwald","Holando-Argentino","Holstein Friesian cattle","Horro","Huáng Cattle","Hungarian Grey","Iedit","Breed","Iberian cattle","Icelandic","Illawarra cattle","Improved Red and White","Indo-Brazilian","Irish Moiled","Israeli Holstein","Israeli Red","Istoben cattle","Istrian cattle","Jedit","Breed","Jamaica Black","Jamaica Hope","Jamaica Red","Japanese Brown","Jarmelista","Javari cattle","Jersey cattle","Jutland cattle","Kedit","Breed","Kabin Buri cattle","Kalmyk cattle","Kangayam","Kankrej","Kamphaeng Saen cattle","Karan Swiss","Kasaragod Dwarf cattle","Kathiawadi","Kazakh Whiteheaded","Kenana cattle","Kenkatha cattle","Kerry cattle","Kherigarh","Khillari cattle","Kholomogory","Korat Wagyu","Kostroma cattle","Krishna Valley cattle","Kuri","Kurgan cattle","Ledit","Breed","La Reina cattle","Lakenvelder cattle","Lampurger","Latvian Blue","Latvian Brown","Latvian Danish Red","Lebedyn","Levantina","Limia cattle","Limousin","Limpurger","Lincoln Red","Lineback","Lithuanian Black-and-White","Lithuanian Light Grey","Lithuanian Red","Lithuanian White-Backed","Lohani cattle","Lourdais","Lucerna cattle","Luing","Medit","Breed","Madagascar Zebu","Madura","Maine-Anjou","Malnad Gidda","Malvi","Mandalong Special","Mantequera Leonesa","Maramureş Brown","Marchigiana","Maremmana","Marinhoa","Maronesa","Masai","Mashona","Menorquina","Mertolenga","Meuse-Rhine-Issel","Mewati","Milking Shorthorn","Minhota","Mirandesa","Mirkadim","Mocăniţă","Mollie","Monchina","Mongolian","Montbéliarde","Morucha","Muturu","Murboden","Murnau-Werdenfels","Murray Grey","Nedit","Breed","Nagori","N'Dama","Negra Andaluza","Nelore","Nguni","Nimari","Normande","North Bengal Grey","Northern Finncattle","Northern Shorthorn","Norwegian Red","Oedit]","Breed","Ongole","Original Simmental","Pedit","Breed","Pajuna","Palmera","Pantaneiro","Parda Alpina","Parthenaise","Pasiega","Pembroke","Philippine Native","Pie Rouge des Plaines","Piedmontese cattle","Pineywoods","Pinzgauer","Pirenaica","Podolac","Podolica","Polish Black-and-White","Polish Red","Polled Hereford","Poll Shorthorn","Polled Shorthorn","Ponwar","Preta","Punganur","Pulikulam","Pustertaler Sprinzen","Qedit","Breed","Qinchaun","Queensland Miniature Boran","Redit","Breed","Ramo Grande","Randall","Raramuri Criollo","Rathi","Rätisches Grauvieh","Raya","Red Angus","Red Brangus","Red Chittagong","Red Fulani","Red Gorbatov","Red Holstein","Red Kandhari","Red Mingrelian","Red Poll","Red Polled Østland","Red Sindhi","Retinta","Riggit Galloway","Ringamåla","Rohjan","Romagnola","Romanian Bălţata","Romanian Steppe Gray","Romosinuano","Russian Black Pied","RX3","Sedit","Breed","Sahiwal","Salers","Salorn","Sanga","Sanhe","Santa Cruz","Santa Gertrudis","Sayaguesa","Schwyz","Selembu","Senepol","Serbian Pied","Serbian Steppe","Sheko","Shetland","Shorthorn","Siboney de Cuba","Simbrah","Simford","Simmental","Siri","South Devon","Spanish Fighting Bull","Speckle Park","Square Meater","Sussex","Swedish Friesian","Swedish Polled","Swedish Red Pied","Swedish Red Polled","Swedish Red-and-White","Tedit","Breed","Tabapuã","Tarentaise","Tasmanian Grey","Tauros","Telemark","Texas Longhorn","Texon","Thai Black","Thai Fighting Bull","Thai Friesian","Thai Milking Zebu","Tharparkar","Tswana","Tudanca","Tuli","Tulim","Turkish Grey Steppe","Tux-Zillertal","Tyrol Grey","Uedit","Breed","Umblachery","Ukrainian Grey","Vedit","Breed","Valdostana Castana","Valdostana Pezzata Nera","Valdostana Pezzata Rossa","Väneko","Vaynol","Vechur8","Vestland Fjord","Vestland Red Polled","Vianesa","Volinian Beef","Vorderwald","Vosgienne","Wedit","Breed","Wagyu","Waguli","Wangus","Welsh Black","Western Finncattle","White Cáceres","White Fulani","White Lamphun","White Park","Whitebred Shorthorn","Xedit","Breed","Xingjiang Brown","Yedit","Breed","Yakutian","Yanbian","Yanhuang","Yurino","Zedit","Breed","Żubroń","Zebu"]})),cI=c((()=>{Yt=["Alligator mississippiensis","Chinese Alligator","Black Caiman","Broad-snouted Caiman","Spectacled Caiman","Yacare Caiman","Cuvier’s Dwarf Caiman","Schneider’s Smooth-fronted Caiman","African Slender-snouted Crocodile","American Crocodile","Australian Freshwater Crocodile","Cuban Crocodile","Dwarf Crocodile","Morelet’s Crocodile","Mugger Crocodile","New Guinea Freshwater Crocodile","Nile Crocodile","West African Crocodile","Orinoco Crocodile","Philippine Crocodile","Saltwater Crocodile","Siamese Crocodile","Gharial","Tomistoma"]})),dI=c((()=>{$t=["Affenpinscher","Afghan Hound","Aidi","Airedale Terrier","Akbash","Akita","Alano Español","Alapaha Blue Blood Bulldog","Alaskan Husky","Alaskan Klee Kai","Alaskan Malamute","Alopekis","Alpine Dachsbracke","American Bulldog","American Bully","American Cocker Spaniel","American English Coonhound","American Foxhound","American Hairless Terrier","American Pit Bull Terrier","American Staffordshire Terrier","American Water Spaniel","Andalusian Hound","Anglo-Français de Petite Vénerie","Appenzeller Sennenhund","Ariegeois","Armant","Armenian Gampr dog","Artois Hound","Australian Cattle Dog","Australian Kelpie","Australian Shepherd","Australian Stumpy Tail Cattle Dog","Australian Terrier","Austrian Black and Tan Hound","Austrian Pinscher","Azawakh","Bakharwal dog","Banjara Hound","Barbado da Terceira","Barbet","Basenji","Basque Shepherd Dog","Basset Artésien Normand","Basset Bleu de Gascogne","Basset Fauve de Bretagne","Basset Hound","Bavarian Mountain Hound","Beagle","Beagle-Harrier","Belgian Shepherd","Bearded Collie","Beauceron","Bedlington Terrier","Bergamasco Shepherd","Berger Picard","Bernese Mountain Dog","Bhotia","Bichon Frisé","Billy","Black and Tan Coonhound","Black Norwegian Elkhound","Black Russian Terrier","Black Mouth Cur","Bloodhound","Blue Lacy","Blue Picardy Spaniel","Bluetick Coonhound","Boerboel","Bohemian Shepherd","Bolognese","Border Collie","Border Terrier","Borzoi","Bosnian Coarse-haired Hound","Boston Terrier","Bouvier des Ardennes","Bouvier des Flandres","Boxer","Boykin Spaniel","Bracco Italiano","Braque d'Auvergne","Braque de l'Ariège","Braque du Bourbonnais","Braque Francais","Braque Saint-Germain","Briard","Briquet Griffon Vendéen","Brittany","Broholmer","Bruno Jura Hound","Brussels Griffon","Bucovina Shepherd Dog","Bull Arab","Bull Terrier","Bulldog","Bullmastiff","Bully Kutta","Burgos Pointer","Cairn Terrier","Campeiro Bulldog","Canaan Dog","Canadian Eskimo Dog","Cane Corso","Cane di Oropa","Cane Paratore","Cantabrian Water Dog","Can de Chira","Cão da Serra de Aires","Cão de Castro Laboreiro","Cão de Gado Transmontano","Cão Fila de São Miguel","Cardigan Welsh Corgi","Carea Castellano Manchego","Carolina Dog","Carpathian Shepherd Dog","Catahoula Leopard Dog","Catalan Sheepdog","Caucasian Shepherd Dog","Cavalier King Charles Spaniel","Central Asian Shepherd Dog","Cesky Fousek","Cesky Terrier","Chesapeake Bay Retriever","Chien Français Blanc et Noir","Chien Français Blanc et Orange","Chien Français Tricolore","Chihuahua","Chilean Terrier","Chinese Chongqing Dog","Chinese Crested Dog","Chinook","Chippiparai","Chongqing dog","Chortai","Chow Chow","Cimarrón Uruguayo","Cirneco dell'Etna","Clumber Spaniel","Colombian fino hound","Coton de Tulear","Cretan Hound","Croatian Sheepdog","Curly-Coated Retriever","Cursinu","Czechoslovakian Wolfdog","Dachshund","Dalmatian","Dandie Dinmont Terrier","Danish-Swedish Farmdog","Denmark Feist","Dingo","Doberman Pinscher","Dogo Argentino","Dogo Guatemalteco","Dogo Sardesco","Dogue Brasileiro","Dogue de Bordeaux","Drentse Patrijshond","Drever","Dunker","Dutch Shepherd","Dutch Smoushond","East Siberian Laika","East European Shepherd","English Cocker Spaniel","English Foxhound","English Mastiff","English Setter","English Shepherd","English Springer Spaniel","English Toy Terrier","Entlebucher Mountain Dog","Estonian Hound","Estrela Mountain Dog","Eurasier","Field Spaniel","Fila Brasileiro","Finnish Hound","Finnish Lapphund","Finnish Spitz","Flat-Coated Retriever","French Bulldog","French Spaniel","Galgo Español","Galician Shepherd Dog","Garafian Shepherd","Gascon Saintongeois","Georgian Shepherd","German Hound","German Longhaired Pointer","German Pinscher","German Roughhaired Pointer","German Shepherd Dog","German Shorthaired Pointer","German Spaniel","German Spitz","German Wirehaired Pointer","Giant Schnauzer","Glen of Imaal Terrier","Golden Retriever","Gończy Polski","Gordon Setter","Grand Anglo-Français Blanc et Noir","Grand Anglo-Français Blanc et Orange","Grand Anglo-Français Tricolore","Grand Basset Griffon Vendéen","Grand Bleu de Gascogne","Grand Griffon Vendéen","Great Dane","Greater Swiss Mountain Dog","Greek Harehound","Greek Shepherd","Greenland Dog","Greyhound","Griffon Bleu de Gascogne","Griffon Fauve de Bretagne","Griffon Nivernais","Gull Dong","Gull Terrier","Hällefors Elkhound","Hamiltonstövare","Hanover Hound","Harrier","Havanese","Hierran Wolfdog","Hokkaido","Hovawart","Huntaway","Hygen Hound","Ibizan Hound","Icelandic Sheepdog","Indian pariah dog","Indian Spitz","Irish Red and White Setter","Irish Setter","Irish Terrier","Irish Water Spaniel","Irish Wolfhound","Istrian Coarse-haired Hound","Istrian Shorthaired Hound","Italian Greyhound","Jack Russell Terrier","Jagdterrier","Japanese Chin","Japanese Spitz","Japanese Terrier","Jindo","Jonangi","Kai Ken","Kaikadi","Kangal Shepherd Dog","Kanni","Karakachan dog","Karelian Bear Dog","Kars","Karst Shepherd","Keeshond","Kerry Beagle","Kerry Blue Terrier","King Charles Spaniel","King Shepherd","Kintamani","Kishu","Kokoni","Kombai","Komondor","Kooikerhondje","Koolie","Koyun dog","Kromfohrländer","Kuchi","Kuvasz","Labrador Retriever","Lagotto Romagnolo","Lakeland Terrier","Lancashire Heeler","Landseer","Lapponian Herder","Large Münsterländer","Leonberger","Levriero Sardo","Lhasa Apso","Lithuanian Hound","Löwchen","Lupo Italiano","Mackenzie River Husky","Magyar agár","Mahratta Greyhound","Maltese","Manchester Terrier","Maremmano-Abruzzese Sheepdog","McNab dog","Miniature American Shepherd","Miniature Bull Terrier","Miniature Fox Terrier","Miniature Pinscher","Miniature Schnauzer","Molossus of Epirus","Montenegrin Mountain Hound","Mountain Cur","Mountain Feist","Mucuchies","Mudhol Hound","Mudi","Neapolitan Mastiff","New Guinea Singing Dog","New Zealand Heading Dog","Newfoundland","Norfolk Terrier","Norrbottenspets","Northern Inuit Dog","Norwegian Buhund","Norwegian Elkhound","Norwegian Lundehund","Norwich Terrier","Nova Scotia Duck Tolling Retriever","Old Croatian Sighthound","Old Danish Pointer","Old English Sheepdog","Old English Terrier","Olde English Bulldogge","Otterhound","Pachon Navarro","Pampas Deerhound","Paisley Terrier","Papillon","Parson Russell Terrier","Pastore della Lessinia e del Lagorai","Patagonian Sheepdog","Patterdale Terrier","Pekingese","Pembroke Welsh Corgi","Perro Majorero","Perro de Pastor Mallorquin","Perro de Presa Canario","Perro de Presa Mallorquin","Peruvian Inca Orchid","Petit Basset Griffon Vendéen","Petit Bleu de Gascogne","Phalène","Pharaoh Hound","Phu Quoc Ridgeback","Picardy Spaniel","Plummer Terrier","Plott Hound","Podenco Canario","Podenco Valenciano","Pointer","Poitevin","Polish Greyhound","Polish Hound","Polish Lowland Sheepdog","Polish Tatra Sheepdog","Pomeranian","Pont-Audemer Spaniel","Poodle","Porcelaine","Portuguese Podengo","Portuguese Pointer","Portuguese Water Dog","Posavac Hound","Pražský Krysařík","Pshdar Dog","Pudelpointer","Pug","Puli","Pumi","Pungsan Dog","Pyrenean Mastiff","Pyrenean Mountain Dog","Pyrenean Sheepdog","Rafeiro do Alentejo","Rajapalayam","Rampur Greyhound","Rat Terrier","Ratonero Bodeguero Andaluz","Ratonero Mallorquin","Ratonero Murciano de Huerta","Ratonero Valenciano","Redbone Coonhound","Rhodesian Ridgeback","Romanian Mioritic Shepherd Dog","Romanian Raven Shepherd Dog","Rottweiler","Rough Collie","Russian Spaniel","Russian Toy","Russo-European Laika","Saarloos Wolfdog","Sabueso Español","Saint Bernard","Saint Hubert Jura Hound","Saint-Usuge Spaniel","Saluki","Samoyed","Sapsali","Sarabi dog","Šarplaninac","Schapendoes","Schillerstövare","Schipperke","Schweizer Laufhund","Schweizerischer Niederlaufhund","Scottish Deerhound","Scottish Terrier","Sealyham Terrier","Segugio dell'Appennino","Segugio Italiano","Segugio Maremmano","Seppala Siberian Sleddog","Serbian Hound","Serbian Tricolour Hound","Serrano Bulldog","Shar Pei","Shetland Sheepdog","Shiba Inu","Shih Tzu","Shikoku","Shiloh Shepherd","Siberian Husky","Silken Windhound","Silky Terrier","Sinhala Hound","Skye Terrier","Sloughi","Slovakian Wirehaired Pointer","Slovenský Cuvac","Slovenský Kopov","Smalandstövare","Small Greek domestic dog","Small Münsterländer","Smooth Collie","Smooth Fox Terrier","Soft-Coated Wheaten Terrier","South Russian Ovcharka","Spanish Mastiff","Spanish Water Dog","Spinone Italiano","Sporting Lucas Terrier","Sardinian Shepherd Dog","Stabyhoun","Staffordshire Bull Terrier","Standard Schnauzer","Stephens Stock","Styrian Coarse-haired Hound","Sussex Spaniel","Swedish Elkhound","Swedish Lapphund","Swedish Vallhund","Swedish White Elkhound","Taigan","Taiwan Dog","Tamaskan Dog","Teddy Roosevelt Terrier","Telomian","Tenterfield Terrier","Terrier Brasileiro","Thai Bangkaew Dog","Thai Ridgeback","Tibetan Mastiff","Tibetan Spaniel","Tibetan Terrier","Tornjak","Tosa","Toy Fox Terrier","Toy Manchester Terrier","Transylvanian Hound","Treeing Cur","Treeing Feist","Treeing Tennessee Brindle","Treeing Walker Coonhound","Trigg Hound","Tyrolean Hound","Vikhan","Villano de Las Encartaciones","Villanuco de Las Encartaciones","Vizsla","Volpino Italiano","Weimaraner","Welsh Sheepdog","Welsh Springer Spaniel","Welsh Terrier","West Highland White Terrier","West Siberian Laika","Westphalian Dachsbracke","Wetterhoun","Whippet","White Shepherd","White Swiss Shepherd Dog","Wire Fox Terrier","Wirehaired Pointing Griffon","Wirehaired Vizsla","Xiasi Dog","Xoloitzcuintli","Yakutian Laika","Yorkshire Terrier"]})),hI=c((()=>{Xt=["Grass carp","Peruvian anchoveta","Silver carp","Common carp","Asari","Japanese littleneck","Filipino Venus","Japanese cockle","Alaska pollock","Nile tilapia","Whiteleg shrimp","Bighead carp","Skipjack tuna","Catla","Crucian carp","Atlantic salmon","Atlantic herring","Chub mackerel","Rohu","Yellowfin tuna","Japanese anchovy","Largehead hairtail","Atlantic cod","European pilchard","Capelin","Jumbo flying squid","Milkfish","Atlantic mackerel","Rainbow trout","Araucanian herring","Wuchang bream","Gulf menhaden","Indian oil sardine","Black carp","European anchovy","Northern snakehead","Pacific cod","Pacific saury","Pacific herring","Bigeye tuna","Chilean jack mackerel","Yellow croaker","Haddock","Gazami crab","Amur catfish","Japanese common catfish","European sprat","Pink salmon","Mrigal carp","Channel catfish","Blood cockle","Blue whiting","Hilsa shad","Daggertooth pike conger","California pilchard","Cape horse mackerel","Pacific anchoveta","Japanese flying squid","Pollock","Chinese softshell turtle","Kawakawa","Indian mackerel","Asian swamp eel","Argentine hake","Short mackerel","Southern rough shrimp","Southern African anchovy","Pond loach","Iridescent shark","Mandarin fish","Chinese perch","Nile perch","Round sardinella","Japanese pilchard","Bombay-duck","Yellowhead catfish","Korean bullhead","Narrow-barred Spanish mackerel","Albacore","Madeiran sardinella","Bonga shad","Silver cyprinid","Nile tilapia","Longtail tuna","Atlantic menhaden","North Pacific hake","Atlantic horse mackerel","Japanese jack mackerel","Pacific thread herring","Bigeye scad","Yellowstripe scad","Chum salmon","Blue swimming crab","Pacific sand lance","Pacific sandlance","Goldstripe sardinella"]})),pI=c((()=>{eo=["American Albino","Abaco Barb","Abtenauer","Abyssinian","Aegidienberger","Akhal-Teke","Albanian Horse","Altai Horse","Altèr Real","American Cream Draft","American Indian Horse","American Paint Horse","American Quarter Horse","American Saddlebred","American Warmblood","Andalusian Horse","Andravida Horse","Anglo-Arabian","Anglo-Arabo-Sardo","Anglo-Kabarda","Appaloosa","AraAppaloosa","Arabian Horse","Ardennes Horse","Arenberg-Nordkirchen","Argentine Criollo","Asian wild Horse","Assateague Horse","Asturcón","Augeron","Australian Brumby","Australian Draught Horse","Australian Stock Horse","Austrian Warmblood","Auvergne Horse","Auxois","Azerbaijan Horse","Azteca Horse","Baise Horse","Bale","Balearic Horse","Balikun Horse","Baluchi Horse","Banker Horse","Barb Horse","Bardigiano","Bashkir Curly","Basque Mountain Horse","Bavarian Warmblood","Belgian Half-blood","Belgian Horse","Belgian Warmblood ","Bhutia Horse","Black Forest Horse","Blazer Horse","Boerperd","Borana","Boulonnais Horse","Brabant","Brandenburger","Brazilian Sport Horse","Breton Horse","Brumby","Budyonny Horse","Burguete Horse","Burmese Horse","Byelorussian Harness Horse","Calabrese Horse","Camargue Horse","Camarillo White Horse","Campeiro","Campolina","Canadian Horse","Canadian Pacer","Carolina Marsh Tacky","Carthusian Horse","Caspian Horse","Castilian Horse","Castillonnais","Catria Horse","Cavallo Romano della Maremma Laziale","Cerbat Mustang","Chickasaw Horse","Chilean Corralero","Choctaw Horse","Cleveland Bay","Clydesdale Horse","Cob","Coldblood Trotter","Colonial Spanish Horse","Colorado Ranger","Comtois Horse","Corsican Horse","Costa Rican Saddle Horse","Cretan Horse","Criollo Horse","Croatian Coldblood","Cuban Criollo","Cumberland Island Horse","Curly Horse","Czech Warmblood","Daliboz","Danish Warmblood","Danube Delta Horse","Dole Gudbrandsdal","Don","Dongola Horse","Draft Trotter","Dutch Harness Horse","Dutch Heavy Draft","Dutch Warmblood","Dzungarian Horse","East Bulgarian","East Friesian Horse","Estonian Draft","Estonian Horse","Falabella","Faroese","Finnhorse","Fjord Horse","Fleuve","Florida Cracker Horse","Foutanké","Frederiksborg Horse","Freiberger","French Trotter","Friesian Cross","Friesian Horse","Friesian Sporthorse","Furioso-North Star","Galiceño","Galician Pony","Gelderland Horse","Georgian Grande Horse","German Warmblood","Giara Horse","Gidran","Groningen Horse","Gypsy Horse","Hackney Horse","Haflinger","Hanoverian Horse","Heck Horse","Heihe Horse","Henson Horse","Hequ Horse","Hirzai","Hispano-Bretón","Holsteiner Horse","Horro","Hungarian Warmblood","Icelandic Horse","Iomud","Irish Draught","Irish Sport Horse sometimes called Irish Hunter","Italian Heavy Draft","Italian Trotter","Jaca Navarra","Jeju Horse","Jutland Horse","Kabarda Horse","Kafa","Kaimanawa Horses","Kalmyk Horse","Karabair","Karabakh Horse","Karachai Horse","Karossier","Kathiawari","Kazakh Horse","Kentucky Mountain Saddle Horse","Kiger Mustang","Kinsky Horse","Kisber Felver","Kiso Horse","Kladruber","Knabstrupper","Konik","Kundudo","Kustanair","Kyrgyz Horse","Latvian Horse","Lipizzan","Lithuanian Heavy Draught","Lokai","Losino Horse","Lusitano","Lyngshest","M'Bayar","M'Par","Mallorquín","Malopolski","Mangalarga","Mangalarga Marchador","Maremmano","Marismeño Horse","Marsh Tacky","Marwari Horse","Mecklenburger","Međimurje Horse","Menorquín","Mérens Horse","Messara Horse","Metis Trotter","Mezőhegyesi Sport Horse","Miniature Horse","Misaki Horse","Missouri Fox Trotter","Monchina","Mongolian Horse","Mongolian Wild Horse","Monterufolino","Morab","Morgan Horse","Mountain Pleasure Horse","Moyle Horse","Murakoz Horse","Murgese","Mustang Horse","Namib Desert Horse","Nangchen Horse","National Show Horse","Nez Perce Horse","Nivernais Horse","Nokota Horse","Noma","Nonius Horse","Nooitgedachter","Nordlandshest","Noriker Horse","Norman Cob","North American Single-Footer Horse","North Swedish Horse","Norwegian Coldblood Trotter","Norwegian Fjord","Novokirghiz","Oberlander Horse","Ogaden","Oldenburg Horse","Orlov trotter","Ostfriesen","Paint","Pampa Horse","Paso Fino","Pentro Horse","Percheron","Persano Horse","Peruvian Paso","Pintabian","Pleven Horse","Poitevin Horse","Posavac Horse","Pottok","Pryor Mountain Mustang","Przewalski's Horse","Pura Raza Española","Purosangue Orientale","Qatgani","Quarab","Quarter Horse","Racking Horse","Retuerta Horse","Rhenish German Coldblood","Rhinelander Horse","Riwoche Horse","Rocky Mountain Horse","Romanian Sporthorse","Rottaler","Russian Don","Russian Heavy Draft","Russian Trotter","Saddlebred","Salerno Horse","Samolaco Horse","San Fratello Horse","Sarcidano Horse","Sardinian Anglo-Arab","Schleswig Coldblood","Schwarzwälder Kaltblut","Selale","Sella Italiano","Selle Français","Shagya Arabian","Shan Horse","Shire Horse","Siciliano Indigeno","Silesian Horse","Sokolsky Horse","Sorraia","South German Coldblood","Soviet Heavy Draft","Spanish Anglo-Arab","Spanish Barb","Spanish Jennet Horse","Spanish Mustang","Spanish Tarpan","Spanish-Norman Horse","Spiti Horse","Spotted Saddle Horse","Standardbred Horse","Suffolk Punch","Swedish Ardennes","Swedish coldblood trotter","Swedish Warmblood","Swiss Warmblood","Taishū Horse","Takhi","Tawleed","Tchernomor","Tennessee Walking Horse","Tersk Horse","Thoroughbred","Tiger Horse","Tinker Horse","Tolfetano","Tori Horse","Trait Du Nord","Trakehner","Tsushima","Tuigpaard","Ukrainian Riding Horse","Unmol Horse","Uzunyayla","Ventasso Horse","Virginia Highlander","Vlaamperd","Vladimir Heavy Draft","Vyatka","Waler","Waler Horse","Walkaloosa","Warlander","Warmblood","Welsh Cob","Westphalian Horse","Wielkopolski","Württemberger","Xilingol Horse","Yakutian Horse","Yili Horse","Yonaguni Horse","Zaniskari","Žemaitukas","Zhemaichu","Zweibrücker"]})),mI=c((()=>{ao=["Acacia-ants","Acorn-plum gall","Aerial yellowjacket","Africanized honey bee","Allegheny mound ant","Almond stone wasp","Ant","Arboreal ant","Argentine ant","Asian paper wasp","Baldfaced hornet","Bee","Bigheaded ant","Black and yellow mud dauber","Black carpenter ant","Black imported fire ant","Blue horntail woodwasp","Blue orchard bee","Braconid wasp","Bumble bee","Carpenter ant","Carpenter wasp","Chalcid wasp","Cicada killer","Citrus blackfly parasitoid","Common paper wasp","Crazy ant","Cuckoo wasp","Cynipid gall wasp","Eastern Carpenter bee","Eastern yellowjacket","Elm sawfly","Encyrtid wasp","Erythrina gall wasp","Eulophid wasp","European hornet","European imported fire ant","False honey ant","Fire ant","Forest bachac","Forest yellowjacket","German yellowjacket","Ghost ant","Giant ichneumon wasp","Giant resin bee","Giant wood wasp","Golden northern bumble bee","Golden paper wasp","Gouty oak gall","Grass Carrying Wasp","Great black wasp","Great golden digger wasp","Hackberry nipple gall parasitoid","Honey bee","Horned oak gall","Horse guard wasp","Horse guard wasp","Hunting wasp","Ichneumonid wasp","Keyhole wasp","Knopper gall","Large garden bumble bee","Large oak-apple gall","Leafcutting bee","Little fire ant","Little yellow ant","Long-horned bees","Long-legged ant","Macao paper wasp","Mallow bee","Marble gall","Mossyrose gall wasp","Mud-daubers","Multiflora rose seed chalcid","Oak apple gall wasp","Oak rough bulletgall wasp","Oak saucer gall","Oak shoot sawfly","Odorous house ant","Orange-tailed bumble bee","Orangetailed potter wasp","Oriental chestnut gall wasp","Paper wasp","Pavement ant","Pigeon tremex","Pip gall wasp","Prairie yellowjacket","Pteromalid wasp","Pyramid ant","Raspberry Horntail","Red ant","Red carpenter ant","Red harvester ant","Red imported fire ant","Red wasp","Red wood ant","Red-tailed wasp","Reddish carpenter ant","Rough harvester ant","Sawfly parasitic wasp","Scale parasitoid","Silky ant","Sirex woodwasp","Siricid woodwasp","Smaller yellow ant","Southeastern blueberry bee","Southern fire ant","Southern yellowjacket","Sphecid wasp","Stony gall","Sweat bee","Texas leafcutting ant","Tiphiid wasp","Torymid wasp","Tramp ant","Valentine ant","Velvet ant","Vespid wasp","Weevil parasitoid","Western harvester ant","Western paper wasp","Western thatching ant","Western yellowjacket","White-horned horntail","Willow shoot sawfly","Woodwasp","Wool sower gall maker","Yellow and black potter wasp","Yellow Crazy Ant","Yellow-horned horntail"]})),fI=c((()=>{no=["Asiatic Lion","Barbary Lion","West African Lion","Northeast Congo Lion","Masai Lion","Transvaal lion","Cape lion"]})),vI=c((()=>{io=["American","American Chinchilla","American Fuzzy Lop","American Sable","Argente Brun","Belgian Hare","Beveren","Blanc de Hotot","Britannia Petite","Californian","Champagne D’Argent","Checkered Giant","Cinnamon","Crème D’Argent","Dutch","Dwarf Hotot","English Angora","English Lop","English Spot","Flemish Giant","Florida White","French Angora","French Lop","Giant Angora","Giant Chinchilla","Harlequin","Havana","Himalayan","Holland Lop","Jersey Wooly","Lilac","Lionhead","Mini Lop","Mini Rex","Mini Satin","Netherland Dwarf","New Zealand","Palomino","Polish","Rex","Rhinelander","Satin","Satin Angora","Silver","Silver Fox","Silver Marten","Standard Chinchilla","Tan","Thrianta"]})),gI=c((()=>{ro=["Viper Adder","Common adder","Death Adder","Desert death adder","Horned adder","Long-nosed adder","Many-horned adder","Mountain adder","Mud adder","Namaqua dwarf adder","Nightingale adder","Peringuey's adder","Puff adder","African puff adder","Rhombic night adder","Sand adder","Dwarf sand adder","Namib dwarf sand adder","Water adder","Aesculapian snake","Anaconda","Bolivian anaconda","De Schauensee's anaconda","Green anaconda","Yellow anaconda","Arafura file snake","Asp","European asp","Egyptian asp","African beaked snake","Ball Python","Bird snake","Black-headed snake","Mexican black kingsnake","Black rat snake","Black snake","Red-bellied black snake","Blind snake","Brahminy blind snake","Texas blind snake","Western blind snake","Boa","Abaco Island boa","Amazon tree boa","Boa constrictor","Cuban boa","Dumeril's boa","Dwarf boa","Emerald tree boa","Hogg Island boa","Jamaican boa","Madagascar ground boa","Madagascar tree boa","Puerto Rican boa","Rainbow boa","Red-tailed boa","Rosy boa","Rubber boa","Sand boa","Tree boa","Boiga","Boomslang","Brown snake","Eastern brown snake","Bull snake","Bushmaster","Dwarf beaked snake","Rufous beaked snake","Canebrake","Cantil","Cascabel","Cat-eyed snake","Banded cat-eyed snake","Green cat-eyed snake","Cat snake","Andaman cat snake","Beddome's cat snake","Dog-toothed cat snake","Forsten's cat snake","Gold-ringed cat snake","Gray cat snake","Many-spotted cat snake","Tawny cat snake","Chicken snake","Coachwhip snake","Cobra","Andaman cobra","Arabian cobra","Asian cobra","Banded water cobra","Black-necked cobra","Black-necked spitting cobra","Black tree cobra","Burrowing cobra","Cape cobra","Caspian cobra","Congo water cobra","Common cobra","Eastern water cobra","Egyptian cobra","Equatorial spitting cobra","False cobra","False water cobra","Forest cobra","Gold tree cobra","Indian cobra","Indochinese spitting cobra","Javan spitting cobra","King cobra","Mandalay cobra","Mozambique spitting cobra","North Philippine cobra","Nubian spitting cobra","Philippine cobra","Red spitting cobra","Rinkhals cobra","Shield-nosed cobra","Sinai desert cobra","Southern Indonesian spitting cobra","Southern Philippine cobra","Southwestern black spitting cobra","Snouted cobra","Spectacled cobra","Spitting cobra","Storm water cobra","Thai cobra","Taiwan cobra","Zebra spitting cobra","Collett's snake","Congo snake","Copperhead","American copperhead","Australian copperhead","Coral snake","Arizona coral snake","Beddome's coral snake","Brazilian coral snake","Cape coral snake","Harlequin coral snake","High Woods coral snake","Malayan long-glanded coral snake","Texas Coral Snake","Western coral snake","Corn snake","South eastern corn snake","Cottonmouth","Crowned snake","Cuban wood snake","Eastern hognose snake","Egg-eater","Eastern coral snake","Fer-de-lance","Fierce snake","Fishing snake","Flying snake","Golden tree snake","Indian flying snake","Moluccan flying snake","Ornate flying snake","Paradise flying snake","Twin-Barred tree snake","Banded Flying Snake","Fox snake, three species of Pantherophis","Forest flame snake","Garter snake","Checkered garter snake","Common garter snake","San Francisco garter snake","Texas garter snake","Cape gopher snake","Grass snake","Green snake","Rough green snake","Smooth green snake","Ground snake","Common ground snake","Three-lined ground snake","Western ground snake","Habu","Hognose snake","Blonde hognose snake","Dusty hognose snake","Eastern hognose snake","Jan's hognose snake","Giant Malagasy hognose snake","Mexican hognose snake","South American hognose snake","Hundred pacer","Ikaheka snake","Indigo snake","Jamaican Tree Snake","Keelback","Asian keelback","Assam keelback","Black-striped keelback","Buff striped keelback","Burmese keelback","Checkered keelback","Common keelback","Hill keelback","Himalayan keelback","Khasi Hills keelback","Modest keelback","Nicobar Island keelback","Nilgiri keelback","Orange-collared keelback","Red-necked keelback","Sikkim keelback","Speckle-bellied keelback","White-lipped keelback","Wynaad keelback","Yunnan keelback","King brown","King cobra","King snake","California kingsnake","Desert kingsnake","Grey-banded kingsnake","North eastern king snake","Prairie kingsnake","Scarlet kingsnake","Speckled kingsnake","Krait","Banded krait","Blue krait","Black krait","Burmese krait","Ceylon krait","Indian krait","Lesser black krait","Malayan krait","Many-banded krait","Northeastern hill krait","Red-headed krait","Sind krait","Large shield snake","Lancehead","Common lancehead","Lora","Grey Lora","Lyre snake","Baja California lyresnake","Central American lyre snake","Texas lyre snake","Eastern lyre snake","Machete savane","Mamba","Black mamba","Green mamba","Eastern green mamba","Western green mamba","Mamushi","Mangrove snake","Milk snake","Moccasin snake","Montpellier snake","Mud snake","Eastern mud snake","Western mud snake","Mussurana","Night snake","Cat-eyed night snake","Texas night snake","Nichell snake","Narrowhead Garter Snake","Nose-horned viper","Rhinoceros viper","Vipera ammodytes","Parrot snake","Mexican parrot snake","Patchnose snake","Perrotet's shieldtail snake","Pine snake","Pipe snake","Asian pipe snake","Dwarf pipe snake","Red-tailed pipe snake","Python","African rock python","Amethystine python","Angolan python","Australian scrub python","Ball python","Bismarck ringed python","Black headed python","Blood python","Boelen python","Borneo short-tailed python","Bredl's python","Brown water python","Burmese python","Calabar python","Western carpet python","Centralian carpet python","Coastal carpet python","Inland carpet python","Jungle carpet python","New Guinea carpet python","Northwestern carpet python","Southwestern carpet python","Children's python","Dauan Island water python","Desert woma python","Diamond python","Flinders python","Green tree python","Halmahera python","Indian python","Indonesian water python","Macklot's python","Mollucan python","Oenpelli python","Olive python","Papuan python","Pygmy python","Red blood python","Reticulated python","Kayaudi dwarf reticulated python","Selayer reticulated python","Rough-scaled python","Royal python","Savu python","Spotted python","Stimson's python","Sumatran short-tailed python","Tanimbar python","Timor python","Wetar Island python","White-lipped python","Brown white-lipped python","Northern white-lipped python","Southern white-lipped python","Woma python","Western woma python","Queen snake","Racer","Bimini racer","Buttermilk racer","Eastern racer","Eastern yellowbelly sad racer","Mexican racer","Southern black racer","Tan racer","West Indian racer","Raddysnake","Southwestern blackhead snake","Rat snake","Baird's rat snake","Beauty rat snake","Great Plains rat snake","Green rat snake","Japanese forest rat snake","Japanese rat snake","King rat snake","Mandarin rat snake","Persian rat snake","Red-backed rat snake","Twin-spotted rat snake","Yellow-striped rat snake","Manchurian Black Water Snake","Rattlesnake","Arizona black rattlesnake","Aruba rattlesnake","Chihuahuan ridge-nosed rattlesnake","Coronado Island rattlesnake","Durango rock rattlesnake","Dusky pigmy rattlesnake","Eastern diamondback rattlesnake","Grand Canyon rattlesnake","Great Basin rattlesnake","Hopi rattlesnake","Lance-headed rattlesnake","Long-tailed rattlesnake","Massasauga rattlesnake","Mexican green rattlesnake","Mexican west coast rattlesnake","Midget faded rattlesnake","Mojave rattlesnake","Northern black-tailed rattlesnake","Oaxacan small-headed rattlesnake","Rattler","Red diamond rattlesnake","Southern Pacific rattlesnake","Southwestern speckled rattlesnake","Tancitaran dusky rattlesnake","Tiger rattlesnake","Timber rattlesnake","Tropical rattlesnake","Twin-spotted rattlesnake","Uracoan rattlesnake","Western diamondback rattlesnake","Ribbon snake","Rinkhals","River jack","Sea snake","Annulated sea snake","Beaked sea snake","Dubois's sea snake","Hardwicke's sea snake","Hook Nosed Sea Snake","Olive sea snake","Pelagic sea snake","Stoke's sea snake","Yellow-banded sea snake","Yellow-bellied sea snake","Yellow-lipped sea snake","Shield-tailed snake","Sidewinder","Colorado desert sidewinder","Mojave desert sidewinder","Sonoran sidewinder","Small-eyed snake","Smooth snake","Brazilian smooth snake","European smooth snake","Stiletto snake","Striped snake","Japanese striped snake","Sunbeam snake","Taipan","Central ranges taipan","Coastal taipan","Inland taipan","Paupan taipan","Tentacled snake","Tic polonga","Tiger snake","Chappell Island tiger snake","Common tiger snake","Down's tiger snake","Eastern tiger snake","King Island tiger snake","Krefft's tiger snake","Peninsula tiger snake","Tasmanian tiger snake","Western tiger snake","Tigre snake","Tree snake","Blanding's tree snake","Blunt-headed tree snake","Brown tree snake","Long-nosed tree snake","Many-banded tree snake","Northern tree snake","Trinket snake","Black-banded trinket snake","Twig snake","African twig snake","Twin Headed King Snake","Titanboa","Urutu","Vine snake","Asian Vine Snake, Whip Snake","American Vine Snake","Mexican vine snake","Viper","Asp viper","Bamboo viper","Bluntnose viper","Brazilian mud Viper","Burrowing viper","Bush viper","Great Lakes bush viper","Hairy bush viper","Nitsche's bush viper","Rough-scaled bush viper","Spiny bush viper","Carpet viper","Crossed viper","Cyclades blunt-nosed viper","Eyelash viper","False horned viper","Fea's viper","Fifty pacer","Gaboon viper","Hognosed viper","Horned desert viper","Horned viper","Jumping viper","Kaznakov's viper","Leaf-nosed viper","Leaf viper","Levant viper","Long-nosed viper","McMahon's viper","Mole viper","Nose-horned viper","Rhinoceros viper","Vipera ammodytes","Palestine viper","Pallas' viper","Palm viper","Amazonian palm viper","Black-speckled palm-pitviper","Eyelash palm-pitviper","Green palm viper","Mexican palm-pitviper","Guatemalan palm viper","Honduran palm viper","Siamese palm viper","Side-striped palm-pitviper","Yellow-lined palm viper","Pit viper","Banded pitviper","Bamboo pitviper","Barbour's pit viper","Black-tailed horned pit viper","Bornean pitviper","Brongersma's pitviper","Brown spotted pitviper[4]","Cantor's pitviper","Elegant pitviper","Eyelash pit viper","Fan-Si-Pan horned pitviper","Flat-nosed pitviper","Godman's pit viper","Green tree pit viper","Habu pit viper","Hagen's pitviper","Horseshoe pitviper","Jerdon's pitviper","Kanburian pit viper","Kaulback's lance-headed pitviper","Kham Plateau pitviper","Large-eyed pitviper","Malabar rock pitviper","Malayan pit viper","Mangrove pit viper","Mangshan pitviper","Motuo bamboo pitviper","Nicobar bamboo pitviper","Philippine pitviper","Pointed-scaled pit viper[5]","Red-tailed bamboo pitviper","Schultze's pitviper","Stejneger's bamboo pitviper","Sri Lankan pit viper","Temple pit viper","Tibetan bamboo pitviper","Tiger pit viper","Undulated pit viper","Wagler's pit viper","Wirot's pit viper","Portuguese viper","Saw-scaled viper","Schlegel's viper","Sedge viper","Sharp-nosed viper","Snorkel viper","Temple viper","Tree viper","Chinese tree viper","Guatemalan tree viper","Hutton's tree viper","Indian tree viper","Large-scaled tree viper","Malcolm's tree viper","Nitsche's tree viper","Pope's tree viper","Rough-scaled tree viper","Rungwe tree viper","Sumatran tree viper","White-lipped tree viper","Ursini's viper","Western hog-nosed viper","Wart snake","Water moccasin","Water snake","Bocourt's water snake","Northern water snake","Whip snake","Long-nosed whip snake","Wolf snake","African wolf snake","Barred wolf snake","Worm snake","Common worm snake","Longnosed worm snake","Wutu","Yarara","Zebra snake"]})),kI=c((()=>{to=["dog","cat","snake","bear","lion","cetacean","insect","crocodilia","cow","bird","fish","rabbit","horse"]})),yI=c((()=>{tI(),oI(),sI(),lI(),uI(),cI(),dI(),hI(),pI(),mI(),fI(),vI(),gI(),kI(),oo={bear:Ut,bird:Wt,cat:Zt,cetacean:qt,cow:Qt,crocodilia:Yt,dog:$t,fish:Xt,horse:eo,insect:ao,lion:no,rabbit:io,snake:ro,type:to}})),bI=c((()=>{so=["#{Name.name}","#{Company.name}"]})),SI=c((()=>{lo=["Redhold","Treeflex","Trippledex","Kanlam","Bigtax","Daltfresh","Toughjoyfax","Mat Lam Tam","Otcom","Tres-Zap","Y-Solowarm","Tresom","Voltsillam","Biodex","Greenlam","Viva","Matsoft","Temp","Zoolab","Subin","Rank","Job","Stringtough","Tin","It","Home Ing","Zamit","Sonsing","Konklab","Alpha","Latlux","Voyatouch","Alphazap","Holdlamis","Zaam-Dox","Sub-Ex","Quo Lux","Bamity","Ventosanzap","Lotstring","Hatity","Tempsoft","Overhold","Fixflex","Konklux","Zontrax","Tampflex","Span","Namfix","Transcof","Stim","Fix San","Sonair","Stronghold","Fintone","Y-find","Opela","Lotlux","Ronstring","Zathin","Duobam","Keylex"]})),AI=c((()=>{uo=["0.#.#","0.##","#.##","#.#","#.#.#"]})),MI=c((()=>{bI(),SI(),AI(),co={author:so,name:lo,version:uo}})),TI=c((()=>{ho=["2011-10-12","2012-11-12","2015-11-11","2013-9-12"]})),_I=c((()=>{po=["1234-2121-1221-1211","1212-1221-1121-1234","1211-1221-1234-2201","1228-1221-1221-1431"]})),wI=c((()=>{mo=["visa","mastercard","americanexpress","discover"]})),jI=c((()=>{TI(),_I(),wI(),fo={credit_card_expiry_dates:ho,credit_card_numbers:po,credit_card_types:mo}})),EI=c((()=>{vo=["###-###-####","(###) ###-####","1-###-###-####","###.###.####"]})),NI=c((()=>{EI(),go={formats:vo}})),BI=c((()=>{ko=["red","green","blue","yellow","purple","mint green","teal","white","black","orange","pink","grey","maroon","violet","turquoise","tan","sky blue","salmon","plum","orchid","olive","magenta","lime","ivory","indigo","gold","fuchsia","cyan","azure","lavender","silver"]})),PI=c((()=>{yo=["Books","Movies","Music","Games","Electronics","Computers","Home","Garden","Tools","Grocery","Health","Beauty","Toys","Kids","Baby","Clothing","Shoes","Jewelery","Sports","Outdoors","Automotive","Industrial"]})),LI=c((()=>{bo=["Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support","The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive","New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016","The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality","The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design","The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J","The Football Is Good For Training And Recreational Purposes","Carbonite web goalkeeper gloves are ergonomically designed to give easy fit","Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles","New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart","The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients","Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals"]})),DI=c((()=>{So={adjective:["Small","Ergonomic","Rustic","Intelligent","Gorgeous","Incredible","Fantastic","Practical","Sleek","Awesome","Generic","Handcrafted","Handmade","Licensed","Refined","Unbranded","Tasty"],material:["Steel","Wooden","Concrete","Plastic","Cotton","Granite","Rubber","Metal","Soft","Fresh","Frozen"],product:["Chair","Car","Computer","Keyboard","Mouse","Bike","Ball","Gloves","Pants","Shirt","Table","Shoes","Hat","Towels","Soap","Tuna","Chicken","Fish","Cheese","Bacon","Pizza","Salad","Sausages","Chips"]}})),xI=c((()=>{BI(),PI(),LI(),DI(),Ao={color:ko,department:yo,product_description:bo,product_name:So}})),CI=c((()=>{Mo=["Adaptive","Advanced","Ameliorated","Assimilated","Automated","Balanced","Business-focused","Centralized","Cloned","Compatible","Configurable","Cross-group","Cross-platform","Customer-focused","Customizable","Decentralized","De-engineered","Devolved","Digitized","Distributed","Diverse","Down-sized","Enhanced","Enterprise-wide","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Function-based","Fundamental","Future-proofed","Grass-roots","Horizontal","Implemented","Innovative","Integrated","Intuitive","Inverse","Managed","Mandatory","Monitored","Multi-channelled","Multi-lateral","Multi-layered","Multi-tiered","Networked","Object-based","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Pre-emptive","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Re-contextualized","Re-engineered","Reduced","Reverse-engineered","Right-sized","Robust","Seamless","Secured","Self-enabling","Sharable","Stand-alone","Streamlined","Switchable","Synchronised","Synergistic","Synergized","Team-oriented","Total","Triple-buffered","Universal","Up-sized","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary","Vision-oriented"]})),KI=c((()=>{To=["clicks-and-mortar","value-added","vertical","proactive","robust","revolutionary","scalable","leading-edge","innovative","intuitive","strategic","e-business","mission-critical","sticky","one-to-one","24/7","end-to-end","global","B2B","B2C","granular","frictionless","virtual","viral","dynamic","24/365","best-of-breed","killer","magnetic","bleeding-edge","web-enabled","interactive","dot-com","sexy","back-end","real-time","efficient","front-end","distributed","seamless","extensible","turn-key","world-class","open-source","cross-platform","cross-media","synergistic","bricks-and-clicks","out-of-the-box","enterprise","integrated","impactful","wireless","transparent","next-generation","cutting-edge","user-centric","visionary","customized","ubiquitous","plug-and-play","collaborative","compelling","holistic","rich"]})),RI=c((()=>{_o=["synergies","web-readiness","paradigms","markets","partnerships","infrastructures","platforms","initiatives","channels","eyeballs","communities","ROI","solutions","e-tailers","e-services","action-items","portals","niches","technologies","content","vortals","supply-chains","convergence","relationships","architectures","interfaces","e-markets","e-commerce","systems","bandwidth","infomediaries","models","mindshare","deliverables","users","schemas","networks","applications","metrics","e-business","functionalities","experiences","web services","methodologies","blockchains"]})),zI=c((()=>{wo=["implement","utilize","integrate","streamline","optimize","evolve","transform","embrace","enable","orchestrate","leverage","reinvent","aggregate","architect","enhance","incentivize","morph","empower","envisioneer","monetize","harness","facilitate","seize","disintermediate","synergize","strategize","deploy","brand","grow","target","syndicate","synthesize","deliver","mesh","incubate","engage","maximize","benchmark","expedite","reintermediate","whiteboard","visualize","repurpose","innovate","scale","unleash","drive","extend","engineer","revolutionize","generate","exploit","transition","e-enable","iterate","cultivate","matrix","productize","redefine","recontextualize"]})),OI=c((()=>{jo=["24 hour","24/7","3rd generation","4th generation","5th generation","6th generation","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","background","bandwidth-monitored","bi-directional","bifurcated","bottom-line","clear-thinking","client-driven","client-server","coherent","cohesive","composite","context-sensitive","contextually-based","content-based","dedicated","demand-driven","didactic","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","even-keeled","executive","explicit","exuding","fault-tolerant","foreground","fresh-thinking","full-range","global","grid-enabled","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","multimedia","multi-state","multi-tasking","national","needs-based","neutral","next generation","non-volatile","object-oriented","optimal","optimizing","radical","real-time","reciprocal","regional","responsive","scalable","secondary","solution-oriented","stable","static","systematic","systemic","system-worthy","tangible","tertiary","transitional","uniform","upward-trending","user-facing","value-added","web-enabled","well-modulated","zero administration","zero defect","zero tolerance"]})),II=c((()=>{Eo=["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} and #{Name.last_name}"]})),VI=c((()=>{No=["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","artificial intelligence","array","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","database","data-warehouse","definition","emulation","encoding","encryption","extranet","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","Graphic Interface","groupware","Graphical User Interface","hardware","help-desk","hierarchy","hub","implementation","info-mediaries","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge user","knowledge base","local area network","leverage","matrices","matrix","methodology","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","open system","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","secured line","service-desk","software","solution","standardization","strategy","structure","success","superstructure","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"]})),GI=c((()=>{Bo=["Inc","and Sons","LLC","Group"]})),HI=c((()=>{CI(),KI(),RI(),zI(),OI(),II(),VI(),GI(),Po={bs_adjective:To,bs_noun:_o,bs_verb:wo,adjective:Mo,descriptor:jo,noun:No,suffix:Bo,name:Eo}})),FI=c((()=>{Lo=["utf8_unicode_ci","utf8_general_ci","utf8_bin","ascii_bin","ascii_general_ci","cp1250_bin","cp1250_general_ci"]})),JI=c((()=>{Do=["id","title","name","email","phone","token","group","category","password","comment","avatar","status","createdAt","updatedAt"]})),UI=c((()=>{xo=["InnoDB","MyISAM","MEMORY","CSV","BLACKHOLE","ARCHIVE"]})),WI=c((()=>{Co=["int","varchar","text","date","datetime","tinyint","time","timestamp","smallint","mediumint","bigint","decimal","float","double","real","bit","boolean","serial","blob","binary","enum","set","geometry","point"]})),ZI=c((()=>{FI(),JI(),UI(),WI(),Ko={collation:Lo,column:Do,engine:xo,type:Co}})),qI=c((()=>{Ro={wide:["January","February","March","April","May","June","July","August","September","October","November","December"],wide_context:["January","February","March","April","May","June","July","August","September","October","November","December"],abbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],abbr_context:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}})),QI=c((()=>{zo={wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],wide_context:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],abbr:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],abbr_context:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]}})),YI=c((()=>{qI(),QI(),Oo={month:Ro,weekday:zo}})),$I=c((()=>{Io=["Checking","Savings","Money Market","Investment","Home Loan","Credit Card","Auto Loan","Personal Loan"]})),XI=c((()=>{Vo=["34##-######-####L","37##-######-####L"]})),eV=c((()=>{Go=["30[0-5]#-######-###L","36##-######-###L","54##-####-####-###L"]})),aV=c((()=>{Ho=["6011-####-####-###L","65##-####-####-###L","64[4-9]#-####-####-###L","6011-62##-####-####-###L","65##-62##-####-####-###L","64[4-9]#-62##-####-####-###L"]})),nV=c((()=>{Fo=["63[7-9]#-####-####-###L"]})),iV=c((()=>{Jo=["3528-####-####-###L","3529-####-####-###L","35[3-8]#-####-####-###L"]})),rV=c((()=>{Uo=["6304###########L","6706###########L","6771###########L","6709###########L","6304#########{5,6}L","6706#########{5,6}L","6771#########{5,6}L","6709#########{5,6}L"]})),tV=c((()=>{Wo=["5018-#{4}-#{4}-#{3}L","5020-#{4}-#{4}-#{3}L","5038-#{4}-#{4}-#{3}L","5893-#{4}-#{4}-#{3}L","6304-#{4}-#{4}-#{3}L","6759-#{4}-#{4}-#{3}L","676[1-3]-####-####-###L","5018#{11,15}L","5020#{11,15}L","5038#{11,15}L","5893#{11,15}L","6304#{11,15}L","6759#{11,15}L","676[1-3]#{11,15}L"]})),oV=c((()=>{Zo=["5[1-5]##-####-####-###L","6771-89##-####-###L"]})),sV=c((()=>{qo=["6767-####-####-###L","6767-####-####-####-#L","6767-####-####-####-##L"]})),lV=c((()=>{Qo=["6759-####-####-###L","6759-####-####-####-#L","6759-####-####-####-##L"]})),uV=c((()=>{Yo=["4###########L","4###-####-####-###L"]})),cV=c((()=>{XI(),eV(),aV(),nV(),iV(),rV(),tV(),oV(),sV(),lV(),uV(),$o={american_express:Vo,diners_club:Go,discover:Ho,instapayment:Fo,jcb:Jo,laser:Uo,maestro:Wo,mastercard:Zo,solo:qo,switch:Qo,visa:Yo}})),dV=c((()=>{Xo={"UAE Dirham":{code:"AED",symbol:""},Afghani:{code:"AFN",symbol:"؋"},Lek:{code:"ALL",symbol:"Lek"},"Armenian Dram":{code:"AMD",symbol:""},"Netherlands Antillian Guilder":{code:"ANG",symbol:"ƒ"},Kwanza:{code:"AOA",symbol:""},"Argentine Peso":{code:"ARS",symbol:"$"},"Australian Dollar":{code:"AUD",symbol:"$"},"Aruban Guilder":{code:"AWG",symbol:"ƒ"},"Azerbaijanian Manat":{code:"AZN",symbol:"ман"},"Convertible Marks":{code:"BAM",symbol:"KM"},"Barbados Dollar":{code:"BBD",symbol:"$"},Taka:{code:"BDT",symbol:""},"Bulgarian Lev":{code:"BGN",symbol:"лв"},"Bahraini Dinar":{code:"BHD",symbol:""},"Burundi Franc":{code:"BIF",symbol:""},"Bermudian Dollar (customarily known as Bermuda Dollar)":{code:"BMD",symbol:"$"},"Brunei Dollar":{code:"BND",symbol:"$"},"Boliviano boliviano":{code:"BOB",symbol:"Bs"},"Brazilian Real":{code:"BRL",symbol:"R$"},"Bahamian Dollar":{code:"BSD",symbol:"$"},Pula:{code:"BWP",symbol:"P"},"Belarussian Ruble":{code:"BYR",symbol:"p."},"Belize Dollar":{code:"BZD",symbol:"BZ$"},"Canadian Dollar":{code:"CAD",symbol:"$"},"Congolese Franc":{code:"CDF",symbol:""},"Swiss Franc":{code:"CHF",symbol:"CHF"},"Chilean Peso":{code:"CLP",symbol:"$"},"Yuan Renminbi":{code:"CNY",symbol:"¥"},"Colombian Peso":{code:"COP",symbol:"$"},"Costa Rican Colon":{code:"CRC",symbol:"₡"},"Cuban Peso":{code:"CUP",symbol:"₱"},"Cuban Peso Convertible":{code:"CUC",symbol:"$"},"Cape Verde Escudo":{code:"CVE",symbol:""},"Czech Koruna":{code:"CZK",symbol:"Kč"},"Djibouti Franc":{code:"DJF",symbol:""},"Danish Krone":{code:"DKK",symbol:"kr"},"Dominican Peso":{code:"DOP",symbol:"RD$"},"Algerian Dinar":{code:"DZD",symbol:""},Kroon:{code:"EEK",symbol:""},"Egyptian Pound":{code:"EGP",symbol:"£"},Nakfa:{code:"ERN",symbol:""},"Ethiopian Birr":{code:"ETB",symbol:""},Euro:{code:"EUR",symbol:"€"},"Fiji Dollar":{code:"FJD",symbol:"$"},"Falkland Islands Pound":{code:"FKP",symbol:"£"},"Pound Sterling":{code:"GBP",symbol:"£"},Lari:{code:"GEL",symbol:""},Cedi:{code:"GHS",symbol:""},"Gibraltar Pound":{code:"GIP",symbol:"£"},Dalasi:{code:"GMD",symbol:""},"Guinea Franc":{code:"GNF",symbol:""},Quetzal:{code:"GTQ",symbol:"Q"},"Guyana Dollar":{code:"GYD",symbol:"$"},"Hong Kong Dollar":{code:"HKD",symbol:"$"},Lempira:{code:"HNL",symbol:"L"},"Croatian Kuna":{code:"HRK",symbol:"kn"},Gourde:{code:"HTG",symbol:""},Forint:{code:"HUF",symbol:"Ft"},Rupiah:{code:"IDR",symbol:"Rp"},"New Israeli Sheqel":{code:"ILS",symbol:"₪"},"Bhutanese Ngultrum":{code:"BTN",symbol:"Nu"},"Indian Rupee":{code:"INR",symbol:"₹"},"Iraqi Dinar":{code:"IQD",symbol:""},"Iranian Rial":{code:"IRR",symbol:"﷼"},"Iceland Krona":{code:"ISK",symbol:"kr"},"Jamaican Dollar":{code:"JMD",symbol:"J$"},"Jordanian Dinar":{code:"JOD",symbol:""},Yen:{code:"JPY",symbol:"¥"},"Kenyan Shilling":{code:"KES",symbol:""},Som:{code:"KGS",symbol:"лв"},Riel:{code:"KHR",symbol:"៛"},"Comoro Franc":{code:"KMF",symbol:""},"North Korean Won":{code:"KPW",symbol:"₩"},Won:{code:"KRW",symbol:"₩"},"Kuwaiti Dinar":{code:"KWD",symbol:""},"Cayman Islands Dollar":{code:"KYD",symbol:"$"},Tenge:{code:"KZT",symbol:"лв"},Kip:{code:"LAK",symbol:"₭"},"Lebanese Pound":{code:"LBP",symbol:"£"},"Sri Lanka Rupee":{code:"LKR",symbol:"₨"},"Liberian Dollar":{code:"LRD",symbol:"$"},"Lithuanian Litas":{code:"LTL",symbol:"Lt"},"Latvian Lats":{code:"LVL",symbol:"Ls"},"Libyan Dinar":{code:"LYD",symbol:""},"Moroccan Dirham":{code:"MAD",symbol:""},"Moldovan Leu":{code:"MDL",symbol:""},"Malagasy Ariary":{code:"MGA",symbol:""},Denar:{code:"MKD",symbol:"ден"},Kyat:{code:"MMK",symbol:""},Tugrik:{code:"MNT",symbol:"₮"},Pataca:{code:"MOP",symbol:""},Ouguiya:{code:"MRO",symbol:""},"Mauritius Rupee":{code:"MUR",symbol:"₨"},Rufiyaa:{code:"MVR",symbol:""},Kwacha:{code:"MWK",symbol:""},"Mexican Peso":{code:"MXN",symbol:"$"},"Malaysian Ringgit":{code:"MYR",symbol:"RM"},Metical:{code:"MZN",symbol:"MT"},Naira:{code:"NGN",symbol:"₦"},"Cordoba Oro":{code:"NIO",symbol:"C$"},"Norwegian Krone":{code:"NOK",symbol:"kr"},"Nepalese Rupee":{code:"NPR",symbol:"₨"},"New Zealand Dollar":{code:"NZD",symbol:"$"},"Rial Omani":{code:"OMR",symbol:"﷼"},Balboa:{code:"PAB",symbol:"B/."},"Nuevo Sol":{code:"PEN",symbol:"S/."},Kina:{code:"PGK",symbol:""},"Philippine Peso":{code:"PHP",symbol:"Php"},"Pakistan Rupee":{code:"PKR",symbol:"₨"},Zloty:{code:"PLN",symbol:"zł"},Guarani:{code:"PYG",symbol:"Gs"},"Qatari Rial":{code:"QAR",symbol:"﷼"},"New Leu":{code:"RON",symbol:"lei"},"Serbian Dinar":{code:"RSD",symbol:"Дин."},"Russian Ruble":{code:"RUB",symbol:"руб"},"Rwanda Franc":{code:"RWF",symbol:""},"Saudi Riyal":{code:"SAR",symbol:"﷼"},"Solomon Islands Dollar":{code:"SBD",symbol:"$"},"Seychelles Rupee":{code:"SCR",symbol:"₨"},"Sudanese Pound":{code:"SDG",symbol:""},"Swedish Krona":{code:"SEK",symbol:"kr"},"Singapore Dollar":{code:"SGD",symbol:"$"},"Saint Helena Pound":{code:"SHP",symbol:"£"},Leone:{code:"SLL",symbol:""},"Somali Shilling":{code:"SOS",symbol:"S"},"Surinam Dollar":{code:"SRD",symbol:"$"},Dobra:{code:"STN",symbol:"Db"},"El Salvador Colon":{code:"SVC",symbol:"₡"},"Syrian Pound":{code:"SYP",symbol:"£"},Lilangeni:{code:"SZL",symbol:""},Baht:{code:"THB",symbol:"฿"},Somoni:{code:"TJS",symbol:""},Manat:{code:"TMT",symbol:""},"Tunisian Dinar":{code:"TND",symbol:""},"Pa'anga":{code:"TOP",symbol:""},"Turkish Lira":{code:"TRY",symbol:"₺"},"Trinidad and Tobago Dollar":{code:"TTD",symbol:"TT$"},"New Taiwan Dollar":{code:"TWD",symbol:"NT$"},"Tanzanian Shilling":{code:"TZS",symbol:""},Hryvnia:{code:"UAH",symbol:"₴"},"Uganda Shilling":{code:"UGX",symbol:""},"US Dollar":{code:"USD",symbol:"$"},"Peso Uruguayo":{code:"UYU",symbol:"$U"},"Uzbekistan Sum":{code:"UZS",symbol:"лв"},"Bolivar Fuerte":{code:"VEF",symbol:"Bs"},Dong:{code:"VND",symbol:"₫"},Vatu:{code:"VUV",symbol:""},Tala:{code:"WST",symbol:""},"CFA Franc BEAC":{code:"XAF",symbol:""},Silver:{code:"XAG",symbol:""},Gold:{code:"XAU",symbol:""},"Bond Markets Units European Composite Unit (EURCO)":{code:"XBA",symbol:""},"European Monetary Unit (E.M.U.-6)":{code:"XBB",symbol:""},"European Unit of Account 9(E.U.A.-9)":{code:"XBC",symbol:""},"European Unit of Account 17(E.U.A.-17)":{code:"XBD",symbol:""},"East Caribbean Dollar":{code:"XCD",symbol:"$"},SDR:{code:"XDR",symbol:""},"UIC-Franc":{code:"XFU",symbol:""},"CFA Franc BCEAO":{code:"XOF",symbol:""},Palladium:{code:"XPD",symbol:""},"CFP Franc":{code:"XPF",symbol:""},Platinum:{code:"XPT",symbol:""},"Codes specifically reserved for testing purposes":{code:"XTS",symbol:""},"Yemeni Rial":{code:"YER",symbol:"﷼"},Rand:{code:"ZAR",symbol:"R"},"Lesotho Loti":{code:"LSL",symbol:""},"Namibia Dollar":{code:"NAD",symbol:"N$"},"Zambian Kwacha":{code:"ZMK",symbol:""},"Zimbabwe Dollar":{code:"ZWL",symbol:""}}})),hV=c((()=>{es=["deposit","withdrawal","payment","invoice"]})),pV=c((()=>{$I(),cV(),dV(),hV(),as={account_type:Io,credit_card:$o,currency:Xo,transaction_type:es}})),mV=c((()=>{ns=["TCP","HTTP","SDD","RAM","GB","CSS","SSL","AGP","SQL","FTP","PCI","AI","ADP","RSS","XML","EXE","COM","HDD","THX","SMTP","SMS","USB","PNG","SAS","IB","SCSI","JSON","XSS","JBOD"]})),fV=c((()=>{is=["auxiliary","primary","back-end","digital","open-source","virtual","cross-platform","redundant","online","haptic","multi-byte","bluetooth","wireless","1080p","neural","optical","solid state","mobile"]})),vV=c((()=>{rs=["backing up","bypassing","hacking","overriding","compressing","copying","navigating","indexing","connecting","generating","quantifying","calculating","synthesizing","transmitting","programming","parsing"]})),gV=c((()=>{ts=["driver","protocol","bandwidth","panel","microchip","program","port","card","array","interface","system","sensor","firewall","hard drive","pixel","alarm","feed","monitor","application","transmitter","bus","circuit","capacitor","matrix"]})),kV=c((()=>{os=["If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!","We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!","Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!","You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!","Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!","The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!","{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!","I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!"]})),yV=c((()=>{ss=["back up","bypass","hack","override","compress","copy","navigate","index","connect","generate","quantify","calculate","synthesize","input","transmit","program","reboot","parse"]})),bV=c((()=>{mV(),fV(),vV(),gV(),kV(),yV(),ls={abbreviation:ns,adjective:is,ingverb:rs,noun:ts,phrase:os,verb:ss}})),SV=c((()=>{us=["0therplanet_128.jpg","1markiz_128.jpg","2fockus_128.jpg","8d3k_128.jpg","91bilal_128.jpg","9lessons_128.jpg","AM_Kn2_128.jpg","AlbertoCococi_128.jpg","BenouarradeM_128.jpg","BillSKenney_128.jpg","BrianPurkiss_128.jpg","BroumiYoussef_128.jpg","BryanHorsey_128.jpg","Chakintosh_128.jpg","ChrisFarina78_128.jpg","Elt_n_128.jpg","GavicoInd_128.jpg","HenryHoffman_128.jpg","IsaryAmairani_128.jpg","Karimmove_128.jpg","LucasPerdidao_128.jpg","ManikRathee_128.jpg","RussellBishop_128.jpg","S0ufi4n3_128.jpg","SULiik_128.jpg","Shriiiiimp_128.jpg","Silveredge9_128.jpg","Skyhartman_128.jpg","SlaapMe_128.jpg","Stievius_128.jpg","Talbi_ConSept_128.jpg","VMilescu_128.jpg","VinThomas_128.jpg","YoungCutlass_128.jpg","ZacharyZorbas_128.jpg","_dwite__128.jpg","_kkga_128.jpg","_pedropinho_128.jpg","_ragzor_128.jpg","_scottburgess_128.jpg","_shahedk_128.jpg","_victa_128.jpg","_vojto_128.jpg","_williamguerra_128.jpg","_yardenoon_128.jpg","a1chapone_128.jpg","a_brixen_128.jpg","a_harris88_128.jpg","aaronalfred_128.jpg","aaroni_128.jpg","aaronkwhite_128.jpg","abdots_128.jpg","abdulhyeuk_128.jpg","abdullindenis_128.jpg","abelcabans_128.jpg","abotap_128.jpg","abovefunction_128.jpg","adamawesomeface_128.jpg","adammarsbar_128.jpg","adamnac_128.jpg","adamsxu_128.jpg","adellecharles_128.jpg","ademilter_128.jpg","adhamdannaway_128.jpg","adhiardana_128.jpg","adityasutomo_128.jpg","adobi_128.jpg","adrienths_128.jpg","aeon56_128.jpg","afusinatto_128.jpg","agromov_128.jpg","agustincruiz_128.jpg","ah_lice_128.jpg","ahmadajmi_128.jpg","ahmetalpbalkan_128.jpg","ahmetsulek_128.jpg","aiiaiiaii_128.jpg","ainsleywagon_128.jpg","aio____128.jpg","airskylar_128.jpg","aislinnkelly_128.jpg","ajaxy_ru_128.jpg","aka_james_128.jpg","akashsharma39_128.jpg","akmalfikri_128.jpg","akmur_128.jpg","al_li_128.jpg","alagoon_128.jpg","alan_zhang__128.jpg","albertaugustin_128.jpg","alecarpentier_128.jpg","aleclarsoniv_128.jpg","aleinadsays_128.jpg","alek_djuric_128.jpg","aleksitappura_128.jpg","alessandroribe_128.jpg","alevizio_128.jpg","alexandermayes_128.jpg","alexivanichkin_128.jpg","algunsanabria_128.jpg","allagringaus_128.jpg","allfordesign_128.jpg","allthingssmitty_128.jpg","alsobrooks_128.jpg","alterchuca_128.jpg","aluisio_azevedo_128.jpg","alxleroydeval_128.jpg","alxndrustinov_128.jpg","amandabuzard_128.jpg","amanruzaini_128.jpg","amayvs_128.jpg","amywebbb_128.jpg","anaami_128.jpg","anasnakawa_128.jpg","anatolinicolae_128.jpg","andrea211087_128.jpg","andreas_pr_128.jpg","andresdjasso_128.jpg","andresenfredrik_128.jpg","andrewabogado_128.jpg","andrewarrow_128.jpg","andrewcohen_128.jpg","andrewofficer_128.jpg","andyisonline_128.jpg","andysolomon_128.jpg","andytlaw_128.jpg","angelceballos_128.jpg","angelcolberg_128.jpg","angelcreative_128.jpg","anjhero_128.jpg","ankitind_128.jpg","anoff_128.jpg","anthonysukow_128.jpg","antjanus_128.jpg","antongenkin_128.jpg","antonyryndya_128.jpg","antonyzotov_128.jpg","aoimedia_128.jpg","apriendeau_128.jpg","arashmanteghi_128.jpg","areandacom_128.jpg","areus_128.jpg","ariffsetiawan_128.jpg","ariil_128.jpg","arindam__128.jpg","arishi__128.jpg","arkokoley_128.jpg","aroon_sharma_128.jpg","arpitnj_128.jpg","artd_sign_128.jpg","artem_kostenko_128.jpg","arthurholcombe1_128.jpg","artvavs_128.jpg","ashernatali_128.jpg","ashocka18_128.jpg","atanism_128.jpg","atariboy_128.jpg","ateneupopular_128.jpg","attacks_128.jpg","aviddayentonbay_128.jpg","axel_128.jpg","badlittleduck_128.jpg","bagawarman_128.jpg","baires_128.jpg","balakayuriy_128.jpg","balintorosz_128.jpg","baliomega_128.jpg","baluli_128.jpg","bargaorobalo_128.jpg","barputro_128.jpg","bartjo_128.jpg","bartoszdawydzik_128.jpg","bassamology_128.jpg","batsirai_128.jpg","baumann_alex_128.jpg","baumannzone_128.jpg","bboy1895_128.jpg","bcrad_128.jpg","begreative_128.jpg","belyaev_rs_128.jpg","benefritz_128.jpg","benjamin_knight_128.jpg","bennyjien_128.jpg","benoitboucart_128.jpg","bereto_128.jpg","bergmartin_128.jpg","bermonpainter_128.jpg","bertboerland_128.jpg","besbujupi_128.jpg","beshur_128.jpg","betraydan_128.jpg","beweinreich_128.jpg","bfrohs_128.jpg","bighanddesign_128.jpg","bigmancho_128.jpg","billyroshan_128.jpg","bistrianiosip_128.jpg","blakehawksworth_128.jpg","blakesimkins_128.jpg","bluefx__128.jpg","bluesix_128.jpg","bobbytwoshoes_128.jpg","bobwassermann_128.jpg","bolzanmarco_128.jpg","borantula_128.jpg","borges_marcos_128.jpg","bowbrick_128.jpg","boxmodel_128.jpg","bpartridge_128.jpg","bradenhamm_128.jpg","brajeshwar_128.jpg","brandclay_128.jpg","brandonburke_128.jpg","brandonflatsoda_128.jpg","brandonmorreale_128.jpg","brenmurrell_128.jpg","brenton_clarke_128.jpg","bruno_mart_128.jpg","brunodesign1206_128.jpg","bryan_topham_128.jpg","bu7921_128.jpg","bublienko_128.jpg","buddhasource_128.jpg","buleswapnil_128.jpg","bungiwan_128.jpg","buryaknick_128.jpg","buzzusborne_128.jpg","byrnecore_128.jpg","byryan_128.jpg","cadikkara_128.jpg","calebjoyce_128.jpg","calebogden_128.jpg","canapud_128.jpg","carbontwelve_128.jpg","carlfairclough_128.jpg","carlosblanco_eu_128.jpg","carlosgavina_128.jpg","carlosjgsousa_128.jpg","carlosm_128.jpg","carlyson_128.jpg","caseycavanagh_128.jpg","caspergrl_128.jpg","catadeleon_128.jpg","catarino_128.jpg","cboller1_128.jpg","cbracco_128.jpg","ccinojasso1_128.jpg","cdavis565_128.jpg","cdharrison_128.jpg","ceekaytweet_128.jpg","cemshid_128.jpg","cggaurav_128.jpg","chaabane_wail_128.jpg","chacky14_128.jpg","chadami_128.jpg","chadengle_128.jpg","chaensel_128.jpg","chandlervdw_128.jpg","chanpory_128.jpg","charlesrpratt_128.jpg","charliecwaite_128.jpg","charliegann_128.jpg","chatyrko_128.jpg","cherif_b_128.jpg","chris_frees_128.jpg","chris_witko_128.jpg","chrismj83_128.jpg","chrisslowik_128.jpg","chrisstumph_128.jpg","christianoliff_128.jpg","chrisvanderkooi_128.jpg","ciaranr_128.jpg","cicerobr_128.jpg","claudioguglieri_128.jpg","cloudstudio_128.jpg","clubb3rry_128.jpg","cocolero_128.jpg","codepoet_ru_128.jpg","coderdiaz_128.jpg","codysanfilippo_128.jpg","cofla_128.jpg","colgruv_128.jpg","colirpixoil_128.jpg","collegeman_128.jpg","commadelimited_128.jpg","conspirator_128.jpg","constantx_128.jpg","coreyginnivan_128.jpg","coreyhaggard_128.jpg","coreyweb_128.jpg","craigelimeliah_128.jpg","craighenneberry_128.jpg","craigrcoles_128.jpg","creartinc_128.jpg","croakx_128.jpg","curiousoffice_128.jpg","curiousonaut_128.jpg","cybind_128.jpg","cynthiasavard_128.jpg","cyril_gaillard_128.jpg","d00maz_128.jpg","d33pthought_128.jpg","d_kobelyatsky_128.jpg","d_nny_m_cher_128.jpg","dactrtr_128.jpg","dahparra_128.jpg","dallasbpeters_128.jpg","damenleeturks_128.jpg","danillos_128.jpg","daniloc_128.jpg","danmartin70_128.jpg","dannol_128.jpg","danpliego_128.jpg","danro_128.jpg","dansowter_128.jpg","danthms_128.jpg","danvernon_128.jpg","danvierich_128.jpg","darcystonge_128.jpg","darylws_128.jpg","davecraige_128.jpg","davidbaldie_128.jpg","davidcazalis_128.jpg","davidhemphill_128.jpg","davidmerrique_128.jpg","davidsasda_128.jpg","dawidwu_128.jpg","daykiine_128.jpg","dc_user_128.jpg","dcalonaci_128.jpg","ddggccaa_128.jpg","de_ascanio_128.jpg","deeenright_128.jpg","demersdesigns_128.jpg","denisepires_128.jpg","depaulawagner_128.jpg","derekcramer_128.jpg","derekebradley_128.jpg","derienzo777_128.jpg","desastrozo_128.jpg","designervzm_128.jpg","dev_essentials_128.jpg","devankoshal_128.jpg","deviljho__128.jpg","devinhalladay_128.jpg","dgajjar_128.jpg","dgclegg_128.jpg","dhilipsiva_128.jpg","dhoot_amit_128.jpg","dhooyenga_128.jpg","dhrubo_128.jpg","diansigitp_128.jpg","dicesales_128.jpg","diesellaws_128.jpg","digitalmaverick_128.jpg","dimaposnyy_128.jpg","dingyi_128.jpg","divya_128.jpg","dixchen_128.jpg","djsherman_128.jpg","dmackerman_128.jpg","dmitriychuta_128.jpg","dnezkumar_128.jpg","dnirmal_128.jpg","donjain_128.jpg","doooon_128.jpg","doronmalki_128.jpg","dorphern_128.jpg","dotgridline_128.jpg","dparrelli_128.jpg","dpmachado_128.jpg","dreizle_128.jpg","drewbyreese_128.jpg","dshster_128.jpg","dss49_128.jpg","dudestein_128.jpg","duivvv_128.jpg","dutchnadia_128.jpg","dvdwinden_128.jpg","dzantievm_128.jpg","ecommerceil_128.jpg","eddiechen_128.jpg","edgarchris99_128.jpg","edhenderson_128.jpg","edkf_128.jpg","edobene_128.jpg","eduardostuart_128.jpg","ehsandiary_128.jpg","eitarafa_128.jpg","el_fuertisimo_128.jpg","elbuscainfo_128.jpg","elenadissi_128.jpg","elisabethkjaer_128.jpg","elliotlewis_128.jpg","elliotnolten_128.jpg","embrcecreations_128.jpg","emileboudeling_128.jpg","emmandenn_128.jpg","emmeffess_128.jpg","emsgulam_128.jpg","enda_128.jpg","enjoythetau_128.jpg","enricocicconi_128.jpg","envex_128.jpg","ernestsemerda_128.jpg","erwanhesry_128.jpg","estebanuribe_128.jpg","eugeneeweb_128.jpg","evandrix_128.jpg","evanshajed_128.jpg","exentrich_128.jpg","eyronn_128.jpg","fabbianz_128.jpg","fabbrucci_128.jpg","faisalabid_128.jpg","falconerie_128.jpg","falling_soul_128.jpg","falvarad_128.jpg","felipeapiress_128.jpg","felipecsl_128.jpg","ffbel_128.jpg","finchjke_128.jpg","findingjenny_128.jpg","fiterik_128.jpg","fjaguero_128.jpg","flashmurphy_128.jpg","flexrs_128.jpg","foczzi_128.jpg","fotomagin_128.jpg","fran_mchamy_128.jpg","francis_vega_128.jpg","franciscoamk_128.jpg","frankiefreesbie_128.jpg","fronx_128.jpg","funwatercat_128.jpg","g3d_128.jpg","gaborenton_128.jpg","gabrielizalo_128.jpg","gabrielrosser_128.jpg","ganserene_128.jpg","garand_128.jpg","gauchomatt_128.jpg","gauravjassal_128.jpg","gavr1l0_128.jpg","gcmorley_128.jpg","gearpixels_128.jpg","geneseleznev_128.jpg","geobikas_128.jpg","geran7_128.jpg","geshan_128.jpg","giancarlon_128.jpg","gipsy_raf_128.jpg","giuliusa_128.jpg","gizmeedevil1991_128.jpg","gkaam_128.jpg","gmourier_128.jpg","goddardlewis_128.jpg","gofrasdesign_128.jpg","gojeanyn_128.jpg","gonzalorobaina_128.jpg","grahamkennery_128.jpg","greenbes_128.jpg","gregkilian_128.jpg","gregrwilkinson_128.jpg","gregsqueeb_128.jpg","grrr_nl_128.jpg","gseguin_128.jpg","gt_128.jpg","gu5taf_128.jpg","guiiipontes_128.jpg","guillemboti_128.jpg","guischmitt_128.jpg","gusoto_128.jpg","h1brd_128.jpg","hafeeskhan_128.jpg","hai_ninh_nguyen_128.jpg","haligaliharun_128.jpg","hanna_smi_128.jpg","happypeter1983_128.jpg","harry_sistalam_128.jpg","haruintesettden_128.jpg","hasslunsford_128.jpg","haydn_woods_128.jpg","helderleal_128.jpg","hellofeverrrr_128.jpg","her_ruu_128.jpg","herbigt_128.jpg","herkulano_128.jpg","hermanobrother_128.jpg","herrhaase_128.jpg","heycamtaylor_128.jpg","heyimjuani_128.jpg","heykenneth_128.jpg","hfalucas_128.jpg","hgharrygo_128.jpg","hiemil_128.jpg","hjartstrorn_128.jpg","hoangloi_128.jpg","holdenweb_128.jpg","homka_128.jpg","horaciobella_128.jpg","hota_v_128.jpg","hsinyo23_128.jpg","hugocornejo_128.jpg","hugomano_128.jpg","iamgarth_128.jpg","iamglimy_128.jpg","iamjdeleon_128.jpg","iamkarna_128.jpg","iamkeithmason_128.jpg","iamsteffen_128.jpg","id835559_128.jpg","idiot_128.jpg","iduuck_128.jpg","ifarafonow_128.jpg","igorgarybaldi_128.jpg","illyzoren_128.jpg","ilya_pestov_128.jpg","imammuht_128.jpg","imcoding_128.jpg","imomenui_128.jpg","imsoper_128.jpg","increase_128.jpg","incubo82_128.jpg","instalox_128.jpg","ionuss_128.jpg","ipavelek_128.jpg","iqbalperkasa_128.jpg","iqonicd_128.jpg","irae_128.jpg","isaacfifth_128.jpg","isacosta_128.jpg","ismail_biltagi_128.jpg","isnifer_128.jpg","itolmach_128.jpg","itsajimithing_128.jpg","itskawsar_128.jpg","itstotallyamy_128.jpg","ivanfilipovbg_128.jpg","j04ntoh_128.jpg","j2deme_128.jpg","j_drake__128.jpg","jackiesaik_128.jpg","jacksonlatka_128.jpg","jacobbennett_128.jpg","jagan123_128.jpg","jakemoore_128.jpg","jamiebrittain_128.jpg","janpalounek_128.jpg","jarjan_128.jpg","jarsen_128.jpg","jasonmarkjones_128.jpg","javorszky_128.jpg","jay_wilburn_128.jpg","jayphen_128.jpg","jayrobinson_128.jpg","jcubic_128.jpg","jedbridges_128.jpg","jefffis_128.jpg","jeffgolenski_128.jpg","jehnglynn_128.jpg","jennyshen_128.jpg","jennyyo_128.jpg","jeremery_128.jpg","jeremiaha_128.jpg","jeremiespoken_128.jpg","jeremymouton_128.jpg","jeremyshimko_128.jpg","jeremyworboys_128.jpg","jerrybai1907_128.jpg","jervo_128.jpg","jesseddy_128.jpg","jffgrdnr_128.jpg","jghyllebert_128.jpg","jimmuirhead_128.jpg","jitachi_128.jpg","jjshaw14_128.jpg","jjsiii_128.jpg","jlsolerdeltoro_128.jpg","jm_denis_128.jpg","jmfsocial_128.jpg","jmillspaysbills_128.jpg","jnmnrd_128.jpg","joannefournier_128.jpg","joaoedumedeiros_128.jpg","jodytaggart_128.jpg","joe_black_128.jpg","joelcipriano_128.jpg","joelhelin_128.jpg","joemdesign_128.jpg","joetruesdell_128.jpg","joeymurdah_128.jpg","johannesneu_128.jpg","johncafazza_128.jpg","johndezember_128.jpg","johnriordan_128.jpg","johnsmithagency_128.jpg","joki4_128.jpg","jomarmen_128.jpg","jonathansimmons_128.jpg","jonkspr_128.jpg","jonsgotwood_128.jpg","jordyvdboom_128.jpg","joreira_128.jpg","josecarlospsh_128.jpg","josemarques_128.jpg","josep_martins_128.jpg","josevnclch_128.jpg","joshaustin_128.jpg","joshhemsley_128.jpg","joshmedeski_128.jpg","joshuaraichur_128.jpg","joshuasortino_128.jpg","jpenico_128.jpg","jpscribbles_128.jpg","jqiuss_128.jpg","juamperro_128.jpg","juangomezw_128.jpg","juanmamartinez_128.jpg","juaumlol_128.jpg","judzhin_miles_128.jpg","justinrgraham_128.jpg","justinrhee_128.jpg","justinrob_128.jpg","justme_timothyg_128.jpg","jwalter14_128.jpg","jydesign_128.jpg","kaelifa_128.jpg","kalmerrautam_128.jpg","kamal_chaneman_128.jpg","kanickairaj_128.jpg","kapaluccio_128.jpg","karalek_128.jpg","karlkanall_128.jpg","karolkrakowiak__128.jpg","karsh_128.jpg","karthipanraj_128.jpg","kaspernordkvist_128.jpg","katiemdaly_128.jpg","kaysix_dizzy_128.jpg","kazaky999_128.jpg","kennyadr_128.jpg","kerem_128.jpg","kerihenare_128.jpg","keryilmaz_128.jpg","kevinjohndayy_128.jpg","kevinoh_128.jpg","kevka_128.jpg","keyuri85_128.jpg","kianoshp_128.jpg","kijanmaharjan_128.jpg","kikillo_128.jpg","kimcool_128.jpg","kinday_128.jpg","kirangopal_128.jpg","kiwiupover_128.jpg","kkusaa_128.jpg","klefue_128.jpg","klimmka_128.jpg","knilob_128.jpg","kohette_128.jpg","kojourin_128.jpg","kolage_128.jpg","kolmarlopez_128.jpg","kolsvein_128.jpg","konus_128.jpg","koridhandy_128.jpg","kosmar_128.jpg","kostaspt_128.jpg","krasnoukhov_128.jpg","krystalfister_128.jpg","kucingbelang4_128.jpg","kudretkeskin_128.jpg","kuldarkalvik_128.jpg","kumarrajan12123_128.jpg","kurafire_128.jpg","kurtinc_128.jpg","kushsolitary_128.jpg","kvasnic_128.jpg","ky_128.jpg","kylefoundry_128.jpg","kylefrost_128.jpg","laasli_128.jpg","lanceguyatt_128.jpg","langate_128.jpg","larrybolt_128.jpg","larrygerard_128.jpg","laurengray_128.jpg","lawlbwoy_128.jpg","layerssss_128.jpg","leandrovaranda_128.jpg","lebinoclard_128.jpg","lebronjennan_128.jpg","leehambley_128.jpg","leeiio_128.jpg","leemunroe_128.jpg","leonfedotov_128.jpg","lepetitogre_128.jpg","lepinski_128.jpg","levisan_128.jpg","lewisainslie_128.jpg","lhausermann_128.jpg","liminha_128.jpg","lingeswaran_128.jpg","linkibol_128.jpg","linux29_128.jpg","lisovsky_128.jpg","llun_128.jpg","lmjabreu_128.jpg","loganjlambert_128.jpg","logorado_128.jpg","lokesh_coder_128.jpg","lonesomelemon_128.jpg","longlivemyword_128.jpg","looneydoodle_128.jpg","lososina_128.jpg","louis_currie_128.jpg","low_res_128.jpg","lowie_128.jpg","lu4sh1i_128.jpg","ludwiczakpawel_128.jpg","luxe_128.jpg","lvovenok_128.jpg","m4rio_128.jpg","m_kalibry_128.jpg","ma_tiax_128.jpg","mactopus_128.jpg","macxim_128.jpg","madcampos_128.jpg","madebybrenton_128.jpg","madebyvadim_128.jpg","madewulf_128.jpg","madshensel_128.jpg","madysondesigns_128.jpg","magoo04_128.jpg","magugzbrand2d_128.jpg","mahdif_128.jpg","mahmoudmetwally_128.jpg","maikelk_128.jpg","maiklam_128.jpg","malgordon_128.jpg","malykhinv_128.jpg","mandalareopens_128.jpg","manekenthe_128.jpg","mangosango_128.jpg","manigm_128.jpg","marakasina_128.jpg","marciotoledo_128.jpg","marclgonzales_128.jpg","marcobarbosa_128.jpg","marcomano__128.jpg","marcoramires_128.jpg","marcusgorillius_128.jpg","markjenkins_128.jpg","marklamb_128.jpg","markolschesky_128.jpg","markretzloff_128.jpg","markwienands_128.jpg","marlinjayakody_128.jpg","marosholly_128.jpg","marrimo_128.jpg","marshallchen__128.jpg","martinansty_128.jpg","martip07_128.jpg","mashaaaaal_128.jpg","mastermindesign_128.jpg","matbeedotcom_128.jpg","mateaodviteza_128.jpg","matkins_128.jpg","matt3224_128.jpg","mattbilotti_128.jpg","mattdetails_128.jpg","matthewkay__128.jpg","mattlat_128.jpg","mattsapii_128.jpg","mauriolg_128.jpg","maximseshuk_128.jpg","maximsorokin_128.jpg","maxlinderman_128.jpg","maz_128.jpg","mbilalsiddique1_128.jpg","mbilderbach_128.jpg","mcflydesign_128.jpg","mds_128.jpg","mdsisto_128.jpg","meelford_128.jpg","megdraws_128.jpg","mekal_128.jpg","meln1ks_128.jpg","melvindidit_128.jpg","mfacchinello_128.jpg","mgonto_128.jpg","mhaligowski_128.jpg","mhesslow_128.jpg","mhudobivnik_128.jpg","michaelabehsera_128.jpg","michaelbrooksjr_128.jpg","michaelcolenso_128.jpg","michaelcomiskey_128.jpg","michaelkoper_128.jpg","michaelmartinho_128.jpg","michalhron_128.jpg","michigangraham_128.jpg","michzen_128.jpg","mighty55_128.jpg","miguelkooreman_128.jpg","miguelmendes_128.jpg","mikaeljorhult_128.jpg","mikebeecham_128.jpg","mikemai2awesome_128.jpg","millinet_128.jpg","mirfanqureshi_128.jpg","missaaamy_128.jpg","mizhgan_128.jpg","mizko_128.jpg","mkginfo_128.jpg","mocabyte_128.jpg","mohanrohith_128.jpg","moscoz_128.jpg","motionthinks_128.jpg","moynihan_128.jpg","mr_shiznit_128.jpg","mr_subtle_128.jpg","mrebay007_128.jpg","mrjamesnoble_128.jpg","mrmartineau_128.jpg","mrxloka_128.jpg","mslarkina_128.jpg","msveet_128.jpg","mtolokonnikov_128.jpg","mufaddal_mw_128.jpg","mugukamil_128.jpg","muridrahhal_128.jpg","muringa_128.jpg","murrayswift_128.jpg","mutlu82_128.jpg","mutu_krish_128.jpg","mvdheuvel_128.jpg","mwarkentin_128.jpg","myastro_128.jpg","mylesb_128.jpg","mymyboy_128.jpg","n1ght_coder_128.jpg","n3dmax_128.jpg","n_tassone_128.jpg","nacho_128.jpg","naitanamoreno_128.jpg","namankreative_128.jpg","nandini_m_128.jpg","nasirwd_128.jpg","nastya_mane_128.jpg","nateschulte_128.jpg","nathalie_fs_128.jpg","naupintos_128.jpg","nbirckel_128.jpg","nckjrvs_128.jpg","necodymiconer_128.jpg","nehfy_128.jpg","nellleo_128.jpg","nelshd_128.jpg","nelsonjoyce_128.jpg","nemanjaivanovic_128.jpg","nepdud_128.jpg","nerdgr8_128.jpg","nerrsoft_128.jpg","nessoila_128.jpg","netonet_il_128.jpg","newbrushes_128.jpg","nfedoroff_128.jpg","nickfratter_128.jpg","nicklacke_128.jpg","nicolai_larsen_128.jpg","nicolasfolliot_128.jpg","nicoleglynn_128.jpg","nicollerich_128.jpg","nilshelmersson_128.jpg","nilshoenson_128.jpg","ninjad3m0_128.jpg","nitinhayaran_128.jpg","nomidesigns_128.jpg","normanbox_128.jpg","notbadart_128.jpg","noufalibrahim_128.jpg","noxdzine_128.jpg","nsamoylov_128.jpg","ntfblog_128.jpg","nutzumi_128.jpg","nvkznemo_128.jpg","nwdsha_128.jpg","nyancecom_128.jpg","oaktreemedia_128.jpg","okandungel_128.jpg","okansurreel_128.jpg","okcoker_128.jpg","oksanafrewer_128.jpg","okseanjay_128.jpg","oktayelipek_128.jpg","olaolusoga_128.jpg","olgary_128.jpg","omnizya_128.jpg","ooomz_128.jpg","operatino_128.jpg","opnsrce_128.jpg","orkuncaylar_128.jpg","oscarowusu_128.jpg","oskamaya_128.jpg","oskarlevinson_128.jpg","osmanince_128.jpg","osmond_128.jpg","ostirbu_128.jpg","osvaldas_128.jpg","otozk_128.jpg","ovall_128.jpg","overcloacked_128.jpg","overra_128.jpg","panchajanyag_128.jpg","panghal0_128.jpg","patrickcoombe_128.jpg","paulfarino_128.jpg","pcridesagain_128.jpg","peachananr_128.jpg","pechkinator_128.jpg","peejfancher_128.jpg","pehamondello_128.jpg","perfectflow_128.jpg","perretmagali_128.jpg","petar_prog_128.jpg","petebernardo_128.jpg","peter576_128.jpg","peterlandt_128.jpg","petrangr_128.jpg","phillapier_128.jpg","picard102_128.jpg","pierre_nel_128.jpg","pierrestoffe_128.jpg","pifagor_128.jpg","pixage_128.jpg","plasticine_128.jpg","plbabin_128.jpg","pmeissner_128.jpg","polarity_128.jpg","ponchomendivil_128.jpg","poormini_128.jpg","popey_128.jpg","posterjob_128.jpg","praveen_vijaya_128.jpg","prheemo_128.jpg","primozcigler_128.jpg","prinzadi_128.jpg","privetwagner_128.jpg","prrstn_128.jpg","psaikali_128.jpg","psdesignuk_128.jpg","puzik_128.jpg","pyronite_128.jpg","quailandquasar_128.jpg","r_garcia_128.jpg","r_oy_128.jpg","rachelreveley_128.jpg","rahmeen_128.jpg","ralph_lam_128.jpg","ramanathan_pdy_128.jpg","randomlies_128.jpg","rangafangs_128.jpg","raphaelnikson_128.jpg","raquelwilson_128.jpg","ratbus_128.jpg","rawdiggie_128.jpg","rdbannon_128.jpg","rdsaunders_128.jpg","reabo101_128.jpg","reetajayendra_128.jpg","rehatkathuria_128.jpg","reideiredale_128.jpg","renbyrd_128.jpg","rez___a_128.jpg","ricburton_128.jpg","richardgarretts_128.jpg","richwild_128.jpg","rickdt_128.jpg","rickyyean_128.jpg","rikas_128.jpg","ripplemdk_128.jpg","rmlewisuk_128.jpg","rob_thomas10_128.jpg","robbschiller_128.jpg","robergd_128.jpg","robinclediere_128.jpg","robinlayfield_128.jpg","robturlinckx_128.jpg","rodnylobos_128.jpg","rohixx_128.jpg","romanbulah_128.jpg","roxanejammet_128.jpg","roybarberuk_128.jpg","rpatey_128.jpg","rpeezy_128.jpg","rtgibbons_128.jpg","rtyukmaev_128.jpg","rude_128.jpg","ruehldesign_128.jpg","runningskull_128.jpg","russell_baylis_128.jpg","russoedu_128.jpg","ruzinav_128.jpg","rweve_128.jpg","ryandownie_128.jpg","ryanjohnson_me_128.jpg","ryankirkman_128.jpg","ryanmclaughlin_128.jpg","ryhanhassan_128.jpg","ryuchi311_128.jpg","s4f1_128.jpg","saarabpreet_128.jpg","sachacorazzi_128.jpg","sachingawas_128.jpg","safrankov_128.jpg","sainraja_128.jpg","salimianoff_128.jpg","salleedesign_128.jpg","salvafc_128.jpg","samgrover_128.jpg","samihah_128.jpg","samscouto_128.jpg","samuelkraft_128.jpg","sandywoodruff_128.jpg","sangdth_128.jpg","santi_urso_128.jpg","saschadroste_128.jpg","saschamt_128.jpg","sasha_shestakov_128.jpg","saulihirvi_128.jpg","sawalazar_128.jpg","sawrb_128.jpg","sbtransparent_128.jpg","scips_128.jpg","scott_riley_128.jpg","scottfeltham_128.jpg","scottgallant_128.jpg","scottiedude_128.jpg","scottkclark_128.jpg","scrapdnb_128.jpg","sdidonato_128.jpg","sebashton_128.jpg","sementiy_128.jpg","serefka_128.jpg","sergeyalmone_128.jpg","sergeysafonov_128.jpg","sethlouey_128.jpg","seyedhossein1_128.jpg","sgaurav_baghel_128.jpg","shadeed9_128.jpg","shalt0ni_128.jpg","shaneIxD_128.jpg","shanehudson_128.jpg","sharvin_128.jpg","shesgared_128.jpg","shinze_128.jpg","shoaib253_128.jpg","shojberg_128.jpg","shvelo96_128.jpg","silv3rgvn_128.jpg","silvanmuhlemann_128.jpg","simobenso_128.jpg","sindresorhus_128.jpg","sircalebgrove_128.jpg","skkirilov_128.jpg","slowspock_128.jpg","smaczny_128.jpg","smalonso_128.jpg","smenov_128.jpg","snowshade_128.jpg","snowwrite_128.jpg","sokaniwaal_128.jpg","solid_color_128.jpg","souperphly_128.jpg","souuf_128.jpg","sovesove_128.jpg","soyjavi_128.jpg","spacewood__128.jpg","spbroma_128.jpg","spedwig_128.jpg","sprayaga_128.jpg","sreejithexp_128.jpg","ssbb_me_128.jpg","ssiskind_128.jpg","sta1ex_128.jpg","stalewine_128.jpg","stan_128.jpg","stayuber_128.jpg","stefanotirloni_128.jpg","stefanozoffoli_128.jpg","stefooo_128.jpg","stefvdham_128.jpg","stephcoue_128.jpg","sterlingrules_128.jpg","stevedesigner_128.jpg","steynviljoen_128.jpg","strikewan_128.jpg","stushona_128.jpg","sulaqo_128.jpg","sunlandictwin_128.jpg","sunshinedgirl_128.jpg","superoutman_128.jpg","supervova_128.jpg","supjoey_128.jpg","suprb_128.jpg","sur4dye_128.jpg","surgeonist_128.jpg","suribbles_128.jpg","svenlen_128.jpg","swaplord_128.jpg","sweetdelisa_128.jpg","switmer777_128.jpg","swooshycueb_128.jpg","sydlawrence_128.jpg","syropian_128.jpg","tanveerrao_128.jpg","taybenlor_128.jpg","taylorling_128.jpg","tbakdesigns_128.jpg","teddyzetterlund_128.jpg","teeragit_128.jpg","tereshenkov_128.jpg","terpimost_128.jpg","terrorpixel_128.jpg","terryxlife_128.jpg","teylorfeliz_128.jpg","tgerken_128.jpg","tgormtx_128.jpg","thaisselenator__128.jpg","thaodang17_128.jpg","thatonetommy_128.jpg","the_purplebunny_128.jpg","the_winslet_128.jpg","thedamianhdez_128.jpg","thedjpetersen_128.jpg","thehacker_128.jpg","thekevinjones_128.jpg","themadray_128.jpg","themikenagle_128.jpg","themrdave_128.jpg","theonlyzeke_128.jpg","therealmarvin_128.jpg","thewillbeard_128.jpg","thiagovernetti_128.jpg","thibaut_re_128.jpg","thierrykoblentz_128.jpg","thierrymeier__128.jpg","thimo_cz_128.jpg","thinkleft_128.jpg","thomasgeisen_128.jpg","thomasschrijer_128.jpg","timgthomas_128.jpg","timmillwood_128.jpg","timothycd_128.jpg","timpetricola_128.jpg","tjrus_128.jpg","to_soham_128.jpg","tobysaxon_128.jpg","toddrew_128.jpg","tom_even_128.jpg","tomas_janousek_128.jpg","tonymillion_128.jpg","traneblow_128.jpg","travis_arnold_128.jpg","travishines_128.jpg","tristanlegros_128.jpg","trubeatto_128.jpg","trueblood_33_128.jpg","tumski_128.jpg","tur8le_128.jpg","turkutuuli_128.jpg","tweetubhai_128.jpg","twittypork_128.jpg","txcx_128.jpg","uberschizo_128.jpg","ultragex_128.jpg","umurgdk_128.jpg","unterdreht_128.jpg","urrutimeoli_128.jpg","uxalex_128.jpg","uxpiper_128.jpg","uxward_128.jpg","vanchesz_128.jpg","vaughanmoffitt_128.jpg","vc27_128.jpg","vicivadeline_128.jpg","victorDubugras_128.jpg","victor_haydin_128.jpg","victordeanda_128.jpg","victorerixon_128.jpg","victorquinn_128.jpg","victorstuber_128.jpg","vigobronx_128.jpg","vijaykarthik_128.jpg","vikashpathak18_128.jpg","vikasvinfotech_128.jpg","vimarethomas_128.jpg","vinciarts_128.jpg","vitor376_128.jpg","vitorleal_128.jpg","vivekprvr_128.jpg","vj_demien_128.jpg","vladarbatov_128.jpg","vladimirdevic_128.jpg","vladyn_128.jpg","vlajki_128.jpg","vm_f_128.jpg","vocino_128.jpg","vonachoo_128.jpg","vovkasolovev_128.jpg","vytautas_a_128.jpg","waghner_128.jpg","wake_gs_128.jpg","we_social_128.jpg","wearesavas_128.jpg","weavermedia_128.jpg","webtanya_128.jpg","weglov_128.jpg","wegotvices_128.jpg","wesleytrankin_128.jpg","wikiziner_128.jpg","wiljanslofstra_128.jpg","wim1k_128.jpg","wintopia_128.jpg","woodsman001_128.jpg","woodydotmx_128.jpg","wtrsld_128.jpg","xadhix_128.jpg","xalionmalik_128.jpg","xamorep_128.jpg","xiel_128.jpg","xilantra_128.jpg","xravil_128.jpg","xripunov_128.jpg","xtopherpaul_128.jpg","y2graphic_128.jpg","yalozhkin_128.jpg","yassiryahya_128.jpg","yayteejay_128.jpg","yecidsm_128.jpg","yehudab_128.jpg","yesmeck_128.jpg","yigitpinarbasi_128.jpg","zackeeler_128.jpg","zaki3d_128.jpg","zauerkraut_128.jpg","zforrester_128.jpg","zvchkelly_128.jpg"]})),AV=c((()=>{cs=["com","biz","info","name","net","org"]})),MV=c((()=>{ds=["example.org","example.com","example.net"]})),TV=c((()=>{hs=["gmail.com","yahoo.com","hotmail.com"]})),_V=c((()=>{SV(),AV(),MV(),TV(),ps={avatar_uri:us,domain_suffix:cs,example_email:ds,free_email:hs}})),wV=c((()=>{ms=["abbas","abduco","abeo","abscido","absconditus","absens","absorbeo","absque","abstergo","absum","abundans","abutor","accedo","accendo","acceptus","accipio","accommodo","accusator","acer","acerbitas","acervus","acidus","acies","acquiro","acsi","adamo","adaugeo","addo","adduco","ademptio","adeo","adeptio","adfectus","adfero","adficio","adflicto","adhaero","adhuc","adicio","adimpleo","adinventitias","adipiscor","adiuvo","administratio","admiratio","admitto","admoneo","admoveo","adnuo","adopto","adsidue","adstringo","adsuesco","adsum","adulatio","adulescens","adultus","aduro","advenio","adversus","advoco","aedificium","aeger","aegre","aegrotatio","aegrus","aeneus","aequitas","aequus","aer","aestas","aestivus","aestus","aetas","aeternus","ager","aggero","aggredior","agnitio","agnosco","ago","ait","aiunt","alienus","alii","alioqui","aliqua","alius","allatus","alo","alter","altus","alveus","amaritudo","ambitus","ambulo","amicitia","amiculum","amissio","amita","amitto","amo","amor","amoveo","amplexus","amplitudo","amplus","ancilla","angelus","angulus","angustus","animadverto","animi","animus","annus","anser","ante","antea","antepono","antiquus","aperio","aperte","apostolus","apparatus","appello","appono","appositus","approbo","apto","aptus","apud","aqua","ara","aranea","arbitro","arbor","arbustum","arca","arceo","arcesso","arcus","argentum","argumentum","arguo","arma","armarium","armo","aro","ars","articulus","artificiose","arto","arx","ascisco","ascit","asper","aspicio","asporto","assentator","astrum","atavus","ater","atqui","atrocitas","atrox","attero","attollo","attonbitus","auctor","auctus","audacia","audax","audentia","audeo","audio","auditor","aufero","aureus","auris","aurum","aut","autem","autus","auxilium","avaritia","avarus","aveho","averto","avoco","baiulus","balbus","barba","bardus","basium","beatus","bellicus","bellum","bene","beneficium","benevolentia","benigne","bestia","bibo","bis","blandior","bonus","bos","brevis","cado","caecus","caelestis","caelum","calamitas","calcar","calco","calculus","callide","campana","candidus","canis","canonicus","canto","capillus","capio","capitulus","capto","caput","carbo","carcer","careo","caries","cariosus","caritas","carmen","carpo","carus","casso","caste","casus","catena","caterva","cattus","cauda","causa","caute","caveo","cavus","cedo","celebrer","celer","celo","cena","cenaculum","ceno","censura","centum","cerno","cernuus","certe","certo","certus","cervus","cetera","charisma","chirographum","cibo","cibus","cicuta","cilicium","cimentarius","ciminatio","cinis","circumvenio","cito","civis","civitas","clam","clamo","claro","clarus","claudeo","claustrum","clementia","clibanus","coadunatio","coaegresco","coepi","coerceo","cogito","cognatus","cognomen","cogo","cohaero","cohibeo","cohors","colligo","colloco","collum","colo","color","coma","combibo","comburo","comedo","comes","cometes","comis","comitatus","commemoro","comminor","commodo","communis","comparo","compello","complectus","compono","comprehendo","comptus","conatus","concedo","concido","conculco","condico","conduco","confero","confido","conforto","confugo","congregatio","conicio","coniecto","conitor","coniuratio","conor","conqueror","conscendo","conservo","considero","conspergo","constans","consuasor","contabesco","contego","contigo","contra","conturbo","conventus","convoco","copia","copiose","cornu","corona","corpus","correptius","corrigo","corroboro","corrumpo","coruscus","cotidie","crapula","cras","crastinus","creator","creber","crebro","credo","creo","creptio","crepusculum","cresco","creta","cribro","crinis","cruciamentum","crudelis","cruentus","crur","crustulum","crux","cubicularis","cubitum","cubo","cui","cuius","culpa","culpo","cultellus","cultura","cum","cunabula","cunae","cunctatio","cupiditas","cupio","cuppedia","cupressus","cur","cura","curatio","curia","curiositas","curis","curo","curriculum","currus","cursim","curso","cursus","curto","curtus","curvo","curvus","custodia","damnatio","damno","dapifer","debeo","debilito","decens","decerno","decet","decimus","decipio","decor","decretum","decumbo","dedecor","dedico","deduco","defaeco","defendo","defero","defessus","defetiscor","deficio","defigo","defleo","defluo","defungo","degenero","degero","degusto","deinde","delectatio","delego","deleo","delibero","delicate","delinquo","deludo","demens","demergo","demitto","demo","demonstro","demoror","demulceo","demum","denego","denique","dens","denuncio","denuo","deorsum","depereo","depono","depopulo","deporto","depraedor","deprecator","deprimo","depromo","depulso","deputo","derelinquo","derideo","deripio","desidero","desino","desipio","desolo","desparatus","despecto","despirmatio","infit","inflammatio","paens","patior","patria","patrocinor","patruus","pauci","paulatim","pauper","pax","peccatus","pecco","pecto","pectus","pecunia","pecus","peior","pel","ocer","socius","sodalitas","sol","soleo","solio","solitudo","solium","sollers","sollicito","solum","solus","solutio","solvo","somniculosus","somnus","sonitus","sono","sophismata","sopor","sordeo","sortitus","spargo","speciosus","spectaculum","speculum","sperno","spero","spes","spiculum","spiritus","spoliatio","sponte","stabilis","statim","statua","stella","stillicidium","stipes","stips","sto","strenuus","strues","studio","stultus","suadeo","suasoria","sub","subito","subiungo","sublime","subnecto","subseco","substantia","subvenio","succedo","succurro","sufficio","suffoco","suffragium","suggero","sui","sulum","sum","summa","summisse","summopere","sumo","sumptus","supellex","super","suppellex","supplanto","suppono","supra","surculus","surgo","sursum","suscipio","suspendo","sustineo","suus","synagoga","tabella","tabernus","tabesco","tabgo","tabula","taceo","tactus","taedium","talio","talis","talus","tam","tamdiu","tamen","tametsi","tamisium","tamquam","tandem","tantillus","tantum","tardus","tego","temeritas","temperantia","templum","temptatio","tempus","tenax","tendo","teneo","tener","tenuis","tenus","tepesco","tepidus","ter","terebro","teres","terga","tergeo","tergiversatio","tergo","tergum","termes","terminatio","tero","terra","terreo","territo","terror","tersus","tertius","testimonium","texo","textilis","textor","textus","thalassinus","theatrum","theca","thema","theologus","thermae","thesaurus","thesis","thorax","thymbra","thymum","tibi","timidus","timor","titulus","tolero","tollo","tondeo","tonsor","torqueo","torrens","tot","totidem","toties","totus","tracto","trado","traho","trans","tredecim","tremo","trepide","tres","tribuo","tricesimus","triduana","triginta","tripudio","tristis","triumphus","trucido","truculenter","tubineus","tui","tum","tumultus","tunc","turba","turbo","turpe","turpis","tutamen","tutis","tyrannus","uberrime","ubi","ulciscor","ullus","ulterius","ultio","ultra","umbra","umerus","umquam","una","unde","undique","universe","unus","urbanus","urbs","uredo","usitas","usque","ustilo","ustulo","usus","uter","uterque","utilis","utique","utor","utpote","utrimque","utroque","utrum","uxor","vaco","vacuus","vado","vae","valde","valens","valeo","valetudo","validus","vallum","vapulus","varietas","varius","vehemens","vel","velociter","velum","velut","venia","venio","ventito","ventosus","ventus","venustas","ver","verbera","verbum","vere","verecundia","vereor","vergo","veritas","vero","versus","verto","verumtamen","verus","vesco","vesica","vesper","vespillo","vester","vestigium","vestrum","vetus","via","vicinus","vicissitudo","victoria","victus","videlicet","video","viduata","viduo","vigilo","vigor","vilicus","vilis","vilitas","villa","vinco","vinculum","vindico","vinitor","vinum","vir","virga","virgo","viridis","viriliter","virtus","vis","viscus","vita","vitiosus","vitium","vito","vivo","vix","vobis","vociferor","voco","volaticus","volo","volubilis","voluntarius","volup","volutabrum","volva","vomer","vomica","vomito","vorago","vorax","voro","vos","votum","voveo","vox","vulariter","vulgaris","vulgivagus","vulgo","vulgus","vulnero","vulnus","vulpes","vulticulus","vultuosus","xiphias"]})),jV=c((()=>{fs=["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]})),EV=c((()=>{wV(),jV(),vs={supplemental:ms,words:fs}})),NV=c((()=>{gs=["Rock","Metal","Pop","Electronic","Folk","World","Country","Jazz","Funk","Soul","Hip Hop","Classical","Latin","Reggae","Stage And Screen","Blues","Non Music","Rap"]})),BV=c((()=>{NV(),ks={genre:gs}})),PV=c((()=>{ys=["Female","Male"]})),LV=c((()=>{bs=["Mary","Patricia","Linda","Barbara","Elizabeth","Jennifer","Maria","Susan","Margaret","Dorothy","Lisa","Nancy","Karen","Betty","Helen","Sandra","Donna","Carol","Ruth","Sharon","Michelle","Laura","Sarah","Kimberly","Deborah","Jessica","Shirley","Cynthia","Angela","Melissa","Brenda","Amy","Anna","Rebecca","Virginia","Kathleen","Pamela","Martha","Debra","Amanda","Stephanie","Carolyn","Christine","Marie","Janet","Catherine","Frances","Ann","Joyce","Diane","Alice","Julie","Heather","Teresa","Doris","Gloria","Evelyn","Jean","Cheryl","Mildred","Katherine","Joan","Ashley","Judith","Rose","Janice","Kelly","Nicole","Judy","Christina","Kathy","Theresa","Beverly","Denise","Tammy","Irene","Jane","Lori","Rachel","Marilyn","Andrea","Kathryn","Louise","Sara","Anne","Jacqueline","Wanda","Bonnie","Julia","Ruby","Lois","Tina","Phyllis","Norma","Paula","Diana","Annie","Lillian","Emily","Robin","Peggy","Crystal","Gladys","Rita","Dawn","Connie","Florence","Tracy","Edna","Tiffany","Carmen","Rosa","Cindy","Grace","Wendy","Victoria","Edith","Kim","Sherry","Sylvia","Josephine","Thelma","Shannon","Sheila","Ethel","Ellen","Elaine","Marjorie","Carrie","Charlotte","Monica","Esther","Pauline","Emma","Juanita","Anita","Rhonda","Hazel","Amber","Eva","Debbie","April","Leslie","Clara","Lucille","Jamie","Joanne","Eleanor","Valerie","Danielle","Megan","Alicia","Suzanne","Michele","Gail","Bertha","Darlene","Veronica","Jill","Erin","Geraldine","Lauren","Cathy","Joann","Lorraine","Lynn","Sally","Regina","Erica","Beatrice","Dolores","Bernice","Audrey","Yvonne","Annette","June","Samantha","Marion","Dana","Stacy","Ana","Renee","Ida","Vivian","Roberta","Holly","Brittany","Melanie","Loretta","Yolanda","Jeanette","Laurie","Katie","Kristen","Vanessa","Alma","Sue","Elsie","Beth","Jeanne","Vicki","Carla","Tara","Rosemary","Eileen","Terri","Gertrude","Lucy","Tonya","Ella","Stacey","Wilma","Gina","Kristin","Jessie","Natalie","Agnes","Vera","Willie","Charlene","Bessie","Delores","Melinda","Pearl","Arlene","Maureen","Colleen","Allison","Tamara","Joy","Georgia","Constance","Lillie","Claudia","Jackie","Marcia","Tanya","Nellie","Minnie","Marlene","Heidi","Glenda","Lydia","Viola","Courtney","Marian","Stella","Caroline","Dora","Jo","Vickie","Mattie","Terry","Maxine","Irma","Mabel","Marsha","Myrtle","Lena","Christy","Deanna","Patsy","Hilda","Gwendolyn","Jennie","Nora","Margie","Nina","Cassandra","Leah","Penny","Kay","Priscilla","Naomi","Carole","Brandy","Olga","Billie","Dianne","Tracey","Leona","Jenny","Felicia","Sonia","Miriam","Velma","Becky","Bobbie","Violet","Kristina","Toni","Misty","Mae","Shelly","Daisy","Ramona","Sherri","Erika","Katrina","Claire","Lindsey","Lindsay","Geneva","Guadalupe","Belinda","Margarita","Sheryl","Cora","Faye","Ada","Natasha","Sabrina","Isabel","Marguerite","Hattie","Harriet","Molly","Cecilia","Kristi","Brandi","Blanche","Sandy","Rosie","Joanna","Iris","Eunice","Angie","Inez","Lynda","Madeline","Amelia","Alberta","Genevieve","Monique","Jodi","Janie","Maggie","Kayla","Sonya","Jan","Lee","Kristine","Candace","Fannie","Maryann","Opal","Alison","Yvette","Melody","Luz","Susie","Olivia","Flora","Shelley","Kristy","Mamie","Lula","Lola","Verna","Beulah","Antoinette","Candice","Juana","Jeannette","Pam","Kelli","Hannah","Whitney","Bridget","Karla","Celia","Latoya","Patty","Shelia","Gayle","Della","Vicky","Lynne","Sheri","Marianne","Kara","Jacquelyn","Erma","Blanca","Myra","Leticia","Pat","Krista","Roxanne","Angelica","Johnnie","Robyn","Francis","Adrienne","Rosalie","Alexandra","Brooke","Bethany","Sadie","Bernadette","Traci","Jody","Kendra","Jasmine","Nichole","Rachael","Chelsea","Mable","Ernestine","Muriel","Marcella","Elena","Krystal","Angelina","Nadine","Kari","Estelle","Dianna","Paulette","Lora","Mona","Doreen","Rosemarie","Angel","Desiree","Antonia","Hope","Ginger","Janis","Betsy","Christie","Freda","Mercedes","Meredith","Lynette","Teri","Cristina","Eula","Leigh","Meghan","Sophia","Eloise","Rochelle","Gretchen","Cecelia","Raquel","Henrietta","Alyssa","Jana","Kelley","Gwen","Kerry","Jenna","Tricia","Laverne","Olive","Alexis","Tasha","Silvia","Elvira","Casey","Delia","Sophie","Kate","Patti","Lorena","Kellie","Sonja","Lila","Lana","Darla","May","Mindy","Essie","Mandy","Lorene","Elsa","Josefina","Jeannie","Miranda","Dixie","Lucia","Marta","Faith","Lela","Johanna","Shari","Camille","Tami","Shawna","Elisa","Ebony","Melba","Ora","Nettie","Tabitha","Ollie","Jaime","Winifred","Kristie"]})),DV=c((()=>{Ss=["Aaliyah","Aaron","Abagail","Abbey","Abbie","Abbigail","Abby","Abdiel","Abdul","Abdullah","Abe","Abel","Abelardo","Abigail","Abigale","Abigayle","Abner","Abraham","Ada","Adah","Adalberto","Adaline","Adam","Adan","Addie","Addison","Adela","Adelbert","Adele","Adelia","Adeline","Adell","Adella","Adelle","Aditya","Adolf","Adolfo","Adolph","Adolphus","Adonis","Adrain","Adrian","Adriana","Adrianna","Adriel","Adrien","Adrienne","Afton","Aglae","Agnes","Agustin","Agustina","Ahmad","Ahmed","Aida","Aidan","Aiden","Aileen","Aimee","Aisha","Aiyana","Akeem","Al","Alaina","Alan","Alana","Alanis","Alanna","Alayna","Alba","Albert","Alberta","Albertha","Alberto","Albin","Albina","Alda","Alden","Alec","Aleen","Alejandra","Alejandrin","Alek","Alena","Alene","Alessandra","Alessandro","Alessia","Aletha","Alex","Alexa","Alexander","Alexandra","Alexandre","Alexandrea","Alexandria","Alexandrine","Alexandro","Alexane","Alexanne","Alexie","Alexis","Alexys","Alexzander","Alf","Alfonso","Alfonzo","Alford","Alfred","Alfreda","Alfredo","Ali","Alia","Alice","Alicia","Alisa","Alisha","Alison","Alivia","Aliya","Aliyah","Aliza","Alize","Allan","Allen","Allene","Allie","Allison","Ally","Alphonso","Alta","Althea","Alva","Alvah","Alvena","Alvera","Alverta","Alvina","Alvis","Alyce","Alycia","Alysa","Alysha","Alyson","Alysson","Amalia","Amanda","Amani","Amara","Amari","Amaya","Amber","Ambrose","Amelia","Amelie","Amely","America","Americo","Amie","Amina","Amir","Amira","Amiya","Amos","Amparo","Amy","Amya","Ana","Anabel","Anabelle","Anahi","Anais","Anastacio","Anastasia","Anderson","Andre","Andreane","Andreanne","Andres","Andrew","Andy","Angel","Angela","Angelica","Angelina","Angeline","Angelita","Angelo","Angie","Angus","Anibal","Anika","Anissa","Anita","Aniya","Aniyah","Anjali","Anna","Annabel","Annabell","Annabelle","Annalise","Annamae","Annamarie","Anne","Annetta","Annette","Annie","Ansel","Ansley","Anthony","Antoinette","Antone","Antonetta","Antonette","Antonia","Antonietta","Antonina","Antonio","Antwan","Antwon","Anya","April","Ara","Araceli","Aracely","Arch","Archibald","Ardella","Arden","Ardith","Arely","Ari","Ariane","Arianna","Aric","Ariel","Arielle","Arjun","Arlene","Arlie","Arlo","Armand","Armando","Armani","Arnaldo","Arne","Arno","Arnold","Arnoldo","Arnulfo","Aron","Art","Arthur","Arturo","Arvel","Arvid","Arvilla","Aryanna","Asa","Asha","Ashlee","Ashleigh","Ashley","Ashly","Ashlynn","Ashton","Ashtyn","Asia","Assunta","Astrid","Athena","Aubree","Aubrey","Audie","Audra","Audreanne","Audrey","August","Augusta","Augustine","Augustus","Aurelia","Aurelie","Aurelio","Aurore","Austen","Austin","Austyn","Autumn","Ava","Avery","Avis","Axel","Ayana","Ayden","Ayla","Aylin","Baby","Bailee","Bailey","Barbara","Barney","Baron","Barrett","Barry","Bart","Bartholome","Barton","Baylee","Beatrice","Beau","Beaulah","Bell","Bella","Belle","Ben","Benedict","Benjamin","Bennett","Bennie","Benny","Benton","Berenice","Bernadette","Bernadine","Bernard","Bernardo","Berneice","Bernhard","Bernice","Bernie","Berniece","Bernita","Berry","Bert","Berta","Bertha","Bertram","Bertrand","Beryl","Bessie","Beth","Bethany","Bethel","Betsy","Bette","Bettie","Betty","Bettye","Beulah","Beverly","Bianka","Bill","Billie","Billy","Birdie","Blair","Blaise","Blake","Blanca","Blanche","Blaze","Bo","Bobbie","Bobby","Bonita","Bonnie","Boris","Boyd","Brad","Braden","Bradford","Bradley","Bradly","Brady","Braeden","Brain","Brandi","Brando","Brandon","Brandt","Brandy","Brandyn","Brannon","Branson","Brant","Braulio","Braxton","Brayan","Breana","Breanna","Breanne","Brenda","Brendan","Brenden","Brendon","Brenna","Brennan","Brennon","Brent","Bret","Brett","Bria","Brian","Briana","Brianne","Brice","Bridget","Bridgette","Bridie","Brielle","Brigitte","Brionna","Brisa","Britney","Brittany","Brock","Broderick","Brody","Brook","Brooke","Brooklyn","Brooks","Brown","Bruce","Bryana","Bryce","Brycen","Bryon","Buck","Bud","Buddy","Buford","Bulah","Burdette","Burley","Burnice","Buster","Cade","Caden","Caesar","Caitlyn","Cale","Caleb","Caleigh","Cali","Calista","Callie","Camden","Cameron","Camila","Camilla","Camille","Camren","Camron","Camryn","Camylle","Candace","Candelario","Candice","Candida","Candido","Cara","Carey","Carissa","Carlee","Carleton","Carley","Carli","Carlie","Carlo","Carlos","Carlotta","Carmel","Carmela","Carmella","Carmelo","Carmen","Carmine","Carol","Carolanne","Carole","Carolina","Caroline","Carolyn","Carolyne","Carrie","Carroll","Carson","Carter","Cary","Casandra","Casey","Casimer","Casimir","Casper","Cassandra","Cassandre","Cassidy","Cassie","Catalina","Caterina","Catharine","Catherine","Cathrine","Cathryn","Cathy","Cayla","Ceasar","Cecelia","Cecil","Cecile","Cecilia","Cedrick","Celestine","Celestino","Celia","Celine","Cesar","Chad","Chadd","Chadrick","Chaim","Chance","Chandler","Chanel","Chanelle","Charity","Charlene","Charles","Charley","Charlie","Charlotte","Chase","Chasity","Chauncey","Chaya","Chaz","Chelsea","Chelsey","Chelsie","Chesley","Chester","Chet","Cheyanne","Cheyenne","Chloe","Chris","Christ","Christa","Christelle","Christian","Christiana","Christina","Christine","Christop","Christophe","Christopher","Christy","Chyna","Ciara","Cicero","Cielo","Cierra","Cindy","Citlalli","Clair","Claire","Clara","Clarabelle","Clare","Clarissa","Clark","Claud","Claude","Claudia","Claudie","Claudine","Clay","Clemens","Clement","Clementina","Clementine","Clemmie","Cleo","Cleora","Cleta","Cletus","Cleve","Cleveland","Clifford","Clifton","Clint","Clinton","Clotilde","Clovis","Cloyd","Clyde","Coby","Cody","Colby","Cole","Coleman","Colin","Colleen","Collin","Colt","Colten","Colton","Columbus","Concepcion","Conner","Connie","Connor","Conor","Conrad","Constance","Constantin","Consuelo","Cooper","Cora","Coralie","Corbin","Cordelia","Cordell","Cordia","Cordie","Corene","Corine","Cornelius","Cornell","Corrine","Cortez","Cortney","Cory","Coty","Courtney","Coy","Craig","Crawford","Creola","Cristal","Cristian","Cristina","Cristobal","Cristopher","Cruz","Crystal","Crystel","Cullen","Curt","Curtis","Cydney","Cynthia","Cyril","Cyrus","Dagmar","Dahlia","Daija","Daisha","Daisy","Dakota","Dale","Dallas","Dallin","Dalton","Damaris","Dameon","Damian","Damien","Damion","Damon","Dan","Dana","Dandre","Dane","D'angelo","Dangelo","Danial","Daniela","Daniella","Danielle","Danika","Dannie","Danny","Dante","Danyka","Daphne","Daphnee","Daphney","Darby","Daren","Darian","Dariana","Darien","Dario","Darion","Darius","Darlene","Daron","Darrel","Darrell","Darren","Darrick","Darrin","Darrion","Darron","Darryl","Darwin","Daryl","Dashawn","Dasia","Dave","David","Davin","Davion","Davon","Davonte","Dawn","Dawson","Dax","Dayana","Dayna","Dayne","Dayton","Dean","Deangelo","Deanna","Deborah","Declan","Dedric","Dedrick","Dee","Deion","Deja","Dejah","Dejon","Dejuan","Delaney","Delbert","Delfina","Delia","Delilah","Dell","Della","Delmer","Delores","Delpha","Delphia","Delphine","Delta","Demarco","Demarcus","Demario","Demetris","Demetrius","Demond","Dena","Denis","Dennis","Deon","Deondre","Deontae","Deonte","Dereck","Derek","Derick","Deron","Derrick","Deshaun","Deshawn","Desiree","Desmond","Dessie","Destany","Destin","Destinee","Destiney","Destini","Destiny","Devan","Devante","Deven","Devin","Devon","Devonte","Devyn","Dewayne","Dewitt","Dexter","Diamond","Diana","Dianna","Diego","Dillan","Dillon","Dimitri","Dina","Dino","Dion","Dixie","Dock","Dolly","Dolores","Domenic","Domenica","Domenick","Domenico","Domingo","Dominic","Dominique","Don","Donald","Donato","Donavon","Donna","Donnell","Donnie","Donny","Dora","Dorcas","Dorian","Doris","Dorothea","Dorothy","Dorris","Dortha","Dorthy","Doug","Douglas","Dovie","Doyle","Drake","Drew","Duane","Dudley","Dulce","Duncan","Durward","Dustin","Dusty","Dwight","Dylan","Earl","Earlene","Earline","Earnest","Earnestine","Easter","Easton","Ebba","Ebony","Ed","Eda","Edd","Eddie","Eden","Edgar","Edgardo","Edison","Edmond","Edmund","Edna","Eduardo","Edward","Edwardo","Edwin","Edwina","Edyth","Edythe","Effie","Efrain","Efren","Eileen","Einar","Eino","Eladio","Elaina","Elbert","Elda","Eldon","Eldora","Eldred","Eldridge","Eleanora","Eleanore","Eleazar","Electa","Elena","Elenor","Elenora","Eleonore","Elfrieda","Eli","Elian","Eliane","Elias","Eliezer","Elijah","Elinor","Elinore","Elisa","Elisabeth","Elise","Eliseo","Elisha","Elissa","Eliza","Elizabeth","Ella","Ellen","Ellie","Elliot","Elliott","Ellis","Ellsworth","Elmer","Elmira","Elmo","Elmore","Elna","Elnora","Elody","Eloisa","Eloise","Elouise","Eloy","Elroy","Elsa","Else","Elsie","Elta","Elton","Elva","Elvera","Elvie","Elvis","Elwin","Elwyn","Elyse","Elyssa","Elza","Emanuel","Emelia","Emelie","Emely","Emerald","Emerson","Emery","Emie","Emil","Emile","Emilia","Emiliano","Emilie","Emilio","Emily","Emma","Emmalee","Emmanuel","Emmanuelle","Emmet","Emmett","Emmie","Emmitt","Emmy","Emory","Ena","Enid","Enoch","Enola","Enos","Enrico","Enrique","Ephraim","Era","Eriberto","Eric","Erica","Erich","Erick","Ericka","Erik","Erika","Erin","Erling","Erna","Ernest","Ernestina","Ernestine","Ernesto","Ernie","Ervin","Erwin","Eryn","Esmeralda","Esperanza","Esta","Esteban","Estefania","Estel","Estell","Estella","Estelle","Estevan","Esther","Estrella","Etha","Ethan","Ethel","Ethelyn","Ethyl","Ettie","Eudora","Eugene","Eugenia","Eula","Eulah","Eulalia","Euna","Eunice","Eusebio","Eva","Evalyn","Evan","Evangeline","Evans","Eve","Eveline","Evelyn","Everardo","Everett","Everette","Evert","Evie","Ewald","Ewell","Ezekiel","Ezequiel","Ezra","Fabian","Fabiola","Fae","Fannie","Fanny","Fatima","Faustino","Fausto","Favian","Fay","Faye","Federico","Felicia","Felicita","Felicity","Felipa","Felipe","Felix","Felton","Fermin","Fern","Fernando","Ferne","Fidel","Filiberto","Filomena","Finn","Fiona","Flavie","Flavio","Fleta","Fletcher","Flo","Florence","Florencio","Florian","Florida","Florine","Flossie","Floy","Floyd","Ford","Forest","Forrest","Foster","Frances","Francesca","Francesco","Francis","Francisca","Francisco","Franco","Frank","Frankie","Franz","Fred","Freda","Freddie","Freddy","Frederic","Frederick","Frederik","Frederique","Fredrick","Fredy","Freeda","Freeman","Freida","Frida","Frieda","Friedrich","Fritz","Furman","Gabe","Gabriel","Gabriella","Gabrielle","Gaetano","Gage","Gail","Gardner","Garett","Garfield","Garland","Garnet","Garnett","Garret","Garrett","Garrick","Garrison","Garry","Garth","Gaston","Gavin","Gay","Gayle","Gaylord","Gene","General","Genesis","Genevieve","Gennaro","Genoveva","Geo","Geoffrey","George","Georgette","Georgiana","Georgianna","Geovanni","Geovanny","Geovany","Gerald","Geraldine","Gerard","Gerardo","Gerda","Gerhard","Germaine","German","Gerry","Gerson","Gertrude","Gia","Gianni","Gideon","Gilbert","Gilberto","Gilda","Giles","Gillian","Gina","Gino","Giovani","Giovanna","Giovanni","Giovanny","Gisselle","Giuseppe","Gladyce","Gladys","Glen","Glenda","Glenna","Glennie","Gloria","Godfrey","Golda","Golden","Gonzalo","Gordon","Grace","Gracie","Graciela","Grady","Graham","Grant","Granville","Grayce","Grayson","Green","Greg","Gregg","Gregoria","Gregorio","Gregory","Greta","Gretchen","Greyson","Griffin","Grover","Guadalupe","Gudrun","Guido","Guillermo","Guiseppe","Gunnar","Gunner","Gus","Gussie","Gust","Gustave","Guy","Gwen","Gwendolyn","Hadley","Hailee","Hailey","Hailie","Hal","Haleigh","Haley","Halie","Halle","Hallie","Hank","Hanna","Hannah","Hans","Hardy","Harley","Harmon","Harmony","Harold","Harrison","Harry","Harvey","Haskell","Hassan","Hassie","Hattie","Haven","Hayden","Haylee","Hayley","Haylie","Hazel","Hazle","Heath","Heather","Heaven","Heber","Hector","Heidi","Helen","Helena","Helene","Helga","Hellen","Helmer","Heloise","Henderson","Henri","Henriette","Henry","Herbert","Herman","Hermann","Hermina","Herminia","Herminio","Hershel","Herta","Hertha","Hester","Hettie","Hilario","Hilbert","Hilda","Hildegard","Hillard","Hillary","Hilma","Hilton","Hipolito","Hiram","Hobart","Holden","Hollie","Hollis","Holly","Hope","Horace","Horacio","Hortense","Hosea","Houston","Howard","Howell","Hoyt","Hubert","Hudson","Hugh","Hulda","Humberto","Hunter","Hyman","Ian","Ibrahim","Icie","Ida","Idell","Idella","Ignacio","Ignatius","Ike","Ila","Ilene","Iliana","Ima","Imani","Imelda","Immanuel","Imogene","Ines","Irma","Irving","Irwin","Isaac","Isabel","Isabell","Isabella","Isabelle","Isac","Isadore","Isai","Isaiah","Isaias","Isidro","Ismael","Isobel","Isom","Israel","Issac","Itzel","Iva","Ivah","Ivory","Ivy","Izabella","Izaiah","Jabari","Jace","Jacey","Jacinthe","Jacinto","Jack","Jackeline","Jackie","Jacklyn","Jackson","Jacky","Jaclyn","Jacquelyn","Jacques","Jacynthe","Jada","Jade","Jaden","Jadon","Jadyn","Jaeden","Jaida","Jaiden","Jailyn","Jaime","Jairo","Jakayla","Jake","Jakob","Jaleel","Jalen","Jalon","Jalyn","Jamaal","Jamal","Jamar","Jamarcus","Jamel","Jameson","Jamey","Jamie","Jamil","Jamir","Jamison","Jammie","Jan","Jana","Janae","Jane","Janelle","Janessa","Janet","Janice","Janick","Janie","Janis","Janiya","Jannie","Jany","Jaquan","Jaquelin","Jaqueline","Jared","Jaren","Jarod","Jaron","Jarred","Jarrell","Jarret","Jarrett","Jarrod","Jarvis","Jasen","Jasmin","Jason","Jasper","Jaunita","Javier","Javon","Javonte","Jay","Jayce","Jaycee","Jayda","Jayde","Jayden","Jaydon","Jaylan","Jaylen","Jaylin","Jaylon","Jayme","Jayne","Jayson","Jazlyn","Jazmin","Jazmyn","Jazmyne","Jean","Jeanette","Jeanie","Jeanne","Jed","Jedediah","Jedidiah","Jeff","Jefferey","Jeffery","Jeffrey","Jeffry","Jena","Jenifer","Jennie","Jennifer","Jennings","Jennyfer","Jensen","Jerad","Jerald","Jeramie","Jeramy","Jerel","Jeremie","Jeremy","Jermain","Jermaine","Jermey","Jerod","Jerome","Jeromy","Jerrell","Jerrod","Jerrold","Jerry","Jess","Jesse","Jessica","Jessie","Jessika","Jessy","Jessyca","Jesus","Jett","Jettie","Jevon","Jewel","Jewell","Jillian","Jimmie","Jimmy","Jo","Joan","Joana","Joanie","Joanne","Joannie","Joanny","Joany","Joaquin","Jocelyn","Jodie","Jody","Joe","Joel","Joelle","Joesph","Joey","Johan","Johann","Johanna","Johathan","John","Johnathan","Johnathon","Johnnie","Johnny","Johnpaul","Johnson","Jolie","Jon","Jonas","Jonatan","Jonathan","Jonathon","Jordan","Jordane","Jordi","Jordon","Jordy","Jordyn","Jorge","Jose","Josefa","Josefina","Joseph","Josephine","Josh","Joshua","Joshuah","Josiah","Josiane","Josianne","Josie","Josue","Jovan","Jovani","Jovanny","Jovany","Joy","Joyce","Juana","Juanita","Judah","Judd","Jude","Judge","Judson","Judy","Jules","Julia","Julian","Juliana","Julianne","Julie","Julien","Juliet","Julio","Julius","June","Junior","Junius","Justen","Justice","Justina","Justine","Juston","Justus","Justyn","Juvenal","Juwan","Kacey","Kaci","Kacie","Kade","Kaden","Kadin","Kaela","Kaelyn","Kaia","Kailee","Kailey","Kailyn","Kaitlin","Kaitlyn","Kale","Kaleb","Kaleigh","Kaley","Kali","Kallie","Kameron","Kamille","Kamren","Kamron","Kamryn","Kane","Kara","Kareem","Karelle","Karen","Kari","Kariane","Karianne","Karina","Karine","Karl","Karlee","Karley","Karli","Karlie","Karolann","Karson","Kasandra","Kasey","Kassandra","Katarina","Katelin","Katelyn","Katelynn","Katharina","Katherine","Katheryn","Kathleen","Kathlyn","Kathryn","Kathryne","Katlyn","Katlynn","Katrina","Katrine","Kattie","Kavon","Kay","Kaya","Kaycee","Kayden","Kayla","Kaylah","Kaylee","Kayleigh","Kayley","Kayli","Kaylie","Kaylin","Keagan","Keanu","Keara","Keaton","Keegan","Keeley","Keely","Keenan","Keira","Keith","Kellen","Kelley","Kelli","Kellie","Kelly","Kelsi","Kelsie","Kelton","Kelvin","Ken","Kendall","Kendra","Kendrick","Kenna","Kennedi","Kennedy","Kenneth","Kennith","Kenny","Kenton","Kenya","Kenyatta","Kenyon","Keon","Keshaun","Keshawn","Keven","Kevin","Kevon","Keyon","Keyshawn","Khalid","Khalil","Kian","Kiana","Kianna","Kiara","Kiarra","Kiel","Kiera","Kieran","Kiley","Kim","Kimberly","King","Kip","Kira","Kirk","Kirsten","Kirstin","Kitty","Kobe","Koby","Kody","Kolby","Kole","Korbin","Korey","Kory","Kraig","Kris","Krista","Kristian","Kristin","Kristina","Kristofer","Kristoffer","Kristopher","Kristy","Krystal","Krystel","Krystina","Kurt","Kurtis","Kyla","Kyle","Kylee","Kyleigh","Kyler","Kylie","Kyra","Lacey","Lacy","Ladarius","Lafayette","Laila","Laisha","Lamar","Lambert","Lamont","Lance","Landen","Lane","Laney","Larissa","Laron","Larry","Larue","Laura","Laurel","Lauren","Laurence","Lauretta","Lauriane","Laurianne","Laurie","Laurine","Laury","Lauryn","Lavada","Lavern","Laverna","Laverne","Lavina","Lavinia","Lavon","Lavonne","Lawrence","Lawson","Layla","Layne","Lazaro","Lea","Leann","Leanna","Leanne","Leatha","Leda","Lee","Leif","Leila","Leilani","Lela","Lelah","Leland","Lelia","Lempi","Lemuel","Lenna","Lennie","Lenny","Lenora","Lenore","Leo","Leola","Leon","Leonard","Leonardo","Leone","Leonel","Leonie","Leonor","Leonora","Leopold","Leopoldo","Leora","Lera","Lesley","Leslie","Lesly","Lessie","Lester","Leta","Letha","Letitia","Levi","Lew","Lewis","Lexi","Lexie","Lexus","Lia","Liam","Liana","Libbie","Libby","Lila","Lilian","Liliana","Liliane","Lilla","Lillian","Lilliana","Lillie","Lilly","Lily","Lilyan","Lina","Lincoln","Linda","Lindsay","Lindsey","Linnea","Linnie","Linwood","Lionel","Lisa","Lisandro","Lisette","Litzy","Liza","Lizeth","Lizzie","Llewellyn","Lloyd","Logan","Lois","Lola","Lolita","Loma","Lon","London","Lonie","Lonnie","Lonny","Lonzo","Lora","Loraine","Loren","Lorena","Lorenz","Lorenza","Lorenzo","Lori","Lorine","Lorna","Lottie","Lou","Louie","Louisa","Lourdes","Louvenia","Lowell","Loy","Loyal","Loyce","Lucas","Luciano","Lucie","Lucienne","Lucile","Lucinda","Lucio","Lucious","Lucius","Lucy","Ludie","Ludwig","Lue","Luella","Luigi","Luis","Luisa","Lukas","Lula","Lulu","Luna","Lupe","Lura","Lurline","Luther","Luz","Lyda","Lydia","Lyla","Lynn","Lyric","Lysanne","Mabel","Mabelle","Mable","Mac","Macey","Maci","Macie","Mack","Mackenzie","Macy","Madaline","Madalyn","Maddison","Madeline","Madelyn","Madelynn","Madge","Madie","Madilyn","Madisen","Madison","Madisyn","Madonna","Madyson","Mae","Maegan","Maeve","Mafalda","Magali","Magdalen","Magdalena","Maggie","Magnolia","Magnus","Maia","Maida","Maiya","Major","Makayla","Makenna","Makenzie","Malachi","Malcolm","Malika","Malinda","Mallie","Mallory","Malvina","Mandy","Manley","Manuel","Manuela","Mara","Marc","Marcel","Marcelina","Marcelino","Marcella","Marcelle","Marcellus","Marcelo","Marcia","Marco","Marcos","Marcus","Margaret","Margarete","Margarett","Margaretta","Margarette","Margarita","Marge","Margie","Margot","Margret","Marguerite","Maria","Mariah","Mariam","Marian","Mariana","Mariane","Marianna","Marianne","Mariano","Maribel","Marie","Mariela","Marielle","Marietta","Marilie","Marilou","Marilyne","Marina","Mario","Marion","Marisa","Marisol","Maritza","Marjolaine","Marjorie","Marjory","Mark","Markus","Marlee","Marlen","Marlene","Marley","Marlin","Marlon","Marques","Marquis","Marquise","Marshall","Marta","Martin","Martina","Martine","Marty","Marvin","Mary","Maryam","Maryjane","Maryse","Mason","Mateo","Mathew","Mathias","Mathilde","Matilda","Matilde","Matt","Matteo","Mattie","Maud","Maude","Maudie","Maureen","Maurice","Mauricio","Maurine","Maverick","Mavis","Max","Maxie","Maxime","Maximilian","Maximillia","Maximillian","Maximo","Maximus","Maxine","Maxwell","May","Maya","Maybell","Maybelle","Maye","Maymie","Maynard","Mayra","Mazie","Mckayla","Mckenna","Mckenzie","Meagan","Meaghan","Meda","Megane","Meggie","Meghan","Mekhi","Melany","Melba","Melisa","Melissa","Mellie","Melody","Melvin","Melvina","Melyna","Melyssa","Mercedes","Meredith","Merl","Merle","Merlin","Merritt","Mertie","Mervin","Meta","Mia","Micaela","Micah","Michael","Michaela","Michale","Micheal","Michel","Michele","Michelle","Miguel","Mikayla","Mike","Mikel","Milan","Miles","Milford","Miller","Millie","Milo","Milton","Mina","Minerva","Minnie","Miracle","Mireille","Mireya","Misael","Missouri","Misty","Mitchel","Mitchell","Mittie","Modesta","Modesto","Mohamed","Mohammad","Mohammed","Moises","Mollie","Molly","Mona","Monica","Monique","Monroe","Monserrat","Monserrate","Montana","Monte","Monty","Morgan","Moriah","Morris","Mortimer","Morton","Mose","Moses","Moshe","Mossie","Mozell","Mozelle","Muhammad","Muriel","Murl","Murphy","Murray","Mustafa","Mya","Myah","Mylene","Myles","Myra","Myriam","Myrl","Myrna","Myron","Myrtice","Myrtie","Myrtis","Myrtle","Nadia","Nakia","Name","Nannie","Naomi","Naomie","Napoleon","Narciso","Nash","Nasir","Nat","Natalia","Natalie","Natasha","Nathan","Nathanael","Nathanial","Nathaniel","Nathen","Nayeli","Neal","Ned","Nedra","Neha","Neil","Nelda","Nella","Nelle","Nellie","Nels","Nelson","Neoma","Nestor","Nettie","Neva","Newell","Newton","Nia","Nicholas","Nicholaus","Nichole","Nick","Nicklaus","Nickolas","Nico","Nicola","Nicolas","Nicole","Nicolette","Nigel","Nikita","Nikki","Nikko","Niko","Nikolas","Nils","Nina","Noah","Noble","Noe","Noel","Noelia","Noemi","Noemie","Noemy","Nola","Nolan","Nona","Nora","Norbert","Norberto","Norene","Norma","Norris","Norval","Norwood","Nova","Novella","Nya","Nyah","Nyasia","Obie","Oceane","Ocie","Octavia","Oda","Odell","Odessa","Odie","Ofelia","Okey","Ola","Olaf","Ole","Olen","Oleta","Olga","Olin","Oliver","Ollie","Oma","Omari","Omer","Ona","Onie","Opal","Ophelia","Ora","Oral","Oran","Oren","Orie","Orin","Orion","Orland","Orlando","Orlo","Orpha","Orrin","Orval","Orville","Osbaldo","Osborne","Oscar","Osvaldo","Oswald","Oswaldo","Otha","Otho","Otilia","Otis","Ottilie","Ottis","Otto","Ova","Owen","Ozella","Pablo","Paige","Palma","Pamela","Pansy","Paolo","Paris","Parker","Pascale","Pasquale","Pat","Patience","Patricia","Patrick","Patsy","Pattie","Paul","Paula","Pauline","Paxton","Payton","Pearl","Pearlie","Pearline","Pedro","Peggie","Penelope","Percival","Percy","Perry","Pete","Peter","Petra","Peyton","Philip","Phoebe","Phyllis","Pierce","Pierre","Pietro","Pink","Pinkie","Piper","Polly","Porter","Precious","Presley","Preston","Price","Prince","Princess","Priscilla","Providenci","Prudence","Queen","Queenie","Quentin","Quincy","Quinn","Quinten","Quinton","Rachael","Rachel","Rachelle","Rae","Raegan","Rafael","Rafaela","Raheem","Rahsaan","Rahul","Raina","Raleigh","Ralph","Ramiro","Ramon","Ramona","Randal","Randall","Randi","Randy","Ransom","Raoul","Raphael","Raphaelle","Raquel","Rashad","Rashawn","Rasheed","Raul","Raven","Ray","Raymond","Raymundo","Reagan","Reanna","Reba","Rebeca","Rebecca","Rebeka","Rebekah","Reece","Reed","Reese","Regan","Reggie","Reginald","Reid","Reilly","Reina","Reinhold","Remington","Rene","Renee","Ressie","Reta","Retha","Retta","Reuben","Reva","Rex","Rey","Reyes","Reymundo","Reyna","Reynold","Rhea","Rhett","Rhianna","Rhiannon","Rhoda","Ricardo","Richard","Richie","Richmond","Rick","Rickey","Rickie","Ricky","Rico","Rigoberto","Riley","Rita","River","Robb","Robbie","Robert","Roberta","Roberto","Robin","Robyn","Rocio","Rocky","Rod","Roderick","Rodger","Rodolfo","Rodrick","Rodrigo","Roel","Rogelio","Roger","Rogers","Rolando","Rollin","Roma","Romaine","Roman","Ron","Ronaldo","Ronny","Roosevelt","Rory","Rosa","Rosalee","Rosalia","Rosalind","Rosalinda","Rosalyn","Rosamond","Rosanna","Rosario","Roscoe","Rose","Rosella","Roselyn","Rosemarie","Rosemary","Rosendo","Rosetta","Rosie","Rosina","Roslyn","Ross","Rossie","Rowan","Rowena","Rowland","Roxane","Roxanne","Roy","Royal","Royce","Rozella","Ruben","Rubie","Ruby","Rubye","Rudolph","Rudy","Rupert","Russ","Russel","Russell","Rusty","Ruth","Ruthe","Ruthie","Ryan","Ryann","Ryder","Rylan","Rylee","Ryleigh","Ryley","Sabina","Sabrina","Sabryna","Sadie","Sadye","Sage","Saige","Sallie","Sally","Salma","Salvador","Salvatore","Sam","Samanta","Samantha","Samara","Samir","Sammie","Sammy","Samson","Sandra","Sandrine","Sandy","Sanford","Santa","Santiago","Santina","Santino","Santos","Sarah","Sarai","Sarina","Sasha","Saul","Savanah","Savanna","Savannah","Savion","Scarlett","Schuyler","Scot","Scottie","Scotty","Seamus","Sean","Sebastian","Sedrick","Selena","Selina","Selmer","Serena","Serenity","Seth","Shad","Shaina","Shakira","Shana","Shane","Shanel","Shanelle","Shania","Shanie","Shaniya","Shanna","Shannon","Shanny","Shanon","Shany","Sharon","Shaun","Shawn","Shawna","Shaylee","Shayna","Shayne","Shea","Sheila","Sheldon","Shemar","Sheridan","Sherman","Sherwood","Shirley","Shyann","Shyanne","Sibyl","Sid","Sidney","Sienna","Sierra","Sigmund","Sigrid","Sigurd","Silas","Sim","Simeon","Simone","Sincere","Sister","Skye","Skyla","Skylar","Sofia","Soledad","Solon","Sonia","Sonny","Sonya","Sophia","Sophie","Spencer","Stacey","Stacy","Stan","Stanford","Stanley","Stanton","Stefan","Stefanie","Stella","Stephan","Stephania","Stephanie","Stephany","Stephen","Stephon","Sterling","Steve","Stevie","Stewart","Stone","Stuart","Summer","Sunny","Susan","Susana","Susanna","Susie","Suzanne","Sven","Syble","Sydnee","Sydney","Sydni","Sydnie","Sylvan","Sylvester","Sylvia","Tabitha","Tad","Talia","Talon","Tamara","Tamia","Tania","Tanner","Tanya","Tara","Taryn","Tate","Tatum","Tatyana","Taurean","Tavares","Taya","Taylor","Teagan","Ted","Telly","Terence","Teresa","Terrance","Terrell","Terrence","Terrill","Terry","Tess","Tessie","Tevin","Thad","Thaddeus","Thalia","Thea","Thelma","Theo","Theodora","Theodore","Theresa","Therese","Theresia","Theron","Thomas","Thora","Thurman","Tia","Tiana","Tianna","Tiara","Tierra","Tiffany","Tillman","Timmothy","Timmy","Timothy","Tina","Tito","Titus","Tobin","Toby","Tod","Tom","Tomas","Tomasa","Tommie","Toney","Toni","Tony","Torey","Torrance","Torrey","Toy","Trace","Tracey","Tracy","Travis","Travon","Tre","Tremaine","Tremayne","Trent","Trenton","Tressa","Tressie","Treva","Trever","Trevion","Trevor","Trey","Trinity","Trisha","Tristian","Tristin","Triston","Troy","Trudie","Trycia","Trystan","Turner","Twila","Tyler","Tyra","Tyree","Tyreek","Tyrel","Tyrell","Tyrese","Tyrique","Tyshawn","Tyson","Ubaldo","Ulices","Ulises","Una","Unique","Urban","Uriah","Uriel","Ursula","Vada","Valentin","Valentina","Valentine","Valerie","Vallie","Van","Vance","Vanessa","Vaughn","Veda","Velda","Vella","Velma","Velva","Vena","Verda","Verdie","Vergie","Verla","Verlie","Vern","Verna","Verner","Vernice","Vernie","Vernon","Verona","Veronica","Vesta","Vicenta","Vicente","Vickie","Vicky","Victor","Victoria","Vida","Vidal","Vilma","Vince","Vincent","Vincenza","Vincenzo","Vinnie","Viola","Violet","Violette","Virgie","Virgil","Virginia","Virginie","Vita","Vito","Viva","Vivian","Viviane","Vivianne","Vivien","Vivienne","Vladimir","Wade","Waino","Waldo","Walker","Wallace","Walter","Walton","Wanda","Ward","Warren","Watson","Wava","Waylon","Wayne","Webster","Weldon","Wellington","Wendell","Wendy","Werner","Westley","Weston","Whitney","Wilber","Wilbert","Wilburn","Wiley","Wilford","Wilfred","Wilfredo","Wilfrid","Wilhelm","Wilhelmine","Will","Willa","Willard","William","Willie","Willis","Willow","Willy","Wilma","Wilmer","Wilson","Wilton","Winfield","Winifred","Winnifred","Winona","Winston","Woodrow","Wyatt","Wyman","Xander","Xavier","Xzavier","Yadira","Yasmeen","Yasmin","Yasmine","Yazmin","Yesenia","Yessenia","Yolanda","Yoshiko","Yvette","Yvonne","Zachariah","Zachary","Zachery","Zack","Zackary","Zackery","Zakary","Zander","Zane","Zaria","Zechariah","Zelda","Zella","Zelma","Zena","Zetta","Zion","Zita","Zoe","Zoey","Zoie","Zoila","Zola","Zora","Zula"]})),xV=c((()=>{As=["Asexual","Female to male trans man","Female to male transgender man","Female to male transsexual man","F2M","Gender neutral","Hermaphrodite","Intersex man","Intersex person","Intersex woman","Male to female trans woman","Male to female transgender woman","Male to female transsexual woman","Man","M2F","Polygender","T* man","T* woman","Two* person","Two-spirit person","Woman","Agender","Androgyne","Androgynes","Androgynous","Bigender","Cis","Cis Female","Cis Male","Cis Man","Cis Woman","Cisgender","Cisgender Female","Cisgender Male","Cisgender Man","Cisgender Woman","Female to Male","FTM","Gender Fluid","Gender Nonconforming","Gender Questioning","Gender Variant","Genderqueer","Intersex","Male to Female","MTF","Neither","Neutrois","Non-binary","Other","Pangender","Trans","Trans Female","Trans Male","Trans Man","Trans Person","Trans*Female","Trans*Male","Trans*Man","Trans*Person","Trans*Woman","Transexual","Transexual Female","Transexual Male","Transexual Man","Transexual Person","Transexual Woman","Transgender Female","Transgender Person","Transmasculine","Two-spirit"]})),CV=c((()=>{Ms=["Abbott","Abernathy","Abshire","Adams","Altenwerth","Anderson","Ankunding","Armstrong","Auer","Aufderhar","Bahringer","Bailey","Balistreri","Barrows","Bartell","Bartoletti","Barton","Bashirian","Batz","Bauch","Baumbach","Bayer","Beahan","Beatty","Bechtelar","Becker","Bednar","Beer","Beier","Berge","Bergnaum","Bergstrom","Bernhard","Bernier","Bins","Blanda","Blick","Block","Bode","Boehm","Bogan","Bogisich","Borer","Bosco","Botsford","Boyer","Boyle","Bradtke","Brakus","Braun","Breitenberg","Brekke","Brown","Bruen","Buckridge","Carroll","Carter","Cartwright","Casper","Cassin","Champlin","Christiansen","Cole","Collier","Collins","Conn","Connelly","Conroy","Considine","Corkery","Cormier","Corwin","Cremin","Crist","Crona","Cronin","Crooks","Cruickshank","Cummerata","Cummings","Dach","D'Amore","Daniel","Dare","Daugherty","Davis","Deckow","Denesik","Dibbert","Dickens","Dicki","Dickinson","Dietrich","Donnelly","Dooley","Douglas","Doyle","DuBuque","Durgan","Ebert","Effertz","Emard","Emmerich","Erdman","Ernser","Fadel","Fahey","Farrell","Fay","Feeney","Feest","Feil","Ferry","Fisher","Flatley","Frami","Franecki","Franey","Friesen","Fritsch","Funk","Gaylord","Gerhold","Gerlach","Gibson","Gislason","Gleason","Gleichner","Glover","Goldner","Goodwin","Gorczany","Gottlieb","Goyette","Grady","Graham","Grant","Green","Greenfelder","Greenholt","Grimes","Gulgowski","Gusikowski","Gutkowski","Gutmann","Haag","Hackett","Hagenes","Hahn","Haley","Halvorson","Hamill","Hammes","Hand","Hane","Hansen","Harber","Harris","Hartmann","Harvey","Hauck","Hayes","Heaney","Heathcote","Hegmann","Heidenreich","Heller","Herman","Hermann","Hermiston","Herzog","Hessel","Hettinger","Hickle","Hilll","Hills","Hilpert","Hintz","Hirthe","Hodkiewicz","Hoeger","Homenick","Hoppe","Howe","Howell","Hudson","Huel","Huels","Hyatt","Jacobi","Jacobs","Jacobson","Jakubowski","Jaskolski","Jast","Jenkins","Jerde","Johns","Johnson","Johnston","Jones","Kassulke","Kautzer","Keebler","Keeling","Kemmer","Kerluke","Kertzmann","Kessler","Kiehn","Kihn","Kilback","King","Kirlin","Klein","Kling","Klocko","Koch","Koelpin","Koepp","Kohler","Konopelski","Koss","Kovacek","Kozey","Krajcik","Kreiger","Kris","Kshlerin","Kub","Kuhic","Kuhlman","Kuhn","Kulas","Kunde","Kunze","Kuphal","Kutch","Kuvalis","Labadie","Lakin","Lang","Langosh","Langworth","Larkin","Larson","Leannon","Lebsack","Ledner","Leffler","Legros","Lehner","Lemke","Lesch","Leuschke","Lind","Lindgren","Littel","Little","Lockman","Lowe","Lubowitz","Lueilwitz","Luettgen","Lynch","Macejkovic","MacGyver","Maggio","Mann","Mante","Marks","Marquardt","Marvin","Mayer","Mayert","McClure","McCullough","McDermott","McGlynn","McKenzie","McLaughlin","Medhurst","Mertz","Metz","Miller","Mills","Mitchell","Moen","Mohr","Monahan","Moore","Morar","Morissette","Mosciski","Mraz","Mueller","Muller","Murazik","Murphy","Murray","Nader","Nicolas","Nienow","Nikolaus","Nitzsche","Nolan","Oberbrunner","O'Connell","O'Conner","O'Hara","O'Keefe","O'Kon","Okuneva","Olson","Ondricka","O'Reilly","Orn","Ortiz","Osinski","Pacocha","Padberg","Pagac","Parisian","Parker","Paucek","Pfannerstill","Pfeffer","Pollich","Pouros","Powlowski","Predovic","Price","Prohaska","Prosacco","Purdy","Quigley","Quitzon","Rath","Ratke","Rau","Raynor","Reichel","Reichert","Reilly","Reinger","Rempel","Renner","Reynolds","Rice","Rippin","Ritchie","Robel","Roberts","Rodriguez","Rogahn","Rohan","Rolfson","Romaguera","Roob","Rosenbaum","Rowe","Ruecker","Runolfsdottir","Runolfsson","Runte","Russel","Rutherford","Ryan","Sanford","Satterfield","Sauer","Sawayn","Schaden","Schaefer","Schamberger","Schiller","Schimmel","Schinner","Schmeler","Schmidt","Schmitt","Schneider","Schoen","Schowalter","Schroeder","Schulist","Schultz","Schumm","Schuppe","Schuster","Senger","Shanahan","Shields","Simonis","Sipes","Skiles","Smith","Smitham","Spencer","Spinka","Sporer","Stamm","Stanton","Stark","Stehr","Steuber","Stiedemann","Stokes","Stoltenberg","Stracke","Streich","Stroman","Strosin","Swaniawski","Swift","Terry","Thiel","Thompson","Tillman","Torp","Torphy","Towne","Toy","Trantow","Tremblay","Treutel","Tromp","Turcotte","Turner","Ullrich","Upton","Vandervort","Veum","Volkman","Von","VonRueden","Waelchi","Walker","Walsh","Walter","Ward","Waters","Watsica","Weber","Wehner","Weimann","Weissnat","Welch","West","White","Wiegand","Wilderman","Wilkinson","Will","Williamson","Willms","Windler","Wintheiser","Wisoky","Wisozk","Witting","Wiza","Wolf","Wolff","Wuckert","Wunsch","Wyman","Yost","Yundt","Zboncak","Zemlak","Ziemann","Zieme","Zulauf"]})),KV=c((()=>{Ts=["James","John","Robert","Michael","William","David","Richard","Charles","Joseph","Thomas","Christopher","Daniel","Paul","Mark","Donald","George","Kenneth","Steven","Edward","Brian","Ronald","Anthony","Kevin","Jason","Matthew","Gary","Timothy","Jose","Larry","Jeffrey","Frank","Scott","Eric","Stephen","Andrew","Raymond","Gregory","Joshua","Jerry","Dennis","Walter","Patrick","Peter","Harold","Douglas","Henry","Carl","Arthur","Ryan","Roger","Joe","Juan","Jack","Albert","Jonathan","Justin","Terry","Gerald","Keith","Samuel","Willie","Ralph","Lawrence","Nicholas","Roy","Benjamin","Bruce","Brandon","Adam","Harry","Fred","Wayne","Billy","Steve","Louis","Jeremy","Aaron","Randy","Howard","Eugene","Carlos","Russell","Bobby","Victor","Martin","Ernest","Phillip","Todd","Jesse","Craig","Alan","Shawn","Clarence","Sean","Philip","Chris","Johnny","Earl","Jimmy","Antonio","Danny","Bryan","Tony","Luis","Mike","Stanley","Leonard","Nathan","Dale","Manuel","Rodney","Curtis","Norman","Allen","Marvin","Vincent","Glenn","Jeffery","Travis","Jeff","Chad","Jacob","Lee","Melvin","Alfred","Kyle","Francis","Bradley","Jesus","Herbert","Frederick","Ray","Joel","Edwin","Don","Eddie","Ricky","Troy","Randall","Barry","Alexander","Bernard","Mario","Leroy","Francisco","Marcus","Micheal","Theodore","Clifford","Miguel","Oscar","Jay","Jim","Tom","Calvin","Alex","Jon","Ronnie","Bill","Lloyd","Tommy","Leon","Derek","Warren","Darrell","Jerome","Floyd","Leo","Alvin","Tim","Wesley","Gordon","Dean","Greg","Jorge","Dustin","Pedro","Derrick","Dan","Lewis","Zachary","Corey","Herman","Maurice","Vernon","Roberto","Clyde","Glen","Hector","Shane","Ricardo","Sam","Rick","Lester","Brent","Ramon","Charlie","Tyler","Gilbert","Gene","Marc","Reginald","Ruben","Brett","Angel","Nathaniel","Rafael","Leslie","Edgar","Milton","Raul","Ben","Chester","Cecil","Duane","Franklin","Andre","Elmer","Brad","Gabriel","Ron","Mitchell","Roland","Arnold","Harvey","Jared","Adrian","Karl","Cory","Claude","Erik","Darryl","Jamie","Neil","Jessie","Christian","Javier","Fernando","Clinton","Ted","Mathew","Tyrone","Darren","Lonnie","Lance","Cody","Julio","Kelly","Kurt","Allan","Nelson","Guy","Clayton","Hugh","Max","Dwayne","Dwight","Armando","Felix","Jimmie","Everett","Jordan","Ian","Wallace","Ken","Bob","Jaime","Casey","Alfredo","Alberto","Dave","Ivan","Johnnie","Sidney","Byron","Julian","Isaac","Morris","Clifton","Willard","Daryl","Ross","Virgil","Andy","Marshall","Salvador","Perry","Kirk","Sergio","Marion","Tracy","Seth","Kent","Terrance","Rene","Eduardo","Terrence","Enrique","Freddie","Wade","Austin","Stuart","Fredrick","Arturo","Alejandro","Jackie","Joey","Nick","Luther","Wendell","Jeremiah","Evan","Julius","Dana","Donnie","Otis","Shannon","Trevor","Oliver","Luke","Homer","Gerard","Doug","Kenny","Hubert","Angelo","Shaun","Lyle","Matt","Lynn","Alfonso","Orlando","Rex","Carlton","Ernesto","Cameron","Neal","Pablo","Lorenzo","Omar","Wilbur","Blake","Grant","Horace","Roderick","Kerry","Abraham","Willis","Rickey","Jean","Ira","Andres","Cesar","Johnathan","Malcolm","Rudolph","Damon","Kelvin","Rudy","Preston","Alton","Archie","Marco","Wm","Pete","Randolph","Garry","Geoffrey","Jonathon","Felipe","Bennie","Gerardo","Ed","Dominic","Robin","Loren","Delbert","Colin","Guillermo","Earnest","Lucas","Benny","Noel","Spencer","Rodolfo","Myron","Edmund","Garrett","Salvatore","Cedric","Lowell","Gregg","Sherman","Wilson","Devin","Sylvester","Kim","Roosevelt","Israel","Jermaine","Forrest","Wilbert","Leland","Simon","Guadalupe","Clark","Irving","Carroll","Bryant","Owen","Rufus","Woodrow","Sammy","Kristopher","Mack","Levi","Marcos","Gustavo","Jake","Lionel","Marty","Taylor","Ellis","Dallas","Gilberto","Clint","Nicolas","Laurence","Ismael","Orville","Drew","Jody","Ervin","Dewey","Al","Wilfred","Josh","Hugo","Ignacio","Caleb","Tomas","Sheldon","Erick","Frankie","Stewart","Doyle","Darrel","Rogelio","Terence","Santiago","Alonzo","Elias","Bert","Elbert","Ramiro","Conrad","Pat","Noah","Grady","Phil","Cornelius","Lamar","Rolando","Clay","Percy","Dexter","Bradford","Merle","Darin","Amos","Terrell","Moses","Irvin","Saul","Roman","Darnell","Randal","Tommie","Timmy","Darrin","Winston","Brendan","Toby","Van","Abel","Dominick","Boyd","Courtney","Jan","Emilio","Elijah","Cary","Domingo","Santos","Aubrey","Emmett","Marlon","Emanuel","Jerald","Edmond"]})),RV=c((()=>{_s=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),zV=c((()=>{ws=["Mr.","Mrs.","Ms.","Miss","Dr."]})),OV=c((()=>{js=["Jr.","Sr.","I","II","III","IV","V","MD","DDS","PhD","DVM"]})),IV=c((()=>{Es={descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","Dynamic","International","Legacy","Forward","Internal","Human","Chief","Principal"],level:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job:["Supervisor","Associate","Executive","Liaison","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"]}})),VV=c((()=>{PV(),LV(),DV(),xV(),CV(),KV(),RV(),zV(),OV(),IV(),Ns={binary_gender:ys,gender:As,prefix:ws,first_name:Ss,female_first_name:bs,male_first_name:Ts,last_name:Ms,suffix:js,name:_s,title:Es}})),GV=c((()=>{Bs=["!##-!##-####","(!##) !##-####","1-!##-!##-####","!##.!##.####","!##-!##-####","(!##) !##-####","1-!##-!##-####","!##.!##.####","!##-!##-#### x###","(!##) !##-#### x###","1-!##-!##-#### x###","!##.!##.#### x###","!##-!##-#### x####","(!##) !##-#### x####","1-!##-!##-#### x####","!##.!##.#### x####","!##-!##-#### x#####","(!##) !##-#### x#####","1-!##-!##-#### x#####","!##.!##.#### x#####"]})),HV=c((()=>{GV(),Ps={formats:Bs}})),FV=c((()=>{Ls=["/Applications","/bin","/boot","/boot/defaults","/dev","/etc","/etc/defaults","/etc/mail","/etc/namedb","/etc/periodic","/etc/ppp","/home","/home/user","/home/user/dir","/lib","/Library","/lost+found","/media","/mnt","/net","/Network","/opt","/opt/bin","/opt/include","/opt/lib","/opt/sbin","/opt/share","/private","/private/tmp","/private/var","/proc","/rescue","/root","/sbin","/selinux","/srv","/sys","/System","/tmp","/Users","/usr","/usr/X11R6","/usr/bin","/usr/include","/usr/lib","/usr/libdata","/usr/libexec","/usr/local/bin","/usr/local/src","/usr/obj","/usr/ports","/usr/sbin","/usr/share","/usr/src","/var","/var/log","/var/mail","/var/spool","/var/tmp","/var/yp"]})),JV=c((()=>{Ds={"application/1d-interleaved-parityfec":{source:"iana"},"application/3gpdash-qoe-report+xml":{source:"iana"},"application/3gpp-ims+xml":{source:"iana"},"application/a2l":{source:"iana"},"application/activemessage":{source:"iana"},"application/alto-costmap+json":{source:"iana",compressible:!0},"application/alto-costmapfilter+json":{source:"iana",compressible:!0},"application/alto-directory+json":{source:"iana",compressible:!0},"application/alto-endpointcost+json":{source:"iana",compressible:!0},"application/alto-endpointcostparams+json":{source:"iana",compressible:!0},"application/alto-endpointprop+json":{source:"iana",compressible:!0},"application/alto-endpointpropparams+json":{source:"iana",compressible:!0},"application/alto-error+json":{source:"iana",compressible:!0},"application/alto-networkmap+json":{source:"iana",compressible:!0},"application/alto-networkmapfilter+json":{source:"iana",compressible:!0},"application/aml":{source:"iana"},"application/andrew-inset":{source:"iana",extensions:["ez"]},"application/applefile":{source:"iana"},"application/applixware":{source:"apache",extensions:["aw"]},"application/atf":{source:"iana"},"application/atfx":{source:"iana"},"application/atom+xml":{source:"iana",compressible:!0,extensions:["atom"]},"application/atomcat+xml":{source:"iana",extensions:["atomcat"]},"application/atomdeleted+xml":{source:"iana"},"application/atomicmail":{source:"iana"},"application/atomsvc+xml":{source:"iana",extensions:["atomsvc"]},"application/atxml":{source:"iana"},"application/auth-policy+xml":{source:"iana"},"application/bacnet-xdd+zip":{source:"iana"},"application/batch-smtp":{source:"iana"},"application/bdoc":{compressible:!1,extensions:["bdoc"]},"application/beep+xml":{source:"iana"},"application/calendar+json":{source:"iana",compressible:!0},"application/calendar+xml":{source:"iana"},"application/call-completion":{source:"iana"},"application/cals-1840":{source:"iana"},"application/cbor":{source:"iana"},"application/ccmp+xml":{source:"iana"},"application/ccxml+xml":{source:"iana",extensions:["ccxml"]},"application/cdfx+xml":{source:"iana"},"application/cdmi-capability":{source:"iana",extensions:["cdmia"]},"application/cdmi-container":{source:"iana",extensions:["cdmic"]},"application/cdmi-domain":{source:"iana",extensions:["cdmid"]},"application/cdmi-object":{source:"iana",extensions:["cdmio"]},"application/cdmi-queue":{source:"iana",extensions:["cdmiq"]},"application/cdni":{source:"iana"},"application/cea":{source:"iana"},"application/cea-2018+xml":{source:"iana"},"application/cellml+xml":{source:"iana"},"application/cfw":{source:"iana"},"application/cms":{source:"iana"},"application/cnrp+xml":{source:"iana"},"application/coap-group+json":{source:"iana",compressible:!0},"application/commonground":{source:"iana"},"application/conference-info+xml":{source:"iana"},"application/cpl+xml":{source:"iana"},"application/csrattrs":{source:"iana"},"application/csta+xml":{source:"iana"},"application/cstadata+xml":{source:"iana"},"application/csvm+json":{source:"iana",compressible:!0},"application/cu-seeme":{source:"apache",extensions:["cu"]},"application/cybercash":{source:"iana"},"application/dart":{compressible:!0},"application/dash+xml":{source:"iana",extensions:["mdp"]},"application/dashdelta":{source:"iana"},"application/davmount+xml":{source:"iana",extensions:["davmount"]},"application/dca-rft":{source:"iana"},"application/dcd":{source:"iana"},"application/dec-dx":{source:"iana"},"application/dialog-info+xml":{source:"iana"},"application/dicom":{source:"iana"},"application/dii":{source:"iana"},"application/dit":{source:"iana"},"application/dns":{source:"iana"},"application/docbook+xml":{source:"apache",extensions:["dbk"]},"application/dskpp+xml":{source:"iana"},"application/dssc+der":{source:"iana",extensions:["dssc"]},"application/dssc+xml":{source:"iana",extensions:["xdssc"]},"application/dvcs":{source:"iana"},"application/ecmascript":{source:"iana",compressible:!0,extensions:["ecma"]},"application/edi-consent":{source:"iana"},"application/edi-x12":{source:"iana",compressible:!1},"application/edifact":{source:"iana",compressible:!1},"application/emergencycalldata.comment+xml":{source:"iana"},"application/emergencycalldata.deviceinfo+xml":{source:"iana"},"application/emergencycalldata.providerinfo+xml":{source:"iana"},"application/emergencycalldata.serviceinfo+xml":{source:"iana"},"application/emergencycalldata.subscriberinfo+xml":{source:"iana"},"application/emma+xml":{source:"iana",extensions:["emma"]},"application/emotionml+xml":{source:"iana"},"application/encaprtp":{source:"iana"},"application/epp+xml":{source:"iana"},"application/epub+zip":{source:"iana",extensions:["epub"]},"application/eshop":{source:"iana"},"application/exi":{source:"iana",extensions:["exi"]},"application/fastinfoset":{source:"iana"},"application/fastsoap":{source:"iana"},"application/fdt+xml":{source:"iana"},"application/fits":{source:"iana"},"application/font-sfnt":{source:"iana"},"application/font-tdpfr":{source:"iana",extensions:["pfr"]},"application/font-woff":{source:"iana",compressible:!1,extensions:["woff"]},"application/font-woff2":{compressible:!1,extensions:["woff2"]},"application/framework-attributes+xml":{source:"iana"},"application/gml+xml":{source:"apache",extensions:["gml"]},"application/gpx+xml":{source:"apache",extensions:["gpx"]},"application/gxf":{source:"apache",extensions:["gxf"]},"application/gzip":{source:"iana",compressible:!1},"application/h224":{source:"iana"},"application/held+xml":{source:"iana"},"application/http":{source:"iana"},"application/hyperstudio":{source:"iana",extensions:["stk"]},"application/ibe-key-request+xml":{source:"iana"},"application/ibe-pkg-reply+xml":{source:"iana"},"application/ibe-pp-data":{source:"iana"},"application/iges":{source:"iana"},"application/im-iscomposing+xml":{source:"iana"},"application/index":{source:"iana"},"application/index.cmd":{source:"iana"},"application/index.obj":{source:"iana"},"application/index.response":{source:"iana"},"application/index.vnd":{source:"iana"},"application/inkml+xml":{source:"iana",extensions:["ink","inkml"]},"application/iotp":{source:"iana"},"application/ipfix":{source:"iana",extensions:["ipfix"]},"application/ipp":{source:"iana"},"application/isup":{source:"iana"},"application/its+xml":{source:"iana"},"application/java-archive":{source:"apache",compressible:!1,extensions:["jar","war","ear"]},"application/java-serialized-object":{source:"apache",compressible:!1,extensions:["ser"]},"application/java-vm":{source:"apache",compressible:!1,extensions:["class"]},"application/javascript":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["js"]},"application/jose":{source:"iana"},"application/jose+json":{source:"iana",compressible:!0},"application/jrd+json":{source:"iana",compressible:!0},"application/json":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["json","map"]},"application/json-patch+json":{source:"iana",compressible:!0},"application/json-seq":{source:"iana"},"application/json5":{extensions:["json5"]},"application/jsonml+json":{source:"apache",compressible:!0,extensions:["jsonml"]},"application/jwk+json":{source:"iana",compressible:!0},"application/jwk-set+json":{source:"iana",compressible:!0},"application/jwt":{source:"iana"},"application/kpml-request+xml":{source:"iana"},"application/kpml-response+xml":{source:"iana"},"application/ld+json":{source:"iana",compressible:!0,extensions:["jsonld"]},"application/link-format":{source:"iana"},"application/load-control+xml":{source:"iana"},"application/lost+xml":{source:"iana",extensions:["lostxml"]},"application/lostsync+xml":{source:"iana"},"application/lxf":{source:"iana"},"application/mac-binhex40":{source:"iana",extensions:["hqx"]},"application/mac-compactpro":{source:"apache",extensions:["cpt"]},"application/macwriteii":{source:"iana"},"application/mads+xml":{source:"iana",extensions:["mads"]},"application/manifest+json":{charset:"UTF-8",compressible:!0,extensions:["webmanifest"]},"application/marc":{source:"iana",extensions:["mrc"]},"application/marcxml+xml":{source:"iana",extensions:["mrcx"]},"application/mathematica":{source:"iana",extensions:["ma","nb","mb"]},"application/mathml+xml":{source:"iana",extensions:["mathml"]},"application/mathml-content+xml":{source:"iana"},"application/mathml-presentation+xml":{source:"iana"},"application/mbms-associated-procedure-description+xml":{source:"iana"},"application/mbms-deregister+xml":{source:"iana"},"application/mbms-envelope+xml":{source:"iana"},"application/mbms-msk+xml":{source:"iana"},"application/mbms-msk-response+xml":{source:"iana"},"application/mbms-protection-description+xml":{source:"iana"},"application/mbms-reception-report+xml":{source:"iana"},"application/mbms-register+xml":{source:"iana"},"application/mbms-register-response+xml":{source:"iana"},"application/mbms-schedule+xml":{source:"iana"},"application/mbms-user-service-description+xml":{source:"iana"},"application/mbox":{source:"iana",extensions:["mbox"]},"application/media-policy-dataset+xml":{source:"iana"},"application/media_control+xml":{source:"iana"},"application/mediaservercontrol+xml":{source:"iana",extensions:["mscml"]},"application/merge-patch+json":{source:"iana",compressible:!0},"application/metalink+xml":{source:"apache",extensions:["metalink"]},"application/metalink4+xml":{source:"iana",extensions:["meta4"]},"application/mets+xml":{source:"iana",extensions:["mets"]},"application/mf4":{source:"iana"},"application/mikey":{source:"iana"},"application/mods+xml":{source:"iana",extensions:["mods"]},"application/moss-keys":{source:"iana"},"application/moss-signature":{source:"iana"},"application/mosskey-data":{source:"iana"},"application/mosskey-request":{source:"iana"},"application/mp21":{source:"iana",extensions:["m21","mp21"]},"application/mp4":{source:"iana",extensions:["mp4s","m4p"]},"application/mpeg4-generic":{source:"iana"},"application/mpeg4-iod":{source:"iana"},"application/mpeg4-iod-xmt":{source:"iana"},"application/mrb-consumer+xml":{source:"iana"},"application/mrb-publish+xml":{source:"iana"},"application/msc-ivr+xml":{source:"iana"},"application/msc-mixer+xml":{source:"iana"},"application/msword":{source:"iana",compressible:!1,extensions:["doc","dot"]},"application/mxf":{source:"iana",extensions:["mxf"]},"application/nasdata":{source:"iana"},"application/news-checkgroups":{source:"iana"},"application/news-groupinfo":{source:"iana"},"application/news-transmission":{source:"iana"},"application/nlsml+xml":{source:"iana"},"application/nss":{source:"iana"},"application/ocsp-request":{source:"iana"},"application/ocsp-response":{source:"iana"},"application/octet-stream":{source:"iana",compressible:!1,extensions:["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{source:"iana",extensions:["oda"]},"application/odx":{source:"iana"},"application/oebps-package+xml":{source:"iana",extensions:["opf"]},"application/ogg":{source:"iana",compressible:!1,extensions:["ogx"]},"application/omdoc+xml":{source:"apache",extensions:["omdoc"]},"application/onenote":{source:"apache",extensions:["onetoc","onetoc2","onetmp","onepkg"]},"application/oxps":{source:"iana",extensions:["oxps"]},"application/p2p-overlay+xml":{source:"iana"},"application/parityfec":{source:"iana"},"application/patch-ops-error+xml":{source:"iana",extensions:["xer"]},"application/pdf":{source:"iana",compressible:!1,extensions:["pdf"]},"application/pdx":{source:"iana"},"application/pgp-encrypted":{source:"iana",compressible:!1,extensions:["pgp"]},"application/pgp-keys":{source:"iana"},"application/pgp-signature":{source:"iana",extensions:["asc","sig"]},"application/pics-rules":{source:"apache",extensions:["prf"]},"application/pidf+xml":{source:"iana"},"application/pidf-diff+xml":{source:"iana"},"application/pkcs10":{source:"iana",extensions:["p10"]},"application/pkcs12":{source:"iana"},"application/pkcs7-mime":{source:"iana",extensions:["p7m","p7c"]},"application/pkcs7-signature":{source:"iana",extensions:["p7s"]},"application/pkcs8":{source:"iana",extensions:["p8"]},"application/pkix-attr-cert":{source:"iana",extensions:["ac"]},"application/pkix-cert":{source:"iana",extensions:["cer"]},"application/pkix-crl":{source:"iana",extensions:["crl"]},"application/pkix-pkipath":{source:"iana",extensions:["pkipath"]},"application/pkixcmp":{source:"iana",extensions:["pki"]},"application/pls+xml":{source:"iana",extensions:["pls"]},"application/poc-settings+xml":{source:"iana"},"application/postscript":{source:"iana",compressible:!0,extensions:["ai","eps","ps"]},"application/provenance+xml":{source:"iana"},"application/prs.alvestrand.titrax-sheet":{source:"iana"},"application/prs.cww":{source:"iana",extensions:["cww"]},"application/prs.hpub+zip":{source:"iana"},"application/prs.nprend":{source:"iana"},"application/prs.plucker":{source:"iana"},"application/prs.rdf-xml-crypt":{source:"iana"},"application/prs.xsf+xml":{source:"iana"},"application/pskc+xml":{source:"iana",extensions:["pskcxml"]},"application/qsig":{source:"iana"},"application/raptorfec":{source:"iana"},"application/rdap+json":{source:"iana",compressible:!0},"application/rdf+xml":{source:"iana",compressible:!0,extensions:["rdf"]},"application/reginfo+xml":{source:"iana",extensions:["rif"]},"application/relax-ng-compact-syntax":{source:"iana",extensions:["rnc"]},"application/remote-printing":{source:"iana"},"application/reputon+json":{source:"iana",compressible:!0},"application/resource-lists+xml":{source:"iana",extensions:["rl"]},"application/resource-lists-diff+xml":{source:"iana",extensions:["rld"]},"application/rfc+xml":{source:"iana"},"application/riscos":{source:"iana"},"application/rlmi+xml":{source:"iana"},"application/rls-services+xml":{source:"iana",extensions:["rs"]},"application/rpki-ghostbusters":{source:"iana",extensions:["gbr"]},"application/rpki-manifest":{source:"iana",extensions:["mft"]},"application/rpki-roa":{source:"iana",extensions:["roa"]},"application/rpki-updown":{source:"iana"},"application/rsd+xml":{source:"apache",extensions:["rsd"]},"application/rss+xml":{source:"apache",compressible:!0,extensions:["rss"]},"application/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"application/rtploopback":{source:"iana"},"application/rtx":{source:"iana"},"application/samlassertion+xml":{source:"iana"},"application/samlmetadata+xml":{source:"iana"},"application/sbml+xml":{source:"iana",extensions:["sbml"]},"application/scaip+xml":{source:"iana"},"application/scim+json":{source:"iana",compressible:!0},"application/scvp-cv-request":{source:"iana",extensions:["scq"]},"application/scvp-cv-response":{source:"iana",extensions:["scs"]},"application/scvp-vp-request":{source:"iana",extensions:["spq"]},"application/scvp-vp-response":{source:"iana",extensions:["spp"]},"application/sdp":{source:"iana",extensions:["sdp"]},"application/sep+xml":{source:"iana"},"application/sep-exi":{source:"iana"},"application/session-info":{source:"iana"},"application/set-payment":{source:"iana"},"application/set-payment-initiation":{source:"iana",extensions:["setpay"]},"application/set-registration":{source:"iana"},"application/set-registration-initiation":{source:"iana",extensions:["setreg"]},"application/sgml":{source:"iana"},"application/sgml-open-catalog":{source:"iana"},"application/shf+xml":{source:"iana",extensions:["shf"]},"application/sieve":{source:"iana"},"application/simple-filter+xml":{source:"iana"},"application/simple-message-summary":{source:"iana"},"application/simplesymbolcontainer":{source:"iana"},"application/slate":{source:"iana"},"application/smil":{source:"iana"},"application/smil+xml":{source:"iana",extensions:["smi","smil"]},"application/smpte336m":{source:"iana"},"application/soap+fastinfoset":{source:"iana"},"application/soap+xml":{source:"iana",compressible:!0},"application/sparql-query":{source:"iana",extensions:["rq"]},"application/sparql-results+xml":{source:"iana",extensions:["srx"]},"application/spirits-event+xml":{source:"iana"},"application/sql":{source:"iana"},"application/srgs":{source:"iana",extensions:["gram"]},"application/srgs+xml":{source:"iana",extensions:["grxml"]},"application/sru+xml":{source:"iana",extensions:["sru"]},"application/ssdl+xml":{source:"apache",extensions:["ssdl"]},"application/ssml+xml":{source:"iana",extensions:["ssml"]},"application/tamp-apex-update":{source:"iana"},"application/tamp-apex-update-confirm":{source:"iana"},"application/tamp-community-update":{source:"iana"},"application/tamp-community-update-confirm":{source:"iana"},"application/tamp-error":{source:"iana"},"application/tamp-sequence-adjust":{source:"iana"},"application/tamp-sequence-adjust-confirm":{source:"iana"},"application/tamp-status-query":{source:"iana"},"application/tamp-status-response":{source:"iana"},"application/tamp-update":{source:"iana"},"application/tamp-update-confirm":{source:"iana"},"application/tar":{compressible:!0},"application/tei+xml":{source:"iana",extensions:["tei","teicorpus"]},"application/thraud+xml":{source:"iana",extensions:["tfi"]},"application/timestamp-query":{source:"iana"},"application/timestamp-reply":{source:"iana"},"application/timestamped-data":{source:"iana",extensions:["tsd"]},"application/ttml+xml":{source:"iana"},"application/tve-trigger":{source:"iana"},"application/ulpfec":{source:"iana"},"application/urc-grpsheet+xml":{source:"iana"},"application/urc-ressheet+xml":{source:"iana"},"application/urc-targetdesc+xml":{source:"iana"},"application/urc-uisocketdesc+xml":{source:"iana"},"application/vcard+json":{source:"iana",compressible:!0},"application/vcard+xml":{source:"iana"},"application/vemmi":{source:"iana"},"application/vividence.scriptfile":{source:"apache"},"application/vnd.3gpp-prose+xml":{source:"iana"},"application/vnd.3gpp-prose-pc3ch+xml":{source:"iana"},"application/vnd.3gpp.access-transfer-events+xml":{source:"iana"},"application/vnd.3gpp.bsf+xml":{source:"iana"},"application/vnd.3gpp.mid-call+xml":{source:"iana"},"application/vnd.3gpp.pic-bw-large":{source:"iana",extensions:["plb"]},"application/vnd.3gpp.pic-bw-small":{source:"iana",extensions:["psb"]},"application/vnd.3gpp.pic-bw-var":{source:"iana",extensions:["pvb"]},"application/vnd.3gpp.sms":{source:"iana"},"application/vnd.3gpp.srvcc-ext+xml":{source:"iana"},"application/vnd.3gpp.srvcc-info+xml":{source:"iana"},"application/vnd.3gpp.state-and-event-info+xml":{source:"iana"},"application/vnd.3gpp.ussd+xml":{source:"iana"},"application/vnd.3gpp2.bcmcsinfo+xml":{source:"iana"},"application/vnd.3gpp2.sms":{source:"iana"},"application/vnd.3gpp2.tcap":{source:"iana",extensions:["tcap"]},"application/vnd.3m.post-it-notes":{source:"iana",extensions:["pwn"]},"application/vnd.accpac.simply.aso":{source:"iana",extensions:["aso"]},"application/vnd.accpac.simply.imp":{source:"iana",extensions:["imp"]},"application/vnd.acucobol":{source:"iana",extensions:["acu"]},"application/vnd.acucorp":{source:"iana",extensions:["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{source:"apache",extensions:["air"]},"application/vnd.adobe.flash.movie":{source:"iana"},"application/vnd.adobe.formscentral.fcdt":{source:"iana",extensions:["fcdt"]},"application/vnd.adobe.fxp":{source:"iana",extensions:["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{source:"iana"},"application/vnd.adobe.xdp+xml":{source:"iana",extensions:["xdp"]},"application/vnd.adobe.xfdf":{source:"iana",extensions:["xfdf"]},"application/vnd.aether.imp":{source:"iana"},"application/vnd.ah-barcode":{source:"iana"},"application/vnd.ahead.space":{source:"iana",extensions:["ahead"]},"application/vnd.airzip.filesecure.azf":{source:"iana",extensions:["azf"]},"application/vnd.airzip.filesecure.azs":{source:"iana",extensions:["azs"]},"application/vnd.amazon.ebook":{source:"apache",extensions:["azw"]},"application/vnd.americandynamics.acc":{source:"iana",extensions:["acc"]},"application/vnd.amiga.ami":{source:"iana",extensions:["ami"]},"application/vnd.amundsen.maze+xml":{source:"iana"},"application/vnd.android.package-archive":{source:"apache",compressible:!1,extensions:["apk"]},"application/vnd.anki":{source:"iana"},"application/vnd.anser-web-certificate-issue-initiation":{source:"iana",extensions:["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{source:"apache",extensions:["fti"]},"application/vnd.antix.game-component":{source:"iana",extensions:["atx"]},"application/vnd.apache.thrift.binary":{source:"iana"},"application/vnd.apache.thrift.compact":{source:"iana"},"application/vnd.apache.thrift.json":{source:"iana"},"application/vnd.api+json":{source:"iana",compressible:!0},"application/vnd.apple.installer+xml":{source:"iana",extensions:["mpkg"]},"application/vnd.apple.mpegurl":{source:"iana",extensions:["m3u8"]},"application/vnd.apple.pkpass":{compressible:!1,extensions:["pkpass"]},"application/vnd.arastra.swi":{source:"iana"},"application/vnd.aristanetworks.swi":{source:"iana",extensions:["swi"]},"application/vnd.artsquare":{source:"iana"},"application/vnd.astraea-software.iota":{source:"iana",extensions:["iota"]},"application/vnd.audiograph":{source:"iana",extensions:["aep"]},"application/vnd.autopackage":{source:"iana"},"application/vnd.avistar+xml":{source:"iana"},"application/vnd.balsamiq.bmml+xml":{source:"iana"},"application/vnd.balsamiq.bmpr":{source:"iana"},"application/vnd.bekitzur-stech+json":{source:"iana",compressible:!0},"application/vnd.biopax.rdf+xml":{source:"iana"},"application/vnd.blueice.multipass":{source:"iana",extensions:["mpm"]},"application/vnd.bluetooth.ep.oob":{source:"iana"},"application/vnd.bluetooth.le.oob":{source:"iana"},"application/vnd.bmi":{source:"iana",extensions:["bmi"]},"application/vnd.businessobjects":{source:"iana",extensions:["rep"]},"application/vnd.cab-jscript":{source:"iana"},"application/vnd.canon-cpdl":{source:"iana"},"application/vnd.canon-lips":{source:"iana"},"application/vnd.cendio.thinlinc.clientconf":{source:"iana"},"application/vnd.century-systems.tcp_stream":{source:"iana"},"application/vnd.chemdraw+xml":{source:"iana",extensions:["cdxml"]},"application/vnd.chipnuts.karaoke-mmd":{source:"iana",extensions:["mmd"]},"application/vnd.cinderella":{source:"iana",extensions:["cdy"]},"application/vnd.cirpack.isdn-ext":{source:"iana"},"application/vnd.citationstyles.style+xml":{source:"iana"},"application/vnd.claymore":{source:"iana",extensions:["cla"]},"application/vnd.cloanto.rp9":{source:"iana",extensions:["rp9"]},"application/vnd.clonk.c4group":{source:"iana",extensions:["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{source:"iana",extensions:["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{source:"iana",extensions:["c11amz"]},"application/vnd.coffeescript":{source:"iana"},"application/vnd.collection+json":{source:"iana",compressible:!0},"application/vnd.collection.doc+json":{source:"iana",compressible:!0},"application/vnd.collection.next+json":{source:"iana",compressible:!0},"application/vnd.commerce-battelle":{source:"iana"},"application/vnd.commonspace":{source:"iana",extensions:["csp"]},"application/vnd.contact.cmsg":{source:"iana",extensions:["cdbcmsg"]},"application/vnd.cosmocaller":{source:"iana",extensions:["cmc"]},"application/vnd.crick.clicker":{source:"iana",extensions:["clkx"]},"application/vnd.crick.clicker.keyboard":{source:"iana",extensions:["clkk"]},"application/vnd.crick.clicker.palette":{source:"iana",extensions:["clkp"]},"application/vnd.crick.clicker.template":{source:"iana",extensions:["clkt"]},"application/vnd.crick.clicker.wordbank":{source:"iana",extensions:["clkw"]},"application/vnd.criticaltools.wbs+xml":{source:"iana",extensions:["wbs"]},"application/vnd.ctc-posml":{source:"iana",extensions:["pml"]},"application/vnd.ctct.ws+xml":{source:"iana"},"application/vnd.cups-pdf":{source:"iana"},"application/vnd.cups-postscript":{source:"iana"},"application/vnd.cups-ppd":{source:"iana",extensions:["ppd"]},"application/vnd.cups-raster":{source:"iana"},"application/vnd.cups-raw":{source:"iana"},"application/vnd.curl":{source:"iana"},"application/vnd.curl.car":{source:"apache",extensions:["car"]},"application/vnd.curl.pcurl":{source:"apache",extensions:["pcurl"]},"application/vnd.cyan.dean.root+xml":{source:"iana"},"application/vnd.cybank":{source:"iana"},"application/vnd.dart":{source:"iana",compressible:!0,extensions:["dart"]},"application/vnd.data-vision.rdz":{source:"iana",extensions:["rdz"]},"application/vnd.debian.binary-package":{source:"iana"},"application/vnd.dece.data":{source:"iana",extensions:["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{source:"iana",extensions:["uvt","uvvt"]},"application/vnd.dece.unspecified":{source:"iana",extensions:["uvx","uvvx"]},"application/vnd.dece.zip":{source:"iana",extensions:["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{source:"iana",extensions:["fe_launch"]},"application/vnd.desmume-movie":{source:"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{source:"iana"},"application/vnd.dm.delegation+xml":{source:"iana"},"application/vnd.dna":{source:"iana",extensions:["dna"]},"application/vnd.document+json":{source:"iana",compressible:!0},"application/vnd.dolby.mlp":{source:"apache",extensions:["mlp"]},"application/vnd.dolby.mobile.1":{source:"iana"},"application/vnd.dolby.mobile.2":{source:"iana"},"application/vnd.doremir.scorecloud-binary-document":{source:"iana"},"application/vnd.dpgraph":{source:"iana",extensions:["dpg"]},"application/vnd.dreamfactory":{source:"iana",extensions:["dfac"]},"application/vnd.drive+json":{source:"iana",compressible:!0},"application/vnd.ds-keypoint":{source:"apache",extensions:["kpxx"]},"application/vnd.dtg.local":{source:"iana"},"application/vnd.dtg.local.flash":{source:"iana"},"application/vnd.dtg.local.html":{source:"iana"},"application/vnd.dvb.ait":{source:"iana",extensions:["ait"]},"application/vnd.dvb.dvbj":{source:"iana"},"application/vnd.dvb.esgcontainer":{source:"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess2":{source:"iana"},"application/vnd.dvb.ipdcesgpdd":{source:"iana"},"application/vnd.dvb.ipdcroaming":{source:"iana"},"application/vnd.dvb.iptv.alfec-base":{source:"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{source:"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{source:"iana"},"application/vnd.dvb.notif-container+xml":{source:"iana"},"application/vnd.dvb.notif-generic+xml":{source:"iana"},"application/vnd.dvb.notif-ia-msglist+xml":{source:"iana"},"application/vnd.dvb.notif-ia-registration-request+xml":{source:"iana"},"application/vnd.dvb.notif-ia-registration-response+xml":{source:"iana"},"application/vnd.dvb.notif-init+xml":{source:"iana"},"application/vnd.dvb.pfr":{source:"iana"},"application/vnd.dvb.service":{source:"iana",extensions:["svc"]},"application/vnd.dxr":{source:"iana"},"application/vnd.dynageo":{source:"iana",extensions:["geo"]},"application/vnd.dzr":{source:"iana"},"application/vnd.easykaraoke.cdgdownload":{source:"iana"},"application/vnd.ecdis-update":{source:"iana"},"application/vnd.ecowin.chart":{source:"iana",extensions:["mag"]},"application/vnd.ecowin.filerequest":{source:"iana"},"application/vnd.ecowin.fileupdate":{source:"iana"},"application/vnd.ecowin.series":{source:"iana"},"application/vnd.ecowin.seriesrequest":{source:"iana"},"application/vnd.ecowin.seriesupdate":{source:"iana"},"application/vnd.emclient.accessrequest+xml":{source:"iana"},"application/vnd.enliven":{source:"iana",extensions:["nml"]},"application/vnd.enphase.envoy":{source:"iana"},"application/vnd.eprints.data+xml":{source:"iana"},"application/vnd.epson.esf":{source:"iana",extensions:["esf"]},"application/vnd.epson.msf":{source:"iana",extensions:["msf"]},"application/vnd.epson.quickanime":{source:"iana",extensions:["qam"]},"application/vnd.epson.salt":{source:"iana",extensions:["slt"]},"application/vnd.epson.ssf":{source:"iana",extensions:["ssf"]},"application/vnd.ericsson.quickcall":{source:"iana"},"application/vnd.eszigno3+xml":{source:"iana",extensions:["es3","et3"]},"application/vnd.etsi.aoc+xml":{source:"iana"},"application/vnd.etsi.asic-e+zip":{source:"iana"},"application/vnd.etsi.asic-s+zip":{source:"iana"},"application/vnd.etsi.cug+xml":{source:"iana"},"application/vnd.etsi.iptvcommand+xml":{source:"iana"},"application/vnd.etsi.iptvdiscovery+xml":{source:"iana"},"application/vnd.etsi.iptvprofile+xml":{source:"iana"},"application/vnd.etsi.iptvsad-bc+xml":{source:"iana"},"application/vnd.etsi.iptvsad-cod+xml":{source:"iana"},"application/vnd.etsi.iptvsad-npvr+xml":{source:"iana"},"application/vnd.etsi.iptvservice+xml":{source:"iana"},"application/vnd.etsi.iptvsync+xml":{source:"iana"},"application/vnd.etsi.iptvueprofile+xml":{source:"iana"},"application/vnd.etsi.mcid+xml":{source:"iana"},"application/vnd.etsi.mheg5":{source:"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{source:"iana"},"application/vnd.etsi.pstn+xml":{source:"iana"},"application/vnd.etsi.sci+xml":{source:"iana"},"application/vnd.etsi.simservs+xml":{source:"iana"},"application/vnd.etsi.timestamp-token":{source:"iana"},"application/vnd.etsi.tsl+xml":{source:"iana"},"application/vnd.etsi.tsl.der":{source:"iana"},"application/vnd.eudora.data":{source:"iana"},"application/vnd.ezpix-album":{source:"iana",extensions:["ez2"]},"application/vnd.ezpix-package":{source:"iana",extensions:["ez3"]},"application/vnd.f-secure.mobile":{source:"iana"},"application/vnd.fastcopy-disk-image":{source:"iana"},"application/vnd.fdf":{source:"iana",extensions:["fdf"]},"application/vnd.fdsn.mseed":{source:"iana",extensions:["mseed"]},"application/vnd.fdsn.seed":{source:"iana",extensions:["seed","dataless"]},"application/vnd.ffsns":{source:"iana"},"application/vnd.filmit.zfc":{source:"iana"},"application/vnd.fints":{source:"iana"},"application/vnd.firemonkeys.cloudcell":{source:"iana"},"application/vnd.flographit":{source:"iana",extensions:["gph"]},"application/vnd.fluxtime.clip":{source:"iana",extensions:["ftc"]},"application/vnd.font-fontforge-sfd":{source:"iana"},"application/vnd.framemaker":{source:"iana",extensions:["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{source:"iana",extensions:["fnc"]},"application/vnd.frogans.ltf":{source:"iana",extensions:["ltf"]},"application/vnd.fsc.weblaunch":{source:"iana",extensions:["fsc"]},"application/vnd.fujitsu.oasys":{source:"iana",extensions:["oas"]},"application/vnd.fujitsu.oasys2":{source:"iana",extensions:["oa2"]},"application/vnd.fujitsu.oasys3":{source:"iana",extensions:["oa3"]},"application/vnd.fujitsu.oasysgp":{source:"iana",extensions:["fg5"]},"application/vnd.fujitsu.oasysprs":{source:"iana",extensions:["bh2"]},"application/vnd.fujixerox.art-ex":{source:"iana"},"application/vnd.fujixerox.art4":{source:"iana"},"application/vnd.fujixerox.ddd":{source:"iana",extensions:["ddd"]},"application/vnd.fujixerox.docuworks":{source:"iana",extensions:["xdw"]},"application/vnd.fujixerox.docuworks.binder":{source:"iana",extensions:["xbd"]},"application/vnd.fujixerox.docuworks.container":{source:"iana"},"application/vnd.fujixerox.hbpl":{source:"iana"},"application/vnd.fut-misnet":{source:"iana"},"application/vnd.fuzzysheet":{source:"iana",extensions:["fzs"]},"application/vnd.genomatix.tuxedo":{source:"iana",extensions:["txd"]},"application/vnd.geo+json":{source:"iana",compressible:!0},"application/vnd.geocube+xml":{source:"iana"},"application/vnd.geogebra.file":{source:"iana",extensions:["ggb"]},"application/vnd.geogebra.tool":{source:"iana",extensions:["ggt"]},"application/vnd.geometry-explorer":{source:"iana",extensions:["gex","gre"]},"application/vnd.geonext":{source:"iana",extensions:["gxt"]},"application/vnd.geoplan":{source:"iana",extensions:["g2w"]},"application/vnd.geospace":{source:"iana",extensions:["g3w"]},"application/vnd.gerber":{source:"iana"},"application/vnd.globalplatform.card-content-mgt":{source:"iana"},"application/vnd.globalplatform.card-content-mgt-response":{source:"iana"},"application/vnd.gmx":{source:"iana",extensions:["gmx"]},"application/vnd.google-apps.document":{compressible:!1,extensions:["gdoc"]},"application/vnd.google-apps.presentation":{compressible:!1,extensions:["gslides"]},"application/vnd.google-apps.spreadsheet":{compressible:!1,extensions:["gsheet"]},"application/vnd.google-earth.kml+xml":{source:"iana",compressible:!0,extensions:["kml"]},"application/vnd.google-earth.kmz":{source:"iana",compressible:!1,extensions:["kmz"]},"application/vnd.gov.sk.e-form+xml":{source:"iana"},"application/vnd.gov.sk.e-form+zip":{source:"iana"},"application/vnd.gov.sk.xmldatacontainer+xml":{source:"iana"},"application/vnd.grafeq":{source:"iana",extensions:["gqf","gqs"]},"application/vnd.gridmp":{source:"iana"},"application/vnd.groove-account":{source:"iana",extensions:["gac"]},"application/vnd.groove-help":{source:"iana",extensions:["ghf"]},"application/vnd.groove-identity-message":{source:"iana",extensions:["gim"]},"application/vnd.groove-injector":{source:"iana",extensions:["grv"]},"application/vnd.groove-tool-message":{source:"iana",extensions:["gtm"]},"application/vnd.groove-tool-template":{source:"iana",extensions:["tpl"]},"application/vnd.groove-vcard":{source:"iana",extensions:["vcg"]},"application/vnd.hal+json":{source:"iana",compressible:!0},"application/vnd.hal+xml":{source:"iana",extensions:["hal"]},"application/vnd.handheld-entertainment+xml":{source:"iana",extensions:["zmm"]},"application/vnd.hbci":{source:"iana",extensions:["hbci"]},"application/vnd.hcl-bireports":{source:"iana"},"application/vnd.heroku+json":{source:"iana",compressible:!0},"application/vnd.hhe.lesson-player":{source:"iana",extensions:["les"]},"application/vnd.hp-hpgl":{source:"iana",extensions:["hpgl"]},"application/vnd.hp-hpid":{source:"iana",extensions:["hpid"]},"application/vnd.hp-hps":{source:"iana",extensions:["hps"]},"application/vnd.hp-jlyt":{source:"iana",extensions:["jlt"]},"application/vnd.hp-pcl":{source:"iana",extensions:["pcl"]},"application/vnd.hp-pclxl":{source:"iana",extensions:["pclxl"]},"application/vnd.httphone":{source:"iana"},"application/vnd.hydrostatix.sof-data":{source:"iana",extensions:["sfd-hdstx"]},"application/vnd.hyperdrive+json":{source:"iana",compressible:!0},"application/vnd.hzn-3d-crossword":{source:"iana"},"application/vnd.ibm.afplinedata":{source:"iana"},"application/vnd.ibm.electronic-media":{source:"iana"},"application/vnd.ibm.minipay":{source:"iana",extensions:["mpy"]},"application/vnd.ibm.modcap":{source:"iana",extensions:["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{source:"iana",extensions:["irm"]},"application/vnd.ibm.secure-container":{source:"iana",extensions:["sc"]},"application/vnd.iccprofile":{source:"iana",extensions:["icc","icm"]},"application/vnd.ieee.1905":{source:"iana"},"application/vnd.igloader":{source:"iana",extensions:["igl"]},"application/vnd.immervision-ivp":{source:"iana",extensions:["ivp"]},"application/vnd.immervision-ivu":{source:"iana",extensions:["ivu"]},"application/vnd.ims.imsccv1p1":{source:"iana"},"application/vnd.ims.imsccv1p2":{source:"iana"},"application/vnd.ims.imsccv1p3":{source:"iana"},"application/vnd.ims.lis.v2.result+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy.id+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings.simple+json":{source:"iana",compressible:!0},"application/vnd.informedcontrol.rms+xml":{source:"iana"},"application/vnd.informix-visionary":{source:"iana"},"application/vnd.infotech.project":{source:"iana"},"application/vnd.infotech.project+xml":{source:"iana"},"application/vnd.innopath.wamp.notification":{source:"iana"},"application/vnd.insors.igm":{source:"iana",extensions:["igm"]},"application/vnd.intercon.formnet":{source:"iana",extensions:["xpw","xpx"]},"application/vnd.intergeo":{source:"iana",extensions:["i2g"]},"application/vnd.intertrust.digibox":{source:"iana"},"application/vnd.intertrust.nncp":{source:"iana"},"application/vnd.intu.qbo":{source:"iana",extensions:["qbo"]},"application/vnd.intu.qfx":{source:"iana",extensions:["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{source:"iana"},"application/vnd.iptc.g2.conceptitem+xml":{source:"iana"},"application/vnd.iptc.g2.knowledgeitem+xml":{source:"iana"},"application/vnd.iptc.g2.newsitem+xml":{source:"iana"},"application/vnd.iptc.g2.newsmessage+xml":{source:"iana"},"application/vnd.iptc.g2.packageitem+xml":{source:"iana"},"application/vnd.iptc.g2.planningitem+xml":{source:"iana"},"application/vnd.ipunplugged.rcprofile":{source:"iana",extensions:["rcprofile"]},"application/vnd.irepository.package+xml":{source:"iana",extensions:["irp"]},"application/vnd.is-xpr":{source:"iana",extensions:["xpr"]},"application/vnd.isac.fcs":{source:"iana",extensions:["fcs"]},"application/vnd.jam":{source:"iana",extensions:["jam"]},"application/vnd.japannet-directory-service":{source:"iana"},"application/vnd.japannet-jpnstore-wakeup":{source:"iana"},"application/vnd.japannet-payment-wakeup":{source:"iana"},"application/vnd.japannet-registration":{source:"iana"},"application/vnd.japannet-registration-wakeup":{source:"iana"},"application/vnd.japannet-setstore-wakeup":{source:"iana"},"application/vnd.japannet-verification":{source:"iana"},"application/vnd.japannet-verification-wakeup":{source:"iana"},"application/vnd.jcp.javame.midlet-rms":{source:"iana",extensions:["rms"]},"application/vnd.jisp":{source:"iana",extensions:["jisp"]},"application/vnd.joost.joda-archive":{source:"iana",extensions:["joda"]},"application/vnd.jsk.isdn-ngn":{source:"iana"},"application/vnd.kahootz":{source:"iana",extensions:["ktz","ktr"]},"application/vnd.kde.karbon":{source:"iana",extensions:["karbon"]},"application/vnd.kde.kchart":{source:"iana",extensions:["chrt"]},"application/vnd.kde.kformula":{source:"iana",extensions:["kfo"]},"application/vnd.kde.kivio":{source:"iana",extensions:["flw"]},"application/vnd.kde.kontour":{source:"iana",extensions:["kon"]},"application/vnd.kde.kpresenter":{source:"iana",extensions:["kpr","kpt"]},"application/vnd.kde.kspread":{source:"iana",extensions:["ksp"]},"application/vnd.kde.kword":{source:"iana",extensions:["kwd","kwt"]},"application/vnd.kenameaapp":{source:"iana",extensions:["htke"]},"application/vnd.kidspiration":{source:"iana",extensions:["kia"]},"application/vnd.kinar":{source:"iana",extensions:["kne","knp"]},"application/vnd.koan":{source:"iana",extensions:["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{source:"iana",extensions:["sse"]},"application/vnd.las.las+xml":{source:"iana",extensions:["lasxml"]},"application/vnd.liberty-request+xml":{source:"iana"},"application/vnd.llamagraphics.life-balance.desktop":{source:"iana",extensions:["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{source:"iana",extensions:["lbe"]},"application/vnd.lotus-1-2-3":{source:"iana",extensions:["123"]},"application/vnd.lotus-approach":{source:"iana",extensions:["apr"]},"application/vnd.lotus-freelance":{source:"iana",extensions:["pre"]},"application/vnd.lotus-notes":{source:"iana",extensions:["nsf"]},"application/vnd.lotus-organizer":{source:"iana",extensions:["org"]},"application/vnd.lotus-screencam":{source:"iana",extensions:["scm"]},"application/vnd.lotus-wordpro":{source:"iana",extensions:["lwp"]},"application/vnd.macports.portpkg":{source:"iana",extensions:["portpkg"]},"application/vnd.mapbox-vector-tile":{source:"iana"},"application/vnd.marlin.drm.actiontoken+xml":{source:"iana"},"application/vnd.marlin.drm.conftoken+xml":{source:"iana"},"application/vnd.marlin.drm.license+xml":{source:"iana"},"application/vnd.marlin.drm.mdcf":{source:"iana"},"application/vnd.mason+json":{source:"iana",compressible:!0},"application/vnd.maxmind.maxmind-db":{source:"iana"},"application/vnd.mcd":{source:"iana",extensions:["mcd"]},"application/vnd.medcalcdata":{source:"iana",extensions:["mc1"]},"application/vnd.mediastation.cdkey":{source:"iana",extensions:["cdkey"]},"application/vnd.meridian-slingshot":{source:"iana"},"application/vnd.mfer":{source:"iana",extensions:["mwf"]},"application/vnd.mfmp":{source:"iana",extensions:["mfm"]},"application/vnd.micro+json":{source:"iana",compressible:!0},"application/vnd.micrografx.flo":{source:"iana",extensions:["flo"]},"application/vnd.micrografx.igx":{source:"iana",extensions:["igx"]},"application/vnd.microsoft.portable-executable":{source:"iana"},"application/vnd.miele+json":{source:"iana",compressible:!0},"application/vnd.mif":{source:"iana",extensions:["mif"]},"application/vnd.minisoft-hp3000-save":{source:"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{source:"iana"},"application/vnd.mobius.daf":{source:"iana",extensions:["daf"]},"application/vnd.mobius.dis":{source:"iana",extensions:["dis"]},"application/vnd.mobius.mbk":{source:"iana",extensions:["mbk"]},"application/vnd.mobius.mqy":{source:"iana",extensions:["mqy"]},"application/vnd.mobius.msl":{source:"iana",extensions:["msl"]},"application/vnd.mobius.plc":{source:"iana",extensions:["plc"]},"application/vnd.mobius.txf":{source:"iana",extensions:["txf"]},"application/vnd.mophun.application":{source:"iana",extensions:["mpn"]},"application/vnd.mophun.certificate":{source:"iana",extensions:["mpc"]},"application/vnd.motorola.flexsuite":{source:"iana"},"application/vnd.motorola.flexsuite.adsi":{source:"iana"},"application/vnd.motorola.flexsuite.fis":{source:"iana"},"application/vnd.motorola.flexsuite.gotap":{source:"iana"},"application/vnd.motorola.flexsuite.kmr":{source:"iana"},"application/vnd.motorola.flexsuite.ttc":{source:"iana"},"application/vnd.motorola.flexsuite.wem":{source:"iana"},"application/vnd.motorola.iprm":{source:"iana"},"application/vnd.mozilla.xul+xml":{source:"iana",compressible:!0,extensions:["xul"]},"application/vnd.ms-3mfdocument":{source:"iana"},"application/vnd.ms-artgalry":{source:"iana",extensions:["cil"]},"application/vnd.ms-asf":{source:"iana"},"application/vnd.ms-cab-compressed":{source:"iana",extensions:["cab"]},"application/vnd.ms-color.iccprofile":{source:"apache"},"application/vnd.ms-excel":{source:"iana",compressible:!1,extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{source:"iana",extensions:["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{source:"iana",extensions:["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{source:"iana",extensions:["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{source:"iana",extensions:["xltm"]},"application/vnd.ms-fontobject":{source:"iana",compressible:!0,extensions:["eot"]},"application/vnd.ms-htmlhelp":{source:"iana",extensions:["chm"]},"application/vnd.ms-ims":{source:"iana",extensions:["ims"]},"application/vnd.ms-lrm":{source:"iana",extensions:["lrm"]},"application/vnd.ms-office.activex+xml":{source:"iana"},"application/vnd.ms-officetheme":{source:"iana",extensions:["thmx"]},"application/vnd.ms-opentype":{source:"apache",compressible:!0},"application/vnd.ms-package.obfuscated-opentype":{source:"apache"},"application/vnd.ms-pki.seccat":{source:"apache",extensions:["cat"]},"application/vnd.ms-pki.stl":{source:"apache",extensions:["stl"]},"application/vnd.ms-playready.initiator+xml":{source:"iana"},"application/vnd.ms-powerpoint":{source:"iana",compressible:!1,extensions:["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{source:"iana",extensions:["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{source:"iana",extensions:["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{source:"iana",extensions:["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{source:"iana",extensions:["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{source:"iana",extensions:["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{source:"iana"},"application/vnd.ms-printing.printticket+xml":{source:"apache"},"application/vnd.ms-project":{source:"iana",extensions:["mpp","mpt"]},"application/vnd.ms-tnef":{source:"iana"},"application/vnd.ms-windows.devicepairing":{source:"iana"},"application/vnd.ms-windows.nwprinting.oob":{source:"iana"},"application/vnd.ms-windows.printerpairing":{source:"iana"},"application/vnd.ms-windows.wsd.oob":{source:"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.lic-resp":{source:"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.meter-resp":{source:"iana"},"application/vnd.ms-word.document.macroenabled.12":{source:"iana",extensions:["docm"]},"application/vnd.ms-word.template.macroenabled.12":{source:"iana",extensions:["dotm"]},"application/vnd.ms-works":{source:"iana",extensions:["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{source:"iana",extensions:["wpl"]},"application/vnd.ms-xpsdocument":{source:"iana",compressible:!1,extensions:["xps"]},"application/vnd.msa-disk-image":{source:"iana"},"application/vnd.mseq":{source:"iana",extensions:["mseq"]},"application/vnd.msign":{source:"iana"},"application/vnd.multiad.creator":{source:"iana"},"application/vnd.multiad.creator.cif":{source:"iana"},"application/vnd.music-niff":{source:"iana"},"application/vnd.musician":{source:"iana",extensions:["mus"]},"application/vnd.muvee.style":{source:"iana",extensions:["msty"]},"application/vnd.mynfc":{source:"iana",extensions:["taglet"]},"application/vnd.ncd.control":{source:"iana"},"application/vnd.ncd.reference":{source:"iana"},"application/vnd.nervana":{source:"iana"},"application/vnd.netfpx":{source:"iana"},"application/vnd.neurolanguage.nlu":{source:"iana",extensions:["nlu"]},"application/vnd.nintendo.nitro.rom":{source:"iana"},"application/vnd.nintendo.snes.rom":{source:"iana"},"application/vnd.nitf":{source:"iana",extensions:["ntf","nitf"]},"application/vnd.noblenet-directory":{source:"iana",extensions:["nnd"]},"application/vnd.noblenet-sealer":{source:"iana",extensions:["nns"]},"application/vnd.noblenet-web":{source:"iana",extensions:["nnw"]},"application/vnd.nokia.catalogs":{source:"iana"},"application/vnd.nokia.conml+wbxml":{source:"iana"},"application/vnd.nokia.conml+xml":{source:"iana"},"application/vnd.nokia.iptv.config+xml":{source:"iana"},"application/vnd.nokia.isds-radio-presets":{source:"iana"},"application/vnd.nokia.landmark+wbxml":{source:"iana"},"application/vnd.nokia.landmark+xml":{source:"iana"},"application/vnd.nokia.landmarkcollection+xml":{source:"iana"},"application/vnd.nokia.n-gage.ac+xml":{source:"iana"},"application/vnd.nokia.n-gage.data":{source:"iana",extensions:["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{source:"iana",extensions:["n-gage"]},"application/vnd.nokia.ncd":{source:"iana"},"application/vnd.nokia.pcd+wbxml":{source:"iana"},"application/vnd.nokia.pcd+xml":{source:"iana"},"application/vnd.nokia.radio-preset":{source:"iana",extensions:["rpst"]},"application/vnd.nokia.radio-presets":{source:"iana",extensions:["rpss"]},"application/vnd.novadigm.edm":{source:"iana",extensions:["edm"]},"application/vnd.novadigm.edx":{source:"iana",extensions:["edx"]},"application/vnd.novadigm.ext":{source:"iana",extensions:["ext"]},"application/vnd.ntt-local.content-share":{source:"iana"},"application/vnd.ntt-local.file-transfer":{source:"iana"},"application/vnd.ntt-local.ogw_remote-access":{source:"iana"},"application/vnd.ntt-local.sip-ta_remote":{source:"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{source:"iana"},"application/vnd.oasis.opendocument.chart":{source:"iana",extensions:["odc"]},"application/vnd.oasis.opendocument.chart-template":{source:"iana",extensions:["otc"]},"application/vnd.oasis.opendocument.database":{source:"iana",extensions:["odb"]},"application/vnd.oasis.opendocument.formula":{source:"iana",extensions:["odf"]},"application/vnd.oasis.opendocument.formula-template":{source:"iana",extensions:["odft"]},"application/vnd.oasis.opendocument.graphics":{source:"iana",compressible:!1,extensions:["odg"]},"application/vnd.oasis.opendocument.graphics-template":{source:"iana",extensions:["otg"]},"application/vnd.oasis.opendocument.image":{source:"iana",extensions:["odi"]},"application/vnd.oasis.opendocument.image-template":{source:"iana",extensions:["oti"]},"application/vnd.oasis.opendocument.presentation":{source:"iana",compressible:!1,extensions:["odp"]},"application/vnd.oasis.opendocument.presentation-template":{source:"iana",extensions:["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{source:"iana",compressible:!1,extensions:["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{source:"iana",extensions:["ots"]},"application/vnd.oasis.opendocument.text":{source:"iana",compressible:!1,extensions:["odt"]},"application/vnd.oasis.opendocument.text-master":{source:"iana",extensions:["odm"]},"application/vnd.oasis.opendocument.text-template":{source:"iana",extensions:["ott"]},"application/vnd.oasis.opendocument.text-web":{source:"iana",extensions:["oth"]},"application/vnd.obn":{source:"iana"},"application/vnd.oftn.l10n+json":{source:"iana",compressible:!0},"application/vnd.oipf.contentaccessdownload+xml":{source:"iana"},"application/vnd.oipf.contentaccessstreaming+xml":{source:"iana"},"application/vnd.oipf.cspg-hexbinary":{source:"iana"},"application/vnd.oipf.dae.svg+xml":{source:"iana"},"application/vnd.oipf.dae.xhtml+xml":{source:"iana"},"application/vnd.oipf.mippvcontrolmessage+xml":{source:"iana"},"application/vnd.oipf.pae.gem":{source:"iana"},"application/vnd.oipf.spdiscovery+xml":{source:"iana"},"application/vnd.oipf.spdlist+xml":{source:"iana"},"application/vnd.oipf.ueprofile+xml":{source:"iana"},"application/vnd.oipf.userprofile+xml":{source:"iana"},"application/vnd.olpc-sugar":{source:"iana",extensions:["xo"]},"application/vnd.oma-scws-config":{source:"iana"},"application/vnd.oma-scws-http-request":{source:"iana"},"application/vnd.oma-scws-http-response":{source:"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{source:"iana"},"application/vnd.oma.bcast.drm-trigger+xml":{source:"iana"},"application/vnd.oma.bcast.imd+xml":{source:"iana"},"application/vnd.oma.bcast.ltkm":{source:"iana"},"application/vnd.oma.bcast.notification+xml":{source:"iana"},"application/vnd.oma.bcast.provisioningtrigger":{source:"iana"},"application/vnd.oma.bcast.sgboot":{source:"iana"},"application/vnd.oma.bcast.sgdd+xml":{source:"iana"},"application/vnd.oma.bcast.sgdu":{source:"iana"},"application/vnd.oma.bcast.simple-symbol-container":{source:"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{source:"iana"},"application/vnd.oma.bcast.sprov+xml":{source:"iana"},"application/vnd.oma.bcast.stkm":{source:"iana"},"application/vnd.oma.cab-address-book+xml":{source:"iana"},"application/vnd.oma.cab-feature-handler+xml":{source:"iana"},"application/vnd.oma.cab-pcc+xml":{source:"iana"},"application/vnd.oma.cab-subs-invite+xml":{source:"iana"},"application/vnd.oma.cab-user-prefs+xml":{source:"iana"},"application/vnd.oma.dcd":{source:"iana"},"application/vnd.oma.dcdc":{source:"iana"},"application/vnd.oma.dd2+xml":{source:"iana",extensions:["dd2"]},"application/vnd.oma.drm.risd+xml":{source:"iana"},"application/vnd.oma.group-usage-list+xml":{source:"iana"},"application/vnd.oma.pal+xml":{source:"iana"},"application/vnd.oma.poc.detailed-progress-report+xml":{source:"iana"},"application/vnd.oma.poc.final-report+xml":{source:"iana"},"application/vnd.oma.poc.groups+xml":{source:"iana"},"application/vnd.oma.poc.invocation-descriptor+xml":{source:"iana"},"application/vnd.oma.poc.optimized-progress-report+xml":{source:"iana"},"application/vnd.oma.push":{source:"iana"},"application/vnd.oma.scidm.messages+xml":{source:"iana"},"application/vnd.oma.xcap-directory+xml":{source:"iana"},"application/vnd.omads-email+xml":{source:"iana"},"application/vnd.omads-file+xml":{source:"iana"},"application/vnd.omads-folder+xml":{source:"iana"},"application/vnd.omaloc-supl-init":{source:"iana"},"application/vnd.openblox.game+xml":{source:"iana"},"application/vnd.openblox.game-binary":{source:"iana"},"application/vnd.openeye.oeb":{source:"iana"},"application/vnd.openofficeorg.extension":{source:"apache",extensions:["oxt"]},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawing+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml-template":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{source:"iana",compressible:!1,extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.slide":{source:"iana",extensions:["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{source:"iana",extensions:["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.template":{source:"apache",extensions:["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml-template":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{source:"iana",compressible:!1,extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{source:"apache",extensions:["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.theme+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.vmldrawing":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml-template":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{source:"iana",compressible:!1,extensions:["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{source:"apache",extensions:["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{source:"iana"},"application/vnd.openxmlformats-package.core-properties+xml":{source:"iana"},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{source:"iana"},"application/vnd.openxmlformats-package.relationships+xml":{source:"iana"},"application/vnd.oracle.resource+json":{source:"iana",compressible:!0},"application/vnd.orange.indata":{source:"iana"},"application/vnd.osa.netdeploy":{source:"iana"},"application/vnd.osgeo.mapguide.package":{source:"iana",extensions:["mgp"]},"application/vnd.osgi.bundle":{source:"iana"},"application/vnd.osgi.dp":{source:"iana",extensions:["dp"]},"application/vnd.osgi.subsystem":{source:"iana",extensions:["esa"]},"application/vnd.otps.ct-kip+xml":{source:"iana"},"application/vnd.oxli.countgraph":{source:"iana"},"application/vnd.pagerduty+json":{source:"iana",compressible:!0},"application/vnd.palm":{source:"iana",extensions:["pdb","pqa","oprc"]},"application/vnd.panoply":{source:"iana"},"application/vnd.paos+xml":{source:"iana"},"application/vnd.paos.xml":{source:"apache"},"application/vnd.pawaafile":{source:"iana",extensions:["paw"]},"application/vnd.pcos":{source:"iana"},"application/vnd.pg.format":{source:"iana",extensions:["str"]},"application/vnd.pg.osasli":{source:"iana",extensions:["ei6"]},"application/vnd.piaccess.application-licence":{source:"iana"},"application/vnd.picsel":{source:"iana",extensions:["efif"]},"application/vnd.pmi.widget":{source:"iana",extensions:["wg"]},"application/vnd.poc.group-advertisement+xml":{source:"iana"},"application/vnd.pocketlearn":{source:"iana",extensions:["plf"]},"application/vnd.powerbuilder6":{source:"iana",extensions:["pbd"]},"application/vnd.powerbuilder6-s":{source:"iana"},"application/vnd.powerbuilder7":{source:"iana"},"application/vnd.powerbuilder7-s":{source:"iana"},"application/vnd.powerbuilder75":{source:"iana"},"application/vnd.powerbuilder75-s":{source:"iana"},"application/vnd.preminet":{source:"iana"},"application/vnd.previewsystems.box":{source:"iana",extensions:["box"]},"application/vnd.proteus.magazine":{source:"iana",extensions:["mgz"]},"application/vnd.publishare-delta-tree":{source:"iana",extensions:["qps"]},"application/vnd.pvi.ptid1":{source:"iana",extensions:["ptid"]},"application/vnd.pwg-multiplexed":{source:"iana"},"application/vnd.pwg-xhtml-print+xml":{source:"iana"},"application/vnd.qualcomm.brew-app-res":{source:"iana"},"application/vnd.quark.quarkxpress":{source:"iana",extensions:["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{source:"iana"},"application/vnd.radisys.moml+xml":{source:"iana"},"application/vnd.radisys.msml+xml":{source:"iana"},"application/vnd.radisys.msml-audit+xml":{source:"iana"},"application/vnd.radisys.msml-audit-conf+xml":{source:"iana"},"application/vnd.radisys.msml-audit-conn+xml":{source:"iana"},"application/vnd.radisys.msml-audit-dialog+xml":{source:"iana"},"application/vnd.radisys.msml-audit-stream+xml":{source:"iana"},"application/vnd.radisys.msml-conf+xml":{source:"iana"},"application/vnd.radisys.msml-dialog+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-base+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-fax-detect+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-group+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-speech+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-transform+xml":{source:"iana"},"application/vnd.rainstor.data":{source:"iana"},"application/vnd.rapid":{source:"iana"},"application/vnd.realvnc.bed":{source:"iana",extensions:["bed"]},"application/vnd.recordare.musicxml":{source:"iana",extensions:["mxl"]},"application/vnd.recordare.musicxml+xml":{source:"iana",extensions:["musicxml"]},"application/vnd.renlearn.rlprint":{source:"iana"},"application/vnd.rig.cryptonote":{source:"iana",extensions:["cryptonote"]},"application/vnd.rim.cod":{source:"apache",extensions:["cod"]},"application/vnd.rn-realmedia":{source:"apache",extensions:["rm"]},"application/vnd.rn-realmedia-vbr":{source:"apache",extensions:["rmvb"]},"application/vnd.route66.link66+xml":{source:"iana",extensions:["link66"]},"application/vnd.rs-274x":{source:"iana"},"application/vnd.ruckus.download":{source:"iana"},"application/vnd.s3sms":{source:"iana"},"application/vnd.sailingtracker.track":{source:"iana",extensions:["st"]},"application/vnd.sbm.cid":{source:"iana"},"application/vnd.sbm.mid2":{source:"iana"},"application/vnd.scribus":{source:"iana"},"application/vnd.sealed.3df":{source:"iana"},"application/vnd.sealed.csf":{source:"iana"},"application/vnd.sealed.doc":{source:"iana"},"application/vnd.sealed.eml":{source:"iana"},"application/vnd.sealed.mht":{source:"iana"},"application/vnd.sealed.net":{source:"iana"},"application/vnd.sealed.ppt":{source:"iana"},"application/vnd.sealed.tiff":{source:"iana"},"application/vnd.sealed.xls":{source:"iana"},"application/vnd.sealedmedia.softseal.html":{source:"iana"},"application/vnd.sealedmedia.softseal.pdf":{source:"iana"},"application/vnd.seemail":{source:"iana",extensions:["see"]},"application/vnd.sema":{source:"iana",extensions:["sema"]},"application/vnd.semd":{source:"iana",extensions:["semd"]},"application/vnd.semf":{source:"iana",extensions:["semf"]},"application/vnd.shana.informed.formdata":{source:"iana",extensions:["ifm"]},"application/vnd.shana.informed.formtemplate":{source:"iana",extensions:["itp"]},"application/vnd.shana.informed.interchange":{source:"iana",extensions:["iif"]},"application/vnd.shana.informed.package":{source:"iana",extensions:["ipk"]},"application/vnd.simtech-mindmapper":{source:"iana",extensions:["twd","twds"]},"application/vnd.siren+json":{source:"iana",compressible:!0},"application/vnd.smaf":{source:"iana",extensions:["mmf"]},"application/vnd.smart.notebook":{source:"iana"},"application/vnd.smart.teacher":{source:"iana",extensions:["teacher"]},"application/vnd.software602.filler.form+xml":{source:"iana"},"application/vnd.software602.filler.form-xml-zip":{source:"iana"},"application/vnd.solent.sdkm+xml":{source:"iana",extensions:["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{source:"iana",extensions:["dxp"]},"application/vnd.spotfire.sfs":{source:"iana",extensions:["sfs"]},"application/vnd.sss-cod":{source:"iana"},"application/vnd.sss-dtf":{source:"iana"},"application/vnd.sss-ntf":{source:"iana"},"application/vnd.stardivision.calc":{source:"apache",extensions:["sdc"]},"application/vnd.stardivision.draw":{source:"apache",extensions:["sda"]},"application/vnd.stardivision.impress":{source:"apache",extensions:["sdd"]},"application/vnd.stardivision.math":{source:"apache",extensions:["smf"]},"application/vnd.stardivision.writer":{source:"apache",extensions:["sdw","vor"]},"application/vnd.stardivision.writer-global":{source:"apache",extensions:["sgl"]},"application/vnd.stepmania.package":{source:"iana",extensions:["smzip"]},"application/vnd.stepmania.stepchart":{source:"iana",extensions:["sm"]},"application/vnd.street-stream":{source:"iana"},"application/vnd.sun.wadl+xml":{source:"iana"},"application/vnd.sun.xml.calc":{source:"apache",extensions:["sxc"]},"application/vnd.sun.xml.calc.template":{source:"apache",extensions:["stc"]},"application/vnd.sun.xml.draw":{source:"apache",extensions:["sxd"]},"application/vnd.sun.xml.draw.template":{source:"apache",extensions:["std"]},"application/vnd.sun.xml.impress":{source:"apache",extensions:["sxi"]},"application/vnd.sun.xml.impress.template":{source:"apache",extensions:["sti"]},"application/vnd.sun.xml.math":{source:"apache",extensions:["sxm"]},"application/vnd.sun.xml.writer":{source:"apache",extensions:["sxw"]},"application/vnd.sun.xml.writer.global":{source:"apache",extensions:["sxg"]},"application/vnd.sun.xml.writer.template":{source:"apache",extensions:["stw"]},"application/vnd.sus-calendar":{source:"iana",extensions:["sus","susp"]},"application/vnd.svd":{source:"iana",extensions:["svd"]},"application/vnd.swiftview-ics":{source:"iana"},"application/vnd.symbian.install":{source:"apache",extensions:["sis","sisx"]},"application/vnd.syncml+xml":{source:"iana",extensions:["xsm"]},"application/vnd.syncml.dm+wbxml":{source:"iana",extensions:["bdm"]},"application/vnd.syncml.dm+xml":{source:"iana",extensions:["xdm"]},"application/vnd.syncml.dm.notification":{source:"iana"},"application/vnd.syncml.dmddf+wbxml":{source:"iana"},"application/vnd.syncml.dmddf+xml":{source:"iana"},"application/vnd.syncml.dmtnds+wbxml":{source:"iana"},"application/vnd.syncml.dmtnds+xml":{source:"iana"},"application/vnd.syncml.ds.notification":{source:"iana"},"application/vnd.tao.intent-module-archive":{source:"iana",extensions:["tao"]},"application/vnd.tcpdump.pcap":{source:"iana",extensions:["pcap","cap","dmp"]},"application/vnd.tmd.mediaflex.api+xml":{source:"iana"},"application/vnd.tml":{source:"iana"},"application/vnd.tmobile-livetv":{source:"iana",extensions:["tmo"]},"application/vnd.trid.tpt":{source:"iana",extensions:["tpt"]},"application/vnd.triscape.mxs":{source:"iana",extensions:["mxs"]},"application/vnd.trueapp":{source:"iana",extensions:["tra"]},"application/vnd.truedoc":{source:"iana"},"application/vnd.ubisoft.webplayer":{source:"iana"},"application/vnd.ufdl":{source:"iana",extensions:["ufd","ufdl"]},"application/vnd.uiq.theme":{source:"iana",extensions:["utz"]},"application/vnd.umajin":{source:"iana",extensions:["umj"]},"application/vnd.unity":{source:"iana",extensions:["unityweb"]},"application/vnd.uoml+xml":{source:"iana",extensions:["uoml"]},"application/vnd.uplanet.alert":{source:"iana"},"application/vnd.uplanet.alert-wbxml":{source:"iana"},"application/vnd.uplanet.bearer-choice":{source:"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{source:"iana"},"application/vnd.uplanet.cacheop":{source:"iana"},"application/vnd.uplanet.cacheop-wbxml":{source:"iana"},"application/vnd.uplanet.channel":{source:"iana"},"application/vnd.uplanet.channel-wbxml":{source:"iana"},"application/vnd.uplanet.list":{source:"iana"},"application/vnd.uplanet.list-wbxml":{source:"iana"},"application/vnd.uplanet.listcmd":{source:"iana"},"application/vnd.uplanet.listcmd-wbxml":{source:"iana"},"application/vnd.uplanet.signal":{source:"iana"},"application/vnd.uri-map":{source:"iana"},"application/vnd.valve.source.material":{source:"iana"},"application/vnd.vcx":{source:"iana",extensions:["vcx"]},"application/vnd.vd-study":{source:"iana"},"application/vnd.vectorworks":{source:"iana"},"application/vnd.verimatrix.vcas":{source:"iana"},"application/vnd.vidsoft.vidconference":{source:"iana"},"application/vnd.visio":{source:"iana",extensions:["vsd","vst","vss","vsw"]},"application/vnd.visionary":{source:"iana",extensions:["vis"]},"application/vnd.vividence.scriptfile":{source:"iana"},"application/vnd.vsf":{source:"iana",extensions:["vsf"]},"application/vnd.wap.sic":{source:"iana"},"application/vnd.wap.slc":{source:"iana"},"application/vnd.wap.wbxml":{source:"iana",extensions:["wbxml"]},"application/vnd.wap.wmlc":{source:"iana",extensions:["wmlc"]},"application/vnd.wap.wmlscriptc":{source:"iana",extensions:["wmlsc"]},"application/vnd.webturbo":{source:"iana",extensions:["wtb"]},"application/vnd.wfa.p2p":{source:"iana"},"application/vnd.wfa.wsc":{source:"iana"},"application/vnd.windows.devicepairing":{source:"iana"},"application/vnd.wmc":{source:"iana"},"application/vnd.wmf.bootstrap":{source:"iana"},"application/vnd.wolfram.mathematica":{source:"iana"},"application/vnd.wolfram.mathematica.package":{source:"iana"},"application/vnd.wolfram.player":{source:"iana",extensions:["nbp"]},"application/vnd.wordperfect":{source:"iana",extensions:["wpd"]},"application/vnd.wqd":{source:"iana",extensions:["wqd"]},"application/vnd.wrq-hp3000-labelled":{source:"iana"},"application/vnd.wt.stf":{source:"iana",extensions:["stf"]},"application/vnd.wv.csp+wbxml":{source:"iana"},"application/vnd.wv.csp+xml":{source:"iana"},"application/vnd.wv.ssp+xml":{source:"iana"},"application/vnd.xacml+json":{source:"iana",compressible:!0},"application/vnd.xara":{source:"iana",extensions:["xar"]},"application/vnd.xfdl":{source:"iana",extensions:["xfdl"]},"application/vnd.xfdl.webform":{source:"iana"},"application/vnd.xmi+xml":{source:"iana"},"application/vnd.xmpie.cpkg":{source:"iana"},"application/vnd.xmpie.dpkg":{source:"iana"},"application/vnd.xmpie.plan":{source:"iana"},"application/vnd.xmpie.ppkg":{source:"iana"},"application/vnd.xmpie.xlim":{source:"iana"},"application/vnd.yamaha.hv-dic":{source:"iana",extensions:["hvd"]},"application/vnd.yamaha.hv-script":{source:"iana",extensions:["hvs"]},"application/vnd.yamaha.hv-voice":{source:"iana",extensions:["hvp"]},"application/vnd.yamaha.openscoreformat":{source:"iana",extensions:["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{source:"iana",extensions:["osfpvg"]},"application/vnd.yamaha.remote-setup":{source:"iana"},"application/vnd.yamaha.smaf-audio":{source:"iana",extensions:["saf"]},"application/vnd.yamaha.smaf-phrase":{source:"iana",extensions:["spf"]},"application/vnd.yamaha.through-ngn":{source:"iana"},"application/vnd.yamaha.tunnel-udpencap":{source:"iana"},"application/vnd.yaoweme":{source:"iana"},"application/vnd.yellowriver-custom-menu":{source:"iana",extensions:["cmp"]},"application/vnd.zul":{source:"iana",extensions:["zir","zirz"]},"application/vnd.zzazz.deck+xml":{source:"iana",extensions:["zaz"]},"application/voicexml+xml":{source:"iana",extensions:["vxml"]},"application/vq-rtcpxr":{source:"iana"},"application/watcherinfo+xml":{source:"iana"},"application/whoispp-query":{source:"iana"},"application/whoispp-response":{source:"iana"},"application/widget":{source:"iana",extensions:["wgt"]},"application/winhlp":{source:"apache",extensions:["hlp"]},"application/wita":{source:"iana"},"application/wordperfect5.1":{source:"iana"},"application/wsdl+xml":{source:"iana",extensions:["wsdl"]},"application/wspolicy+xml":{source:"iana",extensions:["wspolicy"]},"application/x-7z-compressed":{source:"apache",compressible:!1,extensions:["7z"]},"application/x-abiword":{source:"apache",extensions:["abw"]},"application/x-ace-compressed":{source:"apache",extensions:["ace"]},"application/x-amf":{source:"apache"},"application/x-apple-diskimage":{source:"apache",extensions:["dmg"]},"application/x-authorware-bin":{source:"apache",extensions:["aab","x32","u32","vox"]},"application/x-authorware-map":{source:"apache",extensions:["aam"]},"application/x-authorware-seg":{source:"apache",extensions:["aas"]},"application/x-bcpio":{source:"apache",extensions:["bcpio"]},"application/x-bdoc":{compressible:!1,extensions:["bdoc"]},"application/x-bittorrent":{source:"apache",extensions:["torrent"]},"application/x-blorb":{source:"apache",extensions:["blb","blorb"]},"application/x-bzip":{source:"apache",compressible:!1,extensions:["bz"]},"application/x-bzip2":{source:"apache",compressible:!1,extensions:["bz2","boz"]},"application/x-cbr":{source:"apache",extensions:["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{source:"apache",extensions:["vcd"]},"application/x-cfs-compressed":{source:"apache",extensions:["cfs"]},"application/x-chat":{source:"apache",extensions:["chat"]},"application/x-chess-pgn":{source:"apache",extensions:["pgn"]},"application/x-chrome-extension":{extensions:["crx"]},"application/x-cocoa":{source:"nginx",extensions:["cco"]},"application/x-compress":{source:"apache"},"application/x-conference":{source:"apache",extensions:["nsc"]},"application/x-cpio":{source:"apache",extensions:["cpio"]},"application/x-csh":{source:"apache",extensions:["csh"]},"application/x-deb":{compressible:!1},"application/x-debian-package":{source:"apache",extensions:["deb","udeb"]},"application/x-dgc-compressed":{source:"apache",extensions:["dgc"]},"application/x-director":{source:"apache",extensions:["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{source:"apache",extensions:["wad"]},"application/x-dtbncx+xml":{source:"apache",extensions:["ncx"]},"application/x-dtbook+xml":{source:"apache",extensions:["dtb"]},"application/x-dtbresource+xml":{source:"apache",extensions:["res"]},"application/x-dvi":{source:"apache",compressible:!1,extensions:["dvi"]},"application/x-envoy":{source:"apache",extensions:["evy"]},"application/x-eva":{source:"apache",extensions:["eva"]},"application/x-font-bdf":{source:"apache",extensions:["bdf"]},"application/x-font-dos":{source:"apache"},"application/x-font-framemaker":{source:"apache"},"application/x-font-ghostscript":{source:"apache",extensions:["gsf"]},"application/x-font-libgrx":{source:"apache"},"application/x-font-linux-psf":{source:"apache",extensions:["psf"]},"application/x-font-otf":{source:"apache",compressible:!0,extensions:["otf"]},"application/x-font-pcf":{source:"apache",extensions:["pcf"]},"application/x-font-snf":{source:"apache",extensions:["snf"]},"application/x-font-speedo":{source:"apache"},"application/x-font-sunos-news":{source:"apache"},"application/x-font-ttf":{source:"apache",compressible:!0,extensions:["ttf","ttc"]},"application/x-font-type1":{source:"apache",extensions:["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{source:"apache"},"application/x-freearc":{source:"apache",extensions:["arc"]},"application/x-futuresplash":{source:"apache",extensions:["spl"]},"application/x-gca-compressed":{source:"apache",extensions:["gca"]},"application/x-glulx":{source:"apache",extensions:["ulx"]},"application/x-gnumeric":{source:"apache",extensions:["gnumeric"]},"application/x-gramps-xml":{source:"apache",extensions:["gramps"]},"application/x-gtar":{source:"apache",extensions:["gtar"]},"application/x-gzip":{source:"apache"},"application/x-hdf":{source:"apache",extensions:["hdf"]},"application/x-httpd-php":{compressible:!0,extensions:["php"]},"application/x-install-instructions":{source:"apache",extensions:["install"]},"application/x-iso9660-image":{source:"apache",extensions:["iso"]},"application/x-java-archive-diff":{source:"nginx",extensions:["jardiff"]},"application/x-java-jnlp-file":{source:"apache",compressible:!1,extensions:["jnlp"]},"application/x-javascript":{compressible:!0},"application/x-latex":{source:"apache",compressible:!1,extensions:["latex"]},"application/x-lua-bytecode":{extensions:["luac"]},"application/x-lzh-compressed":{source:"apache",extensions:["lzh","lha"]},"application/x-makeself":{source:"nginx",extensions:["run"]},"application/x-mie":{source:"apache",extensions:["mie"]},"application/x-mobipocket-ebook":{source:"apache",extensions:["prc","mobi"]},"application/x-mpegurl":{compressible:!1},"application/x-ms-application":{source:"apache",extensions:["application"]},"application/x-ms-shortcut":{source:"apache",extensions:["lnk"]},"application/x-ms-wmd":{source:"apache",extensions:["wmd"]},"application/x-ms-wmz":{source:"apache",extensions:["wmz"]},"application/x-ms-xbap":{source:"apache",extensions:["xbap"]},"application/x-msaccess":{source:"apache",extensions:["mdb"]},"application/x-msbinder":{source:"apache",extensions:["obd"]},"application/x-mscardfile":{source:"apache",extensions:["crd"]},"application/x-msclip":{source:"apache",extensions:["clp"]},"application/x-msdos-program":{extensions:["exe"]},"application/x-msdownload":{source:"apache",extensions:["exe","dll","com","bat","msi"]},"application/x-msmediaview":{source:"apache",extensions:["mvb","m13","m14"]},"application/x-msmetafile":{source:"apache",extensions:["wmf","wmz","emf","emz"]},"application/x-msmoney":{source:"apache",extensions:["mny"]},"application/x-mspublisher":{source:"apache",extensions:["pub"]},"application/x-msschedule":{source:"apache",extensions:["scd"]},"application/x-msterminal":{source:"apache",extensions:["trm"]},"application/x-mswrite":{source:"apache",extensions:["wri"]},"application/x-netcdf":{source:"apache",extensions:["nc","cdf"]},"application/x-ns-proxy-autoconfig":{compressible:!0,extensions:["pac"]},"application/x-nzb":{source:"apache",extensions:["nzb"]},"application/x-perl":{source:"nginx",extensions:["pl","pm"]},"application/x-pilot":{source:"nginx",extensions:["prc","pdb"]},"application/x-pkcs12":{source:"apache",compressible:!1,extensions:["p12","pfx"]},"application/x-pkcs7-certificates":{source:"apache",extensions:["p7b","spc"]},"application/x-pkcs7-certreqresp":{source:"apache",extensions:["p7r"]},"application/x-rar-compressed":{source:"apache",compressible:!1,extensions:["rar"]},"application/x-redhat-package-manager":{source:"nginx",extensions:["rpm"]},"application/x-research-info-systems":{source:"apache",extensions:["ris"]},"application/x-sea":{source:"nginx",extensions:["sea"]},"application/x-sh":{source:"apache",compressible:!0,extensions:["sh"]},"application/x-shar":{source:"apache",extensions:["shar"]},"application/x-shockwave-flash":{source:"apache",compressible:!1,extensions:["swf"]},"application/x-silverlight-app":{source:"apache",extensions:["xap"]},"application/x-sql":{source:"apache",extensions:["sql"]},"application/x-stuffit":{source:"apache",compressible:!1,extensions:["sit"]},"application/x-stuffitx":{source:"apache",extensions:["sitx"]},"application/x-subrip":{source:"apache",extensions:["srt"]},"application/x-sv4cpio":{source:"apache",extensions:["sv4cpio"]},"application/x-sv4crc":{source:"apache",extensions:["sv4crc"]},"application/x-t3vm-image":{source:"apache",extensions:["t3"]},"application/x-tads":{source:"apache",extensions:["gam"]},"application/x-tar":{source:"apache",compressible:!0,extensions:["tar"]},"application/x-tcl":{source:"apache",extensions:["tcl","tk"]},"application/x-tex":{source:"apache",extensions:["tex"]},"application/x-tex-tfm":{source:"apache",extensions:["tfm"]},"application/x-texinfo":{source:"apache",extensions:["texinfo","texi"]},"application/x-tgif":{source:"apache",extensions:["obj"]},"application/x-ustar":{source:"apache",extensions:["ustar"]},"application/x-wais-source":{source:"apache",extensions:["src"]},"application/x-web-app-manifest+json":{compressible:!0,extensions:["webapp"]},"application/x-www-form-urlencoded":{source:"iana",compressible:!0},"application/x-x509-ca-cert":{source:"apache",extensions:["der","crt","pem"]},"application/x-xfig":{source:"apache",extensions:["fig"]},"application/x-xliff+xml":{source:"apache",extensions:["xlf"]},"application/x-xpinstall":{source:"apache",compressible:!1,extensions:["xpi"]},"application/x-xz":{source:"apache",extensions:["xz"]},"application/x-zmachine":{source:"apache",extensions:["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{source:"iana"},"application/xacml+xml":{source:"iana"},"application/xaml+xml":{source:"apache",extensions:["xaml"]},"application/xcap-att+xml":{source:"iana"},"application/xcap-caps+xml":{source:"iana"},"application/xcap-diff+xml":{source:"iana",extensions:["xdf"]},"application/xcap-el+xml":{source:"iana"},"application/xcap-error+xml":{source:"iana"},"application/xcap-ns+xml":{source:"iana"},"application/xcon-conference-info+xml":{source:"iana"},"application/xcon-conference-info-diff+xml":{source:"iana"},"application/xenc+xml":{source:"iana",extensions:["xenc"]},"application/xhtml+xml":{source:"iana",compressible:!0,extensions:["xhtml","xht"]},"application/xhtml-voice+xml":{source:"apache"},"application/xml":{source:"iana",compressible:!0,extensions:["xml","xsl","xsd"]},"application/xml-dtd":{source:"iana",compressible:!0,extensions:["dtd"]},"application/xml-external-parsed-entity":{source:"iana"},"application/xml-patch+xml":{source:"iana"},"application/xmpp+xml":{source:"iana"},"application/xop+xml":{source:"iana",compressible:!0,extensions:["xop"]},"application/xproc+xml":{source:"apache",extensions:["xpl"]},"application/xslt+xml":{source:"iana",extensions:["xslt"]},"application/xspf+xml":{source:"apache",extensions:["xspf"]},"application/xv+xml":{source:"iana",extensions:["mxml","xhvml","xvml","xvm"]},"application/yang":{source:"iana",extensions:["yang"]},"application/yin+xml":{source:"iana",extensions:["yin"]},"application/zip":{source:"iana",compressible:!1,extensions:["zip"]},"application/zlib":{source:"iana"},"audio/1d-interleaved-parityfec":{source:"iana"},"audio/32kadpcm":{source:"iana"},"audio/3gpp":{source:"iana"},"audio/3gpp2":{source:"iana"},"audio/ac3":{source:"iana"},"audio/adpcm":{source:"apache",extensions:["adp"]},"audio/amr":{source:"iana"},"audio/amr-wb":{source:"iana"},"audio/amr-wb+":{source:"iana"},"audio/aptx":{source:"iana"},"audio/asc":{source:"iana"},"audio/atrac-advanced-lossless":{source:"iana"},"audio/atrac-x":{source:"iana"},"audio/atrac3":{source:"iana"},"audio/basic":{source:"iana",compressible:!1,extensions:["au","snd"]},"audio/bv16":{source:"iana"},"audio/bv32":{source:"iana"},"audio/clearmode":{source:"iana"},"audio/cn":{source:"iana"},"audio/dat12":{source:"iana"},"audio/dls":{source:"iana"},"audio/dsr-es201108":{source:"iana"},"audio/dsr-es202050":{source:"iana"},"audio/dsr-es202211":{source:"iana"},"audio/dsr-es202212":{source:"iana"},"audio/dv":{source:"iana"},"audio/dvi4":{source:"iana"},"audio/eac3":{source:"iana"},"audio/encaprtp":{source:"iana"},"audio/evrc":{source:"iana"},"audio/evrc-qcp":{source:"iana"},"audio/evrc0":{source:"iana"},"audio/evrc1":{source:"iana"},"audio/evrcb":{source:"iana"},"audio/evrcb0":{source:"iana"},"audio/evrcb1":{source:"iana"},"audio/evrcnw":{source:"iana"},"audio/evrcnw0":{source:"iana"},"audio/evrcnw1":{source:"iana"},"audio/evrcwb":{source:"iana"},"audio/evrcwb0":{source:"iana"},"audio/evrcwb1":{source:"iana"},"audio/evs":{source:"iana"},"audio/fwdred":{source:"iana"},"audio/g711-0":{source:"iana"},"audio/g719":{source:"iana"},"audio/g722":{source:"iana"},"audio/g7221":{source:"iana"},"audio/g723":{source:"iana"},"audio/g726-16":{source:"iana"},"audio/g726-24":{source:"iana"},"audio/g726-32":{source:"iana"},"audio/g726-40":{source:"iana"},"audio/g728":{source:"iana"},"audio/g729":{source:"iana"},"audio/g7291":{source:"iana"},"audio/g729d":{source:"iana"},"audio/g729e":{source:"iana"},"audio/gsm":{source:"iana"},"audio/gsm-efr":{source:"iana"},"audio/gsm-hr-08":{source:"iana"},"audio/ilbc":{source:"iana"},"audio/ip-mr_v2.5":{source:"iana"},"audio/isac":{source:"apache"},"audio/l16":{source:"iana"},"audio/l20":{source:"iana"},"audio/l24":{source:"iana",compressible:!1},"audio/l8":{source:"iana"},"audio/lpc":{source:"iana"},"audio/midi":{source:"apache",extensions:["mid","midi","kar","rmi"]},"audio/mobile-xmf":{source:"iana"},"audio/mp4":{source:"iana",compressible:!1,extensions:["mp4a","m4a"]},"audio/mp4a-latm":{source:"iana"},"audio/mpa":{source:"iana"},"audio/mpa-robust":{source:"iana"},"audio/mpeg":{source:"iana",compressible:!1,extensions:["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{source:"iana"},"audio/musepack":{source:"apache"},"audio/ogg":{source:"iana",compressible:!1,extensions:["oga","ogg","spx"]},"audio/opus":{source:"iana"},"audio/parityfec":{source:"iana"},"audio/pcma":{source:"iana"},"audio/pcma-wb":{source:"iana"},"audio/pcmu":{source:"iana"},"audio/pcmu-wb":{source:"iana"},"audio/prs.sid":{source:"iana"},"audio/qcelp":{source:"iana"},"audio/raptorfec":{source:"iana"},"audio/red":{source:"iana"},"audio/rtp-enc-aescm128":{source:"iana"},"audio/rtp-midi":{source:"iana"},"audio/rtploopback":{source:"iana"},"audio/rtx":{source:"iana"},"audio/s3m":{source:"apache",extensions:["s3m"]},"audio/silk":{source:"apache",extensions:["sil"]},"audio/smv":{source:"iana"},"audio/smv-qcp":{source:"iana"},"audio/smv0":{source:"iana"},"audio/sp-midi":{source:"iana"},"audio/speex":{source:"iana"},"audio/t140c":{source:"iana"},"audio/t38":{source:"iana"},"audio/telephone-event":{source:"iana"},"audio/tone":{source:"iana"},"audio/uemclip":{source:"iana"},"audio/ulpfec":{source:"iana"},"audio/vdvi":{source:"iana"},"audio/vmr-wb":{source:"iana"},"audio/vnd.3gpp.iufp":{source:"iana"},"audio/vnd.4sb":{source:"iana"},"audio/vnd.audiokoz":{source:"iana"},"audio/vnd.celp":{source:"iana"},"audio/vnd.cisco.nse":{source:"iana"},"audio/vnd.cmles.radio-events":{source:"iana"},"audio/vnd.cns.anp1":{source:"iana"},"audio/vnd.cns.inf1":{source:"iana"},"audio/vnd.dece.audio":{source:"iana",extensions:["uva","uvva"]},"audio/vnd.digital-winds":{source:"iana",extensions:["eol"]},"audio/vnd.dlna.adts":{source:"iana"},"audio/vnd.dolby.heaac.1":{source:"iana"},"audio/vnd.dolby.heaac.2":{source:"iana"},"audio/vnd.dolby.mlp":{source:"iana"},"audio/vnd.dolby.mps":{source:"iana"},"audio/vnd.dolby.pl2":{source:"iana"},"audio/vnd.dolby.pl2x":{source:"iana"},"audio/vnd.dolby.pl2z":{source:"iana"},"audio/vnd.dolby.pulse.1":{source:"iana"},"audio/vnd.dra":{source:"iana",extensions:["dra"]},"audio/vnd.dts":{source:"iana",extensions:["dts"]},"audio/vnd.dts.hd":{source:"iana",extensions:["dtshd"]},"audio/vnd.dvb.file":{source:"iana"},"audio/vnd.everad.plj":{source:"iana"},"audio/vnd.hns.audio":{source:"iana"},"audio/vnd.lucent.voice":{source:"iana",extensions:["lvp"]},"audio/vnd.ms-playready.media.pya":{source:"iana",extensions:["pya"]},"audio/vnd.nokia.mobile-xmf":{source:"iana"},"audio/vnd.nortel.vbk":{source:"iana"},"audio/vnd.nuera.ecelp4800":{source:"iana",extensions:["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{source:"iana",extensions:["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{source:"iana",extensions:["ecelp9600"]},"audio/vnd.octel.sbc":{source:"iana"},"audio/vnd.qcelp":{source:"iana"},"audio/vnd.rhetorex.32kadpcm":{source:"iana"},"audio/vnd.rip":{source:"iana",extensions:["rip"]},"audio/vnd.rn-realaudio":{compressible:!1},"audio/vnd.sealedmedia.softseal.mpeg":{source:"iana"},"audio/vnd.vmx.cvsd":{source:"iana"},"audio/vnd.wave":{compressible:!1},"audio/vorbis":{source:"iana",compressible:!1},"audio/vorbis-config":{source:"iana"},"audio/wav":{compressible:!1,extensions:["wav"]},"audio/wave":{compressible:!1,extensions:["wav"]},"audio/webm":{source:"apache",compressible:!1,extensions:["weba"]},"audio/x-aac":{source:"apache",compressible:!1,extensions:["aac"]},"audio/x-aiff":{source:"apache",extensions:["aif","aiff","aifc"]},"audio/x-caf":{source:"apache",compressible:!1,extensions:["caf"]},"audio/x-flac":{source:"apache",extensions:["flac"]},"audio/x-m4a":{source:"nginx",extensions:["m4a"]},"audio/x-matroska":{source:"apache",extensions:["mka"]},"audio/x-mpegurl":{source:"apache",extensions:["m3u"]},"audio/x-ms-wax":{source:"apache",extensions:["wax"]},"audio/x-ms-wma":{source:"apache",extensions:["wma"]},"audio/x-pn-realaudio":{source:"apache",extensions:["ram","ra"]},"audio/x-pn-realaudio-plugin":{source:"apache",extensions:["rmp"]},"audio/x-realaudio":{source:"nginx",extensions:["ra"]},"audio/x-tta":{source:"apache"},"audio/x-wav":{source:"apache",extensions:["wav"]},"audio/xm":{source:"apache",extensions:["xm"]},"chemical/x-cdx":{source:"apache",extensions:["cdx"]},"chemical/x-cif":{source:"apache",extensions:["cif"]},"chemical/x-cmdf":{source:"apache",extensions:["cmdf"]},"chemical/x-cml":{source:"apache",extensions:["cml"]},"chemical/x-csml":{source:"apache",extensions:["csml"]},"chemical/x-pdb":{source:"apache"},"chemical/x-xyz":{source:"apache",extensions:["xyz"]},"font/opentype":{compressible:!0,extensions:["otf"]},"image/bmp":{source:"apache",compressible:!0,extensions:["bmp"]},"image/cgm":{source:"iana",extensions:["cgm"]},"image/fits":{source:"iana"},"image/g3fax":{source:"iana",extensions:["g3"]},"image/gif":{source:"iana",compressible:!1,extensions:["gif"]},"image/ief":{source:"iana",extensions:["ief"]},"image/jp2":{source:"iana"},"image/jpeg":{source:"iana",compressible:!1,extensions:["jpeg","jpg","jpe"]},"image/jpm":{source:"iana"},"image/jpx":{source:"iana"},"image/ktx":{source:"iana",extensions:["ktx"]},"image/naplps":{source:"iana"},"image/pjpeg":{compressible:!1},"image/png":{source:"iana",compressible:!1,extensions:["png"]},"image/prs.btif":{source:"iana",extensions:["btif"]},"image/prs.pti":{source:"iana"},"image/pwg-raster":{source:"iana"},"image/sgi":{source:"apache",extensions:["sgi"]},"image/svg+xml":{source:"iana",compressible:!0,extensions:["svg","svgz"]},"image/t38":{source:"iana"},"image/tiff":{source:"iana",compressible:!1,extensions:["tiff","tif"]},"image/tiff-fx":{source:"iana"},"image/vnd.adobe.photoshop":{source:"iana",compressible:!0,extensions:["psd"]},"image/vnd.airzip.accelerator.azv":{source:"iana"},"image/vnd.cns.inf2":{source:"iana"},"image/vnd.dece.graphic":{source:"iana",extensions:["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{source:"iana",extensions:["djvu","djv"]},"image/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"image/vnd.dwg":{source:"iana",extensions:["dwg"]},"image/vnd.dxf":{source:"iana",extensions:["dxf"]},"image/vnd.fastbidsheet":{source:"iana",extensions:["fbs"]},"image/vnd.fpx":{source:"iana",extensions:["fpx"]},"image/vnd.fst":{source:"iana",extensions:["fst"]},"image/vnd.fujixerox.edmics-mmr":{source:"iana",extensions:["mmr"]},"image/vnd.fujixerox.edmics-rlc":{source:"iana",extensions:["rlc"]},"image/vnd.globalgraphics.pgb":{source:"iana"},"image/vnd.microsoft.icon":{source:"iana"},"image/vnd.mix":{source:"iana"},"image/vnd.mozilla.apng":{source:"iana"},"image/vnd.ms-modi":{source:"iana",extensions:["mdi"]},"image/vnd.ms-photo":{source:"apache",extensions:["wdp"]},"image/vnd.net-fpx":{source:"iana",extensions:["npx"]},"image/vnd.radiance":{source:"iana"},"image/vnd.sealed.png":{source:"iana"},"image/vnd.sealedmedia.softseal.gif":{source:"iana"},"image/vnd.sealedmedia.softseal.jpg":{source:"iana"},"image/vnd.svf":{source:"iana"},"image/vnd.tencent.tap":{source:"iana"},"image/vnd.valve.source.texture":{source:"iana"},"image/vnd.wap.wbmp":{source:"iana",extensions:["wbmp"]},"image/vnd.xiff":{source:"iana",extensions:["xif"]},"image/vnd.zbrush.pcx":{source:"iana"},"image/webp":{source:"apache",extensions:["webp"]},"image/x-3ds":{source:"apache",extensions:["3ds"]},"image/x-cmu-raster":{source:"apache",extensions:["ras"]},"image/x-cmx":{source:"apache",extensions:["cmx"]},"image/x-freehand":{source:"apache",extensions:["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{source:"apache",compressible:!0,extensions:["ico"]},"image/x-jng":{source:"nginx",extensions:["jng"]},"image/x-mrsid-image":{source:"apache",extensions:["sid"]},"image/x-ms-bmp":{source:"nginx",compressible:!0,extensions:["bmp"]},"image/x-pcx":{source:"apache",extensions:["pcx"]},"image/x-pict":{source:"apache",extensions:["pic","pct"]},"image/x-portable-anymap":{source:"apache",extensions:["pnm"]},"image/x-portable-bitmap":{source:"apache",extensions:["pbm"]},"image/x-portable-graymap":{source:"apache",extensions:["pgm"]},"image/x-portable-pixmap":{source:"apache",extensions:["ppm"]},"image/x-rgb":{source:"apache",extensions:["rgb"]},"image/x-tga":{source:"apache",extensions:["tga"]},"image/x-xbitmap":{source:"apache",extensions:["xbm"]},"image/x-xcf":{compressible:!1},"image/x-xpixmap":{source:"apache",extensions:["xpm"]},"image/x-xwindowdump":{source:"apache",extensions:["xwd"]},"message/cpim":{source:"iana"},"message/delivery-status":{source:"iana"},"message/disposition-notification":{source:"iana"},"message/external-body":{source:"iana"},"message/feedback-report":{source:"iana"},"message/global":{source:"iana"},"message/global-delivery-status":{source:"iana"},"message/global-disposition-notification":{source:"iana"},"message/global-headers":{source:"iana"},"message/http":{source:"iana",compressible:!1},"message/imdn+xml":{source:"iana",compressible:!0},"message/news":{source:"iana"},"message/partial":{source:"iana",compressible:!1},"message/rfc822":{source:"iana",compressible:!0,extensions:["eml","mime"]},"message/s-http":{source:"iana"},"message/sip":{source:"iana"},"message/sipfrag":{source:"iana"},"message/tracking-status":{source:"iana"},"message/vnd.si.simp":{source:"iana"},"message/vnd.wfa.wsc":{source:"iana"},"model/iges":{source:"iana",compressible:!1,extensions:["igs","iges"]},"model/mesh":{source:"iana",compressible:!1,extensions:["msh","mesh","silo"]},"model/vnd.collada+xml":{source:"iana",extensions:["dae"]},"model/vnd.dwf":{source:"iana",extensions:["dwf"]},"model/vnd.flatland.3dml":{source:"iana"},"model/vnd.gdl":{source:"iana",extensions:["gdl"]},"model/vnd.gs-gdl":{source:"apache"},"model/vnd.gs.gdl":{source:"iana"},"model/vnd.gtw":{source:"iana",extensions:["gtw"]},"model/vnd.moml+xml":{source:"iana"},"model/vnd.mts":{source:"iana",extensions:["mts"]},"model/vnd.opengex":{source:"iana"},"model/vnd.parasolid.transmit.binary":{source:"iana"},"model/vnd.parasolid.transmit.text":{source:"iana"},"model/vnd.valve.source.compiled-map":{source:"iana"},"model/vnd.vtu":{source:"iana",extensions:["vtu"]},"model/vrml":{source:"iana",compressible:!1,extensions:["wrl","vrml"]},"model/x3d+binary":{source:"apache",compressible:!1,extensions:["x3db","x3dbz"]},"model/x3d+fastinfoset":{source:"iana"},"model/x3d+vrml":{source:"apache",compressible:!1,extensions:["x3dv","x3dvz"]},"model/x3d+xml":{source:"iana",compressible:!0,extensions:["x3d","x3dz"]},"model/x3d-vrml":{source:"iana"},"multipart/alternative":{source:"iana",compressible:!1},"multipart/appledouble":{source:"iana"},"multipart/byteranges":{source:"iana"},"multipart/digest":{source:"iana"},"multipart/encrypted":{source:"iana",compressible:!1},"multipart/form-data":{source:"iana",compressible:!1},"multipart/header-set":{source:"iana"},"multipart/mixed":{source:"iana",compressible:!1},"multipart/parallel":{source:"iana"},"multipart/related":{source:"iana",compressible:!1},"multipart/report":{source:"iana"},"multipart/signed":{source:"iana",compressible:!1},"multipart/voice-message":{source:"iana"},"multipart/x-mixed-replace":{source:"iana"},"text/1d-interleaved-parityfec":{source:"iana"},"text/cache-manifest":{source:"iana",compressible:!0,extensions:["appcache","manifest"]},"text/calendar":{source:"iana",extensions:["ics","ifb"]},"text/calender":{compressible:!0},"text/cmd":{compressible:!0},"text/coffeescript":{extensions:["coffee","litcoffee"]},"text/css":{source:"iana",compressible:!0,extensions:["css"]},"text/csv":{source:"iana",compressible:!0,extensions:["csv"]},"text/csv-schema":{source:"iana"},"text/directory":{source:"iana"},"text/dns":{source:"iana"},"text/ecmascript":{source:"iana"},"text/encaprtp":{source:"iana"},"text/enriched":{source:"iana"},"text/fwdred":{source:"iana"},"text/grammar-ref-list":{source:"iana"},"text/hjson":{extensions:["hjson"]},"text/html":{source:"iana",compressible:!0,extensions:["html","htm","shtml"]},"text/jade":{extensions:["jade"]},"text/javascript":{source:"iana",compressible:!0},"text/jcr-cnd":{source:"iana"},"text/jsx":{compressible:!0,extensions:["jsx"]},"text/less":{extensions:["less"]},"text/markdown":{source:"iana"},"text/mathml":{source:"nginx",extensions:["mml"]},"text/mizar":{source:"iana"},"text/n3":{source:"iana",compressible:!0,extensions:["n3"]},"text/parameters":{source:"iana"},"text/parityfec":{source:"iana"},"text/plain":{source:"iana",compressible:!0,extensions:["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{source:"iana"},"text/prs.fallenstein.rst":{source:"iana"},"text/prs.lines.tag":{source:"iana",extensions:["dsc"]},"text/raptorfec":{source:"iana"},"text/red":{source:"iana"},"text/rfc822-headers":{source:"iana"},"text/richtext":{source:"iana",compressible:!0,extensions:["rtx"]},"text/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"text/rtp-enc-aescm128":{source:"iana"},"text/rtploopback":{source:"iana"},"text/rtx":{source:"iana"},"text/sgml":{source:"iana",extensions:["sgml","sgm"]},"text/stylus":{extensions:["stylus","styl"]},"text/t140":{source:"iana"},"text/tab-separated-values":{source:"iana",compressible:!0,extensions:["tsv"]},"text/troff":{source:"iana",extensions:["t","tr","roff","man","me","ms"]},"text/turtle":{source:"iana",extensions:["ttl"]},"text/ulpfec":{source:"iana"},"text/uri-list":{source:"iana",compressible:!0,extensions:["uri","uris","urls"]},"text/vcard":{source:"iana",compressible:!0,extensions:["vcard"]},"text/vnd.a":{source:"iana"},"text/vnd.abc":{source:"iana"},"text/vnd.curl":{source:"iana",extensions:["curl"]},"text/vnd.curl.dcurl":{source:"apache",extensions:["dcurl"]},"text/vnd.curl.mcurl":{source:"apache",extensions:["mcurl"]},"text/vnd.curl.scurl":{source:"apache",extensions:["scurl"]},"text/vnd.debian.copyright":{source:"iana"},"text/vnd.dmclientscript":{source:"iana"},"text/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"text/vnd.esmertec.theme-descriptor":{source:"iana"},"text/vnd.fly":{source:"iana",extensions:["fly"]},"text/vnd.fmi.flexstor":{source:"iana",extensions:["flx"]},"text/vnd.graphviz":{source:"iana",extensions:["gv"]},"text/vnd.in3d.3dml":{source:"iana",extensions:["3dml"]},"text/vnd.in3d.spot":{source:"iana",extensions:["spot"]},"text/vnd.iptc.newsml":{source:"iana"},"text/vnd.iptc.nitf":{source:"iana"},"text/vnd.latex-z":{source:"iana"},"text/vnd.motorola.reflex":{source:"iana"},"text/vnd.ms-mediapackage":{source:"iana"},"text/vnd.net2phone.commcenter.command":{source:"iana"},"text/vnd.radisys.msml-basic-layout":{source:"iana"},"text/vnd.si.uricatalogue":{source:"iana"},"text/vnd.sun.j2me.app-descriptor":{source:"iana",extensions:["jad"]},"text/vnd.trolltech.linguist":{source:"iana"},"text/vnd.wap.si":{source:"iana"},"text/vnd.wap.sl":{source:"iana"},"text/vnd.wap.wml":{source:"iana",extensions:["wml"]},"text/vnd.wap.wmlscript":{source:"iana",extensions:["wmls"]},"text/vtt":{charset:"UTF-8",compressible:!0,extensions:["vtt"]},"text/x-asm":{source:"apache",extensions:["s","asm"]},"text/x-c":{source:"apache",extensions:["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{source:"nginx",extensions:["htc"]},"text/x-fortran":{source:"apache",extensions:["f","for","f77","f90"]},"text/x-gwt-rpc":{compressible:!0},"text/x-handlebars-template":{extensions:["hbs"]},"text/x-java-source":{source:"apache",extensions:["java"]},"text/x-jquery-tmpl":{compressible:!0},"text/x-lua":{extensions:["lua"]},"text/x-markdown":{compressible:!0,extensions:["markdown","md","mkd"]},"text/x-nfo":{source:"apache",extensions:["nfo"]},"text/x-opml":{source:"apache",extensions:["opml"]},"text/x-pascal":{source:"apache",extensions:["p","pas"]},"text/x-processing":{compressible:!0,extensions:["pde"]},"text/x-sass":{extensions:["sass"]},"text/x-scss":{extensions:["scss"]},"text/x-setext":{source:"apache",extensions:["etx"]},"text/x-sfv":{source:"apache",extensions:["sfv"]},"text/x-suse-ymp":{compressible:!0,extensions:["ymp"]},"text/x-uuencode":{source:"apache",extensions:["uu"]},"text/x-vcalendar":{source:"apache",extensions:["vcs"]},"text/x-vcard":{source:"apache",extensions:["vcf"]},"text/xml":{source:"iana",compressible:!0,extensions:["xml"]},"text/xml-external-parsed-entity":{source:"iana"},"text/yaml":{extensions:["yaml","yml"]},"video/1d-interleaved-parityfec":{source:"apache"},"video/3gpp":{source:"apache",extensions:["3gp","3gpp"]},"video/3gpp-tt":{source:"apache"},"video/3gpp2":{source:"apache",extensions:["3g2"]},"video/bmpeg":{source:"apache"},"video/bt656":{source:"apache"},"video/celb":{source:"apache"},"video/dv":{source:"apache"},"video/h261":{source:"apache",extensions:["h261"]},"video/h263":{source:"apache",extensions:["h263"]},"video/h263-1998":{source:"apache"},"video/h263-2000":{source:"apache"},"video/h264":{source:"apache",extensions:["h264"]},"video/h264-rcdo":{source:"apache"},"video/h264-svc":{source:"apache"},"video/jpeg":{source:"apache",extensions:["jpgv"]},"video/jpeg2000":{source:"apache"},"video/jpm":{source:"apache",extensions:["jpm","jpgm"]},"video/mj2":{source:"apache",extensions:["mj2","mjp2"]},"video/mp1s":{source:"apache"},"video/mp2p":{source:"apache"},"video/mp2t":{source:"apache",extensions:["ts"]},"video/mp4":{source:"apache",compressible:!1,extensions:["mp4","mp4v","mpg4"]},"video/mp4v-es":{source:"apache"},"video/mpeg":{source:"apache",compressible:!1,extensions:["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{source:"apache"},"video/mpv":{source:"apache"},"video/nv":{source:"apache"},"video/ogg":{source:"apache",compressible:!1,extensions:["ogv"]},"video/parityfec":{source:"apache"},"video/pointer":{source:"apache"},"video/quicktime":{source:"apache",compressible:!1,extensions:["qt","mov"]},"video/raw":{source:"apache"},"video/rtp-enc-aescm128":{source:"apache"},"video/rtx":{source:"apache"},"video/smpte292m":{source:"apache"},"video/ulpfec":{source:"apache"},"video/vc1":{source:"apache"},"video/vnd.cctv":{source:"apache"},"video/vnd.dece.hd":{source:"apache",extensions:["uvh","uvvh"]},"video/vnd.dece.mobile":{source:"apache",extensions:["uvm","uvvm"]},"video/vnd.dece.mp4":{source:"apache"},"video/vnd.dece.pd":{source:"apache",extensions:["uvp","uvvp"]},"video/vnd.dece.sd":{source:"apache",extensions:["uvs","uvvs"]},"video/vnd.dece.video":{source:"apache",extensions:["uvv","uvvv"]},"video/vnd.directv.mpeg":{source:"apache"},"video/vnd.directv.mpeg-tts":{source:"apache"},"video/vnd.dlna.mpeg-tts":{source:"apache"},"video/vnd.dvb.file":{source:"apache",extensions:["dvb"]},"video/vnd.fvt":{source:"apache",extensions:["fvt"]},"video/vnd.hns.video":{source:"apache"},"video/vnd.iptvforum.1dparityfec-1010":{source:"apache"},"video/vnd.iptvforum.1dparityfec-2005":{source:"apache"},"video/vnd.iptvforum.2dparityfec-1010":{source:"apache"},"video/vnd.iptvforum.2dparityfec-2005":{source:"apache"},"video/vnd.iptvforum.ttsavc":{source:"apache"},"video/vnd.iptvforum.ttsmpeg2":{source:"apache"},"video/vnd.motorola.video":{source:"apache"},"video/vnd.motorola.videop":{source:"apache"},"video/vnd.mpegurl":{source:"apache",extensions:["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{source:"apache",extensions:["pyv"]},"video/vnd.nokia.interleaved-multimedia":{source:"apache"},"video/vnd.nokia.videovoip":{source:"apache"},"video/vnd.objectvideo":{source:"apache"},"video/vnd.sealed.mpeg1":{source:"apache"},"video/vnd.sealed.mpeg4":{source:"apache"},"video/vnd.sealed.swf":{source:"apache"},"video/vnd.sealedmedia.softseal.mov":{source:"apache"},"video/vnd.uvvu.mp4":{source:"apache",extensions:["uvu","uvvu"]},"video/vnd.vivo":{source:"apache",extensions:["viv"]},"video/webm":{source:"apache",compressible:!1,extensions:["webm"]},"video/x-f4v":{source:"apache",extensions:["f4v"]},"video/x-fli":{source:"apache",extensions:["fli"]},"video/x-flv":{source:"apache",compressible:!1,extensions:["flv"]},"video/x-m4v":{source:"apache",extensions:["m4v"]},"video/x-matroska":{source:"apache",compressible:!1,extensions:["mkv","mk3d","mks"]},"video/x-mng":{source:"apache",extensions:["mng"]},"video/x-ms-asf":{source:"apache",extensions:["asf","asx"]},"video/x-ms-vob":{source:"apache",extensions:["vob"]},"video/x-ms-wm":{source:"apache",extensions:["wm"]},"video/x-ms-wmv":{source:"apache",compressible:!1,extensions:["wmv"]},"video/x-ms-wmx":{source:"apache",extensions:["wmx"]},"video/x-ms-wvx":{source:"apache",extensions:["wvx"]},"video/x-msvideo":{source:"apache",extensions:["avi"]},"video/x-sgi-movie":{source:"apache",extensions:["movie"]},"video/x-smv":{source:"apache",extensions:["smv"]},"x-conference/x-cooltalk":{source:"apache",extensions:["ice"]},"x-shader/x-fragment":{compressible:!0},"x-shader/x-vertex":{compressible:!0}}})),UV=c((()=>{FV(),JV(),xs={directoryPaths:Ls,mimeTypes:Ds}})),WV=c((()=>{Cs=["ants","bats","bears","bees","birds","buffalo","cats","chickens","cattle","dogs","dolphins","ducks","elephants","fishes","foxes","frogs","geese","goats","horses","kangaroos","lions","monkeys","owls","oxen","penguins","people","pigs","rabbits","sheep","tigers","whales","wolves","zebras","banshees","crows","black cats","chimeras","ghosts","conspirators","dragons","dwarves","elves","enchanters","exorcists","sons","foes","giants","gnomes","goblins","gooses","griffins","lycanthropes","nemesis","ogres","oracles","prophets","sorcerors","spiders","spirits","vampires","warlocks","vixens","werewolves","witches","worshipers","zombies","druids"]})),ZV=c((()=>{Ks=["#{Address.state} #{creature}"]})),qV=c((()=>{WV(),ZV(),Rs={creature:Cs,name:Ks}})),QV=c((()=>{zs=["Adventure Road Bicycle","BMX Bicycle","City Bicycle","Cruiser Bicycle","Cyclocross Bicycle","Dual-Sport Bicycle","Fitness Bicycle","Flat-Foot Comfort Bicycle","Folding Bicycle","Hybrid Bicycle","Mountain Bicycle","Recumbent Bicycle","Road Bicycle","Tandem Bicycle","Touring Bicycle","Track/Fixed-Gear Bicycle","Triathlon/Time Trial Bicycle","Tricycle"]})),YV=c((()=>{Os=["Diesel","Electric","Gasoline","Hybrid"]})),$V=c((()=>{Is=["Aston Martin","Audi","Bentley","BMW","Bugatti","Cadillac","Chevrolet","Chrysler","Dodge","Ferrari","Fiat","Ford","Honda","Hyundai","Jaguar","Jeep","Kia","Lamborghini","Land Rover","Maserati","Mazda","Mercedes Benz","Mini","Nissan","Polestar","Porsche","Rolls Royce","Smart","Tesla","Toyota","Volkswagen","Volvo"]})),XV=c((()=>{Vs=["Fiesta","Focus","Taurus","Mustang","Explorer","Expedition","F-150","Model T","Ranchero","Volt","Cruze","Malibu","Impala","Camaro","Corvette","Colorado","Silverado","El Camino","CTS","XTS","ATS","Escalade","Alpine","Charger","LeBaron","PT Cruiser","Challenger","Durango","Grand Caravan","Wrangler","Grand Cherokee","Roadster","Model S","Model 3","Camry","Prius","Land Cruiser","Accord","Civic","Element","Sentra","Altima","A8","A4","Beetle","Jetta","Golf","911","Spyder","Countach","Mercielago","Aventador","1","2","Fortwo","V90","XC90","CX-9"]})),eG=c((()=>{Gs=["Cargo Van","Convertible","Coupe","Crew Cab Pickup","Extended Cab Pickup","Hatchback","Minivan","Passenger Van","SUV","Sedan","Wagon"]})),aG=c((()=>{QV(),YV(),$V(),XV(),eG(),Hs={bicycle:zs,fuel:Os,manufacturer:Is,model:Vs,type:Gs}})),nG=c((()=>{Fs=["abandoned","able","absolute","adorable","adventurous","academic","acceptable","acclaimed","accomplished","accurate","aching","acidic","acrobatic","active","actual","adept","admirable","admired","adolescent","adorable","adored","advanced","afraid","affectionate","aged","aggravating","aggressive","agile","agitated","agonizing","agreeable","ajar","alarmed","alarming","alert","alienated","alive","all","altruistic","amazing","ambitious","ample","amused","amusing","anchored","ancient","angelic","angry","anguished","animated","annual","another","antique","anxious","any","apprehensive","appropriate","apt","arctic","arid","aromatic","artistic","ashamed","assured","astonishing","athletic","attached","attentive","attractive","austere","authentic","authorized","automatic","avaricious","average","aware","awesome","awful","awkward","babyish","bad","back","baggy","bare","barren","basic","beautiful","belated","beloved","beneficial","better","best","bewitched","big","big-hearted","biodegradable","bite-sized","bitter","black","black-and-white","bland","blank","blaring","bleak","blind","blissful","blond","blue","blushing","bogus","boiling","bold","bony","boring","bossy","both","bouncy","bountiful","bowed","brave","breakable","brief","bright","brilliant","brisk","broken","bronze","brown","bruised","bubbly","bulky","bumpy","buoyant","burdensome","burly","bustling","busy","buttery","buzzing","calculating","calm","candid","canine","capital","carefree","careful","careless","caring","cautious","cavernous","celebrated","charming","cheap","cheerful","cheery","chief","chilly","chubby","circular","classic","clean","clear","clear-cut","clever","close","closed","cloudy","clueless","clumsy","cluttered","coarse","cold","colorful","colorless","colossal","comfortable","common","compassionate","competent","complete","complex","complicated","composed","concerned","concrete","confused","conscious","considerate","constant","content","conventional","cooked","cool","cooperative","coordinated","corny","corrupt","costly","courageous","courteous","crafty","crazy","creamy","creative","creepy","criminal","crisp","critical","crooked","crowded","cruel","crushing","cuddly","cultivated","cultured","cumbersome","curly","curvy","cute","cylindrical","damaged","damp","dangerous","dapper","daring","darling","dark","dazzling","dead","deadly","deafening","dear","dearest","decent","decimal","decisive","deep","defenseless","defensive","defiant","deficient","definite","definitive","delayed","delectable","delicious","delightful","delirious","demanding","dense","dental","dependable","dependent","descriptive","deserted","detailed","determined","devoted","different","difficult","digital","diligent","dim","dimpled","dimwitted","direct","disastrous","discrete","disfigured","disgusting","disloyal","dismal","distant","downright","dreary","dirty","disguised","dishonest","dismal","distant","distinct","distorted","dizzy","dopey","doting","double","downright","drab","drafty","dramatic","dreary","droopy","dry","dual","dull","dutiful","each","eager","earnest","early","easy","easy-going","ecstatic","edible","educated","elaborate","elastic","elated","elderly","electric","elegant","elementary","elliptical","embarrassed","embellished","eminent","emotional","empty","enchanted","enchanting","energetic","enlightened","enormous","enraged","entire","envious","equal","equatorial","essential","esteemed","ethical","euphoric","even","evergreen","everlasting","every","evil","exalted","excellent","exemplary","exhausted","excitable","excited","exciting","exotic","expensive","experienced","expert","extraneous","extroverted","extra-large","extra-small","fabulous","failing","faint","fair","faithful","fake","false","familiar","famous","fancy","fantastic","far","faraway","far-flung","far-off","fast","fat","fatal","fatherly","favorable","favorite","fearful","fearless","feisty","feline","female","feminine","few","fickle","filthy","fine","finished","firm","first","firsthand","fitting","fixed","flaky","flamboyant","flashy","flat","flawed","flawless","flickering","flimsy","flippant","flowery","fluffy","fluid","flustered","focused","fond","foolhardy","foolish","forceful","forked","formal","forsaken","forthright","fortunate","fragrant","frail","frank","frayed","free","french","fresh","frequent","friendly","frightened","frightening","frigid","frilly","frizzy","frivolous","front","frosty","frozen","frugal","fruitful","full","fumbling","functional","funny","fussy","fuzzy","gargantuan","gaseous","general","generous","gentle","genuine","giant","giddy","gigantic","gifted","giving","glamorous","glaring","glass","gleaming","gleeful","glistening","glittering","gloomy","glorious","glossy","glum","golden","good","good-natured","gorgeous","graceful","gracious","grand","grandiose","granular","grateful","grave","gray","great","greedy","green","gregarious","grim","grimy","gripping","grizzled","gross","grotesque","grouchy","grounded","growing","growling","grown","grubby","gruesome","grumpy","guilty","gullible","gummy","hairy","half","handmade","handsome","handy","happy","happy-go-lucky","hard","hard-to-find","harmful","harmless","harmonious","harsh","hasty","hateful","haunting","healthy","heartfelt","hearty","heavenly","heavy","hefty","helpful","helpless","hidden","hideous","high","high-level","hilarious","hoarse","hollow","homely","honest","honorable","honored","hopeful","horrible","hospitable","hot","huge","humble","humiliating","humming","humongous","hungry","hurtful","husky","icky","icy","ideal","idealistic","identical","idle","idiotic","idolized","ignorant","ill","illegal","ill-fated","ill-informed","illiterate","illustrious","imaginary","imaginative","immaculate","immaterial","immediate","immense","impassioned","impeccable","impartial","imperfect","imperturbable","impish","impolite","important","impossible","impractical","impressionable","impressive","improbable","impure","inborn","incomparable","incompatible","incomplete","inconsequential","incredible","indelible","inexperienced","indolent","infamous","infantile","infatuated","inferior","infinite","informal","innocent","insecure","insidious","insignificant","insistent","instructive","insubstantial","intelligent","intent","intentional","interesting","internal","international","intrepid","ironclad","irresponsible","irritating","itchy","jaded","jagged","jam-packed","jaunty","jealous","jittery","joint","jolly","jovial","joyful","joyous","jubilant","judicious","juicy","jumbo","junior","jumpy","juvenile","kaleidoscopic","keen","key","kind","kindhearted","kindly","klutzy","knobby","knotty","knowledgeable","knowing","known","kooky","kosher","lame","lanky","large","last","lasting","late","lavish","lawful","lazy","leading","lean","leafy","left","legal","legitimate","light","lighthearted","likable","likely","limited","limp","limping","linear","lined","liquid","little","live","lively","livid","loathsome","lone","lonely","long","long-term","loose","lopsided","lost","loud","lovable","lovely","loving","low","loyal","lucky","lumbering","luminous","lumpy","lustrous","luxurious","mad","made-up","magnificent","majestic","major","male","mammoth","married","marvelous","masculine","massive","mature","meager","mealy","mean","measly","meaty","medical","mediocre","medium","meek","mellow","melodic","memorable","menacing","merry","messy","metallic","mild","milky","mindless","miniature","minor","minty","miserable","miserly","misguided","misty","mixed","modern","modest","moist","monstrous","monthly","monumental","moral","mortified","motherly","motionless","mountainous","muddy","muffled","multicolored","mundane","murky","mushy","musty","muted","mysterious","naive","narrow","nasty","natural","naughty","nautical","near","neat","necessary","needy","negative","neglected","negligible","neighboring","nervous","new","next","nice","nifty","nimble","nippy","nocturnal","noisy","nonstop","normal","notable","noted","noteworthy","novel","noxious","numb","nutritious","nutty","obedient","obese","oblong","oily","oblong","obvious","occasional","odd","oddball","offbeat","offensive","official","old","old-fashioned","only","open","optimal","optimistic","opulent","orange","orderly","organic","ornate","ornery","ordinary","original","other","our","outlying","outgoing","outlandish","outrageous","outstanding","oval","overcooked","overdue","overjoyed","overlooked","palatable","pale","paltry","parallel","parched","partial","passionate","past","pastel","peaceful","peppery","perfect","perfumed","periodic","perky","personal","pertinent","pesky","pessimistic","petty","phony","physical","piercing","pink","pitiful","plain","plaintive","plastic","playful","pleasant","pleased","pleasing","plump","plush","polished","polite","political","pointed","pointless","poised","poor","popular","portly","posh","positive","possible","potable","powerful","powerless","practical","precious","present","prestigious","pretty","precious","previous","pricey","prickly","primary","prime","pristine","private","prize","probable","productive","profitable","profuse","proper","proud","prudent","punctual","pungent","puny","pure","purple","pushy","putrid","puzzled","puzzling","quaint","qualified","quarrelsome","quarterly","queasy","querulous","questionable","quick","quick-witted","quiet","quintessential","quirky","quixotic","quizzical","radiant","ragged","rapid","rare","rash","raw","recent","reckless","rectangular","ready","real","realistic","reasonable","red","reflecting","regal","regular","reliable","relieved","remarkable","remorseful","remote","repentant","required","respectful","responsible","repulsive","revolving","rewarding","rich","rigid","right","ringed","ripe","roasted","robust","rosy","rotating","rotten","rough","round","rowdy","royal","rubbery","rundown","ruddy","rude","runny","rural","rusty","sad","safe","salty","same","sandy","sane","sarcastic","sardonic","satisfied","scaly","scarce","scared","scary","scented","scholarly","scientific","scornful","scratchy","scrawny","second","secondary","second-hand","secret","self-assured","self-reliant","selfish","sentimental","separate","serene","serious","serpentine","several","severe","shabby","shadowy","shady","shallow","shameful","shameless","sharp","shimmering","shiny","shocked","shocking","shoddy","short","short-term","showy","shrill","shy","sick","silent","silky","silly","silver","similar","simple","simplistic","sinful","single","sizzling","skeletal","skinny","sleepy","slight","slim","slimy","slippery","slow","slushy","small","smart","smoggy","smooth","smug","snappy","snarling","sneaky","sniveling","snoopy","sociable","soft","soggy","solid","somber","some","spherical","sophisticated","sore","sorrowful","soulful","soupy","sour","spanish","sparkling","sparse","specific","spectacular","speedy","spicy","spiffy","spirited","spiteful","splendid","spotless","spotted","spry","square","squeaky","squiggly","stable","staid","stained","stale","standard","starchy","stark","starry","steep","sticky","stiff","stimulating","stingy","stormy","straight","strange","steel","strict","strident","striking","striped","strong","studious","stunning","stupendous","stupid","sturdy","stylish","subdued","submissive","substantial","subtle","suburban","sudden","sugary","sunny","super","superb","superficial","superior","supportive","sure-footed","surprised","suspicious","svelte","sweaty","sweet","sweltering","swift","sympathetic","tall","talkative","tame","tan","tangible","tart","tasty","tattered","taut","tedious","teeming","tempting","tender","tense","tepid","terrible","terrific","testy","thankful","that","these","thick","thin","third","thirsty","this","thorough","thorny","those","thoughtful","threadbare","thrifty","thunderous","tidy","tight","timely","tinted","tiny","tired","torn","total","tough","traumatic","treasured","tremendous","tragic","trained","tremendous","triangular","tricky","trifling","trim","trivial","troubled","true","trusting","trustworthy","trusty","truthful","tubby","turbulent","twin","ugly","ultimate","unacceptable","unaware","uncomfortable","uncommon","unconscious","understated","unequaled","uneven","unfinished","unfit","unfolded","unfortunate","unhappy","unhealthy","uniform","unimportant","unique","united","unkempt","unknown","unlawful","unlined","unlucky","unnatural","unpleasant","unrealistic","unripe","unruly","unselfish","unsightly","unsteady","unsung","untidy","untimely","untried","untrue","unused","unusual","unwelcome","unwieldy","unwilling","unwitting","unwritten","upbeat","upright","upset","urban","usable","used","useful","useless","utilized","utter","vacant","vague","vain","valid","valuable","vapid","variable","vast","velvety","venerated","vengeful","verifiable","vibrant","vicious","victorious","vigilant","vigorous","villainous","violet","violent","virtual","virtuous","visible","vital","vivacious","vivid","voluminous","wan","warlike","warm","warmhearted","warped","wary","wasteful","watchful","waterlogged","watery","wavy","wealthy","weak","weary","webbed","wee","weekly","weepy","weighty","weird","welcome","well-documented","well-groomed","well-informed","well-lit","well-made","well-off","well-to-do","well-worn","wet","which","whimsical","whirlwind","whispered","white","whole","whopping","wicked","wide","wide-eyed","wiggly","wild","willing","wilted","winding","windy","winged","wiry","wise","witty","wobbly","woeful","wonderful","wooden","woozy","wordy","worldly","worn","worried","worrisome","worse","worst","worthless","worthwhile","worthy","wrathful","wretched","writhing","wrong","wry","yawning","yearly","yellow","yellowish","young","youthful","yummy","zany","zealous","zesty","zigzag"]})),iG=c((()=>{Js=["abnormally","absentmindedly","accidentally","acidly","actually","adventurously","afterwards","almost","always","angrily","annually","anxiously","arrogantly","awkwardly","badly","bashfully","beautifully","bitterly","bleakly","blindly","blissfully","boastfully","boldly","bravely","briefly","brightly","briskly","broadly","busily","calmly","carefully","carelessly","cautiously","certainly","cheerfully","clearly","cleverly","closely","coaxingly","colorfully","commonly","continually","coolly","correctly","courageously","crossly","cruelly","curiously","daily","daintily","dearly","deceivingly","deeply","defiantly","deliberately","delightfully","diligently","dimly","doubtfully","dreamily","easily","elegantly","energetically","enormously","enthusiastically","equally","especially","even","evenly","eventually","exactly","excitedly","extremely","fairly","faithfully","famously","far","fast","fatally","ferociously","fervently","fiercely","fondly","foolishly","fortunately","frankly","frantically","freely","frenetically","frightfully","fully","furiously","generally","generously","gently","gladly","gleefully","gracefully","gratefully","greatly","greedily","happily","hastily","healthily","heavily","helpfully","helplessly","highly","honestly","hopelessly","hourly","hungrily","immediately","innocently","inquisitively","instantly","intensely","intently","interestingly","inwardly","irritably","jaggedly","jealously","joshingly","jovially","joyfully","joyously","jubilantly","judgementally","justly","keenly","kiddingly","kindheartedly","kindly","kissingly","knavishly","knottily","knowingly","knowledgeably","kookily","lazily","less","lightly","likely","limply","lively","loftily","longingly","loosely","loudly","lovingly","loyally","madly","majestically","meaningfully","mechanically","merrily","miserably","mockingly","monthly","more","mortally","mostly","mysteriously","naturally","nearly","neatly","needily","nervously","never","nicely","noisily","not","obediently","obnoxiously","oddly","offensively","officially","often","only","openly","optimistically","overconfidently","owlishly","painfully","partially","patiently","perfectly","physically","playfully","politely","poorly","positively","potentially","powerfully","promptly","properly","punctually","quaintly","quarrelsomely","queasily","queerly","questionably","questioningly","quicker","quickly","quietly","quirkily","quizzically","rapidly","rarely","readily","really","reassuringly","recklessly","regularly","reluctantly","repeatedly","reproachfully","restfully","righteously","rightfully","rigidly","roughly","rudely","sadly","safely","scarcely","scarily","searchingly","sedately","seemingly","seldom","selfishly","separately","seriously","shakily","sharply","sheepishly","shrilly","shyly","silently","sleepily","slowly","smoothly","softly","solemnly","solidly","sometimes","soon","speedily","stealthily","sternly","strictly","successfully","suddenly","surprisingly","suspiciously","sweetly","swiftly","sympathetically","tenderly","tensely","terribly","thankfully","thoroughly","thoughtfully","tightly","tomorrow","too","tremendously","triumphantly","truly","truthfully","ultimately","unabashedly","unaccountably","unbearably","unethically","unexpectedly","unfortunately","unimpressively","unnaturally","unnecessarily","upbeat","upliftingly","upright","upside-down","upward","upwardly","urgently","usefully","uselessly","usually","utterly","vacantly","vaguely","vainly","valiantly","vastly","verbally","very","viciously","victoriously","violently","vivaciously","voluntarily","warmly","weakly","wearily","well","wetly","wholly","wildly","willfully","wisely","woefully","wonderfully","worriedly","wrongly","yawningly","yearly","yearningly","yesterday","yieldingly","youthfully"]})),rG=c((()=>{Us=["after","after all","although","and","as","as a result","as if","as long as","as much as","as soon as","as though","because","before","but","consequently","even","even if","even though","finally","for","for example","furthermore","hence","however","if","if only","if then","if when","in addition","in fact","in order that","inasmuch","incidentally","indeed","instead","just as","lest","likewise","meanwhile","nor","now","now since","now that","now when","once","or","provided","provided that","rather than","since","so","so that","supposing","that","though","until","whenever","whereas","wherever","which","who","yet"]})),tG=c((()=>{Ws=["yuck","oh","phooey","blah","boo","whoa","yowza","huzzah","boo hoo","fooey","geez","pfft","ew","ah","yum","brr","hm","yahoo","aha","woot","drat","gah","meh","psst","aw","ugh","yippee","eek","gee","bah","gadzooks","duh","ha","mmm","tsk tsk","ouch","phew","ack","uh-huh","gosh","hmph","pish","zowie","er","ick","oof","um"]})),oG=c((()=>{Zs=["ATM","CD","SUV","TV","aardvark","abacus","abbey","abbreviation","abdomen","ability","abnormality","abolishment","abortion","abrogation","absence","abundance","abuse","academics","academy","accelerant","accelerator","accent","acceptance","access","accessory","accident","accommodation","accompanist","accomplishment","accord","accordance","accordion","account","accountability","accountant","accounting","accuracy","accusation","acetate","achievement","achiever","acid","acknowledgment","acorn","acoustics","acquaintance","acquisition","acre","acrylic","act","action","activation","activist","activity","actor","actress","acupuncture","ad","adaptation","adapter","addiction","addition","address","adjective","adjustment","admin","administration","administrator","admire","admission","adobe","adoption","adrenalin","adrenaline","adult","adulthood","advance","advancement","advantage","advent","adverb","advertisement","advertising","advice","adviser","advocacy","advocate","affair","affect","affidavit","affiliate","affinity","afoul","afterlife","aftermath","afternoon","aftershave","aftershock","afterthought","age","agency","agenda","agent","aggradation","aggression","aglet","agony","agreement","agriculture","aid","aide","aim","air","airbag","airbus","aircraft","airfare","airfield","airforce","airline","airmail","airman","airplane","airport","airship","airspace","alarm","alb","albatross","album","alcohol","alcove","alder","ale","alert","alfalfa","algebra","algorithm","alias","alibi","alien","allegation","allergist","alley","alliance","alligator","allocation","allowance","alloy","alluvium","almanac","almighty","almond","alpaca","alpenglow","alpenhorn","alpha","alphabet","altar","alteration","alternative","altitude","alto","aluminium","aluminum","amazement","amazon","ambassador","amber","ambience","ambiguity","ambition","ambulance","amendment","amenity","ammunition","amnesty","amount","amusement","anagram","analgesia","analog","analogue","analogy","analysis","analyst","analytics","anarchist","anarchy","anatomy","ancestor","anchovy","android","anesthesiologist","anesthesiology","angel","anger","angina","angiosperm","angle","angora","angstrom","anguish","animal","anime","anise","ankle","anklet","anniversary","announcement","annual","anorak","answer","ant","anteater","antecedent","antechamber","antelope","antennae","anterior","anthropology","antibody","anticipation","anticodon","antigen","antique","antiquity","antler","antling","anxiety","anybody","anyone","anything","anywhere","apartment","ape","aperitif","apology","app","apparatus","apparel","appeal","appearance","appellation","appendix","appetiser","appetite","appetizer","applause","apple","applewood","appliance","application","appointment","appreciation","apprehension","approach","appropriation","approval","apricot","apron","apse","aquarium","aquifer","arcade","arch","arch-rival","archaeologist","archaeology","archeology","archer","architect","architecture","archives","area","arena","argument","arithmetic","ark","arm","arm-rest","armadillo","armament","armchair","armoire","armor","armour","armpit","armrest","army","arrangement","array","arrest","arrival","arrogance","arrow","art","artery","arthur","artichoke","article","artifact","artificer","artist","ascend","ascent","ascot","ash","ashram","ashtray","aside","asparagus","aspect","asphalt","aspic","ass","assassination","assault","assembly","assertion","assessment","asset","assignment","assist","assistance","assistant","associate","association","assumption","assurance","asterisk","astrakhan","astrolabe","astrologer","astrology","astronomy","asymmetry","atelier","atheist","athlete","athletics","atmosphere","atom","atrium","attachment","attack","attacker","attainment","attempt","attendance","attendant","attention","attenuation","attic","attitude","attorney","attraction","attribute","auction","audience","audit","auditorium","aunt","authentication","authenticity","author","authorisation","authority","authorization","auto","autoimmunity","automation","automaton","autumn","availability","avalanche","avenue","average","avocado","award","awareness","awe","axis","azimuth","babe","baboon","babushka","baby","bachelor","back","back-up","backbone","backburn","backdrop","background","backpack","backup","backyard","bacon","bacterium","badge","badger","bafflement","bag","bagel","baggage","baggie","baggy","bagpipe","bail","bait","bake","baker","bakery","bakeware","balaclava","balalaika","balance","balcony","ball","ballet","balloon","balloonist","ballot","ballpark","bamboo","ban","banana","band","bandana","bandanna","bandolier","bandwidth","bangle","banjo","bank","bankbook","banker","banking","bankruptcy","banner","banquette","banyan","baobab","bar","barbecue","barbeque","barber","barbiturate","bargain","barge","baritone","barium","bark","barley","barn","barometer","barracks","barrage","barrel","barrier","barstool","bartender","base","baseball","baseboard","baseline","basement","basics","basil","basin","basis","basket","basketball","bass","bassinet","bassoon","bat","bath","bather","bathhouse","bathrobe","bathroom","bathtub","battalion","batter","battery","batting","battle","battleship","bay","bayou","beach","bead","beak","beam","bean","beancurd","beanie","beanstalk","bear","beard","beast","beastie","beat","beating","beauty","beaver","beck","bed","bedrock","bedroom","bee","beech","beef","beer","beet","beetle","beggar","beginner","beginning","begonia","behalf","behavior","behaviour","beheading","behest","behold","being","belfry","belief","believer","bell","belligerency","bellows","belly","belt","bench","bend","beneficiary","benefit","beret","berry","best-seller","bestseller","bet","beverage","beyond","bias","bibliography","bicycle","bid","bidder","bidding","bidet","bifocals","bijou","bike","bikini","bill","billboard","billing","billion","bin","binoculars","biology","biopsy","biosphere","biplane","birch","bird","bird-watcher","birdbath","birdcage","birdhouse","birth","birthday","biscuit","bit","bite","bitten","bitter","black","blackberry","blackbird","blackboard","blackfish","blackness","bladder","blade","blame","blank","blanket","blast","blazer","blend","blessing","blight","blind","blinker","blister","blizzard","block","blocker","blog","blogger","blood","bloodflow","bloom","bloomer","blossom","blouse","blow","blowgun","blowhole","blue","blueberry","blush","boar","board","boat","boatload","boatyard","bob","bobcat","body","bog","bolero","bolt","bomb","bomber","bombing","bond","bonding","bondsman","bone","bonfire","bongo","bonnet","bonsai","bonus","boogeyman","book","bookcase","bookend","booking","booklet","bookmark","boolean","boom","boon","boost","booster","boot","bootee","bootie","booty","border","bore","borrower","borrowing","bosom","boss","botany","bother","bottle","bottling","bottom","bottom-line","boudoir","bough","boulder","boulevard","boundary","bouquet","bourgeoisie","bout","boutique","bow","bower","bowl","bowler","bowling","bowtie","box","boxer","boxspring","boy","boycott","boyfriend","boyhood","boysenberry","bra","brace","bracelet","bracket","brain","brake","bran","branch","brand","brandy","brass","brassiere","bratwurst","bread","breadcrumb","breadfruit","break","breakdown","breakfast","breakpoint","breakthrough","breast","breastplate","breath","breeze","brewer","bribery","brick","bricklaying","bride","bridge","brief","briefing","briefly","briefs","brilliant","brink","brisket","broad","broadcast","broccoli","brochure","brocolli","broiler","broker","bronchitis","bronco","bronze","brooch","brood","brook","broom","brother","brother-in-law","brow","brown","brownie","browser","browsing","brunch","brush","brushfire","brushing","bubble","buck","bucket","buckle","buckwheat","bud","buddy","budget","buffalo","buffer","buffet","bug","buggy","bugle","builder","building","bulb","bulk","bull","bull-fighter","bulldozer","bullet","bump","bumper","bun","bunch","bungalow","bunghole","bunkhouse","burden","bureau","burglar","burial","burlesque","burn","burn-out","burning","burrito","burro","burrow","burst","bus","bush","business","businessman","bust","bustle","butane","butcher","butler","butter","butterfly","button","buy","buyer","buying","buzz","buzzard","c-clamp","cabana","cabbage","cabin","cabinet","cable","caboose","cacao","cactus","caddy","cadet","cafe","caffeine","caftan","cage","cake","calcification","calculation","calculator","calculus","calendar","calf","caliber","calibre","calico","call","calm","calorie","camel","cameo","camera","camp","campaign","campaigning","campanile","camper","campus","can","canal","cancer","candelabra","candidacy","candidate","candle","candy","cane","cannibal","cannon","canoe","canon","canopy","cantaloupe","canteen","canvas","cap","capability","capacity","cape","caper","capital","capitalism","capitulation","capon","cappelletti","cappuccino","captain","caption","captor","car","carabao","caramel","caravan","carbohydrate","carbon","carboxyl","card","cardboard","cardigan","care","career","cargo","caribou","carload","carnation","carnival","carol","carotene","carp","carpenter","carpet","carpeting","carport","carriage","carrier","carrot","carry","cart","cartel","carter","cartilage","cartload","cartoon","cartridge","carving","cascade","case","casement","cash","cashew","cashier","casino","casket","cassava","casserole","cassock","cast","castanet","castle","casualty","cat","catacomb","catalogue","catalysis","catalyst","catamaran","catastrophe","catch","catcher","category","caterpillar","cathedral","cation","catsup","cattle","cauliflower","causal","cause","causeway","caution","cave","caviar","cayenne","ceiling","celebration","celebrity","celeriac","celery","cell","cellar","cello","celsius","cement","cemetery","cenotaph","census","cent","center","centimeter","centre","centurion","century","cephalopod","ceramic","ceramics","cereal","ceremony","certainty","certificate","certification","cesspool","chafe","chain","chainstay","chair","chairlift","chairman","chairperson","chaise","chalet","chalice","chalk","challenge","chamber","champagne","champion","championship","chance","chandelier","change","channel","chaos","chap","chapel","chaplain","chapter","character","characteristic","characterization","chard","charge","charger","charity","charlatan","charm","charset","chart","charter","chasm","chassis","chastity","chasuble","chateau","chatter","chauffeur","chauvinist","check","checkbook","checking","checkout","checkroom","cheddar","cheek","cheer","cheese","cheesecake","cheetah","chef","chem","chemical","chemistry","chemotaxis","cheque","cherry","chess","chest","chestnut","chick","chicken","chicory","chief","chiffonier","child","childbirth","childhood","chili","chill","chime","chimpanzee","chin","chinchilla","chino","chip","chipmunk","chit-chat","chivalry","chive","chives","chocolate","choice","choir","choker","cholesterol","choosing","chop","chops","chopstick","chopsticks","chord","chorus","chow","chowder","chrome","chromolithograph","chronicle","chronograph","chronometer","chrysalis","chub","chuck","chug","church","churn","chutney","cicada","cigarette","cilantro","cinder","cinema","cinnamon","circadian","circle","circuit","circulation","circumference","circumstance","cirrhosis","cirrus","citizen","citizenship","citron","citrus","city","civilian","civilisation","civilization","claim","clam","clamp","clan","clank","clapboard","clarification","clarinet","clarity","clasp","class","classic","classification","classmate","classroom","clause","clave","clavicle","clavier","claw","clay","cleaner","clearance","clearing","cleat","cleavage","clef","cleft","clergyman","cleric","clerk","click","client","cliff","climate","climb","clinic","clip","clipboard","clipper","cloak","cloakroom","clock","clockwork","clogs","cloister","clone","close","closet","closing","closure","cloth","clothes","clothing","cloud","cloudburst","clove","clover","cloves","club","clue","cluster","clutch","co-producer","coach","coal","coalition","coast","coaster","coat","cob","cobbler","cobweb","cock","cockpit","cockroach","cocktail","cocoa","coconut","cod","code","codepage","codling","codon","codpiece","coevolution","cofactor","coffee","coffin","cohesion","cohort","coil","coin","coincidence","coinsurance","coke","cold","coleslaw","coliseum","collaboration","collagen","collapse","collar","collard","collateral","colleague","collection","collectivisation","collectivization","collector","college","collision","colloquy","colon","colonial","colonialism","colonisation","colonization","colony","color","colorlessness","colt","column","columnist","comb","combat","combination","combine","comeback","comedy","comestible","comfort","comfortable","comic","comics","comma","command","commander","commandment","comment","commerce","commercial","commission","commitment","committee","commodity","common","commonsense","commotion","communicant","communication","communion","communist","community","commuter","company","comparison","compass","compassion","compassionate","compensation","competence","competition","competitor","complaint","complement","completion","complex","complexity","compliance","complication","complicity","compliment","component","comportment","composer","composite","composition","compost","comprehension","compress","compromise","comptroller","compulsion","computer","comradeship","con","concentrate","concentration","concept","conception","concern","concert","conclusion","concrete","condition","conditioner","condominium","condor","conduct","conductor","cone","confectionery","conference","confidence","confidentiality","configuration","confirmation","conflict","conformation","confusion","conga","congo","congregation","congress","congressman","congressperson","conifer","connection","connotation","conscience","consciousness","consensus","consent","consequence","conservation","conservative","consideration","consignment","consist","consistency","console","consonant","conspiracy","conspirator","constant","constellation","constitution","constraint","construction","consul","consulate","consulting","consumer","consumption","contact","contact lens","contagion","container","content","contention","contest","context","continent","contingency","continuity","contour","contract","contractor","contrail","contrary","contrast","contribution","contributor","control","controller","controversy","convection","convenience","convention","conversation","conversion","convert","convertible","conviction","cook","cookbook","cookie","cooking","coonskin","cooperation","coordination","coordinator","cop","cop-out","cope","copper","copy","copying","copyright","copywriter","coral","cord","corduroy","core","cork","cormorant","corn","corner","cornerstone","cornet","cornflakes","cornmeal","corporal","corporation","corporatism","corps","corral","correspondence","correspondent","corridor","corruption","corsage","cosset","cost","costume","cot","cottage","cotton","couch","cougar","cough","council","councilman","councilor","councilperson","counsel","counseling","counselling","counsellor","counselor","count","counter","counter-force","counterpart","counterterrorism","countess","country","countryside","county","couple","coupon","courage","course","court","courthouse","courtroom","cousin","covariate","cover","coverage","coverall","cow","cowbell","cowboy","coyote","crab","crack","cracker","crackers","cradle","craft","craftsman","cranberry","crane","cranky","crap","crash","crate","cravat","craw","crawdad","crayfish","crayon","crazy","cream","creation","creationism","creationist","creative","creativity","creator","creature","creche","credential","credenza","credibility","credit","creditor","creek","creme brulee","crepe","crest","crew","crewman","crewmate","crewmember","crewmen","cria","crib","cribbage","cricket","cricketer","crime","criminal","crinoline","crisis","crisp","criteria","criterion","critic","criticism","crocodile","crocus","croissant","crook","crop","cross","cross-contamination","cross-stitch","crotch","croup","crow","crowd","crown","crucifixion","crude","cruelty","cruise","crumb","crunch","crusader","crush","crust","cry","crystal","crystallography","cub","cube","cuckoo","cucumber","cue","cuff-link","cuisine","cultivar","cultivator","culture","culvert","cummerbund","cup","cupboard","cupcake","cupola","curd","cure","curio","curiosity","curl","curler","currant","currency","current","curriculum","curry","curse","cursor","curtailment","curtain","curve","cushion","custard","custody","custom","customer","cut","cuticle","cutlet","cutover","cutting","cyclamen","cycle","cyclone","cyclooxygenase","cygnet","cylinder","cymbal","cynic","cyst","cytokine","cytoplasm","dad","daddy","daffodil","dagger","dahlia","daikon","daily","dairy","daisy","dam","damage","dame","damn","dance","dancer","dancing","dandelion","danger","dare","dark","darkness","darn","dart","dash","dashboard","data","database","date","daughter","dawn","day","daybed","daylight","dead","deadline","deal","dealer","dealing","dearest","death","deathwatch","debate","debris","debt","debtor","decade","decadence","decency","decimal","decision","decision-making","deck","declaration","declination","decline","decoder","decongestant","decoration","decrease","decryption","dedication","deduce","deduction","deed","deep","deer","default","defeat","defendant","defender","defense","deficit","definition","deformation","degradation","degree","delay","deliberation","delight","delivery","demand","democracy","democrat","demon","demur","den","denim","denominator","density","dentist","deodorant","department","departure","dependency","dependent","deployment","deposit","deposition","depot","depression","depressive","depth","deputy","derby","derivation","derivative","derrick","descendant","descent","description","desert","design","designation","designer","desire","desk","desktop","dessert","destination","destiny","destroyer","destruction","detail","detainee","detainment","detection","detective","detector","detention","determination","detour","devastation","developer","developing","development","developmental","deviance","deviation","device","devil","dew","dhow","diabetes","diadem","diagnosis","diagram","dial","dialect","dialogue","diam","diamond","diaper","diaphragm","diarist","diary","dibble","dick","dickey","dictaphone","dictator","diction","dictionary","die","diesel","diet","difference","differential","difficulty","diffuse","dig","digestion","digestive","digger","digging","digit","dignity","dilapidation","dill","dilution","dime","dimension","dimple","diner","dinghy","dining","dinner","dinosaur","dioxide","dip","diploma","diplomacy","dipstick","direction","directive","director","directory","dirndl","dirt","disability","disadvantage","disagreement","disappointment","disarmament","disaster","discharge","discipline","disclaimer","disclosure","disco","disconnection","discount","discourse","discovery","discrepancy","discretion","discrimination","discussion","disdain","disease","disembodiment","disengagement","disguise","disgust","dish","dishwasher","disk","disparity","dispatch","displacement","display","disposal","disposer","disposition","dispute","disregard","disruption","dissemination","dissonance","distance","distinction","distortion","distribution","distributor","district","divalent","divan","diver","diversity","divide","dividend","divider","divine","diving","division","divorce","doc","dock","doctor","doctorate","doctrine","document","documentary","documentation","doe","dog","doggie","dogsled","dogwood","doing","doll","dollar","dollop","dolman","dolor","dolphin","domain","dome","domination","donation","donkey","donor","donut","door","doorbell","doorknob","doorpost","doorway","dory","dose","dot","double","doubling","doubt","doubter","dough","doughnut","down","downfall","downforce","downgrade","download","downstairs","downtown","downturn","dozen","draft","drag","dragon","dragonfly","dragonfruit","dragster","drain","drainage","drake","drama","dramaturge","drapes","draw","drawbridge","drawer","drawing","dream","dreamer","dredger","dress","dresser","dressing","drill","drink","drinking","drive","driver","driveway","driving","drizzle","dromedary","drop","drudgery","drug","drum","drummer","drunk","dryer","duck","duckling","dud","dude","due","duel","dueling","duffel","dugout","dulcimer","dumbwaiter","dump","dump truck","dune","dune buggy","dungarees","dungeon","duplexer","duration","durian","dusk","dust","dust storm","duster","duty","dwarf","dwell","dwelling","dynamics","dynamite","dynamo","dynasty","dysfunction","e-book","e-mail","e-reader","eagle","eaglet","ear","eardrum","earmuffs","earnings","earplug","earring","earrings","earth","earthquake","earthworm","ease","easel","east","eating","eaves","eavesdropper","ecclesia","echidna","eclipse","ecliptic","ecology","economics","economy","ecosystem","ectoderm","ectodermal","ecumenist","eddy","edge","edger","edible","editing","edition","editor","editorial","education","eel","effacement","effect","effective","effectiveness","effector","efficacy","efficiency","effort","egg","egghead","eggnog","eggplant","ego","eicosanoid","ejector","elbow","elderberry","election","electricity","electrocardiogram","electronics","element","elephant","elevation","elevator","eleventh","elf","elicit","eligibility","elimination","elite","elixir","elk","ellipse","elm","elongation","elver","email","emanate","embarrassment","embassy","embellishment","embossing","embryo","emerald","emergence","emergency","emergent","emery","emission","emitter","emotion","emphasis","empire","employ","employee","employer","employment","empowerment","emu","enactment","encirclement","enclave","enclosure","encounter","encouragement","encyclopedia","end","endive","endoderm","endorsement","endothelium","endpoint","enemy","energy","enforcement","engagement","engine","engineer","engineering","enigma","enjoyment","enquiry","enrollment","enterprise","entertainment","enthusiasm","entirety","entity","entrance","entree","entrepreneur","entry","envelope","environment","envy","enzyme","epauliere","epee","ephemera","ephemeris","ephyra","epic","episode","epithelium","epoch","eponym","epoxy","equal","equality","equation","equinox","equipment","equity","equivalent","era","eraser","erection","erosion","error","escalator","escape","escort","espadrille","espalier","essay","essence","essential","establishment","estate","estimate","estrogen","estuary","eternity","ethernet","ethics","ethnicity","ethyl","euphonium","eurocentrism","evaluation","evaluator","evaporation","eve","evening","evening-wear","event","everybody","everyone","everything","eviction","evidence","evil","evocation","evolution","ex-husband","ex-wife","exaggeration","exam","examination","examiner","example","exasperation","excellence","exception","excerpt","excess","exchange","excitement","exclamation","excursion","excuse","execution","executive","executor","exercise","exhaust","exhaustion","exhibit","exhibition","exile","existence","exit","exocrine","expansion","expansionism","expectancy","expectation","expedition","expense","experience","experiment","experimentation","expert","expertise","explanation","exploration","explorer","explosion","export","expose","exposition","exposure","expression","extension","extent","exterior","external","extinction","extreme","extremist","eye","eyeball","eyebrow","eyebrows","eyeglasses","eyelash","eyelashes","eyelid","eyelids","eyeliner","eyestrain","eyrie","fabric","face","facelift","facet","facility","facsimile","fact","factor","factory","faculty","fahrenheit","fail","failure","fairness","fairy","faith","faithful","fall","fallacy","falling-out","fame","familiar","familiarity","family","fan","fang","fanlight","fanny","fanny-pack","fantasy","farm","farmer","farming","farmland","farrow","fascia","fashion","fat","fate","father","father-in-law","fatigue","fatigues","faucet","fault","fav","fava","favor","favorite","fawn","fax","fear","feast","feather","feature","fedelini","federation","fedora","fee","feed","feedback","feeding","feel","feeling","fellow","felony","female","fen","fence","fencing","fender","feng","fennel","ferret","ferry","ferryboat","fertilizer","festival","fetus","few","fiber","fiberglass","fibre","fibroblast","fibrosis","ficlet","fiction","fiddle","field","fiery","fiesta","fifth","fig","fight","fighter","figure","figurine","file","filing","fill","fillet","filly","film","filter","filth","final","finance","financing","finding","fine","finer","finger","fingerling","fingernail","finish","finisher","fir","fire","fireman","fireplace","firewall","firm","first","fish","fishbone","fisherman","fishery","fishing","fishmonger","fishnet","fisting","fit","fitness","fix","fixture","flag","flair","flame","flan","flanker","flare","flash","flat","flatboat","flavor","flax","fleck","fledgling","fleece","flesh","flexibility","flick","flicker","flight","flint","flintlock","flip-flops","flock","flood","floodplain","floor","floozie","flour","flow","flower","flu","flugelhorn","fluke","flume","flung","flute","fly","flytrap","foal","foam","fob","focus","fog","fold","folder","folk","folklore","follower","following","fondue","font","food","foodstuffs","fool","foot","footage","football","footnote","footprint","footrest","footstep","footstool","footwear","forage","forager","foray","force","ford","forearm","forebear","forecast","forehead","foreigner","forelimb","forest","forestry","forever","forgery","fork","form","formal","formamide","format","formation","former","formicarium","formula","fort","forte","fortnight","fortress","fortune","forum","foundation","founder","founding","fountain","fourths","fowl","fox","foxglove","fraction","fragrance","frame","framework","fratricide","fraud","fraudster","freak","freckle","freedom","freelance","freezer","freezing","freight","freighter","frenzy","freon","frequency","fresco","friction","fridge","friend","friendship","fries","frigate","fright","fringe","fritter","frock","frog","front","frontier","frost","frosting","frown","fruit","frustration","fry","fuck","fuel","fugato","fulfillment","full","fun","function","functionality","fund","funding","fundraising","funeral","fur","furnace","furniture","furry","fusarium","futon","future","gadget","gaffe","gaffer","gain","gaiters","gale","gall-bladder","gallery","galley","gallon","galoshes","gambling","game","gamebird","gaming","gamma-ray","gander","gang","gap","garage","garb","garbage","garden","garlic","garment","garter","gas","gasket","gasoline","gasp","gastronomy","gastropod","gate","gateway","gather","gathering","gator","gauge","gauntlet","gavel","gazebo","gazelle","gear","gearshift","geek","gel","gelatin","gelding","gem","gemsbok","gender","gene","general","generation","generator","generosity","genetics","genie","genius","genocide","genre","gentleman","geography","geology","geometry","geranium","gerbil","gesture","geyser","gherkin","ghost","giant","gift","gig","gigantism","giggle","ginger","gingerbread","ginseng","giraffe","girdle","girl","girlfriend","git","glacier","gladiolus","glance","gland","glass","glasses","glee","glen","glider","gliding","glimpse","globe","glockenspiel","gloom","glory","glove","glow","glucose","glue","glut","glutamate","gnat","gnu","go-kart","goal","goat","gobbler","god","goddess","godfather","godmother","godparent","goggles","going","gold","goldfish","golf","gondola","gong","good","good-bye","goodbye","goodie","goodness","goodnight","goodwill","goose","gopher","gorilla","gosling","gossip","governance","government","governor","gown","grab-bag","grace","grade","gradient","graduate","graduation","graffiti","graft","grain","gram","grammar","gran","grand","grandchild","granddaughter","grandfather","grandma","grandmom","grandmother","grandpa","grandparent","grandson","granny","granola","grant","grape","grapefruit","graph","graphic","grasp","grass","grasshopper","grassland","gratitude","gravel","gravitas","gravity","gravy","gray","grease","great-grandfather","great-grandmother","greatness","greed","green","greenhouse","greens","grenade","grey","grid","grief","grill","grin","grip","gripper","grit","grocery","ground","group","grouper","grouse","grove","growth","grub","guacamole","guarantee","guard","guava","guerrilla","guess","guest","guestbook","guidance","guide","guideline","guilder","guilt","guilty","guinea","guitar","guitarist","gum","gumshoe","gun","gunpowder","gutter","guy","gym","gymnast","gymnastics","gynaecology","gyro","habit","habitat","hacienda","hacksaw","hackwork","hail","hair","haircut","hake","half","half-brother","half-sister","halibut","hall","halloween","hallway","halt","ham","hamburger","hammer","hammock","hamster","hand","hand-holding","handball","handful","handgun","handicap","handle","handlebar","handmaiden","handover","handrail","handsaw","hanger","happening","happiness","harald","harbor","harbour","hard-hat","hardboard","hardcover","hardening","hardhat","hardship","hardware","hare","harm","harmonica","harmonise","harmonize","harmony","harp","harpooner","harpsichord","harvest","harvester","hash","hashtag","hassock","haste","hat","hatbox","hatchet","hatchling","hate","hatred","haunt","haven","haversack","havoc","hawk","hay","haze","hazel","hazelnut","head","headache","headlight","headline","headphones","headquarters","headrest","health","health-care","hearing","hearsay","heart","heart-throb","heartache","heartbeat","hearth","hearthside","heartwood","heat","heater","heating","heaven","heavy","hectare","hedge","hedgehog","heel","heifer","height","heir","heirloom","helicopter","helium","hell","hellcat","hello","helmet","helo","help","hemisphere","hemp","hen","hepatitis","herb","herbs","heritage","hermit","hero","heroine","heron","herring","hesitation","heterosexual","hexagon","heyday","hiccups","hide","hierarchy","high","high-rise","highland","highlight","highway","hike","hiking","hill","hint","hip","hippodrome","hippopotamus","hire","hiring","historian","history","hit","hive","hobbit","hobby","hockey","hoe","hog","hold","holder","hole","holiday","home","homeland","homeownership","hometown","homework","homicide","homogenate","homonym","homosexual","homosexuality","honesty","honey","honeybee","honeydew","honor","honoree","hood","hoof","hook","hop","hope","hops","horde","horizon","hormone","horn","hornet","horror","horse","horseradish","horst","hose","hosiery","hospice","hospital","hospitalisation","hospitality","hospitalization","host","hostel","hostess","hotdog","hotel","hound","hour","hourglass","house","houseboat","household","housewife","housework","housing","hovel","hovercraft","howard","howitzer","hub","hubcap","hubris","hug","hugger","hull","human","humanity","humidity","hummus","humor","humour","hunchback","hundred","hunger","hunt","hunter","hunting","hurdle","hurdler","hurricane","hurry","hurt","husband","hut","hutch","hyacinth","hybridisation","hybridization","hydrant","hydraulics","hydrocarb","hydrocarbon","hydrofoil","hydrogen","hydrolyse","hydrolysis","hydrolyze","hydroxyl","hyena","hygienic","hype","hyphenation","hypochondria","hypothermia","hypothesis","ice","ice-cream","iceberg","icebreaker","icecream","icicle","icing","icon","icy","id","idea","ideal","identification","identity","ideology","idiom","idiot","igloo","ignorance","ignorant","ikebana","illegal","illiteracy","illness","illusion","illustration","image","imagination","imbalance","imitation","immigrant","immigration","immortal","impact","impairment","impala","impediment","implement","implementation","implication","import","importance","impostor","impress","impression","imprisonment","impropriety","improvement","impudence","impulse","in-joke","in-laws","inability","inauguration","inbox","incandescence","incarnation","incense","incentive","inch","incidence","incident","incision","inclusion","income","incompetence","inconvenience","increase","incubation","independence","independent","index","indication","indicator","indigence","individual","industrialisation","industrialization","industry","inequality","inevitable","infancy","infant","infarction","infection","infiltration","infinite","infix","inflammation","inflation","influence","influx","info","information","infrastructure","infusion","inglenook","ingrate","ingredient","inhabitant","inheritance","inhibition","inhibitor","initial","initialise","initialize","initiative","injunction","injury","injustice","ink","inlay","inn","innervation","innocence","innocent","innovation","input","inquiry","inscription","insect","insectarium","insert","inside","insight","insolence","insomnia","inspection","inspector","inspiration","installation","instance","instant","instinct","institute","institution","instruction","instructor","instrument","instrumentalist","instrumentation","insulation","insurance","insurgence","insurrection","integer","integral","integration","integrity","intellect","intelligence","intensity","intent","intention","intentionality","interaction","interchange","interconnection","intercourse","interest","interface","interferometer","interior","interject","interloper","internet","interpretation","interpreter","interval","intervenor","intervention","interview","interviewer","intestine","introduction","intuition","invader","invasion","invention","inventor","inventory","inverse","inversion","investigation","investigator","investment","investor","invitation","invite","invoice","involvement","iridescence","iris","iron","ironclad","irony","irrigation","ischemia","island","isogloss","isolation","issue","item","itinerary","ivory","jack","jackal","jacket","jackfruit","jade","jaguar","jail","jailhouse","jalapeño","jam","jar","jasmine","jaw","jazz","jealousy","jeans","jeep","jelly","jellybeans","jellyfish","jerk","jet","jewel","jeweller","jewellery","jewelry","jicama","jiffy","job","jockey","jodhpurs","joey","jogging","joint","joke","jot","journal","journalism","journalist","journey","joy","judge","judgment","judo","jug","juggernaut","juice","julienne","jumbo","jump","jumper","jumpsuit","jungle","junior","junk","junker","junket","jury","justice","justification","jute","kale","kamikaze","kangaroo","karate","kayak","kazoo","kebab","keep","keeper","kendo","kennel","ketch","ketchup","kettle","kettledrum","key","keyboard","keyboarding","keystone","kick","kick-off","kid","kidney","kielbasa","kill","killer","killing","kilogram","kilometer","kilt","kimono","kinase","kind","kindness","king","kingdom","kingfish","kiosk","kiss","kit","kitchen","kite","kitsch","kitten","kitty","kiwi","knee","kneejerk","knickers","knife","knife-edge","knight","knitting","knock","knot","know-how","knowledge","knuckle","koala","kohlrabi","kumquat","lab","label","labor","laboratory","laborer","labour","labourer","lace","lack","lacquerware","lad","ladder","ladle","lady","ladybug","lag","lake","lamb","lambkin","lament","lamp","lanai","land","landform","landing","landmine","landscape","lane","language","lantern","lap","laparoscope","lapdog","laptop","larch","lard","larder","lark","larva","laryngitis","lasagna","lashes","last","latency","latex","lathe","latitude","latte","latter","laugh","laughter","laundry","lava","law","lawmaker","lawn","lawsuit","lawyer","lay","layer","layout","lead","leader","leadership","leading","leaf","league","leaker","leap","learning","leash","leather","leave","leaver","lecture","leek","leeway","left","leg","legacy","legal","legend","legging","legislation","legislator","legislature","legitimacy","legume","leisure","lemon","lemonade","lemur","lender","lending","length","lens","lentil","leopard","leprosy","leptocephalus","lesbian","lesson","letter","lettuce","level","lever","leverage","leveret","liability","liar","liberty","libido","library","licence","license","licensing","licorice","lid","lie","lieu","lieutenant","life","lifestyle","lifetime","lift","ligand","light","lighting","lightning","lightscreen","ligula","likelihood","likeness","lilac","lily","limb","lime","limestone","limit","limitation","limo","line","linen","liner","linguist","linguistics","lining","link","linkage","linseed","lion","lip","lipid","lipoprotein","lipstick","liquid","liquidity","liquor","list","listening","listing","literate","literature","litigation","litmus","litter","littleneck","liver","livestock","living","lizard","llama","load","loading","loaf","loafer","loan","lobby","lobotomy","lobster","local","locality","location","lock","locker","locket","locomotive","locust","lode","loft","log","loggia","logic","login","logistics","logo","loincloth","lollipop","loneliness","longboat","longitude","look","lookout","loop","loophole","loquat","lord","loss","lot","lotion","lottery","lounge","louse","lout","love","lover","lox","loyalty","luck","luggage","lumber","lumberman","lunch","luncheonette","lunchmeat","lunchroom","lung","lunge","lust","lute","luxury","lychee","lycra","lye","lymphocyte","lynx","lyocell","lyre","lyrics","lysine","mRNA","macadamia","macaroni","macaroon","macaw","machine","machinery","macrame","macro","macrofauna","madam","maelstrom","maestro","magazine","maggot","magic","magnet","magnitude","maid","maiden","mail","mailbox","mailer","mailing","mailman","main","mainland","mainstream","maintainer","maintenance","maize","major","major-league","majority","makeover","maker","makeup","making","male","malice","mall","mallard","mallet","malnutrition","mama","mambo","mammoth","man","manacle","management","manager","manatee","mandarin","mandate","mandolin","mangle","mango","mangrove","manhunt","maniac","manicure","manifestation","manipulation","mankind","manner","manor","mansard","manservant","mansion","mantel","mantle","mantua","manufacturer","manufacturing","many","map","maple","mapping","maracas","marathon","marble","march","mare","margarine","margin","mariachi","marimba","marines","marionberry","mark","marker","market","marketer","marketing","marketplace","marksman","markup","marmalade","marriage","marsh","marshland","marshmallow","marten","marxism","mascara","mask","masonry","mass","massage","mast","master","masterpiece","mastication","mastoid","mat","match","matchmaker","mate","material","maternity","math","mathematics","matrix","matter","mattock","mattress","max","maximum","maybe","mayonnaise","mayor","meadow","meal","mean","meander","meaning","means","meantime","measles","measure","measurement","meat","meatball","meatloaf","mecca","mechanic","mechanism","med","medal","media","median","medication","medicine","medium","meet","meeting","melatonin","melody","melon","member","membership","membrane","meme","memo","memorial","memory","men","menopause","menorah","mention","mentor","menu","merchandise","merchant","mercury","meridian","meringue","merit","mesenchyme","mess","message","messenger","messy","metabolite","metal","metallurgist","metaphor","meteor","meteorology","meter","methane","method","methodology","metric","metro","metronome","mezzanine","microlending","micronutrient","microphone","microwave","mid-course","midden","middle","middleman","midline","midnight","midwife","might","migrant","migration","mile","mileage","milepost","milestone","military","milk","milkshake","mill","millennium","millet","millimeter","million","millisecond","millstone","mime","mimosa","min","mincemeat","mind","mine","mineral","mineshaft","mini","mini-skirt","minibus","minimalism","minimum","mining","minion","minister","mink","minnow","minor","minor-league","minority","mint","minute","miracle","mirror","miscarriage","miscommunication","misfit","misnomer","misogyny","misplacement","misreading","misrepresentation","miss","missile","mission","missionary","mist","mistake","mister","misunderstand","miter","mitten","mix","mixer","mixture","moai","moat","mob","mobile","mobility","mobster","moccasins","mocha","mochi","mode","model","modeling","modem","modernist","modernity","modification","molar","molasses","molding","mole","molecule","mom","moment","monastery","monasticism","money","monger","monitor","monitoring","monk","monkey","monocle","monopoly","monotheism","monsoon","monster","month","monument","mood","moody","moon","moonlight","moonscape","moonshine","moose","mop","morale","morbid","morbidity","morning","moron","morphology","morsel","mortal","mortality","mortgage","mortise","mosque","mosquito","most","motel","moth","mother","mother-in-law","motion","motivation","motive","motor","motorboat","motorcar","motorcycle","mound","mountain","mouse","mouser","mousse","moustache","mouth","mouton","movement","mover","movie","mower","mozzarella","mud","muffin","mug","mukluk","mule","multimedia","murder","muscat","muscatel","muscle","musculature","museum","mushroom","music","music-box","music-making","musician","muskrat","mussel","mustache","mustard","mutation","mutt","mutton","mycoplasma","mystery","myth","mythology","nail","name","naming","nanoparticle","napkin","narrative","nasal","nation","nationality","native","naturalisation","nature","navigation","necessity","neck","necklace","necktie","nectar","nectarine","need","needle","neglect","negligee","negotiation","neighbor","neighborhood","neighbour","neighbourhood","neologism","neon","neonate","nephew","nerve","nest","nestling","nestmate","net","netball","netbook","netsuke","network","networking","neurobiologist","neuron","neuropathologist","neuropsychiatry","news","newsletter","newspaper","newsprint","newsstand","nexus","nibble","nicety","niche","nick","nickel","nickname","niece","night","nightclub","nightgown","nightingale","nightlife","nightlight","nightmare","ninja","nit","nitrogen","nobody","nod","node","noir","noise","nonbeliever","nonconformist","nondisclosure","nonsense","noodle","noodles","noon","norm","normal","normalisation","normalization","north","nose","notation","note","notebook","notepad","nothing","notice","notion","notoriety","nougat","noun","nourishment","novel","nucleotidase","nucleotide","nudge","nuke","number","numeracy","numeric","numismatist","nun","nurse","nursery","nursing","nurture","nut","nutmeg","nutrient","nutrition","nylon","nymph","oak","oar","oasis","oat","oatmeal","oats","obedience","obesity","obi","object","objection","objective","obligation","oboe","observation","observatory","obsession","obsidian","obstacle","occasion","occupation","occurrence","ocean","ocelot","octagon","octave","octavo","octet","octopus","odometer","odyssey","oeuvre","off-ramp","offence","offense","offer","offering","office","officer","official","offset","oil","okra","oldie","oleo","olive","omega","omelet","omission","omnivore","oncology","onion","online","onset","opening","opera","operating","operation","operator","ophthalmologist","opinion","opium","opossum","opponent","opportunist","opportunity","opposite","opposition","optimal","optimisation","optimist","optimization","option","orange","orangutan","orator","orchard","orchestra","orchid","order","ordinary","ordination","ore","oregano","organ","organisation","organising","organization","organizing","orient","orientation","origin","original","originality","ornament","osmosis","osprey","ostrich","other","otter","ottoman","ounce","outback","outcome","outfielder","outfit","outhouse","outlaw","outlay","outlet","outline","outlook","output","outrage","outrigger","outrun","outset","outside","oval","ovary","oven","overcharge","overclocking","overcoat","overexertion","overflight","overhead","overheard","overload","overnighter","overshoot","oversight","overview","overweight","owl","owner","ownership","ox","oxford","oxygen","oyster","ozone","pace","pacemaker","pack","package","packaging","packet","pad","paddle","paddock","pagan","page","pagoda","pail","pain","paint","painter","painting","paintwork","pair","pajamas","palace","palate","palm","pamphlet","pan","pancake","pancreas","panda","panel","panic","pannier","panpipe","pansy","panther","panties","pantologist","pantology","pantry","pants","pantsuit","panty","pantyhose","papa","papaya","paper","paperback","paperwork","parable","parachute","parade","paradise","paragraph","parallelogram","paramecium","paramedic","parameter","paranoia","parcel","parchment","pard","pardon","parent","parenthesis","parenting","park","parka","parking","parliament","parole","parrot","parser","parsley","parsnip","part","participant","participation","particle","particular","partner","partnership","partridge","party","pass","passage","passbook","passenger","passing","passion","passive","passport","password","past","pasta","paste","pastor","pastoralist","pastry","pasture","pat","patch","pate","patent","patentee","path","pathogenesis","pathology","pathway","patience","patient","patina","patio","patriarch","patrimony","patriot","patrol","patroller","patrolling","patron","pattern","patty","pattypan","pause","pavement","pavilion","paw","pawnshop","pay","payee","payment","payoff","pea","peace","peach","peacoat","peacock","peak","peanut","pear","pearl","peasant","pecan","pecker","pedal","peek","peen","peer","peer-to-peer","pegboard","pelican","pelt","pen","penalty","pence","pencil","pendant","pendulum","penguin","penicillin","peninsula","penis","pennant","penny","pension","pentagon","peony","people","pepper","pepperoni","percent","percentage","perception","perch","perennial","perfection","performance","perfume","period","periodical","peripheral","permafrost","permission","permit","perp","perpendicular","persimmon","person","personal","personality","personnel","perspective","pest","pet","petal","petition","petitioner","petticoat","pew","pharmacist","pharmacopoeia","phase","pheasant","phenomenon","phenotype","pheromone","philanthropy","philosopher","philosophy","phone","phosphate","photo","photodiode","photograph","photographer","photography","photoreceptor","phrase","phrasing","physical","physics","physiology","pianist","piano","piccolo","pick","pickax","pickaxe","picket","pickle","pickup","picnic","picture","picturesque","pie","piece","pier","piety","pig","pigeon","piglet","pigpen","pigsty","pike","pilaf","pile","pilgrim","pilgrimage","pill","pillar","pillbox","pillow","pilot","pimp","pimple","pin","pinafore","pince-nez","pine","pineapple","pinecone","ping","pink","pinkie","pinot","pinstripe","pint","pinto","pinworm","pioneer","pipe","pipeline","piracy","pirate","piss","pistol","pit","pita","pitch","pitcher","pitching","pith","pizza","place","placebo","placement","placode","plagiarism","plain","plaintiff","plan","plane","planet","planning","plant","plantation","planter","planula","plaster","plasterboard","plastic","plate","platelet","platform","platinum","platter","platypus","play","player","playground","playroom","playwright","plea","pleasure","pleat","pledge","plenty","plier","pliers","plight","plot","plough","plover","plow","plowman","plug","plugin","plum","plumber","plume","plunger","plywood","pneumonia","pocket","pocket-watch","pocketbook","pod","podcast","poem","poet","poetry","poignance","point","poison","poisoning","poker","polarisation","polarization","pole","polenta","police","policeman","policy","polish","politician","politics","poll","polliwog","pollutant","pollution","polo","polyester","polyp","pomegranate","pomelo","pompom","poncho","pond","pony","pool","poor","pop","popcorn","poppy","popsicle","popularity","population","populist","porcelain","porch","porcupine","pork","porpoise","port","porter","portfolio","porthole","portion","portrait","position","possession","possibility","possible","post","postage","postbox","poster","posterior","postfix","pot","potato","potential","pottery","potty","pouch","poultry","pound","pounding","poverty","powder","power","practice","practitioner","prairie","praise","pray","prayer","precedence","precedent","precipitation","precision","predecessor","preface","preference","prefix","pregnancy","prejudice","prelude","premeditation","premier","premise","premium","preoccupation","preparation","prescription","presence","present","presentation","preservation","preserves","presidency","president","press","pressroom","pressure","pressurisation","pressurization","prestige","presume","pretzel","prevalence","prevention","prey","price","pricing","pride","priest","priesthood","primary","primate","prince","princess","principal","principle","print","printer","printing","prior","priority","prison","prisoner","privacy","private","privilege","prize","prizefight","probability","probation","probe","problem","procedure","proceedings","process","processing","processor","proctor","procurement","produce","producer","product","production","productivity","profession","professional","professor","profile","profit","progenitor","program","programme","programming","progress","progression","prohibition","project","proliferation","promenade","promise","promotion","prompt","pronoun","pronunciation","proof","proof-reader","propaganda","propane","property","prophet","proponent","proportion","proposal","proposition","proprietor","prose","prosecution","prosecutor","prospect","prosperity","prostacyclin","prostanoid","prostrate","protection","protein","protest","protocol","providence","provider","province","provision","prow","proximal","proximity","prune","pruner","pseudocode","pseudoscience","psychiatrist","psychoanalyst","psychologist","psychology","ptarmigan","pub","public","publication","publicity","publisher","publishing","pudding","puddle","puffin","pug","puggle","pulley","pulse","puma","pump","pumpernickel","pumpkin","pumpkinseed","pun","punch","punctuation","punishment","pup","pupa","pupil","puppet","puppy","purchase","puritan","purity","purple","purpose","purr","purse","pursuit","push","pusher","put","puzzle","pyramid","pyridine","quadrant","quail","qualification","quality","quantity","quart","quarter","quartet","quartz","queen","query","quest","question","questioner","questionnaire","quiche","quicksand","quiet","quill","quilt","quince","quinoa","quit","quiver","quota","quotation","quote","rabbi","rabbit","raccoon","race","racer","racing","racism","racist","rack","radar","radiator","radio","radiosonde","radish","raffle","raft","rag","rage","raid","rail","railing","railroad","railway","raiment","rain","rainbow","raincoat","rainmaker","rainstorm","rainy","raise","raisin","rake","rally","ram","rambler","ramen","ramie","ranch","rancher","randomisation","randomization","range","ranger","rank","rap","rape","raspberry","rat","rate","ratepayer","rating","ratio","rationale","rations","raven","ravioli","rawhide","ray","rayon","razor","reach","reactant","reaction","read","reader","readiness","reading","real","reality","realization","realm","reamer","rear","reason","reasoning","rebel","rebellion","reboot","recall","recapitulation","receipt","receiver","reception","receptor","recess","recession","recipe","recipient","reciprocity","reclamation","recliner","recognition","recollection","recommendation","reconsideration","record","recorder","recording","recovery","recreation","recruit","rectangle","red","redesign","redhead","redirect","rediscovery","reduction","reef","refectory","reference","referendum","reflection","reform","refreshments","refrigerator","refuge","refund","refusal","refuse","regard","regime","region","regionalism","register","registration","registry","regret","regulation","regulator","rehospitalisation","rehospitalization","reindeer","reinscription","reject","relation","relationship","relative","relaxation","relay","release","reliability","relief","religion","relish","reluctance","remains","remark","reminder","remnant","remote","removal","renaissance","rent","reorganisation","reorganization","repair","reparation","repayment","repeat","replacement","replica","replication","reply","report","reporter","reporting","repository","representation","representative","reprocessing","republic","republican","reputation","request","requirement","resale","rescue","research","researcher","resemblance","reservation","reserve","reservoir","reset","residence","resident","residue","resist","resistance","resolution","resolve","resort","resource","respect","respite","response","responsibility","rest","restaurant","restoration","restriction","restroom","restructuring","result","resume","retailer","retention","rethinking","retina","retirement","retouching","retreat","retrospect","retrospective","retrospectivity","return","reunion","revascularisation","revascularization","reveal","revelation","revenant","revenge","revenue","reversal","reverse","review","revitalisation","revitalization","revival","revolution","revolver","reward","rhetoric","rheumatism","rhinoceros","rhubarb","rhyme","rhythm","rib","ribbon","rice","riddle","ride","rider","ridge","riding","rifle","right","rim","ring","ringworm","riot","rip","ripple","rise","riser","risk","rite","ritual","river","riverbed","rivulet","road","roadway","roar","roast","robe","robin","robot","robotics","rock","rocker","rocket","rocket-ship","rod","role","roll","roller","romaine","romance","roof","room","roommate","rooster","root","rope","rose","rosemary","roster","rostrum","rotation","round","roundabout","route","router","routine","row","rowboat","rowing","rubber","rubbish","rubric","ruby","ruckus","rudiment","ruffle","rug","rugby","ruin","rule","ruler","ruling","rum","rumor","run","runaway","runner","running","runway","rush","rust","rutabaga","rye","sabre","sac","sack","saddle","sadness","safari","safe","safeguard","safety","saffron","sage","sail","sailboat","sailing","sailor","saint","sake","salad","salami","salary","sale","salesman","salmon","salon","saloon","salsa","salt","salute","samovar","sampan","sample","samurai","sanction","sanctity","sanctuary","sand","sandal","sandbar","sandpaper","sandwich","sanity","sardine","sari","sarong","sash","satellite","satin","satire","satisfaction","sauce","saucer","sauerkraut","sausage","savage","savannah","saving","savings","savior","saviour","savory","saw","saxophone","scaffold","scale","scallion","scallops","scalp","scam","scanner","scarecrow","scarf","scarification","scenario","scene","scenery","scent","schedule","scheduling","schema","scheme","schizophrenic","schnitzel","scholar","scholarship","school","schoolhouse","schooner","science","scientist","scimitar","scissors","scooter","scope","score","scorn","scorpion","scotch","scout","scow","scrambled","scrap","scraper","scratch","screamer","screen","screening","screenwriting","screw","screw-up","screwdriver","scrim","scrip","script","scripture","scrutiny","sculpting","sculptural","sculpture","sea","seabass","seafood","seagull","seal","seaplane","search","seashore","seaside","season","seat","seaweed","second","secrecy","secret","secretariat","secretary","secretion","section","sectional","sector","security","sediment","seed","seeder","seeker","seep","segment","seizure","selection","self","self-confidence","self-control","self-esteem","seller","selling","semantics","semester","semicircle","semicolon","semiconductor","seminar","senate","senator","sender","senior","sense","sensibility","sensitive","sensitivity","sensor","sentence","sentencing","sentiment","sepal","separation","septicaemia","sequel","sequence","serial","series","sermon","serum","serval","servant","server","service","servitude","sesame","session","set","setback","setting","settlement","settler","severity","sewer","sex","sexuality","shack","shackle","shade","shadow","shadowbox","shakedown","shaker","shallot","shallows","shame","shampoo","shanty","shape","share","shareholder","shark","shaw","shawl","shear","shearling","sheath","shed","sheep","sheet","shelf","shell","shelter","sherbet","sherry","shield","shift","shin","shine","shingle","ship","shipper","shipping","shipyard","shirt","shirtdress","shit","shoat","shock","shoe","shoe-horn","shoehorn","shoelace","shoemaker","shoes","shoestring","shofar","shoot","shootdown","shop","shopper","shopping","shore","shoreline","short","shortage","shorts","shortwave","shot","shoulder","shout","shovel","show","show-stopper","shower","shred","shrimp","shrine","shutdown","sibling","sick","sickness","side","sideboard","sideburns","sidecar","sidestream","sidewalk","siding","siege","sigh","sight","sightseeing","sign","signal","signature","signet","significance","signify","signup","silence","silica","silicon","silk","silkworm","sill","silly","silo","silver","similarity","simple","simplicity","simplification","simvastatin","sin","singer","singing","singular","sink","sinuosity","sip","sir","sister","sister-in-law","sitar","site","situation","size","skate","skating","skean","skeleton","ski","skiing","skill","skin","skirt","skull","skullcap","skullduggery","skunk","sky","skylight","skyline","skyscraper","skywalk","slang","slapstick","slash","slate","slave","slavery","slaw","sled","sledge","sleep","sleepiness","sleeping","sleet","sleuth","slice","slide","slider","slime","slip","slipper","slippers","slope","slot","sloth","slump","smell","smelting","smile","smith","smock","smog","smoke","smoking","smolt","smuggling","snack","snail","snake","snakebite","snap","snarl","sneaker","sneakers","sneeze","sniffle","snob","snorer","snow","snowboarding","snowflake","snowman","snowmobiling","snowplow","snowstorm","snowsuit","snuck","snug","snuggle","soap","soccer","socialism","socialist","society","sociology","sock","socks","soda","sofa","softball","softdrink","softening","software","soil","soldier","sole","solicitation","solicitor","solidarity","solidity","soliloquy","solitaire","solution","solvency","sombrero","somebody","someone","someplace","somersault","something","somewhere","son","sonar","sonata","song","songbird","sonnet","soot","sophomore","soprano","sorbet","sorghum","sorrel","sorrow","sort","soul","soulmate","sound","soundness","soup","source","sourwood","sousaphone","south","southeast","souvenir","sovereignty","sow","soy","soybean","space","spacing","spade","spaghetti","span","spandex","spank","sparerib","spark","sparrow","spasm","spat","spatula","spawn","speaker","speakerphone","speaking","spear","spec","special","specialist","specialty","species","specification","spectacle","spectacles","spectrograph","spectrum","speculation","speech","speed","speedboat","spell","spelling","spelt","spending","sphere","sphynx","spice","spider","spiderling","spike","spill","spinach","spine","spiral","spirit","spiritual","spirituality","spit","spite","spleen","splendor","split","spokesman","spokeswoman","sponge","sponsor","sponsorship","spool","spoon","spork","sport","sportsman","spot","spotlight","spouse","sprag","sprat","spray","spread","spreadsheet","spree","spring","sprinkles","sprinter","sprout","spruce","spud","spume","spur","spy","spyglass","square","squash","squatter","squeegee","squid","squirrel","stab","stability","stable","stack","stacking","stadium","staff","stag","stage","stain","stair","staircase","stake","stalk","stall","stallion","stamen","stamina","stamp","stance","stand","standard","standardisation","standardization","standing","standoff","standpoint","star","starboard","start","starter","state","statement","statin","station","station-wagon","statistic","statistics","statue","status","statute","stay","steak","stealth","steam","steamroller","steel","steeple","stem","stench","stencil","step","step-aunt","step-brother","step-daughter","step-father","step-grandfather","step-grandmother","step-mother","step-sister","step-son","step-uncle","stepdaughter","stepmother","stepping-stone","stepson","stereo","stew","steward","stick","sticker","stiletto","still","stimulation","stimulus","sting","stinger","stir-fry","stitch","stitcher","stock","stock-in-trade","stockings","stole","stomach","stone","stonework","stool","stop","stopsign","stopwatch","storage","store","storey","storm","story","story-telling","storyboard","stot","stove","strait","strand","stranger","strap","strategy","straw","strawberry","strawman","stream","street","streetcar","strength","stress","stretch","strife","strike","string","strip","stripe","strobe","stroke","structure","strudel","struggle","stucco","stud","student","studio","study","stuff","stumbling","stump","stupidity","sturgeon","sty","style","styling","stylus","sub","subcomponent","subconscious","subcontractor","subexpression","subgroup","subject","submarine","submitter","subprime","subroutine","subscription","subsection","subset","subsidence","subsidiary","subsidy","substance","substitution","subtitle","suburb","subway","success","succotash","suck","sucker","suede","suet","suffocation","sugar","suggestion","suicide","suit","suitcase","suite","sulfur","sultan","sum","summary","summer","summit","sun","sunbeam","sunbonnet","sundae","sunday","sundial","sunflower","sunglasses","sunlamp","sunlight","sunrise","sunroom","sunset","sunshine","superiority","supermarket","supernatural","supervision","supervisor","supper","supplement","supplier","supply","support","supporter","suppression","supreme","surface","surfboard","surge","surgeon","surgery","surname","surplus","surprise","surround","surroundings","surrounds","survey","survival","survivor","sushi","suspect","suspenders","suspension","sustainment","sustenance","swallow","swamp","swan","swanling","swath","sweat","sweater","sweatshirt","sweatshop","sweatsuit","sweets","swell","swim","swimming","swimsuit","swine","swing","switch","switchboard","switching","swivel","sword","swordfight","swordfish","sycamore","symbol","symmetry","sympathy","symptom","syndicate","syndrome","synergy","synod","synonym","synthesis","syrup","system","t-shirt","tab","tabby","tabernacle","table","tablecloth","tablet","tabletop","tachometer","tackle","taco","tactics","tactile","tadpole","tag","tail","tailbud","tailor","tailspin","take-out","takeover","tale","talent","talk","talking","tam-o'-shanter","tamale","tambour","tambourine","tan","tandem","tangerine","tank","tank-top","tanker","tankful","tap","tape","tapioca","target","taro","tarragon","tart","task","tassel","taste","tatami","tattler","tattoo","tavern","tax","taxi","taxicab","taxpayer","tea","teacher","teaching","team","teammate","teapot","tear","tech","technician","technique","technologist","technology","tectonics","teen","teenager","teepee","telephone","telescreen","teletype","television","tell","teller","temp","temper","temperature","temple","tempo","temporariness","temporary","temptation","temptress","tenant","tendency","tender","tenement","tenet","tennis","tenor","tension","tensor","tent","tentacle","tenth","tepee","teriyaki","term","terminal","termination","terminology","termite","terrace","terracotta","terrapin","terrarium","territory","terror","terrorism","terrorist","test","testament","testimonial","testimony","testing","text","textbook","textual","texture","thanks","thaw","theater","theft","theism","theme","theology","theory","therapist","therapy","thermals","thermometer","thermostat","thesis","thickness","thief","thigh","thing","thinking","thirst","thistle","thong","thongs","thorn","thought","thousand","thread","threat","threshold","thrift","thrill","throat","throne","thrush","thrust","thug","thumb","thump","thunder","thunderbolt","thunderhead","thunderstorm","thyme","tiara","tic","tick","ticket","tide","tie","tiger","tights","tile","till","tilt","timbale","timber","time","timeline","timeout","timer","timetable","timing","timpani","tin","tinderbox","tinkle","tintype","tip","tire","tissue","titanium","title","toad","toast","toaster","tobacco","today","toe","toenail","toffee","tofu","tog","toga","toilet","tolerance","tolerant","toll","tom-tom","tomatillo","tomato","tomb","tomography","tomorrow","ton","tonality","tone","tongue","tonic","tonight","tool","toot","tooth","toothbrush","toothpaste","toothpick","top","top-hat","topic","topsail","toque","toreador","tornado","torso","torte","tortellini","tortilla","tortoise","tosser","total","tote","touch","tough-guy","tour","tourism","tourist","tournament","tow-truck","towel","tower","town","townhouse","township","toy","trace","trachoma","track","tracking","tracksuit","tract","tractor","trade","trader","trading","tradition","traditionalism","traffic","trafficker","tragedy","trail","trailer","trailpatrol","train","trainer","training","trait","tram","tramp","trance","transaction","transcript","transfer","transformation","transit","transition","translation","transmission","transom","transparency","transplantation","transport","transportation","trap","trapdoor","trapezium","trapezoid","trash","travel","traveler","tray","treasure","treasury","treat","treatment","treaty","tree","trek","trellis","tremor","trench","trend","triad","trial","triangle","tribe","tributary","trick","trigger","trigonometry","trillion","trim","trinket","trip","tripod","tritone","triumph","trolley","trombone","troop","trooper","trophy","trouble","trousers","trout","trove","trowel","truck","trumpet","trunk","trust","trustee","truth","try","tsunami","tub","tuba","tube","tuber","tug","tugboat","tuition","tulip","tumbler","tummy","tuna","tune","tune-up","tunic","tunnel","turban","turf","turkey","turmeric","turn","turning","turnip","turnover","turnstile","turret","turtle","tusk","tussle","tutu","tuxedo","tweet","tweezers","twig","twilight","twine","twins","twist","twister","twitter","type","typeface","typewriter","typhoon","ukulele","ultimatum","umbrella","unblinking","uncertainty","uncle","underclothes","underestimate","underground","underneath","underpants","underpass","undershirt","understanding","understatement","undertaker","underwear","underweight","underwire","underwriting","unemployment","unibody","uniform","uniformity","union","unique","unit","unity","universe","university","update","upgrade","uplift","upper","upstairs","upward","urge","urgency","urn","usage","use","user","usher","usual","utensil","utilisation","utility","utilization","vacation","vaccine","vacuum","vagrant","valance","valentine","validate","validity","valley","valuable","value","vampire","van","vanadyl","vane","vanilla","vanity","variability","variable","variant","variation","variety","vascular","vase","vault","vaulting","veal","vector","vegetable","vegetarian","vegetarianism","vegetation","vehicle","veil","vein","veldt","vellum","velocity","velodrome","velvet","vendor","veneer","vengeance","venison","venom","venti","venture","venue","veranda","verb","verdict","verification","vermicelli","vernacular","verse","version","vertigo","verve","vessel","vest","vestment","vet","veteran","veterinarian","veto","viability","vibe","vibraphone","vibration","vibrissae","vice","vicinity","victim","victory","video","view","viewer","vignette","villa","village","vine","vinegar","vineyard","vintage","vintner","vinyl","viola","violation","violence","violet","violin","virginal","virtue","virus","visa","viscose","vise","vision","visit","visitor","visor","vista","visual","vitality","vitamin","vitro","vivo","vixen","vodka","vogue","voice","void","vol","volatility","volcano","volleyball","volume","volunteer","volunteering","vomit","vote","voter","voting","voyage","vulture","wad","wafer","waffle","wage","wagon","waist","waistband","wait","waiter","waiting","waitress","waiver","wake","walk","walker","walking","walkway","wall","wallaby","wallet","walnut","walrus","wampum","wannabe","want","war","warden","wardrobe","warfare","warlock","warlord","warm-up","warming","warmth","warning","warrant","warren","warrior","wasabi","wash","washbasin","washcloth","washer","washtub","wasp","waste","wastebasket","wasting","watch","watcher","watchmaker","water","waterbed","watercress","waterfall","waterfront","watermelon","waterskiing","waterspout","waterwheel","wave","waveform","wax","way","weakness","wealth","weapon","wear","weasel","weather","web","webinar","webmail","webpage","website","wedding","wedge","weed","weeder","weedkiller","week","weekend","weekender","weight","weird","welcome","welfare","well","well-being","west","western","wet-bar","wetland","wetsuit","whack","whale","wharf","wheat","wheel","whelp","whey","whip","whirlpool","whirlwind","whisker","whiskey","whisper","whistle","white","whole","wholesale","wholesaler","whorl","wick","widget","widow","width","wife","wifi","wild","wildebeest","wilderness","wildlife","will","willingness","willow","win","wind","wind-chime","windage","window","windscreen","windshield","wine","winery","wing","wingman","wingtip","wink","winner","winter","wire","wiretap","wiring","wisdom","wiseguy","wish","wisteria","wit","witch","witch-hunt","withdrawal","witness","wok","wolf","woman","wombat","wonder","wont","wood","woodchuck","woodland","woodshed","woodwind","wool","woolens","word","wording","work","workbench","worker","workforce","workhorse","working","workout","workplace","workshop","world","worm","worry","worship","worshiper","worth","wound","wrap","wraparound","wrapper","wrapping","wreck","wrecker","wren","wrench","wrestler","wriggler","wrinkle","wrist","writer","writing","wrong","xylophone","yacht","yahoo","yak","yam","yang","yard","yarmulke","yarn","yawl","year","yeast","yellow","yellowjacket","yesterday","yew","yin","yoga","yogurt","yoke","yolk","young","youngster","yourself","youth","yoyo","yurt","zampone","zebra","zebrafish","zen","zephyr","zero","ziggurat","zinc","zipper","zither","zombie","zone","zoo","zoologist","zoology","zoot-suit","zucchini"]})),sG=c((()=>{qs=["a","abaft","aboard","about","above","absent","across","afore","after","against","along","alongside","amid","amidst","among","amongst","an","anenst","anti","apropos","apud","around","as","aside","astride","at","athwart","atop","barring","before","behind","below","beneath","beside","besides","between","beyond","but","by","circa","concerning","considering","despite","down","during","except","excepting","excluding","failing","following","for","forenenst","from","given","in","including","inside","into","lest","like","mid","midst","minus","modulo","near","next","notwithstanding","of","off","on","onto","opposite","out","outside","over","pace","past","per","plus","pro","qua","regarding","round","sans","save","since","than","the","through","throughout","till","times","to","toward","towards","under","underneath","unlike","until","unto","up","upon","versus","via","vice","with","within","without","worth"]})),lG=c((()=>{Qs=["abandon","abase","abate","abbreviate","abdicate","abduct","abet","abhor","abide","abjure","abnegate","abolish","abominate","abort","abound","abrade","abridge","abrogate","abscond","abseil","absent","absolve","absorb","abstain","abstract","abuse","abut","accede","accelerate","accent","accentuate","accept","access","accessorise","accessorize","acclaim","acclimate","acclimatise","acclimatize","accommodate","accompany","accomplish","accord","accost","account","accouter","accoutre","accredit","accrue","acculturate","accumulate","accuse","accustom","ace","ache","achieve","acidify","acknowledge","acquaint","acquiesce","acquire","acquit","act","action","activate","actualise","actualize","actuate","adapt","add","addle","address","adduce","adhere","adjoin","adjourn","adjudge","adjudicate","adjure","adjust","administer","admire","admit","admonish","adopt","adore","adorn","adsorb","adulterate","adumbrate","advance","advantage","advertise","advise","advocate","aerate","affect","affiliate","affirm","affix","afflict","afford","afforest","affront","age","agglomerate","aggravate","aggregate","agitate","agonise","agonize","agree","aid","ail","aim","air","airbrush","airdrop","airfreight","airlift","alarm","alert","alienate","alight","align","allay","allege","alleviate","allocate","allot","allow","alloy","allude","ally","alphabetise","alphabetize","alter","alternate","amalgamate","amass","amaze","amble","ambush","ameliorate","amend","amortise","amortize","amount","amplify","amputate","amuse","anaesthetise","anaesthetize","analyse","anchor","anesthetize","anger","angle","anglicise","anglicize","animate","anneal","annex","annihilate","annotate","announce","annoy","annul","anodise","anodize","anoint","anonymise","anonymize","answer","antagonise","antagonize","antedate","anthologise","anthologize","anticipate","ape","apologise","apologize","apostrophise","apostrophize","appal","appall","appeal","appear","appease","append","appertain","applaud","apply","appoint","apportion","appraise","appreciate","apprehend","apprentice","apprise","approach","appropriate","approve","approximate","aquaplane","arbitrate","arc","arch","archive","argue","arise","arm","arouse","arraign","arrange","array","arrest","arrive","arrogate","arse","art","articulate","ascend","ascertain","ascribe","ask","asphyxiate","aspirate","aspire","assail","assassinate","assault","assay","assemble","assent","assert","assess","assign","assimilate","assist","associate","assuage","assume","assure","asterisk","astonish","astound","atomise","atomize","atone","atrophy","attach","attack","attain","attempt","attend","attenuate","attest","attract","attribute","auction","audit","audition","augment","augur","authenticate","author","authorise","authorize","autograph","automate","autosave","autowind","avail","avenge","aver","average","avert","avoid","avow","await","awake","awaken","award","awe","ax","axe","baa","babble","baby","babysit","back","backcomb","backdate","backfill","backfire","backlight","backpack","backspace","backtrack","badger","baffle","bag","bail","bait","bake","balance","bale","ball","balloon","ballot","balls","bamboozle","ban","band","bandage","bandy","bang","bangs","banish","bank","bankroll","bankrupt","banter","baptise","baptize","bar","barbecue","bare","barf","bargain","barge","bark","barnstorm","barrack","barrel","barricade","barter","base","bash","bask","bastardise","bastardize","baste","bat","batch","bath","bathe","batten","batter","battle","baulk","bawl","bay","bayonet","be","beach","beam","bean","bear","beard","beat","beatbox","beatboxer","beatify","beautify","beaver","beckon","become","bed","bedazzle","bedeck","bedevil","beef","beep","beetle","befall","befit","befog","befriend","beg","beget","beggar","begin","begrudge","beguile","behave","behead","behold","behoove","behove","belabor","belabour","belay","belch","belie","believe","belittle","bellow","belly","bellyache","belong","belt","bemoan","bemuse","benchmark","bend","benefit","bequeath","berate","bereave","berth","beseech","beset","besiege","besmirch","bespatter","bespeak","best","bestir","bestow","bestride","bet","betake","betide","betoken","betray","better","bewail","beware","bewilder","bewitch","bias","bicker","bicycle","bid","bide","biff","bifurcate","big","bike","bilk","bill","billet","billow","bin","bind","binge","biodegrade","bird","bisect","bitch","bite","bitmap","bivouac","bivvy","blab","blabber","black","blackball","blacken","blacklist","blackmail","blag","blame","blanch","blank","blanket","blare","blaspheme","blast","blather","blaze","blazon","bleach","bleat","bleed","bleep","blemish","blench","blend","bless","blight","blind","blindfold","blindfolded","blindside","blink","bliss","blister","blitz","bloat","block","blockade","blog","blood","bloom","bloop","blossom","blot","blow","blub","blubber","bludge","bludgeon","bluff","blunder","blunt","blur","blurt","blush","bluster","board","boast","bob","bobble","bode","bodge","bog","boggle","boil","bolster","bolt","bomb","bombard","bond","bone","bonk","boo","boob","boogie","book","bookmark","boom","boomerang","boost","boot","bootleg","booze","bop","border","bore","born","borrow","boss","botch","bother","bottle","bottleful","bottom","bounce","bound","bow","bowdlerise","bowdlerize","bowl","bowlful","box","boycott","braai","brace","braces","bracket","brag","braid","brain","brainstorm","brainwash","braise","brake","branch","brand","brandish","brave","brawl","bray","brazen","breach","break","breakfast","breast","breastfeed","breathalyse","breathalyze","breathe","breed","breeze","brew","bribe","brick","bridge","bridle","brief","brighten","brim","bring","bristle","broach","broadcast","broaden","broadside","broil","broker","brood","brook","browbeat","brown","browse","bruise","bruit","brush","brutalise","brutalize","bubble","buck","bucket","bucketful","buckle","bud","buddy","budge","budget","buff","buffer","buffet","bug","bugger","build","bulge","bulk","bulldoze","bullshit","bully","bum","bumble","bump","bunch","bundle","bung","bungle","bunk","bunker","bunt","buoy","burble","burden","burgeon","burglarize","burgle","burn","burnish","burp","burrow","burst","bury","bus","bushwhack","busk","bust","bustle","busy","butcher","butt","butter","button","buttonhole","buttress","buy","buzz","buzzing","bypass","cable","cache","cackle","caddie","cadge","cage","cajole","cake","calcify","calculate","calibrate","call","calm","calve","camouflage","camp","campaign","can","canalise","canalize","cancel","cane","cannibalise","cannibalize","cannon","cannulate","canoe","canonise","canonize","canoodle","canst","cant","canter","canvass","cap","caper","capitalise","capitalize","capitulate","capsize","captain","caption","captivate","capture","caramelise","caramelize","carbonise","carbonize","carburise","carburize","card","care","careen","career","caress","caricature","carjack","carol","carom","carouse","carp","carpet","carpool","carry","cart","cartwheel","carve","cascade","case","cash","cashier","casserole","cast","castigate","castrate","catalog","catalogue","catalyse","catalyze","catapult","catch","categorise","categorize","cater","caterwaul","catnap","caucus","caulk","cause","cauterise","cauterize","caution","cave","cavil","cavort","caw","cc","cease","cede","celebrate","cement","censor","censure","centralise","centralize","centre","certificate","certify","chafe","chaff","chain","chair","chalk","challenge","champ","champion","chance","change","channel","chant","chaperon","chaperone","char","characterise","characterize","charbroil","charge","chargesheet","chargrill","charm","chart","charter","chase","chasten","chastise","chat","chatter","chauffeur","cheapen","cheat","cheater","check","checkmate","cheek","cheep","cheer","cherish","chew","chicken","chide","chill","chillax","chime","chink","chip","chirp","chisel","chivvy","chlorinate","choke","chomp","choose","chop","choreograph","chortle","chorus","christen","chromakey","chronicle","chuck","chuckle","chug","chunder","chunter","churn","cinch","circle","circulate","circumcise","circumnavigate","circumscribe","circumvent","cite","civilise","civilize","clack","claim","clam","clamber","clamor","clamour","clamp","clang","clank","clap","clarify","clash","clasp","class","classify","clatter","claw","clean","cleanse","clear","cleave","clench","clerk","click","climax","climb","clinch","cling","clink","clinking","clip","cloak","clobber","clock","clog","clone","clonk","close","closet","clot","clothe","cloud","clout","clown","club","cluck","clue","clump","clunk","cluster","clutch","clutter","coach","coagulate","coalesce","coarsen","coast","coat","coax","cobble","cock","cocoon","coddle","code","codify","coerce","coexist","cogitate","cohabit","cohere","coil","coin","coincide","collaborate","collapse","collar","collate","collect","collectivise","collectivize","collide","colligate","collocate","collude","colonise","colonize","colorize","colour","comb","combat","combine","combust","come","comfort","command","commandeer","commemorate","commence","commend","comment","commentate","commercialise","commercialize","commingle","commiserate","commission","commit","commune","communicate","commute","compact","compare","compartmentalise","compartmentalize","compel","compensate","compete","compile","complain","complement","complete","complicate","compliment","comply","comport","compose","compost","compound","comprehend","compress","comprise","compromise","compute","computerise","computerize","con","conceal","concede","conceive","concentrate","conceptualise","conceptualize","concern","concertina","conciliate","conclude","concoct","concrete","concur","concuss","condemn","condense","condescend","condition","condone","conduct","cone","confer","confess","confide","configure","confine","confirm","confiscate","conflate","conflict","conform","confound","confront","confuse","confute","congeal","congratulate","congregate","conjecture","conjoin","conjugate","conjure","conk","connect","connive","connote","conquer","conscientise","conscientize","conscript","consecrate","consent","conserve","consider","consign","consist","console","consolidate","consort","conspire","constitute","constrain","constrict","construct","construe","consult","consume","consummate","contact","contain","contaminate","contemplate","contend","content","contest","contextualise","contextualize","continue","contort","contract","contradict","contraindicate","contrast","contravene","contribute","contrive","control","controvert","convalesce","convene","converge","converse","convert","convey","convict","convince","convoke","convulse","coo","cook","cool","coop","cooperate","coordinate","cop","cope","coppice","copulate","copy","copyright","cordon","core","cork","corkscrew","corner","corral","correct","correlate","correspond","corrode","corrupt","coruscate","cosh","cosset","cost","cosy","cotton","couch","cough","counsel","count","countenance","counter","counteract","counterbalance","counterfeit","countermand","counterpoint","countersign","couple","courier","course","court","covenant","cover","covet","cow","cower","cox","cozy","crack","crackle","cradle","craft","cram","cramp","crane","crank","crap","crash","crate","crave","crawl","crayon","creak","creaking","cream","crease","create","credential","credit","creep","cremate","creolise","creolize","creosote","crest","crew","crib","crick","criminalise","criminalize","crimp","cringe","crinkle","cripple","crisp","criticise","criticize","critique","croak","crochet","crook","croon","crop","cross","crouch","crow","crowd","crown","crucify","cruise","crumble","crumple","crunch","crusade","crush","cry","crystallise","crystallize","cube","cuckold","cuddle","cudgel","cue","cuff","cull","culminate","cultivate","culture","cup","curate","curb","curdle","cure","curl","curry","curse","curtail","curtain","curtsy","curve","cushion","cuss","customise","customize","cut","cwtch","cycle","dab","dabble","dally","dam","damage","dammit","damn","damp","dampen","dance","dandle","dangle","dare","darken","darn","dart","dash","date","daub","daunt","dawdle","dawn","daydream","dazzle","deactivate","deaden","deadhead","deafen","deal","debar","debase","debate","debilitate","debit","debrief","debug","debunk","debut","decamp","decant","decapitate","decay","deceive","decelerate","decentralise","decentralize","decide","decimalise","decimalize","decimate","decipher","deck","declaim","declare","declassify","decline","declutter","decode","decommission","decompose","decompress","deconsecrate","deconstruct","decontaminate","decontrol","decorate","decouple","decoy","decrease","decree","decriminalise","decriminalize","decry","decrypt","dedicate","deduce","deduct","deejay","deem","deepen","deface","defame","default","defeat","defecate","defect","defend","defer","defile","define","deflate","deflect","deflower","defog","defoliate","deforest","deform","defrag","defragment","defraud","defray","defrock","defrost","defuse","defy","degenerate","deglaze","degrade","degrease","dehumanise","dehumanize","dehydrate","deify","deign","delay","delegate","delete","deliberate","delight","delimit","delineate","deliquesce","deliver","delouse","delude","deluge","delve","demand","demarcate","demean","demerge","demilitarise","demilitarize","demineralise","demineralize","demist","demo","demob","demobilise","demobilize","democratise","democratize","demolish","demonise","demonize","demonstrate","demoralise","demoralize","demote","demotivate","demur","demystify","denationalise","denationalize","denigrate","denitrify","denominate","denote","denounce","dent","denude","deny","depart","depend","depersonalise","depersonalize","depict","deplane","deplete","deplore","deploy","depopulate","deport","depose","deposit","deprave","deprecate","depreciate","depress","depressurise","depressurize","deprive","depute","deputise","deputize","deracinate","derail","dereference","deregulate","deride","derive","derogate","descale","descend","describe","descry","desecrate","desegregate","deselect","desensitise","desensitize","desert","deserve","design","designate","desire","desist","deskill","desolate","despair","despise","despoil","destabilise","destabilize","destock","destroy","detach","detail","detain","detect","deter","deteriorate","determine","detest","dethrone","detonate","detour","detoxify","detract","detrain","devalue","devastate","develop","deviate","devise","devoice","devolve","devote","devour","diagnose","dial","dice","dicker","dictate","diddle","die","diet","differ","differentiate","diffract","diffuse","dig","digest","digitalise","digitalize","digitise","digitize","dignify","digress","dilate","dilute","diluted","dim","diminish","dimple","dine","ding","dink","dip","diphthongise","diphthongize","direct","dirty","dis","disable","disabuse","disadvantage","disaffiliate","disafforest","disagree","disallow","disambiguate","disappear","disappoint","disapprove","disarm","disarrange","disassemble","disassociate","disavow","disband","disbar","disbelieve","disburse","discard","discern","discharge","discipline","disclaim","disclose","discolor","discolour","discomfit","discomfort","discompose","disconcert","disconnect","discontinue","discount","discourage","discourse","discover","discredit","discriminate","discuss","disdain","disembark","disembowel","disenfranchise","disengage","disentangle","disestablish","disfigure","disgorge","disgrace","disguise","disgust","dish","dishearten","dishonor","dishonour","disillusion","disincentivise","disincentivize","disinfect","disinherit","disinhibit","disintegrate","disinter","disinvest","dislike","dislocate","dislodge","dismantle","dismay","dismember","dismiss","dismount","disobey","disorient","disorientate","disown","disparage","dispatch","dispel","dispense","disperse","displace","display","displease","disport","dispose","dispossess","disprove","dispute","disqualify","disregard","disrespect","disrobe","disrupt","dissect","dissemble","disseminate","dissent","dissimulate","dissipate","dissociate","dissolve","dissuade","distance","distend","distil","distill","distinguish","distort","distract","distress","distribute","distrust","disturb","disunite","ditch","dither","dive","diverge","diversify","divert","divest","divide","divine","divorce","divulge","divvy","do","dob","dock","doctor","document","dodge","doff","dog","dole","doll","dollarise","dollarize","domesticate","dominate","don","donate","doodle","doom","doorstep","dop","dope","dose","doss","dot","dote","double","doubt","douche","douse","dovetail","down","downchange","downgrade","downlink","download","downplay","downshift","downsize","dowse","doze","draft","drag","dragoon","drain","dramatise","dramatize","drape","draught","draw","drawl","dread","dream","dredge","drench","dress","dribble","drift","drill","drink","drip","drive","drivel","drizzle","drone","drool","droop","drop","drown","drowse","drug","drum","dry","dub","duck","duckie","ducks","duel","duff","dull","dumb","dumbfound","dummy","dump","dunk","dunt","dupe","duplicate","dust","dwarf","dwell","dwindle","dye","dynamite","earmark","earn","earth","ease","eat","eavesdrop","ebb","echo","eclipse","economise","economize","eddy","edge","edify","edit","editorialise","editorialize","educate","eff","efface","effect","effectuate","egg","ejaculate","eject","eke","elaborate","elapse","elbow","elect","electrify","electrocute","electroplate","elevate","elicit","elide","eliminate","elongate","elope","elucidate","elude","email","emanate","emancipate","emasculate","embalm","embargo","embark","embarrass","embed","embellish","embezzle","embitter","emblazon","embody","embolden","emboss","embrace","embroider","embroil","emcee","emend","emerge","emigrate","emit","emote","empathise","empathize","emphasise","emphasize","employ","empower","empty","emulate","emulsify","enable","enact","encamp","encapsulate","encase","encash","enchant","encircle","enclose","encode","encompass","encounter","encourage","encroach","encrypt","encumber","end","endanger","endear","endeavor","endeavour","endorse","endow","endure","energise","energize","enervate","enfeeble","enfold","enforce","enfranchise","engage","engender","engineer","engorge","engrave","engross","engulf","enhance","enjoin","enjoy","enlarge","enlighten","enlist","enliven","enmesh","ennoble","enquire","enrage","enrapture","enrich","enrol","enroll","ensconce","enshrine","enshroud","enslave","ensnare","ensue","ensure","entail","entangle","enter","entertain","enthral","enthrall","enthrone","enthuse","entice","entitle","entomb","entrance","entrap","entreat","entrench","entrust","entwine","enumerate","enunciate","envelop","envisage","envision","envy","epitomise","epitomize","equal","equalise","equalize","equate","equip","equivocate","eradicate","erase","erect","erode","err","erupt","escalate","escape","eschew","escort","espouse","espy","essay","establish","esteem","estimate","etch","eulogise","eulogize","euthanise","euthanize","evacuate","evade","evaluate","evangelise","evangelize","evaporate","even","eventuate","evict","evidence","evince","eviscerate","evoke","evolve","exacerbate","exact","exaggerate","exalt","examine","exasperate","excavate","exceed","excel","except","excerpt","exchange","excise","excite","exclaim","exclude","excommunicate","excoriate","excrete","exculpate","excuse","execute","exemplify","exempt","exercise","exert","exeunt","exfoliate","exhale","exhaust","exhibit","exhilarate","exhort","exhume","exile","exist","exit","exonerate","exorcise","exorcize","expand","expatiate","expect","expectorate","expedite","expel","expend","experience","experiment","expiate","expire","explain","explicate","explode","exploit","explore","export","expose","expostulate","expound","express","expropriate","expunge","expurgate","extemporise","extemporize","extend","exterminate","externalise","externalize","extinguish","extirpate","extol","extort","extract","extradite","extrapolate","extricate","extrude","exude","exult","eye","eyeball","eyeglasses","fabricate","face","facilitate","factor","factorise","factorize","fade","faff","fail","faint","fake","fall","falsify","falter","familiarise","familiarize","fan","fancy","fantasise","fantasize","fare","farewell","farm","farrow","fart","fascinate","fashion","fast","fasten","father","fathom","fatten","fault","favor","favour","fawn","fax","faze","fear","feast","feather","feature","federate","feed","feel","feign","feint","fell","fellate","feminise","feminize","fence","fend","ferment","ferret","ferry","fertilise","fertilize","fess","fester","festoon","fetch","fete","fetishise","fetishize","fetter","feud","fib","fictionalise","fictionalize","fiddle","fidget","field","fight","figure","filch","file","filibuster","fill","fillet","film","filter","finagle","finalise","finalize","finance","find","fine","finesse","finger","fingerprint","finish","fire","firebomb","firm","fish","fishtail","fit","fix","fizz","fizzle","flag","flagellate","flail","flake","flame","flank","flap","flare","flash","flat","flatline","flatten","flatter","flaunt","flavour","flay","fleck","flee","fleece","flesh","flex","flick","flicker","flight","flinch","fling","flip","flirt","flit","float","flock","flog","flood","floodlight","floor","flop","floss","flounce","flounder","flour","flourish","flout","flow","flower","flub","fluctuate","fluff","flummox","flunk","flush","fluster","flutter","fly","foal","foam","fob","focalise","focalize","focus","fog","foil","foist","fold","follow","foment","fondle","fool","foot","forage","forbear","forbid","force","ford","forearm","forecast","foreclose","foregather","foreground","foresee","foreshadow","foreshorten","forestall","foretell","forewarn","forfeit","forfend","forgather","forge","forget","forgive","forgo","fork","form","formalise","formalize","format","formulate","fornicate","forsake","forswear","fortify","forward","forwards","fossick","fossilise","fossilize","foster","foul","found","founder","fox","fracture","fragment","frame","franchise","frank","fraternise","fraternize","fray","freak","free","freelance","freeload","freestyle","freewheel","freeze","freight","frequent","freshen","fret","frighten","fringe","frisk","fritter","frizz","frizzle","frogmarch","frolic","front","frost","froth","frown","fruit","frustrate","fry","fuck","fudge","fuel","fulfil","fulfill","fulminate","fumble","fume","fumigate","function","fund","funk","funnel","furl","furlough","furnish","furrow","further","fuse","fuss","gab","gabble","gad","gag","gain","gainsay","gall","gallivant","gallop","galumph","galvanise","galvanize","gamble","gambol","gang","gape","garage","garden","gargle","garland","garner","garnish","garrison","garrote","garrotte","gas","gash","gasp","gatecrash","gather","gauge","gawk","gawp","gaze","gazump","gazunder","gear","gee","gel","geld","gen","generalise","generalize","generate","gentrify","genuflect","germinate","gerrymander","gestate","gesticulate","gesture","get","ghost","ghostwrite","gibber","gift","giggle","gild","ginger","gird","girdle","give","gladden","glamorise","glamorize","glance","glare","glass","glaze","gleam","glean","glide","glimmer","glimmering","glimpse","glint","glisten","glister","glitter","gloat","globalise","globalize","glom","glorify","glory","gloss","glow","glower","glue","glug","glut","gnash","gnaw","go","goad","gob","gobble","goggle","goldbrick","goof","google","goose","gore","gorge","gossip","gouge","govern","grab","grace","grade","graduate","graft","grant","grapple","grasp","grass","grate","gratify","gravitate","graze","grease","green","greet","grey","grieve","grill","grimace","grin","grind","grip","gripe","grit","grizzle","groan","grok","groom","grope","gross","grouch","ground","group","grouse","grout","grovel","grow","growl","grub","grudge","grumble","grunt","guarantee","guard","guess","guest","guffaw","guide","guillotine","guilt","gulp","gum","gun","gurgle","gurn","gush","gussy","gust","gut","gutter","guzzle","gybe","gyp","gyrate","hack","haemorrhage","haggle","hail","hallmark","halloo","hallucinate","halt","halve","ham","hammer","hamper","hamstring","hand","handcuff","handicap","handle","hang","hanker","happen","harangue","harass","harbor","harbour","harden","hare","hark","harm","harmonise","harmonize","harness","harp","harpoon","harrow","harrumph","harry","harvest","hash","hassle","hasten","hatch","hate","haul","haunt","have","haw","hawk","hazard","haze","head","headbutt","headhunt","headline","heal","heap","hear","hearken","hearten","heat","heave","heckle","hector","hedge","heed","heel","heft","heighten","heist","help","hem","hemorrhage","herald","herd","hesitate","hew","hex","hibernate","hiccough","hiccup","hide","hie","highball","highlight","hightail","hijack","hike","hinder","hinge","hint","hire","hiss","hit","hitch","hitchhike","hive","hoard","hoax","hobble","hobnob","hock","hoe","hog","hoick","hoist","hold","hole","holiday","holler","hollow","holster","home","homeschool","homestead","hone","honeymoon","honk","honour","hoodwink","hoof","hook","hoon","hoot","hoover","hop","hope","horn","horrify","horse","horsewhip","hose","hosepipe","hospitalise","hospitalize","host","hot","hotfoot","hound","house","hover","howl","huddle","huff","hug","hull","hum","humanise","humanize","humble","humiliate","humour","hump","hunch","hunger","hunker","hunt","hurdle","hurl","hurry","hurt","hurtle","husband","hush","husk","hustle","hybridise","hybridize","hydrate","hydroplane","hype","hyperventilate","hyphenate","hypnotise","hypnotize","hypothesise","hypothesize","ice","iconify","idealise","idealize","ideate","identify","idle","idolise","idolize","ignite","ignore","illuminate","illumine","illustrate","imagine","imagineer","imbibe","imbue","imitate","immerse","immigrate","immobilise","immobilize","immolate","immortalise","immortalize","immunise","immunize","immure","impact","impair","impale","impanel","impart","impeach","impede","impel","imperil","impersonate","impinge","implant","implement","implicate","implode","implore","imply","import","importune","impose","impound","impoverish","impregnate","impress","imprint","imprison","improve","improvise","impugn","inactivate","inaugurate","incapacitate","incarcerate","incarnate","incense","incentivise","incentivize","inch","incinerate","incise","incite","incline","include","incommode","inconvenience","incorporate","increase","incriminate","incubate","inculcate","incur","indemnify","indent","index","indicate","indict","individualise","individualize","individuate","indoctrinate","induce","induct","indulge","industrialise","industrialize","infantilise","infantilize","infect","infer","infest","infill","infiltrate","inflame","inflate","inflect","inflict","influence","inform","infringe","infuriate","infuse","ingest","ingratiate","inhabit","inhale","inhere","inherit","inhibit","initial","initialise","initialize","initiate","inject","injure","ink","inlay","innovate","inoculate","input","inscribe","inseminate","insert","inset","insinuate","insist","inspect","inspire","install","instance","instigate","instil","instill","institute","institutionalise","institutionalize","instruct","insulate","insult","insure","integrate","intend","intensify","inter","interact","interbreed","intercede","intercept","interchange","interconnect","intercut","interest","interface","interfere","interject","interlace","interleave","interlink","interlock","intermarry","intermesh","intermingle","intermix","intern","internalise","internalize","internationalise","internationalize","interpenetrate","interpolate","interpose","interpret","interrelate","interrogate","interrupt","intersect","intersperse","intertwine","intervene","interview","interweave","interwork","intimate","intimidate","intone","intoxicate","intrigue","introduce","intrude","intubate","intuit","inundate","inure","invade","invalid","invalidate","inveigh","inveigle","invent","inventory","invert","invest","investigate","invigilate","invigorate","invite","invoice","invoke","involve","ionise","ionize","irk","iron","irradiate","irrigate","irritate","irrupt","isolate","issue","italicise","italicize","itch","itemise","itemize","iterate","jab","jabber","jack","jackknife","jail","jam","jangle","jar","jaw","jaywalk","jazz","jeer","jell","jeopardise","jeopardize","jerk","jest","jet","jettison","jib","jibe","jig","jiggle","jilt","jingle","jink","jinx","jive","jockey","jog","joggle","join","joint","joke","jol","jolly","jolt","josh","jostle","jot","journey","joust","judder","judge","juggle","juice","jumble","jump","junk","justify","jut","juxtapose","keel","keelhaul","keen","keep","ken","key","keyboard","kibitz","kick","kid","kidnap","kill","kindle","kink","kip","kiss","kit","kite","klap","kludge","knacker","knead","knee","kneecap","kneel","knife","knight","knit","knock","knot","know","knuckle","kowtow","kvetch","label","labour","lace","lacerate","lack","lacquer","lactate","ladder","ladle","lag","lam","lamb","lambast","lambaste","lament","lamp","lampoon","lance","land","lands","landscape","languish","lap","lapse","lard","large","lark","lash","lasso","last","latch","lather","laud","laugh","launch","launder","lavish","lay","layer","laze","leach","lead","leaf","leaflet","leak","lean","leap","leapfrog","learn","lease","leash","leave","leaven","lech","lecture","leer","leg","legalise","legalize","legislate","legitimise","legitimize","lend","lengthen","lessen","let","letter","letterbox","level","lever","leverage","levitate","levy","liaise","libel","liberalise","liberalize","liberate","license","lick","lie","lift","ligate","light","lighten","like","liken","limber","lime","limit","limp","line","linger","link","lionise","lionize","liquefy","liquidate","liquidise","liquidize","lisp","list","listen","litigate","litter","live","liven","load","loads","loaf","loan","loathe","lob","lobby","lobotomise","lobotomize","localise","localize","locate","lock","lodge","loft","log","loiter","loll","lollop","long","look","looks","loom","loop","loose","loosen","loot","lop","lope","lord","lose","lounge","lour","louse","love","low","lowball","lower","lubricate","luck","lug","lull","lumber","lump","lunch","lunge","lurch","lure","lurk","lust","luxuriate","lynch","macerate","machine","madden","magic","magnetise","magnetize","magnify","mail","maim","mainline","mainstream","maintain","major","make","malfunction","malign","malinger","maltreat","man","manacle","manage","mandate","mangle","manhandle","manicure","manifest","manipulate","manoeuvre","mantle","manufacture","manure","map","mar","march","marginalise","marginalize","marinate","mark","market","maroon","marry","marshal","martyr","marvel","masculinise","masculinize","mash","mask","masquerade","mass","massacre","massage","master","mastermind","masticate","masturbate","match","mate","materialise","materialize","matriculate","matter","mature","maul","maunder","max","maximise","maximize","mean","meander","measure","mechanise","mechanize","medal","meddle","mediate","medicate","meditate","meet","meld","mellow","melt","memorialise","memorialize","memorise","memorize","menace","mend","menstruate","mention","meow","mercerise","mercerize","merchandise","merge","merit","mesh","mesmerise","mesmerize","mess","message","metabolise","metabolize","metamorphose","mete","meter","methinks","mew","mewl","miaow","microblog","microchip","micromanage","microwave","micturate","migrate","militarise","militarize","militate","milk","mill","mime","mimic","mince","mind","mine","mingle","miniaturise","miniaturize","minimise","minimize","minister","minor","mint","minute","mirror","misapply","misappropriate","misbehave","miscalculate","miscarry","miscast","misconceive","misconstrue","miscount","misdiagnose","misdial","misdirect","misfile","misfire","misgovern","mishandle","mishear","mishit","misinform","misinterpret","misjudge","miskey","mislay","mislead","mismanage","mismatch","misname","misplace","misplay","mispronounce","misquote","misread","misreport","misrepresent","miss","mission","misspell","misspend","mist","mistake","mistime","mistreat","mistrust","misunderstand","misuse","mitigate","mitre","mix","moan","mob","mobilise","mobilize","mock","mod","model","moderate","modernise","modernize","modify","modulate","moisten","moisturise","moisturize","mold","molder","molest","mollify","mollycoddle","molt","monitor","monopolise","monopolize","moo","mooch","moon","moonlight","moonwalk","moor","moot","mop","mope","moralise","moralize","morph","mortar","mortgage","mortify","mosey","mosh","mothball","mother","motion","motivate","motor","mould","moulder","moult","mount","mourn","mouse","mouth","move","movies","mow","muck","muddle","muddy","muff","muffle","mug","mulch","mull","multicast","multiply","multitask","mumble","mumbling","mummify","munch","murder","murmur","murmuring","murmurings","muscle","muse","mushroom","muss","muster","mutate","mute","mutilate","mutiny","mutter","muzzle","mystify","nab","nag","nail","name","namecheck","nap","narrate","narrow","narrowcast","nasalise","nasalize","nationalise","nationalize","natter","naturalise","naturalize","nauseate","navigate","near","nearer","nearest","neaten","necessitate","neck","necklace","need","needle","negate","negative","neglect","negotiate","neigh","nerve","nest","nestle","net","nettle","network","neuter","neutralise","neutralize","nibble","nick","nickname","niggle","nip","nitrify","nix","nobble","nod","nominalize","nominate","norm","normalise","normalize","nose","nosedive","nosh","notarise","notarize","notch","note","notice","notify","nourish","nudge","nuke","nullify","numb","number","nurse","nurture","nut","nuzzle","obey","obfuscate","object","objectify","oblige","obliterate","obscure","observe","obsess","obstruct","obtain","obtrude","obviate","occasion","occlude","occupy","occur","off","offend","offer","officiate","offload","offset","offshore","ogle","oil","okay","omit","ooze","open","operate","opine","oppose","oppress","opt","optimise","optimize","option","orbit","orchestrate","ordain","order","organise","organize","orient","orientate","originate","ornament","orphan","oscillate","ossify","ostracise","ostracize","oust","out","outbid","outclass","outdistance","outdo","outface","outfit","outflank","outfox","outgrow","outgun","outlast","outlaw","outline","outlive","outmaneuver","outmanoeuvre","outnumber","outpace","outperform","outplay","outpoint","output","outrage","outrank","outrun","outsell","outshine","outsmart","outsource","outstay","outstrip","outvote","outweigh","outwit","overachieve","overact","overawe","overbalance","overbook","overburden","overcharge","overcome","overcompensate","overcook","overdevelop","overdo","overdose","overdraw","overdub","overeat","overemphasize","overestimate","overexpose","overextend","overfeed","overflow","overfly","overgeneralise","overgeneralize","overgraze","overhang","overhaul","overhear","overheat","overindulge","overlap","overlay","overlie","overload","overlook","overpay","overplay","overpower","overprint","overproduce","overrate","overreach","overreact","override","overrule","overrun","oversee","oversell","overshadow","overshoot","oversimplify","oversleep","overspend","overstate","overstay","overstep","overstock","overstretch","overtake","overtax","overthrow","overtrain","overturn","overuse","overvalue","overwhelm","overwinter","overwork","overwrite","ovulate","owe","own","oxidise","oxidize","oxygenate","pace","pacify","pack","package","packetise","packetize","pad","paddle","padlock","page","paginate","pailful","pain","paint","pair","pal","palatalise","palatalize","pale","pall","palliate","palm","palpate","palpitate","pamper","pan","pander","panel","panhandle","panic","pant","paper","parachute","parade","parallel","paralyse","paralyze","paraphrase","parboil","parcel","parch","pardon","pare","park","parlay","parley","parody","parole","parrot","parry","parse","part","partake","participate","particularise","particularize","partition","partner","party","pass","passivise","passivize","paste","pasteurise","pasteurize","pasture","pat","patch","patent","patrol","patronise","patronize","patter","pattern","pause","pave","paw","pawn","pay","peak","peal","peck","pedal","peddle","pedestrianise","pedestrianize","pee","peek","peel","peep","peer","peg","pelt","pen","penalise","penalize","pencil","penetrate","pension","people","pep","pepper","perambulate","perceive","perch","percolate","perfect","perforate","perform","perfume","perish","perjure","perk","perm","permeate","permit","perpetrate","perpetuate","perplex","persecute","persevere","persist","personalise","personalize","personify","perspire","persuade","pertain","perturb","peruse","pervade","pervert","pester","pet","peter","petition","petrify","phase","philosophise","philosophize","phone","photocopy","photograph","photoshop","photosynthesise","photosynthesize","phrase","pick","picket","pickle","picnic","picture","picturise","picturize","piddle","piece","pierce","pig","pigeonhole","piggyback","pike","pile","pilfer","pill","pillage","pillory","pillow","pilot","pimp","pin","pinch","pine","ping","pinion","pink","pinpoint","pioneer","pip","pipe","pique","pirate","pirouette","piss","pit","pitch","pity","pivot","pixelate","pixellate","placate","place","plagiarise","plagiarize","plague","plait","plan","plane","plant","plaster","plasticise","plasticize","plate","plateau","play","plead","please","pledge","plight","plod","plonk","plop","plot","plough","pluck","plug","plumb","plummet","plump","plunder","plunge","plunk","pluralise","pluralize","ply","poach","pocket","point","poise","poison","poke","polarise","polarize","pole","poleax","poleaxe","police","polish","politicise","politicize","poll","pollard","pollinate","pollute","polymerise","polymerize","ponce","ponder","pong","pontificate","pony","poo","pooh","pool","poop","pootle","pop","popularise","popularize","populate","pore","port","portend","portion","portray","pose","posit","position","possess","posset","post","postmark","postpone","postulate","posture","pot","potter","pounce","pound","pour","pout","powder","power","practice","practise","praise","praises","prance","prang","prate","prattle","pray","preach","precede","precipitate","precis","preclude","predate","predecease","predetermine","predicate","predict","predispose","predominate","preen","preface","prefer","prefigure","prefix","preheat","prejudge","prejudice","preload","premaster","premiere","preoccupy","prep","prepare","prepone","preregister","presage","prescind","prescribe","preselect","presell","present","preserve","preset","preside","press","pressure","pressurise","pressurize","presume","presuppose","pretend","pretest","prettify","prevail","prevaricate","prevent","preview","prey","price","prick","prickle","pride","prime","primp","print","prioritise","prioritize","prise","privatise","privatize","privilege","prize","probate","probe","proceed","process","proclaim","procrastinate","procreate","proctor","procure","prod","produce","profane","profess","professionalise","professionalize","proffer","profile","profit","program","programme","progress","prohibit","project","proliferate","prolong","promenade","promise","promote","prompt","promulgate","pronounce","proof","proofread","prop","propagandise","propagandize","propagate","propel","prophesy","propitiate","propose","proposition","propound","proscribe","prosecute","proselytise","proselytize","prospect","prosper","prostitute","prostrate","protect","protest","protrude","prove","provide","provision","provoke","prowl","prune","pry","psych","psychoanalyse","publicise","publicize","publish","pucker","puff","puke","pull","pullulate","pulp","pulsate","pulse","pulverise","pulverize","pummel","pump","pun","punch","punctuate","puncture","punish","punt","pupate","purchase","purge","purify","purl","purloin","purport","purr","purse","pursue","purvey","push","pussyfoot","put","putrefy","putt","putter","puzzle","quack","quadruple","quaff","quail","quake","qualify","quantify","quarantine","quarrel","quarry","quarter","quarterback","quash","quaver","queer","quell","quench","query","quest","question","queue","quibble","quicken","quiet","quieten","quintuple","quip","quirk","quit","quiver","quiz","quote","quoth","rabbit","race","rack","radiate","radicalise","radicalize","radio","raffle","rag","rage","raid","rail","railroad","rain","raise","rake","rally","ram","ramble","ramp","rampage","randomise","randomize","range","rank","rankle","ransack","ransom","rant","rap","rape","rappel","rasp","rasterise","rasterize","rat","ratchet","rate","ratify","ration","rationalise","rationalize","rattle","ravage","rave","ravel","ravish","raze","razz","reach","reacquaint","react","reactivate","read","readdress","readies","readjust","readmit","ready","reaffirm","realign","realise","realize","reallocate","ream","reanimate","reap","reappear","reapply","reappoint","reappraise","rear","rearm","rearrange","reason","reassemble","reassert","reassess","reassign","reassure","reawaken","rebel","reboot","reborn","rebound","rebrand","rebuff","rebuild","rebuke","rebut","recall","recant","recap","recapitulate","recapture","recast","recede","receive","recess","recharge","reciprocate","recite","reckon","reclaim","reclassify","recline","recognise","recognize","recoil","recollect","recommence","recommend","recompense","reconcile","recondition","reconfigure","reconfirm","reconnect","reconnoitre","reconquer","reconsider","reconstitute","reconstruct","reconvene","record","recount","recoup","recover","recreate","recrudesce","recruit","rectify","recuperate","recur","recycle","redact","redden","redecorate","redeem","redefine","redeploy","redesign","redevelop","redial","redirect","rediscover","redistribute","redistrict","redo","redouble","redound","redraft","redraw","redress","reduce","reduplicate","reef","reek","reel","ref","refer","referee","reference","refill","refinance","refine","refit","reflate","reflect","refloat","refocus","reform","reformat","reformulate","refract","refrain","refresh","refrigerate","refuel","refund","refurbish","refuse","refute","regain","regale","regard","regenerate","register","regress","regret","regroup","regularise","regularize","regulate","regurgitate","rehabilitate","rehash","rehear","rehearse","reheat","rehome","rehouse","reign","reignite","reimburse","rein","reincarnate","reinforce","reinstate","reinterpret","reintroduce","reinvent","reinvest","reinvigorate","reissue","reiterate","reject","rejig","rejigger","rejoice","rejoin","rejuvenate","rekindle","relapse","relate","relaunch","relax","relay","release","relegate","relent","relieve","relinquish","relish","relive","reload","relocate","rely","remain","remainder","remake","remand","remap","remark","remarry","remaster","remediate","remedy","remember","remind","reminisce","remit","remix","remodel","remonstrate","remortgage","remould","remount","remove","remunerate","rename","rend","render","rendezvous","renege","renew","renounce","renovate","rent","reoccur","reoffend","reopen","reorder","reorganise","reorganize","reorient","repackage","repair","repatriate","repay","repeal","repeat","repel","repent","rephrase","replace","replay","replenish","replicate","reply","report","repose","repossess","represent","repress","reprieve","reprimand","reprint","reproach","reprocess","reproduce","reprove","repudiate","repulse","repurpose","request","require","requisition","requite","rerun","reschedule","rescind","rescue","research","researches","resect","resell","resemble","resent","reserve","reset","resettle","reshape","reshuffle","reside","resign","resist","resit","resize","reskill","resolve","resonate","resort","resound","resource","respect","respire","respond","respray","rest","restart","restate","restock","restore","restrain","restrict","restring","restructure","result","resume","resupply","resurface","resurrect","resuscitate","retail","retain","retake","retaliate","retard","retch","retell","retest","rethink","retire","retool","retort","retouch","retrace","retract","retrain","retreat","retrench","retrieve","retrofit","retry","return","reunify","reunite","reuse","rev","revalue","revamp","reveal","revel","revenge","reverberate","revere","reverse","revert","review","revile","revise","revisit","revitalise","revitalize","revive","revivify","revoke","revolt","revolutionise","revolutionize","revolve","reward","rewind","rewire","reword","rework","rewrite","rhapsodise","rhapsodize","rhyme","rib","rick","ricochet","rid","riddle","ride","ridge","ridicule","riffle","rifle","rig","right","rightsize","rile","rim","ring","rinse","riot","rip","ripen","riposte","ripple","rise","risk","ritualise","ritualize","rival","rivet","roam","roar","roast","rob","robe","rock","rocket","roger","roll","romance","romanticise","romanticize","romp","roof","room","roost","root","rope","rosin","roster","rot","rotate","rouge","rough","roughen","roughhouse","round","rouse","roust","rout","route","rove","row","rub","rubberneck","rubbish","ruck","rue","ruffle","ruin","ruins","rule","rumble","ruminate","rummage","rumor","rumour","rumple","run","rupture","rush","rust","rustle","sabotage","sack","sacrifice","sadden","saddle","safeguard","sag","sail","salaam","salivate","sally","salt","salute","salvage","salve","sample","sanctify","sanction","sand","sandbag","sandblast","sandpaper","sandwich","sanitise","sanitize","sap","sashay","sass","sate","satiate","satirise","satirize","satisfy","saturate","saunter","savage","save","savor","savour","saw","say","scald","scale","scallop","scalp","scamper","scan","scandalise","scandalize","scapegoat","scar","scare","scarf","scarify","scarper","scatter","scattering","scavenge","scent","schedule","schematise","schematize","scheme","schlep","schlepp","schmooze","school","schtup","schuss","scoff","scold","scoop","scoot","scope","scorch","score","scorn","scotch","scour","scourge","scout","scowl","scrabble","scram","scramble","scrap","scrape","scratch","scrawl","scream","screech","screen","screw","scribble","scrimp","script","scroll","scrounge","scrub","scrummage","scrunch","scruple","scrutinise","scrutinize","scud","scuff","scuffle","scull","sculpt","scupper","scurry","scuttle","scythe","seal","sealift","sear","search","season","seat","secede","seclude","second","secrete","section","secularise","secularize","secure","sedate","seduce","see","seed","seek","seep","seethe","segment","segregate","segue","seize","select","sell","sellotape","semaphore","send","sensationalise","sensationalize","sense","sensitise","sensitize","sentence","sentimentalise","sentimentalize","separate","sequence","sequester","sequestrate","serenade","serialise","serialize","sermonise","sermonize","serve","service","set","settle","sever","sew","sex","sexualise","sexualize","shack","shackle","shade","shadow","shaft","shag","shake","shalt","sham","shamble","shame","shampoo","shanghai","shape","share","sharpen","shatter","shave","shear","sheathe","shed","sheer","shell","shellac","shelter","shelve","shepherd","shield","shift","shimmer","shimmy","shin","shine","shinny","ship","shipwreck","shirk","shit","shiver","shock","shoe","shoehorn","shoo","shoot","shop","shoplift","shore","short","shorten","shortlist","shoulder","shout","shove","shovel","show","showboat","showcase","shower","shred","shriek","shrill","shrink","shrivel","shroom","shroud","shrug","shtup","shuck","shudder","shuffle","shun","shunt","shush","shut","shuttle","shy","sic","sick","sicken","side","sideline","sidestep","sideswipe","sidetrack","sidle","sieve","sift","sigh","sight","sightsee","sign","signal","signify","signpost","silence","silhouette","silt","silver","simmer","simper","simplify","simulate","simulcast","sin","sing","singe","single","sink","sip","siphon","sire","sit","site","situate","size","sizzle","skate","skateboard","skedaddle","sketch","skew","skewer","ski","skid","skim","skimp","skin","skip","skipper","skirmish","skirt","skitter","skive","skivvy","skulk","sky","skyjack","skyrocket","slack","slacken","slag","slake","slam","slander","slant","slap","slash","slate","slather","slaughter","slave","slaver","slay","sledge","sleek","sleep","sleepwalk","sleet","slew","slice","slick","slide","slight","slim","sling","slink","slip","slit","slither","slob","slobber","slog","slop","slope","slosh","slot","slouch","slough","slow","slug","sluice","slum","slumber","slump","slur","slurp","smack","smart","smarten","smash","smear","smell","smelt","smile","smirk","smite","smoke","smooch","smoodge","smooth","smother","smoulder","smudge","smuggle","snack","snaffle","snag","snaggle","snake","snap","snare","snarf","snarl","snatch","sneak","sneer","sneeze","snicker","sniff","sniffle","snigger","snip","snipe","snitch","snivel","snog","snooker","snoop","snooper","snooze","snore","snorkel","snort","snow","snowball","snowplough","snowplow","snub","snuff","snuffle","snuffling","snuggle","soak","soap","soar","sob","sober","socialise","socialize","sock","sod","sodomise","sodomize","soften","soil","sojourn","solace","solder","soldier","sole","solemnise","solemnize","solicit","solidify","soliloquize","solve","somersault","soothe","sorrow","sort","sough","sound","soundproof","soup","sour","source","souse","sow","space","span","spangle","spank","spar","spare","spark","sparkle","spatter","spattering","spawn","spay","speak","spear","spearhead","spec","specialise","specialize","specify","spectacles","spectate","speculate","speed","spell","spellcheck","spend","spew","spice","spiff","spike","spill","spin","spiral","spirit","spit","spite","splash","splatter","splay","splice","splinter","split","splosh","splurge","splutter","spoil","sponge","sponsor","spoof","spook","spool","spoon","sport","sports","spot","spotlight","spout","sprain","sprawl","spray","spread","spreadeagle","spring","springboard","sprinkle","sprint","spritz","sprout","spruce","spur","spurn","spurt","sputter","spy","squabble","squall","squander","square","squash","squat","squawk","squeak","squeal","squeeze","squelch","squint","squirm","squirrel","squirt","squish","stab","stabilise","stabilize","stable","stables","stack","staff","stage","stagger","stagnate","stain","stake","stalk","stall","stammer","stamp","stampede","stanch","stand","standardise","standardize","staple","star","starch","stare","start","startle","starve","stash","state","statement","station","staunch","stave","stay","steady","steal","steam","steamroller","steel","steep","steepen","steer","stem","stencil","step","stereotype","sterilise","sterilize","stew","stick","stickybeak","stiff","stiffen","stifle","stigmatise","stigmatize","still","stimulate","sting","stinger","stink","stint","stipple","stipulate","stir","stitch","stock","stockpile","stoke","stomach","stomp","stone","stonewall","stoop","stop","stopper","store","storm","storyboard","stow","straddle","strafe","straggle","straighten","strain","strand","strangle","strap","stratify","stravage","stravaig","stray","streak","stream","streamline","strengthen","stress","stretch","stretcher","strew","stride","strike","string","strip","strive","stroke","stroll","structure","struggle","strum","strut","stub","stud","study","stuff","stultify","stumble","stump","stun","stunt","stupefy","stutter","style","stymie","sub","subcontract","subdivide","subdue","subedit","subject","subjugate","sublet","sublimate","submerge","submit","subordinate","suborn","subpoena","subscribe","subside","subsidise","subsidize","subsist","substantiate","substitute","subsume","subtend","subtitle","subtract","subvert","succeed","succor","succour","succumb","suck","sucker","suckle","suction","sue","suffer","suffice","suffocate","suffuse","sugar","suggest","suit","sulk","sulks","sully","sum","summarise","summarize","summon","summons","sun","sunbathe","sunder","sunset","sup","superimpose","superintend","superpose","supersede","supersize","supersized","supervene","supervise","supplant","supplement","supply","support","suppose","suppress","suppurate","surcharge","surf","surface","surge","surmise","surmount","surpass","surprise","surrender","surround","survey","survive","suspect","suspend","suspenders","suss","sustain","suture","swab","swaddle","swagger","swallow","swamp","swan","swank","swap","swarm","swat","swath","swathe","sway","swear","sweat","sweep","sweeps","sweeten","swell","swelter","swerve","swig","swill","swim","swindle","swing","swipe","swirl","swish","switch","swivel","swoon","swoop","swoosh","swot","symbolise","symbolize","sympathise","sympathize","symptomize","synchronise","synchronize","syndicate","synthesise","synthesize","syringe","systematise","systematize","tab","table","tabulate","tack","tackle","tag","tail","tailgate","tailor","taint","take","talk","tally","tame","tamp","tamper","tan","tangle","tango","tank","tankful","tantalise","tantalize","tap","tape","taper","tar","target","tarmac","tarnish","tarry","tart","task","taste","tattle","tattoo","taunt","tauten","tax","taxi","taxicab","teach","team","tear","tease","tee","teem","teeter","teethe","telecast","telecommute","teleconference","telegraph","telemeter","teleoperate","telephone","teleport","telescope","televise","telex","tell","telnet","temp","temper","temporise","temporize","tempt","tenant","tend","tender","tenderise","tenderize","tense","tension","tergiversate","term","terminate","terraform","terrify","terrorise","terrorize","test","testify","tether","text","thank","thatch","thaw","theorise","theorize","thicken","thin","think","thirst","thrash","thread","threaten","thresh","thrill","thrive","throb","throbbing","throng","throttle","throw","thrust","thud","thumb","thump","thunder","thwack","thwart","tick","ticket","tickle","tide","tidy","tie","tighten","tile","till","tilt","time","timetable","tinge","tingle","tingling","tinker","tinkle","tinkling","tint","tip","tippex","tipple","tiptoe","tire","titillate","titivate","title","titrate","titter","toady","toast","toboggan","toddle","toe","tog","toggle","toil","toke","tolerate","toll","tone","tongue","tonify","tool","toot","tootle","top","topple","torch","torment","torpedo","torture","toss","tot","total","tote","totter","touch","tough","toughen","tour","tousle","tout","tow","towel","tower","toy","trace","track","trade","traduce","traffic","trail","train","traipse","trammel","tramp","trample","trampoline","tranquilize","tranquillize","transact","transcend","transcribe","transfer","transfigure","transfix","transform","transfuse","transgress","transit","translate","transliterate","transmit","transmogrify","transmute","transpire","transplant","transport","transpose","trap","trash","traumatise","traumatize","travel","traverse","trawl","tread","treasure","treat","treble","trek","tremble","trembling","trepan","trespass","trial","trick","trickle","trifle","trigger","trill","trim","trip","triple","triumph","trivialise","trivialize","troll","tromp","troop","trot","trouble","troubleshoot","trounce","trouser","truant","truck","trudge","trump","trumpet","truncate","trundle","truss","trust","try","tuck","tug","tugboat","tumble","tune","tunnel","turbocharge","turf","turn","tussle","tut","tutor","twang","tweak","tweet","twiddle","twig","twin","twine","twinkle","twirl","twist","twitch","twitter","twittering","type","typecast","typeset","typify","tyrannise","tyrannize","ulcerate","ululate","ump","umpire","unbalance","unban","unbend","unblock","unbuckle","unburden","unbutton","uncoil","uncork","uncouple","uncover","uncurl","undelete","underachieve","underbid","undercharge","undercook","undercut","underestimate","underestimation","underexpose","undergo","underlie","underline","undermine","underpay","underperform","underpin","underplay","underrate","underscore","undersell","undershoot","underspend","understand","understate","understudy","undertake","undervalue","underwrite","undo","undock","undress","undulate","unearth","unfasten","unfold","unfreeze","unfurl","unhand","unhinge","unhitch","unhook","unify","uninstall","unionise","unionize","unite","unlace","unlearn","unleash","unload","unlock","unloose","unloosen","unmask","unnerve","unpack","unpick","unplug","unravel","unroll","unsaddle","unscramble","unscrew","unseat","unsettle","unsubscribe","untangle","untie","unveil","unwind","unwrap","unzip","up","upbraid","upchange","upchuck","update","upend","upgrade","uphold","upholster","uplift","upload","uproot","upsell","upset","upshift","upskill","upstage","urge","urinate","use","usher","usurp","utilise","utilize","utter","vacate","vacation","vaccinate","vacillate","vacuum","valet","validate","value","vamoose","vandalise","vandalize","vanish","vanquish","vaporise","vaporize","varnish","vary","vault","veer","veg","vegetate","veil","vend","veneer","venerate","vent","ventilate","venture","verbalise","verbalize","verge","verify","versify","vest","vet","veto","vex","vibrate","victimise","victimize","vide","video","videotape","vie","view","viewing","vilify","vindicate","violate","visit","visualise","visualize","vitiate","vitrify","vocalize","voice","void","volley","volumise","volumize","volunteer","vomit","vote","vouch","vouchsafe","vow","voyage","vulgarise","vulgarize","wad","waddle","wade","waffle","waft","wag","wage","wager","waggle","wail","wait","waive","wake","wakeboard","waken","walk","wall","wallop","wallow","wallpaper","waltz","wander","wane","wangle","wank","want","warble","ward","warm","warn","warp","warrant","wash","wassail","waste","watch","water","waterproof","waterski","wave","waver","wax","waylay","weaken","wean","weaponise","weaponize","wear","weary","weasel","weather","weatherise","weatherize","weave","wed","wedge","wee","weed","weekend","weep","weigh","weight","weird","welch","welcome","weld","well","welly","welsh","wend","westernise","westernize","wet","whack","wheedle","wheel","wheeze","whelp","whet","whiff","while","whilst","whimper","whine","whinge","whinny","whip","whirl","whirr","whirring","whisk","whisper","whispering","whistle","whiten","whitewash","whittle","whiz","whizz","whoop","whoosh","whup","wick","widen","widow","wield","wig","wiggle","wildcat","will","wilt","wimp","win","wince","winch","wind","winds","windsurf","wine","wing","wink","winkle","winnow","winter","wipe","wire","wiretap","wise","wisecrack","wish","withdraw","wither","withhold","withstand","witness","witter","wobble","wolf","wonder","woo","woof","word","work","worm","worry","worsen","worship","worst","wound","wow","wowee","wrangle","wrap","wreak","wreathe","wreck","wrench","wrest","wrestle","wriggle","wring","wrinkle","writ","write","writhe","wrong","wrought","xerox","yack","yak","yank","yap","yaw","yawn","yearn","yell","yellow","yelp","yield","yodel","yoke","yomp","yowl","yuppify","zap","zero","zigzag","zing","zip","zone","zoom"]})),uG=c((()=>{nG(),iG(),rG(),tG(),oG(),sG(),lG(),Ys={adjective:Fs,adverb:Js,conjunction:Us,interjection:Ws,noun:Zs,preposition:qs,verb:Qs}})),cG=c((()=>{rI(),yI(),MI(),jI(),NI(),xI(),HI(),ZI(),YI(),pV(),bV(),_V(),EV(),BV(),VV(),HV(),UV(),qV(),aG(),uG(),$s={title:"English",separator:" & ",address:Jt,animal:oo,app:co,business:fo,cell_phone:go,commerce:Ao,company:Po,database:Ko,date:Oo,finance:as,hacker:ls,internet:ps,lorem:vs,music:ks,name:Ns,phone_number:Ps,system:xs,team:Rs,vehicle:Hs,word:Ys}})),dG=c((()=>{Xs=["####","###","##"]})),hG=c((()=>{el=["Australia"]})),pG=c((()=>{al=["####"]})),mG=c((()=>{nl=["New South Wales","Queensland","Northern Territory","South Australia","Western Australia","Tasmania","Australian Capital Territory","Victoria"]})),fG=c((()=>{il=["NSW","QLD","NT","SA","WA","TAS","ACT","VIC"]})),vG=c((()=>{rl=["Avenue","Boulevard","Circle","Circuit","Court","Crescent","Crest","Drive","Estate Dr","Grove","Hill","Island","Junction","Knoll","Lane","Loop","Mall","Manor","Meadow","Mews","Parade","Parkway","Pass","Place","Plaza","Ridge","Road","Run","Square","Station St","Street","Summit","Terrace","Track","Trail","View Rd","Way"]})),gG=c((()=>{dG(),hG(),pG(),mG(),fG(),vG(),tl={building_number:Xs,default_country:el,postcode:al,state:nl,state_abbr:il,street_suffix:rl}})),kG=c((()=>{ol=["Pty Ltd","and Sons","Corp","Group","Brothers","Partners"]})),yG=c((()=>{kG(),sl={suffix:ol}})),bG=c((()=>{ll=["com.au","com","net.au","net","org.au","org"]})),SG=c((()=>{bG(),ul={domain_suffix:ll}})),AG=c((()=>{cl=["William","Jack","Oliver","Joshua","Thomas","Lachlan","Cooper","Noah","Ethan","Lucas","James","Samuel","Jacob","Liam","Alexander","Benjamin","Max","Isaac","Daniel","Riley","Ryan","Charlie","Tyler","Jake","Matthew","Xavier","Harry","Jayden","Nicholas","Harrison","Levi","Luke","Adam","Henry","Aiden","Dylan","Oscar","Michael","Jackson","Logan","Joseph","Blake","Nathan","Connor","Elijah","Nate","Archie","Bailey","Marcus","Cameron","Jordan","Zachary","Caleb","Hunter","Ashton","Toby","Aidan","Hayden","Mason","Hamish","Edward","Angus","Eli","Sebastian","Christian","Patrick","Andrew","Anthony","Luca","Kai","Beau","Alex","George","Callum","Finn","Zac","Mitchell","Jett","Jesse","Gabriel","Leo","Declan","Charles","Jasper","Jonathan","Aaron","Hugo","David","Christopher","Chase","Owen","Justin","Ali","Darcy","Lincoln","Cody","Phoenix","Sam","John","Joel","Isabella","Ruby","Chloe","Olivia","Charlotte","Mia","Lily","Emily","Ella","Sienna","Sophie","Amelia","Grace","Ava","Zoe","Emma","Sophia","Matilda","Hannah","Jessica","Lucy","Georgia","Sarah","Abigail","Zara","Eva","Scarlett","Jasmine","Chelsea","Lilly","Ivy","Isla","Evie","Isabelle","Maddison","Layla","Summer","Annabelle","Alexis","Elizabeth","Bella","Holly","Lara","Madison","Alyssa","Maya","Tahlia","Claire","Hayley","Imogen","Jade","Ellie","Sofia","Addison","Molly","Phoebe","Alice","Savannah","Gabriella","Kayla","Mikayla","Abbey","Eliza","Willow","Alexandra","Poppy","Samantha","Stella","Amy","Amelie","Anna","Piper","Gemma","Isabel","Victoria","Stephanie","Caitlin","Heidi","Paige","Rose","Amber","Audrey","Claudia","Taylor","Madeline","Angelina","Natalie","Charli","Lauren","Ashley","Violet","Mackenzie","Abby","Skye","Lillian","Alana","Lola","Leah","Eve","Kiara"]})),MG=c((()=>{dl=["Smith","Jones","Williams","Brown","Wilson","Taylor","Johnson","White","Martin","Anderson","Thompson","Nguyen","Thomas","Walker","Harris","Lee","Ryan","Robinson","Kelly","King","Davis","Wright","Evans","Roberts","Green","Hall","Wood","Jackson","Clarke","Patel","Khan","Lewis","James","Phillips","Mason","Mitchell","Rose","Davies","Rodriguez","Cox","Alexander","Garden","Campbell","Johnston","Moore","Smyth","O'neill","Doherty","Stewart","Quinn","Murphy","Graham","Mclaughlin","Hamilton","Murray","Hughes","Robertson","Thomson","Scott","Macdonald","Reid","Clark","Ross","Young","Watson","Paterson","Morrison","Morgan","Griffiths","Edwards","Rees","Jenkins","Owen","Price","Moss","Richards","Abbott","Adams","Armstrong","Bahringer","Bailey","Barrows","Bartell","Bartoletti","Barton","Bauch","Baumbach","Bayer","Beahan","Beatty","Becker","Beier","Berge","Bergstrom","Bode","Bogan","Borer","Bosco","Botsford","Boyer","Boyle","Braun","Bruen","Carroll","Carter","Cartwright","Casper","Cassin","Champlin","Christiansen","Cole","Collier","Collins","Connelly","Conroy","Corkery","Cormier","Corwin","Cronin","Crooks","Cruickshank","Cummings","D'amore","Daniel","Dare","Daugherty","Dickens","Dickinson","Dietrich","Donnelly","Dooley","Douglas","Doyle","Durgan","Ebert","Emard","Emmerich","Erdman","Ernser","Fadel","Fahey","Farrell","Fay","Feeney","Feil","Ferry","Fisher","Flatley","Gibson","Gleason","Glover","Goldner","Goodwin","Grady","Grant","Greenfelder","Greenholt","Grimes","Gutmann","Hackett","Hahn","Haley","Hammes","Hand","Hane","Hansen","Harber","Hartmann","Harvey","Hayes","Heaney","Heathcote","Heller","Hermann","Hermiston","Hessel","Hettinger","Hickle","Hill","Hills","Hoppe","Howe","Howell","Hudson","Huel","Hyatt","Jacobi","Jacobs","Jacobson","Jerde","Johns","Keeling","Kemmer","Kessler","Kiehn","Kirlin","Klein","Koch","Koelpin","Kohler","Koss","Kovacek","Kreiger","Kris","Kuhlman","Kuhn","Kulas","Kunde","Kutch","Lakin","Lang","Langworth","Larkin","Larson","Leannon","Leffler","Little","Lockman","Lowe","Lynch","Mann","Marks","Marvin","Mayer","Mccullough","Mcdermott","Mckenzie","Miller","Mills","Monahan","Morissette","Mueller","Muller","Nader","Nicolas","Nolan","O'connell","O'conner","O'hara","O'keefe","Olson","O'reilly","Parisian","Parker","Quigley","Reilly","Reynolds","Rice","Ritchie","Rohan","Rolfson","Rowe","Russel","Rutherford","Sanford","Sauer","Schmidt","Schmitt","Schneider","Schroeder","Schultz","Shields","Smitham","Spencer","Stanton","Stark","Stokes","Swift","Tillman","Towne","Tremblay","Tromp","Turcotte","Turner","Walsh","Walter","Ward","Waters","Weber","Welch","West","Wilderman","Wilkinson","Williamson","Windler","Wolf"]})),TG=c((()=>{AG(),MG(),hl={first_name:cl,last_name:dl}})),_G=c((()=>{pl=["0# #### ####","+61 # #### ####","04## ### ###","+61 4## ### ###"]})),wG=c((()=>{_G(),ml={formats:pl}})),jG=c((()=>{gG(),yG(),SG(),TG(),wG(),fl={title:"English (Australia)",address:tl,company:sl,internet:ul,name:hl,phone_number:ml}})),EG=c((()=>{vl=["####","###","##"]})),NG=c((()=>{gl=["#{city_prefix}"]})),BG=c((()=>{kl=["Bondi","Burleigh Heads","Carlton","Fitzroy","Fremantle","Glenelg","Manly","Noosa","Stones Corner","St Kilda","Surry Hills","Yarra Valley"]})),PG=c((()=>{yl=["Australia"]})),LG=c((()=>{bl=["0###","2###","3###","4###","5###","6###","7###"]})),DG=c((()=>{Sl=["South East Queensland","Wide Bay Burnett","Margaret River","Port Pirie","Gippsland","Elizabeth","Barossa"]})),xG=c((()=>{Al=["New South Wales","Queensland","Northern Territory","South Australia","Western Australia","Tasmania","Australian Capital Territory","Victoria"]})),CG=c((()=>{Ml=["NSW","QLD","NT","SA","WA","TAS","ACT","VIC"]})),KG=c((()=>{Tl=["#{street_root}"]})),RG=c((()=>{_l=["Ramsay Street","Bonnie Doon","Cavill Avenue","Queen Street"]})),zG=c((()=>{wl=["Avenue","Boulevard","Circle","Circuit","Court","Crescent","Crest","Drive","Estate Dr","Grove","Hill","Island","Junction","Knoll","Lane","Loop","Mall","Manor","Meadow","Mews","Parade","Parkway","Pass","Place","Plaza","Ridge","Road","Run","Square","Station St","Street","Summit","Terrace","Track","Trail","View Rd","Way"]})),OG=c((()=>{EG(),NG(),BG(),PG(),LG(),DG(),xG(),CG(),KG(),RG(),zG(),jl={building_number:vl,city:gl,city_prefix:kl,default_country:yl,postcode:bl,region:Sl,state:Al,state_abbr:Ml,street_name:Tl,street_root:_l,street_suffix:wl}})),IG=c((()=>{El=["Pty Ltd","and Sons","Corp","Group","Brothers","Partners"]})),VG=c((()=>{IG(),Nl={suffix:El}})),GG=c((()=>{Bl=["com.au","com","net.au","net","org.au","org"]})),HG=c((()=>{GG(),Pl={domain_suffix:Bl}})),FG=c((()=>{Ll=["Charlotte","Ava","Chloe","Emily","Olivia","Zoe","Lily","Sophie","Amelia","Sofia","Ella","Isabella","Ruby","Sienna","Mia+3","Grace","Emma","Ivy","Layla","Abigail","Isla","Hannah","Zara","Lucy","Evie","Annabelle","Madison","Alice","Georgia","Maya","Madeline","Audrey","Scarlett","Isabelle","Chelsea","Mila","Holly","Indiana","Poppy","Harper","Sarah","Alyssa","Jasmine","Imogen","Hayley","Pheobe","Eva","Evelyn","Mackenzie","Ayla","Oliver","Jack","Jackson","William","Ethan","Charlie","Lucas","Cooper","Lachlan","Noah","Liam","Alexander","Max","Isaac","Thomas","Xavier","Oscar","Benjamin","Aiden","Mason","Samuel","James","Levi","Riley","Harrison","Ryan","Henry","Jacob","Joshua","Leo","Zach","Harry","Hunter","Flynn","Archie","Tyler","Elijah","Hayden","Jayden","Blake","Archer","Ashton","Sebastian","Zachery","Lincoln","Mitchell","Luca","Nathan","Kai","Connor","Tom","Nigel","Matt","Sean"]})),JG=c((()=>{Dl=["Smith","Jones","Williams","Brown","Wilson","Taylor","Morton","White","Martin","Anderson","Thompson","Nguyen","Thomas","Walker","Harris","Lee","Ryan","Robinson","Kelly","King","Rausch","Ridge","Connolly","LeQuesne"]})),UG=c((()=>{xl=["Bazza","Bluey","Davo","Johno","Shano","Shazza"]})),WG=c((()=>{FG(),JG(),UG(),Cl={first_name:Ll,last_name:Dl,ocker_first_name:xl}})),ZG=c((()=>{Kl=["0# #### ####","+61 # #### ####","04## ### ###","+61 4## ### ###"]})),qG=c((()=>{ZG(),Rl={formats:Kl}})),QG=c((()=>{OG(),VG(),HG(),WG(),qG(),zl={title:"English (Australia Ocker)",address:jl,company:Nl,internet:Pl,name:Cl,phone_number:Rl}})),YG=c((()=>{Ol=["Boot","I","Nu","Nur","Tu","Um","a","becoose-a","boot","bork","burn","chuuses","cumplete-a","cun","cunseqooences","curcoomstunces","dee","deeslikes","denuoonceeng","desures","du","eccuoont","ectooel","edfuntege-a","efueeds","egeeen","ell","ere-a","feend","foolt","frum","geefe-a","gesh","greet","heem","heppeeness","hes","hoo","hoomun","idea","ifer","in","incuoonter","injuy","itselff","ixcept","ixemple-a","ixerceese-a","ixpleeen","ixplurer","ixpuoond","ixtremely","knoo","lebureeuoos","lufes","meestekee","mester-booeelder","moost","mun","nu","nut","oobteeen","oocceseeunelly","ooccoor","ooff","oone-a","oor","peeen","peeenffool","physeecel","pleesoore-a","poorsooe-a","poorsooes","preeesing","prucoore-a","prudooces","reeght","reshunelly","resooltunt","sume-a","teecheengs","teke-a","thees","thet","thuse-a","treefiel","troot","tu","tueel","und","undertekes","unnuyeeng","uny","unyune-a","us","veell","veet","ves","vheech","vhu","yuoo","zee","zeere-a"]})),$G=c((()=>{YG(),Il={words:Ol}})),XG=c((()=>{$G(),Vl={title:"English (Bork)",lorem:Il}})),eH=c((()=>{Gl=["Canada"]})),aH=c((()=>{Hl=["A#? #?#","B#? #?#","C#? #?#","E#? #?#","G#? #?#","H#? #?#","J#? #?#","K#? #?#","L#? #?#","M#? #?#","N#? #?#","P#? #?#","R#? #?#","S#? #?#","T#? #?#","V#? #?#","X#? #?#","Y#? #?#"]})),nH=c((()=>{Fl=["Alberta","British Columbia","Manitoba","New Brunswick","Newfoundland and Labrador","Nova Scotia","Northwest Territories","Nunavut","Ontario","Prince Edward Island","Quebec","Saskatchewan","Yukon"]})),iH=c((()=>{Jl=["AB","BC","MB","NB","NL","NS","NU","NT","ON","PE","QC","SK","YT"]})),rH=c((()=>{eH(),aH(),nH(),iH(),Ul={default_country:Gl,postcode:Hl,state:Fl,state_abbr:Jl}})),tH=c((()=>{Wl=["ca","com","biz","info","name","net","org"]})),oH=c((()=>{Zl=["gmail.com","yahoo.ca","hotmail.com"]})),sH=c((()=>{tH(),oH(),ql={domain_suffix:Wl,free_email:Zl}})),lH=c((()=>{Ql=["!##-!##-####","(!##)!##-####","!##.!##.####","1-!##-###-####","!##-!##-#### x###","(!##)!##-#### x###","1-!##-!##-#### x###","!##.!##.#### x###","!##-!##-#### x####","(!##)!##-#### x####","1-!##-!##-#### x####","!##.!##.#### x####","!##-!##-#### x#####","(!##)!##-#### x#####","1-!##-!##-#### x#####","!##.!##.#### x#####"]})),uH=c((()=>{lH(),Yl={formats:Ql}})),cH=c((()=>{rH(),sH(),uH(),$l={title:"English (Canada)",address:Ul,internet:ql,phone_number:Yl}})),dH=c((()=>{Xl=["Avon","Bedfordshire","Berkshire","Borders","Buckinghamshire","Cambridgeshire","Central","Cheshire","Cleveland","Clwyd","Cornwall","County Antrim","County Armagh","County Down","County Fermanagh","County Londonderry","County Tyrone","Cumbria","Derbyshire","Devon","Dorset","Dumfries and Galloway","Durham","Dyfed","East Sussex","Essex","Fife","Gloucestershire","Grampian","Greater Manchester","Gwent","Gwynedd County","Hampshire","Herefordshire","Hertfordshire","Highlands and Islands","Humberside","Isle of Wight","Kent","Lancashire","Leicestershire","Lincolnshire","Lothian","Merseyside","Mid Glamorgan","Norfolk","North Yorkshire","Northamptonshire","Northumberland","Nottinghamshire","Oxfordshire","Powys","Rutland","Shropshire","Somerset","South Glamorgan","South Yorkshire","Staffordshire","Strathclyde","Suffolk","Surrey","Tayside","Tyne and Wear","Warwickshire","West Glamorgan","West Midlands","West Sussex","West Yorkshire","Wiltshire","Worcestershire"]})),hH=c((()=>{eu=["England","Scotland","Wales","Northern Ireland"]})),pH=c((()=>{au=["??# #??","??## #??"]})),mH=c((()=>{nu=["England","Scotland","Wales","Northern Ireland"]})),fH=c((()=>{dH(),hH(),pH(),mH(),iu={county:Xl,default_country:eu,postcode:au,uk_country:nu}})),vH=c((()=>{ru=["074## ######","075## ######","076## ######","077## ######","078## ######","079## ######"]})),gH=c((()=>{vH(),tu={formats:ru}})),kH=c((()=>{ou=["co.uk","com","biz","info","name"]})),yH=c((()=>{kH(),su={domain_suffix:ou}})),bH=c((()=>{lu=["01#### #####","01### ######","01#1 ### ####","011# ### ####","02# #### ####","03## ### ####","055 #### ####","056 #### ####","0800 ### ####","08## ### ####","09## ### ####","016977 ####","01### #####","0500 ######","0800 ######"]})),SH=c((()=>{bH(),uu={formats:lu}})),AH=c((()=>{fH(),gH(),yH(),SH(),cu={title:"English (Great Britain)",address:iu,cell_phone:tu,internet:su,phone_number:uu}})),MH=c((()=>{du=["###","##","#"]})),TH=c((()=>{hu=["#{city_name}"]})),_H=c((()=>{pu=["Goaso","Hwidiem","Kenyasi","Kukuom","Abrepo Junction","Abuakwa","Adum","Afrancho","Agogo","Agona","Ahodwo","Airport","Akumadan","Amakom","Aputuogya","Asafo","Ash-Town","Asokore Mampong","Asokwa","Asuofia","Atonsu","Ayeduasi","Ayigya","Bantama","Barekese","Bekwai","Boadi","Bomso","Breman","Brewery","Buoho","Buokrom Estate","Daban","Dakwadwom","Deduako","Denyame","Effiduase","Ejisu","Ejura","Emina","Esreso","Fawode","Gyinyasi","Jachie Pramso","Kaasi","KNUST","Kodie","Komfo Anokye","Konongo","Kotei","Krofrom","Kumasi","Maakro","Mampong","Mankranso","Manso Nkwanta","Nkawie","North Suntreso","Nyinahin","Obuasi","Oforikrom","Pankrono","Santasi","Sokoban","South Suntreso","Suame","Tafo","Takwa-Maakro","Tanoso","Tepa","TUC","Banda Ahenkro","Brekum","Dormaa Ahenkro","New Drobo","Nsawkaw","Sampa","Sunyani","Atebubu","Buipe","Jema","Kintampo","Kwame Danso","Nkoranza","Prang","Techiman","Wenchi","Yeji","Agona Swedru","Amanfrom","Anomabu","Apam","Bawjiase","Breman Asikuma","Budumburam","Cape Coast","Domeabra","Elmina","Foso","Kasoa Ofaakor","Kasoa Zongo","Liberia Camp","Mankessim","Millennium City","Mumford","Nyakrom","Nyananor","Nyanyano","Oduponkpehe","Opeikuma","Pentecost Seminary","Saltpond","Winneba","Abetifi","Abompe","Aburi","Adeiso","Adjeiikrom","Adukrom","Ahwerease","Akim Oda","Akim Swedru","Akosombo","Akropong","Akwatia","Akyem Hemang","Amanokrom","Apirede","Asamankese","Asesewa","Atimpoku","Ayiensu","Begoro","Bepoase","Bisibom","Bososo","Brekusu","Coaltar","Dawu","Dedesoworako","Donkorkrom","Dwenase","Gyankama","Juaso","Kade","Kibi","Kitase","Koforidua","Kwabeng","Mamfe","Mampong","Mpraeso","New Abirem","Nkawkaw","Nsawam","Nsutam","Obooho","Obosomase","Odumase Krobo","Ofoase","Osino","Peduase","Saaman","Somanya","Summer","Suhum","Tease","Tutu","Abelemkpe","Ablekuma","Abokobi","Abossey Okai","Accra Newtown","Achimota","Adabraka","Adenta","Afienya","Agbogba","Airport","Amasaman","Ashiaman","Ashongman","Aslyum Down","Baatsona - Spintex","Bortianor","Cantonment","Dansoman","Darkuman","Dawhenya","Dodowa","Dome","Dzorwulu","East Legon","Gbawe","Haatso","James Town","Kanda","Kaneshie","Kasoa","Kissieman","Kokrobite","Korle Bu","Kpone","Kwabenya","Kwashieman","Labadi","Labone","Lapaz","Lartebiokorshie","Lashibi","Legon","Madina","Makola","Mallam","McCarthy Hill","Michel Camp","Nima","Nungua","Oblogo Mallam","Odoponkpehe","Odorkor","Osu","Oyarifa","Patang","Prampram","Ridge","Roman Ridge","Sakumono","Santa Maria","Sowutuom","Taifa","Tema","Tema New Town","Tesano","Teshie","Tetegu","Tieman","Tudu","Weija","Westhills","Chinderi","Jasikan","Kadjebi","Kete Krachi","Kpassa","Nkonya","Bole","Buipe","Damango","Salaga","Sawla","Tolon","Bawku","Bolgatanga","Bongo","Navrongo","Paga","Tongo","Funsi","Gwollu","Issa","Jirapa","Kaleo","Lambussie","Lawra","Nadowli","Nandom","Tumu","Wa","Wechiau","Adaklu Waya","Adidome","Aflao","Akatsi","Ave Dakpa","Ho.","Hohoe","Keta","Kpando","Kpetoe","Kpeve","Sogakope","Abase","Aboso","Adiawoso","Adiembra","Adwowa","Agona Nkwanta","Agufo","Ahonozo","Akatachi","Alabokazo","Anaji","Apowa","Apremodo","Asankragua","Awukyere","Axim","Beahu","Bogoso","Busua","Daboase","Dadwen","Diabene","Dixcove","East Tanokrom","Effiakuma","Eikwe","Elubo","Essiama","Essikado","Essipong","Ewusiejo","Fijai","Funko","Half Assini","Hotopo","Inchaban","kansaworado","Kejabil","Kojokrom","Kwawkrom","Kweikuma","kwesimintsim","Manso","Miemia","Mpintsin","New Akwidaa","New Amanfu","New Takoradi","Ngyiresia","Nkroful","Nsein","Ntankoful","Nzulezo","Old Akwidaa","Prestea","Princess Town","Samreboi","Sekondi","Shama","Takoradi","Tarkwa","Tikobo No.1","Tikobo No.2","West Tanokrom","Windy Ridge","Akontombra","Bibiani","Dadieso","Enchi","Juaboso","Sewhi Anhwiaso"]})),wH=c((()=>{mu=["Ghana"]})),jH=c((()=>{fu=["??-###-####","??-####-####"]})),EH=c((()=>{vu=["Ashanti","Brong Ahafo","Bono East","Ahafo","Central","Eastern","Greater Accra","Northern","Savannah","North East","Upper East","Upper West","Volta","Oti","Western","Western North"]})),NH=c((()=>{gu=["#{building_number} #{street_name}"]})),BH=c((()=>{ku=["#{Name.last_name} #{street_suffix}","#{street_prefix} #{street_suffix}"]})),PH=c((()=>{yu=["Boame"]})),LH=c((()=>{bu=["Link","Lane","Road","Street","Lk","Ln","Rd","St"]})),DH=c((()=>{MH(),TH(),_H(),wH(),jH(),EH(),NH(),BH(),PH(),LH(),Su={building_number:du,city:hu,city_name:pu,default_country:mu,postcode:fu,state:vu,street_address:gu,street_name:ku,street_prefix:yu,street_suffix:bu}})),xH=c((()=>{Au=["#{Name.last_name} #{suffix}","#{Name.last_name} and #{Name.last_name}"]})),CH=c((()=>{Mu=["Venture","Ltd"]})),KH=c((()=>{xH(),CH(),Tu={name:Au,suffix:Mu}})),RH=c((()=>{_u=["com.gh","edu.gh","gov.gh","org.gh","com","net","org","biz","co"]})),zH=c((()=>{RH(),wu={domain_suffix:_u}})),OH=c((()=>{ju=["Aba","Abena","Abigail","Adwoa","Afia","Afua","Akos","Akofa","Akorfa","Akosua","Akua","Akumaa","Alice","Ama","Amanda","Amber","Amelia","Angela","Ann","Annette","Awesi","Baaba","Barbara","Beatrice","COmfort","Caroline","Catherine","Charlotte","Christina","Comfort","Constance","Danielle","Deborah","Debra","Denise","Dora","Dorcas","Dorothy","Eliabeth","Elizabeth","Emily","Emma","Ernestina","Esi","Eunice","Eyram","Felicia","Francesca","Gemma","Georgia","Georgina","Gifty","Grace","Grace","Hannabel","Hannah","Harriet","Helen","Irene","Janet","Janet","Janice","Jasmine","Jennifer","Jessica","Jill","Joanna","Josephine","Joyce","Joyce","Judith","Julia","Juliana","Julie","Karen","Kate","Katherine","Katy","Lawrencia","Linda","Lisa","Lorraine","Lucy","Lucy","Lydia","Lydia","Mandy","Margaret","Margaret","Maria","Marian","Marilyn","Mary","Mary","Maureen","Mawuena","Mawusi","Michelle","Millicent","Nana Ama","Naomi","Natalie","Natasha","Nicola","Nimakoah","Olivia","Pamela","Patricia","Paula","Priscilla","Rachael","Rachel","Rebecca","Rebecca","Regina","Rita","Roselyn","Rosemary","Rosemary","Ruth","Salomey","Samantha","Sandra","Sarah","Sarah","Sarah","Sena","Sharon","Sheila","Shirley","Stephanie","Susan","Susan","Sylvia","Teresa","Tina","Tracy","Vanessa","Veronica","Victoria","Vida","Wendy","Yaa","Yvonne"]})),IH=c((()=>{Eu=["#{female_first_name}","#{male_first_name}"]})),VH=c((()=>{Nu=["Acheampong","Adadevoh","Adomah","Adomako","Adongo","Adu","Adusei","Adutwum","Afirifa","Afoakwa","Agyapong","Agyapong","Agyare","Agyei","Agyemang","Ahortor","Akoto","Akowua","Akyeamfuɔ","Akyeampong","Akyena","Akyerεko","Amo","Amoa","Amoako","Amoasi","Ampadu","Ampofo","Amponsah","Andorful","Ankra","Anokye","Ansa","Antwi","Antwi","Appia","Appiah","Asamoa","Asamoah","Asante","Asare","Asenso","Asiama","Asiedu","Ata","Awuah","Baa","Baafi","Baah","Baawia","Badu","Boadi","Boadu","Boahen","Boakye","Boaten","Boateng","Bona","Bonsra","Bonsu","Daako","Danso","Darko","Darteh","Dartey","Djokoto","Donkor","Duah","Dwamena","Dzokoto","Fofie","Fosu","Gyamfi","Gyasi","Karikari","Koomson","Kumi","Kusi","Kwaakye","Kwarteng","Kyei","Mensa","Mensah","Nkansa","Nkansah","Nkrumah","Nsia","Nti","Ntiamoa","Ntim","Nyaako","Nyame","Nyantakyi","Obeng","Ofori","Ofosu","Okyere","Okpattah","Omani","Opoku","Oppong","Opuku","Osei","Oti","Otiwa","Otuo","Owusu","Prempeh","Quartey","Safo","Sarpong","Takyi","Tawia","Tutu","Tweneboa","Twumasi","Wiafe","Yaamoa","Yawson","Yeboa","Yeboah","Yirenkyi"]})),GH=c((()=>{Bu=["Aaron","Abeiku","Adam","Adrian","Akwesi","Albert","Alex","Alexander","Andrew","Anthony","Antony","Arthur","Ben","Benjamin","Bernard","Bless","Blessing","Bruce","Carl","Charles","Christian","Clifford","Colins","Daniel","Danny","David","Denis","Dennis","Derrick","Dominic","Donald","Douglas","Duncan","Edward","Ekow","Elliot","Elliott","Eyram","Eric","Fiifi","Francis","Frank","Frederick","George","Gerald","Gordon","Graham","Gregory","Harry","Henry","Howard","Isaac","Akwasi","Jack","Jacob","Jake","James","Jason","Jeffrey","Jeremy","Joe","Joel","John","Jonathan","Joojo","Joseph","Josh","Joshua","Josiah","Julian","Justin","Karl","Kenneth","Kevin","Kofi","Kojo","Kujoe","Kwabena","Kwadwo","Kwaku","Kwame","Kwamena","Kwasi","Kweku","Kwesi","Kyle","Lawrence","Leslie","Louis","Luke","Malcolm","Marcus","Mark","Martin","Mathew","Matthew","Max","Michael","Nathan","Nicholas","Nigel","Oliver","Patrick","Paul","Peter","Philip","Phillip","Promise","Raymond","Richard","Robert","Roger","Ronald","Russell","Sam","Samuel","Shaun","Simon","Stanley","Stephen","Steven","Terence","Thomas","Timothy","Thank God","Thy Will Be Done","Tom","Tony","Victor","Vincent","William","Yaw"]})),HH=c((()=>{Pu=["#{female_first_name} #{last_name}","#{female_first_name} #{last_name}-#{last_name}","#{male_first_name} #{last_name}","#{male_first_name} #{last_name}-#{last_name}"]})),FH=c((()=>{OH(),IH(),VH(),GH(),HH(),Lu={female_first_name:ju,first_name:Eu,last_name:Nu,male_first_name:Bu,name:Pu}})),JH=c((()=>{Du=["020#######","023#######","024#######","026#######","027#######","028#######","050#######","053#######","054#######","055#######","056#######","057#######","058#######","+23320#######","+23323#######","+23324#######","+23326#######","+23327#######","+23328#######","+23350#######","+23353#######","+23354#######","+23355#######","+23356#######","+23357#######","+23358#######"]})),UH=c((()=>{JH(),xu={formats:Du}})),WH=c((()=>{DH(),KH(),zH(),FH(),UH(),Cu={title:"English (Ghana)",address:Su,company:Tu,internet:wu,name:Lu,phone_number:xu}})),ZH=c((()=>{Ku=["Carlow","Cavan","Clare","Cork","Donegal","Dublin","Galway","Kerry","Kildare","Kilkenny","Laois","Leitrim","Limerick","Longford","Louth","Mayo","Meath","Monaghan","Offaly","Roscommon","Sligo","Tipperary","Waterford","Westmeath","Wexford","Wicklow"]})),qH=c((()=>{Ru=["Ireland"]})),QH=c((()=>{ZH(),qH(),zu={county:Ku,default_country:Ru}})),YH=c((()=>{Ou=["082 ### ####","083 ### ####","085 ### ####","086 ### ####","087 ### ####","089 ### ####"]})),$H=c((()=>{YH(),Iu={formats:Ou}})),XH=c((()=>{Vu=["ie","com","net","info","eu"]})),eF=c((()=>{XH(),Gu={domain_suffix:Vu}})),aF=c((()=>{Hu=["01 #######","021 #######","022 #######","023 #######","024 #######","025 #######","026 #######","027 #######","028 #######","029 #######","0402 #######","0404 #######","041 #######","042 #######","043 #######","044 #######","045 #######","046 #######","047 #######","049 #######","0504 #######","0505 #######","051 #######","052 #######","053 #######","056 #######","057 #######","058 #######","059 #######","061 #######","062 #######","063 #######","064 #######","065 #######","066 #######","067 #######","068 #######","069 #######","071 #######","074 #######","090 #######","091 #######","093 #######","094 #######","095 #######","096 #######","097 #######","098 #######","099 #######"]})),nF=c((()=>{aF(),Fu={formats:Hu}})),iF=c((()=>{QH(),$H(),eF(),nF(),Ju={title:"English (Ireland)",address:zu,cell_phone:Iu,internet:Gu,phone_number:Fu}})),rF=c((()=>{Uu=["#{city_name}"]})),tF=c((()=>{Wu=["Achalpur","Achhnera","Adalaj","Adilabad","Adityapur","Adoni","Adoor","Adra","Adyar","Afzalpur","Agartala","Agra","Ahmedabad","Ahmednagar","Aizawl","Ajmer","Akola","Akot","Alappuzha","Aligarh","AlipurdUrban Agglomerationr","Alirajpur","Allahabad","Alwar","Amalapuram","Amalner","Ambejogai","Ambikapur","Amravati","Amreli","Amritsar","Amroha","Anakapalle","Anand","Anantapur","Anantnag","Anjangaon","Anjar","Ankleshwar","Arakkonam","Arambagh","Araria","Arrah","Arsikere","Aruppukkottai","Arvi","Arwal","Asansol","Asarganj","Ashok Nagar","Athni","Attingal","Aurangabad","Aurangabad","Azamgarh","Bagaha","Bageshwar","Bahadurgarh","Baharampur","Bahraich","Balaghat","Balangir","Baleshwar Town","Ballari","Balurghat","Bankura","Bapatla","Baramula","Barbil","Bargarh","Barh","Baripada Town","Barmer","Barnala","Barpeta","Batala","Bathinda","Begusarai","Belagavi","Bellampalle","Belonia","Bengaluru","Bettiah","BhabUrban Agglomeration","Bhadrachalam","Bhadrak","Bhagalpur","Bhainsa","Bharatpur","Bharuch","Bhatapara","Bhavnagar","Bhawanipatna","Bheemunipatnam","Bhilai Nagar","Bhilwara","Bhimavaram","Bhiwandi","Bhiwani","Bhongir","Bhopal","Bhubaneswar","Bhuj","Bikaner","Bilaspur","Bobbili","Bodhan","Bokaro Steel City","Bongaigaon City","Brahmapur","Buxar","Byasanagar","Chaibasa","Chalakudy","Chandausi","Chandigarh","Changanassery","Charkhi Dadri","Chatra","Chennai","Cherthala","Chhapra","Chhapra","Chikkamagaluru","Chilakaluripet","Chirala","Chirkunda","Chirmiri","Chittoor","Chittur-Thathamangalam","Coimbatore","Cuttack","Dalli-Rajhara","Darbhanga","Darjiling","Davanagere","Deesa","Dehradun","Dehri-on-Sone","Delhi","Deoghar","Dhamtari","Dhanbad","Dharmanagar","Dharmavaram","Dhenkanal","Dhoraji","Dhubri","Dhule","Dhuri","Dibrugarh","Dimapur","Diphu","Dumka","Dumraon","Durg","Eluru","English Bazar","Erode","Etawah","Faridabad","Faridkot","Farooqnagar","Fatehabad","Fatehpur Sikri","Fazilka","Firozabad","Firozpur Cantt.","Firozpur","Forbesganj","Gadwal","Gandhinagar","Gangarampur","Ganjbasoda","Gaya","Giridih","Goalpara","Gobichettipalayam","Gobindgarh","Godhra","Gohana","Gokak","Gooty","Gopalganj","Gudivada","Gudur","Gumia","Guntakal","Guntur","Gurdaspur","Gurgaon","Guruvayoor","Guwahati","Gwalior","Habra","Hajipur","Haldwani-cum-Kathgodam","Hansi","Hapur","Hardoi ","Hardwar","Hazaribag","Hindupur","Hisar","Hoshiarpur","Hubli-Dharwad","Hugli-Chinsurah","Hyderabad","Ichalkaranji","Imphal","Indore","Itarsi","Jabalpur","Jagdalpur","Jaggaiahpet","Jagraon","Jagtial","Jaipur","Jalandhar Cantt.","Jalandhar","Jalpaiguri","Jamalpur","Jammalamadugu","Jammu","Jamnagar","Jamshedpur","Jamui","Jangaon","Jatani","Jehanabad","Jhansi","Jhargram","Jharsuguda","Jhumri Tilaiya","Jind","Jodhpur","Jorhat","Kadapa","Kadi","Kadiri","Kagaznagar","Kailasahar","Kaithal","Kakinada","Kalimpong","Kalpi","Kalyan-Dombivali","Kamareddy","Kancheepuram","Kandukur","Kanhangad","Kannur","Kanpur","Kapadvanj","Kapurthala","Karaikal","Karimganj","Karimnagar","Karjat","Karnal","Karur","Karwar","Kasaragod","Kashipur","KathUrban Agglomeration","Katihar","Kavali","Kayamkulam","Kendrapara","Kendujhar","Keshod","Khair","Khambhat","Khammam","Khanna","Kharagpur","Kharar","Khowai","Kishanganj","Kochi","Kodungallur","Kohima","Kolar","Kolkata","Kollam","Koratla","Korba","Kot Kapura","Kota","Kothagudem","Kottayam","Kovvur","Koyilandy","Kozhikode","Kunnamkulam","Kurnool","Kyathampalle","Lachhmangarh","Ladnu","Ladwa","Lahar","Laharpur","Lakheri","Lakhimpur","Lakhisarai","Lakshmeshwar","Lal Gopalganj Nindaura","Lalganj","Lalganj","Lalgudi","Lalitpur","Lalsot","Lanka","Lar","Lathi","Latur","Lilong","Limbdi","Lingsugur","Loha","Lohardaga","Lonar","Lonavla","Longowal","Loni","Losal","Lucknow","Ludhiana","Lumding","Lunawada","Lunglei","Macherla","Machilipatnam","Madanapalle","Maddur","Madhepura","Madhubani","Madhugiri","Madhupur","Madikeri","Madurai","Magadi","Mahad","Mahalingapura","Maharajganj","Maharajpur","Mahasamund","Mahbubnagar","Mahe","Mahemdabad","Mahendragarh","Mahesana","Mahidpur","Mahnar Bazar","Mahuva","Maihar","Mainaguri","Makhdumpur","Makrana","Malaj Khand","Malappuram","Malavalli","Malda","Malegaon","Malerkotla","Malkangiri","Malkapur","Malout","Malpura","Malur","Manachanallur","Manasa","Manavadar","Manawar","Mancherial","Mandalgarh","Mandamarri","Mandapeta","Mandawa","Mandi Dabwali","Mandi","Mandideep","Mandla","Mandsaur","Mandvi","Mandya","Manendragarh","Maner","Mangaldoi","Mangaluru","Mangalvedhe","Manglaur","Mangrol","Mangrol","Mangrulpir","Manihari","Manjlegaon","Mankachar","Manmad","Mansa","Mansa","Manuguru","Manvi","Manwath","Mapusa","Margao","Margherita","Marhaura","Mariani","Marigaon","Markapur","Marmagao","Masaurhi","Mathabhanga","Mathura","Mattannur","Mauganj","Mavelikkara","Mavoor","Mayang Imphal","Medak","Medininagar (Daltonganj)","Medinipur","Meerut","Mehkar","Memari","Merta City","Mhaswad","Mhow Cantonment","Mhowgaon","Mihijam","Mira-Bhayandar","Mirganj","Miryalaguda","Modasa","Modinagar","Moga","Mohali","Mokameh","Mokokchung","Monoharpur","Moradabad","Morena","Morinda, India","Morshi","Morvi","Motihari","Motipur","Mount Abu","Mudabidri","Mudalagi","Muddebihal","Mudhol","Mukerian","Mukhed","Muktsar","Mul","Mulbagal","Multai","Mumbai","Mundargi","Mundi","Mungeli","Munger","Murliganj","Murshidabad","Murtijapur","Murwara (Katni)","Musabani","Mussoorie","Muvattupuzha","Muzaffarpur","Mysore","Nabadwip","Nabarangapur","Nabha","Nadbai","Nadiad","Nagaon","Nagapattinam","Nagar","Nagari","Nagarkurnool","Nagaur","Nagda","Nagercoil","Nagina","Nagla","Nagpur","Nahan","Naharlagun","Naidupet","Naihati","Naila Janjgir","Nainital","Nainpur","Najibabad","Nakodar","Nakur","Nalbari","Namagiripettai","Namakkal","Nanded-Waghala","Nandgaon","Nandivaram-Guduvancheri","Nandura","Nandurbar","Nandyal","Nangal","Nanjangud","Nanjikottai","Nanpara","Narasapuram","Narasaraopet","Naraura","Narayanpet","Nargund","Narkatiaganj","Narkhed","Narnaul","Narsinghgarh","Narsinghgarh","Narsipatnam","Narwana","Nashik","Nasirabad","Natham","Nathdwara","Naugachhia","Naugawan Sadat","Nautanwa","Navalgund","Navsari","Nawabganj","Nawada","Nawanshahr","Nawapur","Nedumangad","Neem-Ka-Thana","Neemuch","Nehtaur","Nelamangala","Nellikuppam","Nellore","Nepanagar","New Delhi","Neyveli (TS)","Neyyattinkara","Nidadavole","Nilambur","Nilanga","Nimbahera","Nirmal","Niwai","Niwari","Nizamabad","Nohar","Noida","Nokha","Nokha","Nongstoin","Noorpur","North Lakhimpur","Nowgong","Nowrozabad (Khodargama)","Nuzvid","O' Valley","Obra","Oddanchatram","Ongole","Orai","Osmanabad","Ottappalam","Ozar","P.N.Patti","Pachora","Pachore","Pacode","Padmanabhapuram","Padra","Padrauna","Paithan","Pakaur","Palacole","Palai","Palakkad","Palampur","Palani","Palanpur","Palasa Kasibugga","Palghar","Pali","Pali","Palia Kalan","Palitana","Palladam","Pallapatti","Pallikonda","Palwal","Palwancha","Panagar","Panagudi","Panaji","Panamattom","Panchkula","Panchla","Pandharkaoda","Pandharpur","Pandhurna","PandUrban Agglomeration","Panipat","Panna","Panniyannur","Panruti","Panvel","Pappinisseri","Paradip","Paramakudi","Parangipettai","Parasi","Paravoor","Parbhani","Pardi","Parlakhemundi","Parli","Partur","Parvathipuram","Pasan","Paschim Punropara","Pasighat","Patan","Pathanamthitta","Pathankot","Pathardi","Pathri","Patiala","Patna","Patratu","Pattamundai","Patti","Pattran","Pattukkottai","Patur","Pauni","Pauri","Pavagada","Pedana","Peddapuram","Pehowa","Pen","Perambalur","Peravurani","Peringathur","Perinthalmanna","Periyakulam","Periyasemur","Pernampattu","Perumbavoor","Petlad","Phagwara","Phalodi","Phaltan","Phillaur","Phulabani","Phulera","Phulpur","Phusro","Pihani","Pilani","Pilibanga","Pilibhit","Pilkhuwa","Pindwara","Pinjore","Pipar City","Pipariya","Piriyapatna","Piro","Pithampur","Pithapuram","Pithoragarh","Pollachi","Polur","Pondicherry","Ponnani","Ponneri","Ponnur","Porbandar","Porsa","Port Blair","Powayan","Prantij","Pratapgarh","Pratapgarh","Prithvipur","Proddatur","Pudukkottai","Pudupattinam","Pukhrayan","Pulgaon","Puliyankudi","Punalur","Punch","Pune","Punganur","Punjaipugalur","Puranpur","Puri","Purna","Purnia","PurqUrban Agglomerationzi","Purulia","Purwa","Pusad","Puthuppally","Puttur","Puttur","Qadian","Raayachuru","Rabkavi Banhatti","Radhanpur","Rae Bareli","Rafiganj","Raghogarh-Vijaypur","Raghunathganj","Raghunathpur","Rahatgarh","Rahuri","Raiganj","Raigarh","Raikot","Raipur","Rairangpur","Raisen","Raisinghnagar","Rajagangapur","Rajahmundry","Rajakhera","Rajaldesar","Rajam","Rajampet","Rajapalayam","Rajauri","Rajgarh (Alwar)","Rajgarh (Churu)","Rajgarh","Rajgir","Rajkot","Rajnandgaon","Rajpipla","Rajpura","Rajsamand","Rajula","Rajura","Ramachandrapuram","Ramagundam","Ramanagaram","Ramanathapuram","Ramdurg","Rameshwaram","Ramganj Mandi","Ramgarh","Ramnagar","Ramnagar","Ramngarh","Rampur Maniharan","Rampur","Rampura Phul","Rampurhat","Ramtek","Ranaghat","Ranavav","Ranchi","Ranebennuru","Rangia","Rania","Ranibennur","Ranipet","Rapar","Rasipuram","Rasra","Ratangarh","Rath","Ratia","Ratlam","Ratnagiri","Rau","Raurkela","Raver","Rawatbhata","Rawatsar","Raxaul Bazar","Rayachoti","Rayadurg","Rayagada","Reengus","Rehli","Renigunta","Renukoot","Reoti","Repalle","Revelganj","Rewa","Rewari","Rishikesh","Risod","Robertsganj","Robertson Pet","Rohtak","Ron","Roorkee","Rosera","Rudauli","Rudrapur","Rudrapur","Rupnagar","Sabalgarh","Sadabad","Sadalagi","Sadasivpet","Sadri","Sadulpur","Sadulshahar","Safidon","Safipur","Sagar","Sagara","Sagwara","Saharanpur","Saharsa","Sahaspur","Sahaswan","Sahawar","Sahibganj","Sahjanwa","Saidpur","Saiha","Sailu","Sainthia","Sakaleshapura","Sakti","Salaya","Salem","Salur","Samalkha","Samalkot","Samana","Samastipur","Sambalpur","Sambhal","Sambhar","Samdhan","Samthar","Sanand","Sanawad","Sanchore","Sandi","Sandila","Sanduru","Sangamner","Sangareddy","Sangaria","Sangli","Sangole","Sangrur","Sankarankovil","Sankari","Sankeshwara","Santipur","Sarangpur","Sardarshahar","Sardhana","Sarni","Sarsod","Sasaram","Sasvad","Satana","Satara","Sathyamangalam","Satna","Sattenapalle","Sattur","Saunda","Saundatti-Yellamma","Sausar","Savanur","Savarkundla","Savner","Sawai Madhopur","Sawantwadi","Sedam","Sehore","Sendhwa","Seohara","Seoni","Seoni-Malwa","Shahabad","Shahabad, Hardoi","Shahabad, Rampur","Shahade","Shahbad","Shahdol","Shahganj","Shahjahanpur","Shahpur","Shahpura","Shahpura","Shajapur","Shamgarh","Shamli","Shamsabad, Agra","Shamsabad, Farrukhabad","Shegaon","Sheikhpura","Shendurjana","Shenkottai","Sheoganj","Sheohar","Sheopur","Sherghati","Sherkot","Shiggaon","Shikaripur","Shikarpur, Bulandshahr","Shikohabad","Shillong","Shimla","Shirdi","Shirpur-Warwade","Shirur","Shishgarh","Shivamogga","Shivpuri","Sholavandan","Sholingur","Shoranur","Shrigonda","Shrirampur","Shrirangapattana","Shujalpur","Siana","Sibsagar","Siddipet","Sidhi","Sidhpur","Sidlaghatta","Sihor","Sihora","Sikanderpur","Sikandra Rao","Sikandrabad","Sikar","Silao","Silapathar","Silchar","Siliguri","Sillod","Silvassa","Simdega","Sindagi","Sindhagi","Sindhnur","Singrauli","Sinnar","Sira","Sircilla","Sirhind Fatehgarh Sahib","Sirkali","Sirohi","Sironj","Sirsa","Sirsaganj","Sirsi","Sirsi","Siruguppa","Sitamarhi","Sitapur","Sitarganj","Sivaganga","Sivagiri","Sivakasi","Siwan","Sohagpur","Sohna","Sojat","Solan","Solapur","Sonamukhi","Sonepur","Songadh","Sonipat","Sopore","Soro","Soron","Soyagaon","Sri Madhopur","Srikakulam","Srikalahasti","Srinagar","Srinagar","Srinivaspur","Srirampore","Srisailam Project (Right Flank Colony) Township","Srivilliputhur","Sugauli","Sujangarh","Sujanpur","Sullurpeta","Sultanganj","Sultanpur","Sumerpur","Sumerpur","Sunabeda","Sunam","Sundargarh","Sundarnagar","Supaul","Surandai","Surapura","Surat","Suratgarh","SUrban Agglomerationr","Suri","Suriyampalayam","Suryapet","Tadepalligudem","Tadpatri","Takhatgarh","Taki","Talaja","Talcher","Talegaon Dabhade","Talikota","Taliparamba","Talode","Talwara","Tamluk","Tanda","Tandur","Tanuku","Tarakeswar","Tarana","Taranagar","Taraori","Tarbha","Tarikere","Tarn Taran","Tasgaon","Tehri","Tekkalakote","Tenali","Tenkasi","Tenu dam-cum-Kathhara","Terdal","Tezpur","Thakurdwara","Thammampatti","Thana Bhawan","Thane","Thanesar","Thangadh","Thanjavur","Tharad","Tharamangalam","Tharangambadi","Theni Allinagaram","Thirumangalam","Thirupuvanam","Thiruthuraipoondi","Thiruvalla","Thiruvallur","Thiruvananthapuram","Thiruvarur","Thodupuzha","Thoubal","Thrissur","Thuraiyur","Tikamgarh","Tilda Newra","Tilhar","Tindivanam","Tinsukia","Tiptur","Tirora","Tiruchendur","Tiruchengode","Tiruchirappalli","Tirukalukundram","Tirukkoyilur","Tirunelveli","Tirupathur","Tirupathur","Tirupati","Tiruppur","Tirur","Tiruttani","Tiruvannamalai","Tiruvethipuram","Tiruvuru","Tirwaganj","Titlagarh","Tittakudi","Todabhim","Todaraisingh","Tohana","Tonk","Tuensang","Tuljapur","Tulsipur","Tumkur","Tumsar","Tundla","Tuni","Tura","Uchgaon","Udaipur","Udaipur","Udaipurwati","Udgir","Udhagamandalam","Udhampur","Udumalaipettai","Udupi","Ujhani","Ujjain","Umarga","Umaria","Umarkhed","Umbergaon","Umred","Umreth","Una","Unjha","Unnamalaikadai","Unnao","Upleta","Uran Islampur","Uran","Uravakonda","Urmar Tanda","Usilampatti","Uthamapalayam","Uthiramerur","Utraula","Vadakkuvalliyur","Vadalur","Vadgaon Kasba","Vadipatti","Vadnagar","Vadodara","Vaijapur","Vaikom","Valparai","Valsad","Vandavasi","Vaniyambadi","Vapi","Vapi","Varanasi","Varkala","Vasai-Virar","Vatakara","Vedaranyam","Vellakoil","Vellore","Venkatagiri","Veraval","Vidisha","Vijainagar, Ajmer","Vijapur","Vijayapura","Vijayawada","Vijaypur","Vikarabad","Vikramasingapuram","Viluppuram","Vinukonda","Viramgam","Virudhachalam","Virudhunagar","Visakhapatnam","Visnagar","Viswanatham","Vita","Vizianagaram","Vrindavan","Vyara","Wadgaon Road","Wadhwan","Wadi","Wai","Wanaparthy","Wani","Wankaner","Wara Seoni","Warangal","Wardha","Warhapur","Warisaliganj","Warora","Warud","Washim","Wokha","Yadgir","Yamunanagar","Yanam","Yavatmal","Yawal","Yellandu","Yemmiganur","Yerraguntla","Yevla","Zaidpur","Zamania","Zira","Zirakpur","Zunheboto"]})),oF=c((()=>{Zu=["India","Indian Republic","Bharat","Hindustan"]})),sF=c((()=>{qu=["### ###"]})),lF=c((()=>{Qu=["Andaman and Nicobar Islands","Andra Pradesh","Arunachal Pradesh","Assam","Bihar","Chandigarh","Chhattisgarh","Dadar and Nagar Haveli","Daman and Diu","Delhi","Goa","Gujarat","Haryana","Himachal Pradesh","Jammu and Kashmir","Jharkhand","Karnataka","Kerala","Lakshadweep","Madya Pradesh","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Pondicherr","Punjab","Rajasthan","Sikkim","Tamil Nadu","Telangana","Tripura","Uttar Pradesh","Uttarakhand","West Bengal"]})),uF=c((()=>{Yu=["AN","AP","AR","AS","BR","CH","CG","DN","DD","DL","GA","GJ","HR","HP","JK","JH","KA","KL","LD","MP","MH","MN","ML","MZ","NL","OD","PY","PB","RJ","SK","TN","TS","TR","UP","UK","WB"]})),cF=c((()=>{rF(),tF(),oF(),sF(),lF(),uF(),$u={city:Uu,city_name:Wu,default_country:Zu,postcode:qu,state:Qu,state_abbr:Yu}})),dF=c((()=>{Xu=["Pvt Ltd","Limited","Ltd","and Sons","Corp","Group","Brothers"]})),hF=c((()=>{dF(),ec={suffix:Xu}})),pF=c((()=>{ac=["in","com","biz","info","name","net","org","co.in"]})),mF=c((()=>{nc=["gmail.com","yahoo.co.in","hotmail.com"]})),fF=c((()=>{pF(),mF(),ic={domain_suffix:ac,free_email:nc}})),vF=c((()=>{rc=["Aadrika","Aanandinii","Aaratrika","Aarya","Arya","Aashritha","Aatmaja","Atmaja","Abhaya","Adwitiya","Agrata","Ahilya","Ahalya","Aishani","Akshainie","Akshata","Akshita","Akula","Ambar","Amodini","Amrita","Amritambu","Anala","Anamika","Ananda","Anandamayi","Ananta","Anila","Anjali","Anjushri","Anjushree","Annapurna","Anshula","Anuja","Anusuya","Anasuya","Anasooya","Anwesha","Apsara","Aruna","Asha","Aasa","Aasha","Aslesha","Atreyi","Atreyee","Avani","Abani","Avantika","Ayushmati","Baidehi","Vaidehi","Bala","Baala","Balamani","Basanti","Vasanti","Bela","Bhadra","Bhagirathi","Bhagwanti","Bhagwati","Bhamini","Bhanumati","Bhaanumati","Bhargavi","Bhavani","Bhilangana","Bilwa","Bilva","Buddhana","Chakrika","Chanda","Chandi","Chandni","Chandini","Chandani","Chandra","Chandira","Chandrabhaga","Chandrakala","Chandrakin","Chandramani","Chandrani","Chandraprabha","Chandraswaroopa","Chandravati","Chapala","Charumati","Charvi","Chatura","Chitrali","Chitramala","Chitrangada","Daksha","Dakshayani","Damayanti","Darshwana","Deepali","Dipali","Deeptimoyee","Deeptimayee","Devangana","Devani","Devasree","Devi","Daevi","Devika","Daevika","Dhaanyalakshmi","Dhanalakshmi","Dhana","Dhanadeepa","Dhara","Dharani","Dharitri","Dhatri","Diksha","Deeksha","Divya","Draupadi","Dulari","Durga","Durgeshwari","Ekaparnika","Elakshi","Enakshi","Esha","Eshana","Eshita","Gautami","Gayatri","Geeta","Geetanjali","Gitanjali","Gemine","Gemini","Girja","Girija","Gita","Hamsini","Harinakshi","Harita","Heema","Himadri","Himani","Hiranya","Indira","Jaimini","Jaya","Jyoti","Jyotsana","Kali","Kalinda","Kalpana","Kalyani","Kama","Kamala","Kamla","Kanchan","Kanishka","Kanti","Kashyapi","Kumari","Kumuda","Lakshmi","Laxmi","Lalita","Lavanya","Leela","Lila","Leela","Madhuri","Malti","Malati","Mandakini","Mandaakin","Mangala","Mangalya","Mani","Manisha","Manjusha","Meena","Mina","Meenakshi","Minakshi","Menka","Menaka","Mohana","Mohini","Nalini","Nikita","Ojaswini","Omana","Oormila","Urmila","Opalina","Opaline","Padma","Parvati","Poornima","Purnima","Pramila","Prasanna","Preity","Prema","Priya","Priyala","Pushti","Radha","Rageswari","Rageshwari","Rajinder","Ramaa","Rati","Rita","Rohana","Rukhmani","Rukmin","Rupinder","Sanya","Sarada","Sharda","Sarala","Sarla","Saraswati","Sarisha","Saroja","Shakti","Shakuntala","Shanti","Sharmila","Shashi","Shashikala","Sheela","Shivakari","Shobhana","Shresth","Shresthi","Shreya","Shreyashi","Shridevi","Shrishti","Shubha","Shubhaprada","Siddhi","Sitara","Sloka","Smita","Smriti","Soma","Subhashini","Subhasini","Sucheta","Sudeva","Sujata","Sukanya","Suma","Suma","Sumitra","Sunita","Suryakantam","Sushma","Swara","Swarnalata","Sweta","Shwet","Tanirika","Tanushree","Tanushri","Tanushri","Tanya","Tara","Trisha","Uma","Usha","Vaijayanti","Vaijayanthi","Baijayanti","Vaishvi","Vaishnavi","Vaishno","Varalakshmi","Vasudha","Vasundhara","Veda","Vedanshi","Vidya","Vimala","Vrinda","Vrund","Aadi","Aadidev","Aadinath","Aaditya","Aagam","Aagney","Aamod","Aanandaswarup","Anand Swarup","Aanjaneya","Anjaneya","Aaryan","Aryan","Aatmaj","Aatreya","Aayushmaan","Aayushman","Abhaidev","Abhaya","Abhirath","Abhisyanta","Acaryatanaya","Achalesvara","Acharyanandana","Acharyasuta","Achintya","Achyut","Adheesh","Adhiraj","Adhrit","Adikavi","Adinath","Aditeya","Aditya","Adityanandan","Adityanandana","Adripathi","Advaya","Agasti","Agastya","Agneya","Aagneya","Agnimitra","Agniprava","Agnivesh","Agrata","Ajit","Ajeet","Akroor","Akshaj","Akshat","Akshayakeerti","Alok","Aalok","Amaranaath","Amarnath","Amaresh","Ambar","Ameyatma","Amish","Amogh","Amrit","Anaadi","Anagh","Anal","Anand","Aanand","Anang","Anil","Anilaabh","Anilabh","Anish","Ankal","Anunay","Anurag","Anuraag","Archan","Arindam","Arjun","Arnesh","Arun","Ashlesh","Ashok","Atmanand","Atmananda","Avadhesh","Baalaaditya","Baladitya","Baalagopaal","Balgopal","Balagopal","Bahula","Bakula","Bala","Balaaditya","Balachandra","Balagovind","Bandhu","Bandhul","Bankim","Bankimchandra","Bhadrak","Bhadraksh","Bhadran","Bhagavaan","Bhagvan","Bharadwaj","Bhardwaj","Bharat","Bhargava","Bhasvan","Bhaasvan","Bhaswar","Bhaaswar","Bhaumik","Bhaves","Bheeshma","Bhisham","Bhishma","Bhima","Bhoj","Bhramar","Bhudev","Bhudeva","Bhupati","Bhoopati","Bhoopat","Bhupen","Bhushan","Bhooshan","Bhushit","Bhooshit","Bhuvanesh","Bhuvaneshwar","Bilva","Bodhan","Brahma","Brahmabrata","Brahmanandam","Brahmaanand","Brahmdev","Brajendra","Brajesh","Brijesh","Birjesh","Budhil","Chakor","Chakradhar","Chakravartee","Chakravarti","Chanakya","Chaanakya","Chandak","Chandan","Chandra","Chandraayan","Chandrabhan","Chandradev","Chandraketu","Chandramauli","Chandramohan","Chandran","Chandranath","Chapal","Charak","Charuchandra","Chaaruchandra","Charuvrat","Chatur","Chaturaanan","Chaturbhuj","Chetan","Chaten","Chaitan","Chetanaanand","Chidaakaash","Chidaatma","Chidambar","Chidambaram","Chidananda","Chinmayanand","Chinmayananda","Chiranjeev","Chiranjeeve","Chitraksh","Daiwik","Daksha","Damodara","Dandak","Dandapaani","Darshan","Datta","Dayaamay","Dayamayee","Dayaananda","Dayaanidhi","Kin","Deenabandhu","Deepan","Deepankar","Dipankar","Deependra","Dipendra","Deepesh","Dipesh","Deeptanshu","Deeptendu","Diptendu","Deeptiman","Deeptimoy","Deeptimay","Dev","Deb","Devadatt","Devagya","Devajyoti","Devak","Devdan","Deven","Devesh","Deveshwar","Devi","Devvrat","Dhananjay","Dhanapati","Dhanpati","Dhanesh","Dhanu","Dhanvin","Dharmaketu","Dhruv","Dhyanesh","Dhyaneshwar","Digambar","Digambara","Dinakar","Dinkar","Dinesh","Divaakar","Divakar","Deevakar","Divjot","Dron","Drona","Dwaipayan","Dwaipayana","Eekalabya","Ekalavya","Ekaksh","Ekaaksh","Ekaling","Ekdant","Ekadant","Gajaadhar","Gajadhar","Gajbaahu","Gajabahu","Ganak","Ganaka","Ganapati","Gandharv","Gandharva","Ganesh","Gangesh","Garud","Garuda","Gati","Gatik","Gaurang","Gauraang","Gauranga","Gouranga","Gautam","Gautama","Goutam","Ghanaanand","Ghanshyam","Ghanashyam","Giri","Girik","Girika","Girindra","Giriraaj","Giriraj","Girish","Gopal","Gopaal","Gopi","Gopee","Gorakhnath","Gorakhanatha","Goswamee","Goswami","Gotum","Gautam","Govinda","Gobinda","Gudakesha","Gudakesa","Gurdev","Guru","Hari","Harinarayan","Harit","Himadri","Hiranmay","Hiranmaya","Hiranya","Inder","Indra","Indra","Jagadish","Jagadisha","Jagathi","Jagdeep","Jagdish","Jagmeet","Jahnu","Jai","Javas","Jay","Jitendra","Jitender","Jyotis","Kailash","Kama","Kamalesh","Kamlesh","Kanak","Kanaka","Kannan","Kannen","Karan","Karthik","Kartik","Karunanidhi","Kashyap","Kiran","Kirti","Keerti","Krishna","Krishnadas","Krishnadasa","Kumar","Lai","Lakshman","Laxman","Lakshmidhar","Lakshminath","Lal","Laal","Mahendra","Mohinder","Mahesh","Maheswar","Mani","Manik","Manikya","Manoj","Marut","Mayoor","Meghnad","Meghnath","Mohan","Mukesh","Mukul","Nagabhushanam","Nanda","Narayan","Narendra","Narinder","Naveen","Navin","Nawal","Naval","Nimit","Niranjan","Nirbhay","Niro","Param","Paramartha","Pran","Pranay","Prasad","Prathamesh","Prayag","Prem","Puneet","Purushottam","Rahul","Raj","Rajan","Rajendra","Rajinder","Rajiv","Rakesh","Ramesh","Rameshwar","Ranjit","Ranjeet","Ravi","Ritesh","Rohan","Rohit","Rudra","Sachin","Sameer","Samir","Sanjay","Sanka","Sarvin","Satish","Satyen","Shankar","Shantanu","Shashi","Sher","Shiv","Siddarth","Siddhran","Som","Somu","Somnath","Subhash","Subodh","Suman","Suresh","Surya","Suryakant","Suryakanta","Sushil","Susheel","Swami","Swapnil","Tapan","Tara","Tarun","Tej","Tejas","Trilochan","Trilochana","Trilok","Trilokesh","Triloki","Triloki Nath","Trilokanath","Tushar","Udai","Udit","Ujjawal","Ujjwal","Umang","Upendra","Uttam","Vasudev","Vasudeva","Vedang","Vedanga","Vidhya","Vidur","Vidhur","Vijay","Vimal","Vinay","Vishnu","Bishnu","Vishwamitra","Vyas","Yogendra","Yoginder","Yogesh"]})),gF=c((()=>{tc=["Abbott","Achari","Acharya","Adiga","Agarwal","Ahluwalia","Ahuja","Arora","Asan","Bandopadhyay","Banerjee","Bharadwaj","Bhat","Butt","Bhattacharya","Bhattathiri","Chaturvedi","Chattopadhyay","Chopra","Desai","Deshpande","Devar","Dhawan","Dubashi","Dutta","Dwivedi","Embranthiri","Ganaka","Gandhi","Gill","Gowda","Guha","Guneta","Gupta","Iyer","Iyengar","Jain","Jha","Johar","Joshi","Kakkar","Kaniyar","Kapoor","Kaul","Kaur","Khan","Khanna","Khatri","Kocchar","Mahajan","Malik","Marar","Menon","Mehra","Mehrotra","Mishra","Mukhopadhyay","Nayar","Naik","Nair","Nambeesan","Namboothiri","Nehru","Pandey","Panicker","Patel","Patil","Pilla","Pillai","Pothuvaal","Prajapat","Rana","Reddy","Saini","Sethi","Shah","Sharma","Shukla","Singh","Sinha","Somayaji","Tagore","Talwar","Tandon","Trivedi","Varrier","Varma","Varman","Verma"]})),kF=c((()=>{vF(),gF(),oc={first_name:rc,last_name:tc}})),yF=c((()=>{sc=["+919##-###-####","+919#########","+91-9##-#######","+918##-###-####","+918#########","+91-8##-#######","+917##-###-####","+917#########","+91-7##-#######","+916##-###-####","+916#########","+91-6##-#######"]})),bF=c((()=>{yF(),lc={formats:sc}})),SF=c((()=>{cF(),hF(),fF(),kF(),bF(),uc={title:"English (India)",address:$u,company:ec,internet:ic,name:oc,phone_number:lc}})),AF=c((()=>{cc=["#{city_prefix}"]})),MF=c((()=>{dc=["Abala","Abalakiri","Bekirikiri","Bela","Belatiwa","Bokodo","Ibinta","Ibiono Ewura","Farin Yashe","Fedare","Fobir","Fobro","Gabgell","Gamajigo","Gana","Gana Daji","Gidan Hardo","Abagbo","Abalabi","Abaranjeh","Abatiwa","Abegede","Abekkun","Abule Ijesha","Abule-Nla","Adata","Addo","Adekanbi","Adeleye","Ado","Ado Odo","Afami","Afanji","Afowo Doforo","Afowowa","Agada","Agaja","Agala","Agani","Aganni","Agaw Awusa","Agaw Shasha","Agbaku","Agbara","Agbede","Agbedi","Agbejedo","Agbele","Agbelekale","Agboju","Agboku","Agbon","Agbonyedo","Agbowa","Agboyi","Age Mowo","Agege","Agelete","Agerige","Agidi","Agidingbi","Ago Egun","Ago Hausa","Ago Sasa","Agomu","Agonrin","Agonu","Aguda","Agun","Agunfoye","Agura","Ahanfe","Ahovo","Ahun","Aiyede","Aiyeteju","Aiyetoro","Aiyetoto-Asogun","Aja","Ajagambari","Ajara","Ajara Agamaden","Ajebandele","Ajebaw","Ajebo","Ajegbenwa","Ajegunle","Ajelanwa","Ajerogun","Ajibade","Ajibawo","Ajibo","Ajido","Ajise","Ajumo","Akando","Akangba","Akarakumo","Akawdo","Akawkaw","Akere","Akessan","Akete","Akinbo","Akinlade","Akinogun","Akinyele","Akio","Akobale","Akodo","Akoko","Akore","Akowonjo","Alagba","Alagbede","Alagbon","Alago","name"," ","Alagogo","Alaguntan","Alaiyabiagba","Alapako","Alaparu","Alaparun","Alapoti","Alaru","Alasia","Ale","Aliayabiagba","Alimosho","Alimoso","Amuwo","Anagoji","Anagunji","Angorin","Animashawun","Animshaun","Apa","Apamu","Apapa","Apapa Eleko","Apese","Appa","Aqani","Aradagun","Arapagi Oloko","Arapagi-Awlawkaw","Arapagi-Ejetu","Araromi","Araromi Orita","Araromi Tawpe","Araromi Tope","Arida","Arigo","Ashon","Asipa","Ason","Asore","Asunora","Atan","Atapa","Awado","Awaiye","Awaye","Awdan Ilaro","Awdan Iyasi","Awfin","Awgawgawraw","Awgawmbaw","Awja-Ikoradu","Awjaw","Awoyaya","Awreta","Awteyi","Awwaw","Ayekoshe","Ayinla","Ayobo","Babalawo","Badagri","Badagry","Badawre","Badore","Baiyeku","Balagbe","Balogun","Bamgbose","Bamgboshe","Bandu","Banimgbe","Banimgbo","Bariga","Baruwa","Bassa","Beshi","Bodashe","Bode Ase","Bolorunpelu","Cardoso","Coker","Coker Market","Cokers Market","Dankaka","Doforo","Dosa","Dosemo","Ebute Ikorodu","Ebute Leki","Ebute Lekki","Ebute-Egga","Ebute-Metta","Efiran","Egan","Egba","Egbe","Eggan","Egudu Bale","Egun","name"," ","Eiyekose","Ejigbo","Ejinrin","Ejirin","Eko","Ekoro","Ekundayo","Elachi","Elemoki","Eleputu","Elere","Elesin","Eluju","Emu","Epe","Epeh","Era","Ere","Eregun","Erekiti","Erukan","Eruku","Erunkan","Etegbin","Euni","Ewekora","Ewekoro","Ewu","Ewu Ebi","Falomo","Fatade","Fatedo","Fonji","Ganme","Ganyingbo","Gbagidan","Gbaj","Gbaji","Gbanko","Gberegbe","Gberigbe","Gbesse","Gbeta","Gbodo","Gbogbo","Gbogije","Gbokuta","George","Ginti","Hausa","Henume","Hundo","Iba","Ibadan","Ibasa","Ibasha","Ibatefin","Ibawe Kekere","Ibawe Tukuru","Ibbojo","Ibefon","Ibefum","Ibefun","Ibeju","Ibereko","Iberekodo","Ibese","Ibeshe","Ibeshi","Ibiku","Ibode","Ibogun Adina","Ibogun Akiode","Ibogun Sowunmi","Iboju","Ibon","Ibopa","Ida","Idain Isaga","Idain-Ishaga","Idamo","Idanfuru","Idashaw","Idaso","Idata","Iddo","Ide","Idele","Ideno","Idi Agbon Agana","Idi Iroko","Idi Ofe","Idi Oro","Idi-Off","Idimarun","Idimi","Idimu","Idiori","Idiroko","Idobarun","name"," ","Idoforo","Idolanja","Idole","Idolehin","Idolorisha","Idolosa","Idomu","Idopetu","Idosa","Idosemo","Idowu","Ifako","Igami","Igando","Igando Awlawja","Iganmi","Iganmu","Iganmu Siding","Igbalu","Igbe","Igbe Ewoliwo","Igbede","Igbegodo","Igbekun","Igbele","Igbessa","Igbin","Igbin Oloya","Igbo","Igbo Ejo","Igbo Fipe","Igbobi","Igbodu","Igboefon","Igbogbele","Igbogila","Igbogun","Igbogun-Sowunmi","Igboje","Igbokushun","Igbolobi","Igbologun","Igboloye","Igbopa","Igborosun","Igbosa","Igbosere","Igboshere","Igodonu","Igoro","Igu","Igude","Igunnu Akabo","Ijagemo","Ijaiye","Ijako","Ijako Orile","Ijanikin","Ijawmi","Ijawmu","Ijawtun","Ijayie","Ijede","Ijegun","Ijero","Ijesa-Tedo","Ijofin","Ijomi","Ijomu","Ijora","Ijora Village","Ijotan","Iju","Iju Junction","Iju Water Works","Ikare","Ikate","Ikawga","Ikawga-Zebe","Ikawlaji","Ikawta","Ikeja","Ikoga","Ikoga Ile","Ikogbo","Ikolaja","Ikorodu","Ikosi","Ikotan","Ikotun","Ikoyi","Ikuata","Ilade","Ilado","Ilado Ogunu","Ilagbo","Ilasa","Ilashe","Ilemere","Ilepa","name"," ","Ileppaw","Ilera","Ilikiti","Ilo","Ilogbo","Ilogbo Elegba","Iloro","Ilugboro","Ilumawfin","Ilumofin","Imare","Imawte","Imeke","Imeri","Imeseju","Imore","Imoru","Imota","Inogbe","Inupa","Inupa Kekere","Ipaja","Ipakan","Ipanmi","Ipatira","Ipeshu","Ipesu","Ipewu","Ipokia","Iponri","Ipota","Iragbo","Iragon","Iranla","Irede","Irewe","Iru","Isagatedo","Isagbo","Isagbo Ere","Isagira","Isaku","Isalu","Isashi","Isasi","Isawo","Ise","Iseku","Isekun","Iseri-Osun","Ishaga","Ishagbo","Ishagira","Ishasi","Ishawo","Isheri-Olofin","Ishersi","Ishola","Isiu","Isiwu","Isola","Isolo","Isunba","Ita Egbe","Ita Onimosa","Itagbo","Itamaga","Itawga","Itawikin","Itawmu","Iteku","Itele","Itere","Itire","Itirin","Ito Omu","Itoga","Itohun","Itoikin","Itokin","Itomu","Itori","Iwaya","Iwerekun","Iworo","Iwuku","Iyafin","Iyagbe","Iyasi","Iyesi","Jaguna","Janikin","Jibowu","Jinadu","Kadara","Kafara","Kajola","Kajola Iboro","Kandoro","Kese"]})),TF=c((()=>{hc=["Nigeria","Federal Republic of Nigeria","NG","NGN"]})),_F=c((()=>{pc=["#####","####"]})),wF=c((()=>{mc=["FCT","ABIA","ADAMAWA","Akwa Ibom","Anambra","Bauchi","Bayelsa","Benue","Bornu","Cross River","Delta","Ebonyi","Edo","Ekiti","Enugu","Gombe","Imo","Jigawa","Kaduna","Kano","Katsina","Kebbi","Kogi","Kwara","Lagos","Nasarawa","Niger","Ogun","Ondo","Osun","Oyo","Plateau","Rivers","Sokoto","Taraba","Yobe","Zamfara"]})),jF=c((()=>{AF(),MF(),TF(),_F(),wF(),fc={city:cc,city_prefix:dc,default_country:hc,postcode:pc,state:mc}})),EF=c((()=>{vc=["Venture","Ltd","Plc"]})),NF=c((()=>{EF(),gc={suffix:vc}})),BF=c((()=>{kc=["com.ng","com","org.ng","com","ng"]})),PF=c((()=>{BF(),yc={domain_suffix:kc}})),LF=c((()=>{bc=["Adaugo","Akunna","Aminat","Aminu","Augustina","Ayebatari","Cherechi","Chiamaka","Chimamanda","Chinyere","Chizoba","Ebiere","Efe","Fatima","Ifeoma","Ifunanya","Isioma","Jolayemi","Lola","Obioma","Omawunmi","Omolara","Onome","Rasheedah","Sekinat","Simisola","Sumayyah","Titi","Titilayo","Toluwani","Zainab"]})),DF=c((()=>{Sc=["Adaugo","Akunna","Aminat","Aminu","Augustina","Ayebatari","Cherechi","Chiamaka","Chimamanda","Chinyere","Chizoba","Ebiere","Efe","Fatima","Ifeoma","Ifunanya","Isioma","Jolayemi","Lola","Obioma","Omawunmi","Omolara","Onome","Rasheedah","Sekinat","Simisola","Sumayyah","Titi","Titilayo","Toluwani","Zainab","Abimbola","Abisola","Abisoye","Adeboye","Adedayo","Adegoke","Akande","Akanni","Alade","Ayinde","Azubuike","Banji","Bankole","Buchi","Bukola","Chinedu","Chisom","Chukwu","Damilare","Damilola","Danjuma","Ebiowei","Emeka","Emmanuel","Esse","Funmilade","Funmilayo","Gbeminiyi","Gbemisola","Habiba","Ifeanyichukwu","Ikenna","Ikhidie","Ireti","Jadesola","Johnson","Kayode","Kemi","Kubra","Kubura","Lolade","Makinwa","Mohammed","Musa","Muyiwa","Nnamdi","Olaide","Olufunmi","Olumide","Oluwunmi","Onoriode","Remilekun","Rotimi","Shade","Shalewa","Sname","Tari","Temitope","Titilope","Tobiloba","Toke","Tomiloba","Tope","Uzodimma","Wale","Yakubu","Yusuf","Yusuf"]})),xF=c((()=>{Ac=["Abiodun","Abiola","Abodunrin","Abosede","Adaobi","Adebayo","Adegboye","Adegoke","Ademayowa","Ademola","Adeniyan","Adeoluwa","Aderinsola","Aderonke","Adesina","Adewale","Adewale","Adewale","Adewunmi","Adewura","Adeyemo","Afolabi","Afunku","Agboola","Agboola","Agnes","Aigbiniode","Ajakaiye","Ajose-adeogun","Akeem-omosanya","Akerele","Akintade","Aligbe","Amaechi","Aminat","Aremu","Atanda","Ayisat","Ayobami","Ayomide","Ayomide","Babalola","Babatunde","Balogun","Bamisebi","Bello","Busari","Chibike","Chibuike","Chidinma","Chidozie","Christian","Clare","David","David","Ebubechukwu","Egbochukwu","Ehigiator","Ekwueme","Elebiyo","Elizabeth","Elizabeth","Elizabeth","Emmanuel","Emmanuel","Esther","Funmilayo","Gbadamosi","Gbogboade","Grace","Habeeb","Hanifat","Isaac","Ismail","Isokun","Israel","Iyalla","Jamiu","Jimoh","Joshua","Justina","Katherine","Kayode","Kayode","Kimberly","Ladega","Latifat","Lawal","Leonard","Makuachukwu","Maryam","Maryjane","Mayowa","Miracle","Mobolaji","Mogbadunade","Motalo","Muinat","Mukaram","Mustapha","Mutiat","Ndukwu","Ngozi","Nojeem","Nwachukwu","Nwogu","Nwuzor","Obiageli","Obianuju","Odunayo","Odunayo","Ogunbanwo","Ogunwande","Okonkwo","Okunola","Oladeji","Oladimeji","Olaoluwa","Olasunkanmi","Olasunkanmi-fasayo","Olawale","Olubukola","Olubunmi","Olufeyikemi","Olumide","Olutola","Oluwakemi","Oluwanisola","Oluwaseun","Oluwaseyi","Oluwashina","Oluwatosin","Omobolaji","Omobolanle","Omolara","Omowale","Onohinosen","Onose","Onyinyechukwu","Opeyemi","Osuagwu","Oyebola","Oyelude","Oyinkansola","Peter","Sabdat","Saheed","Salami","Samuel","Sanusi","Sarah","Segunmaru","Sekinat","Sulaimon","Sylvester","Taiwo","Tamunoemi","Tella","Temitope","Tolulope","Uchechi","Wasiu","Wilcox","Wuraola","Yaqub","Yussuf"]})),CF=c((()=>{Mc=["Abimbola","Abisola","Abisoye","Adeboye","Adedayo","Adegoke","Akande","Akanni","Alade","Ayinde","Azubuike","Banji","Bankole","Buchi","Bukola","Chinedu","Chisom","Chukwu","Damilare","Damilola","Danjuma","Ebiowei","Emeka","Emmanuel","Esse","Funmilade","Funmilayo","Gbeminiyi","Gbemisola","Habiba","Ifeanyichukwu","Ikenna","Ikhidie","Ireti","Jadesola","Johnson","Kayode","Kemi","Kubra","Kubura","Lolade","Makinwa","Mohammed","Musa","Muyiwa","Nnamdi","Olaide","Olufunmi","Olumide","Oluwunmi","Onoriode","Remilekun","Rotimi","Shade","Shalewa","Sname","Tari","Temitope","Titilope","Tobiloba","Toke","Tomiloba","Tope","Uzodimma","Wale","Yakubu","Yusuf","Yusuf"]})),KF=c((()=>{Tc=["#{first_name} #{last_name}","#{last_name} #{first_name}"]})),RF=c((()=>{LF(),DF(),xF(),CF(),KF(),_c={female_first_name:bc,first_name:Sc,last_name:Ac,male_first_name:Mc,name:Tc}})),zF=c((()=>{wc=["0803 ### ####","0703 ### ####","234809 ### ####","+234 802 ### ####","0805### ####"]})),OF=c((()=>{zF(),jc={formats:wc}})),IF=c((()=>{jF(),NF(),PF(),RF(),OF(),Ec={title:"Nigeria (English)",address:fc,company:gc,internet:yc,name:_c,phone_number:jc}})),VF=c((()=>{Nc=["United States","United States of America","USA"]})),GF=c((()=>{Bc={AK:{min:99501,max:99950},AL:{min:35004,max:36925},AR:{min:71601,max:72959},AZ:{min:85001,max:86556},CA:{min:90001,max:96162},CO:{min:80001,max:81658},CT:{min:6001,max:6389},DC:{min:20001,max:20039},DE:{min:19701,max:19980},FL:{min:32004,max:34997},GA:{min:30001,max:31999},HI:{min:96701,max:96898},IA:{min:50001,max:52809},ID:{min:83201,max:83876},IL:{min:60001,max:62999},IN:{min:46001,max:47997},KS:{min:66002,max:67954},KY:{min:40003,max:42788},LA:{min:70001,max:71232},MA:{min:1001,max:2791},MD:{min:20331,max:20331},ME:{min:3901,max:4992},MI:{min:48001,max:49971},MN:{min:55001,max:56763},MO:{min:63001,max:65899},MS:{min:38601,max:39776},MT:{min:59001,max:59937},NC:{min:27006,max:28909},ND:{min:58001,max:58856},NE:{min:68001,max:68118},NH:{min:3031,max:3897},NJ:{min:7001,max:8989},NM:{min:87001,max:88441},NV:{min:88901,max:89883},NY:{min:6390,max:6390},OH:{min:43001,max:45999},OK:{min:73001,max:73199},OR:{min:97001,max:97920},PA:{min:15001,max:19640},PR:{min:0,max:0},RI:{min:2801,max:2940},SC:{min:29001,max:29948},SD:{min:57001,max:57799},TN:{min:37010,max:38589},TX:{min:75503,max:79999},UT:{min:84001,max:84784},VA:{min:20040,max:20041},VT:{min:5001,max:5495},WA:{min:98001,max:99403},WI:{min:53001,max:54990},WV:{min:24701,max:26886},WY:{min:82001,max:83128}}})),HF=c((()=>{VF(),GF(),Pc={default_country:Nc,postcode_by_state:Bc}})),FF=c((()=>{Lc=["com","us","biz","info","name","net","org"]})),JF=c((()=>{FF(),Dc={domain_suffix:Lc}})),UF=c((()=>{xc=["201","202","203","205","206","207","208","209","210","212","213","214","215","216","217","218","219","224","225","227","228","229","231","234","239","240","248","251","252","253","254","256","260","262","267","269","270","276","281","283","301","302","303","304","305","307","308","309","310","312","313","314","315","316","317","318","319","320","321","323","330","331","334","336","337","339","347","351","352","360","361","386","401","402","404","405","406","407","408","409","410","412","413","414","415","417","419","423","424","425","434","435","440","443","445","464","469","470","475","478","479","480","484","501","502","503","504","505","507","508","509","510","512","513","515","516","517","518","520","530","540","541","551","557","559","561","562","563","564","567","570","571","573","574","580","585","586","601","602","603","605","606","607","608","609","610","612","614","615","616","617","618","619","620","623","626","630","631","636","641","646","650","651","660","661","662","667","678","682","701","702","703","704","706","707","708","712","713","714","715","716","717","718","719","720","724","727","731","732","734","737","740","754","757","760","763","765","770","772","773","774","775","781","785","786","801","802","803","804","805","806","808","810","812","813","814","815","816","817","818","828","830","831","832","835","843","845","847","848","850","856","857","858","859","860","862","863","864","865","870","872","878","901","903","904","906","907","908","909","910","912","913","914","915","916","917","918","919","920","925","928","931","936","937","940","941","947","949","952","954","956","959","970","971","972","973","975","978","979","980","984","985","989"]})),WF=c((()=>{Cc=["201","202","203","205","206","207","208","209","210","212","213","214","215","216","217","218","219","224","225","227","228","229","231","234","239","240","248","251","252","253","254","256","260","262","267","269","270","276","281","283","301","302","303","304","305","307","308","309","310","312","313","314","315","316","317","318","319","320","321","323","330","331","334","336","337","339","347","351","352","360","361","386","401","402","404","405","406","407","408","409","410","412","413","414","415","417","419","423","424","425","434","435","440","443","445","464","469","470","475","478","479","480","484","501","502","503","504","505","507","508","509","510","512","513","515","516","517","518","520","530","540","541","551","557","559","561","562","563","564","567","570","571","573","574","580","585","586","601","602","603","605","606","607","608","609","610","612","614","615","616","617","618","619","620","623","626","630","631","636","641","646","650","651","660","661","662","667","678","682","701","702","703","704","706","707","708","712","713","714","715","716","717","718","719","720","724","727","731","732","734","737","740","754","757","760","763","765","770","772","773","774","775","781","785","786","801","802","803","804","805","806","808","810","812","813","814","815","816","817","818","828","830","831","832","835","843","845","847","848","850","856","857","858","859","860","862","863","864","865","870","872","878","901","903","904","906","907","908","909","910","912","913","914","915","916","917","918","919","920","925","928","931","936","937","940","941","947","949","952","954","956","959","970","971","972","973","975","978","979","980","984","985","989"]})),ZF=c((()=>{UF(),WF(),Kc={area_code:xc,exchange_code:Cc}})),qF=c((()=>{HF(),JF(),ZF(),Rc={title:"English (United States)",address:Pc,internet:Dc,phone_number:Kc}})),QF=c((()=>{zc=["#{city_prefix}"]})),YF=c((()=>{Oc=["Polokwane","Johannesburg","Pretoria","Tshwane","Durban","Pietermaritzburg","Nelspruit","Cape Town","Stellenbosch","Port Elizabeth","East London","Kimberley","Rustenburg","Bloemfontein "]})),$F=c((()=>{Ic=["South Africa","The Republic of South Africa","SA","South Africa"]})),XF=c((()=>{Vc=["#####","####"]})),eJ=c((()=>{Gc=["Limpopo","Gauteng","Free State","North West","Northern Cape","Western Cape","KwaZulu-Natal","Mpumalanga","Eastern Cape"]})),aJ=c((()=>{QF(),YF(),$F(),XF(),eJ(),Hc={city:zc,city_prefix:Oc,default_country:Ic,postcode:Vc,state:Gc}})),nJ=c((()=>{Fc=["+2760 ### ####","+2761 ### ####","+2763 ### ####","+2772 ### ####","+2773 ### ####","+2774 ### ####","+2776 ### ####","+2779 ### ####","+2781 ### ####","+2782 ### ####","+2783 ### ####","+2784 ### ####","082 ### ####","084 ### ####","083 ### ####","065 ### ####","082#######","082 #######"]})),iJ=c((()=>{nJ(),Jc={formats:Fc}})),rJ=c((()=>{Uc=["Pty Ltd","Ltd","CC"]})),tJ=c((()=>{rJ(),Wc={suffix:Uc}})),oJ=c((()=>{Zc=["co.za","com","org.za","info","net.za"]})),sJ=c((()=>{oJ(),qc={domain_suffix:Zc}})),lJ=c((()=>{Qc=["Mary","Patricia","Linda","Barbara","Elizabeth","Jennifer","Susan","Margaret","Dorothy","Lisa","Karen","Helen","Sandra","Donna","Carol","Ruth","Sharon","Michelle","Laura","Sarah","Kimberly","Deborah","Jessica","Shirley","Cynthia","Angela","Melissa","Brenda","Amy","Anna","Rebecca","Kathleen","Amanda","Stephanie","Carolyn","Christine","Marie","Janet","Catherine","Ann","Joyce","Diane","Alice","Julie","Heather","Teresa","Evelyn","Cheryl","Katherine","Joan","Ashley","Judith","Rose","Janice","Kelly","Nicole","Judy","Christina","Kathy","Theresa","Beverly","Denise","Tammy","Irene","Jane","Lori","Rachel","Marilyn","Andrea","Kathryn","Louise","Sara","Anne","Jacqueline","Julia","Tina","Paula","Diana","Annie","Lillian","Emily","Robin","Rita","Tracy","Edna","Tiffany","Carmen","Cindy","Edith","Kim","Sherry","Shannon","Ethel","Ellen","Elaine","Charlotte","Monica","Pauline","Emma","Juanita","Anita","Rhonda","Hazel","Amber","Debbie","Clara","Lucille","Joanne","Eleanor","Megan","Alicia","Suzanne","Michele","Gail","Geraldine","Lauren","Cathy","Joann","Lorraine","Lynn","Erica","Beatrice","Bernice","Audrey","Yvonne","Annette","Samantha","Dana","Stacy","Ana","Renee","Ida","Vivian","Roberta","Melanie","Yolanda","Jeanette","Katie","Kristen","Vanessa","Alma","Sue","Elsie","Beth","Jeanne","Vicki","Carla","Tara","Rosemary","Eileen","Lucy","Stacey","Wilma","Gina","Kristin","Jessie","Natalie","Charlene","Melinda","Maureen","Colleen","Allison","Tamara","Joy","Claudia","Jackie","Marcia","Tanya","Nellie","Marlene","Heidi","Glenda","Lydia","Viola","Courtney","Marian","Stella","Caroline","Vickie","Maxine","Irma","Christy","Deanna","Hilda","Jennie","Nora","Nina","Cassandra","Leah","Priscilla","Carole","Olga","Billie","Dianne","Tracey","Leona","Jenny","Felicia","Sonia","Kristina","Shelly","Sherri","Erika","Katrina","Claire","Lindsay","Belinda","Margarita","Sheryl","Natasha","Molly","Cecilia","Kristi","Brandi","Blanche","Sandy","Rosie","Joanna","Iris","Eunice","Angie","Lynda","Madeline","Amelia","Monique","Maggie","Kayla","Sonya","Jan","Lee","Kristine","Candace","Alison","Yvette","Melody","Olivia","Kristy","Antoinette","Candice","Bridget","Karla","Celia","Gayle","Vicky","Lynne","Sheri","Marianne","Kara","Jacquelyn","Erma","Leticia","Krista","Roxanne","Robyn","Rosalie","Alexandra","Brooke","Bethany","Bernadette","Traci","Nichole","Krystal","Angelina","Nadine","Estelle","Dianna","Rosemarie","Desiree","Lynette","Cristina","Leigh","Meghan","Eloise","Rochelle","Jana","Gwen","Kerry","Jenna","Tricia","Laverne","Alexis","Tasha","Kellie","Sonja","Mandy","Lorene","Elsa","Camille","Tami","Elisa","Kristie"]})),uJ=c((()=>{Yc=["Rapulane","Nthabiseng","Kopano","Mpho","Lungelo","Ziyanda","Nqobile","Monde","Mary","Patricia","Linda","Barbara","Elizabeth","Jennifer","Susan","Margaret","Dorothy","Lisa","Karen","Helen","Sandra","Donna","Carol","Ruth","Sharon","Michelle","Laura","Sarah","Kimberly","Deborah","Jessica","Shirley","Cynthia","Angela","Melissa","Brenda","Amy","Anna","Rebecca","Kathleen","Amanda","Stephanie","Carolyn","Christine","Marie","Janet","Catherine","Ann","Joyce","Diane","Alice","Julie","Heather","Teresa","Evelyn","Cheryl","Katherine","Joan","Ashley","Judith","Rose","Janice","Kelly","Nicole","Judy","Christina","Kathy","Theresa","Beverly","Denise","Tammy","Irene","Jane","Lori","Rachel","Marilyn","Andrea","Kathryn","Louise","Sara","Anne","Jacqueline","Julia","Tina","Paula","Diana","Annie","Lillian","Emily","Robin","Rita","Tracy","Edna","Tiffany","Carmen","Cindy","Edith","Kim","Sherry","Shannon","Ethel","Ellen","Elaine","Charlotte","Monica","Pauline","Emma","Juanita","Anita","Rhonda","Hazel","Amber","Debbie","Clara","Lucille","Joanne","Eleanor","Megan","Alicia","Suzanne","Michele","Gail","Geraldine","Lauren","Cathy","Joann","Lorraine","Lynn","Erica","Beatrice","Bernice","Audrey","Yvonne","Annette","Samantha","Dana","Stacy","Ana","Renee","Ida","Vivian","Roberta","Melanie","Yolanda","Jeanette","Katie","Kristen","Vanessa","Alma","Sue","Elsie","Beth","Jeanne","Vicki","Carla","Tara","Rosemary","Eileen","Lucy","Stacey","Wilma","Gina","Kristin","Jessie","Natalie","Charlene","Melinda","Maureen","Colleen","Allison","Tamara","Joy","Claudia","Jackie","Marcia","Tanya","Nellie","Marlene","Heidi","Glenda","Lydia","Viola","Courtney","Marian","Stella","Caroline","Vickie","Maxine","Irma","Christy","Deanna","Hilda","Jennie","Nora","Nina","Cassandra","Leah","Priscilla","Carole","Olga","Billie","Dianne","Tracey","Leona","Jenny","Felicia","Sonia","Kristina","Shelly","Sherri","Erika","Katrina","Claire","Lindsay","Belinda","Margarita","Sheryl","Natasha","Molly","Cecilia","Kristi","Brandi","Blanche","Sandy","Rosie","Joanna","Iris","Eunice","Angie","Lynda","Madeline","Amelia","Monique","Maggie","Kayla","Sonya","Jan","Lee","Kristine","Candace","Alison","Yvette","Melody","Olivia","Kristy","Antoinette","Candice","Bridget","Karla","Celia","Gayle","Vicky","Lynne","Sheri","Marianne","Kara","Jacquelyn","Erma","Leticia","Krista","Roxanne","Robyn","Rosalie","Alexandra","Brooke","Bethany","Bernadette","Traci","Nichole","Krystal","Angelina","Nadine","Estelle","Dianna","Rosemarie","Desiree","Lynette","Cristina","Leigh","Meghan","Eloise","Rochelle","Jana","Gwen","Kerry","Jenna","Tricia","Laverne","Alexis","Tasha","Kellie","Sonja","Mandy","Lorene","Elsa","Camille","Tami","Elisa","Kristie","James","John","Robert","Michael","William","David","Richard","Thomas","Charles","Christopher","Daniel","Dante","Paul","Mark","George","Kenneth","Steven","Edward","Brian","Ronald","Anthony","Albert","Alfred","Kevin","Jason","Matthew","Gary","Timothy","Frank","Eric","Stephen","Andrew","Raymond","Greg","Joshua","Jerry","Dennis","Peter","Henry","Carl","Arthur","Ryan","Roger","Joe","Juan","Jonathan","Justin","Terry","Gerald","Keith","Samuel","Willie","Ralph","Roy","Brandon","Adam","Harry","Wayne","Billy","Steve","Louis","Jeremy","Howard","Eugene","Carlos","Russell","Bobby","Victor","Martin","Ernest","Phillip","Craig","Alan","Shawn","Sean","Philip","Chris","Johnny","Earl","Jimmy","Bryan","Tony","Luis","Mike","Stanley","Leonard","Nathan","Dale","Manuel","Rodney","Curtis","Norman","Allen","Marvin","Vincent","Glenn","Travis","Jacob","Kyle","Francis","Bradley","Joel","Edwin","Eddie","Barry","Alexander","Bernard","Marcus","Micheal","Theodore","Clifford","Miguel","Oscar","Jay","Jim","Tom","Calvin","Alex","Jon","Ronnie","Bill","Lloyd","Tommy","Leon","Derek","Warren","Darrell","Jerome","Leo","Tim","Wesley","Gordon","Dean","Greg","Jorge","Dustin","Derrick","Dan","Herman","Glen","Shane","Rick","Brent","Tyler","Marc","Ruben","Brett","Nathaniel","Rafael","Leslie","Edgar","Raul","Ben","Chester","Cecil","Duane","Franklin","Andre","Elmer","Brad","Gabriel","Ron","Mitchell","Roland","Arnold","Harvey","Jared","Adrian","Karl","Cory","Claude","Erik","Darryl","Jamie","Neil","Jessie","Christian","Ted","Mathew","Tyrone","Darren","Kurt","Allan","Guy","Max","Dwayne","Ian","Ken","Bob","Dave","Ivan","Johnnie","Sid","Sidney","Byron","Julian","Morris","Clifton","Willard","Daryl","Ross","Andy","Kirk","Terrence","Fred","Freddie","Wade","Stuart","Joey","Nick","Julius","Trevor","Luke","Gerard","Hubert","Shaun","Matt","Cameron","Neal","Wilbur","Grant","Jean","Johnathan","Rudolph","Rudy","Marco","Garry","Bennie","Ed","Colin","Earnest","Lucas","Benny","Noel","Garrett","Gregg","Devin","Kim","Simon","Rufus","Clint","Josh","Hugo","Erick","Frankie","Stewart","Terence","Conrad","Percy","Tommie","Jan"]})),cJ=c((()=>{$c=["Dlamini","Zulu","Mabunda","Makhanya","Khoza","Zuma","Zondi","Abbott","Adams","Anderson","Adcock","Ashley","Amla","Baloyi","Bailey","Barrows","Barton","Berge","Bernhard","Bernier","Boyle","Braun","Blanckenberg","Brekke","Brown","Bruen","Bacher","Boucher","Bromfield","Benjamin","Bongo","Bhana","Bhengu","Carter","Cameron","Champlin","Collins","Cullinan","Chetty","Cook","Connelly","Crooks","Cummings","Cassim","Dube","Dhlamini","Daniel","Davis","Dower","Dixon","Dickinson","Douglas","Deane","Ebert","Elworthy","Feest","Fuller","Fish","Fisher","Fichardt","Govender","Gupta","Gandhi","Gibson","Gibbs","Gleason","Goonam","Gordhan","Goodwin","Grady","Graham","Grant","Green","Greenholt","Grimes","Hlongwane","Harris","Hall","Horne","Harvey","Hearne","Heller","Herzog","Hudson","Hlatshwayo","Hitchinson","Hathorn","Hayworth","Henderson","Jacobs","Jacobson","Johnson","Johnston","Jones","Joseph","Kalyan","Kathrada","King","Klusener","Klein","Keith","Kennedy","Kuhn","Khumalu","Khoza","Kunene","Kempis","Kemp","Kubheka","Khuzwayo","Linsey","Lowe","Letsoalo","Mhlanga","Mabaso","Mazibuko","Moosa","Mhlongo","Mahlangu","Markham","Mansell","Marvin","Mayer","Mbatha","Maseko","Milton","Mkhize","Moses","McKenzie","McMillan","McLaren","McLean","Miller","Mills","Mitchell","Mchunu","Munsamy","Mnisi","Moen","Motaung","Mudau","Mohr","Monahan","Moore","Moosa","Moonsamy","Mphahlele","Morar","Molefe","Mthembu","Muller","Murray","Moloi","Mofokeng","Modise","Mtshali","Mathebula","Mthethwa","Maluleke","Mokwena","Motloung","Mahabeer","Mngomezulu","Nolan","Nair","Ndlovu","Nkosi","Ngcobo","Ngwenya","Ntuli","Nxumalo","Ngubane","Nhlapo","Ndaba","Nkomo","Oliphant","Ochse","O'Linn","Patel","Parker","Parkin","Pillay","Parnell","Peterson","Procter","Poore","Pollock","Powell","Price","Prince","Pithey","Reilly","Reid","Rowe","Roberts","Richards","Richardson","Schmidt","Schultz","Stewart","Symcox","Smith","Stokes","Sinclair","Singh","Shongwe","Sibiya","Schwarz","Snooke","Sithole","Terry","Thompson","Tromp","Tuckett","Taylor","Tsabalala","Wesley","Walsh","Weber","Weimann","Willoughby","White","Welch","West","Williamson","Ziemann","Albertyn","Bosman","Bester","Truter","Tsotetsi","Prinsloo","van Niekerk","Zimmerman","Venter","van den Berg","Xaba","Zulu","Zungu","Zuma","Zwane"]})),dJ=c((()=>{Xc=["James","John","Robert","Michael","William","David","Richard","Thomas","Charles","Christopher","Daniel","Dante","Paul","Mark","George","Kenneth","Steven","Edward","Brian","Ronald","Anthony","Albert","Alfred","Kevin","Jason","Matthew","Gary","Timothy","Frank","Eric","Stephen","Andrew","Raymond","Greg","Joshua","Jerry","Dennis","Peter","Henry","Carl","Arthur","Ryan","Roger","Joe","Juan","Jonathan","Justin","Terry","Gerald","Keith","Samuel","Willie","Ralph","Roy","Brandon","Adam","Harry","Wayne","Billy","Steve","Louis","Jeremy","Howard","Eugene","Carlos","Russell","Bobby","Victor","Martin","Ernest","Phillip","Craig","Alan","Shawn","Sean","Philip","Chris","Johnny","Earl","Jimmy","Bryan","Tony","Luis","Mike","Stanley","Leonard","Nathan","Dale","Manuel","Rodney","Curtis","Norman","Allen","Marvin","Vincent","Glenn","Travis","Jacob","Kyle","Francis","Bradley","Joel","Edwin","Eddie","Barry","Alexander","Bernard","Marcus","Micheal","Theodore","Clifford","Miguel","Oscar","Jay","Jim","Tom","Calvin","Alex","Jon","Ronnie","Bill","Lloyd","Tommy","Leon","Derek","Warren","Darrell","Jerome","Leo","Tim","Wesley","Gordon","Dean","Greg","Jorge","Dustin","Derrick","Dan","Herman","Glen","Shane","Rick","Brent","Tyler","Marc","Ruben","Brett","Nathaniel","Rafael","Leslie","Edgar","Raul","Ben","Chester","Cecil","Duane","Franklin","Andre","Elmer","Brad","Gabriel","Ron","Mitchell","Roland","Arnold","Harvey","Jared","Adrian","Karl","Cory","Claude","Erik","Darryl","Jamie","Neil","Jessie","Christian","Ted","Mathew","Tyrone","Darren","Kurt","Allan","Guy","Max","Dwayne","Ian","Ken","Bob","Dave","Ivan","Johnnie","Sid","Sidney","Byron","Julian","Morris","Clifton","Willard","Daryl","Ross","Andy","Kirk","Terrence","Fred","Freddie","Wade","Stuart","Joey","Nick","Julius","Trevor","Luke","Gerard","Hubert","Shaun","Matt","Cameron","Neal","Wilbur","Grant","Jean","Johnathan","Rudolph","Rudy","Marco","Garry","Bennie","Ed","Colin","Earnest","Lucas","Benny","Noel","Garrett","Gregg","Devin","Kim","Simon","Rufus","Clint","Josh","Hugo","Erick","Frankie","Stewart","Terence","Conrad","Percy","Tommie","Jan"]})),hJ=c((()=>{ed=["#{first_name} #{last_name}","#{last_name} #{first_name}"]})),pJ=c((()=>{lJ(),uJ(),cJ(),dJ(),hJ(),ad={female_first_name:Qc,first_name:Yc,last_name:$c,male_first_name:Xc,name:ed}})),mJ=c((()=>{nd=["10","11","12","13","14","15","16","17","18","21","22","23","24","27","28","31","32","33","34","35","36","39","40","41","42","43","44","45","46","47","48","49","51","53","54","56","57","58"]})),fJ=c((()=>{id=["201","202","203","205","206","207","208","209","210","212","213","214","215","216","217","218","219","224","225","227","228","229","231","234","239","240","248","251","252","253","254","256","260","262","267","269","270","276","281","283","301","302","303","304","305","307","308","309","310","312","313","314","315","316","317","318","319","320","321","323","330","331","334","336","337","339","347","351","352","360","361","386","401","402","404","405","406","407","408","409","410","412","413","414","415","417","419","423","424","425","434","435","440","443","445","464","469","470","475","478","479","480","484","501","502","503","504","505","507","508","509","510","512","513","515","516","517","518","520","530","540","541","551","557","559","561","562","563","564","567","570","571","573","574","580","585","586","601","602","603","605","606","607","608","609","610","612","614","615","616","617","618","619","620","623","626","630","631","636","641","646","650","651","660","661","662","667","678","682","701","702","703","704","706","707","708","712","713","714","715","716","717","718","719","720","724","727","731","732","734","737","740","754","757","760","763","765","770","772","773","774","775","781","785","786","801","802","803","804","805","806","808","810","812","813","814","815","816","817","818","828","830","831","832","835","843","845","847","848","850","856","857","858","859","860","862","863","864","865","870","872","878","901","903","904","906","907","908","909","910","912","913","914","915","916","917","918","919","920","925","928","931","936","937","940","941","947","949","952","954","956","959","970","971","972","973","975","978","979","980","984","985","989"]})),vJ=c((()=>{rd=["(0##) ### ####","0## ### ####","+27 ## ### ####","01# ### #####","02# ### #####","03# ### #####","04# ### #####","05# ### #####","0800 ### ###","0860 ### ###","01#########","01# ########"]})),gJ=c((()=>{mJ(),fJ(),vJ(),td={area_code:nd,exchange_code:id,formats:rd}})),kJ=c((()=>{aJ(),iJ(),tJ(),sJ(),pJ(),gJ(),od={title:"English (South Africa)",address:Hc,cell_phone:Jc,company:Wc,internet:qc,name:ad,phone_number:td}})),yJ=c((()=>{sd=[" s/n.",", #",", ##"," #"," ##"]})),bJ=c((()=>{ld=["#{city_prefix}"]})),SJ=c((()=>{ud=["Parla","Telde","Baracaldo","San Fernando","Torrevieja","Lugo","Santiago de Compostela","Gerona","Cáceres","Lorca","Coslada","Talavera de la Reina","El Puerto de Santa María","Cornellá de Llobregat","Avilés","Palencia","Gecho","Orihuela","Pontevedra","Pozuelo de Alarcón","Toledo","El Ejido","Guadalajara","Gandía","Ceuta","Ferrol","Chiclana de la Frontera","Manresa","Roquetas de Mar","Ciudad Real","Rubí","Benidorm","San Sebastían de los Reyes","Ponferrada","Zamora","Alcalá de Guadaira","Fuengirola","Mijas","Sanlúcar de Barrameda","La Línea de la Concepción","Majadahonda","Sagunto","El Prat de LLobregat","Viladecans","Linares","Alcoy","Irún","Estepona","Torremolinos","Rivas-Vaciamadrid","Molina de Segura","Paterna","Granollers","Santa Lucía de Tirajana","Motril","Cerdañola del Vallés","Arrecife","Segovia","Torrelavega","Elda","Mérida","Ávila","Valdemoro","Cuenta","Collado Villalba","Benalmádena","Mollet del Vallés","Puertollano","Madrid","Barcelona","Valencia","Sevilla","Zaragoza","Málaga","Murcia","Palma de Mallorca","Las Palmas de Gran Canaria","Bilbao","Córdoba","Alicante","Valladolid","Vigo","Gijón","Hospitalet de LLobregat","La Coruña","Granada","Vitoria","Elche","Santa Cruz de Tenerife","Oviedo","Badalona","Cartagena","Móstoles","Jerez de la Frontera","Tarrasa","Sabadell","Alcalá de Henares","Pamplona","Fuenlabrada","Almería","San Sebastián","Leganés","Santander","Burgos","Castellón de la Plana","Alcorcón","Albacete","Getafe","Salamanca","Huelva","Logroño","Badajoz","San Cristróbal de la Laguna","León","Tarragona","Cádiz","Lérida","Marbella","Mataró","Dos Hermanas","Santa Coloma de Gramanet","Jaén","Algeciras","Torrejón de Ardoz","Orense","Alcobendas","Reus","Calahorra","Inca"]})),AJ=c((()=>{cd=["Afganistán","Albania","Argelia","Andorra","Angola","Argentina","Armenia","Aruba","Australia","Austria","Azerbayán","Bahamas","Barein","Bangladesh","Barbados","Bielorusia","Bélgica","Belice","Bermuda","Bután","Bolivia","Bosnia Herzegovina","Botswana","Brasil","Bulgaria","Burkina Faso","Burundi","Camboya","Camerún","Canada","Cabo Verde","Islas Caimán","Chad","Chile","China","Isla de Navidad","Colombia","Comodos","Congo","Costa Rica","Costa de Marfil","Croacia","Cuba","Chipre","República Checa","Dinamarca","Dominica","República Dominicana","Ecuador","Egipto","El Salvador","Guinea Ecuatorial","Eritrea","Estonia","Etiopía","Islas Faro","Fiji","Finlandia","Francia","Gabón","Gambia","Georgia","Alemania","Ghana","Grecia","Groenlandia","Granada","Guadalupe","Guam","Guatemala","Guinea","Guinea-Bisau","Guayana","Haiti","Honduras","Hong Kong","Hungria","Islandia","India","Indonesia","Iran","Irak","Irlanda","Italia","Jamaica","Japón","Jordania","Kazajistan","Kenia","Kiribati","Corea","Kuwait","Letonia","Líbano","Liberia","Liechtenstein","Lituania","Luxemburgo","Macao","Macedonia","Madagascar","Malawi","Malasia","Maldivas","Mali","Malta","Martinica","Mauritania","Méjico","Micronesia","Moldavia","Mónaco","Mongolia","Montenegro","Montserrat","Marruecos","Mozambique","Namibia","Nauru","Nepal","Holanda","Nueva Zelanda","Nicaragua","Niger","Nigeria","Noruega","Omán","Pakistan","Panamá","Papúa Nueva Guinea","Paraguay","Perú","Filipinas","Poland","Portugal","Puerto Rico","Rusia","Ruanda","Samoa","San Marino","Santo Tomé y Principe","Arabia Saudí","Senegal","Serbia","Seychelles","Sierra Leona","Singapur","Eslovaquia","Eslovenia","Somalia","España","Sri Lanka","Sudán","Suriname","Suecia","Suiza","Siria","Taiwan","Tajikistan","Tanzania","Tailandia","Timor-Leste","Togo","Tonga","Trinidad y Tobago","Tunez","Turquia","Uganda","Ucrania","Emiratos Árabes Unidos","Reino Unido","Estados Unidos de América","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"]})),MJ=c((()=>{dd=["España"]})),TJ=c((()=>{hd=["#####"]})),_J=c((()=>{pd=["Álava","Albacete","Alicante","Almería","Asturias","Ávila","Badajoz","Barcelona","Burgos","Cantabria","Castellón","Ciudad Real","Cuenca","Cáceres","Cádiz","Córdoba","Gerona","Granada","Guadalajara","Guipúzcoa","Huelva","Huesca","Islas Baleares","Jaén","La Coruña","La Rioja","Las Palmas","León","Lugo","lérida","Madrid","Murcia","Málaga","Navarra","Orense","Palencia","Pontevedra","Salamanca","Santa Cruz de Tenerife","Segovia","Sevilla","Soria","Tarragona","Teruel","Toledo","Valencia","Valladolid","Vizcaya","Zamora","Zaragoza"]})),wJ=c((()=>{md=["Esc. ###","Puerta ###"]})),jJ=c((()=>{fd=["Andalucía","Aragón","Principado de Asturias","Baleares","Canarias","Cantabria","Castilla-La Mancha","Castilla y León","Cataluña","Comunidad Valenciana","Extremadura","Galicia","La Rioja","Comunidad de Madrid","Navarra","País Vasco","Región de Murcia"]})),EJ=c((()=>{vd=["And","Ara","Ast","Bal","Can","Cbr","Man","Leo","Cat","Com","Ext","Gal","Rio","Mad","Nav","Vas","Mur"]})),NJ=c((()=>{gd=["#{street_name}#{building_number}","#{street_name}#{building_number} #{secondary_address}"]})),BJ=c((()=>{kd=["#{street_suffix} #{Name.first_name}","#{street_suffix} #{Name.first_name} #{Name.last_name}"]})),PJ=c((()=>{yd=["Aldea","Apartamento","Arrabal","Arroyo","Avenida","Bajada","Barranco","Barrio","Bloque","Calle","Calleja","Camino","Carretera","Caserio","Colegio","Colonia","Conjunto","Cuesta","Chalet","Edificio","Entrada","Escalinata","Explanada","Extramuros","Extrarradio","Ferrocarril","Glorieta","Gran Subida","Grupo","Huerta","Jardines","Lado","Lugar","Manzana","Masía","Mercado","Monte","Muelle","Municipio","Parcela","Parque","Partida","Pasaje","Paseo","Plaza","Poblado","Polígono","Prolongación","Puente","Puerta","Quinta","Ramal","Rambla","Rampa","Riera","Rincón","Ronda","Rua","Salida","Sector","Sección","Senda","Solar","Subida","Terrenos","Torrente","Travesía","Urbanización","Vía","Vía Pública"]})),LJ=c((()=>{bd=["Pacífico/Midway","Pacífico/Pago_Pago","Pacífico/Honolulu","America/Juneau","America/Los_Angeles","America/Tijuana","America/Denver","America/Phoenix","America/Chihuahua","America/Mazatlan","America/Chicago","America/Regina","America/Mexico_City","America/Mexico_City","America/Monterrey","America/Guatemala","America/New_York","America/Indiana/Indianapolis","America/Bogota","America/Lima","America/Lima","America/Halifax","America/Caracas","America/La_Paz","America/Santiago","America/St_Johns","America/Sao_Paulo","America/Argentina/Buenos_Aires","America/Guyana","America/Godthab","Atlantic/South_Georgia","Atlantic/Azores","Atlantic/Cape_Verde","Europa/Dublin","Europa/London","Europa/Lisbon","Europa/London","Africa/Casablanca","Africa/Monrovia","Etc/UTC","Europa/Belgrade","Europa/Bratislava","Europa/Budapest","Europa/Ljubljana","Europa/Prague","Europa/Sarajevo","Europa/Skopje","Europa/Warsaw","Europa/Zagreb","Europa/Brussels","Europa/Copenhagen","Europa/Madrid","Europa/Paris","Europa/Amsterdam","Europa/Berlin","Europa/Berlin","Europa/Rome","Europa/Stockholm","Europa/Vienna","Africa/Algiers","Europa/Bucharest","Africa/Cairo","Europa/Helsinki","Europa/Kiev","Europa/Riga","Europa/Sofia","Europa/Tallinn","Europa/Vilnius","Europa/Athens","Europa/Istanbul","Europa/Minsk","Asia/Jerusalen","Africa/Harare","Africa/Johannesburg","Europa/Moscú","Europa/Moscú","Europa/Moscú","Asia/Kuwait","Asia/Riyadh","Africa/Nairobi","Asia/Baghdad","Asia/Tehran","Asia/Muscat","Asia/Muscat","Asia/Baku","Asia/Tbilisi","Asia/Yerevan","Asia/Kabul","Asia/Yekaterinburg","Asia/Karachi","Asia/Karachi","Asia/Tashkent","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kathmandu","Asia/Dhaka","Asia/Dhaka","Asia/Colombo","Asia/Almaty","Asia/Novosibirsk","Asia/Rangoon","Asia/Bangkok","Asia/Bangkok","Asia/Jakarta","Asia/Krasnoyarsk","Asia/Shanghai","Asia/Chongqing","Asia/Hong_Kong","Asia/Urumqi","Asia/Kuala_Lumpur","Asia/Singapore","Asia/Taipei","Australia/Perth","Asia/Irkutsk","Asia/Ulaanbaatar","Asia/Seoul","Asia/Tokyo","Asia/Tokyo","Asia/Tokyo","Asia/Yakutsk","Australia/Darwin","Australia/Adelaide","Australia/Melbourne","Australia/Melbourne","Australia/Sydney","Australia/Brisbane","Australia/Hobart","Asia/Vladivostok","Pacífico/Guam","Pacífico/Port_Moresby","Asia/Magadan","Asia/Magadan","Pacífico/Noumea","Pacífico/Fiji","Asia/Kamchatka","Pacífico/Majuro","Pacífico/Auckland","Pacífico/Auckland","Pacífico/Tongatapu","Pacífico/Fakaofo","Pacífico/Apia"]})),DJ=c((()=>{yJ(),bJ(),SJ(),AJ(),MJ(),TJ(),_J(),wJ(),jJ(),EJ(),NJ(),BJ(),PJ(),LJ(),Sd={building_number:sd,city:ld,city_prefix:ud,country:cd,default_country:dd,postcode:hd,province:pd,secondary_address:md,state:fd,state_abbr:vd,street_address:gd,street_name:kd,street_suffix:yd,time_zone:bd}})),xJ=c((()=>{Ad=["6##-###-###","6##.###.###","6## ### ###","6########"]})),CJ=c((()=>{xJ(),Md={formats:Ad}})),KJ=c((()=>{Td=["Rojo","Azul","Negro","Gris","Blanco","Amarillo","Verde","Morado","Violeta"]})),RJ=c((()=>{_d=["Librería","Deportes","Videojuegos","Electrónica","Moda","Joyería","Marroquinería","Juguetería","Mascotas","Bebes","Bricolaje","Informática","Salud","Parafarmacia","Papelería","Cine","Música","Hogar","Decoración"]})),zJ=c((()=>{wd={adjective:["Pequeño","Ergonómico","Rústico","Inteligente","Increible","Fantástico","Práctico","Sorprendente","Genérico","Artesanal","Hecho a mano","Guapo","Guapa","Refinado","Sabroso"],material:["Acero","Madera","Plástico","Algodón","Granito","Metal","Ladrillo","Hormigon"],product:["Silla","Coche","Ordenador","Teclado","Raton","Bicicleta","Pelota","Guantes","Pantalones","Camiseta","Mesa","Zapatos","Gorro","Toallas","Sopa","Atún","Pollo","Pescado","Queso","Bacon","Pizza","Ensalada","Salchichas","Patatas fritas"]}})),OJ=c((()=>{KJ(),RJ(),zJ(),jd={color:Td,department:_d,product_name:wd}})),IJ=c((()=>{Ed=["Adaptativo","Avanzado","Asimilado","Automatizado","Equilibrado","Centrado en el negocio","Centralizado","Clonado","Compatible","Configurable","Multi grupo","Multi plataforma","Centrado en el usuario","Configurable","Descentralizado","Digitalizado","Distribuido","Diverso","Reducido","Mejorado","Para toda la empresa","Ergonómico","Exclusivo","Expandido","Extendido","Cara a cara","Enfocado","Totalmente configurable","Fundamental","Orígenes","Horizontal","Implementado","Innovador","Integrado","Intuitivo","Inverso","Gestionado","Obligatorio","Monitorizado","Multi canal","Multi lateral","Multi capa","En red","Orientado a objetos","Open-source","Operativo","Optimizado","Opcional","Orgánico","Organizado","Perseverando","Persistente","en fases","Polarizado","Pre-emptivo","Proactivo","Enfocado a benficios","Profundo","Programable","Progresivo","Public-key","Enfocado en la calidad","Reactivo","Realineado","Re-contextualizado","Re-implementado","Reducido","Ingeniería inversa","Robusto","Fácil","Seguro","Auto proporciona","Compartible","Intercambiable","Sincronizado","Orientado a equipos","Total","Universal","Mejorado","Actualizable","Centrado en el usuario","Amigable","Versatil","Virtual","Visionario"]})),VJ=c((()=>{Nd=["24 horas","24/7","3rd generación","4th generación","5th generación","6th generación","analizada","asimétrica","asíncrona","monitorizada por red","bidireccional","bifurcada","generada por el cliente","cliente servidor","coherente","cohesiva","compuesto","sensible al contexto","basado en el contexto","basado en contenido","dedicada","generado por la demanda","didactica","direccional","discreta","dinámica","potenciada","acompasada","ejecutiva","explícita","tolerante a fallos","innovadora","amplio ábanico","global","heurística","alto nivel","holística","homogénea","hibrida","incremental","intangible","interactiva","intermedia","local","logística","maximizada","metódica","misión crítica","móbil","modular","motivadora","multimedia","multiestado","multitarea","nacional","basado en necesidades","neutral","nueva generación","no-volátil","orientado a objetos","óptima","optimizada","radical","tiempo real","recíproca","regional","escalable","secundaria","orientada a soluciones","estable","estatica","sistemática","sistémica","tangible","terciaria","transicional","uniforme","valor añadido","vía web","defectos cero","tolerancia cero"]})),GJ=c((()=>{Bd=["#{Name.last_name} #{suffix}","#{Name.last_name} y #{Name.last_name}","#{Name.last_name} #{Name.last_name} #{suffix}","#{Name.last_name}, #{Name.last_name} y #{Name.last_name} Asociados"]})),HJ=c((()=>{Pd=["habilidad","acceso","adaptador","algoritmo","alianza","analista","aplicación","enfoque","arquitectura","archivo","inteligencia artificial","array","actitud","medición","gestión presupuestaria","capacidad","desafío","circuito","colaboración","complejidad","concepto","conglomeración","contingencia","núcleo","fidelidad","base de datos","data-warehouse","definición","emulación","codificar","encriptar","extranet","firmware","flexibilidad","focus group","previsión","base de trabajo","función","funcionalidad","Interfaz Gráfica","groupware","Interfaz gráfico de usuario","hardware","Soporte","jerarquía","conjunto","implementación","infraestructura","iniciativa","instalación","conjunto de instrucciones","interfaz","intranet","base del conocimiento","red de area local","aprovechar","matrices","metodologías","middleware","migración","modelo","moderador","monitorizar","arquitectura abierta","sistema abierto","orquestar","paradigma","paralelismo","política","portal","estructura de precios","proceso de mejora","producto","productividad","proyecto","proyección","protocolo","línea segura","software","solución","estandardización","estrategia","estructura","éxito","superestructura","soporte","sinergia","mediante","marco de tiempo","caja de herramientas","utilización","website","fuerza de trabajo"]})),FJ=c((()=>{Ld=["S.L.","e Hijos","S.A.","Hermanos"]})),JJ=c((()=>{IJ(),VJ(),GJ(),HJ(),FJ(),Dd={adjective:Ed,descriptor:Nd,name:Bd,noun:Pd,suffix:Ld}})),UJ=c((()=>{xd=["com","es","info","com.es","org"]})),WJ=c((()=>{Cd=["gmail.com","yahoo.com","hotmail.com"]})),ZJ=c((()=>{UJ(),WJ(),Kd={domain_suffix:xd,free_email:Cd}})),qJ=c((()=>{Rd=["Marta","Andrea","Ana","Anni","Laura","Maica","Laura","Lorena","Matilde","Jennifer","Roser"]})),QJ=c((()=>{zd=["Adán","Agustín","Alberto","Alejandro","Alfonso","Alfredo","Andrés","Antonio","Armando","Arturo","Benito","Benjamín","Bernardo","Carlos","César","Claudio","Clemente","Cristián","Cristóbal","Daniel","David","Diego","Eduardo","Emilio","Enrique","Ernesto","Esteban","Federico","Felipe","Fernando","Francisco","Gabriel","Gerardo","Germán","Gilberto","Gonzalo","Gregorio","Guillermo","Gustavo","Hernán","Homero","Horacio","Hugo","Ignacio","Jacobo","Jaime","Javier","Jerónimo","Jesús","Joaquín","Jorge","Jorge Luis","José","José Eduardo","José Emilio","José Luis","José María","Juan","Juan Carlos","Julio","Julio César","Lorenzo","Lucas","Luis","Luis Miguel","Manuel","Marco Antonio","Marcos","Mariano","Mario","Martín","Mateo","Miguel","Miguel Ángel","Nicolás","Octavio","Óscar","Pablo","Patricio","Pedro","Rafael","Ramiro","Ramón","Raúl","Ricardo","Roberto","Rodrigo","Rubén","Salvador","Samuel","Sancho","Santiago","Sergio","Teodoro","Timoteo","Tomás","Vicente","Víctor","Adela","Adriana","Alejandra","Alicia","Amalia","Ana","Ana Luisa","Ana María","Andrea","Anita","Ángela","Antonia","Ariadna","Barbara","Beatriz","Berta","Blanca","Caridad","Carla","Carlota","Carmen","Carolina","Catalina","Cecilia","Clara","Claudia","Concepción","Conchita","Cristina","Daniela","Débora","Diana","Dolores","Lola","Dorotea","Elena","Elisa","Eloisa","Elsa","Elvira","Emilia","Esperanza","Estela","Ester","Eva","Florencia","Francisca","Gabriela","Gloria","Graciela","Guadalupe","Guillermina","Inés","Irene","Isabel","Isabela","Josefina","Juana","Julia","Laura","Leonor","Leticia","Lilia","Lorena","Lourdes","Lucía","Luisa","Luz","Magdalena","Manuela","Marcela","Margarita","María","María del Carmen","María Cristina","María Elena","María Eugenia","María José","María Luisa","María Soledad","María Teresa","Mariana","Maricarmen","Marilú","Marisol","Marta","Mayte","Mercedes","Micaela","Mónica","Natalia","Norma","Olivia","Patricia","Pilar","Ramona","Raquel","Rebeca","Reina","Rocío","Rosa","Rosalia","Rosario","Sara","Silvia","Sofía","Soledad","Sonia","Susana","Teresa","Verónica","Victoria","Virginia","Yolanda"]})),YJ=c((()=>{Od=["Abeyta","Abrego","Abreu","Acevedo","Acosta","Acuña","Adame","Adorno","Agosto","Aguayo","Aguilar","Aguilera","Aguirre","Alanis","Alaníz","Alarcón","Alba","Alcalá","Alcántar","Alcaraz","Alejandro","Alemán","Alfaro","Alicea","Almanza","Almaráz","Almonte","Alonso","Alonzo","Altamirano","Alva","Alvarado","Álvarez","Amador","Amaya","Anaya","Anguiano","Angulo","Aparicio","Apodaca","Aponte","Aragón","Araña","Aranda","Arce","Archuleta","Arellano","Arenas","Arevalo","Argüello","Arias","Armas","Armendáriz","Armenta","Armijo","Arredondo","Arreola","Arriaga","Arroyo","Arteaga","Atencio","Ávalos","Ávila","Avilés","Ayala","Baca","Badillo","Báez","Baeza","Bahena","Balderas","Ballesteros","Banda","Bañuelos","Barajas","Barela","Barragán","Barraza","Barrera","Barreto","Barrientos","Barrios","Batista","Becerra","Beltrán","Benavides","Benavídez","Benítez","Bermúdez","Bernal","Berríos","Betancourt","Blanco","Bonilla","Borrego","Botello","Bravo","Briones","Briseño","Brito","Bueno","Burgos","Bustamante","Bustos","Caballero","Cabán","Cabrera","Cadena","Caldera","Calderón","Calvillo","Camacho","Camarillo","Campos","Canales","Candelaria","Cano","Cantú","Caraballo","Carbajal","Cárdenas","Cardona","Carmona","Carranza","Carrasco","Carrasquillo","Carreón","Carrera","Carrero","Carrillo","Carrión","Carvajal","Casanova","Casares","Casarez","Casas","Casillas","Castañeda","Castellanos","Castillo","Castro","Cavazos","Cazares","Ceballos","Cedillo","Ceja","Centeno","Cepeda","Cerda","Cervantes","Cervántez","Chacón","Chapa","Chavarría","Chávez","Cintrón","Cisneros","Collado","Collazo","Colón","Colunga","Concepción","Contreras","Cordero","Córdova","Cornejo","Corona","Coronado","Corral","Corrales","Correa","Cortés","Cortéz","Cotto","Covarrubias","Crespo","Cruz","Cuellar","Curiel","Dávila","de Anda","de Jesús","Delacrúz","Delafuente","Delagarza","Delao","Delapaz","Delarosa","Delatorre","Deleón","Delgadillo","Delgado","Delrío","Delvalle","Díaz","Domínguez","Duarte","Dueñas","Durán","Echevarría","Elizondo","Enríquez","Escalante","Escamilla","Escobar","Escobedo","Esparza","Espinal","Espino","Espinosa","Espinoza","Esquibel","Esquivel","Estévez","Estrada","Fajardo","Farías","Feliciano","Fernández","Ferrer","Fierro","Figueroa","Flores","Flórez","Fonseca","Frías","Fuentes","Gaitán","Galarza","Galindo","Gallardo","Gallegos","Galván","Gálvez","Gamboa","Gámez","Gaona","Garay","García","Garibay","Garica","Garrido","Garza","Gastélum","Gaytán","Gil","Girón","Godínez","Godoy","Gómez","González","Gracia","Granado","Granados","Griego","Grijalva","Guajardo","Guardado","Guerra","Guerrero","Guevara","Guillén","Gurule","Gutiérrez","Guzmán","Haro","Henríquez","Heredia","Hernández","Herrera","Hidalgo","Hinojosa","Holguín","Huerta","Hurtado","Ibarra","Iglesias","Irizarry","Jaime","Jaimes","Jáquez","Jaramillo","Jasso","Jiménez","Juárez","Jurado","Laboy","Lara","Laureano","Leal","Lebrón","Ledesma","Leiva","Lemus","León","Lerma","Leyva","Limón","Linares","Lira","Llamas","Loera","Lomeli","Longoria","López","Lovato","Loya","Lozada","Lozano","Lucero","Lucio","Luevano","Lugo","Luna","Macías","Madera","Madrid","Madrigal","Maestas","Magaña","Malave","Maldonado","Manzanares","Mares","Marín","Márquez","Marrero","Marroquín","Martínez","Mascareñas","Mata","Mateo","Matías","Matos","Maya","Mayorga","Medina","Medrano","Mejía","Meléndez","Melgar","Mena","Menchaca","Méndez","Mendoza","Menéndez","Meraz","Mercado","Merino","Mesa","Meza","Miramontes","Miranda","Mireles","Mojica","Molina","Mondragón","Monroy","Montalvo","Montañez","Montaño","Montemayor","Montenegro","Montero","Montes","Montéz","Montoya","Mora","Morales","Moreno","Mota","Moya","Munguía","Muñiz","Muñoz","Murillo","Muro","Nájera","Naranjo","Narváez","Nava","Navarrete","Navarro","Nazario","Negrete","Negrón","Nevárez","Nieto","Nieves","Niño","Noriega","Núñez","Ocampo","Ocasio","Ochoa","Ojeda","Olivares","Olivárez","Olivas","Olivera","Olivo","Olmos","Olvera","Ontiveros","Oquendo","Ordóñez","Orellana","Ornelas","Orosco","Orozco","Orta","Ortega","Ortiz","Osorio","Otero","Ozuna","Pabón","Pacheco","Padilla","Padrón","Páez","Pagan","Palacios","Palomino","Palomo","Pantoja","Paredes","Parra","Partida","Patiño","Paz","Pedraza","Pedroza","Pelayo","Peña","Perales","Peralta","Perea","Pérez","Pichardo","Piña","Pineda","Pizarro","Polanco","Ponce","Porras","Portillo","Posada","Prado","Preciado","Prieto","Puente","Puga","Pulido","Quesada","Quezada","Quiñones","Quiñónez","Quintana","Quintanilla","Quintero","Quiróz","Rael","Ramírez","Ramos","Rangel","Rascón","Raya","Razo","Regalado","Rendón","Rentería","Reséndez","Reyes","Reyna","Reynoso","Rico","Rincón","Riojas","Ríos","Rivas","Rivera","Rivero","Robledo","Robles","Rocha","Rodarte","Rodríguez","Rojas","Rojo","Roldán","Rolón","Romero","Romo","Roque","Rosado","Rosales","Rosario","Rosas","Roybal","Rubio","Ruelas","Ruíz","Saavedra","Sáenz","Saiz","Salas","Salazar","Salcedo","Salcido","Saldaña","Saldivar","Salgado","Salinas","Samaniego","Sanabria","Sánchez","Sandoval","Santacruz","Santana","Santiago","Santillán","Sarabia","Sauceda","Saucedo","Sedillo","Segovia","Segura","Sepúlveda","Serna","Serrano","Serrato","Sevilla","Sierra","Sisneros","Solano","Solís","Soliz","Solorio","Solorzano","Soria","Sosa","Sotelo","Soto","Suárez","Tafoya","Tamayo","Tamez","Tapia","Tejada","Tejeda","Téllez","Tello","Terán","Terrazas","Tijerina","Tirado","Toledo","Toro","Torres","Tórrez","Tovar","Trejo","Treviño","Trujillo","Ulibarri","Ulloa","Urbina","Ureña","Urías","Uribe","Urrutia","Vaca","Valadez","Valdés","Valdez","Valdivia","Valencia","Valentín","Valenzuela","Valladares","Valle","Vallejo","Valles","Valverde","Vanegas","Varela","Vargas","Vázquez","Vega","Vela","Velasco","Velásquez","Velázquez","Vélez","Véliz","Venegas","Vera","Verdugo","Verduzco","Vergara","Viera","Vigil","Villa","Villagómez","Villalobos","Villalpando","Villanueva","Villarreal","Villaseñor","Villegas","Yáñez","Ybarra","Zambrano","Zamora","Zamudio","Zapata","Zaragoza","Zarate","Zavala","Zayas","Zelaya","Zepeda","Zúñiga"]})),$J=c((()=>{Id=["Josep","Ángel","Daniel","Manuel","Pedro","Salvador","Rubén","Iván","Miguel","Jorge","Sergi","Josep","Ricardo","Carles","Jordi","Manuel"]})),XJ=c((()=>{Vd=["#{prefix} #{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} #{last_name}"]})),eU=c((()=>{Gd=["Sr.","Sra.","Sta."]})),aU=c((()=>{Hd=["Jr.","Sr.","I","II","III","IV","V","MD","DDS","PhD","DVM"]})),nU=c((()=>{Fd={descriptor:["Jefe","Senior","Directo","Corporativo","Dinánmico","Futuro","Producto","Nacional","Regional","Distrito","Central","Global","Cliente","Inversor","International","Heredado","Adelante","Interno","Humano","Gerente","Director"],level:["Soluciones","Programa","Marca","Seguridada","Investigación","Marketing","Normas","Implementación","Integración","Funcionalidad","Respuesta","Paradigma","Tácticas","Identidad","Mercados","Grupo","División","Aplicaciones","Optimización","Operaciones","Infraestructura","Intranet","Comunicaciones","Web","Calidad","Seguro","Mobilidad","Cuentas","Datos","Creativo","Configuración","Contabilidad","Interacciones","Factores","Usabilidad","Métricas"],job:["Supervisor","Asociado","Ejecutivo","Relacciones","Oficial","Gerente","Ingeniero","Especialista","Director","Coordinador","Administrador","Arquitecto","Analista","Diseñador","Planificador","Técnico","Funcionario","Desarrollador","Productor","Consultor","Asistente","Facilitador","Agente","Representante","Estratega"]}})),iU=c((()=>{qJ(),QJ(),YJ(),$J(),XJ(),eU(),aU(),nU(),Jd={female_first_name:Rd,first_name:zd,last_name:Od,male_first_name:Id,name:Vd,prefix:Gd,suffix:Hd,title:Fd}})),rU=c((()=>{Ud=["9##-###-###","9##.###.###","9## ### ###","9########"]})),tU=c((()=>{rU(),Wd={formats:Ud}})),oU=c((()=>{DJ(),CJ(),OJ(),JJ(),ZJ(),iU(),tU(),Zd={title:"Spanish",address:Sd,cell_phone:Md,commerce:jd,company:Dd,internet:Kd,name:Jd,phone_number:Wd}})),sU=c((()=>{qd=[" s/n.",", #",", ##"," #"," ##"," ###"," ####"]})),lU=c((()=>{Qd=["#{city_prefix}"]})),uU=c((()=>{Yd=["Aguascalientes","Apodaca","Buenavista","Campeche","Cancún","Cárdenas","Celaya","Chalco","Chetumal","Chicoloapan","Chignahuapan","Chihuahua","Chilpancingo","Chimalhuacán","Ciudad Acuña","Ciudad de México","Ciudad del Carmen","Ciudad López Mateos","Ciudad Madero","Ciudad Obregón","Ciudad Valles","Ciudad Victoria","Coatzacoalcos","Colima-Villa de Álvarez","Comitán de Dominguez","Córdoba","Cuautitlán Izcalli","Cuautla","Cuernavaca","Culiacán","Delicias","Durango","Ensenada","Fresnillo","General Escobedo","Gómez Palacio","Guadalajara","Guadalupe","Guanajuato","Guaymas","Hermosillo","Hidalgo del Parral","Iguala","Irapuato","Ixtapaluca","Jiutepec","Juárez","La Laguna","La Paz","La Piedad-Pénjamo","León","Los Cabos","Los Mochis","Manzanillo","Matamoros","Mazatlán","Mérida","Mexicali","Minatitlán","Miramar","Monclova","Monclova-Frontera","Monterrey","Morelia","Naucalpan de Juárez","Navojoa","Nezahualcóyotl","Nogales","Nuevo Laredo","Oaxaca","Ocotlán","Ojo de agua","Orizaba","Pachuca","Piedras Negras","Poza Rica","Puebla","Puerto Vallarta","Querétaro","Reynosa-Río Bravo","Rioverde-Ciudad Fernández","Salamanca","Saltillo","San Cristobal de las Casas","San Francisco Coacalco","San Francisco del Rincón","San Juan Bautista Tuxtepec","San Juan del Río","San Luis Potosí-Soledad","San Luis Río Colorado","San Nicolás de los Garza","San Pablo de las Salinas","San Pedro Garza García","Santa Catarina","Soledad de Graciano Sánchez","Tampico-Pánuco","Tapachula","Tecomán","Tehuacán","Tehuacán","Tehuantepec-Salina Cruz","Tepexpan","Tepic","Tetela de Ocampo","Texcoco de Mora","Tijuana","Tlalnepantla","Tlaquepaque","Tlaxcala-Apizaco","Toluca","Tonalá","Torreón","Tula","Tulancingo","Tulancingo de Bravo","Tuxtla Gutiérrez","Uruapan","Uruapan del Progreso","Valle de México","Veracruz","Villa de Álvarez","Villa Nicolás Romero","Villahermosa","Xalapa","Zacatecas-Guadalupe","Zacatlan","Zacatzingo","Zamora-Jacona","Zapopan","Zitacuaro"]})),cU=c((()=>{$d=["town","ton","land","ville","berg","burgh","borough","bury","view","port","mouth","stad","furt","chester","mouth","fort","haven","side","shire"]})),dU=c((()=>{Xd=["Afganistán","Albania","Argelia","Andorra","Angola","Argentina","Armenia","Aruba","Australia","Austria","Azerbayán","Bahamas","Barein","Bangladesh","Barbados","Bielorusia","Bélgica","Belice","Bermuda","Bután","Bolivia","Bosnia Herzegovina","Botswana","Brasil","Bulgaria","Burkina Faso","Burundi","Camboya","Camerún","Canada","Cabo Verde","Islas Caimán","Chad","Chile","China","Isla de Navidad","Colombia","Comodos","Congo","Costa Rica","Costa de Marfil","Croacia","Cuba","Chipre","República Checa","Dinamarca","Dominica","República Dominicana","Ecuador","Egipto","El Salvador","Guinea Ecuatorial","Eritrea","Estonia","Etiopía","Islas Faro","Fiji","Finlandia","Francia","Gabón","Gambia","Georgia","Alemania","Ghana","Grecia","Groenlandia","Granada","Guadalupe","Guam","Guatemala","Guinea","Guinea-Bisau","Guayana","Haiti","Honduras","Hong Kong","Hungria","Islandia","India","Indonesia","Iran","Irak","Irlanda","Italia","Jamaica","Japón","Jordania","Kazajistan","Kenia","Kiribati","Corea","Kuwait","Letonia","Líbano","Liberia","Liechtenstein","Lituania","Luxemburgo","Macao","Macedonia","Madagascar","Malawi","Malasia","Maldivas","Mali","Malta","Martinica","Mauritania","México","Micronesia","Moldavia","Mónaco","Mongolia","Montenegro","Montserrat","Marruecos","Mozambique","Namibia","Nauru","Nepal","Holanda","Nueva Zelanda","Nicaragua","Niger","Nigeria","Noruega","Omán","Pakistan","Panamá","Papúa Nueva Guinea","Paraguay","Perú","Filipinas","Poland","Portugal","Puerto Rico","Rusia","Ruanda","Samoa","San Marino","Santo Tomé y Principe","Arabia Saudí","Senegal","Serbia","Seychelles","Sierra Leona","Singapur","Eslovaquia","Eslovenia","Somalia","España","Sri Lanka","Sudán","Suriname","Suecia","Suiza","Siria","Taiwan","Tajikistan","Tanzania","Tailandia","Timor-Leste","Togo","Tonga","Trinidad y Tobago","Tunez","Turquia","Uganda","Ucrania","Emiratos Árabes Unidos","Reino Unido","Estados Unidos de América","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"]})),hU=c((()=>{eh=["México"]})),pU=c((()=>{ah=["#####"]})),mU=c((()=>{nh=["Esc. ###","Puerta ###","Edificio #"]})),fU=c((()=>{ih=["Aguascalientes","Baja California Norte","Baja California Sur","Estado de México","Campeche","Chiapas","Chihuahua","Coahuila","Colima","Durango","Guanajuato","Guerrero","Hidalgo","Jalisco","Michoacan","Morelos","Nayarit","Nuevo León","Oaxaca","Puebla","Querétaro","Quintana Roo","San Luis Potosí","Sinaloa","Sonora","Tabasco","Tamaulipas","Tlaxcala","Veracruz","Yucatán","Zacatecas"]})),vU=c((()=>{rh=["AS","BC","BS","CC","CS","CH","CL","CM","DF","DG","GT","GR","HG","JC","MC","MN","MS","NT","NL","OC","PL","QT","QR","SP","SL","SR","TC","TS","TL","VZ","YN","ZS"]})),gU=c((()=>{th=["20 de Noviembre","Cinco de Mayo","Cuahutemoc","Manzanares","Donceles","Francisco I. Madero","Juárez","Repúplica de Cuba","Repúplica de Chile","Repúplica de Argentina","Repúplica de Uruguay","Isabel la Católica","Izazaga","Eje Central","Eje 6","Eje 5","La viga","Aniceto Ortega","Miguel Ángel de Quevedo","Amores","Coyoacán","Coruña","Batalla de Naco","La otra banda","Piedra del Comal","Balcón de los edecanes","Barrio la Lonja","Jicolapa","Zacatlán","Zapata","Polotitlan","Calimaya","Flor Marina","Flor Solvestre","San Miguel","Naranjo","Cedro","Jalisco","Avena"]})),kU=c((()=>{oh=["#{street_name}#{building_number}","#{street_name}#{building_number} #{secondary_address}"]})),yU=c((()=>{sh=["#{street_suffix} #{Name.first_name}","#{street_suffix} #{Name.first_name} #{Name.last_name}","#{street_suffix} #{street}","#{street_suffix} #{street}","#{street_suffix} #{street}","#{street_suffix} #{street}"]})),bU=c((()=>{lh=["Aldea","Apartamento","Arrabal","Arroyo","Avenida","Bajada","Barranco","Barrio","Bloque","Calle","Calleja","Camino","Carretera","Caserio","Colegio","Colonia","Conjunto","Cuesta","Chalet","Edificio","Entrada","Escalinata","Explanada","Extramuros","Extrarradio","Ferrocarril","Glorieta","Gran Subida","Grupo","Huerta","Jardines","Lado","Lugar","Manzana","Masía","Mercado","Monte","Muelle","Municipio","Parcela","Parque","Partida","Pasaje","Paseo","Plaza","Poblado","Polígono","Prolongación","Puente","Puerta","Quinta","Ramal","Rambla","Rampa","Riera","Rincón","Ronda","Rua","Salida","Sector","Sección","Senda","Solar","Subida","Terrenos","Torrente","Travesía","Urbanización","Vía","Vía Pública"]})),SU=c((()=>{uh=["Pacífico/Midway","Pacífico/Pago_Pago","Pacífico/Honolulu","America/Juneau","America/Los_Angeles","America/Tijuana","America/Denver","America/Phoenix","America/Chihuahua","America/Mazatlan","America/Chicago","America/Regina","America/Mexico_City","America/Monterrey","America/Guatemala","America/New_York","America/Indiana/Indianapolis","America/Bogota","America/Lima","America/Lima","America/Halifax","America/Caracas","America/La_Paz","America/Santiago","America/St_Johns","America/Sao_Paulo","America/Argentina/Buenos_Aires","America/Guyana","America/Godthab","Atlantic/South_Georgia","Atlantic/Azores","Atlantic/Cape_Verde","Europa/Dublin","Europa/London","Europa/Lisbon","Europa/London","Africa/Casablanca","Africa/Monrovia","Etc/UTC","Europa/Belgrade","Europa/Bratislava","Europa/Budapest","Europa/Ljubljana","Europa/Prague","Europa/Sarajevo","Europa/Skopje","Europa/Warsaw","Europa/Zagreb","Europa/Brussels","Europa/Copenhagen","Europa/Madrid","Europa/Paris","Europa/Amsterdam","Europa/Berlin","Europa/Berlin","Europa/Rome","Europa/Stockholm","Europa/Vienna","Africa/Algiers","Europa/Bucharest","Africa/Cairo","Europa/Helsinki","Europa/Kiev","Europa/Riga","Europa/Sofia","Europa/Tallinn","Europa/Vilnius","Europa/Athens","Europa/Istanbul","Europa/Minsk","Asia/Jerusalen","Africa/Harare","Africa/Johannesburg","Europa/Moscú","Europa/Moscú","Europa/Moscú","Asia/Kuwait","Asia/Riyadh","Africa/Nairobi","Asia/Baghdad","Asia/Tehran","Asia/Muscat","Asia/Muscat","Asia/Baku","Asia/Tbilisi","Asia/Yerevan","Asia/Kabul","Asia/Yekaterinburg","Asia/Karachi","Asia/Karachi","Asia/Tashkent","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kathmandu","Asia/Dhaka","Asia/Dhaka","Asia/Colombo","Asia/Almaty","Asia/Novosibirsk","Asia/Rangoon","Asia/Bangkok","Asia/Bangkok","Asia/Jakarta","Asia/Krasnoyarsk","Asia/Shanghai","Asia/Chongqing","Asia/Hong_Kong","Asia/Urumqi","Asia/Kuala_Lumpur","Asia/Singapore","Asia/Taipei","Australia/Perth","Asia/Irkutsk","Asia/Ulaanbaatar","Asia/Seoul","Asia/Tokyo","Asia/Tokyo","Asia/Tokyo","Asia/Yakutsk","Australia/Darwin","Australia/Adelaide","Australia/Melbourne","Australia/Melbourne","Australia/Sydney","Australia/Brisbane","Australia/Hobart","Asia/Vladivostok","Pacífico/Guam","Pacífico/Port_Moresby","Asia/Magadan","Asia/Magadan","Pacífico/Noumea","Pacífico/Fiji","Asia/Kamchatka","Pacífico/Majuro","Pacífico/Auckland","Pacífico/Auckland","Pacífico/Tongatapu","Pacífico/Fakaofo","Pacífico/Apia"]})),AU=c((()=>{sU(),lU(),uU(),cU(),dU(),hU(),pU(),mU(),fU(),vU(),gU(),kU(),yU(),bU(),SU(),ch={building_number:qd,city:Qd,city_prefix:Yd,city_suffix:$d,country:Xd,default_country:eh,postcode:ah,secondary_address:nh,state:ih,state_abbr:rh,street:th,street_address:oh,street_name:sh,street_suffix:lh,time_zone:uh}})),MU=c((()=>{dh=["5##-###-###","5##.###.###","5## ### ###","5########"]})),TU=c((()=>{MU(),hh={formats:dh}})),_U=c((()=>{ph=["rojo","verde","azul","amarillo","morado","Menta verde","teal","blanco","negro","Naranja","Rosa","gris","marrón","violeta","turquesa","tan","cielo azul","salmón","ciruela","orquídea","aceituna","magenta","Lima","marfil","índigo","oro","fucsia","cian","azul","lavanda","plata"]})),wU=c((()=>{mh=["Libros","Películas","Música","Juegos","Electrónica","Ordenadores","Hogar","Jardín","Herramientas","Ultramarinos","Salud","Belleza","Juguetes","Kids","Baby","Ropa","Zapatos","Joyería","Deportes","Aire libre","Automoción","Industrial"]})),jU=c((()=>{fh={adjective:["Pequeño","Ergonómico","Rústico","Inteligente","Gorgeous","Increíble","Fantástico","Práctica","Elegante","Increíble","Genérica","Artesanal","Hecho a mano","Licencia","Refinado","Sin marca","Sabrosa"],material:["Acero","Madera","Hormigón","Plástico","Cotton","Granito","Caucho","Metal","Soft","Fresco","Frozen"],product:["Presidente","Auto","Computadora","Teclado","Ratón","Bike","Pelota","Guantes","Pantalones","Camisa","Mesa","Zapatos","Sombrero","Toallas","Jabón","Tuna","Pollo","Pescado","Queso","Tocino","Pizza","Ensalada","Embutidos"]}})),EU=c((()=>{_U(),wU(),jU(),vh={color:ph,department:mh,product_name:fh}})),NU=c((()=>{gh=["Adaptativo","Avanzado","Asimilado","Automatizado","Equilibrado","Centrado en el negocio","Centralizado","Clonado","Compatible","Configurable","Multi grupo","Multi plataforma","Centrado en el usuario","Configurable","Descentralizado","Digitalizado","Distribuido","Diverso","Reducido","Mejorado","Para toda la empresa","Ergonomico","Exclusivo","Expandido","Extendido","Cara a cara","Enfocado","Totalmente configurable","Fundamental","Orígenes","Horizontal","Implementado","Innovador","Integrado","Intuitivo","Inverso","Gestionado","Obligatorio","Monitorizado","Multi canal","Multi lateral","Multi capa","En red","Orientado a objetos","Open-source","Operativo","Optimizado","Opcional","Organico","Organizado","Perseverando","Persistente","en fases","Polarizado","Pre-emptivo","Proactivo","Enfocado a benficios","Profundo","Programable","Progresivo","Public-key","Enfocado en la calidad","Reactivo","Realineado","Re-contextualizado","Re-implementado","Reducido","Ingenieria inversa","Robusto","Fácil","Seguro","Auto proporciona","Compartible","Intercambiable","Sincronizado","Orientado a equipos","Total","Universal","Mejorado","Actualizable","Centrado en el usuario","Amigable","Versatil","Virtual","Visionario"]})),BU=c((()=>{kh=["Clics y mortero","Valor añadido","Vertical","Proactivo","Robusto","Revolucionario","Escalable","De vanguardia","Innovador","Intuitivo","Estratégico","E-business","Misión crítica","Pegajosa","Doce y cincuenta y nueve de la noche","24/7","De extremo a extremo","Global","B2B","B2C","Granular","Fricción","Virtual","Viral","Dinámico","24/365","Mejor de su clase","Asesino","Magnética","Filo sangriento","Habilitado web","Interactiva","Punto com","Sexy","Back-end","Tiempo real","Eficiente","Frontal","Distribuida","Sin costura","Extensible","Llave en mano","Clase mundial","Código abierto","Multiplataforma","Cross-media","Sinérgico","ladrillos y clics","Fuera de la caja","Empresa","Integrado","Impactante","Inalámbrico","Transparente","Próxima generación","Innovador","User-centric","Visionario","A medida","Ubicua","Enchufa y juega","Colaboración","Convincente","Holístico","Ricos"]})),PU=c((()=>{yh=["sinergias","web-readiness","paradigmas","mercados","asociaciones","infraestructuras","plataformas","iniciativas","canales","ojos","comunidades","ROI","soluciones","minoristas electrónicos","e-servicios","elementos de acción","portales","nichos","tecnologías","contenido","vortales","cadenas de suministro","convergencia","relaciones","arquitecturas","interfaces","mercados electrónicos","e-commerce","sistemas","ancho de banda","infomediarios","modelos","Mindshare","entregables","usuarios","esquemas","redes","aplicaciones","métricas","e-business","funcionalidades","experiencias","servicios web","metodologías"]})),LU=c((()=>{bh=["poner en práctica","utilizar","integrar","racionalizar","optimizar","evolucionar","transformar","abrazar","habilitar","orquestar","apalancamiento","reinventar","agregado","arquitecto","mejorar","incentivar","transformarse","empoderar","Envisioneer","monetizar","arnés","facilitar","aprovechar","desintermediar","sinergia","estrategias","desplegar","marca","crecer","objetivo","sindicato","sintetizar","entregue","malla","incubar","enganchar","maximizar","punto de referencia","acelerar","reintermediate","pizarra","visualizar","reutilizar","innovar","escala","desatar","conducir","extender","ingeniero","revolucionar","generar","explotar","transición","e-enable","repetir","cultivar","matriz","productize","redefinir","recontextualizar"]})),DU=c((()=>{Sh=["24 horas","24/7","3rd generación","4th generación","5th generación","6th generación","analizada","asimétrica","asíncrona","monitorizada por red","bidireccional","bifurcada","generada por el cliente","cliente servidor","coherente","cohesiva","compuesto","sensible al contexto","basado en el contexto","basado en contenido","dedicada","generado por la demanda","didactica","direccional","discreta","dinámica","potenciada","acompasada","ejecutiva","explícita","tolerante a fallos","innovadora","amplio ábanico","global","heurística","alto nivel","holística","homogénea","hibrida","incremental","intangible","interactiva","intermedia","local","logística","maximizada","metódica","misión crítica","móbil","modular","motivadora","multimedia","multiestado","multitarea","nacional","basado en necesidades","neutral","nueva generación","no-volátil","orientado a objetos","óptima","optimizada","radical","tiempo real","recíproca","regional","escalable","secundaria","orientada a soluciones","estable","estatica","sistemática","sistémica","tangible","terciaria","transicional","uniforme","valor añadido","vía web","defectos cero","tolerancia cero"]})),xU=c((()=>{Ah=["#{Name.last_name} #{suffix}","#{Name.last_name} y #{Name.last_name}","#{Name.last_name} #{Name.last_name} #{suffix}","#{Name.last_name}, #{Name.last_name} y #{Name.last_name} Asociados"]})),CU=c((()=>{Mh=["habilidad","acceso","adaptador","algoritmo","alianza","analista","aplicación","enfoque","arquitectura","archivo","inteligencia artificial","array","actitud","medición","gestión presupuestaria","capacidad","desafío","circuito","colaboración","complejidad","concepto","conglomeración","contingencia","núcleo","fidelidad","base de datos","data-warehouse","definición","emulación","codificar","encriptar","extranet","firmware","flexibilidad","focus group","previsión","base de trabajo","función","funcionalidad","Interfaz Gráfica","groupware","Interfaz gráfico de usuario","hardware","Soporte","jerarquía","conjunto","implementación","infraestructura","iniciativa","instalación","conjunto de instrucciones","interfaz","intranet","base del conocimiento","red de area local","aprovechar","matrices","metodologías","middleware","migración","modelo","moderador","monitorizar","arquitectura abierta","sistema abierto","orquestar","paradigma","paralelismo","política","portal","estructura de precios","proceso de mejora","producto","productividad","proyecto","proyección","protocolo","línea segura","software","solución","estandardización","estrategia","estructura","éxito","superestructura","soporte","sinergia","mediante","marco de tiempo","caja de herramientas","utilización","website","fuerza de trabajo"]})),KU=c((()=>{Th=["S.L.","e Hijos","S.A.","Hermanos"]})),RU=c((()=>{NU(),BU(),PU(),LU(),DU(),xU(),CU(),KU(),_h={adjective:gh,bs_adjective:kh,bs_noun:yh,bs_verb:bh,descriptor:Sh,name:Ah,noun:Mh,suffix:Th}})),zU=c((()=>{wh=["com","mx","info","com.mx","org","gob.mx"]})),OU=c((()=>{jh=["gmail.com","yahoo.com","hotmail.com","nearbpo.com","corpfolder.com"]})),IU=c((()=>{zU(),OU(),Eh={domain_suffix:wh,free_email:jh}})),VU=c((()=>{Nh=["Abacalero","Abacería","Abacero","Abacial","Abaco","Abacora","Abacorar","Abad","Abada","Abadejo","Abadengo","Abadernar","Abadesa","Abadí","Abadía","Abadiado","Abadiato","Abajadero","Abajamiento","Abajar","Abajeño","Abajera","Abajo","Abalada","Abalanzar","Abalar","Abalaustrado","Abaldonadamente","Abaldonamiento","Bastonada","Bastonazo","Bastoncillo","Bastonear","Bastonero","Bástulo","Basura","Basural","Basurear","Basurero","Bata","Batacazo","Batahola","Batalán","Batalla","Batallador","Batallar","Batallaroso","Batallola","Batallón","Batallona","Batalloso","Batán","Batanar","Batanear","Batanero","Batanga","Bataola","Batata","Batatazo","Batato","Batavia","Bátavo","Batayola","Batazo","Bate","Batea","Bateador","Bateaguas","Cenagar","Cenagoso","Cenal","Cenaoscuras","Ceñar","Cenata","Cenca","Cencapa","Cencellada","Cenceñada","Cenceño","Cencero","Cencerra","Cencerrada","Cencerrado","Cencerrear","Cencerreo","Cencerril","Cencerrillas","Cencerro","Cencerrón","Cencha","Cencido","Cencío","Cencivera","Cenco","Cencuate","Cendal","Cendalí","Céndea","Cendolilla","Cendra","Cendrada","Cendradilla","Cendrado","Cendrar","Cendrazo","Cenefa","Cenegar","Ceneque","Cenero","Cenestesia","Desceñir","Descensión","Descenso","Descentrado","Descentralización","Descentralizador","Descentralizar","Descentrar","Descepar","Descerar","Descercado","Descercador","Descercar","Descerco","Descerebración","Descerebrado","Descerebrar","Descerezar","Descerrajado","Descerrajadura","Descerrajar","Descerrar","Descerrumarse","Descervigamiento","Descervigar","Deschapar","Descharchar","Deschavetado","Deschavetarse","Deschuponar","Descifrable","Descifrador","Desciframiento","Descifrar","Descifre","Descimbramiento","Descimbrar","Engarbarse","Engarberar","Engarbullar","Engarce","Engarfiar","Engargantadura","Engargantar","Engargante","Engargolado","Engargolar","Engaritar","Engarmarse","Engarnio","Engarrafador","Engarrafar","Engarrar","Engarro","Engarronar","Engarrotar","Engarzador","Engarzadura","Engarzar","Engasgarse","Engastador","Engastadura","Engastar","Engaste","Ficción","Fice","Ficha","Fichaje","Fichar","Fichero","Ficoideo","Ficticio","Fidalgo","Fidecomiso","Fidedigno","Fideero","Fideicomisario","Fideicomiso","Fideicomitente","Fideísmo","Fidelidad","Fidelísimo","Fideo","Fido","Fiducia","Geminación","Geminado","Geminar","Géminis","Gémino","Gemíparo","Gemiquear","Gemiqueo","Gemir","Gemología","Gemológico","Gemólogo","Gemonias","Gemoso","Gemoterapia","Gen","Genciana","Gencianáceo","Gencianeo","Gendarme","Gendarmería","Genealogía","Genealógico","Genealogista","Genearca","Geneático","Generable","Generación","Generacional","Generador","General","Generala","Generalato","Generalidad","Generalísimo","Incordio","Incorporación","Incorporal","Incorporalmente","Incorporar","Incorporeidad","Incorpóreo","Incorporo","Incorrección","Incorrectamente","Incorrecto","Incorregibilidad","Incorregible","Incorregiblemente","Incorrupción","Incorruptamente","Incorruptibilidad","Incorruptible","Incorrupto","Incrasar","Increado","Incredibilidad","Incrédulamente","Incredulidad","Incrédulo","Increíble","Increíblemente","Incrementar","Incremento","Increpación","Increpador","Increpar","Incriminación","Incriminar","Incristalizable","Incruentamente","Incruento","Incrustación"]})),GU=c((()=>{VU(),Bh={words:Nh}})),HU=c((()=>{Ph=["Aarón","Abraham","Adán","Agustín","Alan","Alberto","Alejandro","Alexander","Alexis","Alfonso","Alfredo","Andrés","Ángel Daniel","Ángel Gabriel","Antonio","Armando","Arturo","Axel","Benito","Benjamín","Bernardo","Brandon","Brayan","Carlos","César","Claudio","Clemente","Cristian","Cristobal","Damián","Daniel","David","Diego","Eduardo","Elías","Emiliano","Emilio","Emilio","Emmanuel","Enrique","Erick","Ernesto","Esteban","Federico","Felipe","Fernando","Fernando Javier","Francisco","Francisco Javier","Gabriel","Gael","Gerardo","Germán","Gilberto","Gonzalo","Gregorio","Guillermo","Gustavo","Hernán","Homero","Horacio","Hugo","Ignacio","Iker","Isaac","Isaias","Israel","Ivan","Jacobo","Jaime","Javier","Jerónimo","Jesús","Joaquín","Jorge","Jorge Luis","José","José Antonio","Jose Daniel","José Eduardo","José Emilio","José Luis","José María","José Miguel","Juan","Juan Carlos","Juan Manuel","Juan Pablo","Julio","Julio César","Kevin","Leonardo","Lorenzo","Lucas","Luis","Luis Ángel","Luis Fernando","Luis Gabino","Luis Miguel","Manuel","Marco Antonio","Marcos","Mariano","Mario","Martín","Mateo","Matías","Mauricio","Maximiliano","Miguel","Miguel Ángel","Nicolás","Octavio","Óscar","Pablo","Patricio","Pedro","Rafael","Ramiro","Ramón","Raúl","Ricardo","Roberto","Rodrigo","Rubén","Salvador","Samuel","Sancho","Santiago","Saúl","Sebastian","Sergio","Tadeo","Teodoro","Timoteo","Tomás","Uriel","Vicente","Víctor","Victor Manuel","Adriana","Alejandra","Alicia","Amalia","Ana","Ana Luisa","Ana María","Andrea","Ángela","Anita","Antonia","Araceli","Ariadna","Barbara","Beatriz","Berta","Blanca","Caridad","Carla","Carlota","Carmen","Carolina","Catalina","Cecilia","Clara","Claudia","Concepción","Conchita","Cristina","Daniela","Débora","Diana","Dolores","Dorotea","Elena","Elisa","Elizabeth","Eloisa","Elsa","Elvira","Emilia","Esperanza","Estela","Ester","Eva","Florencia","Francisca","Gabriela","Gloria","Graciela","Guadalupe","Guillermina","Inés","Irene","Isabel","Isabela","Josefina","Juana","Julia","Laura","Leonor","Leticia","Lilia","Lola","Lorena","Lourdes","Lucia","Luisa","Luz","Magdalena","Manuela","Marcela","Margarita","María","María Cristina","María de Jesús","María de los Ángeles","María del Carmen","María Elena","María Eugenia","María Guadalupe","María José","María Luisa","María Soledad","María Teresa","Mariana","Maricarmen","Marilu","Marisol","Marta","Mayte","Mercedes","Micaela","Mónica","Natalia","Norma","Olivia","Patricia","Pilar","Ramona","Raquel","Rebeca","Reina","Rocio","Rosa","Rosa María","Rosalia","Rosario","Sara","Silvia","Sofia","Soledad","Sonia","Susana","Teresa","Verónica","Victoria","Virginia","Xochitl","Yolanda","Abigail","Abril","Adela","Alexa","Alondra Romina","Ana Sofía","Ana Victoria","Camila","Carolina","Daniela","Dulce María","Emily","Esmeralda","Estefanía","Evelyn","Fatima","Ivanna","Jazmin","Jennifer","Jimena","Julieta","Kimberly","Liliana","Lizbeth","María Fernanda","Melany","Melissa","Miranda","Monserrat","Naomi","Natalia","Nicole","Paola","Paulina","Regina","Renata","Valentina","Valeria","Vanessa","Ximena","Ximena Guadalupe","Yamileth","Yaretzi","Zoe"]})),FU=c((()=>{Lh=["Abeyta","Abrego","Abreu","Acevedo","Acosta","Acuña","Adame","Adorno","Agosto","Aguayo","Águilar","Aguilera","Aguirre","Alanis","Alaniz","Alarcón","Alba","Alcala","Alcántar","Alcaraz","Alejandro","Alemán","Alfaro","Alicea","Almanza","Almaraz","Almonte","Alonso","Alonzo","Altamirano","Alva","Alvarado","Alvarez","Amador","Amaya","Anaya","Anguiano","Angulo","Aparicio","Apodaca","Aponte","Aragón","Aranda","Araña","Arce","Archuleta","Arellano","Arenas","Arevalo","Arguello","Arias","Armas","Armendáriz","Armenta","Armijo","Arredondo","Arreola","Arriaga","Arroyo","Arteaga","Atencio","Ávalos","Ávila","Avilés","Ayala","Baca","Badillo","Báez","Baeza","Bahena","Balderas","Ballesteros","Banda","Bañuelos","Barajas","Barela","Barragán","Barraza","Barrera","Barreto","Barrientos","Barrios","Batista","Becerra","Beltrán","Benavides","Benavídez","Benítez","Bermúdez","Bernal","Berríos","Bétancourt","Blanco","Bonilla","Borrego","Botello","Bravo","Briones","Briseño","Brito","Bueno","Burgos","Bustamante","Bustos","Caballero","Cabán","Cabrera","Cadena","Caldera","Calderón","Calvillo","Camacho","Camarillo","Campos","Canales","Candelaria","Cano","Cantú","Caraballo","Carbajal","Cardenas","Cardona","Carmona","Carranza","Carrasco","Carrasquillo","Carreón","Carrera","Carrero","Carrillo","Carrion","Carvajal","Casanova","Casares","Casárez","Casas","Casillas","Castañeda","Castellanos","Castillo","Castro","Cavazos","Cazares","Ceballos","Cedillo","Ceja","Centeno","Cepeda","Cerda","Cervantes","Cervántez","Chacón","Chapa","Chavarría","Chávez","Cintrón","Cisneros","Collado","Collazo","Colón","Colunga","Concepción","Contreras","Cordero","Córdova","Cornejo","Corona","Coronado","Corral","Corrales","Correa","Cortés","Cortez","Cotto","Covarrubias","Crespo","Cruz","Cuellar","Curiel","Dávila","de Anda","de Jesús","Delacrúz","Delafuente","Delagarza","Delao","Delapaz","Delarosa","Delatorre","Deleón","Delgadillo","Delgado","Delrío","Delvalle","Díaz","Domínguez","Domínquez","Duarte","Dueñas","Duran","Echevarría","Elizondo","Enríquez","Escalante","Escamilla","Escobar","Escobedo","Esparza","Espinal","Espino","Espinosa","Espinoza","Esquibel","Esquivel","Estévez","Estrada","Fajardo","Farías","Feliciano","Fernández","Ferrer","Fierro","Figueroa","Flores","Flórez","Fonseca","Franco","Frías","Fuentes","Gaitán","Galarza","Galindo","Gallardo","Gallegos","Galván","Gálvez","Gamboa","Gamez","Gaona","Garay","García","Garibay","Garica","Garrido","Garza","Gastélum","Gaytán","Gil","Girón","Godínez","Godoy","Gollum","Gómez","Gonzales","González","Gracia","Granado","Granados","Griego","Grijalva","Guajardo","Guardado","Guerra","Guerrero","Guevara","Guillen","Gurule","Gutiérrez","Guzmán","Haro","Henríquez","Heredia","Hernádez","Hernandes","Hernández","Herrera","Hidalgo","Hinojosa","Holguín","Huerta","Huixtlacatl","Hurtado","Ibarra","Iglesias","Irizarry","Jaime","Jaimes","Jáquez","Jaramillo","Jasso","Jiménez","Jimínez","Juárez","Jurado","Kadar rodriguez","Kamal","Kamat","Kanaria","Kanea","Kanimal","Kano","Kanzaki","Kaplan","Kara","Karam","Karan","Kardache soto","Karem","Karen","Khalid","Kindelan","Koenig","Korta","Korta hernandez","Kortajarena","Kranz sans","Krasnova","Krauel natera","Kuzmina","Kyra","Laboy","Lara","Laureano","Leal","Lebrón","Ledesma","Leiva","Lemus","León","Lerma","Leyva","Limón","Linares","Lira","Llamas","Loera","Lomeli","Longoria","López","Lovato","Loya","Lozada","Lozano","Lucero","Lucio","Luevano","Lugo","Luna","Macías","Madera","Madrid","Madrigal","Maestas","Magaña","Malave","Maldonado","Manzanares","Mares","Marín","Márquez","Marrero","Marroquín","Martínez","Mascareñas","Mata","Mateo","Matías","Matos","Maya","Mayorga","Medina","Medrano","Mejía","Meléndez","Melgar","Mena","Menchaca","Méndez","Mendoza","Menéndez","Meraz","Mercado","Merino","Mesa","Meza","Miramontes","Miranda","Mireles","Mojica","Molina","Mondragón","Monroy","Montalvo","Montañez","Montaño","Montemayor","Montenegro","Montero","Montes","Montez","Montoya","Mora","Morales","Moreno","Mota","Moya","Munguía","Muñiz","Muñoz","Murillo","Muro","Nájera","Naranjo","Narváez","Nava","Navarrete","Navarro","Nazario","Negrete","Negrón","Nevárez","Nieto","Nieves","Niño","Noriega","Núñez","Ñañez","Ocampo","Ocasio","Ochoa","Ojeda","Olivares","Olivárez","Olivas","Olivera","Olivo","Olmos","Olvera","Ontiveros","Oquendo","Ordóñez","Orellana","Ornelas","Orosco","Orozco","Orta","Ortega","Ortiz","Osorio","Otero","Ozuna","Pabón","Pacheco","Padilla","Padrón","Páez","Pagan","Palacios","Palomino","Palomo","Pantoja","Paredes","Parra","Partida","Patiño","Paz","Pedraza","Pedroza","Pelayo","Peña","Perales","Peralta","Perea","Peres","Pérez","Pichardo","Pineda","Piña","Pizarro","Polanco","Ponce","Porras","Portillo","Posada","Prado","Preciado","Prieto","Puente","Puga","Pulido","Quesada","Quevedo","Quezada","Quinta","Quintairos","Quintana","Quintanilla","Quintero","Quintero cruz","Quintero de la cruz","Quiñones","Quiñónez","Quiros","Quiroz","Rael","Ramírez","Ramón","Ramos","Rangel","Rascón","Raya","Razo","Regalado","Rendón","Rentería","Reséndez","Reyes","Reyna","Reynoso","Rico","Rincón","Riojas","Ríos","Rivas","Rivera","Rivero","Robledo","Robles","Rocha","Rodarte","Rodrígez","Rodríguez","Rodríquez","Rojas","Rojo","Roldán","Rolón","Romero","Romo","Roque","Rosado","Rosales","Rosario","Rosas","Roybal","Rubio","Ruelas","Ruiz","Saavedra","Sáenz","Saiz","Salas","Salazar","Salcedo","Salcido","Saldaña","Saldivar","Salgado","Salinas","Samaniego","Sanabria","Sanches","Sánchez","Sandoval","Santacruz","Santana","Santiago","Santillán","Sarabia","Sauceda","Saucedo","Sedillo","Segovia","Segura","Sepúlveda","Serna","Serrano","Serrato","Sevilla","Sierra","Sisneros","Solano","Solís","Soliz","Solorio","Solorzano","Soria","Sosa","Sotelo","Soto","Suárez","Tafoya","Tamayo","Tamez","Tapia","Tejada","Tejeda","Téllez","Tello","Terán","Terrazas","Tijerina","Tirado","Toledo","Toro","Torres","Tórrez","Tovar","Trejo","Treviño","Trujillo","Ulibarri","Ulloa","Urbina","Ureña","Urías","Uribe","Urrutia","Vaca","Valadez","Valdés","Valdez","Valdivia","Valencia","Valentín","Valenzuela","Valladares","Valle","Vallejo","Valles","Valverde","Vanegas","Varela","Vargas","Vásquez","Vázquez","Vega","Vela","Velasco","Velásquez","Velázquez","Vélez","Véliz","Venegas","Vera","Verdugo","Verduzco","Vergara","Viera","Vigil","Villa","Villagómez","Villalobos","Villalpando","Villanueva","Villareal","Villarreal","Villaseñor","Villegas","Xacon","Xairo Belmonte","Xana","Xenia","Xiana","Xicoy","Yago","Yami","Yanes","Yáñez","Ybarra","Yebra","Yunta","Zabaleta","Zamarreno","Zamarripa","Zambrana","Zambrano","Zamora","Zamudio","Zapata","Zaragoza","Zarate","Zavala","Zayas","Zelaya","Zepeda","Zúñiga"]})),JU=c((()=>{Dh=["#{prefix} #{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} de #{last_name}","#{suffix} #{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} #{last_name}"]})),UU=c((()=>{xh=["Sr.","Sra.","Sta."]})),WU=c((()=>{Ch=["Jr.","Sr.","I","II","III","IV","V","MD","DDS","PhD","DVM","Ing.","Lic.","Dr.","Mtro."]})),ZU=c((()=>{Kh={descriptor:["Jefe","Senior","Directo","Corporativo","Dinánmico","Futuro","Producto","Nacional","Regional","Distrito","Central","Global","Cliente","Inversor","International","Heredado","Adelante","Interno","Humano","Gerente","SubGerente","Director"],level:["Soluciones","Programa","Marca","Seguridad","Investigación","Marketing","Normas","Implementación","Integración","Funcionalidad","Respuesta","Paradigma","Tácticas","Identidad","Mercados","Grupo","División","Aplicaciones","Optimización","Operaciones","Infraestructura","Intranet","Comunicaciones","Web","Calidad","Seguro","Mobilidad","Cuentas","Datos","Creativo","Configuración","Contabilidad","Interacciones","Factores","Usabilidad","Métricas"],job:["Supervisor","Asociado","Ejecutivo","Relacciones","Oficial","Gerente","Ingeniero","Especialista","Director","Coordinador","Administrador","Arquitecto","Analista","Diseñador","Planificador","Técnico","Funcionario","Desarrollador","Productor","Consultor","Asistente","Facilitador","Agente","Representante","Estratega","Scrum Master","Scrum Owner","Product Owner","Scrum Developer"]}})),qU=c((()=>{HU(),FU(),JU(),UU(),WU(),ZU(),Rh={first_name:Ph,last_name:Lh,name:Dh,prefix:xh,suffix:Ch,title:Kh}})),QU=c((()=>{zh=["5###-###-###","5##.###.###","5## ### ###","5########"]})),YU=c((()=>{QU(),Oh={formats:zh}})),$U=c((()=>{Ih=["hormigas","murciélagos","osos","abejas","pájaros","búfalo","gatos","pollos","ganado","perros","delfines","patos","elefantes","peces","zorros","ranas","gansos","cabras","caballos","canguros","leones","monos","búhos","bueyes","pingüinos","pueblo","cerdos","conejos","ovejas","tigres","ballenas","lobos","cebras","almas en pena","cuervos","gatos negros","quimeras","fantasmas","conspiradores","dragones","enanos","duendes","encantadores","exorcistas","hijos","enemigos","gigantes","gnomos","duendes","gansos","grifos","licántropos","némesis","ogros","oráculos","profetas","hechiceros","arañas","espíritus","vampiros","brujos","zorras","hombres lobo","brujas","adoradores","zombies","druidas"]})),XU=c((()=>{Vh=["#{Address.state} #{creature}"]})),eW=c((()=>{$U(),XU(),Gh={creature:Ih,name:Vh}})),aW=c((()=>{AU(),TU(),EU(),RU(),IU(),GU(),qU(),YU(),eW(),Hh={title:"Spanish (Mexico)",separator:" & ",address:ch,cell_phone:hh,commerce:vh,company:_h,internet:Eh,lorem:Bh,name:Rh,phone_number:Oh,team:Gh}})),nW=c((()=>{Fh=["##","#"]})),iW=c((()=>{Jh=["#{city_name}"]})),rW=c((()=>{Uh=["تهران","مشهد","اصفهان","کرج","تبریز","شیراز","اهواز","قم","کرمانشاه","ارومیه","رشت","زاهدان","کرمان","اراک","همدان","یزد","اردبیل","بندرعباس","اسلام‌شهر","زنجان","قزوین","سنندج","خرم‌آباد","گرگان","ساری","ملارد","قدس","کاشان","گلستان","شهریار","دزفول","خمینی‌شهر","بروجرد","نیشابور","سبزوار","نجف‌آباد","آمل","بابل","ورامین","آبادان","پاکدشت","خوی","ساوه","بجنورد","قائم‌شهر","بوشهر","قرچک","سیرجان","بیرجند","ایلام"]})),tW=c((()=>{Wh=["شمال","شرق","غرب","جنوب","جدید","جزیره"]})),oW=c((()=>{Zh=["روستا","شهر","دهکده","بندر","دژ","بندرگاه","ناحیه"]})),sW=c((()=>{qh=["چین","هند","ایالات متحده آمریکا","اندونزی","برزیل","بنگلادش","روسیه","ژاپن","پاکستان","ویتنام","نیجریه","مکزیک","اتیوپی","آلمان","فیلیپین","تایلند","جمهوری دموکراتیک کنگو","میانمار","بریتانیا","فرانسه","ترکیه","ایران","مصر","کره جنوبی","ایتالیا","تانزانیا","کلمبیا","اسپانیا","اوکراین","کنیا","کانادا","آفریقای جنوبی","لهستان","اوگاندا","آرژانتین","ازبکستان","پرو","نپال","ونزوئلا","مالزی","کره شمالی","استرالیا","غنا","سودان","مراکش","تایوان","الجزایر","موزامبیک","ماداگاسکار","رومانی","قزاقستان","آنگولا","عراق","سریلانکا","کامرون","عربستان سعودی","شیلی","هلند","ساحل عاج","کامبوج","افغانستان","یمن","اکوادور","بورکینافاسو","زامبیا","سنگال","مالاوی","گینه","پرتغال","جمهوری چک","کوبا","بلژیک","سوئد","سوریه","بلاروس","سوئیس","بولیوی","یونان","جمهوری دومینیکن","هائیتی","نیجر","جمهوری آذربایجان","امارات متحده عربی","گواتمالا","رواندا","چاد","مجارستان","بوروندی","پاپوآ گینه نو","تونس","زیمبابوه","هنگ کنگ","اتریش","بنین","هندوراس","اسرائیل","سومالی","سنگاپور","لائوس","مالی","پاراگوئه","نیکاراگوئه","اریتره","جمهوری کنگو","دانمارک","السالوادور","اسلواکی","نروژ","فنلاند","توگو","بلغارستان","نیوزیلند","کویت","قرقیزستان","ترکمنستان","کاستاریکا","تاجیکستان","سیرالئون","جمهوری ایرلند","جمهوری آفریقای مرکزی","گرجستان","اردن","کرواسی","صربستان","اروگوئه","لیبی","پاناما","بوسنی و هرزگوین","لبنان","لیتوانی","قطر","ارمنستان","لیبریا","موریتانی","بوتسوانا","پورتوریکو","جامائیکا","مولداوی","آلبانی","مغولستان","اردن","لتونی","عمان","جمهوری مقدونیه","اسلوونی","نامیبیا","لسوتو","کوزوو","گامبیا","بحرین","استونی","موریس","گینه بیسائو","گابن","ترینیداد و توباگو","قبرس","اسواتینی","تیمور شرقی","ماکائو","نوار غزه","پادشاهی بوتان","فیجی","گویان","جیبوتی","مونتهنگرو","کومور","لوکزامبورگ","برونئی","جزایر سلیمان","باهاما","کیپ ورد","گینه استوایی","مالت","ایسلند","سورینام","مالدیو","صحرای غربی","باربادوس","بلیز","پلینزی فرانسه","وانواتو","کالدونیای جدید","سنت لوسیا","کوراسائو","گوآم","گرنادا","سنت وینسنت و گرنادینها","جرسی","سائوتومه و پرنسیپ","موناکو","آروبا","جزایر ویرجین ایالات متحده","ساموآ","جزیره من","تونگا","سیشل","جزایر کیمن","جزایر ماریانای شمالی","برمودا","آندورا","لیختناشتاین","جزایر فارو","گرنزی","آنتیگوا و باربودا","گرینلند","دومینیکا","سنت مارتین","سان مارینو","سنت کیتس و نویس","ساموای آمریکا","سنت مارتین","ایالات فدرال میکرونزی","جزایر ویرجین انگلستان","جبل طارق","جزایر مارشال","پالائو","کیریباتی","جزایر کوک","آنگویلا","جزایر فالکلند","جزایر تورکس و کایکوس","مونتسرات","تووالو","سنت پیر و ماژلان","والیس و فوتونا","واتیکان","سینت هلینا","سوالبارد","جزیره نورفولک","نیووی","توکلائو","جزایر پیتکرن"]})),lW=c((()=>{Qh=["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW"]})),uW=c((()=>{Yh=["ایران"]})),cW=c((()=>{$h=["شمال","شرق","جنوب","غرب","شمال شرق","شمال غرب","جنوب شرق","جنوب غرب"]})),dW=c((()=>{Xh=["#####-#####"]})),hW=c((()=>{ep=["واحد #","# طبقه"]})),pW=c((()=>{ap=["آذربایجان شرقی","آذربایجان غربی","اردبیل","اصفهان","البرز","ایلام","بوشهر","تهران","چهارمحال و بختیاری","خراسان جنوبی","خراسان رضوی","خراسان شمالی","خوزستان","زنجان","سمنان","سیستان و بلوچستان","فارس","قزوین","قم","کردستان","کرمان","کرمانشاه","کهگیلویه و بویراحمد","گلستان","گیلان","لرستان","مازندران","مرکزی","هرمزگان","همدان","یزد"]})),mW=c((()=>{np=["#{street_name}, پلاک #{building_number}","#{street_name}, #{street_name}, پلاک #{building_number}"]})),fW=c((()=>{ip=["#{street_prefix} #{street_suffix}"]})),vW=c((()=>{rp=["خیابان","کوچه","بن بست","بلوار"]})),gW=c((()=>{tp=["آزادی","آفریقا","آذربایجان","حقانی","امیرکبیر","اجاره دار","اقبال لاهوری","ابوذر","قدس","سباری","فاطمی","مالک اشتر","نیایش","دیباجی","واعظی","دستغیب","موحد دانش","کارگر شمالی","استاد قریب","یادگار امام","دکتر چمران","رسالت","سمیه","شهید مطهری","هویزه","دماوند","توحید","ستارخان","کارون","استادمعین","رامین","اندرزگو"]})),kW=c((()=>{nW(),iW(),rW(),tW(),oW(),sW(),lW(),uW(),cW(),dW(),hW(),pW(),mW(),fW(),vW(),gW(),op={building_number:Fh,city:Jh,city_name:Uh,city_prefix:Wh,city_suffix:Zh,country:qh,country_code:Qh,default_country:Yh,direction:$h,postcode:Xh,secondary_address:ep,state:ap,street_address:np,street_name:ip,street_prefix:rp,street_suffix:tp}})),yW=c((()=>{sp=["0912 ### ####","0911 ### ####","0919 ### ####","0917 ### ####","0920 ### ####","0921 ### ####","0936 ### ####","0937 ### ####","0938 ### ####","0939 ### ####","0935 ### ####","0933 ### ####","0901 ### ####","0902 ### ####","0903 ### ####","0904 ### ####","0905 ### ####"]})),bW=c((()=>{yW(),lp={formats:sp}})),SW=c((()=>{up=["قرمز","سبز","آبی","زرد","بنفش","فیروزه ای","سفید","سیاه","قهوه ای","نارنجی","صورتی","خاکستری","خرمایی","آبی آسمانی","ارغوانی","زیتونی","نیلی","طلایی","لاجوردی","نقره ای"]})),AW=c((()=>{cp=["کتاب ها","فیلم ها","موزیک","بازی ها","الکترونیک","رایانه","خانه","باغ","ابزار","خواربار","سلامتی","زیبایی","اسباب بازی","بچه ها","بچه","تن پوش","کفش","زیور آلات","ورزش ها","بیرون از خانه","اتومبیل","صنعتی"]})),MW=c((()=>{dp={adjective:["کوچک","ارگونومیک","باهوش","جذاب","باور نکردنی","خارق العاده","کاربردی","براق","عالی","معمولی","دست ساز","لطیف","بدون محدودیت","خوش طعم"],material:["استیل","چوبی","بتنی","پلاستیکی","کتان","گرانیتی","فلزی","نرم","تازه","یخ زده"],product:["صندلی","ماشین","کامپیوتر","کیبورد","ماوس","دوچرخه","توپ","دستکش","شلوار","پیراهن","میز","کفش","کلاه","حوله","صابون","تن ماهی","مرغ","ماهی","پنیر","بیکن","پیتزا","سالاد","سوسیس","چیپس"]}})),TW=c((()=>{SW(),AW(),MW(),hp={color:up,department:cp,product_name:dp}})),_W=c((()=>{pp=["انطباقی","پیشرفته","بهبود یافته","جذب شده","خودکار","متعادل","متمرکز بر تجارت","متمرکز","کلون شده","سازگار","قابل تنظیم","گروه متقابل","متمرکز بر مشتری","قابل تنظیم","غیر متمرکز","مهندسی شده","دیجیتالی شده","توزیع شده","گوناگون","کوچک شده","پیشرفته","ارگونومیک","انحصاری","منبسط","تمدید شده","رو در رو","متمرکز شده","خط مقدم","کاملاً قابل تنظیم","مبتنی بر عملکرد","اساسی","ضد آینده","افقی","پیاده سازی شده","خلاقانه","یکپارچه","شهودی","معکوس","اجباری","نظارت شده","چند کاناله","چند جانبی","متن باز","عملیاتی","بهینه شده","اختیاری","ارگانیک","سازمان یافته","پشتکار","مداوم","درجه","قطبی","فعال","متمرکز بر سود","ژرف","قابل برنامه ریزی","ترقی خواه","متمرکز بر کیفیت","واکنش گرا","تصحیح شده","رکود","مهندسی معکوس","قدرتمند","بدون درز","امن","خود توانمندی","همه کاره","مجازی","بینایی"]})),wW=c((()=>{mp=["ارزش افزوده","عمودی","فعال","قدرتمند","انقلابی","مقیاس پذیر","پیشرو","خلاقانه","شهودی","راهبردی","تجارت الکترونیکی","ماموریت بحرانی","چسبنده","یک به یک","24/7","جهانی","دانه ای","بدون اصطکاک","مجازی","ویروسی","پویا","24/365","مغناطیسی","عقب","موثر","توزیع شده","بدون درز","قابل توسعه","کلاس جهانی","متن باز","هم افزایی","بینایی","سفارشی","مبتنی بر همکاری","متقاعد کننده","جامع","پولدار"]})),jW=c((()=>{fp=["هم افزایی","بازارها","شراکت","زیرساخت ها","پلتفرم","ابتکار عمل","کانال ها","اجتماعات","راه حل ها","خدمات الکترونیکی","موارد عملی","پورتال ها","سوله","فن آوری ها","محتوا","زنجیره تامین","همگرایی","روابط","معماری","رابط ها","بازارهای الکترونیکی","تجارت الکترونیک","سیستم ها","پهنای باند","مدل ها","ذهنیت","تحویل دادنی ها","کاربران","شبکه ها","برنامه های کاربردی","تجارت الکترونیکی","ویژگی ها","تجربیات","روش شناسی","بلاکچین"]})),EW=c((()=>{vp=["پیاده سازی","استفاده","ادغام","ساده سازی","بهینه سازی","تبدیل","پذیرفتن","فعال کردن","نفوذ کردن","اختراع دوباره","تجمیع","معماری","تحریک کردن","مورف","قدرت دادن","پیش بینی کننده","کسب درآمد","مهار","تسهیل کردن","تصاحب کردن","بی تفاوت","هم افزایی","استراتژی کردن","استقرار","نام تجاری","رشد کردن","هدف"]})),NW=c((()=>{gp=["24 ساعت","24/7","نسل سوم","نسل چهارم","نسل پنجم","نسل ششم","تجزیه و تحلیل","نامتقارن","ناهمگام","نگرش محور","پس زمینه","پهنای باند پایش","دو جهته","دوتایی","روشن اندیشی","مشتری محور","سرویس دهنده مشتری","منسجم","مرکب","حساس به متن","مبتنی بر متن","مبتنی بر محتوا","اختصاصی","تقاضا محور","اموزشی","جهت دار","گسسته","بی تفاوت","پویا","محیط زیست","توانمند سازی","اجرایی","صریح","خطاپذيری","پیش زمینه","پایدار","ثابت","سیستمی","شایسته سیستم","محسوس","انتقالی","یکسان","روند رو به بالا","تحمل صفر"]})),BW=c((()=>{kp=["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} و #{Name.last_name}"]})),PW=c((()=>{yp=["توانایی","دسترسی","آداپتور","الگوریتم","اتحاد","تحلیلگر","کاربرد","رویکرد","معماری","بایگانی","هوش مصنوعی","آرایه","نگرش","معیار","مدیریت بودجه","قابلیت","ظرفیت","چالش","جریان","همکاری","پیچیدگی","مفهوم","اجتماع","احتمالی","هسته","بانک اطلاعاتی","پایگاه داده تحلیلی","تعریف","شبیه سازی","رمزگذاری","اکسترانت","سیستم عامل","انعطاف پذیری","نیروی کار"]})),LW=c((()=>{bp=["کارخانه","و پسران","شرکت با مسئولیت محدود","گروه"]})),DW=c((()=>{_W(),wW(),jW(),EW(),NW(),BW(),PW(),LW(),Sp={adjective:pp,bs_adjective:mp,bs_noun:fp,bs_verb:vp,descriptor:gp,name:kp,noun:yp,suffix:bp}})),xW=c((()=>{Ap={wide:["فروردین","اردیبهشت","خرداد","تیر","مرداد","شهریور","مهر","آبان","آذر","دی","بهمن","اسفند"],wide_context:["فروردین","اردیبهشت","خرداد","تیر","مرداد","شهریور","مهر","آبان","آذر","دی","بهمن","اسفند"],abbr:["فرو","ارد","خرد","تیر","مرد","شهر","مهر","آبا","آذر","دی","بهم","اسف"],abbr_context:["فرو","ارد","خرد","تیر","مرد","شهر","مهر","آبا","آذر","دی","بهم","اسف"]}})),CW=c((()=>{Mp={wide:["شنبه","یکشنبه","دوشنبه","سه شنبه","چهارشنبه","پتچشنبه","جمعه"],wide_context:["شنبه","یکشنبه","دوشنبه","سه شنبه","چهارشنبه","پتچشنبه","جمعه"],abbr:["ش","ی","د","س","چ","پ","ج"],abbr_context:["ش","ی","د","س","چ","پ","ج"]}})),KW=c((()=>{xW(),CW(),Tp={month:Ap,weekday:Mp}})),RW=c((()=>{_p=["پس انداز","سرمایه گذاری","وام مسکن","کارت اعتباری","وام خودرو","وام شخصی"]})),zW=c((()=>{wp=["5[1-5]##-####-####-###L","6771-89##-####-###L"]})),OW=c((()=>{jp=["4###########L","4###-####-####-###L"]})),IW=c((()=>{zW(),OW(),Ep={mastercard:wp,visa:jp}})),VW=c((()=>{Np={"درهم امارات":{code:"AED",symbol:""},"افغانی":{code:"AFN",symbol:"؋"},"پزو آرژانتین":{code:"ARS",symbol:"$"},"دلار استرالیا":{code:"AUD",symbol:"$"},"مانات آذربایجان":{code:"AZN",symbol:"ман"},"دلار کانادا":{code:"CAD",symbol:"$"},"فرانک سوئیس":{code:"CHF",symbol:"CHF"},"کرون چک":{code:"CZK",symbol:"Kč"},"کرون":{code:"EEK",symbol:""},"دینار عراق":{code:"IQD",symbol:""},"ریال ایران":{code:"IRR",symbol:"﷼"},"کرون ایسلند":{code:"ISK",symbol:"kr"},"دینار اردن":{code:"JOD",symbol:""},"ین":{code:"JPY",symbol:"¥"},"دینار کویت":{code:"KWD",symbol:""},"دینار لیبی":{code:"LYD",symbol:""},"درهم مراکش":{code:"MAD",symbol:""},"روپی نپال":{code:"NPR",symbol:"₨"},"ریال عمان":{code:"OMR",symbol:"﷼"},"پزو فیلیپین":{code:"PHP",symbol:"Php"},"روپی پاکستان":{code:"PKR",symbol:"₨"},"ریال قطر":{code:"QAR",symbol:"﷼"},"روبل روسیه":{code:"RUB",symbol:"руб"},"ریال عربستان":{code:"SAR",symbol:"﷼"},"پوند سودان":{code:"SDG",symbol:""},"کرون سوئد":{code:"SEK",symbol:"kr"},"دلار سنگاپور":{code:"SGD",symbol:"$"}}})),GW=c((()=>{Bp=["سپرده","برداشت از حساب","پرداخت","صورتحساب"]})),HW=c((()=>{RW(),IW(),VW(),GW(),Pp={account_type:_p,credit_card:Ep,currency:Np,transaction_type:Bp}})),FW=c((()=>{Lp=["com","ir","info","net","org"]})),JW=c((()=>{Dp=["example.org","example.com","example.net"]})),UW=c((()=>{xp=["gmail.com","yahoo.com","hotmail.com"]})),WW=c((()=>{FW(),JW(),UW(),Cp={domain_suffix:Lp,example_email:Dp,free_email:xp}})),ZW=c((()=>{Kp=["لورم","ایپسوم","متن","ساختگی","با،","تولید","سادگی","نامفهوم،","از","صنعت","چاپ","و با","استفاده","از","طراحان","گرافیک","است","چاپگرها","و متون","بلکه","روزنامه.","و مجله","در","ستون","و سطر","آنچنان","که،","لازم","است","و برای","شرایط","فعلی","تکنولوژی","مورد نیاز","و کاربردهای","متنوع","با هدف","بهبود","ابزارهای کاربردی","می باشد","کتابهای","زیادی","در","شصت و سه درصد","گذشته","حال","و آینده","شناخت","فراوان","جامعه","و","متخصصان","را","می طلبد","تا با،","نرم افزارها","شناخت","بیشتری را","برای","طراحان","رایانه ای","علی الخصوص ","طراحان خلاقی","و فرهنگ پیشرو","در زبان فارسی ","ایجاد","کرد","در این صورت","می توان","امید","داشت","که","تمام","و دشواری","موجود","در","ارائه","راهکارها","و","شرایط","سخت","تایپ","به پایان"," و زمان","مورد نیاز","شامل","حروفچینی","دستاوردهای","اصلی","و","جوابگوی","سوالات","پیوسته","اهل","دنیای","موجود","طراحی","اساسا","مورد","استفاده","قرار گیرد"]})),qW=c((()=>{ZW(),Rp={words:Kp}})),QW=c((()=>{zp=["مریم","نازنین","غزاله","محدثه","بهناز","زینب","کیمیا","سوسن","لاله","آنا","آناهیتا","آنیتا","آرمیتا","آتوسا","آیدا","بنفشه","بهار","بیتا","پارمیس","پریناز","پریسا","پرنیان","سارا","پگاه","ترانه","چکاوک","دریا","درسا","فرشته","ملیسا","ملیکا","رویا","زیبا","یاسمن","سپیده","سمیرا","سیما","شادی","هانیه","شهرزاد","شکوه","سمیه","شهلا","شیدا","شیوا","فرانک","فرزانه","فرناز","فریبا","فریماه","کتایون","گلاره","گیتی","گیسو","مروارید","مهرناز","مهسا","مینا","مینو","مهوش","میترا","نگین","نگار","نیلوفر","رز","هلیا","هستی"]})),YW=c((()=>{Op=["آبان دخت","آبتین","آتوسا","آفر","آفره دخت","آذرنوش‌","آذین","آراه","آرزو","آرش","آرتین","آرتام","آرتمن","آرشام","آرمان","آرمین","آرمیتا","آریا فر","آریا","آریا مهر","آرین","آزاده","آزرم","آزرمدخت","آزیتا","آناهیتا","آونگ","آهو","آیدا","اختر","ارد","اردشیر","اردوان","ارژن","ارژنگ","ارسلان","ارغوان","ارمغان","ارنواز","اروانه","استر","اسفندیار","اشکان","اشکبوس","افسانه","افسون","افشین","امید","آنوشا","انوشروان","اورنگ","اوژن","اوستا","اهورا","ایاز","ایران","ایراندخت","ایرج","ایزدیار","بابک","باپوک","باربد","بارمان","بامداد","بامشاد","بانو","بختیار","برانوش","بردیا","برزو","برزویه","برزین","برمک","بزرگمهر","بنفشه","بوژان","بویان","بهار","بهارک","بهاره","بهتاش","بهداد","بهرام","بهدیس","بهرخ","بهرنگ","بهروز","بهزاد","بهشاد","بهمن","بهناز","بهنام","بهنود","بهنوش","بیتا","بیژن","پارسا","پاکان","پاکتن","پاکدخت","پانته آ","پدرام","پرتو","پرشنگ","پرتو","پرستو","پرویز","پردیس","پرهام","پژمان","پژوا","پرنیا","پشنگ","پروانه","پروین","پری","پریچهر","پریدخت","پریسا","پرناز","پریوش","پریا","پوپک","پوران","پوراندخت","پوریا","پولاد","پویا","پونه","پیام","پیروز","پیمان","تابان","تاباندخت","تاجی","تارا","تاویار","ترانه","تناز","توران","توراندخت","تورج","تورتک","توفان","توژال","تیر داد","تینا","تینو","جابان","جامین","جاوید","جریره","جمشید","جوان","جویا","جهان","جهانبخت","جهانبخش","جهاندار","جهانگیر","جهان بانو","جهاندخت","جهان ناز","جیران","چابک","چالاک","چاوش","چوبین","چهرزاد","خاوردخت","خداداد","خدایار","خرم","خرمدخت","خسرو","خشایار","خورشید","دادمهر","دارا","داراب","داریا","داریوش","دانوش","داور‌","دایان","دریا","دل آرا","دل آویز","دلارام","دل انگیز","دلبر","دلبند","دلربا","دلشاد","دلکش","دلناز","دلنواز","دورشاسب","دنیا","دیااکو","دیانوش","دیبا","دیبا دخت","رابو","رابین","رادبانو","رادمان","رازبان","راژانه","راسا","رامتین","رامش","رامشگر","رامونا","رامیار","رامیلا","رامین","راویار","رژینا","رخپاک","رخسار","رخشانه","رخشنده","رزمیار","رستم","رکسانا","روبینا","رودابه","روزبه","روشنک","روناک","رهام","رهی","ریبار","راسپینا","زادبخت","زاد به","زاد چهر","زاد فر","زال","زادماسب","زاوا","زردشت","زرنگار","زری","زرین","زرینه","زمانه","زونا","زیبا","زیبار","زیما","زینو","ژاله","ژالان","ژیار","ژینا","ژیوار","سارا","سارک","سارنگ","ساره","ساسان","ساغر","سام","سامان","سانا","ساناز","سانیار","ساویز","ساهی","ساینا","سایه","سپنتا","سپند","سپهر","سپهرداد","سپیدار","سپید بانو","سپیده","ستاره","ستی","سرافراز","سرور","سروش","سرور","سوبا","سوبار","سنبله","سودابه","سوری","سورن","سورنا","سوزان","سوزه","سوسن","سومار","سولان","سولماز","سوگند","سهراب","سهره","سهند","سیامک","سیاوش","سیبوبه ‌","سیما","سیمدخت","سینا","سیمین","سیمین دخت","شاپرک","شادی","شادمهر","شاران","شاهپور","شاهدخت","شاهرخ","شاهین","شاهیندخت","شایسته","شباهنگ","شب بو","شبدیز","شبنم","شراره","شرمین","شروین","شکوفه","شکفته","شمشاد","شمین","شوان","شمیلا","شورانگیز","شوری","شهاب","شهبار","شهباز","شهبال","شهپر","شهداد","شهرآرا","شهرام","شهربانو","شهرزاد","شهرناز","شهرنوش","شهره","شهریار","شهرزاد","شهلا","شهنواز","شهین","شیبا","شیدا","شیده","شیردل","شیرزاد","شیرنگ","شیرو","شیرین دخت","شیما","شینا","شیرین","شیوا","طوس","طوطی","طهماسب","طهمورث","غوغا","غنچه","فتانه","فدا","فراز","فرامرز","فرانک","فراهان","فربد","فربغ","فرجاد","فرخ","فرخ پی","فرخ داد","فرخ رو","فرخ زاد","فرخ لقا","فرخ مهر","فرداد","فردیس","فرین","فرزاد","فرزام","فرزان","فرزانه","فرزین","فرشاد","فرشته","فرشید","فرمان","فرناز","فرنگیس","فرنود","فرنوش","فرنیا","فروتن","فرود","فروز","فروزان","فروزش","فروزنده","فروغ","فرهاد","فرهنگ","فرهود","فربار","فریبا","فرید","فریدخت","فریدون","فریمان","فریناز","فرینوش","فریوش","فیروز","فیروزه","قابوس","قباد","قدسی","کابان","کابوک","کارا","کارو","کاراکو","کامبخت","کامبخش","کامبیز","کامجو","کامدین","کامران","کامراوا","کامک","کامنوش","کامیار","کانیار","کاووس","کاوه","کتایون","کرشمه","کسری","کلاله","کمبوجیه","کوشا","کهبد","کهرام","کهزاد","کیارش","کیان","کیانا","کیانچهر","کیاندخت","کیانوش","کیاوش","کیخسرو","کیقباد","کیکاووس","کیوان","کیوان دخت","کیومرث","کیهان","کیاندخت","کیهانه","گرد آفرید","گردان","گرشا","گرشاسب","گرشین","گرگین","گزل","گشتاسب","گشسب بانو","گل","گل آذین","گل آرا‌","گلاره","گل افروز","گلاله","گل اندام","گلاویز","گلباد","گلبار","گلبام","گلبان","گلبانو","گلبرگ","گلبو","گلبهار","گلبیز","گلپاره","گلپر","گلپری","گلپوش","گل پونه","گلچین","گلدخت","گلدیس","گلربا","گلرخ","گلرنگ","گلرو","گلشن","گلریز","گلزاد","گلزار","گلسا","گلشید","گلنار","گلناز","گلنسا","گلنواز","گلنوش","گلی","گودرز","گوماتو","گهر چهر","گوهر ناز","گیتی","گیسو","گیلدا","گیو","لادن","لاله","لاله رخ","لاله دخت","لبخند","لقاء","لومانا","لهراسب","مارال","ماری","مازیار","ماکان","مامک","مانا","ماندانا","مانوش","مانی","مانیا","ماهان","ماهاندخت","ماه برزین","ماه جهان","ماهچهر","ماهدخت","ماهور","ماهرخ","ماهزاد","مردآویز","مرداس","مرزبان","مرمر","مریم","مزدک","مژده","مژگان","مستان","مستانه","مشکاندخت","مشکناز","مشکین دخت","منیژه","منوچهر","مهبانو","مهبد","مه داد","مهتاب","مهدیس","مه جبین","مه دخت","مهر آذر","مهر آرا","مهر آسا","مهر آفاق","مهر افرین","مهرآب","مهرداد","مهر افزون","مهرام","مهران","مهراندخت","مهراندیش","مهرانفر","مهرانگیز","مهرداد","مهر دخت","مهرزاده ‌","مهرناز","مهرنوش","مهرنکار","مهرنیا","مهروز","مهری","مهریار","مهسا","مهستی","مه سیما","مهشاد","مهشید","مهنام","مهناز","مهنوش","مهوش","مهیار","مهین","مهین دخت","میترا","میخک","مینا","مینا دخت","مینو","مینودخت","مینو فر","نادر","ناز آفرین","نازبانو","نازپرور","نازچهر","نازفر","نازلی","نازی","نازیدخت","نامور","ناهید","ندا","نرسی","نرگس","نرمک","نرمین","نریمان","نسترن","نسرین","نسرین دخت","نسرین نوش","نکیسا","نگار","نگاره","نگارین","نگین","نوا","نوش","نوش آذر","نوش آور","نوشا","نوش آفرین","نوشدخت","نوشروان","نوشفر","نوشناز","نوشین","نوید","نوین","نوین دخت","نیشا","نیک بین","نیک پی","نیک چهر","نیک خواه","نیکداد","نیکدخت","نیکدل","نیکزاد","نیلوفر","نیما","وامق","ورجاوند","وریا","وشمگیر","وهرز","وهسودان","ویدا","ویس","ویشتاسب","ویگن","هژیر","هخامنش","هیربد","هرمز","همایون","هما","همادخت","همدم","همراز","همراه","هنگامه","هوتن","هور","هورتاش","هورچهر","هورداد","هوردخت","هورزاد","هورمند","هوروش","هوشنگ","هوشیار","هومان","هومن","هونام","هویدا","هیتاسب","هیرمند","هیما","هیوا","یادگار","یاسمن","یاشار","یاور","یزدان","یگانه","یوشیتا"]})),$W=c((()=>{Ip=["عارف","عاشوری","عالی","عبادی","عبدالکریمی","عبدالملکی","عراقی","عزیزی","عصار","عقیلی","علم","علم‌الهدی","علی عسگری","علی‌آبادی","علیا","علی‌پور","علی‌زمانی","عنایت","غضنفری","غنی","فارسی","فاطمی","فانی","فتاحی","فرامرزی","فرج","فرشیدورد","فرمانفرمائیان","فروتن","فرهنگ","فریاد","فنایی","فنی‌زاده","فولادوند","فهمیده","قاضی","قانعی","قانونی","قمیشی","قنبری","قهرمان","قهرمانی","قهرمانیان","قهستانی","کاشی","کاکاوند","کامکار","کاملی","کاویانی","کدیور","کردبچه","کرمانی","کریمی","کلباسی","کمالی","کوشکی","کهنمویی","کیان","کیانی (نام خانوادگی)","کیمیایی","گل محمدی","گلپایگانی","گنجی","لاجوردی","لاچینی","لاهوتی","لنکرانی","لوکس","مجاهد","مجتبایی","مجتبوی","مجتهد شبستری","مجتهدی","مجرد","محجوب","محجوبی","محدثی","محمدرضایی","محمدی","مددی","مرادخانی","مرتضوی","مستوفی","مشا","مصاحب","مصباح","مصباح‌زاده","مطهری","مظفر","معارف","معروف","معین","مفتاح","مفتح","مقدم","ملایری","ملک","ملکیان","منوچهری","موحد","موسوی","موسویان","مهاجرانی","مهدی‌پور","میرباقری","میردامادی","میرزاده","میرسپاسی","میزبانی","ناظری","نامور","نجفی","ندوشن","نراقی","نعمت‌زاده","نقدی","نقیب‌زاده","نواب","نوبخت","نوبختی","نهاوندی","نیشابوری","نیلوفری","واثقی","واعظ","واعظ‌زاده","واعظی","وکیلی","هاشمی","هاشمی رفسنجانی","هاشمیان","هامون","هدایت","هراتی","هروی","همایون","همت","همدانی","هوشیار","هومن","یاحقی","یادگار","یثربی","یلدا"]})),XW=c((()=>{Vp=["علی","حسن","محمد","مهدی","مسعود","دانیال","سجاد","امیر","رضا","مازیار","مهیار","محمدرضا","فرهاد","افشین","مهرداد","مهراد","کیانوش","کیوان","کامران","مهران","سروش","سامان","هادی","همایون","ایمان","رامین","رامتین","امین","سپهر","سهیل","عرفان","جواد","نیما","پرهام","میلاد","شایان","شهاب","کاوه","بهمن","سیاوش","سعید","امید","حسین","سینا","مهدیار","صدرا","عباس","امیرسینا","نوید","پیمان","پژمان","مجید","حمید","وحید","علیرضا","آیدین","آرمان","امیرحسین","آرین","کسرا","جمشید","فریبرز","قاسم","صمد","حامد","فرزاد","فریدون","فربد","فرگام","یاسین","آرش","آرمین","شهروز"]})),eZ=c((()=>{Gp=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),aZ=c((()=>{Hp=["آقای","خانم","دکتر"]})),nZ=c((()=>{Fp={descriptor:["رهبر","ارشد","مستقیم","پویا","آینده","محصول","ملی","منطقه","ناحیه","مرکزی","جهانی","مشتری","سرمایه گذار","بین المللی","میراث","داخلی","انسان","رئیس","مدیر اصلی"],level:["راه حل ها","برنامه","نام تجاری","امنیت","پژوهش","بازار یابی","رهنمود","پیاده سازی","ادغام","عملکرد","واکنش","الگو","تدابیر","شناسایی","بازارها","گروه ها","بخش","برنامه های کاربردی","بهينه سازي","عملیات","زیر ساخت","اینترانت","ارتباطات","وب","کیفیت","اطمینان","پویایی","حساب ها","داده ها","خلاقیت","پیکربندی","مسئوليت","فعل و انفعالات","عوامل","قابلیت استفاده","معیار"],job:["کارگر ساده","سرپرست کارگاه","ناظر","مهندس پروژه","کارفرما","مدیر","سرپرست","اموردفتری","کارمند","مسئول","مدیرعامل","رئیس هیئت مدیره","عضو هیئت مدیره","کارشناس","مربی","مدرس","منشی","فروشنده","متصدی","تکنسین","استادکار","نصاب","حسابدار","راننده","نگهبان","رئیس","مهندس","مدیرفروش","کارشناس فنی","مسئول فنی","کارگر فنی","بازاریاب","کارپرداز","خدمتگزار"]}})),iZ=c((()=>{QW(),YW(),$W(),XW(),eZ(),aZ(),nZ(),Jp={female_first_name:zp,first_name:Op,last_name:Ip,male_first_name:Vp,name:Gp,prefix:Hp,title:Fp}})),rZ=c((()=>{Up=["021 ### #####","031 ### #####","041 ### #####","045 ### #####","061 ### #####","051 ### #####","058 ### #####","028 ### #####","026 ### #####","044 ### #####","024 ### #####","023 ### #####","076 ### #####","+98 21 ### #####"]})),tZ=c((()=>{rZ(),Wp={formats:Up}})),oZ=c((()=>{Zp=["دیزل","الکتریکی","بنزین","هیبرید"]})),sZ=c((()=>{qp=["شورولت","کادیلاک","فورد","کرایسلر","دوج","جیپ","تسلا","تویوتا","هوندا","نیسان","آٔ‌ئودی","مرسدس بنز","بی ام و","ولکس واگن","پورشه","جگوار","استون مارتین","لندرور","بنتلی","مینی","رولز رویس","فیات","لامبورگینی","مازراتی","فراری","بوگاتی","کیا","هیوندای"]})),lZ=c((()=>{Qp=["فیستا","فوکوس","تاروس","موستانگ","اکسپلورر","کروز","مالیبو","ایمپالا","کامارو","کروت","کولورادو","سیلورادو","اسکالید","آلپاین","چارجر","چلنجر","رانگلر","گرند چروکی","رودستر","کمری","پریوس","لندکروزر","آکورد","سیویک","المنت","سنترا","آلتیما","یبتل","جتا","گلف","911","اسپایدر","کونتاچ","مورسیه لاگو","اونتادور"]})),uZ=c((()=>{Yp=["ون","کوپه","پیکاپ","مینی ون","ون مسافرتی","شاسی بلند","سدان","استیشن"]})),cZ=c((()=>{oZ(),sZ(),lZ(),uZ(),$p={fuel:Zp,manufacturer:qp,model:Qp,type:Yp}})),dZ=c((()=>{kW(),bW(),TW(),DW(),KW(),HW(),WW(),qW(),iZ(),tZ(),cZ(),Xp={title:"Farsi",address:op,cell_phone:lp,commerce:hp,company:Sp,date:Tp,finance:Pp,internet:Cp,lorem:Rp,name:Jp,phone_number:Wp,vehicle:$p}})),hZ=c((()=>{em=["Aino","Anja","Anna","Anne","Anneli","Annikki","Eeva","Elina","Elisabet","Emilia","Eveliina","Hanna","Hannele","Helena","Inkeri","Irmeli","Johanna","Kaarina","Karoliina","Katariina","Kristiina","Kyllikki","Laura","Leena","Liisa","Maarit","Maija","Mari","Maria","Marika","Marja","Marjatta","Minna","Orvokki","Pauliina","Pirjo","Pirkko","Päivi","Riitta","Ritva","Sari","Satu","Sinikka","Sofia","Susanna","Tarja","Tellervo","Tiina","Tuula","Tuulikki"]})),pZ=c((()=>{am=["Aleksi","Antero","Antti","Ari","Eero","Ensio","Erik","Erkki","Hannu","Heikki","Henrik","Ilmari","Jaakko","Janne","Jari","Johannes","Juha","Juhani","Juho","Jukka","Kalervo","Kalevi","Kari","Kristian","Lauri","Markku","Marko","Markus","Martti","Matias","Matti","Mika","Mikael","Mikko","Olavi","Oskari","Pekka","Pentti","Petri","Petteri","Sakari","Sami","Seppo","Tapani","Tapio","Timo","Tuomas","Valtteri","Veikko","Ville","Aino","Anja","Anna","Anne","Anneli","Annikki","Eeva","Elina","Elisabet","Emilia","Eveliina","Hanna","Hannele","Helena","Inkeri","Irmeli","Johanna","Kaarina","Karoliina","Katariina","Kristiina","Kyllikki","Laura","Leena","Liisa","Maarit","Maija","Mari","Maria","Marika","Marja","Marjatta","Minna","Orvokki","Pauliina","Pirjo","Pirkko","Päivi","Riitta","Ritva","Sari","Satu","Sinikka","Sofia","Susanna","Tarja","Tellervo","Tiina","Tuula","Tuulikki"]})),mZ=c((()=>{nm=["Aaltonen","Ahonen","Anttila","Hakala","Heikkilä","Heikkinen","Heinonen","Hiltunen","Hirvonen","Hämäläinen","Jokinen","Järvinen","Kallio","Karjalainen","Kinnunen","Koivisto","Korhonen","Koskinen","Laakso","Laaksonen","Lahtinen","Laine","Laitinen","Lehtinen","Lehto","Lehtonen","Leinonen","Leppänen","Manninen","Mattila","Miettinen","Mustonen","Mäkelä","Mäkinen","Niemi","Nieminen","Ojala","Pitkänen","Rantanen","Räsänen","Saarinen","Salminen","Salo","Salonen","Savolainen","Toivonen","Tuominen","Turunen","Virtanen","Väisänen"]})),fZ=c((()=>{im=["Aleksi","Antero","Antti","Ari","Eero","Ensio","Erik","Erkki","Hannu","Heikki","Henrik","Ilmari","Jaakko","Janne","Jari","Johannes","Juha","Juhani","Juho","Jukka","Kalervo","Kalevi","Kari","Kristian","Lauri","Markku","Marko","Markus","Martti","Matias","Matti","Mika","Mikael","Mikko","Olavi","Oskari","Pekka","Pentti","Petri","Petteri","Sakari","Sami","Seppo","Tapani","Tapio","Timo","Tuomas","Valtteri","Veikko","Ville"]})),vZ=c((()=>{rm=["#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),gZ=c((()=>{hZ(),pZ(),mZ(),fZ(),vZ(),tm={female_first_name:em,first_name:am,last_name:nm,male_first_name:im,name:rm}})),kZ=c((()=>{gZ(),om={title:"Finnish",name:tm}})),yZ=c((()=>{sm=["####","###","##","#"]})),bZ=c((()=>{lm=["#{city_name}"]})),SZ=c((()=>{um=["Aix-en-Provence","Ajaccio","Amiens","Angers","Antibes","Antony","Argenteuil","Asnières-sur-Seine","Aubervilliers","Aulnay-sous-Bois","Avignon","Beauvais","Besançon","Béziers","Bordeaux","Boulogne-Billancourt","Bourges","Brest","Caen","Calais","Cannes","Cayenne","Cergy","Chambéry","Champigny-sur-Marne","Cholet","Clermont-Ferrand","Clichy","Colmar","Colombes","Courbevoie","Créteil","Dijon","Drancy","Dunkerque","Fort-de-France","Grenoble","Hyères","Issy-les-Moulineaux","Ivry-sur-Seine","La Rochelle","La Seyne-sur-Mer","Le Havre","Le Mans","Le Tampon","Les Abymes","Levallois-Perret","Lille","Limoges","Lorient","Lyon","Marseille","Mérignac","Metz","Montauban","Montpellier","Montreuil","Mulhouse","Nancy","Nanterre","Nantes","Neuilly-sur-Seine","Nice","Nîmes","Niort","Noisy-le-Grand","Orléans","Paris","Pau","Perpignan","Pessac","Poitiers","Quimper","Reims","Rennes","Roubaix","Rouen","Rueil-Malmaison","Saint-Denis","Saint-Denis","Saint-Étienne","Saint-Maur-des-Fossés","Saint-Nazaire","Saint-Paul","Saint-Pierre","Saint-Quentin","Sarcelles","Strasbourg","Toulon","Toulouse","Tourcoing","Tours","Troyes","Valence","Vénissieux","Versailles","Villejuif","Villeneuve-d'Ascq","Villeurbanne","Vitry-sur-Seine"]})),AZ=c((()=>{cm=["Afghanistan","Albanie","Algérie","Andorre","Angola","Antigua-et-Barbuda","Argentine","Arménie","Australie","Autriche","Azerbaïdjan","Bahamas","Bahreïn","Bangladesh","Barbade","Biélorussie","Belgique","Belize","Bénin","Bhoutan","Bolivie","Bosnie-Herzégovine","Botswana","Brésil","Brunei","Bulgarie","Burkina Faso","Burundi","Cambodge","Cameroun","Canada","Cap-Vert","République centrafricaine","Tchad","Chili","Chine","Colombie","Comores","Costa Rica","Côte d’Ivoire","Croatie","Cuba","Chypre","République tchèque","République démocratique du Congo","Danemark","Djibouti","Dominique","République dominicaine","Timor oriental","Équateur","Égypte","Salvador","Guinée équatoriale","Érythrée","Estonie","Éthiopie","Fidji","Finlande","France","Gabon","Gambie","Géorgie","Allemagne","Ghana","Grèce","Grenade","Guatemala","Guinée","Guinée-Bissau","Guyane","Haïti","Honduras","Hongrie","Islande","Inde","Indonésie","Iran","Irak","Irlande","Israël","Italie","Jamaïque","Japon","Jordan","Kazakhstan","Kenya","Kiribati","Koweït","Kirghizistan","Laos","Lettonie","Liban","Lesotho","Liberia","Libye","Liechtenstein","Lituanie","Luxembourg","Madagascar","Malawi","Malaisie","Maldives","Mali","Malte","Îles Marshall","Mauritanie","Maurice","Mexique","Micronésie","Moldavie","Monaco","Mongolie","Monténégro","Maroc","Mozambique","Birmanie","Namibie","Nauru","Népal","Pays-Bas","Nouvelle-Zélande","Nicaragua","Niger","Nigeria","Corée du Nord","Norvège","Oman","Pakistan","Palau","Panama","Papouasie-Nouvelle-Guinée","Paraguay","Pérou","Philippines","Pologne","Portugal","Qatar","République du Congo","Macédoine","Roumanie","Russie","Rwanda","Saint-Christophe-et-Niévès","Sainte-Lucie","Saint-Vincent-et-les-Grenadines","Samoa","Saint-Marin","São Tomé-et-Principe","Arabie saoudite","Sénégal","Serbie","Seychelles","Sierra Leone","Singapour","Slovaquie","Slovénie","Îles Salomon","Somalie","Afrique du Sud","Corée du Sud","Soudan du Sud","Espagne","Sri Lanka","Soudan","Suriname","Swaziland","Suède","Suisse","Syrie","Tadjikistan","Tanzanie","Thaïlande","Togo","Tonga","Trinité-et-Tobago","Tunisie","Turquie","Turkménistan","Tuvalu","Ouganda","Ukraine","Émirats arabes unis","Royaume-Uni","États-Unis","Uruguay","Ouzbékistan","Vanuatu","Venezuela","Viêt Nam","Yémen","Zambie","Zimbabwe"]})),MZ=c((()=>{dm=["France"]})),TZ=c((()=>{hm=["#####"]})),_Z=c((()=>{pm=["Apt. ###","# étage"]})),wZ=c((()=>{mm=["Alsace","Aquitaine","Auvergne","Basse-Normandie","Bourgogne","Bretagne","Centre","Champagne-Ardenne","Corse","Franche-Comté","Haute-Normandie","Île-de-France","Languedoc-Roussillon","Limousin","Lorraine","Midi-Pyrénées","Nord-Pas-de-Calais","Pays de la Loire","Picardie","Poitou-Charentes","Provence-Alpes-Côte d'Azur","Rhône-Alpes"]})),jZ=c((()=>{fm=["#{building_number} #{street_name}"]})),EZ=c((()=>{vm=["#{street_prefix} #{street_suffix}"]})),NZ=c((()=>{gm=["Allée","Voie","Rue","Avenue","Boulevard","Quai","Passage","Impasse","Place"]})),BZ=c((()=>{km=["de l'Abbaye","Adolphe Mille","d'Alésia","d'Argenteuil","d'Assas","du Bac","de Paris","La Boétie","Bonaparte","de la Bûcherie","de Caumartin","Charlemagne","du Chat-qui-Pêche","de la Chaussée-d'Antin","du Dahomey","Dauphine","Delesseux","du Faubourg Saint-Honoré","du Faubourg-Saint-Denis","de la Ferronnerie","des Francs-Bourgeois","des Grands Augustins","de la Harpe","du Havre","de la Huchette","Joubert","Laffitte","Lepic","des Lombards","Marcadet","Molière","Monsieur-le-Prince","de Montmorency","Montorgueil","Mouffetard","de Nesle","Oberkampf","de l'Odéon","d'Orsel","de la Paix","des Panoramas","Pastourelle","Pierre Charron","de la Pompe","de Presbourg","de Provence","de Richelieu","de Rivoli","des Rosiers","Royale","d'Abbeville","Saint-Honoré","Saint-Bernard","Saint-Denis","Saint-Dominique","Saint-Jacques","Saint-Séverin","des Saussaies","de Seine","de Solférino","Du Sommerard","de Tilsitt","Vaneau","de Vaugirard","de la Victoire","Zadkine"]})),PZ=c((()=>{yZ(),bZ(),SZ(),AZ(),MZ(),TZ(),_Z(),wZ(),jZ(),EZ(),NZ(),BZ(),ym={building_number:sm,city:lm,city_name:um,country:cm,default_country:dm,postcode:hm,secondary_address:pm,state:mm,street_address:fm,street_name:vm,street_prefix:gm,street_suffix:km}})),LZ=c((()=>{bm=["Adaptive","Advanced","Ameliorated","Assimilated","Automated","Balanced","Business-focused","Centralized","Cloned","Compatible","Configurable","Cross-group","Cross-platform","Customer-focused","Customizable","Decentralized","De-engineered","Devolved","Digitized","Distributed","Diverse","Down-sized","Enhanced","Enterprise-wide","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Function-based","Fundamental","Future-proofed","Grass-roots","Horizontal","Implemented","Innovative","Integrated","Intuitive","Inverse","Managed","Mandatory","Monitored","Multi-channelled","Multi-lateral","Multi-layered","Multi-tiered","Networked","Object-based","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Pre-emptive","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Re-contextualized","Re-engineered","Reduced","Reverse-engineered","Right-sized","Robust","Seamless","Secured","Self-enabling","Sharable","Stand-alone","Streamlined","Switchable","Synchronised","Synergistic","Synergized","Team-oriented","Total","Triple-buffered","Universal","Up-sized","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary","Vision-oriented"]})),DZ=c((()=>{Sm=["clicks-and-mortar","value-added","vertical","proactive","robust","revolutionary","scalable","leading-edge","innovative","intuitive","strategic","e-business","mission-critical","sticky","one-to-one","24/7","end-to-end","global","B2B","B2C","granular","frictionless","virtual","viral","dynamic","24/365","best-of-breed","killer","magnetic","bleeding-edge","web-enabled","interactive","dot-com","sexy","back-end","real-time","efficient","front-end","distributed","seamless","extensible","turn-key","world-class","open-source","cross-platform","cross-media","synergistic","bricks-and-clicks","out-of-the-box","enterprise","integrated","impactful","wireless","transparent","next-generation","cutting-edge","user-centric","visionary","customized","ubiquitous","plug-and-play","collaborative","compelling","holistic","rich"]})),xZ=c((()=>{Am=["synergies","web-readiness","paradigms","markets","partnerships","infrastructures","platforms","initiatives","channels","eyeballs","communities","ROI","solutions","e-tailers","e-services","action-items","portals","niches","technologies","content","vortals","supply-chains","convergence","relationships","architectures","interfaces","e-markets","e-commerce","systems","bandwidth","infomediaries","models","mindshare","deliverables","users","schemas","networks","applications","metrics","e-business","functionalities","experiences","web services","methodologies"]})),CZ=c((()=>{Mm=["implement","utilize","integrate","streamline","optimize","evolve","transform","embrace","enable","orchestrate","leverage","reinvent","aggregate","architect","enhance","incentivize","morph","empower","envisioneer","monetize","harness","facilitate","seize","disintermediate","synergize","strategize","deploy","brand","grow","target","syndicate","synthesize","deliver","mesh","incubate","engage","maximize","benchmark","expedite","reintermediate","whiteboard","visualize","repurpose","innovate","scale","unleash","drive","extend","engineer","revolutionize","generate","exploit","transition","e-enable","iterate","cultivate","matrix","productize","redefine","recontextualize"]})),KZ=c((()=>{Tm=["24 hour","24/7","3rd generation","4th generation","5th generation","6th generation","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","background","bandwidth-monitored","bi-directional","bifurcated","bottom-line","clear-thinking","client-driven","client-server","coherent","cohesive","composite","context-sensitive","contextually-based","content-based","dedicated","demand-driven","didactic","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","even-keeled","executive","explicit","exuding","fault-tolerant","foreground","fresh-thinking","full-range","global","grid-enabled","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","multimedia","multi-state","multi-tasking","national","needs-based","neutral","next generation","non-volatile","object-oriented","optimal","optimizing","radical","real-time","reciprocal","regional","responsive","scalable","secondary","solution-oriented","stable","static","systematic","systemic","system-worthy","tangible","tertiary","transitional","uniform","upward-trending","user-facing","value-added","web-enabled","well-modulated","zero administration","zero defect","zero tolerance"]})),RZ=c((()=>{_m=["#{Name.last_name} #{suffix}","#{Name.last_name} et #{Name.last_name}"]})),zZ=c((()=>{wm=["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","artificial intelligence","array","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","database","data-warehouse","definition","emulation","encoding","encryption","extranet","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","Graphic Interface","groupware","Graphical User Interface","hardware","help-desk","hierarchy","hub","implementation","info-mediaries","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge user","knowledge base","local area network","leverage","matrices","matrix","methodology","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","open system","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","secured line","service-desk","software","solution","standardization","strategy","structure","success","superstructure","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"]})),OZ=c((()=>{jm=["SARL","SA","EURL","SAS","SEM","SCOP","GIE","EI"]})),IZ=c((()=>{LZ(),DZ(),xZ(),CZ(),KZ(),RZ(),zZ(),OZ(),Em={adjective:bm,bs_adjective:Sm,bs_noun:Am,bs_verb:Mm,descriptor:Tm,name:_m,noun:wm,suffix:jm}})),VZ=c((()=>{Nm={wide:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],wide_context:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],abbr:["janv.","févr.","mars","avril","mai","juin","juil.","août","sept.","oct.","nov.","déc."],abbr_context:["janv.","févr.","mars","avril","mai","juin","juil.","août","sept.","oct.","nov.","déc."]}})),GZ=c((()=>{Bm={wide:["Dimanche","Lundi","Mardi","Mercredi","Jeudi","Vendredi","Samedi"],wide_context:["Dimanche","Lundi","Mardi","Mercredi","Jeudi","Vendredi","Samedi"],abbr:["Dim","Lun","Mar","Mer","Jeu","Ven","Sam"],abbr_context:["Dim","Lun","Mar","Mer","Jeu","Ven","Sam"]}})),HZ=c((()=>{VZ(),GZ(),Pm={month:Nm,weekday:Bm}})),FZ=c((()=>{Lm=["com","fr","eu","info","name","net","org"]})),JZ=c((()=>{Dm=["gmail.com","yahoo.fr","hotmail.fr"]})),UZ=c((()=>{FZ(),JZ(),xm={domain_suffix:Lm,free_email:Dm}})),WZ=c((()=>{Cm=["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]})),ZZ=c((()=>{WZ(),Km={words:Cm}})),qZ=c((()=>{Rm=["Abdonie","Abeline","Abigaelle","Abigaïl","Acacie","Acanthe","Adalbaude","Adalsinde","Adegrine","Adélaïde","Adèle","Adélie","Adeline","Adeltrude","Adolphie","Adonise","Adrastée","Adrehilde","Adrienne","Agathe","Agilberte","Aglaé","Agnane","Agneflète","Agnès","Agrippine","Aimée","Alaine","Alaïs","Albane","Albérade","Alberte","Alcidie","Alcine","Alcyone","Aldegonde","Aleth","Alexandrine","Alexanne","Alexine","Alice","Aliénor","Aliette","Aline","Alix","Alizé","Aloïse","Aloyse","Alphonsine","Althée","Amaliane","Amalthée","Amande","Amandine","Amante","Amarande","Amaranthe","Amaryllis","Ambre","Ambroisie","Améliane","Amélie","Ameline","Améthyste","Aminte","Anaëlle","Anaïs","Anastasie","Anatolie","Anceline","Andrée","Anémone","Angadrême","Angèle","Angeline","Angélina","Angélique","Angilberte","Anicée","Anicette","Annabelle","Anne","Annette","Annonciade","Ansberte","Anstrudie","Anthelmette","Antigone","Antoinette","Antonine","Aphélie","Apolline","Aquiline","Arabelle","Arcadie","Archange","Argine","Ariane","Aricie","Ariel","Arielle","Arlette","Armance","Armande","Armandine","Armeline","Armide","Armelle","Armine","Arnaude","Arsènie","Arsinoé","Artémis","Arthurine","Asceline","Ascension","Assomption","Astarté","Astérie","Astrée","Astride","Athalie","Athanasie","Athénaïs","Athina","Aube","Aubertine","Aude","Audeline","Audrey","Augustine","Aure","Aurélie","Aurélienne","Aurelle","Auriane","Aurore","Auxane","Aveline","Avigaëlle","Avoye","Axeline","Axelle","Aymardine","Aymonde","Azalée","Azélie","Azeline","Barbe","Basilisse","Bathilde","Béatrice","Bénédicte","Bérangère","Bernadette","Berthe","Bertille","Betty","Beuve","Blanche","Blandine","Brigitte","Brunehaut","Brunehilde","Camille","Capucine","Carine","Caroline","Cassandre","Catherine","Cécile","Céleste","Célestine","Céline","Chantal","Charlaine","Charline","Charlotte","Chloé","Christelle","Christiane","Christine","Claire","Clara","Claude","Claudine","Clarisse","Clélie","Clémence","Clémentine","Clio","Clotilde","Coline","Conception","Constance","Coralie","Coraline","Corentine","Corinne","Cyrielle","Danielle","Daphné","Débora","Delphine","Denise","Diane","Dieudonnée","Dominique","Doriane","Dorine","Dorothée","Douce","Édith","Edmée","Éléonore","Éliane","Élia","Élisabeth","Élise","Ella","Élodie","Éloïse","Elsa","Émeline","Émérance","Émérencie","Émilie","Emma","Emmanuelle","Emmelie","Ernestine","Esther","Estelle","Eudoxie","Eugénie","Eulalie","Euphrasie","Eusébie","Évangéline","Eva","Ève","Évelyne","Fanny","Fantine","Faustine","Félicie","Frédérique","Flavie","Fleur","Flore","Florence","Florie","Fortunée","France","Francette","Francia","Françoise","Francine","Gabrielle","Gaëlle","Garance","Geneviève","Georgette","Gerberge","Germaine","Gertrude","Gisèle","Guenièvre","Guilhemine","Guillemette","Gustavine","Gwenaëlle","Hélène","Héloïse","Henriette","Hermine","Hippolyte","Honorine","Hortense","Huguette","Inès","Irène","Irina","Iris","Isabeau","Isabelle","Iseult","Ismérie","Jacinthe","Jacqueline","Jade","Janine","Jeanne","Jeanne d’Arc","Jehanne","Jocelyne","Joëlle","Joséphine","Judith","Julia","Julie","Juliette","Justine","Laura","Laurane","Laure","Laureline","Laurence","Laurène","Lauriane","Laurine","Léa","Léna","Léopoldine","Léonie","Léonne","Lorraine","Lucie","Lucienne","Lucille","Ludivine","Lydie","Mégane","Madeleine","Magali","Maguelone","Mahaut","Mallaury","Manon","Marceline","Margot","Marguerite","Marianne","Marie","Marine","Marion","Marlène","Marthe","Martine","Mathilde","Maud","Maureen","Mauricette","Maxellende","Maxime","Mélanie","Mélissa","Mélissandre","Mélisande","Mélodie","Michèle","Mireille","Miriam","Moïsette","Monique","Morgane","Muriel","Mylène","Nadège","Nadine","Nathalie","Nicole","Nine","Noëlle","Noémie","Océane","Odette","Odile","Olive","Olympe","Ombline","Ophélie","Oriande","Oriane","Orlane","Ozanne","Pascale","Paule","Paulette","Pauline","Priscille","Pécine","Pélagie","Pénélope","Perrine","Pétronille","Philippine","Philomène","Philothée","Primerose","Prudence","Pulchérie","Quentine","Quiéta","Quintia","Rachel","Raphaëlle","Raymonde","Rebecca","Régine","Reine","Réjeanne","Renée","Rita","Rolande","Romane","Rosalie","Rose","Roseline","Sabine","Salomé","Sandra","Sandrine","Sarah","Scholastique","Ségolène","Séverine","Sibylle","Simone","Sixtine","Solange","Soline","Sophie","Stéphanie","Suzanne","Suzon","Sylviane","Sylvie","Swassane","Tatiana","Thaïs","Théodora","Thérèse","Tiphaine","Ursule","Valentine","Valérie","Véronique","Victoire","Vinciane","Violette","Virginie","Viviane","Xavière","Yolande","Ysaline","Yseult","Yvette","Yvonne","Zoé","Zoéva"]})),QZ=c((()=>{zm=["Aaron","Abdon","Abel","Abélard","Abelin","Abondance","Abraham","Absalon","Acace","Achaire","Achille","Adalard","Adalbald","Adalbéron","Adalbert","Adalric","Adam","Adegrin","Adel","Adelin","Adelphe","Adenet","Adéodat","Adhémar","Adjutor","Adolphe","Adonis","Adrien","Agapet","Agathange","Agathon","Agilbert","Agnan","Agrippin","Aimable","Aimé","Alain","Alban","Albéric","Albert","Alcibiade","Alcide","Alcime","Aldonce","Aldric","Aleaume","Alexandre","Alexis","Alix","Alliaume","Almine","Almire","Aloïs","Alphée","Alphonse","Alpinien","Alverède","Amalric","Amandin","Amant","Ambroise","Amédée","Amélien","Amiel","Amour","Anaël","Anastase","Anatole","Ancelin","Andéol","Andoche","André","Ange","Angilbe","Angilran","Angoustan","Anicet","Anne","Annibal","Ansbert","Anselme","Anthelme","Antide","Antoine","Antonin","Apollinaire","Aquilin","Arcade","Archambaud","Archange","Archibald","Arian","Ariel","Ariste","Aristide","Armand","Armel","Armin","Arnould","Arnaud","Arolde","Arsène","Arsinoé","Arthaud","Arthème","Arthur","Ascelin","Athanase","Aubry","Audebert","Audouin","Audran","Auguste","Aurèle","Aurian","Auxence","Axel","Aymard","Aymeric","Aymon","Balthazar","Baptiste","Barnabé","Barthélemy","Bartimée","Basile","Bastien","Baudouin","Bénigne","Benjamin","Benoît","Béranger","Bérard","Bernard","Bertrand","Blaise","Bohémond","Bon","Boniface","Bouchard","Briac","Brice","Brieuc","Bruno","Calixte","Camélien","Camille","Camillien","Candide","Caribert","Carloman","Cassandre","Cassien","Cédric","Céleste","Célestin","Célien","Césaire","César","Charles","Charlemagne","Childebert","Chilpéric","Chrétien","Christian","Christodule","Christophe","Chrysole","Chrysostome","Clarence","Claude","Claudien","Cléandre","Clément","Cléry","Clotaire","Clovis","Colin","Côme","Constance","Constant","Constantin","Corentin","Cyprien","Cyriaque","Cyrille","Damien","Daniel","David","Delphin","Denis","Désiré","Didier","Dieudonné","Dimitri","Dominique","Dorian","Edgard","Edmond","Édouard","Éleuthère","Élie","Élisée","Élzéar","Émeric","Émile","Emmanuel","Enguerrand","Épiphane","Éric","Ernest","Étienne","Eubert","Eudes","Eudoxe","Eugène","Eusèbe","Eustache","Évariste","Évrard","Fabien","Fabrice","Falba","Fantin","Félicité","Félix","Ferdinand","Fiacre","Fidèle","Firmin","Flavien","Flodoard","Florent","Florestan","Florian","Fortuné","Foulques","Francisque","François","Frédéric","Fulbert","Fulcran","Fulgence","Gabin","Gabriel","Gaël","Garnier","Gaston","Gaspar","Gaspard","Gatien","Gaud","Gautier","Gédéon","Geoffroy","Georges","Géraud","Gérard","Gerbert","Germain","Gervais","Ghislain","Gilbert","Gilles","Girart","Gislebert","Gondebaud","Gonthier","Gontran","Gonzague","Grégoire","Guérin","Gui","Guillaume","Gustave","Guy","Guyot","Hardouin","Hector","Hédelin","Hélier","Henri","Herbert","Herluin","Hervé","Hilaire","Hildebert","Hincmar","Hippolyte","Honoré","Hubert","Hugues","Innocent","Isabeau","Isidore","Jacques","Japhet","Jason","Jean","Jeannel","Jeannot","Jérémie","Jérôme","Joachim","Joanny","Job","Jocelyn","Joël","Johan","Jonas","Jonathan","Joseph","Josse","Josselin","Jourdain","Jude","Judicaël","Jules","Julien","Juste","Justin","Lambert","Landry","Laurent","Lazare","Léandre","Léon","Léonard","Léopold","Leu","Leufroy","Libère","Liétald","Lionel","Loïc","Longin","Lorrain","Lothaire","Louis","Loup","Luc","Lucas","Lucien","Ludolphe","Ludovic","Macaire","Malo","Mamert","Manassé","Marc","Marceau","Marcel","Marcelin","Marius","Martial","Martin","Mathurin","Matthias","Matthieu","Maugis","Maurice","Maxence","Maxime","Maximilien","Mayeul","Médéric","Melchior","Mence","Merlin","Mérovée","Michaël","Michel","Moïse","Morgan","Nathan","Nathanaël","Narcisse","Naudet","Néhémie","Nestor","Nicéphore","Nicolas","Noé","Noël","Norbert","Normand","Octave","Odilon","Odon","Oger","Olivier","Oury","Pacôme","Palémon","Parfait","Pascal","Paterne","Patrice","Paul","Pépin","Perceval","Philémon","Philibert","Philippe","Philothée","Pie","Pierre","Pierrick","Prosper","Quentin","Raoul","Raphaël","Raymond","Régis","Réjean","Rémi","Renaud","René","Reybaud","Richard","Robert","Roch","Rodolphe","Rodrigue","Roger","Roland","Romain","Romuald","Roméo","Ronan","Roselin","Rachid","Salomon","Samuel","Sauveur","Savin","Savinien","Scholastique","Sébastien","Séraphin","Serge","Séverin","Sidoine","Sigebert","Sigismond","Silvère","Simon","Sixte","Stanislas","Stéphane","Sylvain","Sylvestre","Tancrède","Tanguy","Taurin","Théodore","Théodose","Théophile","Théophraste","Thibault","Thibert","Thierry","Thomas","Timoléon","Timothée","Titien","Tonnin","Toussaint","Trajan","Tristan","Turold","Tim","Ulysse","Urbain","Valentin","Valère","Valéry","Venance","Venceslas","Vianney","Victor","Victorien","Victorin","Vigile","Vincent","Vital","Vivien","Waleran","Wandrille","Xavier","Xénophon","Yves","Yoann","Zacharie","Zaché","Zéphirin"]})),YZ=c((()=>{qZ(),QZ(),Om=Rm.concat(zm)})),$Z=c((()=>{Im=["Martin","Bernard","Dubois","Thomas","Robert","Richard","Petit","Durand","Leroy","Moreau","Simon","Laurent","Lefebvre","Michel","Garcia","David","Bertrand","Roux","Vincent","Fournier","Morel","Girard","Andre","Lefevre","Mercier","Dupont","Lambert","Bonnet","Francois","Martinez","Legrand","Garnier","Faure","Rousseau","Blanc","Guerin","Muller","Henry","Roussel","Nicolas","Perrin","Morin","Mathieu","Clement","Gauthier","Dumont","Lopez","Fontaine","Chevalier","Robin","Masson","Sanchez","Gerard","Nguyen","Boyer","Denis","Lemaire","Duval","Joly","Gautier","Roger","Roche","Roy","Noel","Meyer","Lucas","Meunier","Jean","Perez","Marchand","Dufour","Blanchard","Marie","Barbier","Brun","Dumas","Brunet","Schmitt","Leroux","Colin","Fernandez","Pierre","Renard","Arnaud","Rolland","Caron","Aubert","Giraud","Leclerc","Vidal","Bourgeois","Renaud","Lemoine","Picard","Gaillard","Philippe","Leclercq","Lacroix","Fabre","Dupuis","Olivier","Rodriguez","Da silva","Hubert","Louis","Charles","Guillot","Riviere","Le gall","Guillaume","Adam","Rey","Moulin","Gonzalez","Berger","Lecomte","Menard","Fleury","Deschamps","Carpentier","Julien","Benoit","Paris","Maillard","Marchal","Aubry","Vasseur","Le roux","Renault","Jacquet","Collet","Prevost","Poirier","Charpentier","Royer","Huet","Baron","Dupuy","Pons","Paul","Laine","Carre","Breton","Remy","Schneider","Perrot","Guyot","Barre","Marty","Cousin"]})),XZ=c((()=>{Vm=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name}","#{last_name} #{first_name}"]})),eq=c((()=>{Gm=["M","Mme","Mlle","Dr","Prof"]})),aq=c((()=>{Hm={job:["Superviseur","Executif","Manager","Ingenieur","Specialiste","Directeur","Coordinateur","Administrateur","Architecte","Analyste","Designer","Technicien","Developpeur","Producteur","Consultant","Assistant","Agent","Stagiaire"]}})),nq=c((()=>{qZ(),YZ(),$Z(),QZ(),XZ(),eq(),aq(),Fm={female_first_name:Rm,first_name:Om,last_name:Im,male_first_name:zm,name:Vm,prefix:Gm,title:Hm}})),iq=c((()=>{Jm=["01########","02########","03########","04########","05########","06########","07########","+33 1########","+33 2########","+33 3########","+33 4########","+33 5########","+33 6########","+33 7########"]})),rq=c((()=>{iq(),Um={formats:Jm}})),tq=c((()=>{PZ(),IZ(),HZ(),UZ(),ZZ(),nq(),rq(),Wm={title:"French",address:ym,company:Em,date:Pm,internet:xm,lorem:Km,name:Fm,phone_number:Um}})),oq=c((()=>{Zm=["#","##","###","# bis","## bis","### bis","###a","###b","###c","###/2"]})),sq=c((()=>{qm=["#{city_prefix}","#{city_prefix}#{city_suffix}"]})),lq=c((()=>{Qm=["Amblève","Bullange","Burg-Reuland","Butgenbach","Eupen","La Calamine","Lontzen","Raeren","Saint-Vith","Aiseau-Presles","Amay","Andenne","Anderlues","Anhée","Ans","Anthisnes","Antoing","Arlon","Assesse","Ath","Attert","Aubange","Aubel","Awans","Aywaille","Baelen","Bassenge","Bastogne","Beaumont","Beauraing","Beauvechain","Beloeil","Berloz","Bernissart","Bertogne","Bertrix","Beyne-Heusay","Bièvre","Binche","Blégny","Bouillon","Boussu","Braine-l'Alleud","Braine-le-Château","Braine-le-Comte","Braives","Brugelette","Brunehaut","Burdinne","Celles","Cerfontaine","Chapelle-lez-Herlaimont","Charleroi","Chastre","Châtelet","Chaudfontaine","Chaumont-Gistoux","Chièvres","Chimay","Chiny","Ciney","Clavier","Colfontaine","Comblain-au-Pont","Comines-Warneton","Courcelles","Court-Saint-Etienne","Couvin","Crisnée","Dalhem","Daverdisse","Dinant","Dison","Doische","Donceel","Dour","Durbuy","Ecaussinnes","Eghezée","Ellezelles","Enghien","Engis","Erezée","Erquelinnes","Esneux","Estaimpuis","Estinnes","Etalle","Faimes","Farciennes","Fauvillers","Fernelmont","Ferrières","Fexhe-le-Haut-Clocher","Flémalle","Fléron","Fleurus","Flobecq","Floreffe","Florennes","Florenville","Fontaine-l'Evêque","Fosses-la-Ville","Frameries","Frasnes-lez-Anvaing","Froidchapelle","Gedinne","Geer","Gembloux","Genappe","Gerpinnes","Gesves","Gouvy","Grâce-Hollogne","Grez-Doiceau","Habay","Hamoir","Hamois","Ham-sur-Heure-Nalinnes","Hannut","Hastière","Havelange","Hélécine","Hensies","Herbeumont","Héron","Herstal","Herve","Honnelles","Hotton","Houffalize","Houyet","Huy","Incourt","Ittre","Jalhay","Jemeppe-sur-Sambre","Jodoigne","Juprelle","Jurbise","La Bruyère","La Hulpe","La Louvière","La Roche-en-Ardenne","Lasne","Le Roeulx","Léglise","Lens","Les Bons Villers","Lessines","Leuze-en-Hainaut","Libin","Libramont-Chevigny","Liège","Lierneux","Limbourg","Lincent","Lobbes","Malmedy","Manage","Manhay","Marche-en-Famenne","Marchin","Martelange","Meix-devant-Virton","Merbes-le-Château","Messancy","Mettet","Modave","Momignies","Mons","Mont-de-l'Enclus","Montigny-le-Tilleul","Mont-Saint-Guibert","Morlanwelz","Mouscron","Musson","Namur","Nandrin","Nassogne","Neufchâteau","Neupré","Nivelles","Ohey","Olne","Onhaye","Oreye","Orp-Jauche","Ottignies-Louvain-la-Neuve","Ouffet","Oupeye","Paliseul","Pecq","Pepinster","Péruwelz","Perwez","Philippeville","Plombières","Pont-à-celles","Profondeville","Quaregnon","Quévy","Quiévrain","Ramillies","Rebecq","Remicourt","Rendeux","Rixensart","Rochefort","Rouvroy","Rumes","Sainte-Ode","Saint-Georges-sur-Meuse","Saint-Ghislain","Saint-Hubert","Saint-Léger","Saint-Nicolas","Sambreville","Seneffe","Seraing","Silly","Sivry-Rance","Soignies","Sombreffe","Somme-Leuze","Soumagne","Spa","Sprimont","Stavelot","Stoumont","Tellin","Tenneville","Theux","Thimister-Clermont","Thuin","Tinlot","Tintigny","Tournai","Trois-Ponts","Trooz","Tubize","Vaux-sur-Sûre","Verlaine","Verviers","Vielsalm","Villers-la-Ville","Villers-le-Bouillet","Viroinval","Virton","Visé","Vresse-sur-Semois","Waimes","Walcourt","Walhain","Wanze","Waremme","Wasseiges","Waterloo","Wavre","Welkenraedt","Wellin","Yvoir"]})),uq=c((()=>{Ym=["centre","plage","Sud","Nord"]})),cq=c((()=>{$m=["Belgique"]})),dq=c((()=>{Xm=["####"]})),hq=c((()=>{ef=["Anvers","Limbourg","Flandre occidentale","Flandre orientale","Hainaut","Liège","Luxembourg","Namur","Brabant flamand","Brabant wallon"]})),pq=c((()=>{af=["VAN","VLI","VOV","VBR","VWV","WHT","WLG","WLX","WNA"]})),mq=c((()=>{nf=["#{street_name} #{building_number}"]})),fq=c((()=>{rf=["#{street_prefix} #{Name.first_name}","#{street_prefix} #{Name.last_name}","#{street_prefix} #{street_suffix}"]})),vq=c((()=>{tf=["Allée","Chemin","Cours","Rue","Avenue","Boulevard","Drève","Galerie","Impasse","Jardin","Quai","Passage","Parc","Parvis","Petite rue","Place","Porte","Square","Voie"]})),gq=c((()=>{of=["de la Banque","de la Barbe","de Barchon","Baron Horta","aux Barques","des Barricades","Barthélémy","du Baudet","Frédéric Basse","du Béguinage","de Berlaimont","au Beurre","Henri Beyaert","de Bischoffsheim","Blaes","de la Blanchisserie","des Blindés","de la Bobine","Bodeghem","Bodenbroeck","des Boeufs","des Bogards","du Bois à Brûler","au Bois de Construction","du Bois Sauvage","des Boîteux","de Bon Secours","du Borgendael","Borgval","Bortier","des Bouchers","rue des Bouchers","du Boulet","de la Bouquetière","de la Bourse","de la Braie","des Brasseurs","Brederode","Jacques Brel","Breughel","des Brigittines","rue des Brigittines","aux Briques","des Brodeurs","de la Buanderie","Charles Buls","des Cadeaux","Camusel","du Canal","du Canon","Cantersteen","des Capucins","Cardinal Mercier","de la Caserne","des Cendres","du Centre","Chair et Pain","des Chaisiers","de la Chancellerie","des Chandeliers","du Chantier","du Chapelet","des Chapeliers","de la Chapelle","du Char","des Charpentiers","des Chartreux","du Chasseur","de la Chaufferette","à la Chaux","du Chêne","du Cheval","du Chevreuil","du Chien Marin","aux Choux","Christine","de la Cigogne","du Cirque","de la Clé","de la Collégiale","de la Colline","du Colombier","des Colonies","des Comédiens","des Commerçants","du Commerce","du Congrès","Coppens","Coudenberg","Jo Cox","de la Croix de Fer","Cuerens","des Cultes","de Cureghem","de la Cuve","du Cyprès","des Echelles","de l' Eclipse","de l' Economie","de l' Ecuyer","d' Egmont","de l' Empereur","de l' Enseignement","de l' Epargne","de l' Epée","des Eperonniers","de l' Escalier","des Escrimeurs","d' Espagne","de l' Etuve","de l' Europe","de l' Eventail","de l' Evêque","Evers","des Fabriques","des Faisans","de la Faucille","du Faucon","de la Ferraille","de la Fiancée","de la Fidélité","du Finistère","de Flandre","des Fleuristes","aux Fleurs","au Foin","Fontainas","de la Fontaine","de la Forêt d'Houthulst","Fossé-aux-Loups","des Foulons","de la Fourche","des Fripiers","Froebel","blanche","noire","verte","pont de bois","grand poire","du marché","du lundi","des médias","Robert Schuman","du papier plié","de la croix de fer","cronque","de l'Abbaye","Adolphe Mille","d'Assas","du Bac","de Paris","La Boétie","du roi","de la Bûcherie","de Caumartin","Charlemagne","du Chat-qui-Pêche","de la Chaussée-d'Antin","du Dahomey","Dauphine","Delesseux","du Faubourg Saint-Honoré","du Faubourg-Saint-Denis","de la Ferronnerie","des Francs-Bourgeois","des Grands Augustins","de la Harpe","du Havre","de la Huchette","Joubert","Laffitte","Lepic","des Lombards","Marcadet","Molière","Monsieur-le-Prince","de Montmorency","Montorgueil","Mouffetard","de Nesle","Oberkampf","de l'Odéon","d'Orsel","de la Paix","des Panoramas","Pastourelle","Pierre Charron","de la Pompe","de Presbourg","de Provence","de Richelieu","de Rivoli","des Rosiers","Royale","d'Abbeville","Saint-Honoré","Saint-Bernard","Saint-Denis","Saint-Dominique","Saint-Jacques","Saint-Séverin","des Saussaies","de Seine","de Solférino","Du Sommerard","de Tilsitt","Vaneau","de Vaugirard","de la Victoire","Zadkine"]})),kq=c((()=>{oq(),sq(),lq(),uq(),cq(),dq(),hq(),pq(),mq(),fq(),vq(),gq(),sf={building_number:Zm,city:qm,city_prefix:Qm,city_suffix:Ym,default_country:$m,postcode:Xm,state:ef,state_abbr:af,street_address:nf,street_name:rf,street_prefix:tf,street_suffix:of}})),yq=c((()=>{lf=["###/######","###/## ## ##","### ## ## ##","###/### ###","##########","04##/### ###","04## ## ## ##","00324 ## ## ##","+324 ## ## ## ##","0455 ## ##","0456 ## ##","046# ## ##","047# ## ##","048# ## ##","049# ## ##","0032 455 ## ##","0032 456 ## ##","0032 46# ## ##","0032 47# ## ##","0032 48# ## ##","0032 49# ## ##","+32 455 ## ##","+32 456 ## ##","+32 46# ## ##","+32 47# ## ##","+32 48# ## ##","+32 49# ## ##","+32 461 8# ##"]})),bq=c((()=>{yq(),uf={formats:lf}})),Sq=c((()=>{cf=["be","eu","com","biz","info","name","net","org"]})),Aq=c((()=>{df=["advalvas.be","mail.be","netbel.be","skynet.be"]})),Mq=c((()=>{Sq(),Aq(),hf={domain_suffix:cf,free_email:df}})),Tq=c((()=>{pf=["Aaliyah","Abigaël","Abigaëlle","Abigail","Abigaïl","Aby","Ada","Adame","Adelaïde","Adélaïde","Adèle","Adelie","Adélie","Adeline","Adja","Adriana","Agathe","Aglae","Aglaé","Agnès","Aicha","Aïcha","Aïda","Aimee","Aïna","Aïsha","Aïssa","Aïssata","Aissatou","Aïssatou","Alba","Albane","Albertine","Aleksandra","Alessia","Alexandra","Alexane","Alexia","Alia","Alice","Alicia","Alienor","Aliénor","Alima","Alina","Aline","Alisha","Alissa","Alix","Alixe","Aliya","Aliyah","Alizee","Allegra","Alma","Alya","Alyah","Alycia","Alyssa","Alyssia","Alysson","Amalia","Amanda","Amandine","Ambre","Ambrine","Amel","Amelia","Amelie","Amélie","Amicie","Amina","Aminata","Amira","Amy","Ana","Anabelle","Anae","Anael","Anaël","Anaelle","Anaëlle","Anaïs","Anastasia","Andrea","Andréa","Angel","Angela","Angèle","Angelina","Angeline","Angelique","Angie","Ania","Anissa","Anita","Anna","Annabelle","Annaëlle","Anne","Anne-Laure","Anne-Sophie","Anouck","Anouk","Antonia","Anya","Apolline","Appoline","Ariana","Ariane","Arielle","Arij","Armance","Armelle","Artemis","Arwa","Arwen","Ashley","Asia","Asma","Asmaa","Assa","Assetou","Assia","Assil","Assya","Astou","Astrid","Athena","Athéna","Athenaïs","Aude","Audrey","Augustine","Aurelia","Aurelie","Auriane","Aurore","Ava","Avital","Avril","Awa","Axelle","Aya","Ayah","Ayem","Ayla","Aylin","Ayline","Bahia","Barbara","Basma","Baya","Beatrice","Bella","Benedicte","Berenice","Bérénice","Bertille","Beryl","Béryl","Bettina","Betty","Beya","Bianca","Billie","Binta","Bintou","Blanche","Blandine","Blessing","Bonnie","Bouchra","Brune","Calista","Camelia","Camélia","Camila","Camilia","Camille","Candice","Capucine","Carine","Carla","Carlotta","Carmen","Carolina","Caroline","Cassandra","Cassandre","Cassie","Cassiopee","Castille","Catherine","Cecile","Cécile","Cecilia","Celeste","Celestine","Celia","Célia","Celina","Celine","Cerise","Chahinez","Chaïma","Chanel","Charlène","Charlie","Charline","Charlize","Charlotte","Chayma","Chelsea","Chiara","Chirine","Chloe","Chloé","Christelle","Christina","Christine","Cindy","Claire","Clara","Clarisse","Claudia","Clea","Cléa","Clelia","Clelie","Clemence","Clémence","Clementine","Clémentine","Cleo","Cléo","Cleophee","Cléophée","Cloe","Cloé","Clothilde","Clotilde","Colette","Coline","Colombe","Constance","Coralie","Coraline","Cosima","Coumba","Cynthia","Cyrielle","Cyrine","Dahlia","Dalia","Dalla","Dana","Danae","Dania","Daniela","Daniella","Daphne","Daphné","Daphnee","Daria","Darine","Deborah","Delphine","Diana","Diane","Dina","Divine","Djeneba","Domitille","Dora","Doriane","Dounia","Dune","Dyna","Eden","Eglantine","Eileen","Ela","Elea","Eléa","Eleanor","Eleanore","Eléanore","Elena","Éléna","Eleonore","Eléonore","Éléonore","Elia","Eliana","Eliane","Eliette","Elif","Elina","Eline","Elinor","Elisa","Elisabeth","Elise","Élise","Elissa","Eliza","Elizabeth","Ella","Ellie","Elly","Eloane","Elodie","Eloïse","Éloïse","Elona","Elora","Elsa","Elvire","Elya","Elyne","Elyssa","Ema","Emeline","Emi","Emie","Emilia","Emilie","Émilie","Emily","Emma","Emmanuelle","Emmie","Emmy","Emna","Emy","Enola","Enora","Énora","Erika","Erin","Erine","Estelle","Esther","Ethel","Eugenie","Eugénie","Eulalie","Eunice","Eurydice","Eva","Éva","Eve","Ève","Evy","Eya","Faith","Fanny","Fanta","Fantine","Farah","Fatim","Fatima","Fatimata","Fatma","Fatou","Fatouma","Fatoumata","Faustine","Felicie","Félicie","Feriel","Feryel","Fiona","Flavia","Flavie","Fleur","Flora","Flore","Florence","Floriane","Francesca","Frida","Gabriela","Gabriella","Gabrielle","Gaëlle","Gaia","Gaïa","Garance","Georgia","Gisèle","Giulia","Gloria","Goundo","Grace","Grâce","Guillemette","Gwenaëlle","Habiba","Haby","Hadja","Hafsa","Hajar","Halima","Hana","Hanae","Hanaé","Hania","Hanna","Hannah","Hasna","Hatouma","Hawa","Haya","Helena","Helèna","Helène","Hélène","Heloïse","Héloïse","Hermine","Hiba","Hind","Hortense","Houda","Ilana","Iliana","Ilona","Ilyana","Iman","Imane","Imen","Imene","Imène","Inaya","Ines","Inès","Inës","Inna","Irène","Irina","Iris","Isabella","Isabelle","Isadora","Isaure","Isee","Iseult","Isis","Isra","Israa","Izia","Jacqueline","Jade","Jana","Jane","Janelle","Janna","Jannah","Jasmine","Jeanne","Jehanne","Jenna","Jennah","Jennifer","Jenny","Jessica","Jessie","Jihane","Jill","Jinane","Joana","Joanna","Joanne","Joëlle","Johanna","Johanne","Josephine","Joséphine","Joy","Joyce","Judith","Julia","Juliana","Julianne","Julie","Juliette","June","Junon","Justine","Kadiatou","Kadidia","Kadidiatou","Kady","Kahina","Kaïna","Kamila","Karen","Karine","Karla","Karolina","Kate","Katell","Kathleen","Katia","Kawtar","Kayla","Kayliah","Kayna","Keira","Kelly","Kelya","Kenza","Keren","Ketsia","Keyla","Khadidiatou","Khadidja","Khadija","Khady","Kiara","Kim","Kimberly","Klara","Laetitia","Laëtitia","Lahna","Lalie","Lamia","Lana","Lara","Latifa","Laura","Laure","Lauren","Laurène","Lauriane","Laurine","Lauryn","Layana","Layanah","Layla","Lea","Léa","Leana","Léana","Leane","Leanne","Leelou","Lehna","Leila","Leïla","Leïna","Lena","Léna","Leni","Leonie","Léonie","Leonor","Leonore","Leontine","Leopoldine","Leslie","Leticia","Levana","Leyla","Leyna","Lia","Liana","Lila","Lilas","Lili","Lilia","Liliana","Liliane","Lilie","Lili-Rose","Lilly","Lilou","Lilwenn","Lily","Lilya","Lily-Rose","Lina","Linda","Lindsay","Line","Linoï","Linoy","Liora","Lisa","Lise","Lison","Lital","Liv","Livia","Liya","Liyah","Liz","Liza","Loane","Loïse","Lola","Lorena","Lorraine","Lou","Louane","Louann","Lou-Ann","Lou-Anne","Loubna","Louisa","Louise","Louis-Marie","Louison","Loula","Louna","Luce","Lucia","Lucie","Lucile","Lucille","Lucy","Ludivine","Ludmila","Luisa","Lula","Luna","Luz","Lya","Lyana","Lydia","Lyla","Lylia","Lylou","Lyna","Lyne","Lynn","Maayane","Madeleine","Madeline","Madina","Mady","Mae","Maé","Maëlie","Maëline","Maélis","Maëlis","Maelle","Maëlle","Maëly","Maëlyne","Maelys","Maëlys","Maeva","Maëva","Magdalena","Mahault","Mahaut","Mai","Maï","Maia","Maïa","Maïly","Maïlys","Maïmouna","Maïna","Maïssa","Maïssane","Maïwenn","Malak","Malek","Malia","Malika","Manal","Manel","Manelle","Manon","Manuela","Mara","Maram","Margaux","Margo","Margot","Marguerite","Maria","Mariam","Mariama","Mariame","Marianne","Marie","Marie-Ange","Marie-Lou","Mariem","Marilou","Marina","Marine","Marion","Marjane","Marjorie","Marnie","Martha","Marthe","Marwa","Marwen","Maryam","Marylou","Mathilda","Mathilde","Matilda","Matilde","Maud","Maude","Maureen","Maxime","Maxine","May","Maya","Mayane","Mayar","Mayline","Maylis","Mayssa","Meïssa","Melanie","Melia","Melina","Melinda","Meline","Méline","Melissa","Mélissa","Mellina","Melodie","Melody","Melusine","Meriam","Meriem","Meryam","Meryem","Meryl","Mia","Michelle","Mila","Milena","Milla","Mina","Mira","Miya","Moïra","Mona","Monica","Morgane","Mya","Myla","Myriam","Myrtille","Nada","Nadia","Nadine","Naëlle","Nahla","Naïa","Naïla","Naïma","Naïs","Nala","Naomi","Naomie","Natacha","Natalia","Natasha","Nathalie","Nawal","Nawel","Naya","Nayla","Neela","Neïla","Nelia","Nélia","Nell","Nelly","Nelya","Nene","Nermine","Nesrine","Neyla","Niame","Nicole","Nina","Nine","Ninon","Niouma","Noa","Noelie","Noemi","Noemie","Noémie","Nola","Noor","Nora","Norah","Norhane","Nour","Noura","Nourane","Oceane","Odelia","Olga","Olivia","Oliwia","Olympe","Olympia","Ombeline","Ondine","Ophelie","Oriane","Orlane","Ornella","Oumou","Paloma","Paola","Patricia","Paula","Pauline","Penda","Penelope","Pénélope","Perla","Perle","Perrine","Petronille","Philippine","Philomène","Pia","Prisca","Priscille","Prudence","Prune","Quitterie","Rachel","Rahma","Ramata","Rania","Ranim","Ranya","Raphaëlle","Rawane","Rebecca","Rim","Rita","Rivka","Rokia","Romane","Romy","Rosa","Rosalie","Rose","Roxane","Roxanne","Ruth","Rym","Sabrina","Sabrine","Sacha","Sadio","Safa","Safia","Safiya","Sakina","Salimata","Sally","Salma","Salome","Samantha","Samia","Samira","Sana","Sanaa","Sandra","Sara","Sarah","Sarra","Sasha","Saskia","Satine","Savannah","Scarlett","Selena","Séléna","Selène","Selma","Sephora","Serena","Séréna","Serine","Sérine","Shaïly","Shaïma","Shaïna","Shana","Shani","Shanice","Shanna","Shannon","Shanon","Shany","Sharon","Shayma","Shayna","Shelly","Sherine","Shirel","Shirine","Shyrel","Sibylle","Sidonie","Sienna","Sihem","Siloe","Simone","Sira","Sirine","Sixtine","Sofia","Sohane","Solange","Solène","Solenn","Soline","Solveig","Sonia","Sophia","Sophie","Soraya","Soumaya","Stacy","Stella","Stephanie","Suzanne","Suzie","Swann","Sybille","Sylvia","Sylvie","Syrine","Taïna","Taïs","Tal","Tali","Talia","Talya","Tamara","Tania","Tanya","Tara","Tasnim","Tasnime","Tatiana","Tea","Tesnim","Tesnime","Tess","Tessa","Thaïs","Thalia","Thanina","Thea","Théa","Thelma","Therèse","Tia","Tiana","Tiffany","Tiguida","Tina","Tiphaine","Toscane","Tracy","Tsipora","Valentina","Valentine","Vanessa","Vera","Victoire","Victoria","Viktoria","Violette","Virginie","Viviane","Wendy","Wiem","Wiktoria","Wissam","Yael","Yaël","Yaëlle","Yamina","Yara","Yasmina","Yasmine","Yona","Yosra","Youmna","Youna","Yousra","Yse","Ysé","Ysee","Ysée","Yumi","Yuna","Zahra","Zara","Zayneb","Zeinab","Zelda","Zelie","Zeynab","Zina","Zineb","Zoe","Zoé","Zoë","Zohra","Zuzanna","Mary","Patricia","Linda","Barbara","Elizabeth","Jennifer","Maria","Susan","Margaret","Dorothy","Lisa","Nancy","Karen","Betty","Helen","Sandra","Donna","Carol","Ruth","Sharon","Michelle","Laura","Sarah","Kimberly","Deborah","Jessica","Shirley","Cynthia","Angela","Melissa","Brenda","Amy","Anna","Rebecca","Virginia","Kathleen","Pamela","Martha","Debra","Amanda","Stephanie","Carolyn","Christine","Marie","Janet","Catherine","Frances","Ann","Joyce","Diane","Alice","Julie","Heather","Teresa","Doris","Gloria","Evelyn","Jean","Cheryl","Mildred","Katherine","Joan","Ashley","Judith","Rose","Janice","Kelly","Nicole","Judy","Christina","Kathy","Theresa","Beverly","Denise","Tammy","Irene","Jane","Lori","Rachel","Marilyn","Andrea","Kathryn","Louise","Sara","Anne","Jacqueline","Wanda","Bonnie","Julia","Ruby","Lois","Tina","Phyllis","Norma","Paula","Diana","Annie","Lillian","Emily","Robin","Peggy","Crystal","Gladys","Rita","Dawn","Connie","Florence","Tracy","Edna","Tiffany","Carmen","Rosa","Cindy","Grace","Wendy","Victoria","Edith","Kim","Sherry","Sylvia","Josephine","Thelma","Shannon","Sheila","Ethel","Ellen","Elaine","Marjorie","Carrie","Charlotte","Monica","Esther","Pauline","Emma","Juanita","Anita","Rhonda","Hazel","Amber","Eva","Debbie","April","Leslie","Clara","Lucille","Jamie","Joanne","Eleanor","Valerie","Danielle","Megan","Alicia","Suzanne","Michele","Gail","Bertha","Darlene","Veronica","Jill","Erin","Geraldine","Lauren","Cathy","Joann","Lorraine","Lynn","Sally","Regina","Erica","Beatrice","Dolores","Bernice","Audrey","Yvonne","Annette","June","Samantha","Marion","Dana","Stacy","Ana","Renee","Ida","Vivian","Roberta","Holly","Brittany","Melanie","Loretta","Yolanda","Jeanette","Laurie","Katie","Kristen","Vanessa","Alma","Sue","Elsie","Beth","Jeanne","Vicki","Carla","Tara","Rosemary","Eileen","Terri","Gertrude","Lucy","Tonya","Ella","Stacey","Wilma","Gina","Kristin","Jessie","Natalie","Agnes","Vera","Willie","Charlene","Bessie","Delores","Melinda","Pearl","Arlene","Maureen","Colleen","Allison","Tamara","Joy","Georgia","Constance","Lillie","Claudia","Jackie","Marcia","Tanya","Nellie","Minnie","Marlene","Heidi","Glenda","Lydia","Viola","Courtney","Marian","Stella","Caroline","Dora","Jo","Vickie","Mattie","Terry","Maxine","Irma","Mabel","Marsha","Myrtle","Lena","Christy","Deanna","Patsy","Hilda","Gwendolyn","Jennie","Nora","Margie","Nina","Cassandra","Leah","Penny","Kay","Priscilla","Naomi","Carole","Brandy","Olga","Billie","Dianne","Tracey","Leona","Jenny","Felicia","Sonia","Miriam","Velma","Becky","Bobbie","Violet","Kristina","Toni","Misty","Mae","Shelly","Daisy","Ramona","Sherri","Erika","Katrina","Claire","Lindsey","Lindsay","Geneva","Guadalupe","Belinda","Margarita","Sheryl","Cora","Faye","Ada","Natasha","Sabrina","Isabel","Marguerite","Hattie","Harriet","Molly","Cecilia","Kristi","Brandi","Blanche","Sandy","Rosie","Joanna","Iris","Eunice","Angie","Inez","Lynda","Madeline","Amelia","Alberta","Genevieve","Monique","Jodi","Janie","Maggie","Kayla","Sonya","Jan","Lee","Kristine","Candace","Fannie","Maryann","Opal","Alison","Yvette","Melody","Luz","Susie","Olivia","Flora","Shelley","Kristy","Mamie","Lula","Lola","Verna","Beulah","Antoinette","Candice","Juana","Jeannette","Pam","Kelli","Hannah","Whitney","Bridget","Karla","Celia","Latoya","Patty","Shelia","Gayle","Della","Vicky","Lynne","Sheri","Marianne","Kara","Jacquelyn","Erma","Blanca","Myra","Leticia","Pat","Krista","Roxanne","Angelica","Johnnie","Robyn","Francis","Adrienne","Rosalie","Alexandra","Brooke","Bethany","Sadie","Bernadette","Traci","Jody","Kendra","Jasmine","Nichole","Rachael","Chelsea","Mable","Ernestine","Muriel","Marcella","Elena","Krystal","Angelina","Nadine","Kari","Estelle","Dianna","Paulette","Lora","Mona","Doreen","Rosemarie","Angel","Desiree","Antonia","Hope","Ginger","Janis","Betsy","Christie","Freda","Mercedes","Meredith","Lynette","Teri","Cristina","Eula","Leigh","Meghan","Sophia","Eloise","Rochelle","Gretchen","Cecelia","Raquel","Henrietta","Alyssa","Jana","Kelley","Gwen","Kerry","Jenna","Tricia","Laverne","Olive","Alexis","Tasha","Silvia","Elvira","Casey","Delia","Sophie","Kate","Patti","Lorena","Kellie","Sonja","Lila","Lana","Darla","May","Mindy","Essie","Mandy","Lorene","Elsa","Josefina","Jeannie","Miranda","Dixie","Lucia","Marta","Faith","Lela","Johanna","Shari","Camille","Tami","Shawna","Elisa","Ebony","Melba","Ora","Nettie","Tabitha","Ollie","Jaime","Winifred","Aaron","Abd","Abdallah","Abdel","Abdelkader","Abdellah","Abderrahmane","Abdou","Abdoul","Abdoulaye","Abdourahmane","Abdramane","Abel","Aboubacar","Aboubakar","Abraham","Achille","Achraf","Adam","Adama","Adame","Adel","Adem","Aden","Adib","Adil","Adrian","Adriano","Adrien","Ahmad","Ahmed","Aidan","Aïdan","Aiden","Aimé","Aïssa","Akram","Aksel","Aksil","Alain","Alan","Alassane","Alban","Albert","Alec","Aleksandar","Alessandro","Alessio","Alex","Alexander","Alexandre","Alexis","Alfred","Ali","Aliou","Alistair","Allan","Aloïs","Alon","Alone","Aloys","Alpha","Alphonse","Aly","Amadou","Amaël","Amani","Amar","Amara","Amaury","Ambroise","Amin","Amine","Amir","Amos","Anas","Anass","Anatole","Andre","André","Andréa","Andreas","Andréas","Andrei","Andrew","Andy","Anes","Ange","Angelo","Anis","Anselme","Anthony","Antoine","Anton","Antonin","Antonio","Antony","Archibald","Arda","Ari","Arie","Ariel","Aris","Aristide","Arman","Armand","Armel","Arnaud","Arno","Aron","Arsène","Arthur","Arthus","Arto","Artus","Aubin","Auguste","Augustin","Aurel","Aurèle","Aurelien","Aurélien","Auxence","Avi","Aviel","Axel","Ayaan","Aydan","Ayden","Aylan","Ayman","Aymane","Aymen","Aymeric","Ayoub","Aziz","Badis","Bafode","Bakary","Balthazar","Baptiste","Barnabe","Barthelemy","Basil","Basile","Bastian","Bastien","Baudouin","Ben","Benjamin","Benoit","Benoît","Bilal","Bilel","Blaise","Bogdan","Boris","Boubacar","Boubou","Bradley","Brahim","Brandon","Brayan","Briac","Brian","Brice","Brieuc","Bruno","Bryan","Calixte","Calvin","Cameron","Camil","Carl","Cedric","Cédric","Celestin","Celian","Célian","Cesar","César","Chahine","Chaï","Charles","Charlie","Charly","Cheick","Cheick-Oumar","Cheikh","Chris","Christ","Christian","Christophe","Christopher","Clarence","Clement","Clovis","Colin","Côme","Constant","Constantin","Corentin","Corto","Curtis","Cyprien","Cyrian","Cyriaque","Cyril","Cyrille","Cyrus","Damian","Damien","Dan","Dani","Daniel","Danny","Dany","Danyl","Daouda","Dario","Darius","Darren","David","Dayan","Dayane","Demba","Denis","Diego","Dilan","Dimitri","Djibril","Dorian","Dov","Driss","Dylan","Eddy","Eden","Edgar","Edgard","Edouard","Édouard","Eduard","Eduardo","Edward","Edwin","El","Eli","Eliahou","Elian","Elias","Élias","Elie","Élie","Eliel","Elijah","Elio","Elior","Eliot","Eliott","Elliot","Elliott","Eloan","Eloi","Elone","Elouan","Elyas","Elyes","Elyès","Emil","Emile","Emilien","Emilio","Emir","Emmanuel","Enguerrand","Enzo","Ephraïm","Eric","Erik","Ernest","Erwan","Erwann","Esteban","Ethan","Ethann","Etienne","Étienne","Eugène","Evan","Evann","Ewan","Ewen","Ewenn","Eyal","Eytan","Eythan","Ezio","Fabien","Fabio","Fabrice","Fadi","Fady","Fares","Farès","Farouk","Federico","Felicien","Felix","Ferdinand","Filip","Filipe","Firas","Flavien","Flavio","Florent","Florentin","Florian","Fode","Foucauld","Francis","Franck","François","Franklin","Frederic","Gabin","Gabriel","Gad","Gaël","Gaetan","Gaétan","Gaëtan","Gary","Gaspar","Gaspard","Gaston","Gauthier","Gautier","Geoffrey","Geoffroy","George","Georges","Germain","Giacomo","Gianni","Giovanni","Giulio","Gonzague","Gregoire","Gregory","Guilhem","Guillaume","Gustave","Guy","Gwendoline","Habib","Hadriel","Hadrien","Haïm","Hakim","Hamed","Hamidou","Hamza","Harold","Haron","Haroun","Harouna","Haroune","Harry","Hassan","Hassane","Hatem","Hayden","Hector","Hedi","Hédi","Helie","Hélie","Helios","Henri","Henry","Hicham","Hillel","Hippolyte","Honore","Hubert","Hugo","Hugues","Ian","Iban","Ibrahim","Ibrahima","Idan","Idir","Idris","Idriss","Idrissa","Igor","Ilan","Ilhan","Ilian","Iliane","Ilias","Ilies","Ilyan","Ilyane","Ilyas","Ilyass","Ilyes","Ilyès","Ilyess","Imad","Imran","Imrane","Inza","Isaac","Ishaq","Isidore","Islam","Ismael","Ismaël","Ismail","Ismaïl","Israël","Issa","Issam","Issiaka","Ivan","Iwan","Iyad","Iyed","Jack","Jacob","Jacques","Jad","Jaden","Jalil","James","Jan","Jarod","Jason","Jassem","Jassim","Jawad","Jawed","Jayden","Jayson","Jean","Jean-Baptiste","Jean-Marc","Jed","Jeremie","Jeremy","Jérémy","Jerôme","Jibril","Jim","Jimmy","Joachim","Joakim","Joan","Joaquim","Joe","Joël","Joey","Johan","Johann","John","Johnny","Jonah","Jonas","Jonathan","Jordan","Joris","Joseph","Josh","Joshua","Josue","Josué","Joud","Juan","Jude","Jules","Julian","Julien","Junior","Justin","Kacper","Kaïs","Kamel","Kamil","Karamba","Karamoko","Karim","Karl","Kassim","Kays","Kelvin","Kelyan","Kenan","Kenny","Kenzi","Kenzo","Kenzy","Kevin","Kévin","Khalil","Kilian","Killian","Kilyan","Kyan","Kyle","Kylian","Kyliann","Kyllian","Ladji","Lamine","Lancelot","Lassana","Laszlo","Laurent","Lazar","Lazare","Leandre","Leandro","Lenny","Leny","Leo","Léo","Leon","Leonard","Leonardo","Leo-Paul","Leopold","Léopold","Levi","Lévi","Liam","Lilian","Lino","Lior","Lirone","Lisandro","Livio","Loan","Logan","Lohan","Loïc","Loïs","Lorenzo","Loris","Lou","Louay","Louca","Louis","Louison","Louka","Lounis","Loup","Lubin","Luc","Luca","Lucas","Lucien","Ludovic","Luigi","Luis","Luka","Lukas","Luke","Lyam","Lyes","Maceo","Maé","Mael","Maël","Mahamadou","Mahdi","Mahe","Mahé","Mahmoud","Makan","Maksim","Malcolm","Malek","Malick","Malik","Malo","Malone","Mamadou","Mamoudou","Manar","Manil","Manuel","Marc","Marc-Antoine","Marceau","Marcel","Marco","Marcus","Marin","Mario","Marius","Mark","Marko","Marley","Marlon","Marouane","Martin","Marvin","Marwan","Marwane","Massinissa","Mateja","Mateo","Mateusz","Matheo","Mathéo","Mathias","Mathieu","Mathis","Mathurin","Mathys","Matias","Matis","Matisse","Matt","Matteo","Mattéo","Mattheo","Matthew","Matthias","Matthieu","Matthis","Mattia","Matys","Max","Maxence","Maxens","Maxim","Maxime","Maximilian","Maximilien","Mayeul","Mehdi","Melchior","Melvil","Melvin","Melvyn","Menahem","Mendel","Merlin","Merwan","Michael","Michaël","Michel","Mickael","Mickaël","Miguel","Mika","Mikail","Mikaïl","Mike","Milan","Milhan","Milo","Minh","Moche","Modibo","Mody","Mohamed","Mohamed-Ali","Mohamed-Amine","Mohammad","Mohammed","Moïse","Morgan","Mory","Mouctar","Mouhamadou","Mouhamed","Moussa","Moustafa","Moustapha","Muhammad","Mustapha","Mylan","Nabil","Nadir","Nael","Naël","Nahel","Nahil","Naïl","Naïm","Nassim","Nathan","Nathanael","Nathanaël","Nathaniel","Nawfel","Nayel","Nazim","Neil","Nelson","Neo","Nicolas","Niels","Nikita","Nikola","Nil","Nils","Nino","Nizar","Noa","Noah","Noam","Noâm","Noan","Noe","Noé","Noha","Noham","Nohan","Nolan","Nolann","Nolhan","Nouha","Nour","Octave","Oliver","Olivier","Omar","Oren","Oscar","Oskar","Othmane","Otto","Oumar","Ousmane","Oussama","Owen","Pablo","Paco","Pacôme","Paolo","Pascal","Patrick","Paul","Paul-Antoine","Paul-Arthur","Paulin","Pedro","Peter","Pharell","Phileas","Philemon","Philippe","Pierre","Pierre-Alexandre","Pierre-Antoine","Pierre-Louis","Pol","Preston","Prince","Prosper","Quentin","Rafael","Rafaël","Rami","Ramy","Raoul","Raphael","Raphaël","Rayan","Rayane","Rayen","Reda","Remi","Remy","Riad","Ricardo","Richard","Riyad","Robert","Robin","Robinson","Rodrigo","Rodrigue","Rohan","Romain","Roman","Romeo","Roméo","Ron","Ronan","Roy","Ruben","Rudy","Ryad","Ryan","Saad","Sabri","Sacha","Saïd","Salim","Salomon","Sam","Samba","Sami","Samir","Samson","Samuel","Samy","Sandro","Santiago","Sasha","Saul","Scott","Sean","Sebastian","Sebastien","Sekou","Selim","Selyan","Serge","Seydou","Shaï","Shawn","Shay","Shayan","Sidney","Sidy","Silas","Simeon","Siméon","Simon","Skander","Soan","Sofiane","Sohan","Solal","Soren","Souleyman","Souleymane","Stan","Stanislas","Stanley","Steeve","Stefan","Stephane","Stéphane","Steve","Steven","Sven","Swan","Swann","Sylvain","Taha","Tancrède","Tanguy","Tao","Teddy","Teo","Terence","Theo","Théo","Theodore","Theophane","Théophane","Theophile","Théophile","Theotime","Thiago","Thibaud","Thibault","Thibaut","Thierno","Thierry","Thomas","Tiago","Tidiane","Tilio","Tim","Timeo","Timéo","Timothe","Timothee","Titouan","Tobias","Tom","Toma","Tomas","Tommy","Tony","Tristan","Tybalt","Tymeo","Tyron","Ugo","Ulysse","Vadim","Valentin","Valentino","Valerie","Vasco","Vianney","Victor","Victorien","Viktor","Vincent","Virgil","Virgile","Vivien","Vladimir","Wael","Waël","Walid","Wandrille","Warren","Wassim","Wesley","Wilfried","William","Willy","Wilson","Wissem","Xavier","Yacine","Yacouba","Yahya","Yani","Yanis","Yann","Yanni","Yannick","Yannis","Yaron","Yasin","Yasser","Yassin","Yassine","Yaya","Yazid","Ylan","Yoan","Yoann","Yoav","Yoel","Yoël","Yohan","Yohann","Yoni","Yossef","Youcef","Younes","Younès","Youness","Youri","Youssef","Youssouf","Yuri","Yvan","Yves","Zacharia","Zacharie","Zachary","Zack","Zackary","Zadig","Zakaria","Zakariya","Zakary","Zakarya","Zayd","Zephyr","Ziad","Zinedine","Ziyad","Zyad","James","John","Robert","Michael","William","David","Richard","Charles","Joseph","Thomas","Christopher","Daniel","Paul","Mark","Donald","George","Kenneth","Steven","Edward","Brian","Ronald","Anthony","Kevin","Jason","Matthew","Gary","Timothy","Jose","Larry","Jeffrey","Frank","Scott","Eric","Stephen","Andrew","Raymond","Gregory","Joshua","Jerry","Dennis","Walter","Patrick","Peter","Harold","Douglas","Henry","Carl","Arthur","Ryan","Roger","Joe","Juan","Jack","Albert","Jonathan","Justin","Terry","Gerald","Keith","Samuel","Willie","Ralph","Lawrence","Nicholas","Roy","Benjamin","Bruce","Brandon","Adam","Harry","Fred","Wayne","Billy","Steve","Louis","Jeremy","Aaron","Randy","Howard","Eugene","Carlos","Russell","Bobby","Victor","Martin","Ernest","Phillip","Todd","Jesse","Craig","Alan","Shawn","Clarence","Sean","Philip","Chris","Johnny","Earl","Jimmy","Antonio","Danny","Bryan","Tony","Luis","Mike","Stanley","Leonard","Nathan","Dale","Manuel","Rodney","Curtis","Norman","Allen","Marvin","Vincent","Glenn","Jeffery","Travis","Jeff","Chad","Jacob","Lee","Melvin","Alfred","Kyle","Francis","Bradley","Jesus","Herbert","Frederick","Ray","Joel","Edwin","Don","Eddie","Ricky","Troy","Randall","Barry","Alexander","Bernard","Mario","Leroy","Francisco","Marcus","Micheal","Theodore","Clifford","Miguel","Oscar","Jay","Jim","Tom","Calvin","Alex","Jon","Ronnie","Bill","Lloyd","Tommy","Leon","Derek","Warren","Darrell","Jerome","Floyd","Leo","Alvin","Tim","Wesley","Gordon","Dean","Greg","Jorge","Dustin","Pedro","Derrick","Dan","Lewis","Zachary","Corey","Herman","Maurice","Vernon","Roberto","Clyde","Glen","Hector","Shane","Ricardo","Sam","Rick","Lester","Brent","Ramon","Charlie","Tyler","Gilbert","Gene","Marc","Reginald","Ruben","Brett","Angel","Nathaniel","Rafael","Leslie","Edgar","Milton","Raul","Ben","Chester","Cecil","Duane","Franklin","Andre","Elmer","Brad","Gabriel","Ron","Mitchell","Roland","Arnold","Harvey","Jared","Adrian","Karl","Cory","Claude","Erik","Darryl","Jamie","Neil","Jessie","Christian","Javier","Fernando","Clinton","Ted","Mathew","Tyrone","Darren","Lonnie","Lance","Cody","Julio","Kelly","Kurt","Allan","Nelson","Guy","Clayton","Hugh","Max","Dwayne","Dwight","Armando","Felix","Jimmie","Everett","Jordan","Ian","Wallace","Ken","Bob","Jaime","Casey","Alfredo","Alberto","Dave","Ivan","Johnnie","Sidney","Byron","Julian","Isaac","Morris","Clifton","Willard","Daryl","Ross","Virgil","Andy","Marshall","Salvador","Perry","Kirk","Sergio","Marion","Tracy","Seth","Kent","Terrance","Rene","Eduardo","Terrence","Enrique","Freddie","Wade","Austin","Stuart","Fredrick","Arturo","Alejandro","Jackie","Joey","Nick","Luther","Wendell","Jeremiah","Evan","Julius","Dana","Donnie","Otis","Shannon","Trevor","Oliver","Luke","Homer","Gerard","Doug","Kenny","Hubert","Angelo","Shaun","Lyle","Matt","Lynn","Alfonso","Orlando","Rex","Carlton","Ernesto","Cameron","Neal","Pablo","Lorenzo","Omar","Wilbur","Blake","Grant","Horace","Roderick","Kerry","Abraham","Willis","Rickey","Jean","Ira","Andres","Cesar","Johnathan","Malcolm","Rudolph","Damon","Kelvin","Rudy","Preston","Alton","Archie","Marco","Wm","Pete","Randolph","Garry","Geoffrey","Jonathon","Felipe","Bennie","Gerardo","Ed","Dominic","Robin","Loren","Delbert","Colin","Guillermo","Earnest","Lucas","Benny","Noel","Spencer","Rodolfo","Myron","Edmund","Garrett","Salvatore","Cedric","Lowell","Gregg","Sherman","Wilson","Devin","Sylvester","Kim","Roosevelt","Israel","Jermaine","Forrest","Wilbert","Leland","Simon","Guadalupe","Clark","Irving","Carroll","Bryant","Owen","Rufus","Woodrow","Sammy","Kristopher","Mack","Levi","Marcos","Gustavo","Jake","Lionel","Marty","Taylor","Ellis","Dallas","Gilberto","Clint","Nicolas","Laurence","Ismael","Orville","Drew","Jody","Ervin","Dewey","Al","Wilfred","Josh","Hugo","Ignacio","Caleb","Tomas","Sheldon","Erick","Frankie","Stewart","Doyle","Darrel","Rogelio","Terence","Santiago","Alonzo","Elias","Bert","Elbert","Ramiro","Conrad","Pat","Noah","Grady","Phil","Cornelius","Lamar","Rolando","Clay","Percy","Dexter","Bradford","Merle","Darin","Amos","Terrell","Moses","Irvin","Saul","Roman","Darnell","Randal","Tommie","Timmy","Darrin","Winston","Brendan","Toby","Van","Abel","Dominick","Boyd","Courtney","Jan","Emilio","Elijah","Cary","Domingo","Santos","Aubrey","Emmett","Marlon","Emanuel","Jerald","Edmond"]})),_q=c((()=>{mf=["Aaliyah","Abigaël","Abigaëlle","Abigail","Abigaïl","Aby","Ada","Adame","Adelaïde","Adélaïde","Adèle","Adelie","Adélie","Adeline","Adja","Adriana","Agathe","Aglae","Aglaé","Agnès","Aicha","Aïcha","Aïda","Aimee","Aïna","Aïsha","Aïssa","Aïssata","Aissatou","Aïssatou","Alba","Albane","Albertine","Aleksandra","Alessia","Alexandra","Alexane","Alexia","Alia","Alice","Alicia","Alienor","Aliénor","Alima","Alina","Aline","Alisha","Alissa","Alix","Alixe","Aliya","Aliyah","Alizee","Allegra","Alma","Alya","Alyah","Alycia","Alyssa","Alyssia","Alysson","Amalia","Amanda","Amandine","Ambre","Ambrine","Amel","Amelia","Amelie","Amélie","Amicie","Amina","Aminata","Amira","Amy","Ana","Anabelle","Anae","Anael","Anaël","Anaelle","Anaëlle","Anaïs","Anastasia","Andrea","Andréa","Angel","Angela","Angèle","Angelina","Angeline","Angelique","Angie","Ania","Anissa","Anita","Anna","Annabelle","Annaëlle","Anne","Anne-Laure","Anne-Sophie","Anouck","Anouk","Antonia","Anya","Apolline","Appoline","Ariana","Ariane","Arielle","Arij","Armance","Armelle","Artemis","Arwa","Arwen","Ashley","Asia","Asma","Asmaa","Assa","Assetou","Assia","Assil","Assya","Astou","Astrid","Athena","Athéna","Athenaïs","Aude","Audrey","Augustine","Aurelia","Aurelie","Auriane","Aurore","Ava","Avital","Avril","Awa","Axelle","Aya","Ayah","Ayem","Ayla","Aylin","Ayline","Bahia","Barbara","Basma","Baya","Beatrice","Bella","Benedicte","Berenice","Bérénice","Bertille","Beryl","Béryl","Bettina","Betty","Beya","Bianca","Billie","Binta","Bintou","Blanche","Blandine","Blessing","Bonnie","Bouchra","Brune","Calista","Camelia","Camélia","Camila","Camilia","Camille","Candice","Capucine","Carine","Carla","Carlotta","Carmen","Carolina","Caroline","Cassandra","Cassandre","Cassie","Cassiopee","Castille","Catherine","Cecile","Cécile","Cecilia","Celeste","Celestine","Celia","Célia","Celina","Celine","Cerise","Chahinez","Chaïma","Chanel","Charlène","Charlie","Charline","Charlize","Charlotte","Chayma","Chelsea","Chiara","Chirine","Chloe","Chloé","Christelle","Christina","Christine","Cindy","Claire","Clara","Clarisse","Claudia","Clea","Cléa","Clelia","Clelie","Clemence","Clémence","Clementine","Clémentine","Cleo","Cléo","Cleophee","Cléophée","Cloe","Cloé","Clothilde","Clotilde","Colette","Coline","Colombe","Constance","Coralie","Coraline","Cosima","Coumba","Cynthia","Cyrielle","Cyrine","Dahlia","Dalia","Dalla","Dana","Danae","Dania","Daniela","Daniella","Daphne","Daphné","Daphnee","Daria","Darine","Deborah","Delphine","Diana","Diane","Dina","Divine","Djeneba","Domitille","Dora","Doriane","Dounia","Dune","Dyna","Eden","Eglantine","Eileen","Ela","Elea","Eléa","Eleanor","Eleanore","Eléanore","Elena","Éléna","Eleonore","Eléonore","Éléonore","Elia","Eliana","Eliane","Eliette","Elif","Elina","Eline","Elinor","Elisa","Elisabeth","Elise","Élise","Elissa","Eliza","Elizabeth","Ella","Ellie","Elly","Eloane","Elodie","Eloïse","Éloïse","Elona","Elora","Elsa","Elvire","Elya","Elyne","Elyssa","Ema","Emeline","Emi","Emie","Emilia","Emilie","Émilie","Emily","Emma","Emmanuelle","Emmie","Emmy","Emna","Emy","Enola","Enora","Énora","Erika","Erin","Erine","Estelle","Esther","Ethel","Eugenie","Eugénie","Eulalie","Eunice","Eurydice","Eva","Éva","Eve","Ève","Evy","Eya","Faith","Fanny","Fanta","Fantine","Farah","Fatim","Fatima","Fatimata","Fatma","Fatou","Fatouma","Fatoumata","Faustine","Felicie","Félicie","Feriel","Feryel","Fiona","Flavia","Flavie","Fleur","Flora","Flore","Florence","Floriane","Francesca","Frida","Gabriela","Gabriella","Gabrielle","Gaëlle","Gaia","Gaïa","Garance","Georgia","Gisèle","Giulia","Gloria","Goundo","Grace","Grâce","Guillemette","Gwenaëlle","Habiba","Haby","Hadja","Hafsa","Hajar","Halima","Hana","Hanae","Hanaé","Hania","Hanna","Hannah","Hasna","Hatouma","Hawa","Haya","Helena","Helèna","Helène","Hélène","Heloïse","Héloïse","Hermine","Hiba","Hind","Hortense","Houda","Ilana","Iliana","Ilona","Ilyana","Iman","Imane","Imen","Imene","Imène","Inaya","Ines","Inès","Inës","Inna","Irène","Irina","Iris","Isabella","Isabelle","Isadora","Isaure","Isee","Iseult","Isis","Isra","Israa","Izia","Jacqueline","Jade","Jana","Jane","Janelle","Janna","Jannah","Jasmine","Jeanne","Jehanne","Jenna","Jennah","Jennifer","Jenny","Jessica","Jessie","Jihane","Jill","Jinane","Joana","Joanna","Joanne","Joëlle","Johanna","Johanne","Josephine","Joséphine","Joy","Joyce","Judith","Julia","Juliana","Julianne","Julie","Juliette","June","Junon","Justine","Kadiatou","Kadidia","Kadidiatou","Kady","Kahina","Kaïna","Kamila","Karen","Karine","Karla","Karolina","Kate","Katell","Kathleen","Katia","Kawtar","Kayla","Kayliah","Kayna","Keira","Kelly","Kelya","Kenza","Keren","Ketsia","Keyla","Khadidiatou","Khadidja","Khadija","Khady","Kiara","Kim","Kimberly","Klara","Laetitia","Laëtitia","Lahna","Lalie","Lamia","Lana","Lara","Latifa","Laura","Laure","Lauren","Laurène","Lauriane","Laurine","Lauryn","Layana","Layanah","Layla","Lea","Léa","Leana","Léana","Leane","Leanne","Leelou","Lehna","Leila","Leïla","Leïna","Lena","Léna","Leni","Leonie","Léonie","Leonor","Leonore","Leontine","Leopoldine","Leslie","Leticia","Levana","Leyla","Leyna","Lia","Liana","Lila","Lilas","Lili","Lilia","Liliana","Liliane","Lilie","Lili-Rose","Lilly","Lilou","Lilwenn","Lily","Lilya","Lily-Rose","Lina","Linda","Lindsay","Line","Linoï","Linoy","Liora","Lisa","Lise","Lison","Lital","Liv","Livia","Liya","Liyah","Liz","Liza","Loane","Loïse","Lola","Lorena","Lorraine","Lou","Louane","Louann","Lou-Ann","Lou-Anne","Loubna","Louisa","Louise","Louis-Marie","Louison","Loula","Louna","Luce","Lucia","Lucie","Lucile","Lucille","Lucy","Ludivine","Ludmila","Luisa","Lula","Luna","Luz","Lya","Lyana","Lydia","Lyla","Lylia","Lylou","Lyna","Lyne","Lynn","Maayane","Madeleine","Madeline","Madina","Mady","Mae","Maé","Maëlie","Maëline","Maélis","Maëlis","Maelle","Maëlle","Maëly","Maëlyne","Maelys","Maëlys","Maeva","Maëva","Magdalena","Mahault","Mahaut","Mai","Maï","Maia","Maïa","Maïly","Maïlys","Maïmouna","Maïna","Maïssa","Maïssane","Maïwenn","Malak","Malek","Malia","Malika","Manal","Manel","Manelle","Manon","Manuela","Mara","Maram","Margaux","Margo","Margot","Marguerite","Maria","Mariam","Mariama","Mariame","Marianne","Marie","Marie-Ange","Marie-Lou","Mariem","Marilou","Marina","Marine","Marion","Marjane","Marjorie","Marnie","Martha","Marthe","Marwa","Marwen","Maryam","Marylou","Mathilda","Mathilde","Matilda","Matilde","Maud","Maude","Maureen","Maxime","Maxine","May","Maya","Mayane","Mayar","Mayline","Maylis","Mayssa","Meïssa","Melanie","Melia","Melina","Melinda","Meline","Méline","Melissa","Mélissa","Mellina","Melodie","Melody","Melusine","Meriam","Meriem","Meryam","Meryem","Meryl","Mia","Michelle","Mila","Milena","Milla","Mina","Mira","Miya","Moïra","Mona","Monica","Morgane","Mya","Myla","Myriam","Myrtille","Nada","Nadia","Nadine","Naëlle","Nahla","Naïa","Naïla","Naïma","Naïs","Nala","Naomi","Naomie","Natacha","Natalia","Natasha","Nathalie","Nawal","Nawel","Naya","Nayla","Neela","Neïla","Nelia","Nélia","Nell","Nelly","Nelya","Nene","Nermine","Nesrine","Neyla","Niame","Nicole","Nina","Nine","Ninon","Niouma","Noa","Noelie","Noemi","Noemie","Noémie","Nola","Noor","Nora","Norah","Norhane","Nour","Noura","Nourane","Oceane","Odelia","Olga","Olivia","Oliwia","Olympe","Olympia","Ombeline","Ondine","Ophelie","Oriane","Orlane","Ornella","Oumou","Paloma","Paola","Patricia","Paula","Pauline","Penda","Penelope","Pénélope","Perla","Perle","Perrine","Petronille","Philippine","Philomène","Pia","Prisca","Priscille","Prudence","Prune","Quitterie","Rachel","Rahma","Ramata","Rania","Ranim","Ranya","Raphaëlle","Rawane","Rebecca","Rim","Rita","Rivka","Rokia","Romane","Romy","Rosa","Rosalie","Rose","Roxane","Roxanne","Ruth","Rym","Sabrina","Sabrine","Sacha","Sadio","Safa","Safia","Safiya","Sakina","Salimata","Sally","Salma","Salome","Samantha","Samia","Samira","Sana","Sanaa","Sandra","Sara","Sarah","Sarra","Sasha","Saskia","Satine","Savannah","Scarlett","Selena","Séléna","Selène","Selma","Sephora","Serena","Séréna","Serine","Sérine","Shaïly","Shaïma","Shaïna","Shana","Shani","Shanice","Shanna","Shannon","Shanon","Shany","Sharon","Shayma","Shayna","Shelly","Sherine","Shirel","Shirine","Shyrel","Sibylle","Sidonie","Sienna","Sihem","Siloe","Simone","Sira","Sirine","Sixtine","Sofia","Sohane","Solange","Solène","Solenn","Soline","Solveig","Sonia","Sophia","Sophie","Soraya","Soumaya","Stacy","Stella","Stephanie","Suzanne","Suzie","Swann","Sybille","Sylvia","Sylvie","Syrine","Taïna","Taïs","Tal","Tali","Talia","Talya","Tamara","Tania","Tanya","Tara","Tasnim","Tasnime","Tatiana","Tea","Tesnim","Tesnime","Tess","Tessa","Thaïs","Thalia","Thanina","Thea","Théa","Thelma","Therèse","Tia","Tiana","Tiffany","Tiguida","Tina","Tiphaine","Toscane","Tracy","Tsipora","Valentina","Valentine","Vanessa","Vera","Victoire","Victoria","Viktoria","Violette","Virginie","Viviane","Wendy","Wiem","Wiktoria","Wissam","Yael","Yaël","Yaëlle","Yamina","Yara","Yasmina","Yasmine","Yona","Yosra","Youmna","Youna","Yousra","Yse","Ysé","Ysee","Ysée","Yumi","Yuna","Zahra","Zara","Zayneb","Zeinab","Zelda","Zelie","Zeynab","Zina","Zineb","Zoe","Zoé","Zoë","Zohra","Zuzanna","Mary","Patricia","Linda","Barbara","Elizabeth","Jennifer","Maria","Susan","Margaret","Dorothy","Lisa","Nancy","Karen","Betty","Helen","Sandra","Donna","Carol","Ruth","Sharon","Michelle","Laura","Sarah","Kimberly","Deborah","Jessica","Shirley","Cynthia","Angela","Melissa","Brenda","Amy","Anna","Rebecca","Virginia","Kathleen","Pamela","Martha","Debra","Amanda","Stephanie","Carolyn","Christine","Marie","Janet","Catherine","Frances","Ann","Joyce","Diane","Alice","Julie","Heather","Teresa","Doris","Gloria","Evelyn","Jean","Cheryl","Mildred","Katherine","Joan","Ashley","Judith","Rose","Janice","Kelly","Nicole","Judy","Christina","Kathy","Theresa","Beverly","Denise","Tammy","Irene","Jane","Lori","Rachel","Marilyn","Andrea","Kathryn","Louise","Sara","Anne","Jacqueline","Wanda","Bonnie","Julia","Ruby","Lois","Tina","Phyllis","Norma","Paula","Diana","Annie","Lillian","Emily","Robin","Peggy","Crystal","Gladys","Rita","Dawn","Connie","Florence","Tracy","Edna","Tiffany","Carmen","Rosa","Cindy","Grace","Wendy","Victoria","Edith","Kim","Sherry","Sylvia","Josephine","Thelma","Shannon","Sheila","Ethel","Ellen","Elaine","Marjorie","Carrie","Charlotte","Monica","Esther","Pauline","Emma","Juanita","Anita","Rhonda","Hazel","Amber","Eva","Debbie","April","Leslie","Clara","Lucille","Jamie","Joanne","Eleanor","Valerie","Danielle","Megan","Alicia","Suzanne","Michele","Gail","Bertha","Darlene","Veronica","Jill","Erin","Geraldine","Lauren","Cathy","Joann","Lorraine","Lynn","Sally","Regina","Erica","Beatrice","Dolores","Bernice","Audrey","Yvonne","Annette","June","Samantha","Marion","Dana","Stacy","Ana","Renee","Ida","Vivian","Roberta","Holly","Brittany","Melanie","Loretta","Yolanda","Jeanette","Laurie","Katie","Kristen","Vanessa","Alma","Sue","Elsie","Beth","Jeanne","Vicki","Carla","Tara","Rosemary","Eileen","Terri","Gertrude","Lucy","Tonya","Ella","Stacey","Wilma","Gina","Kristin","Jessie","Natalie","Agnes","Vera","Willie","Charlene","Bessie","Delores","Melinda","Pearl","Arlene","Maureen","Colleen","Allison","Tamara","Joy","Georgia","Constance","Lillie","Claudia","Jackie","Marcia","Tanya","Nellie","Minnie","Marlene","Heidi","Glenda","Lydia","Viola","Courtney","Marian","Stella","Caroline","Dora","Jo","Vickie","Mattie","Terry","Maxine","Irma","Mabel","Marsha","Myrtle","Lena","Christy","Deanna","Patsy","Hilda","Gwendolyn","Jennie","Nora","Margie","Nina","Cassandra","Leah","Penny","Kay","Priscilla","Naomi","Carole","Brandy","Olga","Billie","Dianne","Tracey","Leona","Jenny","Felicia","Sonia","Miriam","Velma","Becky","Bobbie","Violet","Kristina","Toni","Misty","Mae","Shelly","Daisy","Ramona","Sherri","Erika","Katrina","Claire","Lindsey","Lindsay","Geneva","Guadalupe","Belinda","Margarita","Sheryl","Cora","Faye","Ada","Natasha","Sabrina","Isabel","Marguerite","Hattie","Harriet","Molly","Cecilia","Kristi","Brandi","Blanche","Sandy","Rosie","Joanna","Iris","Eunice","Angie","Inez","Lynda","Madeline","Amelia","Alberta","Genevieve","Monique","Jodi","Janie","Maggie","Kayla","Sonya","Jan","Lee","Kristine","Candace","Fannie","Maryann","Opal","Alison","Yvette","Melody","Luz","Susie","Olivia","Flora","Shelley","Kristy","Mamie","Lula","Lola","Verna","Beulah","Antoinette","Candice","Juana","Jeannette","Pam","Kelli","Hannah","Whitney","Bridget","Karla","Celia","Latoya","Patty","Shelia","Gayle","Della","Vicky","Lynne","Sheri","Marianne","Kara","Jacquelyn","Erma","Blanca","Myra","Leticia","Pat","Krista","Roxanne","Angelica","Johnnie","Robyn","Francis","Adrienne","Rosalie","Alexandra","Brooke","Bethany","Sadie","Bernadette","Traci","Jody","Kendra","Jasmine","Nichole","Rachael","Chelsea","Mable","Ernestine","Muriel","Marcella","Elena","Krystal","Angelina","Nadine","Kari","Estelle","Dianna","Paulette","Lora","Mona","Doreen","Rosemarie","Angel","Desiree","Antonia","Hope","Ginger","Janis","Betsy","Christie","Freda","Mercedes","Meredith","Lynette","Teri","Cristina","Eula","Leigh","Meghan","Sophia","Eloise","Rochelle","Gretchen","Cecelia","Raquel","Henrietta","Alyssa","Jana","Kelley","Gwen","Kerry","Jenna","Tricia","Laverne","Olive","Alexis","Tasha","Silvia","Elvira","Casey","Delia","Sophie","Kate","Patti","Lorena","Kellie","Sonja","Lila","Lana","Darla","May","Mindy","Essie","Mandy","Lorene","Elsa","Josefina","Jeannie","Miranda","Dixie","Lucia","Marta","Faith","Lela","Johanna","Shari","Camille","Tami","Shawna","Elisa","Ebony","Melba","Ora","Nettie","Tabitha","Ollie","Jaime","Winifred","Kristie"]})),wq=c((()=>{ff=["Aaron","Abd","Abdallah","Abdel","Abdelkader","Abdellah","Abderrahmane","Abdou","Abdoul","Abdoulaye","Abdourahmane","Abdramane","Abel","Aboubacar","Aboubakar","Abraham","Achille","Achraf","Adam","Adama","Adame","Adel","Adem","Aden","Adib","Adil","Adrian","Adriano","Adrien","Ahmad","Ahmed","Aidan","Aïdan","Aiden","Aimé","Aïssa","Akram","Aksel","Aksil","Alain","Alan","Alassane","Alban","Albert","Alec","Aleksandar","Alessandro","Alessio","Alex","Alexander","Alexandre","Alexis","Alfred","Ali","Aliou","Alistair","Allan","Aloïs","Alon","Alone","Aloys","Alpha","Alphonse","Aly","Amadou","Amaël","Amani","Amar","Amara","Amaury","Ambroise","Amin","Amine","Amir","Amos","Anas","Anass","Anatole","Andre","André","Andréa","Andreas","Andréas","Andrei","Andrew","Andy","Anes","Ange","Angelo","Anis","Anselme","Anthony","Antoine","Anton","Antonin","Antonio","Antony","Archibald","Arda","Ari","Arie","Ariel","Aris","Aristide","Arman","Armand","Armel","Arnaud","Arno","Aron","Arsène","Arthur","Arthus","Arto","Artus","Aubin","Auguste","Augustin","Aurel","Aurèle","Aurelien","Aurélien","Auxence","Avi","Aviel","Axel","Ayaan","Aydan","Ayden","Aylan","Ayman","Aymane","Aymen","Aymeric","Ayoub","Aziz","Badis","Bafode","Bakary","Balthazar","Baptiste","Barnabe","Barthelemy","Basil","Basile","Bastian","Bastien","Baudouin","Ben","Benjamin","Benoit","Benoît","Bilal","Bilel","Blaise","Bogdan","Boris","Boubacar","Boubou","Bradley","Brahim","Brandon","Brayan","Briac","Brian","Brice","Brieuc","Bruno","Bryan","Calixte","Calvin","Cameron","Camil","Carl","Cedric","Cédric","Celestin","Celian","Célian","Cesar","César","Chahine","Chaï","Charles","Charlie","Charly","Cheick","Cheick-Oumar","Cheikh","Chris","Christ","Christian","Christophe","Christopher","Clarence","Clement","Clovis","Colin","Côme","Constant","Constantin","Corentin","Corto","Curtis","Cyprien","Cyrian","Cyriaque","Cyril","Cyrille","Cyrus","Damian","Damien","Dan","Dani","Daniel","Danny","Dany","Danyl","Daouda","Dario","Darius","Darren","David","Dayan","Dayane","Demba","Denis","Diego","Dilan","Dimitri","Djibril","Dorian","Dov","Driss","Dylan","Eddy","Eden","Edgar","Edgard","Edouard","Édouard","Eduard","Eduardo","Edward","Edwin","El","Eli","Eliahou","Elian","Elias","Élias","Elie","Élie","Eliel","Elijah","Elio","Elior","Eliot","Eliott","Elliot","Elliott","Eloan","Eloi","Elone","Elouan","Elyas","Elyes","Elyès","Emil","Emile","Emilien","Emilio","Emir","Emmanuel","Enguerrand","Enzo","Ephraïm","Eric","Erik","Ernest","Erwan","Erwann","Esteban","Ethan","Ethann","Etienne","Étienne","Eugène","Evan","Evann","Ewan","Ewen","Ewenn","Eyal","Eytan","Eythan","Ezio","Fabien","Fabio","Fabrice","Fadi","Fady","Fares","Farès","Farouk","Federico","Felicien","Felix","Ferdinand","Filip","Filipe","Firas","Flavien","Flavio","Florent","Florentin","Florian","Fode","Foucauld","Francis","Franck","François","Franklin","Frederic","Gabin","Gabriel","Gad","Gaël","Gaetan","Gaétan","Gaëtan","Gary","Gaspar","Gaspard","Gaston","Gauthier","Gautier","Geoffrey","Geoffroy","George","Georges","Germain","Giacomo","Gianni","Giovanni","Giulio","Gonzague","Gregoire","Gregory","Guilhem","Guillaume","Gustave","Guy","Gwendoline","Habib","Hadriel","Hadrien","Haïm","Hakim","Hamed","Hamidou","Hamza","Harold","Haron","Haroun","Harouna","Haroune","Harry","Hassan","Hassane","Hatem","Hayden","Hector","Hedi","Hédi","Helie","Hélie","Helios","Henri","Henry","Hicham","Hillel","Hippolyte","Honore","Hubert","Hugo","Hugues","Ian","Iban","Ibrahim","Ibrahima","Idan","Idir","Idris","Idriss","Idrissa","Igor","Ilan","Ilhan","Ilian","Iliane","Ilias","Ilies","Ilyan","Ilyane","Ilyas","Ilyass","Ilyes","Ilyès","Ilyess","Imad","Imran","Imrane","Inza","Isaac","Ishaq","Isidore","Islam","Ismael","Ismaël","Ismail","Ismaïl","Israël","Issa","Issam","Issiaka","Ivan","Iwan","Iyad","Iyed","Jack","Jacob","Jacques","Jad","Jaden","Jalil","James","Jan","Jarod","Jason","Jassem","Jassim","Jawad","Jawed","Jayden","Jayson","Jean","Jean-Baptiste","Jean-Marc","Jed","Jeremie","Jeremy","Jérémy","Jerôme","Jibril","Jim","Jimmy","Joachim","Joakim","Joan","Joaquim","Joe","Joël","Joey","Johan","Johann","John","Johnny","Jonah","Jonas","Jonathan","Jordan","Joris","Joseph","Josh","Joshua","Josue","Josué","Joud","Juan","Jude","Jules","Julian","Julien","Junior","Justin","Kacper","Kaïs","Kamel","Kamil","Karamba","Karamoko","Karim","Karl","Kassim","Kays","Kelvin","Kelyan","Kenan","Kenny","Kenzi","Kenzo","Kenzy","Kevin","Kévin","Khalil","Kilian","Killian","Kilyan","Kyan","Kyle","Kylian","Kyliann","Kyllian","Ladji","Lamine","Lancelot","Lassana","Laszlo","Laurent","Lazar","Lazare","Leandre","Leandro","Lenny","Leny","Leo","Léo","Leon","Leonard","Leonardo","Leo-Paul","Leopold","Léopold","Levi","Lévi","Liam","Lilian","Lino","Lior","Lirone","Lisandro","Livio","Loan","Logan","Lohan","Loïc","Loïs","Lorenzo","Loris","Lou","Louay","Louca","Louis","Louison","Louka","Lounis","Loup","Lubin","Luc","Luca","Lucas","Lucien","Ludovic","Luigi","Luis","Luka","Lukas","Luke","Lyam","Lyes","Maceo","Maé","Mael","Maël","Mahamadou","Mahdi","Mahe","Mahé","Mahmoud","Makan","Maksim","Malcolm","Malek","Malick","Malik","Malo","Malone","Mamadou","Mamoudou","Manar","Manil","Manuel","Marc","Marc-Antoine","Marceau","Marcel","Marco","Marcus","Marin","Mario","Marius","Mark","Marko","Marley","Marlon","Marouane","Martin","Marvin","Marwan","Marwane","Massinissa","Mateja","Mateo","Mateusz","Matheo","Mathéo","Mathias","Mathieu","Mathis","Mathurin","Mathys","Matias","Matis","Matisse","Matt","Matteo","Mattéo","Mattheo","Matthew","Matthias","Matthieu","Matthis","Mattia","Matys","Max","Maxence","Maxens","Maxim","Maxime","Maximilian","Maximilien","Mayeul","Mehdi","Melchior","Melvil","Melvin","Melvyn","Menahem","Mendel","Merlin","Merwan","Michael","Michaël","Michel","Mickael","Mickaël","Miguel","Mika","Mikail","Mikaïl","Mike","Milan","Milhan","Milo","Minh","Moche","Modibo","Mody","Mohamed","Mohamed-Ali","Mohamed-Amine","Mohammad","Mohammed","Moïse","Morgan","Mory","Mouctar","Mouhamadou","Mouhamed","Moussa","Moustafa","Moustapha","Muhammad","Mustapha","Mylan","Nabil","Nadir","Nael","Naël","Nahel","Nahil","Naïl","Naïm","Nassim","Nathan","Nathanael","Nathanaël","Nathaniel","Nawfel","Nayel","Nazim","Neil","Nelson","Neo","Nicolas","Niels","Nikita","Nikola","Nil","Nils","Nino","Nizar","Noa","Noah","Noam","Noâm","Noan","Noe","Noé","Noha","Noham","Nohan","Nolan","Nolann","Nolhan","Nouha","Nour","Octave","Oliver","Olivier","Omar","Oren","Oscar","Oskar","Othmane","Otto","Oumar","Ousmane","Oussama","Owen","Pablo","Paco","Pacôme","Paolo","Pascal","Patrick","Paul","Paul-Antoine","Paul-Arthur","Paulin","Pedro","Peter","Pharell","Phileas","Philemon","Philippe","Pierre","Pierre-Alexandre","Pierre-Antoine","Pierre-Louis","Pol","Preston","Prince","Prosper","Quentin","Rafael","Rafaël","Rami","Ramy","Raoul","Raphael","Raphaël","Rayan","Rayane","Rayen","Reda","Remi","Remy","Riad","Ricardo","Richard","Riyad","Robert","Robin","Robinson","Rodrigo","Rodrigue","Rohan","Romain","Roman","Romeo","Roméo","Ron","Ronan","Roy","Ruben","Rudy","Ryad","Ryan","Saad","Sabri","Sacha","Saïd","Salim","Salomon","Sam","Samba","Sami","Samir","Samson","Samuel","Samy","Sandro","Santiago","Sasha","Saul","Scott","Sean","Sebastian","Sebastien","Sekou","Selim","Selyan","Serge","Seydou","Shaï","Shawn","Shay","Shayan","Sidney","Sidy","Silas","Simeon","Siméon","Simon","Skander","Soan","Sofiane","Sohan","Solal","Soren","Souleyman","Souleymane","Stan","Stanislas","Stanley","Steeve","Stefan","Stephane","Stéphane","Steve","Steven","Sven","Swan","Swann","Sylvain","Taha","Tancrède","Tanguy","Tao","Teddy","Teo","Terence","Theo","Théo","Theodore","Theophane","Théophane","Theophile","Théophile","Theotime","Thiago","Thibaud","Thibault","Thibaut","Thierno","Thierry","Thomas","Tiago","Tidiane","Tilio","Tim","Timeo","Timéo","Timothe","Timothee","Titouan","Tobias","Tom","Toma","Tomas","Tommy","Tony","Tristan","Tybalt","Tymeo","Tyron","Ugo","Ulysse","Vadim","Valentin","Valentino","Valerie","Vasco","Vianney","Victor","Victorien","Viktor","Vincent","Virgil","Virgile","Vivien","Vladimir","Wael","Waël","Walid","Wandrille","Warren","Wassim","Wesley","Wilfried","William","Willy","Wilson","Wissem","Xavier","Yacine","Yacouba","Yahya","Yani","Yanis","Yann","Yanni","Yannick","Yannis","Yaron","Yasin","Yasser","Yassin","Yassine","Yaya","Yazid","Ylan","Yoan","Yoann","Yoav","Yoel","Yoël","Yohan","Yohann","Yoni","Yossef","Youcef","Younes","Younès","Youness","Youri","Youssef","Youssouf","Yuri","Yvan","Yves","Zacharia","Zacharie","Zachary","Zack","Zackary","Zadig","Zakaria","Zakariya","Zakary","Zakarya","Zayd","Zephyr","Ziad","Zinedine","Ziyad","Zyad","James","John","Robert","Michael","William","David","Richard","Charles","Joseph","Thomas","Christopher","Daniel","Paul","Mark","Donald","George","Kenneth","Steven","Edward","Brian","Ronald","Anthony","Kevin","Jason","Matthew","Gary","Timothy","Jose","Larry","Jeffrey","Frank","Scott","Eric","Stephen","Andrew","Raymond","Gregory","Joshua","Jerry","Dennis","Walter","Patrick","Peter","Harold","Douglas","Henry","Carl","Arthur","Ryan","Roger","Joe","Juan","Jack","Albert","Jonathan","Justin","Terry","Gerald","Keith","Samuel","Willie","Ralph","Lawrence","Nicholas","Roy","Benjamin","Bruce","Brandon","Adam","Harry","Fred","Wayne","Billy","Steve","Louis","Jeremy","Aaron","Randy","Howard","Eugene","Carlos","Russell","Bobby","Victor","Martin","Ernest","Phillip","Todd","Jesse","Craig","Alan","Shawn","Clarence","Sean","Philip","Chris","Johnny","Earl","Jimmy","Antonio","Danny","Bryan","Tony","Luis","Mike","Stanley","Leonard","Nathan","Dale","Manuel","Rodney","Curtis","Norman","Allen","Marvin","Vincent","Glenn","Jeffery","Travis","Jeff","Chad","Jacob","Lee","Melvin","Alfred","Kyle","Francis","Bradley","Jesus","Herbert","Frederick","Ray","Joel","Edwin","Don","Eddie","Ricky","Troy","Randall","Barry","Alexander","Bernard","Mario","Leroy","Francisco","Marcus","Micheal","Theodore","Clifford","Miguel","Oscar","Jay","Jim","Tom","Calvin","Alex","Jon","Ronnie","Bill","Lloyd","Tommy","Leon","Derek","Warren","Darrell","Jerome","Floyd","Leo","Alvin","Tim","Wesley","Gordon","Dean","Greg","Jorge","Dustin","Pedro","Derrick","Dan","Lewis","Zachary","Corey","Herman","Maurice","Vernon","Roberto","Clyde","Glen","Hector","Shane","Ricardo","Sam","Rick","Lester","Brent","Ramon","Charlie","Tyler","Gilbert","Gene","Marc","Reginald","Ruben","Brett","Angel","Nathaniel","Rafael","Leslie","Edgar","Milton","Raul","Ben","Chester","Cecil","Duane","Franklin","Andre","Elmer","Brad","Gabriel","Ron","Mitchell","Roland","Arnold","Harvey","Jared","Adrian","Karl","Cory","Claude","Erik","Darryl","Jamie","Neil","Jessie","Christian","Javier","Fernando","Clinton","Ted","Mathew","Tyrone","Darren","Lonnie","Lance","Cody","Julio","Kelly","Kurt","Allan","Nelson","Guy","Clayton","Hugh","Max","Dwayne","Dwight","Armando","Felix","Jimmie","Everett","Jordan","Ian","Wallace","Ken","Bob","Jaime","Casey","Alfredo","Alberto","Dave","Ivan","Johnnie","Sidney","Byron","Julian","Isaac","Morris","Clifton","Willard","Daryl","Ross","Virgil","Andy","Marshall","Salvador","Perry","Kirk","Sergio","Marion","Tracy","Seth","Kent","Terrance","Rene","Eduardo","Terrence","Enrique","Freddie","Wade","Austin","Stuart","Fredrick","Arturo","Alejandro","Jackie","Joey","Nick","Luther","Wendell","Jeremiah","Evan","Julius","Dana","Donnie","Otis","Shannon","Trevor","Oliver","Luke","Homer","Gerard","Doug","Kenny","Hubert","Angelo","Shaun","Lyle","Matt","Lynn","Alfonso","Orlando","Rex","Carlton","Ernesto","Cameron","Neal","Pablo","Lorenzo","Omar","Wilbur","Blake","Grant","Horace","Roderick","Kerry","Abraham","Willis","Rickey","Jean","Ira","Andres","Cesar","Johnathan","Malcolm","Rudolph","Damon","Kelvin","Rudy","Preston","Alton","Archie","Marco","Wm","Pete","Randolph","Garry","Geoffrey","Jonathon","Felipe","Bennie","Gerardo","Ed","Dominic","Robin","Loren","Delbert","Colin","Guillermo","Earnest","Lucas","Benny","Noel","Spencer","Rodolfo","Myron","Edmund","Garrett","Salvatore","Cedric","Lowell","Gregg","Sherman","Wilson","Devin","Sylvester","Kim","Roosevelt","Israel","Jermaine","Forrest","Wilbert","Leland","Simon","Guadalupe","Clark","Irving","Carroll","Bryant","Owen","Rufus","Woodrow","Sammy","Kristopher","Mack","Levi","Marcos","Gustavo","Jake","Lionel","Marty","Taylor","Ellis","Dallas","Gilberto","Clint","Nicolas","Laurence","Ismael","Orville","Drew","Jody","Ervin","Dewey","Al","Wilfred","Josh","Hugo","Ignacio","Caleb","Tomas","Sheldon","Erick","Frankie","Stewart","Doyle","Darrel","Rogelio","Terence","Santiago","Alonzo","Elias","Bert","Elbert","Ramiro","Conrad","Pat","Noah","Grady","Phil","Cornelius","Lamar","Rolando","Clay","Percy","Dexter","Bradford","Merle","Darin","Amos","Terrell","Moses","Irvin","Saul","Roman","Darnell","Randal","Tommie","Timmy","Darrin","Winston","Brendan","Toby","Van","Abel","Dominick","Boyd","Courtney","Jan","Emilio","Elijah","Cary","Domingo","Santos","Aubrey","Emmett","Marlon","Emanuel","Jerald","Edmond"]})),jq=c((()=>{vf=["Asexué","Homme","Femme","Androgyne","Genre non conforme","Trans","Transexuel","Personne transgenre"]})),Eq=c((()=>{gf=["Martin","Bernard","Dubois","Thomas","Robert","Richard","Petit","Durand","Leroy","Moreau","Simon","Laurent","Lefebvre","Michel","Garcia","David","Bertrand","Roux","Vincent","Fournier","Morel","Girard","Andre","Lefevre","Mercier","Dupont","Lambert","Bonnet","Francois","Martinez","Legrand","Garnier","Faure","Rousseau","Blanc","Guerin","Muller","Henry","Roussel","Nicolas","Perrin","Morin","Mathieu","Clement","Gauthier","Dumont","Lopez","Fontaine","Chevalier","Robin","Masson","Sanchez","Gerard","Nguyen","Boyer","Denis","Lemaire","Duval","Joly","Gautier","Roger","Roche","Roy","Noel","Meyer","Lucas","Meunier","Jean","Perez","Marchand","Dufour","Blanchard","Marie","Barbier","Brun","Dumas","Brunet","Schmitt","Leroux","Colin","Fernandez","Pierre","Renard","Arnaud","Rolland","Caron","Aubert","Giraud","Leclerc","Vidal","Bourgeois","Renaud","Lemoine","Picard","Gaillard","Philippe","Leclercq","Lacroix","Fabre","Dupuis","Olivier","Rodriguez","Da silva","Hubert","Louis","Charles","Guillot","Riviere","Le gall","Guillaume","Adam","Rey","Moulin","Gonzalez","Berger","Lecomte","Menard","Fleury","Deschamps","Carpentier","Julien","Benoit","Paris","Maillard","Marchal","Aubry","Vasseur","Le roux","Renault","Jacquet","Collet","Prevost","Poirier","Charpentier","Royer","Huet","Baron","Dupuy","Pons","Paul","Laine","Carre","Breton","Remy","Schneider","Perrot","Guyot","Barre","Marty","Abbott","Abernathy","Abshire","Adams","Altenwerth","Anderson","Ankunding","Armstrong","Auer","Aufderhar","Bahringer","Bailey","Balistreri","Barrows","Bartell","Bartoletti","Barton","Bashirian","Batz","Bauch","Baumbach","Bayer","Beahan","Beatty","Bechtelar","Becker","Bednar","Beer","Beier","Berge","Bergnaum","Bergstrom","Bernhard","Bernier","Bins","Blanda","Blick","Block","Bode","Boehm","Bogan","Bogisich","Borer","Bosco","Botsford","Boyer","Boyle","Bradtke","Brakus","Braun","Breitenberg","Brekke","Brown","Bruen","Buckridge","Carroll","Carter","Cartwright","Casper","Cassin","Champlin","Christiansen","Cole","Collier","Collins","Conn","Connelly","Conroy","Considine","Corkery","Cormier","Corwin","Cremin","Crist","Crona","Cronin","Crooks","Cruickshank","Cummerata","Cummings","Dach","D'Amore","Daniel","Dare","Daugherty","Davis","Deckow","Denesik","Dibbert","Dickens","Dicki","Dickinson","Dietrich","Donnelly","Dooley","Douglas","Doyle","DuBuque","Durgan","Ebert","Effertz","Emard","Emmerich","Erdman","Ernser","Fadel","Fahey","Farrell","Fay","Feeney","Feest","Feil","Ferry","Fisher","Flatley","Frami","Franecki","Friesen","Fritsch","Funk","Gaylord","Gerhold","Gerlach","Gibson","Gislason","Gleason","Gleichner","Glover","Goldner","Goodwin","Gorczany","Gottlieb","Goyette","Grady","Graham","Grant","Green","Greenfelder","Greenholt","Grimes","Gulgowski","Gusikowski","Gutkowski","Gutmann","Haag","Hackett","Hagenes","Hahn","Haley","Halvorson","Hamill","Hammes","Hand","Hane","Hansen","Harber","Harris","Hartmann","Harvey","Hauck","Hayes","Heaney","Heathcote","Hegmann","Heidenreich","Heller","Herman","Hermann","Hermiston","Herzog","Hessel","Hettinger","Hickle","Hilll","Hills","Hilpert","Hintz","Hirthe","Hodkiewicz","Hoeger","Homenick","Hoppe","Howe","Howell","Hudson","Huel","Huels","Hyatt","Jacobi","Jacobs","Jacobson","Jakubowski","Jaskolski","Jast","Jenkins","Jerde","Johns","Johnson","Johnston","Jones","Kassulke","Kautzer","Keebler","Keeling","Kemmer","Kerluke","Kertzmann","Kessler","Kiehn","Kihn","Kilback","King","Kirlin","Klein","Kling","Klocko","Koch","Koelpin","Koepp","Kohler","Konopelski","Koss","Kovacek","Kozey","Krajcik","Kreiger","Kris","Kshlerin","Kub","Kuhic","Kuhlman","Kuhn","Kulas","Kunde","Kunze","Kuphal","Kutch","Kuvalis","Labadie","Lakin","Lang","Langosh","Langworth","Larkin","Larson","Leannon","Lebsack","Ledner","Leffler","Legros","Lehner","Lemke","Lesch","Leuschke","Lind","Lindgren","Littel","Little","Lockman","Lowe","Lubowitz","Lueilwitz","Luettgen","Lynch","Macejkovic","MacGyver","Maggio","Mann","Mante","Marks","Marquardt","Marvin","Mayer","Mayert","McClure","McCullough","McDermott","McGlynn","McKenzie","McLaughlin","Medhurst","Mertz","Metz","Miller","Mills","Mitchell","Moen","Mohr","Monahan","Moore","Morar","Morissette","Mosciski","Mraz","Mueller","Muller","Murazik","Murphy","Murray","Nader","Nicolas","Nienow","Nikolaus","Nitzsche","Nolan","Oberbrunner","O'Connell","O'Conner","O'Hara","O'Keefe","O'Kon","Okuneva","Olson","Ondricka","O'Reilly","Orn","Ortiz","Osinski","Pacocha","Padberg","Pagac","Parisian","Parker","Paucek","Pfannerstill","Pfeffer","Pollich","Pouros","Powlowski","Predovic","Price","Prohaska","Prosacco","Purdy","Quigley","Quitzon","Rath","Ratke","Rau","Raynor","Reichel","Reichert","Reilly","Reinger","Rempel","Renner","Reynolds","Rice","Rippin","Ritchie","Robel","Roberts","Rodriguez","Rogahn","Rohan","Rolfson","Romaguera","Roob","Rosenbaum","Rowe","Ruecker","Runolfsdottir","Runolfsson","Runte","Russel","Rutherford","Ryan","Sanford","Satterfield","Sauer","Sawayn","Schaden","Schaefer","Schamberger","Schiller","Schimmel","Schinner","Schmeler","Schmidt","Schmitt","Schneider","Schoen","Schowalter","Schroeder","Schulist","Schultz","Schumm","Schuppe","Schuster","Senger","Shanahan","Shields","Simonis","Sipes","Skiles","Smith","Smitham","Spencer","Spinka","Sporer","Stamm","Stanton","Stark","Stehr","Steuber","Stiedemann","Stokes","Stoltenberg","Stracke","Streich","Stroman","Strosin","Swaniawski","Swift","Terry","Thiel","Thompson","Tillman","Torp","Torphy","Towne","Toy","Trantow","Tremblay","Treutel","Tromp","Turcotte","Turner","Ullrich","Upton","Vandervort","Veum","Volkman","Von","VonRueden","Waelchi","Walker","Walsh","Walter","Ward","Waters","Watsica","Weber","Wehner","Weimann","Weissnat","Welch","West","White","Wiegand","Wilderman","Wilkinson","Will","Williamson","Willms","Windler","Wintheiser","Wisoky","Wisozk","Witting","Wiza","Wolf","Wolff","Wuckert","Wunsch","Wyman","Yost","Yundt","Zboncak","Zemlak","Ziemann","Zieme","Zulauf"]})),Nq=c((()=>{kf=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),Bq=c((()=>{yf=["Mr.","Dr.","Prof.","P."]})),Pq=c((()=>{bf=["Fils","I","II","III","IV","V"]})),Lq=c((()=>{Sf={job:["Superviseur","Executif","Manager","Ingenieur","Specialiste","Directeur","Coordinateur","Administrateur","Architecte","Analyste","Designer","Technicien","Developpeur","Producteur","Consultant","Assistant","Agent","Stagiaire"]}})),Dq=c((()=>{Tq(),_q(),wq(),jq(),Eq(),Nq(),Bq(),Pq(),Lq(),Af={first_name:pf,female_first_name:mf,male_first_name:ff,gender:vf,last_name:gf,name:kf,prefix:yf,suffix:bf,title:Sf}})),xq=c((()=>{Mf=["###/######","###/## ## ##","### ## ## ##","###/### ###","##########","04##/### ###","04## ## ## ##","00324 ## ## ##","+324 ## ## ## ##","010######","011######","012######","013######","014######","015######","016######","019######","02#######","03#######","04######","050######","051######","053######","052######","054######","055######","056######","057######","058######","059######","060######","061######","063######","064######","065######","067######","068######","069######","071######","080######","081######","082######","083######","084######","085######","086######","087######","089######","09#######","+32 10######","+32 11######","+32 12######","+32 13######","+32 14######","+32 15######","+32 16######","+32 19######","+32 2#######","+32 3#######","+32 4######","+32 50######","+32 51######","+32 53######","+32 52######","+32 54######","+32 55######","+32 56######","+32 57######","+32 58######","+32 59######","+32 60######","+32 61######","+32 63######","+32 64######","+32 65######","+32 67######","+32 68######","+32 69######","+32 71######","+32 80######","+32 81######","+32 82######","+32 83######","+32 84######","+32 85######","+32 86######","+32 87######","+32 89######","+32 9#######"]})),Cq=c((()=>{xq(),Tf={formats:Mf}})),Kq=c((()=>{kq(),bq(),Mq(),Dq(),Cq(),_f={title:"Français (Belgique)",address:sf,cell_phone:uf,internet:hf,name:Af,phone_number:Tf}})),Rq=c((()=>{wf=["Canada"]})),zq=c((()=>{jf=["A#? #?#","B#? #?#","C#? #?#","E#? #?#","G#? #?#","H#? #?#","J#? #?#","K#? #?#","L#? #?#","M#? #?#","N#? #?#","P#? #?#","R#? #?#","S#? #?#","T#? #?#","V#? #?#","X#? #?#","Y#? #?#"]})),Oq=c((()=>{Ef=["Alberta","Colombie-Britannique","Manitoba","Nouveau-Brunswick","Terre-Neuve-et-Labrador","Nouvelle-Écosse","Territoires du Nord-Ouest","Nunavut","Ontario","Île-du-Prince-Édouard","Québec","Saskatchewan","Yukon"]})),Iq=c((()=>{Nf=["AB","BC","MB","NB","NL","NS","NU","NT","ON","PE","QC","SK","YK"]})),Vq=c((()=>{Rq(),zq(),Oq(),Iq(),Bf={default_country:wf,postcode:jf,state:Ef,state_abbr:Nf}})),Gq=c((()=>{Pf=["qc.ca","ca","com","biz","info","name","net","org"]})),Hq=c((()=>{Lf=["gmail.com","yahoo.ca","hotmail.com"]})),Fq=c((()=>{Gq(),Hq(),Df={domain_suffix:Pf,free_email:Lf}})),Jq=c((()=>{xf=["### ###-####","1 ### ###-####","### ###-####, poste ###"]})),Uq=c((()=>{Jq(),Cf={formats:xf}})),Wq=c((()=>{Vq(),Fq(),Uq(),Kf={title:"French (Canada)",address:Bf,internet:Df,phone_number:Cf}})),Zq=c((()=>{Rf=["#{city_name}"]})),qq=c((()=>{zf=["Aarau","Adliswil","Aesch","Affoltern am Albis","Aigle","Allschwil","Altdorf","Altstätten","Amriswil","Appenzell","Arbon","Arlesheim","Arosa","Arth","Baar","Baden","Bassersdorf","Bellinzone","Belp","Berne","Berthoud","Bienne","Binningen","Birsfelden","Brigue-Glis","Brugg","Buchs","Bulle","Bussigny","Bâle","Bülach","Carouge","Cham","Chiasso","Chêne-Bougeries","Coire","Crissier","Davos","Delémont","Dietikon","Dübendorf","Ebikon","Einsiedeln","Emmen","Flawil","Frauenfeld","Freienbach","Fribourg","Genève","Gland","Glaris Centre","Glaris Nord","Gossau","Granges","Herisau","Hinwil","Horgen","Horw","Illnau-Effretikon","Interlaken","Ittigen","Kloten","Kreuzlingen","Kriens","Köniz","Küsnacht","La Chaux-de-Fonds","La Neuveville","La Tour-de-Peilz","Lancy","Langenthal","Lausanne","Le Grand-Saconnex","Le Locle","Lenzbourg","Liestal","Locarno","Lucerne","Lugano","Lyss","Martigny","Meilen","Mendrisio","Meyrin","Monthey","Montreux","Morat","Morges","Moutier","Muri bei Bern","Muttenz","Männedorf","Möhlin","Münchenbuchsee","Münchenstein","Münsingen","Neuchâtel","Neuhausen am Rheinfall","Nyon","Oberwil","Oftringen","Olten","Onex","Opfikon","Ostermundigen","Payerne","Peseux","Pfäffikon","Plan-les-Ouates","Poliez-Pittet","Porrentruy","Pratteln","Prilly","Pully","Rapperswil-Jona","Regensdorf","Reinach","Renens","Rheinfelden","Richterswil","Riehen","Risch-Rotkreuz","Romanshorn","Rorschach","Rüti","Saint-Gall","Saint-Moritz","Sarnen","Schaffhouse","Schlieren","Schwytz","Sierre","Sion","Soleure","Spiez","Spreitenbach","Stans","Steffisburg","Steinhausen","Stäfa","Suhr","Sursee","Thalwil","Thoune","Thônex","Urdorf","Uster","Uzwil","Vernier","Versoix","Vevey","Veyrier","Villars-sur-Glâne","Viège","Volketswil","Wallisellen","Weinfelden","Wettingen","Wetzikon","Wil","Winterthour","Wohlen","Worb","Wädenswil","Yverdon-les-Bains","Zermatt","Zofingue","Zollikofen","Zollikon","Zoug","Zuchwil","Zurich","Écublens"]})),Qq=c((()=>{Of=["CH"]})),Yq=c((()=>{If=["Suisse"]})),$q=c((()=>{Vf=["1###","2###","3###","4###","5###","6###","7###","8###","9###"]})),Xq=c((()=>{Gf=["Argovie","Appenzell Rhodes-Intérieures","Appenzell Rhodes-Extérieures","Bâle-Ville","Bâle-Campagne","Berne","Fribourg","Genève","Glaris","Grisons","Jura","Lucerne","Neuchâtel","Nidwald","Obwald","Schaffhouse","Schwyt","Soleure","Saint-Gall","Thurgovie","Tessin","Uri","Valai","Vaud","Zoug","Zurich"]})),eQ=c((()=>{Zq(),qq(),Qq(),Yq(),$q(),Xq(),Hf={city:Rf,city_name:zf,country_code:Of,default_country:If,postcode:Vf,state:Gf}})),aQ=c((()=>{Ff=["com","net","biz","ch","ch","ch"]})),nQ=c((()=>{aQ(),Jf={domain_suffix:Ff}})),iQ=c((()=>{Uf=["0800 ### ###","0800 ## ## ##","0## ### ## ##","0## ### ## ##","+41 ## ### ## ##","0900 ### ###","076 ### ## ##","079 ### ## ##","078 ### ## ##","+4176 ### ## ##","+4178 ### ## ##","+4179 ### ## ##","0041 76 ### ## ##","0041 78 ### ## ##","0041 79 ### ## ##"]})),rQ=c((()=>{iQ(),Wf={formats:Uf}})),tQ=c((()=>{eQ(),nQ(),rQ(),Zf={title:"French (Switzerland)",address:Hf,internet:Jf,phone_number:Wf}})),oQ=c((()=>{qf=["###","##","#"]})),sQ=c((()=>{Qf=["#{city_prefix} #{Name.first_name}#{city_suffix}","#{city_prefix} #{Name.first_name}","#{Name.first_name}#{city_suffix}","#{Name.first_name}#{city_suffix}","#{Name.last_name}#{city_suffix}","#{Name.last_name}#{city_suffix}"]})),lQ=c((()=>{Yf=["აბასთუმანი","აბაშა","ადიგენი","ამბროლაური","ანაკლია","ასპინძა","ახალგორი","ახალქალაქი","ახალციხე","ახმეტა","ბათუმი","ბაკურიანი","ბაღდათი","ბახმარო","ბოლნისი","ბორჯომი","გარდაბანი","გონიო","გორი","გრიგოლეთი","გუდაური","გურჯაანი","დედოფლისწყარო","დმანისი","დუშეთი","ვანი","ზესტაფონი","ზუგდიდი","თბილისი","თეთრიწყარო","თელავი","თერჯოლა","თიანეთი","კასპი","კვარიათი","კიკეთი","კოჯორი","ლაგოდეხი","ლანჩხუთი","ლენტეხი","მარნეული","მარტვილი","მესტია","მცხეთა","მწვანე კონცხი","ნინოწმინდა","ოზურგეთი","ონი","რუსთავი","საგარეჯო","საგურამო","საირმე","სამტრედია","სარფი","საჩხერე","სენაკი","სიღნაღი","სტეფანწმინდა","სურამი","ტაბახმელა","ტყიბული","ურეკი","ფოთი","ქარელი","ქედა","ქობულეთი","ქუთაისი","ყვარელი","შუახევი","ჩაქვი","ჩოხატაური","ცაგერი","ცხოროჭყუ","წავკისი","წალენჯიხა","წალკა","წაღვერი","წეროვანი","წნორი","წყალტუბო","წყნეთი","ჭიათურა","ხარაგაული","ხაშური","ხელვაჩაური","ხობი","ხონი","ხულო"]})),uQ=c((()=>{$f=["ახალი","ძველი","ზემო","ქვემო"]})),cQ=c((()=>{Xf=["სოფელი","ძირი","სკარი","დაბა"]})),dQ=c((()=>{ev=["ავსტრალია","ავსტრია","ავღანეთი","აზავადი","აზერბაიჯანი","აზიაში","აზიის","ალბანეთი","ალჟირი","ამაღლება და ტრისტანი-და-კუნია","ამერიკის ვირჯინიის კუნძულები","ამერიკის სამოა","ამერიკის შეერთებული შტატები","ამერიკის","ანგილია","ანგოლა","ანდორა","ანტიგუა და ბარბუდა","არაბეთის საემიროები","არაბთა გაერთიანებული საამიროები","არაბული ქვეყნების ლიგის","არგენტინა","არუბა","არცნობილი ქვეყნების სია","აფრიკაში","აფრიკაშია","აღდგომის კუნძული","აღმ. ტიმორი","აღმოსავლეთი აფრიკა","აღმოსავლეთი ტიმორი","აშშ","აშშ-ის ვირჯინის კუნძულები","ახალი ზელანდია","ახალი კალედონია","ბანგლადეში","ბარბადოსი","ბაჰამის კუნძულები","ბაჰრეინი","ბელარუსი","ბელგია","ბელიზი","ბენინი","ბერმუდა","ბერმუდის კუნძულები","ბოლივია","ბოსნია და ჰერცეგოვინა","ბოტსვანა","ბრაზილია","ბრიტანეთის ვირჯინიის კუნძულები","ბრიტანეთის ვირჯინის კუნძულები","ბრიტანეთის ინდოეთის ოკეანის ტერიტორია","ბრუნეი","ბულგარეთი","ბურკინა ფასო","ბურკინა-ფასო","ბურუნდი","ბჰუტანი","გაბონი","გაერთიანებული სამეფო","გაეროს","გაიანა","გამბია","განა","გერმანია","გვადელუპა","გვატემალა","გვინეა","გვინეა-ბისაუ","გიბრალტარი","გრენადა","გრენლანდია","გუამი","დამოკიდებული ტერ.","დამოკიდებული ტერიტორია","დამოკიდებული","დანია","დასავლეთი აფრიკა","დასავლეთი საჰარა","დიდი ბრიტანეთი","დომინიკა","დომინიკელთა რესპუბლიკა","ეგვიპტე","ევროკავშირის","ევროპასთან","ევროპაშია","ევროპის ქვეყნები","ეთიოპია","ეკვადორი","ეკვატორული გვინეა","ეპარსეს კუნძული","ერაყი","ერიტრეა","ესპანეთი","ესპანეთის სუვერენული ტერიტორიები","ესტონეთი","ეშმორის და კარტიეს კუნძულები","ვანუატუ","ვატიკანი","ვენესუელა","ვიეტნამი","ზამბია","ზიმბაბვე","თურქეთი","თურქმენეთი","იამაიკა","იან მაიენი","იაპონია","იემენი","ინდოეთი","ინდონეზია","იორდანია","ირანი","ირლანდია","ისლანდია","ისრაელი","იტალია","კაბო-ვერდე","კაიმანის კუნძულები","კამბოჯა","კამერუნი","კანადა","კანარის კუნძულები","კარიბის ზღვის","კატარი","კენია","კვიპროსი","კინგმენის რიფი","კირიბატი","კლიპერტონი","კოლუმბია","კომორი","კომორის კუნძულები","კონგოს დემოკრატიული რესპუბლიკა","კონგოს რესპუბლიკა","კორეის რესპუბლიკა","კოსტა-რიკა","კოტ-დ’ივუარი","კუბა","კუკის კუნძულები","ლაოსი","ლატვია","ლესოთო","ლიბანი","ლიბერია","ლიბია","ლიტვა","ლიხტენშტაინი","ლუქსემბურგი","მადაგასკარი","მადეირა","მავრიკი","მავრიტანია","მაიოტა","მაკაო","მაკედონია","მალავი","მალაიზია","მალდივი","მალდივის კუნძულები","მალი","მალტა","მაროკო","მარტინიკა","მარშალის კუნძულები","მარჯნის ზღვის კუნძულები","მელილია","მექსიკა","მიანმარი","მიკრონეზია","მიკრონეზიის ფედერაციული შტატები","მიმდებარე კუნძულები","მოზამბიკი","მოლდოვა","მონაკო","მონსერატი","მონღოლეთი","ნამიბია","ნაურუ","ნაწილობრივ აფრიკაში","ნეპალი","ნიგერი","ნიგერია","ნიდერლანდი","ნიდერლანდის ანტილები","ნიკარაგუა","ნიუე","ნორვეგია","ნორფოლკის კუნძული","ოკეანეთის","ოკეანიას","ომანი","პაკისტანი","პალაუ","პალესტინა","პალმირა (ატოლი)","პანამა","პანტელერია","პაპუა-ახალი გვინეა","პარაგვაი","პერუ","პიტკერნის კუნძულები","პოლონეთი","პორტუგალია","პრინც-ედუარდის კუნძული","პუერტო-რიკო","რეუნიონი","როტუმა","რუანდა","რუმინეთი","რუსეთი","საბერძნეთი","სადავო ტერიტორიები","სალვადორი","სამოა","სამხ. კორეა","სამხრეთ ამერიკაშია","სამხრეთ ამერიკის","სამხრეთ აფრიკის რესპუბლიკა","სამხრეთი აფრიკა","სამხრეთი გეორგია და სამხრეთ სენდვიჩის კუნძულები","სამხრეთი სუდანი","სან-მარინო","სან-ტომე და პრინსიპი","საუდის არაბეთი","საფრანგეთი","საფრანგეთის გვიანა","საფრანგეთის პოლინეზია","საქართველო","საჰარის არაბთა დემოკრატიული რესპუბლიკა","სეიშელის კუნძულები","სენ-ბართელმი","სენ-მარტენი","სენ-პიერი და მიკელონი","სენეგალი","სენტ-ვინსენტი და გრენადინები","სენტ-კიტსი და ნევისი","სენტ-ლუსია","სერბეთი","სეუტა","სვაზილენდი","სვალბარდი","სიერა-ლეონე","სინგაპური","სირია","სლოვაკეთი","სლოვენია","სოკოტრა","სოლომონის კუნძულები","სომალი","სომალილენდი","სომხეთი","სუდანი","სუვერენული სახელმწიფოები","სურინამი","ტაივანი","ტაილანდი","ტანზანია","ტაჯიკეთი","ტერიტორიები","ტერქსისა და კაიკოსის კუნძულები","ტოგო","ტოკელაუ","ტონგა","ტრანსკონტინენტური ქვეყანა","ტრინიდადი და ტობაგო","ტუვალუ","ტუნისი","უგანდა","უზბეკეთი","უკრაინა","უნგრეთი","უოლისი და ფუტუნა","ურუგვაი","ფარერის კუნძულები","ფილიპინები","ფინეთი","ფიჯი","ფოლკლენდის კუნძულები","ქვეყნები","ქოქოსის კუნძულები","ქუვეითი","ღაზის სექტორი","ყაზახეთი","ყირგიზეთი","შვედეთი","შვეიცარია","შობის კუნძული","შრი-ლანკა","ჩადი","ჩერნოგორია","ჩეჩნეთის რესპუბლიკა იჩქერია","ჩეხეთი","ჩილე","ჩინეთი","ჩრდ. კორეა","ჩრდილოეთ ამერიკის","ჩრდილოეთ მარიანას კუნძულები","ჩრდილოეთი აფრიკა","ჩრდილოეთი კორეა","ჩრდილოეთი მარიანას კუნძულები","ცენტრალური აფრიკა","ცენტრალური აფრიკის რესპუბლიკა","წევრები","წმინდა ელენე","წმინდა ელენეს კუნძული","ხორვატია","ჯერსი","ჯიბუტი","ჰავაი","ჰაიტი","ჰერდი და მაკდონალდის კუნძულები","ჰონდურასი","ჰონკონგი"]})),hQ=c((()=>{av=["საქართველო"]})),pQ=c((()=>{nv=["01##"]})),mQ=c((()=>{iv=["კორპ. ##","შენობა ###"]})),fQ=c((()=>{rv=["#{street_name} #{building_number}"]})),vQ=c((()=>{tv=["#{street_title} #{street_suffix}"]})),gQ=c((()=>{ov=["გამზ.","გამზირი","ქ.","ქუჩა","ჩიხი","ხეივანი"]})),kQ=c((()=>{sv=["აბაშიძის","აბესაძის","აბულაძის","აგლაძის","ადლერის","ავიაქიმიის","ავლაბრის","ათარბეგოვის","ათონელის","ალავერდოვის","ალექსიძის","ალილუევის","ალმასიანის","ამაღლების","ამირეჯიბის","ანაგის","ანდრონიკაშვილის","ანთელავას","ანჯაფარიძის","არაგვის","არდონის","არეშიძის","ასათიანის","ასკურავას","ასლანიდის","ატენის","აფხაზი","აღმაშენებლის","ახალშენის","ახვლედიანის","ბააზოვის","ბაბისხევის","ბაბუშკინის","ბაგრატიონის","ბალანჩივაძეების","ბალანჩივაძის","ბალანჩინის","ბალმაშევის","ბარამიძის","ბარნოვის","ბაშალეიშვილის","ბევრეთის","ბელინსკის","ბელოსტოკის","ბენაშვილის","ბეჟანიშვილის","ბერიძის","ბოლქვაძის","ბოცვაძის","ბოჭორიშვილის","ბოჭორიძის","ბუაჩიძის","ბუდაპეშტის","ბურკიაშვილის","ბურძგლას","გაბესკირიას","გაგარინის","გაზაფხულის","გამრეკელის","გამსახურდიას","გარეჯელის","გეგეჭკორის","გედაურის","გელოვანი","გელოვანის","გერცენის","გლდანის","გოგებაშვილის","გოგიბერიძის","გოგოლის","გონაშვილის","გორგასლის","გრანელის","გრიზოდუბოვას","გრინევიცკის","გრომოვას","გრუზინსკის","გუდიაშვილის","გულრიფშის","გულუას","გურამიშვილის","გურგენიძის","დადიანის","დავითაშვილის","დამაკავშირებელი","დარიალის","დედოფლისწყაროს","დეპუტატის","დიდგორის","დიდი","დიდუბის","დიუმას","დიღმის","დიღომში","დოლიძის","დუნდუას","დურმიშიძის","ელიავას","ენგელსის","ენგურის","ეპისკოპოსის","ერისთავი","ერისთავის","ვაზისუბნის","ვაკელის","ვართაგავას","ვატუტინის","ვაჩნაძის","ვაცეკის","ვეკუას","ვეშაპურის","ვირსალაძის","ვოლოდარსკის","ვორონინის","ზაარბრიუკენის","ზაზიაშვილის","ზაზიშვილის","ზაკომოლდინის","ზანდუკელის","ზაქარაიას","ზაქარიაძის","ზახაროვის","ზაჰესის","ზნაურის","ზურაბაშვილის","ზღვის","თაბუკაშვილის","თავაძის","თავისუფლების","თამარაშვილის","თაქთაქიშვილის","თბილელის","თელიას","თორაძის","თოფურიძის","იალბუზის","იამანიძის","იაშვილის","იბერიის","იერუსალიმის","ივანიძის","ივერიელის","იზაშვილის","ილურიძის","იმედაშვილის","იმედაძის","იმედის","ინანიშვილის","ინგოროყვას","ინდუსტრიალიზაციის","ინჟინრის","ინწკირველის","ირბახის","ირემაშვილის","ისაკაძის","ისპასჰანლის","იტალიის","იუნკერთა","კათალიკოსის","კაიროს","კაკაბაძის","კაკაბეთის","კაკლიანის","კალანდაძის","კალიაევის","კალინინის","კამალოვის","კამოს","კაშენის","კახოვკის","კედიას","კელაპტრიშვილის","კერესელიძის","კეცხოველის","კიბალჩიჩის","კიკნაძის","კიროვის","კობარეთის","კოლექტივიზაციის","კოლმეურნეობის","კოლხეთის","კომკავშირის","კომუნისტური","კონსტიტუციის","კოოპერაციის","კოსტავას","კოტეტიშვილის","კოჩეტკოვის","კოჯრის","კრონშტადტის","კროპოტკინის","კრუპსკაიას","კუიბიშევის","კურნატოვსკის","კურტანოვსკის","კუტუზოვის","ლაღიძის","ლელაშვილის","ლენინაშენის","ლენინგრადის","ლენინის","ლენის","ლეონიძის","ლვოვის","ლორთქიფანიძის","ლოტკინის","ლუბლიანის","ლუბოვსკის","ლუნაჩარსკის","ლუქსემბურგის","მაგნიტოგორსკის","მაზნიაშვილის","მაისურაძის","მამარდაშვილის","მამაცაშვილის","მანაგაძის","მანჯგალაძის","მარის","მარუაშვილის","მარქსის","მარჯანის","მატროსოვის","მაჭავარიანი","მახალდიანის","მახარაძის","მებაღიშვილის","მეგობრობის","მელაანის","მერკვილაძის","მესხიას","მესხის","მეტეხის","მეტრეველი","მეჩნიკოვის","მთავარანგელოზის","მიასნიკოვის","მილორავას","მიმინოშვილის","მიროტაძის","მიქატაძის","მიქელაძის","მონტინის","მორეტის","მოსკოვის","მრევლიშვილის","მუშკორის","მუჯირიშვილის","მშვიდობის","მცხეთის","ნადირაძის","ნაკაშიძის","ნარიმანოვის","ნასიძის","ნაფარეულის","ნეკრასოვის","ნიაღვრის","ნინიძის","ნიშნიანიძის","ობოლაძის","ონიანის","ოჟიოს","ორახელაშვილის","ორბელიანის","ორჯონიკიძის","ოქტომბრის","ოცდაექვსი","პავლოვის","პარალელურის","პარიზის","პეკინის","პეროვსკაიას","პეტეფის","პიონერის","პირველი","პისარევის","პლეხანოვის","პრავდის","პროლეტარიატის","ჟელიაბოვის","ჟვანიას","ჟორდანიას","ჟღენტი","ჟღენტის","რადიანის","რამიშვილი","რასკოვას","რენინგერის","რინგის","რიჟინაშვილის","რობაქიძის","რობესპიერის","რუსის","რუხაძის","რჩეულიშვილის","სააკაძის","საბადურის","საბაშვილის","საბურთალოს","საბჭოს","საგურამოს","სამრეკლოს","სამღერეთის","სანაკოევის","სარაჯიშვილის","საჯაიას","სევასტოპოლის","სერგი","სვანიძის","სვერდლოვის","სტახანოვის","სულთნიშნის","სურგულაძის","სხირტლაძის","ტაბიძის","ტატიშვილის","ტელმანის","ტერევერკოს","ტეტელაშვილის","ტოვსტონოგოვის","ტოროშელიძის","ტრაქტორის","ტრიკოტაჟის","ტურბინის","უბილავას","უბინაშვილის","უზნაძის","უკლებას","ულიანოვის","ურიდიას","ფაბრიციუსის","ფაღავას","ფერისცვალების","ფიგნერის","ფიზკულტურის","ფიოლეტოვის","ფიფიების","ფოცხიშვილის","ქართველიშვილის","ქართლელიშვილის","ქინქლაძის","ქიქოძის","ქსოვრელის","ქუთათელაძის","ქუთათელის","ქურდიანის","ღოღობერიძის","ღუდუშაურის","ყავლაშვილის","ყაზბეგის","ყარყარაშვილის","ყიფიანის","ყუშიტაშვილის","შანიძის","შარტავას","შატილოვის","შაუმიანის","შენგელაიას","შერვაშიძის","შეროზიას","შირშოვის","შმიდტის","შრომის","შუშინის","შჩორსის","ჩალაუბნის","ჩანტლაძის","ჩაპაევის","ჩაჩავას","ჩელუსკინელების","ჩერნიახოვსკის","ჩერქეზიშვილი","ჩერქეზიშვილის","ჩვიდმეტი","ჩიტაიას","ჩიტაძის","ჩიქვანაიას","ჩიქობავას","ჩიხლაძის","ჩოდრიშვილის","ჩოლოყაშვილის","ჩუღურეთის","ცაბაძის","ცაგარელის","ცეტკინის","ცინცაძის","ცისკარიშვილის","ცურტაველის","ცქიტიშვილის","ცხაკაიას","ძმობის","ძნელაძის","წერეთლის","წითელი","წითელწყაროს","წინამძღვრიშვილის","წულაძის","წულუკიძის","ჭაბუკიანის","ჭავჭავაძის","ჭანტურიას","ჭოველიძის","ჭონქაძის","ჭყონდიდელის","ხანძთელის","ხვამლის","ხვინგიას","ხვიჩიას","ხიმშიაშვილის","ხმელნიცკის","ხორნაბუჯის","ხრამჰესის","ხუციშვილის","ჯავახიშვილის","ჯაფარიძის","ჯიბლაძის","ჯორჯიაშვილის"]})),yQ=c((()=>{oQ(),sQ(),lQ(),uQ(),cQ(),dQ(),hQ(),pQ(),mQ(),fQ(),vQ(),gQ(),kQ(),lv={building_number:qf,city:Qf,city_name:Yf,city_prefix:$f,city_suffix:Xf,country:ev,default_country:av,postcode:nv,secondary_address:iv,street_address:rv,street_name:tv,street_suffix:ov,street_title:sv}})),bQ=c((()=>{uv=["(+995 32) 2-##-##-##","032-2-##-##-##","032-2-######","032-2-###-###","032 2 ## ## ##","032 2 ######","2 ## ## ##","2######","2 ### ###"]})),SQ=c((()=>{bQ(),cv={formats:uv}})),AQ=c((()=>{dv=["#{prefix} #{Name.first_name}","#{prefix} #{Name.last_name}","#{prefix} #{Name.last_name} #{suffix}","#{prefix} #{Name.first_name} #{suffix}","#{prefix} #{Name.last_name}-#{Name.last_name}"]})),MQ=c((()=>{hv=["შპს","სს","ააიპ","სსიპ"]})),TQ=c((()=>{pv=["ჯგუფი","და კომპანია","სტუდია","გრუპი"]})),_Q=c((()=>{AQ(),MQ(),TQ(),mv={name:dv,prefix:hv,suffix:pv}})),wQ=c((()=>{fv=["ge","com","net","org","com.ge","org.ge"]})),jQ=c((()=>{vv=["gmail.com","yahoo.com","posta.ge"]})),EQ=c((()=>{wQ(),jQ(),gv={domain_suffix:fv,free_email:vv}})),NQ=c((()=>{kv=["აგული","აგუნა","ადოლა","ავთანდილ","ავთო","აკაკი","აკო","ალეკო","ალექსანდრე","ალექსი","ალიო","ამირან","ანა","ანანო","ანზორ","ანნა","ანუკა","ანუკი","არჩილ","ასკილა","ასლანაზ","აჩიკო","ბადრი","ბაია","ბარბარე","ბაქარ","ბაჩა","ბაჩანა","ბაჭუა","ბაჭუკი","ბახვა","ბელა","ბერა","ბერდია","ბესიკ","ბესიკ","ბესო","ბექა","ბიძინა","ბიჭიკო","ბოჩია","ბოცო","ბროლა","ბუბუ","ბუდუ","ბუხუტი","გაგა","გაგი","გახა","გეგა","გეგი","გედია","გელა","გენადი","გვადი","გვანცა","გვანჯი","გვიტია","გვრიტა","გია","გიგა","გიგი","გიგილო","გიგლა","გიგოლი","გივი","გივიკო","გიორგი","გოგი","გოგიტა","გოგიჩა","გოგოთურ","გოგოლა","გოდერძი","გოლა","გოჩა","გრიგოლ","გუგა","გუგუ","გუგულა","გუგული","გუგუნა","გუკა","გულარისა","გულვარდი","გულვარდისა","გულთამზე","გულია","გულიკო","გულისა","გულნარა","გურამ","დავით","დალი","დარეჯან","დიანა","დიმიტრი","დოდო","დუტუ","ეთერ","ეთო","ეკა","ეკატერინე","ელგუჯა","ელენა","ელენე","ელზა","ელიკო","ელისო","ემზარ","ეშხა","ვალენტინა","ვალერი","ვანო","ვაჟა","ვაჟა","ვარდო","ვარსკვლავისა","ვასიკო","ვასილ","ვატო","ვახო","ვახტანგ","ვენერა","ვერა","ვერიკო","ზაზა","ზაირა","ზაურ","ზეზვა","ზვიად","ზინა","ზოია","ზუკა","ზურა","ზურაბ","ზურია","ზურიკო","თაზო","თათა","თათია","თათული","თაია","თაკო","თალიკო","თამაზ","თამარ","თამარა","თამთა","თამთიკე","თამი","თამილა","თამრიკო","თამრო","თამუნა","თამჩო","თანანა","თანდილა","თაყა","თეა","თებრონე","თეიმურაზ","თემურ","თენგიზ","თენგო","თეონა","თიკა","თიკო","თიკუნა","თინა","თინათინ","თინიკო","თმაგიშერა","თორნიკე","თუთა","თუთია","ია","იათამზე","იამზე","ივანე","ივერი","ივქირიონ","იზოლდა","ილია","ილიკო","იმედა","ინგა","იოსებ","ირაკლი","ირინა","ირინე","ირინკა","ირმა","იური","კაკო","კალე","კატო","კახა","კახაბერ","კეკელა","კესანე","კესო","კვირია","კიტა","კობა","კოკა","კონსტანტინე","კოსტა","კოტე","კუკური","ლადო","ლალი","ლამაზა","ლამარა","ლამზირა","ლაშა","ლევან","ლეილა","ლელა","ლენა","ლერწამისა","ლექსო","ლია","ლიანა","ლიზა","ლიზიკო","ლილე","ლილი","ლილიკო","ლომია","ლუიზა","მაგული","მადონა","მათიკო","მაია","მაიკო","მაისა","მაკა","მაკო","მაკუნა","მალხაზ","მამამზე","მამია","მამისა","მამისთვალი","მამისიმედი","მამუკა","მამულა","მანანა","მანჩო","მარადი","მარი","მარია","მარიამი","მარიკა","მარინა","მარინე","მარიტა","მაყვალა","მაყვალა","მაშიკო","მაშო","მაცაცო","მგელია","მგელიკა","მედეა","მეკაშო","მელანო","მერაბ","მერი","მეტია","მზაღო","მზევინარ","მზეთამზე","მზეთვალა","მზეონა","მზექალა","მზეხა","მზეხათუნი","მზია","მზირა","მზისადარ","მზისთანადარი","მზიულა","მთვარისა","მინდია","მიშა","მიშიკო","მიხეილ","მნათობი","მნათობისა","მოგელი","მონავარდისა","მურმან","მუხრან","ნაზი","ნაზიკო","ნათელა","ნათია","ნაირა","ნანა","ნანი","ნანიკო","ნანუკა","ნანული","ნარგიზი","ნასყიდა","ნატალია","ნატო","ნელი","ნენე","ნესტან","ნია","ნიაკო","ნიკა","ნიკოლოზ","ნინა","ნინაკა","ნინი","ნინიკო","ნინო","ნინუკა","ნინუცა","ნოდარ","ნოდო","ნონა","ნორა","ნუგზარ","ნუგო","ნუკა","ნუკი","ნუკრი","ნუნუ","ნუნუ","ნუნუკა","ნუცა","ნუცი","ოთარ","ოთია","ოთო","ომარ","ორბელ","ოტია","ოქროპირ","პაატა","პაპუნა","პატარკაცი","პატარქალი","პეპელა","პირვარდისა","პირიმზე","ჟამიერა","ჟამიტა","ჟამუტა","ჟუჟუნა","რამაზ","რევაზ","რეზი","რეზო","როზა","რომან","რუსკა","რუსუდან","საბა","სალი","სალომე","სანათა","სანდრო","სერგო","სესია","სეხნია","სვეტლანა","სიხარულა","სოსო","სოფიკო","სოფიო","სოფო","სულა","სულიკო","ტარიელ","ტასიკო","ტასო","ტატიანა","ტატო","ტეტია","ტურია","უმანკო","უტა","უჩა","ფაქიზო","ფაცია","ფეფელა","ფეფენა","ფეფიკო","ფეფო","ფოსო","ფოფო","ქაბატო","ქავთარი","ქალია","ქართლოს","ქეთათო","ქეთევან","ქეთი","ქეთინო","ქეთო","ქველი","ქიტესა","ქიშვარდი","ქობული","ქრისტესია","ქტისტეფორე","ქურციკა","ღარიბა","ღვთისავარი","ღვთისია","ღვთისო","ღვინია","ღუღუნა","ყაითამზა","ყაყიტა","ყვარყვარე","ყიასა","შაბური","შაკო","შალვა","შალიკო","შანშე","შარია","შაქარა","შაქრო","შოთა","შორენა","შოშია","შუქია","ჩიორა","ჩიტო","ჩიტო","ჩოყოლა","ცაგო","ცაგული","ცანგალა","ცარო","ცაცა","ცაცო","ციალა","ციკო","ცინარა","ცირა","ცისანა","ცისია","ცისკარა","ცისკარი","ცისმარა","ცისმარი","ციური","ციცი","ციცია","ციცინო","ცოტნე","ცოქალა","ცუცა","ცხვარი","ძაბული","ძამისა","ძაღინა","ძიძია","წათე","წყალობა","ჭაბუკა","ჭიაბერ","ჭიკჭიკა","ჭიჭია","ჭიჭიკო","ჭოლა","ხათუნა","ხარება","ხატია","ხახულა","ხახუტა","ხეჩუა","ხვიჩა","ხიზანა","ხირხელა","ხობელასი","ხოხია","ხოხიტა","ხუტა","ხუცია","ჯაბა","ჯავახი","ჯარჯი","ჯემალ","ჯონდო","ჯოტო","ჯუბი","ჯულიეტა","ჯუმბერ","ჰამლეტ"]})),BQ=c((()=>{yv=["აბაზაძე","აბაშიძე","აბრამაშვილი","აბუსერიძე","აბშილავა","ავაზნელი","ავალიშვილი","ამილახვარი","ანთაძე","ასლამაზიშვილი","ასპანიძე","აშკარელი","ახალბედაშვილი","ახალკაცი","ახვლედიანი","ბარათაშვილი","ბარდაველიძე","ბახტაძე","ბედიანიძე","ბერიძე","ბერუაშვილი","ბეჟანიშვილი","ბოგველიშვილი","ბოტკოველი","გაბრიჩიძე","გაგნიძე","გამრეკელი","გელაშვილი","გზირიშვილი","გიგაური","გურამიშვილი","გურგენიძე","დადიანი","დავითიშვილი","დათუაშვილი","დარბაისელი","დეკანოიძე","დვალი","დოლაბერიძე","ედიშერაშვილი","ელიზბარაშვილი","ელიოზაშვილი","ერისთავი","ვარამაშვილი","ვარდიაშვილი","ვაჩნაძე","ვარდანიძე","ველიაშვილი","ველიჯანაშვილი","ზარანდია","ზარიძე","ზედგინიძე","ზუბიაშვილი","თაბაგარი","თავდგირიძე","თათარაშვილი","თამაზაშვილი","თამარაშვილი","თაქთაქიშვილი","თაყაიშვილი","თბილელი","თუხარელი","იაშვილი","იგითხანიშვილი","ინასარიძე","იშხნელი","კანდელაკი","კაცია","კერესელიძე","კვირიკაშვილი","კიკნაძე","კლდიაშვილი","კოვზაძე","კოპაძე","კოპტონაშვილი","კოშკელაშვილი","ლაბაძე","ლეკიშვილი","ლიქოკელი","ლოლაძე","ლურსმანაშვილი","მაისურაძე","მარტოლეკი","მაღალაძე","მახარაშვილი","მგალობლიშვილი","მეგრელიშვილი","მელაშვილი","მელიქიძე","მერაბიშვილი","მეფარიშვილი","მუჯირი","მჭედლიძე","მხეიძე","ნათაძე","ნაჭყებია","ნოზაძე","ოდიშვილი","ონოფრიშვილი","პარეხელაშვილი","პეტრიაშვილი","სააკაძე","სააკაშვილი","საგინაშვილი","სადუნიშვილი","საძაგლიშვილი","სებისკვერიძე","სეთური","სუთიაშვილი","სულაშვილი","ტაბაღუა","ტყეშელაშვილი","ულუმბელაშვილი","უნდილაძე","ქავთარაძე","ქართველიშვილი","ყაზბეგი","ყაუხჩიშვილი","შავლაშვილი","შალიკაშვილი","შონია","ჩიბუხაშვილი","ჩიხრაძე","ჩიქოვანი","ჩუბინიძე","ჩოლოყაშვილი","ჩოხელი","ჩხვიმიანი","ცალუღელაშვილი","ცაძიკიძე","ციციშვილი","ციხელაშვილი","ციხისთავი","ცხოვრებაძე","ცხომარია","წამალაიძე","წერეთელი","წიკლაური","წიფურია","ჭაბუკაშვილი","ჭავჭავაძე","ჭანტურია","ჭარელიძე","ჭიორელი","ჭუმბურიძე","ხაბაზი","ხარაძე","ხარატიშვილი","ხარატასშვილი","ხარისჭირაშვილი","ხარხელაური","ხაშმელაშვილი","ხეთაგური","ხიზამბარელი","ხიზანიშვილი","ხიმშიაშვილი","ხოსრუაშვილი","ხოჯივანიშვილი","ხუციშვილი","ჯაბადარი","ჯავახი","ჯავახიშვილი","ჯანელიძე","ჯაფარიძე","ჯაყელი","ჯაჯანიძე","ჯვარელია","ჯინიუზაშვილი","ჯუღაშვილი"]})),PQ=c((()=>{bv=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}"]})),LQ=c((()=>{Sv=["ბ-ნი","ბატონი","ქ-ნი","ქალბატონი"]})),DQ=c((()=>{Av={descriptor:["გენერალური","მთავარი","სტაჟიორ","უმცროსი","ყოფილი","წამყვანი"],level:["აღრიცხვების","ბრენდინგის","ბრენიდს","ბუღალტერიის","განყოფილების","გაყიდვების","გუნდის","დახმარების","დიზაინის","თავდაცვის","ინფორმაციის","კვლევების","კომუნიკაციების","მარკეტინგის","ოპერაციათა","ოპტიმიზაციების","პიარ","პროგრამის","საქმეთა","ტაქტიკური","უსაფრთხოების","ფინანსთა","ქსელის","ხარისხის","ჯგუფის"],job:["აგენტი","ადვოკატი","ადმინისტრატორი","არქიტექტორი","ასისტენტი","აღმასრულებელი დირექტორი","დეველოპერი","დეკანი","დიზაინერი","დირექტორი","ელექტრიკოსი","ექსპერტი","ინჟინერი","იურისტი","კონსტრუქტორი","კონსულტანტი","კოორდინატორი","ლექტორი","მასაჟისტი","მემანქანე","მენეჯერი","მძღოლი","მწვრთნელი","ოპერატორი","ოფიცერი","პედაგოგი","პოლიციელი","პროგრამისტი","პროდიუსერი","პრორექტორი","ჟურნალისტი","რექტორი","სპეციალისტი","სტრატეგისტი","ტექნიკოსი","ფოტოგრაფი","წარმომადგენელი"]}})),xQ=c((()=>{NQ(),BQ(),PQ(),LQ(),DQ(),Mv={first_name:kv,last_name:yv,name:bv,prefix:Sv,title:Av}})),CQ=c((()=>{Tv=["5##-###-###","5########","5## ## ## ##","5## ######","5## ### ###","995 5##-###-###","995 5########","995 5## ## ## ##","995 5## ######","995 5## ### ###","+995 5##-###-###","+995 5########","+995 5## ## ## ##","+995 5## ######","+995 5## ### ###","(+995) 5##-###-###","(+995) 5########","(+995) 5## ## ## ##","(+995) 5## ######","(+995) 5## ### ###"]})),KQ=c((()=>{CQ(),_v={formats:Tv}})),RQ=c((()=>{yQ(),SQ(),_Q(),EQ(),xQ(),KQ(),wv={title:"Georgian",separator:" და ",address:lv,cell_phone:cv,company:mv,internet:gv,name:Mv,phone_number:_v}})),zQ=c((()=>{jv=["###","##","#"]})),OQ=c((()=>{Ev=["#{city_prefix} #{Name.first_name}#{Name.last_name}","#{city_prefix} #{Name.first_name}","#{Name.first_name}#{city_suffix}","#{Name.last_name}#{city_suffix}"]})),IQ=c((()=>{Nv=["צפון","מזרח","מערב","דרום"]})),VQ=c((()=>{Bv=["","חדשה","עלית"]})),GQ=c((()=>{Pv=["אוגנדה","אוזבקיסטאן","אוסטריה","אוסטרליה","אוקראינה","אורוגואי","אזרביג'אן","איטליה","איי הבהאמס","איי מרשל","איי סיישל","איי קוק","איי שלמה","איסלנד","איראן","אירלנד","אל סלבדור","אלבניה","אנגולה","אנדורה","אנטיגואהברבודה","אסוואטיני","אסטוניה","אקוואדור","ארגנטינה","אריתריאה","ארמניה","ארצות הברית","אתיופיה","בולגריה","בוליביה","בוסניה הרצגובינה","בורונדי","בורקינה פסו","בחריין","בלארוס","בלגיה","בליז","בנין","ברבדוס","ברזיל","בריטניה","ג'מאיקה","גאבון","גאנה","גואטמלה","גויאנה","גיאורגיה","גינאה","גינאה המשוונית","גינאהביסאו","גמביה","גרמניה","גרנדה","דומיניקה","דנמרק","דרום אפריקה","דרום סודאן","האיטי","הודו","הולנד","הונגריה","הונדורס","הרפובליקה הדומיניקנית","הרפובליקה הדמוקרטית של קונגו","ואטיקאןהכס הקדוש","ויטנאם","ונואטו","ונצואלה","זימבאבווה","זמביה","חוף השנהב (קוט דיוואר)","טג'קיסטאן","טובלו","טוגו","טונגה","טייואן","טנזניה","טרינידד וטובגו","יוון","יפן","ירדן","לאוס רפובליקה דמוקרטית עממית","לבנון","לוקסמבורג","לטביה","ליבריה","ליטא","ליכטנשטיין","לסוטו","מאוריטניה","מאוריציוס","מאלי","מאע׳׳מ אמירויות ערביות מאוחדות","מדגסקר","מוזמביק","מולדובה","מונגוליה","מונטנגרו","מונקו","מזרח טימור","מיאנמר","מיקרונזיה","מכסיקו","מלאווי","מלטה","מצרים","מקדוניה","מרוקו","נאורו","נורבגיה","ניגריה","ניו זילנד","ניז'ר","ניקרגואה","נמיביה","נפאל","סאו תומה ופרינציפה","סורינם","סט' וינסנט והגרנדינים","סט' לוציה","סט' קיטס ונביס","סיירה ליאונה","סין","סינגפור","סלובניה","סלובקיה","סמואה","סן מרינו","סנגל","ספרד","סרביה","סרי לנקה","עומאן","פולין","פורטוגל","פיג'י","פיליפינים","פינלנד","פלאו","פנמה","פפואה ניו גיני","פרגוואי","פרו","צ'אד","צ'ילה","צ'כיה","צרפת","קובה","קולומביה","קומורוס","קונגו","קוסטה ריקה","קוריאה","קזחסטאן","קטר","קייפ ורדה","קירגיסטאן","קיריבטי","קמבודיה","קמרון","קנדה","קניה","קפריסין","קרואטיה","רואנדה","רומניה","רוסיה","רפובליקה מרכז אפריקנית","שבדיה","שווייץ","תאילנד","תוניסיה","תורכיה","תורכמניסטאן"]})),HQ=c((()=>{Lv=[""]})),FQ=c((()=>{Dv=["BGD","BEL","BFA","BGR","BIH","BRB","WLF","BLM","BMU","BRN","BOL","BHR","BDI","BEN","BTN","JAM","BVT","BWA","WSM","BES","BRA","BHS","JEY","BLR","BLZ","RUS","RWA","SRB","TLS","REU","TKM","TJK","ROU","TKL","GNB","GUM","GTM","SGS","GRC","GNQ","GLP","JPN","GUY","GGY","GUF","GEO","GRD","GBR","GAB","SLV","GIN","GMB","GRL","GIB","GHA","OMN","TUN","JOR","HRV","HTI","HUN","HKG","HND","HMD","VEN","PRI","PSE","PLW","PRT","SJM","PRY","IRQ","PAN","PYF","PNG","PER","PAK","PHL","PCN","POL","SPM","ZMB","ESH","EST","EGY","ZAF","ECU","ITA","VNM","SLB","ETH","SOM","ZWE","SAU","ESP","ERI","MNE","MDA","MDG","MAF","MAR","MCO","UZB","MMR","MLI","MAC","MNG","MHL","MKD","MUS","MLT","MWI","MDV","MTQ","MNP","MSR","MRT","IMN","UGA","TZA","MYS","MEX","ISR","FRA","IOT","SHN","FIN","FJI","FLK","FSM","FRO","NIC","NLD","NOR","NAM","VUT","NCL","NER","NFK","NGA","NZL","NPL","NRU","NIU","COK","XKX","CIV","CHE","COL","CHN","CMR","CHL","CCK","CAN","COG","CAF","COD","CZE","CYP","CXR","CRI","CUW","CPV","CUB","SWZ","SYR","SXM","KGZ","KEN","SSD","SUR","KIR","KHM","KNA","COM","STP","SVK","KOR","SVN","PRK","KWT","SEN","SMR","SLE","SYC","KAZ","CYM","SGP","SWE","SDN","DOM","DMA","DJI","DNK","VGB","DEU","YEM","DZA","USA","URY","MYT","UMI","LBN","LCA","LAO","TUV","TWN","TTO","TUR","LKA","LIE","LVA","TON","LTU","LUX","LBR","LSO","THA","ATF","TGO","TCD","TCA","LBY","VAT","VCT","ARE","AND","ATG","AFG","AIA","VIR","ISL","IRN","ARM","ALB","AGO","ATA","ASM","ARG","AUS","AUT","ABW","IND","ALA","AZE","IRL","IDN","UKR","QAT","MOZ"]})),JQ=c((()=>{xv=["Not relevant for Israel"]})),UQ=c((()=>{Cv=["מדינת ישראל"]})),WQ=c((()=>{Kv=["צפון","מזרח","דרום","מערב","צפון מזרח","צפון מערב","דרום מזרח","דרום מערב"]})),ZQ=c((()=>{Rv=["N","E","S","W","NE","NW","SE","SW"]})),qQ=c((()=>{zv=["#####","#######"]})),QQ=c((()=>{Ov=["#####","#######"]})),YQ=c((()=>{Iv=["# דירה","## דירה","# חדר","## חדר"]})),$Q=c((()=>{Vv=["חיפה","רמת הגולן","הגדה המערבית","שומרון","השרון","יהודה","הנגב","השפלה","הערבה"]})),XQ=c((()=>{Gv=["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"]})),eY=c((()=>{Hv=["#{building_number} #{street_name}"]})),aY=c((()=>{Fv=["#{Name.first_name} #{street_suffix}","#{Name.last_name} #{street_suffix}"]})),nY=c((()=>{Jv=["Alley","Avenue","Branch","Bridge","Brook","Brooks","Burg","Burgs","Bypass","Camp","Canyon","Cape","Causeway","Center","Centers","Circle","Circles","Cliff","Cliffs","Club","Common","Corner","Corners","Course","Court","Courts","Cove","Coves","Creek","Crescent","Crest","Crossing","Crossroad","Curve","Dale","Dam","Divide","Drive","Drive","Drives","Estate","Estates","Expressway","Extension","Extensions","Fall","Falls","Ferry","Field","Fields","Flat","Flats","Ford","Fords","Forest","Forge","Forges","Fork","Forks","Fort","Freeway","Garden","Gardens","Gateway","Glen","Glens","Green","Greens","Grove","Groves","Harbor","Harbors","Haven","Heights","Highway","Hill","Hills","Hollow","Inlet","Inlet","Island","Island","Islands","Islands","Isle","Isle","Junction","Junctions","Key","Keys","Knoll","Knolls","Lake","Lakes","Land","Landing","Lane","Light","Lights","Loaf","Lock","Locks","Locks","Lodge","Lodge","Loop","Mall","Manor","Manors","Meadow","Meadows","Mews","Mill","Mills","Mission","Mission","Motorway","Mount","Mountain","Mountain","Mountains","Mountains","Neck","Orchard","Oval","Overpass","Park","Parks","Parkway","Parkways","Pass","Passage","Path","Pike","Pine","Pines","Place","Plain","Plains","Plains","Plaza","Plaza","Point","Points","Port","Port","Ports","Ports","Prairie","Prairie","Radial","Ramp","Ranch","Rapid","Rapids","Rest","Ridge","Ridges","River","Road","Road","Roads","Roads","Route","Row","Rue","Run","Shoal","Shoals","Shore","Shores","Skyway","Spring","Springs","Springs","Spur","Spurs","Square","Square","Squares","Squares","Station","Station","Stravenue","Stravenue","Stream","Stream","Street","Street","Streets","Summit","Summit","Terrace","Throughway","Trace","Track","Trafficway","Trail","Trail","Tunnel","Tunnel","Turnpike","Turnpike","Underpass","Union","Unions","Valley","Valleys","Via","Viaduct","View","Views","Village","Village","Villages","Ville","Vista","Vista","Walk","Walks","Wall","Way","Ways","Well","Wells"]})),iY=c((()=>{Uv=["Pacific/Midway","Pacific/Pago_Pago","Pacific/Honolulu","America/Juneau","America/Los_Angeles","America/Tijuana","America/Denver","America/Phoenix","America/Chihuahua","America/Mazatlan","America/Chicago","America/Regina","America/Mexico_City","America/Mexico_City","America/Monterrey","America/Guatemala","America/New_York","America/Indiana/Indianapolis","America/Bogota","America/Lima","America/Lima","America/Halifax","America/Caracas","America/La_Paz","America/Santiago","America/St_Johns","America/Sao_Paulo","America/Argentina/Buenos_Aires","America/Guyana","America/Godthab","Atlantic/South_Georgia","Atlantic/Azores","Atlantic/Cape_Verde","Europe/Dublin","Europe/London","Europe/Lisbon","Europe/London","Africa/Casablanca","Africa/Monrovia","Etc/UTC","Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Prague","Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris","Europe/Amsterdam","Europe/Berlin","Europe/Berlin","Europe/Rome","Europe/Stockholm","Europe/Vienna","Africa/Algiers","Europe/Bucharest","Africa/Cairo","Europe/Helsinki","Europe/Kiev","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Vilnius","Europe/Athens","Europe/Istanbul","Europe/Minsk","Asia/Jerusalem","Africa/Harare","Africa/Johannesburg","Europe/Moscow","Europe/Moscow","Europe/Moscow","Asia/Kuwait","Asia/Riyadh","Africa/Nairobi","Asia/Baghdad","Asia/Tehran","Asia/Muscat","Asia/Muscat","Asia/Baku","Asia/Tbilisi","Asia/Yerevan","Asia/Kabul","Asia/Yekaterinburg","Asia/Karachi","Asia/Karachi","Asia/Tashkent","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kathmandu","Asia/Dhaka","Asia/Dhaka","Asia/Colombo","Asia/Almaty","Asia/Novosibirsk","Asia/Rangoon","Asia/Bangkok","Asia/Bangkok","Asia/Jakarta","Asia/Krasnoyarsk","Asia/Shanghai","Asia/Chongqing","Asia/Hong_Kong","Asia/Urumqi","Asia/Kuala_Lumpur","Asia/Singapore","Asia/Taipei","Australia/Perth","Asia/Irkutsk","Asia/Ulaanbaatar","Asia/Seoul","Asia/Tokyo","Asia/Tokyo","Asia/Tokyo","Asia/Yakutsk","Australia/Darwin","Australia/Adelaide","Australia/Melbourne","Australia/Melbourne","Australia/Sydney","Australia/Brisbane","Australia/Hobart","Asia/Vladivostok","Pacific/Guam","Pacific/Port_Moresby","Asia/Magadan","Asia/Magadan","Pacific/Noumea","Pacific/Fiji","Asia/Kamchatka","Pacific/Majuro","Pacific/Auckland","Pacific/Auckland","Pacific/Tongatapu","Pacific/Fakaofo","Pacific/Apia"]})),rY=c((()=>{zQ(),OQ(),IQ(),VQ(),GQ(),HQ(),FQ(),JQ(),UQ(),WQ(),ZQ(),qQ(),QQ(),YQ(),$Q(),XQ(),eY(),aY(),nY(),iY(),Wv={building_number:jv,city:Ev,city_prefix:Nv,city_suffix:Bv,country:Pv,country_code:Lv,country_code_alpha_3:Dv,county:xv,default_country:Cv,direction:Kv,direction_abbr:Rv,postcode:zv,postcode_by_state:Ov,secondary_address:Iv,state:Vv,state_abbr:Gv,street_address:Hv,street_name:Fv,street_suffix:Jv,time_zone:Uv}})),tY=c((()=>{Zv=["###-###-####","(###)-##-###-####","+(###)-##-###-####","+###-##-###-####","1-###-###-####","### ### ####"]})),oY=c((()=>{tY(),qv={formats:Zv}})),sY=c((()=>{Qv=["אדום","ירוק","כחול","צהוב","סגול","ירוק מנטה","ירוק כחלחל","לבן","שחור","כתום","ורוד","אפור","חוּם עֲרמוֹנִי","סָגוֹל","טורקיז","שזוף","שמים כחולים","סלמון","שזיף","סחלב","זית","מגנטה","ליים","שנהב","אינדיגו","זהב","ורוד פוקסיה","טורקיז","צבע תכלת","לבנדר","כסף"]})),lY=c((()=>{Yv=["ספרים","סרטים","מוסיקה","משחקים","מכשירי חשמל","מחשבים","בית","גן","כלים","מכולת","בריאות","יופי","צעצועים","ילדים","תִינוֹק","ביגוד","נעליים","תכשיטים","ספורט","מחוץ לבית","רכב","תעשייתי"]})),uY=c((()=>{$v=["כסא מנהלים ארגונומי מרופד בעור שחור מלוכדות ובמושב ובגב מרופד PVC לנוחות ותמיכה לאורך כל היום","מערך הרכב מורכב מעיצוב מנוע קדמי, עם תיבות הילוכים מסוג ציר טרנסוולר המותקנות בחלק האחורי של המנוע והנעה עם ארבעה גלגלים","חדש ABC 13 9370, 13.3, דור 5 CoreA5-8250U, 8GB RAM, 256GB SSD, כוח UHD גרפיקה, OS 10 Home, OS Office A & J 2016","מקלדת מייפל גיימינג דקה ופשוטה מבית Dev Byte מגיעה עם גוף אלגנטי ותאורת RGB LED בגוון 7 צבעים לפונקציונליות חכמה","אפולוטק B340 הוא עכבר אלחוטי במחיר סביר עם קישוריות אמינה, חיי סוללה של 12 חודשים ועיצוב מודרני","נאגסאקי לנדר הוא השם המסחרי המסחרי של מספר סדרות של אופני ספורט נגסאקי, שהחלו ב- ABC800J משנת 1984","הכדורגל טוב לאימונים ולמטרות פנאי","כפפות שוער רשת קרבוניט מעוצבות באופן ארגונומי בכדי להעניק התאמה קלה","טכנולוגיית שחיקת הדחיסה המתקדמת ביותר של בוסטון מגבירה את החמצון בשרירים, מייצבת שרירים פעילים","מגוון חדש של חולצות רשמיות מעוצבות תוך התחשבות בך. עם התאמות ועיצוב שיגרמו לך להתבלט","המגוון היפה של תפוח נטורל שיש בו שילוב מרגש של מרכיבים טבעיים. עם הטוב של 100% מרכיבים טבעיים","נעלי אנדי נועדו לזכור עמידות כמו גם טרנדים, מגוון הנעליים והסנדלים המסוגננים ביותר"]})),cY=c((()=>{Xv={adjective:["קטן","ארגונומי","כפרי","אינטליגנטי","מאוד יפה","מדהים","פנטסטי","מעשי","מלוטש","מדהים","גנרית","עבודת יד","עבודת יד","מורשה","מְזוּקָק","לא ממותג","טעים"],material:["פלדה","עץ","בטון","פלסטי","כותנה","גרניט","גומי","מתכת","רך","צַח","קפוא"],product:["כיסא","אוטו","מחשב","מקלדת","עכבר","אופניים","כדור","כפפות","מכנסיים","חולצה","שולחן","נעליים","כובע","מגבות","סבון","טונה","עוף","דג","גבינה","בייקון","פיצה","סלט","נקניקיות","צ'יפס"]}})),dY=c((()=>{sY(),lY(),uY(),cY(),eg={color:Qv,department:Yv,product_description:$v,product_name:Xv}})),hY=c((()=>{ag={wide:["ינואר","פברואר","מרץ","אפריל","מאי","יוני","יולי","אוגוסט","ספטמבר","אוקטובר","נובמבר","דצמבר"],wide_context:["ינואר","פברואר","מרץ","אפריל","מאי","יוני","יולי","אוגוסט","ספטמבר","אוקטובר","נובמבר","דצמבר"],abbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],abbr_context:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}})),pY=c((()=>{ng={wide:["יום ראשון","יום שני","יום שלישי","יום רביעי","יום חמישי","יום שישי","שבת"],wide_context:["יום ראשון","יום שני","יום שלישי","יום רביעי","יום חמישי","יום שישי","שבת"],abbr:["יום א׳","יום ב׳","יום ג׳","יום ד׳","יום ה׳","יום ו׳","שבת"],abbr_context:["יום א׳","יום ב׳","יום ג׳","יום ד׳","יום ה׳","יום ו׳","שבת"]}})),mY=c((()=>{hY(),pY(),ig={month:ag,weekday:ng}})),fY=c((()=>{rg=["abbas","abduco","abeo","abscido","absconditus","absens","absorbeo","absque","abstergo","absum","abundans","abutor","accedo","accendo","acceptus","accipio","accommodo","accusator","acer","acerbitas","acervus","acidus","acies","acquiro","acsi","adamo","adaugeo","addo","adduco","ademptio","adeo","adeptio","adfectus","adfero","adficio","adflicto","adhaero","adhuc","adicio","adimpleo","adinventitias","adipiscor","adiuvo","administratio","admiratio","admitto","admoneo","admoveo","adnuo","adopto","adsidue","adstringo","adsuesco","adsum","adulatio","adulescens","adultus","aduro","advenio","adversus","advoco","aedificium","aeger","aegre","aegrotatio","aegrus","aeneus","aequitas","aequus","aer","aestas","aestivus","aestus","aetas","aeternus","ager","aggero","aggredior","agnitio","agnosco","ago","ait","aiunt","alienus","alii","alioqui","aliqua","alius","allatus","alo","alter","altus","alveus","amaritudo","ambitus","ambulo","amicitia","amiculum","amissio","amita","amitto","amo","amor","amoveo","amplexus","amplitudo","amplus","ancilla","angelus","angulus","angustus","animadverto","animi","animus","annus","anser","ante","antea","antepono","antiquus","aperio","aperte","apostolus","apparatus","appello","appono","appositus","approbo","apto","aptus","apud","aqua","ara","aranea","arbitro","arbor","arbustum","arca","arceo","arcesso","arcus","argentum","argumentum","arguo","arma","armarium","armo","aro","ars","articulus","artificiose","arto","arx","ascisco","ascit","asper","aspicio","asporto","assentator","astrum","atavus","ater","atqui","atrocitas","atrox","attero","attollo","attonbitus","auctor","auctus","audacia","audax","audentia","audeo","audio","auditor","aufero","aureus","auris","aurum","aut","autem","autus","auxilium","avaritia","avarus","aveho","averto","avoco","baiulus","balbus","barba","bardus","basium","beatus","bellicus","bellum","bene","beneficium","benevolentia","benigne","bestia","bibo","bis","blandior","bonus","bos","brevis","cado","caecus","caelestis","caelum","calamitas","calcar","calco","calculus","callide","campana","candidus","canis","canonicus","canto","capillus","capio","capitulus","capto","caput","carbo","carcer","careo","caries","cariosus","caritas","carmen","carpo","carus","casso","caste","casus","catena","caterva","cattus","cauda","causa","caute","caveo","cavus","cedo","celebrer","celer","celo","cena","cenaculum","ceno","censura","centum","cerno","cernuus","certe","certo","certus","cervus","cetera","charisma","chirographum","cibo","cibus","cicuta","cilicium","cimentarius","ciminatio","cinis","circumvenio","cito","civis","civitas","clam","clamo","claro","clarus","claudeo","claustrum","clementia","clibanus","coadunatio","coaegresco","coepi","coerceo","cogito","cognatus","cognomen","cogo","cohaero","cohibeo","cohors","colligo","colloco","collum","colo","color","coma","combibo","comburo","comedo","comes","cometes","comis","comitatus","commemoro","comminor","commodo","communis","comparo","compello","complectus","compono","comprehendo","comptus","conatus","concedo","concido","conculco","condico","conduco","confero","confido","conforto","confugo","congregatio","conicio","coniecto","conitor","coniuratio","conor","conqueror","conscendo","conservo","considero","conspergo","constans","consuasor","contabesco","contego","contigo","contra","conturbo","conventus","convoco","copia","copiose","cornu","corona","corpus","correptius","corrigo","corroboro","corrumpo","coruscus","cotidie","crapula","cras","crastinus","creator","creber","crebro","credo","creo","creptio","crepusculum","cresco","creta","cribro","crinis","cruciamentum","crudelis","cruentus","crur","crustulum","crux","cubicularis","cubitum","cubo","cui","cuius","culpa","culpo","cultellus","cultura","cum","cunabula","cunae","cunctatio","cupiditas","cupio","cuppedia","cupressus","cur","cura","curatio","curia","curiositas","curis","curo","curriculum","currus","cursim","curso","cursus","curto","curtus","curvo","curvus","custodia","damnatio","damno","dapifer","debeo","debilito","decens","decerno","decet","decimus","decipio","decor","decretum","decumbo","dedecor","dedico","deduco","defaeco","defendo","defero","defessus","defetiscor","deficio","defigo","defleo","defluo","defungo","degenero","degero","degusto","deinde","delectatio","delego","deleo","delibero","delicate","delinquo","deludo","demens","demergo","demitto","demo","demonstro","demoror","demulceo","demum","denego","denique","dens","denuncio","denuo","deorsum","depereo","depono","depopulo","deporto","depraedor","deprecator","deprimo","depromo","depulso","deputo","derelinquo","derideo","deripio","desidero","desino","desipio","desolo","desparatus","despecto","despirmatio","infit","inflammatio","paens","patior","patria","patrocinor","patruus","pauci","paulatim","pauper","pax","peccatus","pecco","pecto","pectus","pecunia","pecus","peior","pel","ocer","socius","sodalitas","sol","soleo","solio","solitudo","solium","sollers","sollicito","solum","solus","solutio","solvo","somniculosus","somnus","sonitus","sono","sophismata","sopor","sordeo","sortitus","spargo","speciosus","spectaculum","speculum","sperno","spero","spes","spiculum","spiritus","spoliatio","sponte","stabilis","statim","statua","stella","stillicidium","stipes","stips","sto","strenuus","strues","studio","stultus","suadeo","suasoria","sub","subito","subiungo","sublime","subnecto","subseco","substantia","subvenio","succedo","succurro","sufficio","suffoco","suffragium","suggero","sui","sulum","sum","summa","summisse","summopere","sumo","sumptus","supellex","super","suppellex","supplanto","suppono","supra","surculus","surgo","sursum","suscipio","suspendo","sustineo","suus","synagoga","tabella","tabernus","tabesco","tabgo","tabula","taceo","tactus","taedium","talio","talis","talus","tam","tamdiu","tamen","tametsi","tamisium","tamquam","tandem","tantillus","tantum","tardus","tego","temeritas","temperantia","templum","temptatio","tempus","tenax","tendo","teneo","tener","tenuis","tenus","tepesco","tepidus","ter","terebro","teres","terga","tergeo","tergiversatio","tergo","tergum","termes","terminatio","tero","terra","terreo","territo","terror","tersus","tertius","testimonium","texo","textilis","textor","textus","thalassinus","theatrum","theca","thema","theologus","thermae","thesaurus","thesis","thorax","thymbra","thymum","tibi","timidus","timor","titulus","tolero","tollo","tondeo","tonsor","torqueo","torrens","tot","totidem","toties","totus","tracto","trado","traho","trans","tredecim","tremo","trepide","tres","tribuo","tricesimus","triduana","triginta","tripudio","tristis","triumphus","trucido","truculenter","tubineus","tui","tum","tumultus","tunc","turba","turbo","turpe","turpis","tutamen","tutis","tyrannus","uberrime","ubi","ulciscor","ullus","ulterius","ultio","ultra","umbra","umerus","umquam","una","unde","undique","universe","unus","urbanus","urbs","uredo","usitas","usque","ustilo","ustulo","usus","uter","uterque","utilis","utique","utor","utpote","utrimque","utroque","utrum","uxor","vaco","vacuus","vado","vae","valde","valens","valeo","valetudo","validus","vallum","vapulus","varietas","varius","vehemens","vel","velociter","velum","velut","venia","venio","ventito","ventosus","ventus","venustas","ver","verbera","verbum","vere","verecundia","vereor","vergo","veritas","vero","versus","verto","verumtamen","verus","vesco","vesica","vesper","vespillo","vester","vestigium","vestrum","vetus","via","vicinus","vicissitudo","victoria","victus","videlicet","video","viduata","viduo","vigilo","vigor","vilicus","vilis","vilitas","villa","vinco","vinculum","vindico","vinitor","vinum","vir","virga","virgo","viridis","viriliter","virtus","vis","viscus","vita","vitiosus","vitium","vito","vivo","vix","vobis","vociferor","voco","volaticus","volo","volubilis","voluntarius","volup","volutabrum","volva","vomer","vomica","vomito","vorago","vorax","voro","vos","votum","voveo","vox","vulariter","vulgaris","vulgivagus","vulgo","vulgus","vulnero","vulnus","vulpes","vulticulus","vultuosus","xiphias"]})),vY=c((()=>{tg=["לורם","איפסום","דולור","סיט","אמט","קונסקטורר","אדיפיסינג","אלית","צש","בליא","מנסוטו","צמלח","לביקו","ננבי","צמוקו","בלוקריה","שיצמה","ברורק","נולום","ארווס","סאפיאן","פוסיליס","קוויס","אקווזמן","קוואזי","במר","מודוף","אודיפו","בלאסטיק","מונופץ","קליר","בנפת","נפקט","למסון","בלרק","וענוף","קוואזי","במר","מודוף","אודיפו","בלאסטיק","מונופץ","קליר","בנפת","נפקט","למסון","בלרק","וענוף","לפרומי","בלוף","קינץ","תתיח","לרעח","לת","צשחמי","צש","בליא","מנסוטו","צמלח","לביקו","ננבי","צמוקו","בלוקריה","שיצמה","ברורק","סחטיר","בלובק","תצטנפל","בלינדו","למרקל","אס","לכימפו","דול","צוט","ומעיוט","לפתיעם","ברשג","ולתיעם","גדדיש","קוויז","דומור","ליאמום","בלינך","רוגצה","לפמעט","מוסן","מנת","הועניב","היושבב","שערש","שמחויט","שלושע","ותלברו","חשלו","שעותלשך","וחאית","נובש","ערששף","זותה","מנק","הבקיץ","אפאח","דלאמת","יבש","כאנה","ניצאחו","נמרגי","שהכים","תוק","הדש","שנרא","התידם","הכייר","וק","קולהע","צופעט","למרקוח","איבן","איף","ברומץ","כלרשט","מיחוצים","קלאצי","סחטיר","בלובק","תצטנפל","בלינדו","למרקל","אס","לכימפו","דול","צוט","ומעיוט","","לפתיעם","ברשג","","ולתיעם","גדדיש","קוויז","דומור","ליאמום","בלינך","רוגצה","לפמעט","נולום","ארווס","סאפיאן","","פוסיליס","קוויס","אקווזמן","קוואזי","במר","מודוף","אודיפו","בלאסטיק","מונופץ","קליר","בנפת","נפקט","למסון","בלרק","","וענוף","לפרומי","בלוף","קינץ","תתיח","לרעח","לת","צשחמי","נולום","ארווס","סאפיאן","","פוסיליס","קוויס","אקווזמן","לורם","איפסום","דולור","סיט","אמט","לורם","איפסום","דולור","סיט","אמט","קונסקטורר","אדיפיסינג","אלית","סת","אלמנקום","ניסי","נון","ניבאה","דס","איאקוליס","וולופטה","דיאם","וסטיבולום","אט","דולור","קראס","אגת","לקטוס","וואל","אאוגו","וסטיבולום","סוליסי","טידום","בעליק","קונדימנטום","קורוס","בליקרה","נונסטי","קלובר","בריקנה","סטום","לפריקך","תצטריק","לרטי"]})),gY=c((()=>{fY(),vY(),og={supplemental:rg,words:tg}})),kY=c((()=>{sg=["רוק","רוק מטאלי","פופ","אלקטרוני","עממית","עולם","קאנטרי","ג'אז","פאנק","נשמה","היפ הופ","קלאסית","לטינית","רגאיי","במה ומסך","בלוז","לא מוסיקה","ראפ"]})),yY=c((()=>{kY(),lg={genre:sg}})),bY=c((()=>{ug=["אביב","אביבית","אביגיל","אביה","אביטל","אבישג","אגם","אדווה","אדל","אדר","אהבה","אודיה","אודליה","אווה","אופיר","אופירה","אופל","אופק","אור","אביגיל","אורטל","אורי","אוריה","אורית","אורלי","אושרי","איב","איה","איילה","איילת","אילנה","אילנית","אימרי","אירית","אלה","אלומה","אליאנה","אליה","אלין","אלינור","אליענה","אלירז","אלישבע","אלכס","אלמוג","אמונה","אמור","אן","אנאבל","אנה","אסיף","אסנת","אסתר","אפיק","אפריל","אפרת","אראלה","ארבל","אריאל","אריאלה","אריאנה","ארייה","בארי","בל","בלה","בר","ברית","ברקת","בת","בת אל","בת חן","בת שבע","בתיה","גאיה","גבריאל","גבריאלה","גוון","ג'וי","ג'ון","גוני","גורן","גיל","גילי","גילת","גל","גלי","גליה","גלית","גפן","דבורה","דגן","דגנית","דור","דורון","דורין","דורית","דיאנה","דינה","דליה","דנה","דניאל","דניאלה","דנית","דפנה","דקל","דקלה","הגר","הדס","הדסה","הדר","הודיה","הילה","הלל","ויויאן","ויטה","ויקטוריה","ורד","זהבה","זוהר","זיו","חגית","חושן","חיננית","חירות","חמוטל","חן","חנה","חנית","טובה","טופז","טל","טלי","טליה","טנא","יהב","יהודית","יהל","יהלום","יהלי","יובל","יודפת","יוכבד","יוליה","יונית","יונת","ים","ימית","יסכה","יסמין","יעל","יעלה","יערה","יפה","יפית","יפעת","ירדן","כוכב","כליל","כרם","כרמי","כרמית","כרמל","לאה","לבנה","לוטם","לוטן","לוסי","לי","ליאור","ליאורה","ליאל","ליאם","ליאן","ליאת","ליב","ליבי","לידור","ליה","ליהיא","ליזה","ליטל","לילי","ליליה","לילך","לימור","ליעד","ליר","לירון","לירז","לירן","לשם","מאור","מאי","מאיה","מגי","מגל","מור","מוריה","מורן","מיה","מיטב","מיטל","מיכאל","מיכאלה","מיכל","מיקה","מירן","מלכה","מעיין","מצדה","מרב","מריה","מרים","מרינה","מתנה","מתת","נאוה","נגה","נוי","נויה","נועה","נועם","נופר","נורית","נטלי","נטע","נטעלי","ניב","נילי","נינט","ניצן","נעמה","נעמי","נרי","נריה","סביון","סהר","סול","סופיה","סיגלית","סיון","סמדר","ספיר","סשה","סתיו","עדי","עדן","עדנה","עומר","עופרי","עיינה","עינב","עינת","עלמא","עלמה","עמית","עמליה","עמנואל","ענבל","ענבר","ענהאל","ענת","עפרה","ערגה","פלג","צאלה","צוף","צופיה","צליל","צמרת","קורין","קורל","קטיה","קליה","קמה","קסם","קסניה","קרן","קשת","רביד","רבקה","רויטל","רוית","רומי","רון","רונהלי","רוני","רונית","רות","רותם","רז","רחל","ריטה","רימון","רינת","רננה","רעות","שגב","שגית","שובל","שוהם","שולמית","שונית","שושנה","שחף","שחר","שי","שי לי","שיר","שיראל","שירה","שירז","שירי","שלהבת","שלומית","שלי","שמחה","שמרית","שני","שקד","שקמה","שרה","שרון","שרית","תאיר","תאנה","תבור","תהילה","תו","תום","תומר","תכלת","תלמה","תמר","תמרה","תפארת","תקווה"]})),SY=c((()=>{cg=["אביאל","אביגדור","אביה","אביחי","אבינועם","אביעד","אבירם","אבירן","אבישי","אביתר","אברהם","אבשלום","אגם","אדיר","אדם","אדר","אהוד","אהרון","אוהד","אופיר","אופק","אור","אורי","אוריאל","אוריה","אורן","אושרי","אחיה","אייל","איל","אילון","אילן","אימרי","איתי","איתם","איתמר","איתן","אלדד","אלדר","אלון","אלחי","אלחנן","אליאב","אליאור","אליאס","אליה","אליהו","אלימלך","אליסף","אלירז","אלירן","אלישיב","אלישמע","אלישע","אלכס","אלכסנדר","אלמוג","אלעד","אלקנה","אלרועי","אמור","אמיר","אמיתי","אמנון","אסיף","אסף","אפיק","אפרים","אראל","ארבל","ארז","ארטיום","ארי","אריאל","אריה","ארנון","ארתור","אשד","אשל","אשר","בארי","בועז","בן אל","בן ציון","בניה","בנימין","בצלאל","בר","בראל","ברוך","ברי","ברק","גד","גדעון","גוון","ג'וי","גולן","ג'ון","גוני","גור","גורן","גיא","גיורא","גיל","גילי","גל","גלבוע","גלעד","גפן","דביר","דגן","דוד","דולב","דור","דורון","דן","דני","דניאל","דקל","דרור","הדר","הוד","הלל","הראל","ולדימיר","זאב","זבולון","זוהר","זיו","חביב","חגי","חושן","חי","חיים","חמי","חן","חנוך","חנן","חסד","טל","טנא","יאיר","יאן","יגאל","יגל","ידיד","ידידיה","יהב","יהודה","יהונתן","יהורם","יהושע","יהל","יהלום","יהלי","יואב","יואל","יובל","יוגב","יוחאי","יונתן","יוסף","יורם","יותם","יחזקאל","ים","ינון","יניב","יעקב","יפתח","יצחק","יקיר","ירדן","ירון","יריב","ישי","ישראל","יששכר","יאיר","יאן","יגאל","יגל","ידיד","ידידיה","יהב","יהודה","יהונתן","יהורם","יהושע","יהל","יהלום","יהלי","יואב","יואל","יובל","יוגב","יוחאי","יונתן","יוסף","יורם","יותם","יחזקאל","ים","ינון","יניב","יעקב","יפתח","יצחק","יקיר","ירדן","ירון","יריב","ישי","ישראל","יששכר","כוכב","כליל","כפיר","כרם","כרמי","כרמל","לב","לביא","לוטם","לוטן","לוי","לי","ליאון","ליאור","ליאל","ליאם","לידור","ליעד","ליר","לירוי","לירון","לירז","לירן","מאור","מאיר","מגל","מור","מורן","מיטב","מיכאל","מירן","מלאכי","מנחם","מנשה","מעיין","מרדכי","משה","מתן","נבו","נדב","נהוראי","נוב","נוי","נועם","נח","נחשון","נטע","ניב","ניסן","ניצן","ניקולס","ניר","ניתאי","נמרוד","נפתלי","נרי","נריה","נתיב","נתן","נתנאל","סביון","סהר","סול","סטפן","סיני","סער","סרגיי","סשה","סתיו","עברי","עדי","עדן","עודד","עוז","עוזיה","עומר","עומרי","עופר","עופרי","עידו","עידן","עילאי","עלי","עמוס","עמיחי","עמית","עמנואל","עקיבא","ערן","פלא","פלג","צבי","צדק","צוף","צוק","צור","צח","צחי","ציון","צליל","קסם","ראובן","ראם","רביב","רביד","רגב","רון","רוני","רועי","רותם","רז","ריי","רימון","רם","רן","רעי","רפאל","שאול","שגב","שגיא","שובל","שוהם","שחף","שחק","שחר","שי","שי לי","שילה","שיר","שלום","שלומי","שלמה","שמאי","שמואל","שמחה","שמעון","שקד","שרון","תבור","תו","תום","תומר","תיאו","תמיר"]})),AY=c((()=>{bY(),SY(),(dg=ug.concat(cg)).sort(),hg=dg})),MY=c((()=>{pg=["Asexual","Female to male trans man","Female to male transgender man","Female to male transsexual man","F2M","Gender neutral","Hermaphrodite","Intersex man","Intersex person","Intersex woman","Male to female trans woman","Male to female transgender woman","Male to female transsexual woman","Man","M2F","Polygender","T* man","T* woman","Two* person","Two-spirit person","Woman","Agender","Androgyne","Androgynes","Androgynous","Bigender","Cis","Cis Female","Cis Male","Cis Man","Cis Woman","Cisgender","Cisgender Female","Cisgender Male","Cisgender Man","Cisgender Woman","Female to Male","FTM","Gender Fluid","Gender Nonconforming","Gender Questioning","Gender Variant","Genderqueer","Intersex","Male to Female","MTF","Neither","Neutrois","Non-binary","Other","Pangender","Trans","Trans Female","Trans Male","Trans Man","Trans Person","Trans*Female","Trans*Male","Trans*Man","Trans*Person","Trans*Woman","Transexual","Transexual Female","Transexual Male","Transexual Man","Transexual Person","Transexual Woman","Transgender Female","Transgender Person","Transmasculine","Two-spirit"]})),TY=c((()=>{mg=["עברות","אביב","אביבי","אביגור","אבידור","אבידן","אביטל","אבינועם","אבינר","אבינרי","אביעד","אביעזר","אבירם","אבישי","אבישר","אביתר","אבן","אבן זהב","אבן חן","אבן צור","אבן שושן","אבנון","אבני","אבניאל","אבנר","אבנרי","אברהם","אברהמי","אברון","אבריאל","אגוז","אגוזי","אגמון","אגרון","אדוני","אדיב","אדירי","אדם","אדמון","אדמוני","אדר","אהרוני","אהרן","אוהד","און","אופיר","אופק","אור","אורון","אוריאל","אוריה","אוריון","אוריין","אורן","אזרחי","אחז","אחיטוב","אחרון","אייל","איילון","אילון","אילן","אילני","אילת","איש כסית","איששלום","איתם","איתן","אלדד","אלדד","אלדן","אלול","אלון","אלוני","אלוף","אלחנני","אליאב","אליהו","אליעז","אליעזר","אליצור","אליקים","אלישיב","אלמגור","אלמוג","אלעד","אלעזר","אלרום","אלרון","אמיר","אמית","אמיתי","אנקורי","אסא","אסיא","אסיף","אסף","אפעל","אפק","אפרת","אראל","ארבל","ארגוב","ארגמן","ארד","ארדון","ארוך","ארז","ארזי","אריאב","אריאל","אריאלי","ארידור","אריה","אריכא","ארם","ארמוני","ארנון","ארצי","אשבל","אשד","אשור","אשכול","אשכנזי","אשל","אשר","אשרי","אשרת","אתגר","אתר","אתרוג","ב׳׳ק","באב׳׳ד","באר","בארי","בבלי","בהט","בוצר","בורר","בחור","ביצור","בית הלחמי","בית יוסף","בית לחם","בכור","בן","בן אברהם","בן אליעזר","בן אמוץ","בן ארי","בן אריה","בן ארצי","בן אשר","בן ברוך","בן ברק","בן גל","בן גרא","בן דב","בן דוד","בן דור","בן דיין","בן זאב","בן זכאי","בן זקן","בן חור","בן חיים","בן חנן","בן חנניה","בן יהודה","בן יעקב","בן יצחק","בן ישי","בן ישראל","בן מלך","בן מנחם","בן נון","בן נחום","בן נר","בן נתן","בן עמי","בן ענת","בן פורת","בן צבי","בן צור","בן ציון","בן ראובן","בן שאול","בן שחר","בן שלום","בן שמחון","בן שמעון","בןגוריון","בןחורין","בןמאיר","בןסירה","בןתור","בנאי","משפחת בנאי","בנטוב","בנימין","בנימיני","בצלאל","בר","בר אור","בר גיורא","בר זוהר","בר יהודה","בר יעקב","בר נתן","בר שלום","בראון","בראילן","ברהלל","בריוסף","ברלב","ברעוז","בראל","ברוך","ברוש","ברושי","ברזילי","ברזל","ברטוב","ברטל","ברנע","ברעם","ברק","ברקאי","ברקין","ברקן","ברקת","בשן","גאון","גבאי","גביש","גבע","גבעול","גבעון","גבעתי","גבתון","גד","גדות","גדיש","גדליה","גדרון","גודר","גולן","גונן","גופר","גור אריה","גוריון","גורלי","גורן","גושן","גזית","גיא","גידור","גיל","גילון","גילת","גינוסר","גינת","גינתון","גל","גלבוע","גליל","גלילי","גלעד","גלעדי","גלרון","גמזו","גמליאל","גנור","גפן","גפני","גרא","גרינבלט","גרנות","גרשון","גת","דביר","דברת","דגן","דגני","דוד","דוידי","דולב","דור","דורי","דותן","דן","דניאלי","דקל","דר","דרומי","דרור","דרורי","דשא","הדס","הדר","הלוי","הללי","המאירי","הנגבי","העצני","הר נוי","הר שפי","הראבן","הראבן","הראובני","הראל","הרטוב","הרפז","הררי","הללי","המאירי","הנגבי","העצני","הר נוי","הר שפי","הראבן","הראבן","הראובני","הראל","הרטוב","הרפז","הררי","וילנאי","ורד","ורדי","ורדימון","זזאב","זאבי","זבולון","זהבי","זוהר","זורע","זיו","זיואב","זכאי","זכות","זכריה","זמורה","זמיר","זמר","זמרי","זעירא","זק","זק׳׳ש","זר","זר","זרובבל","זרטל","חדש","חובה","חורש","חזן","חזני","חזקיה","חי","חייט","חיים","חכם","חלד","חלמיש","חן","חנוך","חנוכה","חנני","חסון","חסיד","חפץ","חפר","חץ","חצור","חצרוני","חרובי","חרותי","חריף","חרל׳׳פ","חרמון","חרמוני","חת","טבת","טוביה","טלמור","טלשיר","יאיר","יבין","יגור","ידיד","ידין","ידעיה","יהב","יהודאי","יהודה","יהושע","יהלום","יובל","יוגב","יוטבת","יונה","יוסף","יושע","יחזקאל","יחיאל","יכין","ימיני","ינון","יניב","יעקבי","יער","יערי","יפה","יפרח","יפת","יצחק","יצחקי","יקיר","ירדני","ירוחם","ירום","ירון","ירושלמי","יריב","ירקוני","ישורון","ישי","ישר","ישראל","ישראלי","יששכר","כהן","משפחות כהן","משפחת כהןסקלי","כוכבי","כנען","כנעני","כנר","כספי","כפיר","כפרי","כרמון","כרמי","כרמל","כרמלי","לאור","לב","לב ארי","לבבי","לביא","לבנון","לבני","לבנת","להב","להבי","לוטם","לוטן","לוי (יהדות)","לוי (שם משפחה)","לוי נחום","לויתן","לחמן","ליאור","לידור","ליטאי","לימור","ליש","לשם","מאור","מאיר","מאירי","מגד","מגל","מואב","מוקד","מוקדי","מורג","מוריה","מורשת","מזא׳׳ה","מזור","מזל","מזר","מאיר מיבר","מיכה","מילוא","מישורי","מלכה","מלכי","מלמד","מנור","מנחם","מנשה","מעוז","מעיין","מעייני","מערבי","מרגליות","מרגלית","מרגנית","מרום","מרון","מרידור","משה","משולח","משיח","משעול","משעל","משען","משעני","מתניה","מתתיהו","נאור","נאמן","נבון","נגבי","נוב","נווה","נוימרק","נועם","נוריאל","נחום","נחושתן","נחשון","ניב","ניסני","ניצן","נמרי","נסים","נץ","נריה","נשר","נשרי","נתיב","נתן","נתנאל","נתניהו","סבוראי","סביר","סגל","סדן","סהר","סופר","סימן טוב","סיני","סכנין","סלע","סמדר","סנונית","סעד","סער","ספיר","סתוי","סתיו","עברון","עברי","עדיני","עדר","עובד","עובדיה","עובדיהו","עוגן","עוז","עוזר","עומר","עופר","עופרים","עזוז","עזריאל","עזריה","עזרתי","עידן","עילם","עינב","עמוס","עמיאל","עמיקם","עמיר","עמירן","עמית","עמרמי","ענבל","ענבר","עסיס","עפרת","עצמון","ערד","ערמון","ערן","עשת","פאר","פדהצור","פולני","פורת","פז","פלאי","פלד","פלס","פניני","פסח","פרג","פרוש","פרח","פרי","פריגת","פרימור","פרץ","פת","צבר","צדוק","צדקה","צדקיהו","צוק","צור","צורי","צוריאל","צורף","צידון","צמח","צפיר","צפריר","קדמון","קדמי","קדר","קדרון","קהת","קורח","קורן","קטן","קידר","קינן","קיסרי","קישון","קם","קמה","קמחי","קנר","קנת","קצב","קצין","קציר","קשת","קשתי","ראובני","רבי","רביב","רביד","רגב","רהב","רוגל","רווה","רווח","רוח","רום","רועה","רז","רזיאל","רחמים","רכס","רם","רמון","רמז","רמתי","רן","רענן","רשף","שאול","שאולי","שאלתיאל","שבח","שביב","שבת","שבתאי","שבתי","שגב","שגיא","שדה","שדר","שוב","שובל","שוהם","שוחט","שומרון","שוער","שופט","שור","שורק","שושן","שושני","שחור","שחורי","שחל","שחם","שחף","שחק","שחר","שילה","שילוח","שילון","שילוני","שיר","שיש","שלג","שלו","שלום","שלומי","שלח","שלם","שלמון","שם אור","שםטוב","שמואל","שמואלי","שמחון","שמחוני","שמחי","שמעון","שמרון","שמש (שם משפחה)","שמשון","שמשוני","שמשי","שנהר","שני","שנער","שער","שפיר","שפע","שץ","שקד","שקדי","שקלים","שרביט","שרון","שרוני","שריג","שריד","שריף","שריר","ששון","תאומים","תאני","תבור","תבורי","תגר","תדמור","תומר","תורן","תירוש","תל צור","תלם","תמוז","תמיר","תמרי","תקווה","תקוע","תרשיש","תשבי"]})),_Y=c((()=>{fg=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),wY=c((()=>{vg=["Mr.","Mrs.","Ms.","Miss","Dr."]})),jY=c((()=>{gg=["Jr.","Sr.","I","II","III","IV","V","MD","DDS","PhD","DVM"]})),EY=c((()=>{kg={descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","Dynamic","International","Legacy","Forward","Internal","Human","Chief","Principal"],level:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job:["Supervisor","Associate","Executive","Liaison","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"]}})),NY=c((()=>{bY(),AY(),MY(),TY(),SY(),_Y(),wY(),jY(),EY(),yg={female_first_name:ug,first_name:hg,gender:pg,last_name:mg,male_first_name:cg,name:fg,prefix:vg,suffix:gg,title:kg}})),BY=c((()=>{bg=["!##-!##-####","(!##) !##-####","1-!##-!##-####","!##.!##.####","!##-!##-####","(!##) !##-####","1-!##-!##-####","!##.!##.####","!##-!##-#### x###","(!##) !##-#### x###","1-!##-!##-#### x###","!##.!##.#### x###","!##-!##-#### x####","(!##) !##-#### x####","1-!##-!##-#### x####","!##.!##.#### x####","!##-!##-#### x#####","(!##) !##-#### x#####","1-!##-!##-#### x#####","!##.!##.#### x#####"]})),PY=c((()=>{BY(),Sg={formats:bg}})),LY=c((()=>{rY(),oY(),dY(),mY(),gY(),yY(),NY(),PY(),Ag={title:"Hebrew",separator:"ו ",address:Wv,cell_phone:qv,commerce:eg,date:ig,lorem:og,music:lg,name:yg,phone_number:Sg}})),DY=c((()=>{Mg=["#","##","###"]})),xY=c((()=>{Tg=["#{city_name}"]})),CY=c((()=>{_g=["Bakar","Beli Manastir","Belišće","Benkovac","Biograd na Moru","Bjelovar","Buje","Buzet","Čabar","Čakovec","Čazma","Cres","Crikvenica","Daruvar","Delnice","Donja Stubica","Donji Miholjac","Drniš","Dubrovnik","Duga Resa","Dugo Selo","Đakovo","Đurđevac","Garešnica","Glina","Gospić","Grubišno Polje","Hrvatska Kostajnica","Hvar","Ilok","Imotski","Ivanec","Ivanić-Grad","Jastrebarsko","Karlovac","Kastav","Kaštela","Klanjec","Knin","Komiža","Koprivnica","Korčula","Kraljevica","Krapina","Križevci","Krk","Kutina","Kutjevo","Labin","Lepoglava","Lipik","Ludbreg","Makarska","Mali Lošinj","Metković","Mursko Središce","Našice","Nin","Nova Gradiška","Novalja","Novi Marof","Novi Vinodolski","Novigrad-Cittanova","Novska","Obrovac","Ogulin","Omiš","Opatija","Opuzen","Orahovica","Oroslavje","Osijek","Otočac","Otok","Ozalj","Pag","Pakrac","Pazin","Petrinja","Pleternica","Ploče","Popovača","Poreč","Požega","Pregrada","Prelog","Pula","Rab","Rijeka","Rovinj","Samobor","Senj","Šibenik","Sinj","Sisak","Skradin","Slatina","Slavonski Brod","Slunj","Solin","Split","Stari Grad","Supetar","Sveta Nedelja","Sveti Ivan Zelina","Trilj","Trogir","Umag","Valpovo","Varaždin","Varaždinske Toplice","Velika Gorica","Vinkovci","Virovitica","Vis","Vodice","Vodnjan","Vrbovec","Vrbovsko","Vrgorac","Vrlika","Vukovar","Zabok","Zadar","Zagreb","Zaprešic","Zlatar","Županja"]})),KY=c((()=>{wg=["Afganistan","Albanija","Alžir","Američka Samoa","Andora","Angola","Anguila","Antarktika","Antigua i Barbuda","Argentina","Armenija","Aruba","Australija","Austrija","Azerbajdžan","Bahami","Bahrein","Bangladeš","Barbados","Bjelorusija","Belgija","Belize","Benin","Bermuda","Butan","Bolivija","Bonaire","Bosna i Hercegovina","Bocvana","Otok Bouvet","Brazil","Bruneji","Bugarska","Burikina Faso","Burundi","Kambodža","Kameron","Kanada","Zelenortska Republika","Kajmanski Otoci","Srednjoafrička Republika","Čad","Čile","Kina","Božićni Otoci","Keeling Otoci","Kolumbija","Komori","Kongo","Demokratska Republika Kongo","Cookovi Otoci","Kostarika","Hrvatska","Kuba","Curacao","Cipar","Češka","Obala Bjelokosti","Danska","Džibuti","Dominika","Dominikanska Republika","Ekvador","Egipat","Salvador","Ekvatorijalna Gvineja","Eritreja","Estonija","Etiopija","Falkandski Otoci","Farski Otoci","Fidži","Finska","Francuska","Francuska Gvajana","Francuska Polinezija","Južni Francuski Teritoriji","Gabon","Gambija","Gruzija","Njemačka","Gana","Gibraltar","Grčka","Grenland","Grenada","Guadelupe","Guam","Guatemala","Guernsey","Gvineja","Gvineja Bisau","Gvajana","Haiti","Otok Heard i McDonald Otoci","Vatikan","Honduras","Hong Kong","Mađarska","Island","Indija","Indonezija","Iran","Irak","Irska","Isle of Man","Izrael","Italija","Jamajka","Japan","Jersey","Jordan","Kazahstan","Kenija","Kiribati","DNR Koreja","Rebublika Koreja","Kuvajt","Krigistan","Laos","Latvija","Libanon","Lesoto","Liberija","Libija","Lihtenštajn","Litva","Luksmburg","Makao","Makedonija","Madagaskar","Malavi","Malezija","Maldivi","Mali","Malta","Maršalovi","Martinik","Mauritanija","Mauricius","Mayotte","Meksiko","Mikronezija","Moldavija","Monako","Mongolija","Crna Gora","Monteserat","Maroko","Mozambik","Mjanmar","Namibija","Nauru","Nepal","Nizozemska","Nova Kaledonija","Novi Zeland","Nikaragva","Niger","Nigerija","Niue","Norfolk","Sjeverni Marijanski Otoci","Norveška","Oman","Pakistan","Palau","Palestina","Panama","Papua Nova Gvineja","Paragvaj","Peur","Filipini","Pitcairn","Poljska","Protugal","Portoriko","Katar","Rumunjska","Ruska Federacija","Ruanda","Reunion","Sveti Bartolomej","Sveta Helena","Sveti Kitts i Nevis","Sveta Lucija","Sveti Martin (fr.dio)","Sveti Petar i Miquelon","Sveti Vincent i Grenadini","Samoa","San Marino","Sveti Toma i Princip","Saudijska Arabija","Senegal","Srbija","Sejšeli","Siera Leone","Singapur","Sveti Martin (niz.dio)","Slovačka","Slovenija","Salomoski Otoci","Somalija","Južna Afrika","Južna Georgia i južni Sandwich","Južni Sudan","Španjolska","Šri Lanka","Sudan","Surinam","Svalvard i Jan Mayen","Swaziland","Švedska","Švicarska","Sirija","Tajvan","Tadžikistan","Tanaznija","Tajland","Istočni Timor","Togo","Tokelau","Tonga","Trinidad i Tobago","Tunis","Turska","Turkmenistan","Otoci Turks i Caicos","Tuvalu","Uganda","Ukrajina","Ujedinjeni Arapski Emirati ","Ujedinjeno Kraljevstvo","Sjedinjenje Američke Države","Urugvaj","Uzbekistan","Vanuatu","Venezuela","Vietnam","Britanski Djevičanski Otoci","Američki Djevičanski Otoci","Wallis i Futuna","Zapadna Sahara","Jemen","Zambija","Zimbabve"]})),RY=c((()=>{jg=["Hrvatska"]})),zY=c((()=>{Eg=["#####"]})),OY=c((()=>{Ng=["Kat #","Stan ##"]})),IY=c((()=>{Bg=["Adolfa Waldingera","Alanska","Aljmaška","Andrije Hebranga","Andrije Kačića Miošića","Andrije Mohorovičića","Ante Paradžika","Antuna Branka Šimića","Antuna Kanižlića","Antuna Mihanovića","Antunovačka","Bakarska","Banjalučka","Banova","Bapska","Baranjska","Bartula Kašića","Bartula Kašića","Baščanska","Bele Bartoka","Belišćanska","Belomanastirska","Bihaćka","Bilogorska","Biogradska","Biokovska","Biševska","Bjelolasička","Bjelovarska","Bogdanovačka","Bokokotorska","Bosanska","Bračka","Branka Radičevića","Brijunska","Brodska","Brune Bjelinskog","Buzetska","Cara Hadrijana","Cara Hadrijana","Ćelijska","Christiana Monspergera","Ćićarijska","Ciglarska","Creska","Crikvenička","Crkvena","Cvjetkova","Cvjetna","Čvrsnička","Đakovačka","Đakovština","Daljska","Dalmatinska","Danice Pinterović","Daruvarska","Delnička","Diljska","Dinka Šimunovića","Dobriše Cesarića","Donjodravska obala","Dragutina Domjanića","Dragutina Neumana","Drniška","Dubrovačka","Dugog otoka","Erdutska","Esperantska","Eugena Kumičića","Europska avenija","Europska avenija","Fakultetska","Ferde Livadića","Franje Antuna Blažića","Franje Krežme","Franje Kuhača","Franje Markovića","Franje Muckea","Franjevačka","Frankopanska","Fruškogorska","Gluha","Gorička","Gornjodravska obala","Gospićka","Gradačka","Grgura Čevapovića","Hercegovačka","Hrvatske Republike","Huge Conrada Hötzendorfa","Humska","Hvarska","Ilirska","Imotska","Istarska","Ivana Adamovića","Ivana Gorana Kovačića","Ivana Gundulića","Ivana Zajca","Ivane Brlić- Mažuranić","Ivanovačka","Ivanščice","Ive Tijardovića","Izidora Kršnjavoga","Jahorinska","Jankovačka","Josipa Andrića","Josipa Bösendorfera","Josipa Huttlera","Josipa Jurja Strossmayera","Josipa Reihl Kira","Jovana Gojkovića","Južno predgrađe","Kalnička","Kamila Firingera","Kapelska","Kaptolska","Kapucinska","Kardinala Alojzija Stepinca","Kardinala Alozija Stepinca","Kaštelanska","Klanac","Kneza Borne","Kneza Trpimira","Kneza Trpimira","Kninska","Kolodvorska","Kopačevska","Koprivnička","Korčulanska","Kordunska","Kornatska","Kozjačka","Krajna","Kralja Petra Svačića","Kralja Zvonimira","Krčka","Križevačka","Krndije","Krstova","Ksavera Šandora Gjalskog","Kutinska","Kvarnerska","Labinska","Lađarska","Laslovačka","Lastovska","Lavoslava Ružičke","Ledine","Lička","Lipička","Livadska","Ljubljanska","Ljudevita Posavskog","Lokrumska","Lopudska","Lorenza Jägera","Lošinjska","Lovranska","Lučki prilaz","Lugovi","Maceljska","Makarska","Marijana Lanosovića","Marjanska","Martina Divalta","Matije Antuna Reljkovića","Matije Gupca","Matije Petra Katančića","Medulinska","Miholjačka","Mije Kišpatića","Milutina Milankovića","Mlinska","Mljetska","Moslavačka","Mosorska","Mostarska","Motovunska","Murterska","Naselje Antuna Gustava Matoša","Naselje Miroslava Krleže","Naselje Stanka Vraza","Naselje Viševica","Naselje Vladimira Nazora","Našička","Našičko naselje","Nemetin","Nikole Šubića Zrinskog","Novogradiška","Nuštarska","Olibska","Olimpije","Opatijska","Orahovička","Orebićka","Otokara Keršovanija","Paklenička","Pakračka","Palagruška","Palićka","Pampas","Papuk gore","Park kneza Branimira","Park kralja Petra Krešimira IV","Park kraljice Katarine Kosača","Paška","Pašmanska","Pavla Pejačevića","Pazinska","Pelješačka","Perivoj kralja Tomislava","Peručka","Piranska","Platačka","Pleternička","Plitvička","Plješevička","Podgoračka","Podravska","Podvinje","Poljski put I","Porečka","Požeška","Prenjska","Prijedorska","Primorska","Prolaz Ante Slavičeka","Prolaz Carla Bende","Prolaz Josipa Leovića","Prolaz Julija Benešića","Prolaz Julija Knifera","Prolaz kod Snježne Gospe","Prolaz Lorenza Jägera","Prolaz Matice Hrvatske","Prolaz Radoslava Bačića","Prolaz Vanje Radauša","Prominska","Psunjska","Pulska","Rapska","Rastanci","Reisnerova","Reisnerova","Retfala nova","Ribarska","Riječka","Risnjačka","Rovinjska","Ruđera Boškovića","Ružina","Šamačka","Šandora Petofia","Sarajevska","Šarengradska","Sarvaška","Senjska","Šetalište kardinala Franje Šepera","Šetalište kardinala Franje Šepera","Šetalište Petra Preradovića","Šetalište Vjekoslava Hengla","Šibenska","Silvija Strahimira Kranjčevića","Širokobriješka","Sisačka","Sjenjak","Školska","Skopska","Slatinska","Slavonska","Slaz","Šlep u luci","Sljemenska","Snježnička","Šokačka","Solarski trg","Šoltanska","Splavarska","Splitska","Srijemska","Stadionsko naselje","Starigradska","Štitarska","Stjepana Radića","Stonska","Strma","Subotička","Šumska","Sunčana","Sv. Ane","Sv. Petka","Sv. Roka","Svetog Leopolda Bogdana Mandića","Svilajska","Tadije Smičiklasa","Tina Ujevića","Tovarnička","Travna","Trg Ante Starčevića","Trg Augusta Šenoe","Trg bana Josipa Jelačića","Trg Franje baruna Trenka","Trg hrvatskih branitelja","Trg Josifa Runjanina","Trg Jurja Križanića","Trg Lava Mirskog","Trg Lavoslava Ružičke","Trg Ljudevita Gaja","Trg Nikole Tesle","Trg Pape Ivana Pavla II","Trg slobode","Trg sv. Trojstva","Trg Vatroslava Lisinskog","Trogirska","Trpanjska","Tvornička","Učka","Ugljanska","Umaška","Valpovačka","Varaždinska","Vatrogasna","Vatroslava Jagića","Velaluška","Velebitska","Vidove gore","Vijenac Augusta Cesarca","Vijenac Dinare","Vijenac Gorana Zobundžije","Vijenac Ivana Česmičkog","Vijenac Ivana Mažuranića","Vijenac Ivana Meštrovića","Vijenac Jakova Gotovca","Vijenac Josipa Kozarca","Vijenac Ljube Babića","Vijenac Medvednice","Vijenac Murse","Vijenac Paje Kolarića","Vijenac Petrove gore","Vijenac Slavka Kolara","Vijenac Vlahe Bukovca","Vilajska","Vinkovačka cesta","Vinogradska","Virovitička","Virska","Viška","Vjekoslava Klaića","Vjenceslava Novaka","Vladimira Preloga","Vladimira Vidrića","Vlašićka","Voćarska","Voćarska ","Voćinska","Vodenička","Vranska","Vratnička","Vrbik","Vrt Jagode Truhelke","Vrtna","Vukovarska cesta","Vukovarska cesta","Woodrowa Wilsona","Zadarska","Zagorska","Zagrebačka","Zaostroška","Zeleno polje","Zlarinska","Zrinjevac","Zrinske gore","Žumberačka","Županijska","Zvečevska"]})),VY=c((()=>{Pg=["#{street_name} #{building_number}"]})),GY=c((()=>{Lg=["#{street}"]})),HY=c((()=>{Dg=["Pacifik/Midway","Pacifik/Pago_Pago","Pacifik/Honolulu","Amerika/Juneau","Amerika/Los_Angeles","Amerika/Tijuana","Amerika/Denver","Amerika/Phoenix","Amerika/Chihuahua","Amerika/Mazatlan","Amerika/Chicago","Amerika/Regina","Amerika/Mexico_City","Amerika/Monterrey","Amerika/Guatemala","Amerika/New_York","Amerika/Indiana/Indianapolis","Amerika/Bogota","Amerika/Lima","Amerika/Lima","Amerika/Halifax","Amerika/Caracas","Amerika/La_Paz","Amerika/Santiago","Amerika/St_Johns","Amerika/Sao_Paulo","Amerika/Argentina/Buenos_Aires","Amerika/Guyana","Amerika/Godthab","Atlantik/South_Georgia","Atlantik/Azori","Atlantik/Cape_Verde","Europa/Dublin","Europa/London","Europa/Lisbon","Europa/London","Africa/Casablanca","Africa/Monrovia","Etc/UTC","Europa/Beograd","Europa/Bratislava","Europa/Budapest","Europa/Ljubljana","Europa/Prague","Europa/Sarajevo","Europa/Skopje","Europa/Varšava","Europa/Zagreb","Europa/Brussels","Europa/Copenhagen","Europa/Madrid","Europa/Paris","Europa/Amsterdam","Europa/Berlin","Europa/Rim","Europa/Stockholm","Europa/Beč","Africa/Alžir","Europa/Bukurešt","Africa/Kairo","Europa/Helsinki","Europa/Kiev","Europa/Riga","Europa/Sofia","Europa/Tallinn","Europa/Vilnius","Europa/Atena","Europa/Istanbul","Europa/Minsk","Azija/Jeruzalem","Africa/Harare","Africa/Johannesburg","Europa/Moskva","Azija/Kuwait","Azija/Riyadh","Africa/Nairobi","Azija/Baghdad","Azija/Tehran","Azija/Muscat","Azija/Baku","Azija/Tbilisi","Azija/Yerevan","Azija/Kabul","Azija/Yekaterinburg","Azija/Karachi","Azija/Tashkent","Azija/Kolkata","Azija/Kathmandu","Azija/Dhaka","Azija/Colombo","Azija/Almaty","Azija/Novosibirsk","Azija/Rangoon","Azija/Bangkok","Azija/Jakarta","Azija/Krasnoyarsk","Azija/Shanghai","Azija/Chongqing","Azija/Hong_Kong","Azija/Urumqi","Azija/Kuala_Lumpur","Azija/Singapore","Azija/Taipei","Australia/Perth","Azija/Irkutsk","Azija/Ulaanbaatar","Azija/Seoul","Azija/Tokyo","Azija/Yakutsk","Australia/Darwin","Australia/Adelaide","Australia/Melbourne","Australia/Sydney","Australia/Brisbane","Australia/Hobart","Azija/Vladivostok","Pacifik/Guam","Pacifik/Port_Moresby","Azija/Magadan","Pacifik/Noumea","Pacifik/Fiji","Azija/Kamchatka","Pacifik/Majuro","Pacifik/Auckland","Pacifik/Tongatapu","Pacifik/Fakaofo","Pacifik/Apia"]})),FY=c((()=>{DY(),xY(),CY(),KY(),RY(),zY(),OY(),IY(),VY(),GY(),HY(),xg={building_number:Mg,city:Tg,city_name:_g,country:wg,default_country:jg,postcode:Eg,secondary_address:Ng,street:Bg,street_address:Pg,street_name:Lg,time_zone:Dg}})),JY=c((()=>{Cg=["09# ### ####","+385 9# ### ####"]})),UY=c((()=>{JY(),Kg={formats:Cg}})),WY=c((()=>{Rg={wide:["siječanj","veljača","ožujak","travanj","svibanj","lipanj","srpanj","kolovoz","rujan","listopad","studeni","prosinac"],wide_context:["siječanj","veljača","ožujak","travanj","svibanj","lipanj","srpanj","kolovoz","rujan","listopad","studeni","prosinac"],abbr:["sij","vel","ožu","tra","svi","lip","srp","kol","ruj","lis","stu","pro"],abbr_context:["sij","vel","ožu","tra","svi","lip","srp","kol","ruj","lis","stu","pro"]}})),ZY=c((()=>{zg={wide:["nedjelja","ponedjeljak","utorak","srijeda","četvrtak","petak","subota"],wide_context:["nedjelja","ponedjeljak","utorak","srijeda","četvrtak","petak","subota"],abbr:["ned","pon","uto","sri","čet","pet","sub"],abbr_context:["ned","pon","uto","sri","čet","pet","sub"]}})),qY=c((()=>{WY(),ZY(),Og={month:Rg,weekday:zg}})),QY=c((()=>{Ig=["hr","com","net","eu","org"]})),YY=c((()=>{Vg=["gmail.com","hrnet.hr","mailhr.hr"]})),$Y=c((()=>{QY(),YY(),Gg={domain_suffix:Ig,free_email:Vg}})),XY=c((()=>{Hg=["Ada","Adina","Adriana","Adrijana","Agata","Alemka","Alenka","Alisa","Alka","Alma","Amalija","Ana","Ančica","Anamarija","Anastazija","Anci","Anči","Ancica","Anda","Anđela","Anđelika","Anđelina","Andi","Andrea","Andreja","Andrina","Anesa","Aneta","Ani","Anica","Anja","Anka","Antea","Antonija","Asija","Asja","Bara","Barbara","Barica","Beata","Bela","Biserka","Borka","Borna","Božena","Božica","Branimira","Branka","Brankica","Brigita","Dada","Dagmar","Dalibora","Daliborka","Danica","Danijela","Danka","Dara","Darinka","Dea","Ðina","Dona","Donka","Dora","Dorana","Dorica","Draga","Ela","Eli","Elka","Evelin","Ina","Inga","Inge","Inja","Inka","Ita","Iva","Ivančica","Ivanka","Ivica","Ivna","Jagica","Jana","Janica","Janka","Jasna","Jela","Jelica","Ješa","Kata","Kate","Katica","Katija","Katina","Kika","Lara","Laura","Lea","Lela","Lena","Leona","Lola","Maca","Magda","Maja","Majda","Manda","Mara","Mare","Marena","Marica","Marta","Maša","Mica","Mika","Mila","Milica","Milka","Mima","Mina","Mira","Mirka","Naja","Nana","Natalija","Nataša","Natka","Neda","Nela","Neli","Nena","Nera","Nesa","Neva","Nevenka","Nina","Nuša","Paulina","Pava","Pave","Pavica","Rajna","Rija","Rina","Ružica","Staša","Tasa","Teja","Tija","Tijana","Tina","Tončica","Tonija","Tonka","Vala","Valera","Vali","Vela","Velana","Velina","Vera","Verica","Vinka","Zlatica","Zlatka","Darija","Darina","Divna","Donata","Doroteja","Dragica","Dubravka","Dunja","Ðurda","Edita","Elena","Ema","Eva","Gabrijela","Goranka","Gordana","Grozdana","Helena","Hrvojka","Ira","Irena","Irma","Ivana","Jadranka","Jaga","Jasmina","Josipa","Karmela","Katarina","Kristina","Leda","Leonida","Lidija","Ljiljana","Ljubica","Lovorka","Lucija","Magdalena","Marija","Marijana","Marina","Martina","Miranda","Mirna","Monika","Nada","Nadalina","Nedjeljka","Nevena","Nora","Paula","Petra","Renata","Romana","Rosana","Ruža","Sanja","Silvija","Slavica","Snježana","Tereza","Tomislava","Valentina","Valerija","Vedrana","Velimira","Veronika","Vesna","Vladimira","Zdenka","Zdeslava","Zlata"]})),e$=c((()=>{Fg=["Ada","Adina","Adriana","Adrijana","Agata","Alemka","Alenka","Alisa","Alka","Alma","Amalija","Ana","Ančica","Anamarija","Anastazija","Anci","Anči","Ancica","Anda","Anđela","Anđelika","Anđelina","Andi","Andrea","Andreja","Andrina","Anesa","Aneta","Ani","Anica","Anja","Anka","Antea","Antonija","Asija","Asja","Bara","Barbara","Barica","Beata","Bela","Biserka","Borka","Borna","Božena","Božica","Branimira","Branka","Brankica","Brigita","Dada","Dagmar","Dalibora","Daliborka","Danica","Danijela","Danka","Dara","Darinka","Dea","Ðina","Dona","Donka","Dora","Dorana","Dorica","Draga","Ela","Eli","Elka","Evelin","Ina","Inga","Inge","Inja","Inka","Ita","Iva","Ivančica","Ivanka","Ivica","Ivna","Jagica","Jana","Janica","Janka","Jasna","Jela","Jelica","Ješa","Kata","Kate","Katica","Katija","Katina","Kika","Lara","Laura","Lea","Lela","Lena","Leona","Lola","Maca","Magda","Maja","Majda","Manda","Mara","Mare","Marena","Marica","Marta","Maša","Mica","Mika","Mila","Milica","Milka","Mima","Mina","Mira","Mirka","Naja","Nana","Natalija","Nataša","Natka","Neda","Nela","Neli","Nena","Nera","Nesa","Neva","Nevenka","Nina","Nuša","Paulina","Pava","Pave","Pavica","Rajna","Rija","Rina","Ružica","Staša","Tasa","Teja","Tija","Tijana","Tina","Tončica","Tonija","Tonka","Vala","Valera","Vali","Vela","Velana","Velina","Vera","Verica","Vinka","Zlatica","Zlatka","Darija","Darina","Divna","Donata","Doroteja","Dragica","Dubravka","Dunja","Ðurda","Edita","Elena","Ema","Eva","Gabrijela","Goranka","Gordana","Grozdana","Helena","Hrvojka","Ira","Irena","Irma","Ivana","Jadranka","Jaga","Jasmina","Josipa","Karmela","Katarina","Kristina","Leda","Leonida","Lidija","Ljiljana","Ljubica","Lovorka","Lucija","Magdalena","Marija","Marijana","Marina","Martina","Miranda","Mirna","Monika","Nada","Nadalina","Nedjeljka","Nevena","Nora","Paula","Petra","Renata","Romana","Rosana","Ruža","Sanja","Silvija","Slavica","Snježana","Tereza","Tomislava","Valentina","Valerija","Vedrana","Velimira","Veronika","Vesna","Vladimira","Zdenka","Zdeslava","Zlata","Adi","Ado","Andel","Andelin","Andelko","Andelo","Andi","Andras","Andrej","Andrija","Andro","Anko","Ante","Antek","Antonin","Antonio","Antun","Bela","Belimir","Berti","Boris","Borko","Borna","Božidar","Branimir","Bruno","Časlav","Dado","Damil","Damir","Danijel","Dario","Darko","David","Davor","Davorin","Domagoj","Donat","Dražen","Držimir","Držislav","Dubravko","Duje","Dujo","Emil","Emilijan","Erik","Fabijan","Filip","Franjo","Gaj","Gašpar","Goran","Gordan","Gradimir","Grga","Grgo","Grgur","Gvozden","Hrvoj","Hrvoje","Ico","Igor","Ilija","Ilko","Ino","Ivan","Ive","Ivek","Ivica","Ivo","Jadran","Jadranko","Jadro","Jakov","Jan","Janko","Jasen","Jasenko","Josip","Joško","Joso","Joža","Jože","Krešimir","Kristijan","Kruno","Krunoslav","Ladislav","Ljudevit","Lucijan","Luka","Marin","Marko","Martin","Matan","Mate","Matej","Matija","Matko","Mato","Mihael","Milan","Mile","Milivoj","Miljenko","Mimo","Miran","Mirko","Miro","Mislav","Mladen","Nedjeljko","Neven","Nikola","Nino","Ozren","Pavel","Pepo","Pero","Petar","Pravdan","Rino","Robert","Roberto","Robi","Roko","Sanjin","Saša","Slavek","Slaven","Slavko","Srećko","Stanko","Štef","Stipan","Stipe","Stjepan","Stribor","Svebor","Tihomir","Toma","Tome","Tomislav","Tomo","Tonči","Tone","Toni","Tonko","Trpimir","Trpko","Tvrtko","Valentin","Vanja","Vatroslav","Vedran","Velimir","Vijeko","Vjekoslav","Vjenceslav","Vladek","Vladislav","Vlado","Vlatko","Zdenko","Zdravko","Željko","Zoltan","Zrinislav","Zrinko","Zvonimir"]})),a$=c((()=>{Jg=["Abadžić","Abadžija","Abazi","Abdulahi","Abdulić","Abdurahmanović","Abebe","Abel","Abfal","Abičić","Abičić-Tomac","Abjanić","Abjanović","Abrahamski","Abramić","Abramović","Abrecht","Abrić","Abrišin","Abrlić","Abu El Saoud","Ackermann","Ač","Ačai","Ačaji","Ačanski","Ačić","Ačimović","Ačkar","Aćimov","Aćimović","Adam","Adam Perl","Adamček","Adamčević","Adamec","Adamić","Adamko","Adamović","Adašević","Adelsberger","Ademi","Ademović","Adjić","Adjulović","Adler","Adlešić","Ador","Adrić","Adžaga","Adžaip","Adžamić","Adžić","Adžidović","Adžija","Adžijević","Ađaip","Ađajip","Ađamić","Ađanski","Ađić","Ađin","Ađulović","Afrić","Ag","Agami","Agatić","Agbaba","Ageljić","Agh","Agičić","Agić","Agoč","Agostini","Agotić","Agović","Ahić","Ahmedbašić","Ahmetbašić","Ahmeti","Ahmetović","Ahmetspahić","Ahmić","Ajdari","Ajdišek","Ajdovac","Ajduk","Ajduković","Ajfrid","Ajh","Ajhart","Ajhenberger","Ajhinberger","Ajhinger","Ajhler","Ajhner","Ajhorn","Ajkić","Ajro","Ajtlbez","Ajtman","Ajzele","Ajzeli","Akerman","Akik","Akmadžić","Akrap","Aksentijević","Akšamović","AkšamovićAndrić","Al Khamis","Al Laham","Al Younis","Alaber","Alaber Milić","Aladenić","Aladić","AladićLjubišić","Aladrović","Aladžić","Alagić","Alaica","Alaica Vlasalija","Alajbeg","Alajica","Alapović","Alavanja","Alavuk","Alberković","Albert","Albini","Albrecht","Albreht","Albreht Mihaljević","Alduk","Alebić","Alegić","Aleksa","Aleksandrov","Aleksi","Aleksić","Aleksin","Alempić","Alerić","Alfeldi","Alfermann","Alfort","Alibašić","Alibegović","AlibegovićVašanda","Aličić","Alić","AlićPartić","Alidi","Alih","Alija","Alikavazović","Alili","Alilović","Alimanović","Alimehaj","Alimović","Aliti","Alkaz","Alkhamis","Alković","Almadi","Almaši","Alošinac","Alpeza","Alšić","AlšićMatković","Alt","Alt Higeli","Altmann","Aluga","Alukić","Alvadj","Alvadžić","Alvađ","Aljija","Aman","Aman Krnjajić","Amanović","Ambreuš","Ambrinac","Ambroš","Ambrozić","Ambrožić","Ambruš","Ambrušić","Ambruž","Ament","Ameti","Amić","Amidžić","Amiti","Amrein","Amst","Amšlinger","Anastasović","Ancić","Ančić","Andabak","Andabak Fernandez","Andabaka","Andačić","Andel","Andelfinger","Andelić","Anderluch","Andić","Andjal","Andl","Andoči","Andonovski","Andračenko","Andračić","Andraković","Andraković Štefanac","Andraš","Andrašec","Andrašek","Andrašev","Andrašević","Andraši","Andrašić","Andrašić Živalj","Andrečenko","Andrejek","Andrejev","Andrejević","Andreković","Andres","Andri","Andričević","Andričić","Andrić","Andrić Blažević","Andrić Karavidić","Andrić Knežević","Andrić Tomašević","Andrijanić","Andrijašević","Andrijević","Andrijin","Andrik","Andrin","Andrišek","Andrišić","Andriška","Andrlon","Andročec","Androić","Androjić","Androš","Androšević","Androšević Plevnik","Andrušić","Andučić","Andžaković","Anđal","Anđan","Anđel","Anđelić","Anđelković","Anđić","Anđić Grubešić","Anetić","Angalt","Angebrandt","Angirević","Angster","Aničić","Aničić Viviora","Anić","AnićČabai","AnićIvičić","AnićKaliger","AnićTot","Anitić","Anlauf-Raizner","Anočić","Anočić Valentić","Antal","Antal-Meničanin","Antalašić","Antaruk","Antičević","Antić","Antinac","Antolašić","Antolić","Antolković","Antolović","Antoljak","Anton","Antoni","Antonić","Antonijević","Antonina","Antoniutti","Antonović","Antoš","Antrit","Antukić","Antunić","Antunković","Antunov","Antunović","Anušić","Apalović","Apari","Apati","Apatić","Apčag","Apel","Apro","Arab","Arabadžić","Arabašić","Arači","Aračić","Aralica","Arambašić","Aranbašić","Aranđelović","Arap","Arapović","Arbanas","Arbutina","Arc","Ardalić","Arežina","Arhanić","Arić","Arlavi","Arlov","Arlović","Arman","Armbrust","Arnaut","Arnautović","Arnold","Arnuš","Arpaši","Arsenić","Arsenović","Arsić","Arsov","Arsoy","Artić","Artuković","Aručaj","Arvaj","Arvanitakos","Arz","Arzenšek","Asan","Asanov","Asanović","Asentić","Asić","Askočenski","Aslanidis","Astaloš","Asztalos","Ašađanin","Aščić","AščićLuketina","Ašenbrener","Ašimi","Ašner","Ašner-Boli","Ašperger","Ašvanj","Ašvanji","Atalić","Atanacković","Atanasovski","Atlagić","Atlašević","Atlija","Atmadžić","Atvalić","Aubelj","Aubrecht","Aubreht","Augustić","Augustin","Augustinov","Augustinović","Augustinović Baronji","Auguštanec","Auguštin","Ausec","Ausman","Ausmann","Aust","Aušperger","Avdagić","Avdaković","Avdejev","Avdičević","Avdić","Avdija","Avi","Avlijaš","Avramek","Avramoski","Avramović","Avrelio","Avsec","Axmann","Azap","Azapović","Azaševac","Azenić","Azenić Mikulić","Azinić","Azinović","Aziri","Aždajić","Ažić","AžićVargaš","Babac","Babaj","Babaja","Babajić","Baban","Babatz","Babel","Babi","Babičković","Babić","BabićKrižić","Babić Matovinović","Babić Romić","Babić Štern","Babijanski","Babin","Babli","Babli Šandor","Babočai","Babogredac","Babok","Baborac","Baboselac","Baboš","Babović","Babunović","Baburić","Bacalo","Bacanović","Bacelj","Bach","Bachert","Bachmann","Bacho","Backo","Bač","Bača","Bačak","Bačani","Bačarko","Baček","Bačelić","Bačelić Medić","Bačić","Bačić Panić","Bačinski","Bačko","Bačkonja","Bačković","Bačlija","Bačmaga","Bačun","Bačvanin","Bačvanin-Balog","Baćak","Baćani","Baći","Baćin","Baćinac","Badanjak","Badanjek","Bader","Badinsky","Badjuk","Badnjević","Badovinac","Badovinac-Golinac","Badurina","Badža","Badžek","Bađari","Bađun","Bagarić","Bagarić Barišić","Bagić","Baginac","Baglama","Bago","Bagudić","Bahat","Bahert","Bahmajer","Bahmet","Bahović","Bahun","Baić","Bainhart","Bajac","Bajak","Bajakić","Bajalo","Bajamić","Bajan","Bajčetić","Bajči","Bajčinovci","Bajer","Bajer-Vitner","Bajerle","Bajević","Bajhard","Bajhardt","Bajhart","Bajić","Bajinac","Bajkovec","Bajović","Bajraktarević","Bajraktari","Bajram","Bajrami","Bajramović","Bajrektarević","Bajrić","Bajs","Bajs-Jovanović","Bajsić","Bajsman","Bajt","Bajtal","Bajtl","Bajto","Bajus","Bajušić","Bajz","Bak","Baka","Bakač","Bakai","Bakaj","Bakaran","Bakarec","Bakarić","Baketa","Baketarić","Baki","Bakić","Bakija","Baklaić","Bako","Bakoš","Bakota","Baković","Baković Kanižaj","Bakran","Baksa","Baksa-Aćimović","Bakša","Bakula","Bakunić","Bala","Balaban","Balabanić","Balač","Balać","Balai","Balaić","Balaj","Balajić","Balaković","Balanže","Balas","Balaš","Balašević","Balaško","Balašković","Balat","Balatinac","Balaton","Balaž","Balažev","Balažević","Balaži","Balažić","Balažinec","Balčak","Baldasari","Balekić","Balen","Balen-Domazetović","Balent","Balentić","Balentović","Baleta","Balev","Bali","Baliban","Balicki","Baličević","Balić","BalićViola","Balići","Baligač","Balihodžić","Balikić","Baliko","Balinčić","Balind","Balinović","Balint","Balkić","Balković","Balle","Baller","Balliet","Balog","BalogŠandor","Balogh","Baloković","Balonek","Balonek-Nikolić","Balošić","Balta","Balta-Koller","Baltić","Baltin","Balukčić","Baljak","Bambir","Ban","Ban-Ogrin","Bana","Banac","Banai","Banaj","Banaji","Banak","Bančević","Bančić","Banda","Bandalo","Bandić","BandićŠtimac","Bandjak","Bandl","Bando","Bandov","Bandur","Banek","Baneka","Banfi","Banfić","Bango","Baniček","Baničin","Banić","BanićJokić","Bank","Banov","Banovac","Banović","Banožić","Banja","Banjac","Banjan","Banjanac","Banjanin","Banjari","Banjeglav","Banjeglav-Polgar","Banjeglavić","Baotić","BaotićĐaković","Baraban","Baraban-Glavaš","Baraban-Jurišić","Barabaš","BarabašSeršić","Barac","Barač","Barači","Baračkov","Barać","Barać Ključanin","Barak","Baraković","Baran","Baranašić","Baranić","Baranović","Baranj","Baranja","Baranjac","Baranjec","Baranji","Barat","Barbarić","BarbarićŠehić","Barberić","Barbić","Barbir","Barbirović","Barbulović","Barčan","Barčanac","Barčić","Bardak","Bardek","Bardić","Bardy","Bare","Bareš","Barešić","Baretta","Baričak","Baričević","Baričević Moher","Baričević Nađ","Baričjak","Barić","Barićević","Barinić","Barisić","Barišić","Barišić Dugonjić","Barišić Đurić","Barišić Jaman","Barišić Joskić","Barišin","Barišin-Margaretić","Barjaktarević","Barjaktarić","Barjaktarović","Barkić","Barković","Barleković","Barlović","Barna","Barnjak","Baro","Baroka","Baronica","Baronji","Baronji-Zoltan","Barošević","Barović","Bart","Barta","Bartanić","Bartek","Bartok","Bartolac","Bartolec","Bartolić","BartolićBošnjak","Bartoloti","Bartolotti","Bartolov","Bartolović","Bartoluci","Bartoš","Bartovski","Bartowski","Bartsch","Bartula","Bartulac","Bartulić","Bartulin","Bartulović","BartulovićFranković","BartulovićIvanović","Barudžija","Barukčić","Barun","Barun-Petrović","Barunović","Barušić","Barut","Basa","Basar","Basar-Klapec","Basarić","Basić","Basrak","Bassi","Basta","Basta-Glavaš","Bastajić","Bastalić","Bastijan","Baša","Bašan","Bašek","Bašica","Bašić","BašićKljajić","BašićKunce","Baškarić","Bašnec","Baštijan","Bašura","Bašurić","Bat","Batai","Batalo","Batarilo","BatariloĆerdić","Batarilo-Ismailji","Batas","Batina","Batina-Lemund","Batina-Maksimović","Batinac","Batinić","BatinićŠantić","Batistuta","Batki","Batković","Batljan","Batnožić","Bato","Batona","Bator","Batorek","Batori","Batos","Batovanja","Batrac","Batranović","Batrenik","Batrljan","Batrnek","Batrović","Baturina","Bauer","Bauer-Jurić","Bauernfrajnd","Bauernfreund","Bauković","Baum","Bauman","Baumgartner","Baumgertner","Baumholc","Baumstark","Baus","Baus-Mucić","BausŽiga","Bausch","Bayer","Bayer-Stojanović","Bazijanac","Bazikić","Bazina","Baznik","Bazsika","Bažaj","Bažant","Baždar","Bažok","Beara","Beatović","Beck-Pavlović","Bečaj","Bečanović","Bečarević","Bečeheli-Matijašec","Bečirspahić","Bečka","Bečvardi","Bećarević","Bećvardi","Bednaić","Bednajić","Bednar","Bednjanić","Bedžula","Beđan","Begaj","Beganaj","Beganović","Begonja","Begovac","BegovićMitar","Behadžić","Beissmann","Bek-Kohajda","Bekavac","Bekavac-Dugandžić","Beketinac","Bekina","Bektaš","Bekvalac","Bela","Belac","Belačić","Beladović","Belaj","Belajac","Belajdžić","Belajević","Belak","Belan","Belančić","Belanović","Belanji","Belas","Belašić","Belavić","Belcar","Belenzada","Belina","Bellian","BellianŠčekić","Belobradić","Belobrajdić","Belovari","Belščak","Belunjak","Belvanović","Beljac","Beljak","Beljakov","Beljan","Benac","Benaček","Benak","Benaković","Benašić","BenašićPavlović","Bencak","Bencarić","Benchaim","Benčina","Benda","Bendelja","Bendra","Beneta","BenićKapraljević","BenkoĐaković","BenkotićObradović","Benkovac","Bennani","Benja","Benjak","Berač","Beraj","Berak","Beraković","Beram","Beranić","Beranović","Berda","Berdalović","Berdica","Beretovac","Berger-Mihajlović","Bergman","Bergmann","Beribak","Berka","Berke-Maričić","Berlančić","Bermanec","Bernadić","Bernardić","Bernardis","Bernatović","Bernhard","Bernhard-Zajac","Bernhardt","Bernvald","Bernwald","Beronja","Berta","Bertagnin","Bertalan","Bertalanić","Bertanjoli","Bertolan","Bervida","Besednjak","Beslema","Bestvina","Bestvina-Koller","Bešlaga","BešlićFauth","Beštijanek","Bevanda","Bevrnja","Bezik-Haric","Bezjak","Bezmarević","Bežan","Bibanović","Bicsany","Bičak","Bičanić","Bičanji","Bićan","Bićanić","Biderman","Bidlingmaier","Bigava","Biglbauer","Biglebauer","Bihar","Bijader","Bijelica","Bijuklija","Bikadi","Biketa","BikićMrazović","Bilac","Bilač","Bilać","Bilali","Bilan","Bilandžić","BilandžićVukovac","Bilandžija","Bilandžija-Peranović","Bilanđija","Bilanoska","Bilanoski","Bilanović","Bilaver","BilićMartinčević","BilićSubašić","Bilmajer","Bilogravić","Bilokapić","Bilopavlović","Biljak","Biljan","Biljanović","Biljanovski","Bingula","Bionda","Birač","Birać","Birka","Birkaš","Birkenmayer","Birnbaum","Biro-Datković","Bisaga","Bisaha","Bisatzky","Bistrica","Bistrican","Biščanić","Bišćan","Bišćanić","BiškićMerkaš","Bitanga","Bitunjac","Biuklija","Bizacki","Bizacky","Bizjak","Bizjan","Bižaca","Bjelac","Bjelajac","Bjelanović","Bjelica","BjelićFlaake","Bjelka","Bjelobaba","Bjelokapić","Bjeljac","Bježančević","Blače","Blaće","Blagajac","Blagec","Blago","Blagojević","BlagojevićDamašek","BlagojevićGulaš","Blagojevski","Blagović","BlagovićDžakić","Blagus","Blaguški","Blaha","Blanda","Blank","Blanuša","Blaščanin","Blaškić","Blaško","Blaško-Vidosavljević","Blašković","BlaškovićKokeza","Blatančić","Blatnik","Blazević","Blazi","Blažanin","Blažanović","BlažanovićMatijević","Blažej","Blažek","Blažeka","Blažeković","Blaženčić","Blaženović","Blažeski","Blažetić","Blažetin","Blažev","Blaževac","Blažević","BlaževićGaćeša","BlaževićMešter","BlaževićPoč","BlaževićPrgomet","Blaževski","Blažičević","Blažić","Blažićević","Blažina","Blažinac","Blažinčić","Blažinić","Blažinkov","Blažon","Blažoti","Bliznac","Bliznac-Jelčić","Bluha","Bobalić","Boban","Bobera","Bobeta","Bobinac","Boboćanin","Bobonja","Bobovčan","Boca","Bocka","Bockovac","Bockovac-Kunštek","Boczka","Bočanji","Bočina","Bočkai","Bočkaj","Bočkinac","Boćan","Boda","Bodakoš","Bodalec","Bodiroga","Bodražić","BodrožićDžakić","Boduljak","Bodza","Bođanac","Bogadi","Bogar","Bogataj","Bogati","Bogatić","Bogatin","Bogatirov","Bogavac","Bogdan","Bogdan-Rudeš","Bogdan-Trnka","Bogdanić","Bogdanović","Bognar","Bognar-Miletić","Bogojevac","Bogosanović","Bogosavljević","Bohaček","Bohak","Bohalj","Bojanc","Bojanić","BojanićČalić","Bojanin","Bojanović","Bojat","Boka","Bokan","Bokanović","Bokonja","Bokovac","Bolanča","Bolarić","Boldižar","Bolf-Kovačić","Bolkovac","Bolmanac","Bolmanović","Boloban","Bolot-Salaj","Bolozan","Bolta","Boltadžija","Boltađija","Bolvanac","Bolvar","Bolvari","Boljevac","Boljkovac","Bomeštar","Bonjaj","Boras","Boras-Pintar","Borbaš","Borda","Borevac","Borgudan","Borjan","Borjanić","BorojevićCrevar","Boromisa","Boroša","Borota","Borovac","Borovička","Borovićka","Borozan","Borščak","Borzan","Bosak","Bosanac","Bosanac-Balašević","Bosanac-Hummel","Bosanac-Wilhelm","Bosančić","Bosanić","Bosankić","Bosiljevac","Bosjak","Bosnar","Boščanin","Bošćak","Bošnjak","BošnjakĆirić","BošnjakĐerfi","Bošnjak-Franjo","Bošnjak-Klečina","Bošnjak-Krajšić","Bošnjak-Mikulić","Bošnjak-Pleškov","Bošnjak-Vadkerti","Bošnjaković","BošnjakovićGrgić","BošnjakovićHolik","BošnjakovićZakanji","BošnjakovićZetl","Bota","Botkuljak","Boussa","Bozalo","Bozaroski","Božac","Božak","Božanović","Božičanin","BožićErkalović","BožićKrstanović","Božićek-Panić","Božidar","Božika","BožinovićMađor","Božinovska","Božučanin","Brabec","Brač","Bračevac","Bračevac-Belaj","Bračić","BračićDevald","Bračko","Bračun","Brać","Bradač","Bradarić","BradarićKalkan","Bradašević","Bradašić","Bradek","Bradičić","Bradić","Bradvica","Bradvić","Brađašev","Brađić","Brahaj","Braić","Brainović","Brajčinović","Brajdić","Brajenović","Brajić","Brajinović","Brajko","Brajković","BrajkovićCulek","BrajkovićVican","Brajnović","Brajović","Brajtenbah","Brakić","Bralić","Bralo","Bralj","Brana","Brandafi","Brandalik","Brandeis","Brandeker","Brandibur","Brandić","Brandis","Brandt","Branežac","Branilović","Brankov","Branković","Braović","Braš","Brašnić","BrašnićAdžić","BrašnićEži","Brataljenović","Bratanović","Bratec","Bratelj","Bratić","Bratonja","Bratoš","Bratuševac","Braun","Bravić","Braz","Brazda","Brazdil","Brazzi","Brčina","Brdar","Brdarić","Brđanin","BreberićBradić","Breberina","Bredak","Breitenbach","Brekalo","Breljak","Brenđan","Breskovac","Brestovac","Breščaković","Brezak","Brezenjački","Brezinšak","Brezinščak","Brezinšćak","Brezničar","Brezovac","Brezovnjački","Brežnjak","Brijaček","Brijader","Brindza","Brinjak","Brisuda","Briševac","Brizgala","Brižan","Brkan","Brkanić","BrkanićNekić","Brkanović","BrkićBlažeković","Brkinjač","Brkljač","Brkljačić","BrkovićKrpan","Brlas","Brljačić","Brna","Brnada","Brnadić","Brnas","BrnićLevada","Brnjak","Brnjevarac","Brnjica","Brodar","Brodarac","Brodarić","Brodnjan","Brođanac","Bršadinac","Brtan","Brubnjak","Brumen-Stanojlović","Brumerček-Lukačević","Bruneta","Brunjai","Brunjai-Hihlik","Brusač","Brzaj","Brzica","Brženac","Bubalo","Bubalović","Buban","Bubanović","Bubanj","Bucalo","Bucha","Buchwald","Bucifal","Bučan","Bučanac","Bučanin","Bučanović","BučevićKeran","Bučkalović","Bućan","Bućkalović","Budač","Budai","Budaić","Budaija","Budak","Budalić","Budano","Budija","Budimac","Budimčić-Kovačević","Budimir-Bračevac","Budimir-Pacek","Budimir-Selina","Budimir-Varžić","Budimirac","Budimlija","Budiša","Budrovac","BudrovacŽivić","Budulica","Budžaki","BuđićHalas","Bugarić","Bugarin","Bugarinović","Bugarski","Buha","Buhač","Buhajčuk","Buhinjak","Buinac","Buinjac","Bujadinović","Bujak","Bujan","Bujanović","Bujda","Bujela","Bukal","Bukalo","Bukarica","BukićMilardović","Buklijaš","Bukna","Bukovac","Bukovčak","Bukta","Bukumira","Bukva","Bukvašević","Bukvica","BukvićŠpika","Bula","Bulaić","Bulaja","Bulajić","Bulaku","Bulat","Bulatović","Buletinac","Bulka","Bulka-Barišić","Buljan","Buljanović","Buljat","Buljeta","Buljubašić","BuljubašićDakić","BuljubašićKuzmanović","Bumbak","Bumbar","Bunardžija","Bunarđija","Bunarkić","Bundalo","Buneta","Bunoza","Buntak","Bunjac","Bunjaković","Bunjaku","Bunjevac","Bunjevac-Došen","Bunjevac-Milivojević","Bunjevac-Turalija","Bura","Buranji","Buratović","Burazer","Burazer-Turko","Burazin","Burazor","Burcar","Burcar-Keri","Burcsa","Burča","Burda","Burdina","Burđak","Burian","Burijan","Burivoda","Burja","Burjan","Burnać","Bursać","Burza","Busak","Busanić","Buschbacher","Buschman","Buslaver","Buša","Bušbaher","Bušbaher-Oberkirš","Bušetinčan","Bušljeta","Bušpanović","Butifar","Butina","Butinar","Butorac","Butorajac","Butraković","Butulija","Buturac","Buzadžić","Buzaši","Buzina","Buzinac","Buzjak","Bužalja","Bužančić","Bužanec","Bužanić","Bužbaher","Bužonja","Bužonja-Bodiš","Cabadaj","Cabuha","Cabunac","Cacaj","Cacciamani","Cader","Cafuk","Cafuta","Caga","Cahunek","Cajner","Cajzler","Cakić","Cako","Caktaš","Camai","Candl","Canecki","Cangajst","Cangl","Canjko","Canjko-Novak","Canjuga","Capan","Capek","Capić","Car","Carbone","Carek","Carette","Carević","Carić","Carin","Cartl","Catania","Cats","Cavrić","Cazi","CebićMarković","Cecelja","Cehmajster","Celan","Celjak","Cembauer","Cenbauer","Centa","Cepanec","Ceranić","Cerenko-Maletić","Cergnar","Ceribašić","Cerjak","Cerjan","Ceronja","Cerovac","Cerovečki-Marijić","Cesar","Cesarec","Cestar","Cetina","Cezar","Cezner-Bačić","Chadima","Cibula","Cicak","Cickai","Cickaj","Cickaji","Cicvara","Cicvarić","Cigan","Ciganek","Ciganović","Ciganjik","Cigula","Cikač","Cikoja","Cikota","Cikovac","Cimaš","Cimerman","Cimeša","Cimperšak","Cincar","Cinna","Cipan","Cipar","Ciprijanović","Ciprovac","Cirak","Ciraki","Cirbaj","Civaj","Civalj","Cmiljanić","Cmrečak","Cmrečnjak","Coha","Colarić","Colnarić","Conway","Conjar","Copak","Cota","Crepulja","Crevar","Crljenica","Crnac","Crnadak","Crnajlov","Crnčan","Crnobrnja","Crnobrnja-Bošnjak","Crnobrnja-Vincetić","Crnogaj","Crnogaj-Kozari","Crnogorac","Crnoja","Crnojevac","Crnokraka","Crnomarić","Crnomarković","Crnjac","Crnjak","Crnjaković","Crnjanović","Crnjanski","Crvenka","Csapo","Csicska","Csorba","Csordas","Cugovčan","Culek-Sudar","Culifaj","Culjak","Cunjak","Curač","Cuvaj","Cvančić","Cvelbar","Cvetanić","Cvetanović","Cvetanovski","Cvetanovski-Bundalo","Cvetičan","Cvetičanin","Cvidrak","Cvijančević","Cvijanović","Cvitan","Cvitanović","Cvitanušić","CvitkovićBocka","Cvjetićanin","Cvrtak","Cvrtila","Cvrtnjak","Czersky Hafner","Czickai","Czulan","Čabai","Čabaj","Čabaj-Adam","Čabarkapa","Čabraja","Čabrajac","Čabrić","Čabrilo","Čabro","Čačić","ČačićArapović","ČačićČasar","Čačija","Čačija-Dombik","Čačilo","Čačinović","Čačković","Čačulović","Čaće","Čaćija","Čadek","Čadeš","Čađavčan","Čađo","Čagalj","Čaglić","Čagljević","Čaić","Čajan","Čajić","Čajka","Čajko","Čajkovac","Čajkušić","Čajlaković","Čajo","Čakalić","Čakalo","Čakar","Čakardić","Čakarević","Čakarić","Čakarun","Čakić","Čaklović","Čakmak","Čakvari","Čaldarević","Čale","Čaleta","Čalić","Čališ","Čalo","ČaloČirjak","Čaloš","Čalošević","Čalović","Čalušić","Čaljkušić","ČaljkušićForgić","Čamagajevac","Čamber","Čamdžić","Čamić","Čamilović","Čampara","Čanačić","Čanadi","Čanadić","ČanadićFrelih","Čanadžija","Čanaglić","Čanak","Čanaki","Čanakin","Čančar","Čanda","Čandrlić","ČandrlićDankoš","ČandrlićFalajdžić","ČandrlićMesarić","Čango","Čanić","Čanović","Čanžar","Čanji","Čapai","Čapalija","Čapalski","Čapelj","Čapin","Čaplar","Čapo","Čapo-Milenić","Čar","Čarap","Čarapar","Čarapić","Čarapović","ČarapovićRanogajec","Čardžić","Čarnohorski","Časar","Časar-Lakatoš","Čataj","Čatalinac","Čati-Sabo","Čatić","Čatipović","Čatoš","Čatović","Čauš","Čaušević","Čaušić","Čaut","Čavajda","Čavala","Čavalić","Čavar","Čavara","Čavarović","Čavarušić","Čavčić","Čavić","Čavka","Čavka-Kakaš","Čavlek","Čavlina","Čavlović","Čavrag","Čavužić","Čečavac","Čečura","Čegar","Čehajić","Čehobašić","Čehumbašić","Čeika","Čejka","Čelan","Čelant","Čelar","Čelebija","Čeleda","ČelikovićCvidrak","Čelna","Čeljuska","Čeman","Čemerika","Čenaj","Čenan","Čendak","Čengija","Čeprnja","Čeran","Čerba","Čergar","Čeri-Varga","Čerina","Čerkašin","Černava","Černoga","Černjanski","Černjava","Čertan","Červenjak","Češljar","Češnjaj","Čevrljaković","Čibarić","Čiča","Čičak","ČičinĆapin","Čička","Čičmak","Čičovački","Čičovački-Buzatović","Čikaj","Čikara","Čikvar","Čimbora","Čimbura","Činčak","Činčurak","Činčurak-Kovač","Čipan","Čipanj","Čipanj-Banja","Čirjak","Čisar","Čitari","Čivčija","Čizmadija","Čizmar","Čizmar-Tormaš","Čizmarević","Čizmazija","Čizmešija","Čižmarević","Čižmešija","Čmarec","Čmelak","Čobanović","Čočaj","Čoćaj","Čogelja","Čohodar","Čoka","Čokaš","Čokljat","Čokonai","Čolak","Čolaković","Čolina","Čonda","ČondićBijader","Čonka","ČontošBalog","Čorak","ČorakŠebetić","Čoralić","Čorapović","Čorba","Čorda","Čordaš","Čordašev","Čordašić","Čorluka","Čortan","Čota","Čotar","Čotra","Čovran","Črešnjovnjak","Čubela","Čubra","Čučak","Čudina","Čugalj","Čugura","Čuha","Čuka","Čukalevski","Čukanec","ČukićAladrović","Čukman","Čular","Čulibrk-Walch","Čulin-Lazić","Čulina","Čuljak","Čuljat","Čupurdija","Čuraj","Čurar","Čurčija","Čurila","Čurman","Čustonja","Čutoraš","Čutura","Čuturaš","Čuturilo-Petrač","Čuvalo","Čvagić","Čvangić","Čvarak","Čvarković","Čvorak","Ćaćić","Ćaćulović","Ćajić","Ćakić","Ćale","Ćaleta","Ćalić","Ćališ","Ćalošević","Ćalušić","Ćamili","Ćano","Ćapin","Ćaran","Ćatić","ĆatićKopf","Ćavar","Ćavara","Ćavarović","Ćehajić","Ćelap","Ćemalović","Ćemalović Tompa","Ćenan","Ćeran","Ćerluka","Ćibarić","Ćika","ĆirićLitobac","Ćiško Anić","Ćoja","Ćojbašić","Ćora","Ćorak","Ćoralić","Ćoranov","Ćorda","Ćorluka","ĆosićMihaljević","ĆovićRadojčić","Ćubela","Ćuća","Ćudina","Ćulina","Ćupurdija","Ćuraj","Ćurak","Ćurčija","ĆurićBatić","Ćuruvija","Ćuti Ivanković","Dabac","Dabčević","Dabić","Dabnjak","Dabo","Dabović","Dacić","Dačić","Dadasović","Dadić","DadićFabijanić","Dado","Dafish","Dagen","Dajč","Dajčman","Dajić","Dajnek","Daka","Dakić","DakićKožić","Dako","Daković","Daku","Dalić","Dalip","Dalipi","Dalleaste","Dalmatin","Dalšašo","Damašek","Damiani","Damijanić","Damijanović","Damjanić","Damjanov","Damjanović","Damjenić","Damljanović","Damm","Dananić","Dančo","Dandić","Danenhauer","Dani","Daničić","Danić","Danilčević","Danilović","Dankić","Danko","Dankoš","Danojević","Danojlić","Danji","Darabošić","Daražac","Daraždi","Daraži","Dardai","Dardalić","Dardić","Darić","Darojković","Daskalov","Daskalova","Dasović","Dašić","Datković","Dautbegović","Dautović","David","David Tomaz","Davidović","DavidovićAmić","Davorija","Day","De Angelis","De Brabander","De Conceicao","De La Fosse","De Maio","De Marco","Deak","Dean","Deanković","Deanović","Debelak","Debelja","Debeljački","Debeljak","DebićPavlica","Degač","Degoricija","Dejak","Dejanović","Dekan","Dekanić","Dekany","Dekanj","Deklman","Dela","Delač","Delagić","DelagićKušec","Delalić","Delalle","Delaš","Delbianco","Delbijanko","Delbjanko","Delibašić","DelićBrzica","Delija","Delimar","Delizvani","Deljak","Deljak Franjo","Demetar","Demhart","Demše Plavšić","Denac","Dengoricija","Denša","Dera","Deran","Dernaj","Dernej Janković","Dernik Katalin","Desančić","Desaty","Deskar","Desnica","Despot Slade","Devald","DevčićKatić","Devernaj","Devetak","Devetak Prokeš","Dežmarić","Di Carlo","DidovićJančo","Digula","Digula Biljak","Dijak","Dijaković","Dijanić","Dijanović","Dijkgraaf Larson","Dimjašević","Dimnjašević","Dimovska","Diniz De Carvalho","Dinjar","Divac","Divald","Divić Čanić","Divjak","Divjanović","Divljaković","Dizanov","Dizdar","Dizdarević","Djak","Djak Skeledžija","Djaković","Djambo","Djanić","Djanija","Djapić","Djekanović","Dješka","Djetka","Djetvai","Djeveljekaj","Djevenica","Djomlija","Djurasek","DjurdjevićSanela","Djurita","Dlab","Dmejhal","Dobaj","Dobaj Ristić","Dobo Tivadar","Dobra","Dobranić","Dobraš","Dobreta","Dobričanin","Dobrić Vizentaner","Dobrinić Bogdanović","Dobrosavljević","Dobroslovački","Dobrota","Dobrovac","Dobrovoljac","Dobrovšak","Dobsai","Dočaj","Dofatić","Dogan","Dohnal","Dokletal","Dokmanac","Dokmanović","Doknjaš","Dokonal","Dokoza","Dokšanović","Dolaček","Dolački","Dolančić","DolančićBabić","Dolanski","Doležal","Dolinac","Doljan","Doljanac","Doljanin","Doljankić","Doma","Domac","Domačinović","Domaćinović","Domančić","Domanovac","Domazet","Domazet Bezmalinović","DomazetŠimica","Domazetović","Dombaj","DomesČamagajevac","Domijan","Domjan","DomjanićRuff","Domjanović","Domladovec","Domladovec Ljikar","Domljan","Domnjak","Domorad","Domožvai","Domša","Donard","Doppelhammer","Dopsai","Dopsaj","Dopša","Dora","Dorčak","Dori Vukas","DorićRapaić","Dorinka","Dorman","Dornštauder","Dornjak","Dorušak","DorušakŠeper","Dostal","Dostan","Doša","Došan","Došljanović","Dotlić Plessa","Dovčak","Dovozalović","Dozan","Doža","Drabek","Drabek Milekić","Drač","Drača","Dračić","Dragalić","Draganić","Draganović","Dragaš","Dragčević","Dragelj","Drager","Dragičević","Dragić","Dragila","Dragin","Draginić","Dragišić","Dragojević","Dragojlov","Dragojlović","Dragoljević","Dragomir","Dragomirović","Dragosavac","Dragosavljević","Dragović","DragovićKovač","DragovićZafred","Dragovoljnović","Dragozet","Dragšić","Draguljić","Dragun","Dragunić","Dragušica","Dragušić","Dragušin","Drahokoupil","Drahotuski","Drahotusky","Drakčić","Drakić","Drako","Draksler","Drakšić","Drakulić","Drakulić Karač","Dralić","Dramac","Dramlić","Drapela","Drapela Maravić","Draščić","Drašinac","Drašinac Kurtagić","Drašković","Dravec","Dravinac","Dravinski","Dravoj","Dražan","Draženović","DraženovićPuhar","Dražetić","Dražić","Drča","Drda","Drenovac","Drenjačević","Drenjanac","Drenjančević","Drenjančević Cigler","Drenjančević Perić","Drežnjak","Drga","Drgalić","Drinovac","Drinjak","Drljača","Drljača Božić","Drljanac","Drljepan","Drnasin","Drobac","Drobila","Drobina","Drobnjak","Droca","Drokan","Dropulja","Drpa","Druhar","Družianić","Družijanić","Drvenica","Drvenkar","Držaić","Držajić","Držaljević","Držanić","Dubac","Duba ađ","Dubaić","Dubičanac","Dubovečak","Dubravac","Dubravčić","Dubravec","Dubravkić","Dubroja","Duda","Dudarin","Dudas","Dudaš","Dudašek","Dudjak","Dugac","Dugački","Dugaja","Dugalić","DugalićDelimar","Dugančić","Dugandžić","Dugandžija","Duganđić","Duganđija","Dugina","Dugošija","Duhaček","Dujak","Dujaković","Dujan","Dujanović","DujmovićAquaro","Duka","Dukanović","Dukarić","DukarićPetriš","DukarićSenaši","Dukmanić","Dukovac","Dulemba","Dumančić","Dumandžić","DumenčićBauer","DumenčićJanson","Dunai","Dunaj","Dunjak","Dupan","Dupca","Dupljak","Duraković","Duran","Duranović","Duspara","Dusparić","Dušak","Dušanek","Dušanić","Dutina","Duvančić","Duvnjak","DuvnjakČuljak","Duvnjak Jović","Duvnjak Starčević","Duždagić","Dvizac","Dvojak","Dvorščak","Dvoršćak","Dvoržak","Dvoržak Butković","Džaferovski","Džafić","Džafran","Džaić","Džaja","Džajić","Džaka","Džakić","Džakmić","Džakula","Džal","Džalo","Džalto","Džambas","Džambić","Džambo","Džananović","Džanić","Džanija","Džankić","Džanko","Džapo","Dželadini","Dželajlija","Dželalija","Dželalija Kovačić","Džidžora","Džijan","Džodanović","Džopalić","Đaferi","Đaferovski","Đafić","Đafran","Đaić","Đajić","ĐajićFel","Đakalović","Đakovac","Đaković","Đakulović","Đalić","ĐalićKovačević","Đambić","Đambo","Đana","Đanić","Đanija","Đaniš","Đanković","Đapić","Đebnar","Đekemati","Đelagić","ĐelagićPetek","Đelatović","Đenadić","Đenadija","Đenovljanović","Đerdak","Đeri Krpan","Đeri Sabo","Đermanović","Đetvai","Đetvaj","Đida","Đidara","Điđura","Đipalo Ban","Đipanov","Đogaš","Đomlija","ĐonlagićPrutki","Đopa","Đopar","Đordan","Đošanović","Đuđar","Đuđik Kućan","Đukanović","Đukarić","Đula","Đulabić","Đulinac","Đumija","Đumlija","Đunda","Đunđa","Đuračić","Đurački","ĐuračkiĆosić","Đuračković","Đurak","Đurak Kapetanović","Đuraki","Đurakić","Đuraković","Đuran","Đuranić","Đuranović","Đuras","Đurasek","Đurasević","Đurasinović","Đurasov","Đurasović","Đurašević","Đurašić","Đurašin","Đurašinović","Đurčak","Đurčanski","Đurčianski","Đurđan","Đurđanović","ĐurđevićFabijanić","ĐurđevićMaršić","Đurica","ĐuričićTabaček","ĐurićIvandija","Đurinovac","Đurinjak","Đurita","Đurkan","Đurkas","Đuza","Eberhardt","Eckhard","Eckhardt","Egredžija","Ehman","EiseleŽampach","Ekart","Ekštajn","El Aydy","El Ayedi","El Hag Hassan","Elaković","Elezaj","Eliaš","Elijaš","Elkaz","Elkazović","Elmazovski","Eljuga","Eman","EmićTomac","Emrulai","Engelage","Engelhart","Engelman","Erak","Ercegovac","Ercegovac Jagnjić","Erdutac","Eremija","Ergarac","Ergeđija","Ergelašević","Erhard","Erhardt","Erjavac","Erkalović","Erkapić","Erkapić Maksimović","Erkman","Erman","Erman Vlahović","Erniša","Erslan","Ervačić","Ervaćanin","Esterajher","Etemaj","Eustahio","Ezgeta","Fabčić","Fabekovac","Faber","Fabian","Fabijan","Fabijanac","Fabijančić","Fabijanec","Fabijanić","Fabijanović","Fabik","Fabing","Fabing Megan","Fabjan","Fabo","Faboš","Fabric","Fabrični","Fabulić","Faculjak","Fačko","Faddi","Faddy","Fadi","Fadi Oršić","Fadiga","Fadljević","Fafanđel","Fahham","Faić","Fais","Faist","Faith","Faj","Fajdetić","Fajdić","Fajfer","Fajl","Fajn","Fajrer","Fajt","Fak","Faktor","Faktorik","Falamić","Falanić","Falašta","Faledžić","Faler","Falica","Fališevac","Faller","Faltum","Fanali Gudelj","Fančović","Fanta","Fanton","Fapal","Fapali","Fara","Farac","Faraga","Farago","Faraho","Farčić","FarčićDori","Farkaš","FarkašMiketek","Farkaševac","Farkašić","Faslija","Fašeljak","Fašing","Fatić","Fatušić","Faubel","Faukal","Faussner","Fazekaš","FazekašMilanović","Fazikaš","Fazlić","Fazlija","Fazliji","Fažon","Feglain","Feher Belaj","Feher Delaš","Fehervari","Fehervary","FehirČandrlja","Fejzaj","Fekete Kramar","Fekete Pavković","Feketija","Fekonja","Felcan","Feldvari","Feldvary","FelendešPajcur","Feletar","Felja","Feratović","Ferčak","Ferenac","Ferenčak","Ferenđa","Ferhatović","Ferinac","Ferjanić","Fernandez","Fetahi","Fiala","Fiala Brig","Fica","FicaŠmit","Fijačko","Fijala","FijanŠkrbić","Fila","Fila Paciorek","Filak","Filakov","Filakov Bolšec","Filaković","FiličićParipović","Filipan","Filipašić","FilipovićKerhat","Filisar","Filjak","Findžanović","Fingernagel","Finta","Fintajz","Firanj","Firi Vidaković","Fischbach","Fischbach Novaković","Fistanić","Fišbah","Flac","Flach","Flačer","Flajc","Flajs","Flajšaker","Flajšek","Flajšer","Flam","Flaman","Flanjak","Flaško","Flatscher","Flauder","Flegar","Flegarić","Fletko Vrućina","Flisak","Fliszar","Floreani","Florian","Florijan","Florijančić","Fluhar","Fodora","Fogadić","Foldvary","Folivarski","Forbah","ForgićPolaček","Forgomba","Forjan","Forjanić","Formbaher","Fotak","Fraj","Frajlić","Frajman","Frajman Jakšić","Frajmund","Frajt","Frajtag","Fran","Franc","Francem","Francetić","Francezi","Franchomme Strepački","Francišković","Franculić","Francuz","Francuzović","Frančak","Frančešević","Frančić","Frančina","Franek","Frangeš","Franić","Frank","Frank Peko","Frankić","Franković","Franolić","Franotović","Franov","Franović","Frant","Franz","Franjčević","Franjec","Franjetić","Franjičević","FranjičevićGašparac","Franjić","FranjićAbramić","FranjićAdrić","FranjićBartolović","FranjićGrgić","FranjićZelić","Franjin","Franjišić","Franjkić","Franjković","Franjo","Fras","Fratrić","Fratrović","Frauenheim","Frazi","Freitag","Fričan","Frigan","Frtalj","Fučkalo","Fučkar","Fućkar","Fuga","Fulanović","Funarić","Funda","Fundak","Funtak","Funjak","Furda","Furdi Valkai","Furgala","FurgalaŠuper","Furjan","Furlan","Fury Marković","Fuštar","Futak","Fužinato","Gabaj","Gabajček","Gabela","Gabelica","Gabelić","Gaberšek","Gabina","Gabor","Gabori","Gaborović","Gabrić","Gabud","Gača","Gačanović","Gačar","Gačić","Gačina","Gačpar","Gaća","Gaće","GaćeŠobat","Gaćeša","Gaćina","Gaćinović","Gadanac","Gado","Gadža","Gadžić","Gađa","Gafuri","Gages","Gagić","Gagro","Gagula","Gagulić","Gaić","Gajari","Gajčević","Gajčić","Gajdašević","Gajdašić","Gajdek","Gajdoš","Gajdošik","Gajec","Gajer","Gajger","Gajgić","GajgićMatić","Gajić","GajićGrac","GajićLukin","GajićPope","Gajnok","Gajs","Gajski","Gajšek","Gajtan","Gajvaronski","Gajzer","Gajzinger","Gajzler","Gakić","Gal","Galac","Galamboš","Galba","Gale","Galeković","Galenić","Galešić","Galeta","Galetić","Galgoci","Gali","Galic","Galičić","Galić","GalićBotić","GalićSubašić","Galijašević","Galin","Galinac","Galinec","Galinović","Galiot","Galir","Galkovski","Gall","Gallo","Galo","Galonja","Galošević","Galovac","Galović","Galunić","Galušić","Galjar","Galjer","Gambiraža","Gambiroža","Gamilar","Gamma","Gamoš","Gams","Ganić","Gansberger","Gantar","Gantner","Ganz","GanzŽuparić","Ganzberger","Garac","Garacki","Garača","Garačić","Garai","Garaj","Garajski","Garašić","Garc","Gardaš","GardašKovačić","Gardašanić","Gardijan","Gardilo","Gardlik","Gardlo","Garić","Garmaz","Garonja","Gartner","Garvanović","Gas","Gashi","Gasparović","Gašić","Gašo","Gašpar","Gašparac","Gašparček","Gašparević","Gašparić","GašparićMeter","Gašparlin","Gašparović","Gašpert","Gašpić","GašpićVrtarić","Gatara","Gati","Gaube","Gaukler","Gavenda","Gavić","Gavlek","Gavlik","Gavljak","Gavra","Gavran","Gavranić","Gavranović","Gavranović Vilić","Gavrić","Gavrilović","Gavrovski","Gazdag","Gazdek","Gazdić","Gazdik","Gazdik Ivančić","Gazibara","Gazibarić","Gazić","Gazilj","Gaža","Gažić","Gažo","Gebaj","Gebhardt","Gecan","Gegenbauer","Geiersbach","Gelemanović","Genda","Generalić","GeneralićČok","Genjega","Gerard","Gerard Špišić","Gerasimenko","Gerbač","Gerencser Đelatović","Gerendaj","Gerhard","Gerhardt","Gernhardt","Gerovac","Gerovac Vuković","Geršak","Gerštmajer","Gerštmajer Zelember","Getoš Magdić","Getto Šmit Strapač","Giba","Giber Janša","Gibičar","Gidija","Gilman","Giljanović","Giordani","Gispert Nicolau","Gita","Gitta","Gizešan","Gjaić","Gjalić","Gjelatović","Gjuračić","Gjurakić","Gjurgjan","Gjurinovac","Glad","Gladić","Gladoić","Gladović","Glamočić","Glamuzina","Glas","Glas Puškadija","Glasenhardt","Glaser","Glasnović","Glasovac","Glaurdić","Glavač","Glavačević","Glavačić","Glavačko","Glavak","Glavan","Glavaš","GlavašKonja","GlavašKul","GlavašLilion","GlavašLukić","GlavašNikolić","GlavašObrovac","Glavašević","Glavašić","Glavaški","Glavati","Glavica","Glavić","Glavina","Glavinac","Glavinić","Glavočević","Glavota","Glavurdić","Glazer","Glibanović","Glibanski","Glibota","Gliesmann","Gliša","Glištra","Glogač","Glova","Gluaković","Glück Krstanović","Glück Radičević","Gluhak","Gluhaković","Gluhalić","Glumac","Glumpak","Glušac","Gluvak","Gluvaković","Gljiva","Gljivica","Gmajnić","Gmaz","Gnand Mijatović","Gnant","Gnjaić","Gnjajić","Gnjatović","Gočal","Goda","Godan","Godanj","Godar","Gogojak","Gogolak","Gogoljak","Gogoljak Kesić","Gojaković","Gojtan","Golemac","GolićRonta","GolićSamaržija","Golinac","Goll Barić","Golub Kostolanović","Golubar","Golubovac","Goluska","Goluška","Goluža","Goluža Gregačević","Goljak","Goljevački","Goman","Gombai","Gombaj","Gombar","Gombarović","Gombay","Gongeta","Gorela","Gorenac","Gorenjak","Gorera","Goreta","Gorgioska","Goričanec","Gorjan","Gorjanac","Gorjanac Mitoš","Gorjanc","Gorjanski","Goronja","Gorša","Goršak","Goršćak","Goruševska","Gostić Manojlović","Gošak","Gotal","Gotovac","Gotvald","Gounaris Sučić","Govedarica","Grabar","Grabarić","Grabež","Grabić","Grablović","Grabovac","Grabovački","Grabovčić","Grabović","Grabrovec","Grabrović","GrabrovićBabić","Grabundžija","Grabus","Grabusin","Grac","Gracek","Gracel","Gracer","Gracin","Gračak","Gračan","Gračanić","Gračanin","GradŠtanac","Gradaščević","Gradečak","Gradečak Erdeljić","Gradeček","Gradička","Gradić","Gradinščak","Gradinjan","Gradišar","Gradištanac","Gradvol","Gradvol Krmpotić","Graf","Grafina","Grah","Grahovac","Grahovac Bister","Grahovac Cvenić","Grajner","Gramec","Granat","Granc","Grančić","Grandić","Grandl","Granić","Granoša","Graora","Graovac","Graša","Grašar","Grašarević","Grašić","Grašo","Gratz","Grba","Grbac","Grbac Budin","Grbačić","Grbavac","Grbavica","Grbeša","Grbeša Petrinšak","Grđan","Grebenar","GrebenarŽarmen","Gregačević","Greganić","Greganić Ternaj","Greganović","Gregić Njirjak","Gregorac","Gregoran","Gregoraš","Gregorka","Gregoršanec","Greguraš","Greif Pađen","Grejza","Grekša","Greman","Grgac","Grgačević","Grgan","Grganić","Grganović","Grgas","Grgat","Grgesina","GrgićBabić","GrgićBošnjak","GrgićĐaković","GrgićIvanković","GrgićMarinov","GrgićRajič","GrgićTadić","Grginac","Griesbacher","Grinvald Greganić","Grisbaher","Griva","Grizak","Grizbaher","Grizbaher Subašić","GrizeljŠarčević","Grladinović","Grlica","GrljušićKrampač","Grmoja","Grmuša","Grnja","Grokša","Groman","Grošeta","Grozaj","Grozdanić","Grozdanović","Groznica","Grubač","Grubačević","Grubanović","Grubeša","GrubešićBarbir","Grubina","Grubiša","GrubišićMarković","GrujićTomas","Grunbaum","Grünthaler","Grunwald","Grünwald","Gržan","Guba","Gubeljak","Guberac","Guberina","Gubiani","Gubica","Gubina","Gucunja","Gudinjacki","Guja","Gujaš","Gulam","Gulam Kramarić","Gulaš","Guldan","Gulija","Guljaš","Guljašević","Gumbarević","Gumbas","Guncinam","Gunjača","Gusak","Gushani","Gušani","Gutal","Gutrovac","Guzina","Gužvanj","Gužvinac","Gvajdek","Gvozdanić","Gvozdanović","Gyana","Gyerdak","Gyetvaj","Haas","Habacht Žitnjak","Habada","Haban","Habčak","Habdija","Habek","Habel","Haber","Haber Kiš","Habi","Habib","Habibović","Habicht","Habijan","Habijanec","Habjan","Habjanec","Habjanić","Habjanović","Habl","HabrkaŠimleša","Habschied","Habuda","Habuda Sabo","Habud tanić","Habula","Habulin","Habulinec","Habus","Habuš","HabušOršić","Hac","Hacek","Hack","Hackenberger","Hackenberger Kosturović","Hackenberger Kutuzović","Haček","Hadeljan","Hader","Hadler","Hadrović","Hadzima","Hadži Sejdić","Hadžiahmetović","Hadžiavdić","Hadžibeganović","Hadžibegović","Hadžić","HadžićBošnjaković","Hadžihajdarević","Hadžihaskić","Hadžisejdić","Hađa","Hađalić","Hađikan","Hafner","Hager","Haierbacher","Haj Barakat","Hajba","Hajberger","Hajc","Hajcman","Hajdarević","Hajdari","Hajdarović","Hajden","Hajdić","Hajdin","Hajdinger","Hajdinjak","Hajdu","Hajduk","Hajduković","Hajdžanović","Hajec","Hajek","Hajić","Hajling","Hajmiler","Hajnal","Hajnc","Hajncl","Hajne","Hajnić","Hajoš","Hajpek","Hajrić","Hajrović","Hajsek","Hajtfogl","Hajtl","Hajzelman","Hak","Hakenberger","Halači","Halak","Halapa","Halapir","Halar","Halas","Halasz","Halaši","Halauš","Halavanja","Halavuk","Halbauer","Halec","Haler","Halilović","Haliti","Halitović","Haller","Halt","Halter","Halter Dumančić","Haludek","Halupka","Halusek","Halužan","Halvaks","Ham","Ham Tintor","Hamacher","Haman","Hamarić","Hamaš","Hamberger","Hamdan","Hamer","Hamidi","Hamidović","Hamilton","Hamiti","Hamm","Hampovčan","Hampshire","Hamunajec","Hamzić","Han","Han Pilko","Hanaček","Hanaftaler","Hanak","Hanc","Hancock","Handanović","Handel Lešić","Handraka","Handžić","Hanđal","Haner","Hange","Hangel","Hango","Haničar","Hanić","Hanih","Hanih Falamić","Hanižar","Hanižjar","Hanižjar Berlančić","Hanković","Hanner","Hannich","Hansko","Hanulak","Hanuljak","Hanzen","Hanzer","Hanzl","Hanzlić","Hanž","Hanžek","Hanžić","Hap","Harač","Harambašić","Haramija","Haramina","Haramustek","Harangoza","Harangozi","Harangozo","Harapin","Harasti","Harauzek","Harc","Harci","Harcz","Harča","Hardi","Hardt","Hardy","Harhaj","Haring","Harinski","Harjač","Harjung","Harkanovac","Harmath","Harmina","Harmunt","Harnoš","Haršanji","Harth","Hartl","Hartman","Hartmann","Harun","Harvanček","Hary","Has","Has Schon","Hasan","Hasanac","Hasanbašić","Hasančević","Hasanica","Hasanović","Hasenauer","Hasenay","Hasenbah","Hasić","Hasija","Hasijak","Haslah","Hasnaš","Hašai","Hašček","Hašimi","Hašperger","Hašpraj","Hat","Hata","Hatlak","Hatnik","Hatta","Hatvalić","Hatwagner","Haubrich","Haubrih","Haudek","Hauer","Haumüller","Haupert","Hauptman","Hauselmann","Hauser","Hauska","Hausknecht","Hausman","Hausmaninger","Haussler","Hauzer","Havel","Havelka","Havić","Havidić","Havlek","Havliček","Havliček Babić","Havoić","Havoj","Havojić","Havranek","Hazenauer","Hazenštaub","Hazler","Haznadar","Hazurović","Hebrang","HedlŠubarić","Heđa","Heganović","Heged Kranjčević","Heiman","Heimann","Heinzelman","Heinzelman Kožul","Heinzelmann","Heitzman","Heizelmann","Heka","Heka Marek","Hekman","Helajz","Helebrant","Hell Kurevija","Hemar","Heneka","Henizelman","Herak","Heralić","Herbay","Hercegovac","Hercigonja","Herega","Herjavec","Herjavec Karalić","Herkovac","Herman","Herman Patajac","Hermanić","Hermann","Hermanović","Hermanutz","Hertarić","Heška","Hezajz","Hidanović","Hidošan","Hidošanin","Hihlik Babić","Hilak","Himelrajh","Hinek Zagorščak","Hipp Rausch","Hirnštajn","Hirštajn","Hirštajn Maćo","Hižman","Hlaban","Hlad","Hladek","Hladki","Hlaj","Hlapčić","Hlapec","Hlasni","Hlatki","Hlavač","Hlavaček","Hlavati","Hlavsa","Hlevnjak","Hlubna","Hmelik Bogdan","Hmelina","Hmeljina","Hmura","Hnačuk","Hnatek","Hnatešen","Hočevar","Hodak","Hodak Ninković","Hodan","Hodanovac","Hodanji","Hodap","Hodovanj","Hoffman","Hofmajer Marinković","Hofman","Hofšauer","HohošBabić","Hojsak","Hokman","Hoksa","Holas","Holenda","HoličekŽanko","Holiga","Holjevac","Homa","Homan","Homan Krtić","Homanović","Homolka","Homotar","Hompas","Hora","Hora Jakobčin","Horaček","Horački","Horak","Horjan","Hornjak","Horonitz Stanić","Horvat","Horvat Fabijan","Horvat Hrvoj","Horvat Katalin","Horvat Smeška","Horvatek","Horvath","Horvatiček","Horvatić","Horvatin","Horvatinović","HorvatinovićMalčić","Horvatović","HorvatovićKrstevski","Hosak","Hosi Tomac","HosinovićGlavaški","Hosman","Hossain","Houra","Hovanček","Hovanček Bura","Hovanjec","Hovanjek","Hoymar","Hozijan","Hozjan","Hoža","Hrala","Hranić","Hranilović","Hranueli","Hranj","Hranjec","Hrastinski","Hrastov","Hrastović","Hrašovec","Hrbak","Hrčak","Hrčka","Hrdelja","Hrdlitschka","Hrđavec","Hrenovac","HrešićDubaić","Hrga","Hrgota","Hribar","Hrkač","Hrkać","Hrkalović","Hrnjak","Hrnjkaš","Hromatko","Hrovat","Hrpka","Hrsan","Hršak","Hruba","Hrubenja","Hrupački","Hrustanović","Hruška","Hruškar","Hrvačić","Hrvat","Hrvatin","Hrženjak","Hržica","Hržina","Huba","Hubak","Hubalek","Hucika","Hudoletnjak","Hufnagel","Huhn Gašpar","Huhoja","Hujak","Hulak","Hulala","Humbal","Hunjadi","Hunjak","Hurban","Husagh","Husaina","Husajina","Husak","Husaković","HusakovićHodžić","Husanović","Husar","Husarek","Husnjak","Huszar","Hušnjak","Huzanić","Huzjak","Hvalec","Hvasta","Hvastek","Hvizdak","Hyka","Ibrahimbegović","Ibrahimpašić","Ibranović","Idžanović","Igalac","Igali","Igladić","Ignac","Ignjac","Ignjačić","Ignjatić","Ignjatović","IgnjatovićVračić","Iharoš","Iharoši","Ihas","Ihasz","Ihaz","Ikač","Ikasović","Ikervari","Ikica","Ilak","Ilakovac","Ilakovac Hercog","Ilančić","Ilanić","IlešŠandor","Ilibašić","IlićKapelac","IlićPočučak","IlićPuharić","IlićSolar","Ilija","Ilijaš","Ilijašev","Ilijašević","Ilijavec","Ilin Romanik","Ilovača","Iljazi","Iljazović","IljazovićIlias","IljazovićLindinger","Iljevac","Imamović","Inotai","Ipša","Iraček","Irha","Isabegović","Isajlović","Isaković","Isanović","Ismaili","Ismailji","Išasegi","Išpanov","Išpanović","Išpiranović","Ištoka","Ištvan","Ištvanfi","Ištvanić","Ištvanović","Ivaci","Ivačić","Ivakić","Ivaković","Ivan","Ivanac","Ivanagić","Ivančan","Ivančević","Ivančić","Ivančik","Ivančok","Ivanćević","Ivanda","Ivandić","Ivandija","Ivanek","Ivanetić","Ivanfi","Ivanić","Ivaniš","Ivanišević","Ivanišić","Ivanko","Ivankov","Ivanković","IvankovićBon","IvankovićGrgić","IvankovićStanojević","Ivanov","Ivanova","Ivanovac","Ivanović","IvanovićIžaković","IvanovićPugin","Ivanovski","Ivanšić","Ivanuš","Ivanušec","Ivanušić","Ivanjko","Ivas","Ivaščenko","Ivašković","Ivatin","Ivica","IvićLončar","Ivkovac","IvkovićCickaj","IvkovićPavić","IvkovićSvetina","Ivoševac","Ivšak","Ivšan","IvšićŠlezak","Izairi","Iža","Ižak","Ižaković","IžakovićArtuković","Jabuka","Jacek","Jackanić","Jacoby","Jačka","Jaćimović","Jadadić","Jadan","Jadek","Jadić","Jadrešin","Jadro","Jaganjac","Jagar","Jagarčec","Jagarić","Jagarinec","Jagatić","Jager","Jagetić","Jagica","Jagić","Jagnjić","Jagodić","Jagodin","Jagorinac","Jagrić","Jagunić","Jagustin","Jagušić","Jahaj","Jahić","Jahn","Jajalo","Jajčan","Jajčanin","Jajčinović","Jajetić","Jajić","Jajiš","Jakab","Jakabfi","Jakarić","Jakelić","JakelićŠklebek","Jakeljić","Jakešević","Jakić","Jakim","Jakimov","Jakišić","Jaklić","Jaklin","Jakljević","Jako","Jakob","Jakobčin","Jakobek","Jakobfi","Jakobi","Jakobljević","Jakobovac","Jakobović","Jakofi","Jakolić","Jakopanec","Jakopčić","Jakopec","Jakopiček","Jakopić","Jakoplić","Jakopović","Jakoša","Jakovac","Jakovčević","Jakovčić","Jakovetić","Jakovina","Jakovljević","JakovljevićČrep","Jakovović","Jaksić","Jakša","Jakšetić","Jakšić","JakšićBanjac","JakšićMaček","Jakubec","Jakubovski","Jakulj","Jakumetović","Jakupec","Jakus","Jakuš","JakušMejarec","Jalovičar","Jalšovec","Jalšovečki","Jalžabetić","Jalžbetić","Jalžetić","Jaman","Jaman Barišić","Jaman Galeković","Jambor","Jambrec","Jambrečina","Jambrek","Jambreković","Jambrešić","Jambrošić","Jambrović","Jambrušić","Jamičić","Jamić","Jamnić","Jamuljak","Jan","Janas","Janc","Jancer","Jančarević","Jančec","Janči","Jančić","Jančiga","Jančiga Jakšić","Jančijev","Jančik","Jančikić","Jančo","Jančula","Jančuljak","Janda","Jandračić","Jandrejčić","Jandrić","Jandrijević","Jandrlić","Jandrok","Jandrok Nadj","JandrokŠkugor","Janeček Legradić","Janečić","Janega","Janeković","Janes","Janeska","Janeski","Janeš","JanešTabain","Janevski","Janger","Jani","Janičar","Janiček","Janičijević","Janić","Janićijević","Janka","JankićRalić","Janković","JankovićBešlić","JankovićŠlang","JankovićVidović","Jankovitch","Jankucić","Jano","Janoš","Janošević","JanoševićFranz","Janoši","Janoši Malčić","JanošiŠariri","Janoška","Janović","Janson","Janša","Jantolek Jakšić","Jantoš","Jantošek","Jantošik","Jantula","Janus","Januš","Januško","Januzović","Janz","Janžek","Janžić","Janjac","Janjanin","Janjatović","Janješić","Janjiček","Janjić","JanjićRaiz","Janjiš","Janjošić","Janjušević","Janjušić","Japarić","Japec","Japić","Japunčić","Japundža","Japundžić","Japunđa","Jarabek","Jaramaz","Jarčević","Jardin","Jarebić","Jarić","Jarmek","Jarnec","Jarnević","Jarnjević","Jaroš","Jasenica","Jasenković","Jasenovčanin","Jasenović","JasenovićUtassy","Jasić","Jasnić","Jaša","Jaščur","Jašek","Jašić","Jašinski","Jauch","Jauernig","Jauh","Jauk","Jauševac","Javor","Javor Akik","Javorček","Javorina","Javorović","Jazavac","Jazbec","Jazbinšek","Jazić","JazićDafish","JazićVincer","Jazvac","Jazvanac","Jazvić","Jazvin","Jazvinšak","Jazvo","Jažić","Jedinak","Jedlička","Jednašić","Jedvaj","Jedvajić","Jeger Semialjac","Jelača","Jelačić","Jelaković","Jelaska","Jelaš","Jelavić","Jelečanin","JelenićNikićAccardi","Jelica","JelićBergman","Jelisavac","Jelovac","Jelovina","Jembrišak","Jenkač","Jerab","Jerabek","Jerant","Jeremijaš","Jerman","Jermatski","Jeuša","Jezeraškić","Ježovita","Jina","Jindra","JindraČupić","Johan","Johanović","Joka","Jokanović","Jona","Jonaš","Jordanova","Jordanović","JosićKajzerić","JosipovićPongrac","Jostiak","Jošavac","Jotanović","Jovan","Jovančević","Jovandić","Jovandžikov","Jovandžikova","Jovanić","Jovanovac","Jovanović","JovanovićFiličić","JovanovićŽuža","Jovanovska","Jovanovski","Jovanovski Vlaškalić","Jovašević","Jovičić Šovagović","Jovinac","Jozanović","Jozefčak","Jozepović Topalović","Jozipović Sudar","Jugovac","Juhas","Juhas Koler","Juhas Takač","Juhasz","Juhaz","Juka","Jukica","Jukopila","Jularić","JularićLadocki","Junačko","Junaković","Jung Lončarić","Juračić","Juraić","Jurajić","Jurak","Jurakić","Juran","Juranek","Juranić","Juras","Jurasović","Jurašek","Jurašković","Juratovac","Juratović","Jurca","JurčevićTrbara","JurčićGalović","Jurela","Jurenac","Jureša","Jureta","Jureta Hrganić","Juribašić","Juričan","JuričanŠimunek","JurićKuna","JurićMihačić","JurićNazifović","Jurićan","Jurina","Jurinjak","Juriša","Jurišaga","Jurišak","JurišićSpajić","Jurlina","Jurman","Jurmanović","Jutriša","Juvančić","Juzbaša","Kabashaj","Kabaš","Kabašaj","Kabić","Kablarević","Kacenberg","Kacenberger","Kaceski","Kačar","Kačarik","Kačavenda","Kači","Kačić","Kačunić","Kačunko","Kačunko Tomka","Kaćar","Kaćavenda","Kaćeri","Kaćunić","Kaćunko","Kadar","Kadežabek","Kadić","Kadlec","Kadlec Filipčić","Kadleček","Kadnar","Kadoić","Kadojić","Kadović","Kadri","Kadrić","Kafedžić","Kafon","Kahn","Kahrić","Kaič","Kaikčija","Kailer","Kainz","Kajan","Kajari","Kajba","Kajčevski","Kajčić","Kajević","Kajfeš","Kajgana","Kajganić","Kajganović","Kajgo","Kajičić","Kajić","Kajinić","Kajla","Kajmić","Kajpl","Kajtar","Kajtaz","Kajtazi","Kajunić","Kajušić","Kajzer","Kajzerić","Kakalicis","Kakarigi","Kakaš","Kaksa","Kakuk","Kalaba","Kalabić","Kalac","Kaladić","Kalafatić","Kalajdžić","Kalajdžija","Kalajžić","Kalaković","Kalamari","Kalamiza","Kalamut","Kalanj","Kalanjoš","Kalapoš","Kalauz","Kalazić","KalazićPeić","Kalčev","Kalčić","Kalea","Kaleb","Kalem","Kalember","Kalenić","Kalenik","Kalesić","Kalić","Kaliger","Kalinić","Kalinka","Kalinović","Kalinski","Kalivoda","Kalizan","Kalkan","Kalkan Bogdanović","Kalman","Kalmar","Kaloci","Kaloper","Kalozi","Kalozy","Kalpić","Kalthoff","Kaltnecker","Kaltneker","Kaluđer","Kaluđerović","Kaluđerski","Kalvarešin","Kamba","Kamber","Kamberović","Kamenar","Kamenarova","Kamenicki","Kamenički","Kamenić","KamenićSmrekar","Kamenko","Kamenov","Kamerer","Kaminski","Kammerer","Kamp","Kampić","Kan","Kanaet","Kanajet","Kandecki","Kandić","KandićSplavski","Kandrač","Kandrać","Kanđera","Kanić","Kanis","Kanisek","Kaniški","Kaniža","Kanižai","Kanižaj","Kanski","Kantar","Kantolić","Kantor","Kantor Fabulić","Kantor Hagen","Kanurić","Kanjo","Kap","Kapelac","Kapetan","Kapetančić","Kapetanović","Kapeter","Kapetinić","Kapić","Kapidžić","Kapisoda","Kapitanić","Kapitanović","Kapitanj","Kaplan","Kaplun","Kapoči","Kapor","Kaposta","Kapoši","Kapović","Kappelar","Kapraljević","Kaproncai","Kapronczai","Kapša","Kaptalan","Kaptein","Kaptolić","Kapular","Kapulica","Kapun","Kapusta","Kapuši","Kapušin","Karabegović","Karabojev","Karač","Karača","Karačić","Karačić Šoljić","Karačonji","Karadakova","Karadamis","Karadamis Kir","Karadža","Karadžić","Karaga","Karagača","Karagić","Karaica","Karaj","Karajčić","Karajko","Karajkov","Karajlović","Karak","Karakaš","KarakašPavić","Karalić","Karaman","Karamanović","Karamarko","Karamarko Radić","Karamarković","Karamatić","Karamatraković","Karan","Karančin","Karanov","Karanović","Karapandža","Karapetrić","KarapetrićDiklić","Karas","Karasek","Karasi","Karaševac","Karatović","Karaturović","Karaula","Karavidović","Karavla","Karavukovac","Kardaš","Kardinal","Kardo","Kardoš","Kardov","Kardum","Karežić","Karh","Karić","Karika","Karin","Karjaković","Karkić","Karl","Karl Fero","Karlak","Karlak Mahovlić","Karlica","Karliček","Karlić","Karlinski","Karloci","Karlović","Karlušić","Karnaš","Karner","Karnoš","Karoglan","Karol","Karoli","Karpati","Karpov","Karša","Karšaj","Karšić","Kartelo","Kary","Karzalko","Kasa","Kasabašić","Kasač","Kasak","Kasal","Kasalo","Kasalo Tomić","Kasalo Trajković","Kasami","Kasana","Kasap","Kasapović","Kasavica","Kaselj","Kaselj Varga","Kaser","Kassa","Kassak","Kasser","Kast","Kastel","Kastel Oravec","Kastner","Kastori","Kastratović","Kasum","Kasumović","Kasun","Kasunić","Kašanin","Kašerić","Kašić","Kašnik","Kaštel","Kaštelan","Kašuba","Kata","KataĐaković","Kataj","Katalenac","Katalenac Pirghaye","Katalenić","Katalin","Katalinić","Katana","Katanac","Katančić","Katanica","Katanić","KatanićPopović","Katarin","Katarina","Katarinček","Katarinić","Katava","Katavić","KatavićIvandić","KatavićŠimunić","Katičić","Katić","Katilović","Katinić","Katnić","Katoi","Katona","Katović","Katruša","Katruša Neziraj","Katulić","Katura","Katušić","Katušin","Kaucki","Kaucki Kelemen","Kaučić","Kaurić","Kaurin","Kaurinović","Kaurloto","Kauzlarić","Kavain","Kavaj","Kavali","Kavan","Kavčić","Kavedžić","Kavedžija","Kavelj","Kavgić","Kavicki","Kavran","Kavur","Kazalicki","Kazda","Kazenski","Kazimić","Kazimir","Kazimur","Kaznovac","Kažimir","Keceli Mesaroš","Kecman","Keča","Kečalović","Kedačić","Kefelja","Kegalj","Kekanović","Kela","Kelam","Kelava","Kelbas","Kelbasa","Kelbassa","Kelebarda","Kelebuda","Kelemović Kramer","Kelka","Kelrajter","Kemfelja","Kenda","Kenfelj Čajkovac","Kenfelja","Kenjvašo","Keran","Keranović","Kereši Bennani","Kereta","Kerhač","Kerhat","Kern Martinović","Kerovac","Kervarić","Kesak Ursić","Kešerac","Kešina","Keža","Khail Perasić","Khaznadar","Kichaz","Kickaz","Kihas","Kijac","Kijanica","Kikanović","Kilibarda","Kilmajer","Kinjerovac","Kirac","Kiraly","Kiralj","Kiralj Jarmek","Kirasić","Kirchbaumer","Kirchmayer","Kirčanski","Kireta","Kirhmajer","KirićJunačko","Kiridžija","Kisela","Kiselka","Kiseljak","KišKonja","Kišasondi","Kišćinal","Kišfalubac","Kišmartin","Kišpal","Kišpatić","Kitak","Kitak Borić","Kitak Volar","Kitanov","Kitanović","Kiternaš","Kizivat","Klaban","Klačić","Kladar","Kladarić","Kladarin","Kladnik","Klaiber","Klaić","Klajić","Klajn","Klajn Plavšić","Klajo","Klajzner","Klak","Klanac","Klanac Gyorgy","Klanac Kapša","KlanacŠestić","Klanfar","Klanica","Klanjšček","Klapan","Klapec","Klapirić","Klapka","Klapšić","Klaričić","Klarić","Klarić Kukuz","Klasan","Klasanović","Klasanović Dulić","Klasiček","Klasiček Bencetić","Klasić","KlasićGazibarić","Klasnetić","KlasnetićHyka","Klasović","Klašnja","Klaus","Klausz","Klauz","Klauznicer","Klečina","Klekar","Klepac","Kliba","Klika","Klimczak","Klipa","Klipanović","Klišanin","Klišanin Bogović","Klobučar","Klobučar Radl","Klobučar Vujnić","Kloda","Kloiber Rušanac","Klopan","Klopotan","Kljaić","Kljajić","Klječanin","Kljenak","Ključanin","Ključar","Ključarić","Ključarićek","Knajs","Knajz","Knall","Knapić","Knatek","Knauer","Knauff","KneževićBaić","KneževićFranciška","KneževićGado","KneževićMarinić","KnežićGalić","Kniha","Knjaz","Kobaš","KobašNola","Kobašević","Kobela","Kobeščak","Kobia","Kobija","Kobijak","Kobjak","Koceva","Koceva Komlenić","Koch Mađarić","Kocian","Kocifaj","Kocijan","Kocijančić","Kocijanović","Kockar","Kocman","Kocmanić","KocmanićParavac","Kočaj","Kočar","Kočevar","Kodba","Kodila","Kodrnja","Kodvanj","Kodžoman","Kofranek","Kogan","Kohajda","Kohari","Koharić","Kojadinović","Kojanić","Kojundžija","Kokalović","Kokanović","Kokanović Bartola","Kokar","Kokeza","Kokman","Kokolari","Kokoška","Kola","Kola Farkaš","Kolac","Kolaček","Kolačko","Kolak","KolakĐurinović","Kolaković","Kolar","Kolar Drvoderić","KolarŽižanović","Kolarac","Kolarec","Kolarec Marušić","Kolarević","KolarevićTrišler","Kolarić","KolarićBuconjić","KolarićVukotić","Kolarik","Kolat","Kolauti","Kolbas","Koldjeraj","Koldjeraj Pjetar","Kolđeraj","Kolegjeraj","Kolembus Oklobdžija","Kolenda","Kolendarić","Kolesar","Kolesarić","Koleszar","Koletar","Kolgjeraj","Kolhamer","KolhasČutura","KolićKovačić","Kollar","Kolman","Kolobara","Kolobarić","Koloda","Kolodvorska","Kolojeraj Pjetar","Kolomaz","Kolompar","Kolosar","Kolovrat","KolundžićRadić","Kolundžija","Kolutac","Koljan","Koljanin","Koljdjeraj","Koljđeraj","Komadina","Komak","Komanović","Komar","Komar Međugorac","Komarac","Komarčevski","Komarčić","Komarić","Komaromi","Komaromy","Komazec","Komendanović","Komesarović","Komijat","Komjetan","Komlenac","Komlenac Beloša","Komlenac Uglješić","KomnenićTuta","Kompanijec","Kompanović","Kompesak","Komušanac","Končalović","Končar","Končarević","Kondaš","Kondža","Kondža Staničić","Konopka","Konrad","Konstantinović","Konta","Kontak","Konti Jaman","Kontra","KontraČapo","Konja","Konjarević","Konjarik","Konjušak","Kopačević","Kopačin","Kopanec","Kopas","Kopasić","Kopčalić","Kopecki Balašević","Kopilaš","Kopjar","Kopljar","Koppola","Koprčina","Koprivanac","Koprivica","Koprivnjak","Korač","Korać","KoraćRedžepi","Korade","Korajac","Koralija","Koražija","Korbar","Korda","Korica","Korman","Kormanjec","Kormanjoš","Kornjača","Korodva","Koronsovac","Koroša","Korotaj","Korpak","Korpar","Korpaš","Korponja","Korša","Koruga","Korušac","Kosalec","Kosanović","Kosina","Kosorjanac","Kosovac","KosovićCrvenkova","Kostadinović","KostadinovićKelić","Kostanjevac","Kostanjevec","Kostelac","Kostenac","Kostolanović","Kostolanović Golub","Kostova","Koša","Košak","Košalin","Košanski","Košaroš","Koščak","Košćak","Košćalek Glavak","Koškan","Koškanac","Košta","Košturjak","Kotal","Kotarac","Kotarlić","Kotarski","Kotarščak","Kotiza","Kotolas","Kotorac","Kotrljanović","Kotromanović","Kotvas","Kovacs","Kovač","Kovač Asan","Kovač Grablović","Kovač Ištvan","Kovač Maratović","Kovač Marton","Kovač Retih","Kovač Slepčević","Kovač Svoboda","Kovač Šilipetar","Kovač Vajda","Kovač Vestemar","Kovač Zoltan","Kovačec","Kovaček","Kovačev","Kovačev Matijević","Kovačević","KovačevićArbanas","KovačevićDoroghy","KovačevićGradinščak","KovačevićGrgić","KovačevićLovač","KovačevićLujić","KovačevićSalaj","KovačevićTomić","KovačevićZec","Kovačić","KovačićFarkaš","KovačićLovrinčević","Kovačik","Kovačko","Kovalski","Kovalj","Kovanić","Kovanov","Kovanušić","Kovar","Kovats","Kovbanovski","Kovčalija","Kovjanić","KovjanićKreidl","Kozar","Kozarčanin","Kozarević","Kozari","Kozary","Kozbašić","Kozina","Kozjak","Kozjan","Kozlevčar","Kozlica","Kozma","Kozmar","Kozomara","Kožan","Kožar","Kožarić","Koželj Horvat","Kožoman","Krac","Kracl","Kračun","Kračunov","Kradija","Kradijan","Kraft","Kragl","Kragojević","Kragujević","Kragulj","Kraguljac","Krahovski","Krahulec","Kraiček","Krainović","Krajač","Krajačić","Krajcar","Krajčak","Krajček","Krajčik","Krajčinović","Krajina","Krajinović","Krajišnik","Krajlah","Krajner","Krajnović","Krajpl","Krajs","Krajšić","Krajter","Krajtner","Kraker","Kral","Kralik","Kralovec","Kralj","Kralj Vasilj","Kralja","Kraljčak","Kraljek","Kraljevački","Kraljević","Kraljević Čolić","Kraljević Seričević","Kraljevski","Kraljičak","Kraljić","Kraljik","Kraljik Kovačik","Kraljinović","Kramar","Kramarić","KramarićTariba","Kramer","Kraml","Krampač","Krampelj","Krancpiler","Kranic","Kranić","Kranželić","Kranjac","Kranjc","Kranjčec","Kranjčev","Kranjčev Lončar","Kranjčević","Kranjčić","Kranjec","Kranjski Belovljev","Krapić","Krasić","Krasniči","Krasnić","Krasnići","Krasnik","Krasniqi","Krasnodembsky","Krasulja","Kraš","Krašnjak","Kraštek","Kratil","Kratki","Kratković","Kratofil","Kratzl","Kraucider","Kraus","Kraus Lazić","Krausz","Krautsieder","Krauz","Kravat","Kravec","Kravoščanec","Kravski","Krbanja","Krbavac","Krčmar","Krčmarek","KrdoŠpanić","Kreča","Krečak","Kreća","Krejačić","Kremenjaš","Kremsher Babić","Kresoja","Kresonja","Kreštan","KretićMajer","Krga","Krga Božić","Krha","Krhač","Kričančić","Krička","Krička Mitrović","Krijak","Krijan","Krisbaher","Kristan","Kristman","Kriška","Krivaja","Krivak","Krivanek","Krivanek Spomenka","Krivda","Krivohlavek","Krivokapić","Krivokuća","Krivošija","Krizman","Krizmanić","Krizmanić Zaharov","Križaj","Križan","Križan Stanić","Križanac","Križanec","Križanić","Križanović","Križevac","Križman","Križnjak","Krka","Krkač","Krkalo","Krleska","Krleža","Krljan","Krljar","Krmpota","Krnatić","Krndija","Krneta","Krnjac","Krnjaić","Krnjajić","Krnjak","Krnjaković","Krnjeta","Kroato Vujčić","Krolo Stipan","Krompač","KrompačGolub","Krowas","Krpačić","Krpan","Krpan Trgovčević","Krpata","Krsmanović","Krstanović","KrstanovićIvšić","KrstanovićPočuča","Krsteska","Kršak","Kršan","Kršćanski","Kršinić Radaković","Krtalić","KrtićČejvan","Kručaj","Kruhonja","Kruljac","Krumenacher","Krumerac","Krupa","Krupeša","Krupeša Virag","Krupljan","Krupljanin","Krušarovski","Krvarić","Krvavac","Krvavica","Krzman","Krznar","Krznarić","Kšan","Kuba","Kubaček","Kubala","Kubanović","Kubaša","Kubat","Kubatka","Kubelka","Kubena","Kubica","Kubijak","Kubijan","Kubinac","Kubinčan","Kubjak","Kubula","Kučak","Kučan","Kučančanin","Kučanda","Kučandi","Kučans","Kučar","Kučara","Kučera","Kučica","Kučina","Kučinac","Kučinac Lacković","Kuća","Kućan","Kućančanin","Kućanda","Kućera","Kućina","Kućinac","Kudeljaš","Kudeljnjak","Kudlaček","Kudrna","Kuduz Vrdoljak","Kuhač","Kuhar","Kuharić","KuharićBučević","Kuharski","Kuhta","KuićVadlja","Kujadin","Kujavec","Kujavec Šljivac","Kujavić","Kujundžić Jamnić","Kujundžija","Kukanović","Kukavica","Kukina","Kukmanović","Kukoleča","Kukolj Malbaša","Kukrika","Kukučka","Kukuljica","Kukuružnjak","Kula","Kulačanin","Kulaš","KulašKnežević","Kulašinović","Kulbah","Kulčar","Kulešanin","Kulhanek","Kulhavi","KulišićLončarić","Kulovac","Kuljaj","Kuljak","Kumarić","Kumbara","Kumbrija","Kumparić","Kuna","Kunac","Kuncinam","Kunčak","Kundak","KunićBukovac","Kunišinac","Kunovac","Kunsabo","Kunzinam","Kupanovac","Kupčarić","Kupčarić Trcović","Kupčinovac","Kupina","Kuprešak","Kuprešak Paret","Kuprešanin","Kupreščanin","Kuragić","Kuraja","Kuralić","Kuran","Kuratko","Kuravica","Kurbalić","Kurbalija","Kurbanović","Kurbaša","Kurbatfinski","Kurcinak","Kurdija","Kurelac Karlak","Kurepa","Kurevija","Kuridža","Kurija","Kurikavčić","Kurina","Kurjačić","Kurjakov","Kurlagić","Kurman","Kuronja","Kurpez Vranković","Kursar","Kurtagić","Kurtak","Kurtanjek","Kuruc Sloboda","Kusalić","Kustura","Kusulja","Kusutra","Kušaković","Kušan","Kušica","KušićOmazić","Kutaši","Kuterovac","Kutjevac","Kutleša","Kutlija","Kutnaker","Kutnjak","Kuvač","Kuvačić","Kuveždan","Kuveždanin","Kuzma","KuzmaČordašić","Kuzman","Kuzmančević","Kuzmanić","KuzmanićŠarac","Kuzmanoski","Kuzmanović","KuzmanovićĐorđević","Kuzmanovski","Kužatko","Kvaček","Kvak","Kvaka","Kvakan","Kvakić","Kvas","Kvasina","Kvasnovski","Kvastek","Kvaternik","Kvorka","La Bruna","Labaj","Labak","Laban","Laban Ovčina","Labant","Labar","Labaš","Labavić","Labazan","Labo","Labor","Laboš","Labrović","Labrtić","Labudić","Labudović","Labuhar","Labus","Labuš","Lach","Lachner","Lacić","Lacko","Lacković","Lacmanović","Laco","Lacović","Laczo","Lač","Lačanin","Lačić","Lačman","Ladan","Ladenhauser","Ladenhauser Palijan","Ladić","Ladislaides","Ladišić","Ladnjak","Ladocki","Ladović","Lađarević","Lađaš Špoljarec","Lađević","Laferton","Laforza","Lagančić","Laganela","Laganela Keglević","Lagator","Lagetar","Lagumdžija","Lagundžija","Lah","Lahman Bennani","Lahner","Laister","Laitkam","Lajčak","Lajčo Paštrović","Lajdes","Lajdi","Lajforman","Lajić","Lajk","Lajko","Lajoroš","Lajoš","Lajtkam","Lajtkaum","Lajtman","Lajtner","Lakat","Lakatoš","Laketa","Laketić","Laki","Lakić","Lakićević","Laklija","Lakner","Lakota","Lakotić","Laković","Laksar","Laktić","Laletić","Lalić","Lalić Đurišić","Lalović","Lambreščak","Lamnek","Lamot","Lampek","Lampert","Lamza","Lamza Maronić","Lanc","Lančić","Landeka","Landekić","Landenbach","Landher","Landikušić","Landup","Lang","LangČulin","Lange","Langer","Lanko","Lanjoha","Lapac","Lapanović","Lapanje","Lapaš","Lapčević","Lapčić","Lapenda","Lapić","Lapis","Lapiš","Laptoš","Lapu","Larma","Lasić","Lasinger","Lasker","Lasković","Laslavić","Laslo","Laslo Gregov","Laslovski","Lasović","Lastavica","Lastavica Pantelić","Lastavić","Lastelić","Lastrić","Laszlo","Laszlo Szakary","Lašak","Laškai","Laškarin","Laštović","Laštre","Laštro","Latas","Latić","Latin","Latinčić","Latinović","Latinović Leleta","Latković","Latoš","Lauber","Lauc","Lauc Đaniš","Lauda","Lauda Ljubas","Laufer","Launek","Laurić","Laurović","Lauš","Laušević","Laušić","Laušin","Lautar","Lavada","Lavrek","Lavrnić","Lavrnja","Lavrov","Lay","Lazanin","Lazar","Lazar Korov","Lazarević","LazarevićParadžik","Lazarov","Lazendić","Lazič Švogor","Lazić","Lazić Gorjanski","Lazić Švogor","Lazović","Lažeta","Lebar","Lebinac","Ledenčan","Ledenčan Kuštro","Ledeničan","Ledinščak","Ledinšćak","Leđenac","Lefand","Legat","Legradi","Lehanka","Lehman","Lehmann","Lekaj","Leko Varoščić","Lekšan","Lelas","Lemaić","Lemajić","Lemal","Leman","Lenard","Lenardić","Lenardo","Lenart","Lenc Mandić","Lendarić","Lendvaj","Lengajić","Lengyel Komušanac","Lenhard","Lenhardt","Lenhart","Leovac","Lepac","Lepan","Lepoglavec","Lepoja","Lepoša","Leratić","Lesar","Lesica","Lesičak","Lesjak","Leskovac","Leskovar","Lešćan","Lešina","Leškovar","Lešnjak","Lešnjaković","Letica","Leutar","Leutarević","Levačić","Levak","Levaković","Levanić","Levar","Levnaić","Ležaić","Ležaja","Lichtenthal","Ličanin","Ličar","Ličina","Lidmila","Liermann","Liermann Zeljak","Ligda","Ligenza","Lihtental","Lijak","Likar","Likarić","Lilijan","Linarić","Lindeman","Linta","Lipanović","Lipar","Lipka","Lipnicki Krausen","Lipošćak","Lipovac","Lipovina","Liptak","Lisac","Lisak","Lisica","Lisičak","Lisjak","Lisjak Tvrdorijeka","Lisovac","Liščak","Lišćak","Liška","Litarac","Litarić","LitarićTešić","Litobac","Litra","Litva","Livada","Livaja","Livajić","Livančić","Livazović","Livnjak","Lizačić","Lizačić Vidaković","Lizak","Lizatović","Loboda","Loci Zvocak","Logara","Logarušić","Logožar","Lohajner","Loina","Loinjak","Lokas","Loknar","Lončar","Lončar Kurtović","Lončar Majer","Lončar Tumir","Lončar Vicković","Lončarek","Lončarević","Lončarić","Lončina","Lonjak","Lopar","Loparac","Lopatnik","Lordan","Loša","LošićKrizmanić","Lovač","Lovak","Lovaković","Lovas","Lovasić","Lovaszi","Lovaš","Lovenjak","Lovrenščak","Lovrić Ađić","Lovrić Bonaventura","Lovrić Kurbanović","Lovrić Rimac","Lovrić Varžić","Lozančić","Lozančić Bagarušić","Lozančić Bogarušić","Lozanov","Lozanović","Lozina","Lubar","Lubina","Lubina Jukić","Lucarić","LucićSavić","Lucijak","Lucijanić","Lučan","Lučevnjak","Ludaš","Ludban","Lugarić","Lugonja","Luka","Lukac","Lukac Jurić","Lukacs","Lukač","Lukaček","Lukačev","Lukačević","Lukačić","Lukačić Trifunović","Lukačin","Lukać","Lukaćević","Lukadinović","Lukanić","Lukanović","Lukarova Božičević","Lukašek","Lukavec","Lukavečki","Lukavski","Lukenda","Luketa","Luketina","LukićGaličić","LukićKovanović","LukićMiklaj","Lukićova","Lukinac","Lukjar","Lukman","Lukovica","Lukovnjak","LulićSlipac","Lusavec","Luščak","Lušćak","LušićMarić","Luthar","Lutterbach","Lužaić","Ljagajlo","Ljajić","Ljeljak Jurman","Ljesar","Ljeskovan","Ljevar","Ljevnaić","Ljikar","Ljiljak","Ljiljak Jurman","Ljiljan","Ljiljanić","Ljubanović","Ljubas","Ljubašćik","Ljubica","Ljubisavljević","Ljubljanović","Ljuma","Ljuma Ozeva","Ljušanin","Ljuština","Ljutak","Mabić","Macakanja","Macan","Macanga","Macanić","Macanović","Macašek","Maceković","Macele","Machiedo","Machulec","Machulec Gašić","Mack","Mack Savanović","Mackanić","Macko","Mackuljak","Macokatić","Macura","Mačak","Mačak Borš","Mačar","Mačaš","Mačašić","Maček","Mačešić","Mačik","Mačinković","Mačkić","Mačković","Mačvan","Maćaš","Maćašević","Maćešić","Maćo","Madajček","Madaras","Madarić","Madavić","Madecki","Madi","Madić","Madjar","Madjar Klaić","Madjarac","Madjarić","Madjerčić","Maduna","Madunić","MadunićFlauder","Madunović","MadunovićPavošević","Madžar","Madžarac","Madžarević","Madžarić","Madžić","Mađar","Mađar Babok","Mađarac","Mađarević","MađarevićKubatka","Mađarić","Mađer","Mađerčić","Mađerec","Mađerić","Mađura","Maganić","Maganjić","Magaš","Magazinović","Magda","Magdalenić","Magdić","Magdika","Magečić","Magić","Magjer","Magjer Veg","Maglaić","Maglajić","Maglica","Magličić","Maglić","Maglov","Magoči","Magoći","Magoš","Magovac","Magud","Magura","Magušić","MagušićDumančić","MagušićWilhelm","Magyar","Mahić","Mahmudi","Mahmutović","Mahnić","Mahovlić","Mahovne","Maić","Mainc","Maj","Majača","Majačić","Majbaum","Majcan","Majcan Korkutović","Majcen","Majcenić","Majcenović","Majdak","Majdančić","Majdandžić","MajdandžićLauc","Majdenić","Majdić","Majdiš","Majer","Majer Podgorski","Majera","Majerhof","Majerhoffer","Majerić","Majerski","Majerus","Majetić","MajetićCetina","Majhen","Majher","Majić","MajićMiholić","Majk","Majkić","Majksner","Majlinger","Majlinger Tanocki","Majnarić","Majnarić Prinčevac","Majnić","Majnik","Major","Major Hargita","Major Lukić","Majorić","Majoroš","Majpruz","Majsan","Majsen","Majski","Majsterić","Majstor","Majstorović","Majstorović Gusić","Majstorski","Majstrenko","Majstrović","Majtanić","Majurac","Majurec","Majzik","Majzl","Mak","Mak Horvat","Maka","Makaj","Makar","Makarčuk","Makarević","Makarević Stanojčić","Makarić","Makarijevska","Makarijevski","Makaro","Makarović","Makarum Pirić","Makarun","MakarunŠurina","Makek","Makević","Makić","Makijenko","Makir","Makiš","Makivić","Mako","Makonnen","Makoš","Makoter","Makov","Makovec","Maković","Maksić","Maksimović","Maksimovski","Makšan","Makšan Kramar","Makvić","Malacko","Malarić","Malbaša","Malbaša Varga","Malbašić","Malbašik","Malčić","Maldini","Malečić","Malek","Malekin","Maleković","Malenica","Malenica Dekany","Malenica Marić","Malenić","Malenjak","Maler","Maleš","Maleševac","Malešević","Malešić","Maleta","Maletić","Maletin","Maletović","Malević","Mali","Malić","Malidža","Maligec","Malijurek","Malinar","Malinić","MalinićUglik","Malinović","MalinovićBanaji","Mališ","Mališić","Malivojević","Malivuk","Malizani","Malkoč","Malkoć","Malković","Malnar","Malobabić","Malobović","Maloča","Malogorski","Maloić","Malojčić","Malounek","Malov","Malovan","Malovčak","Malović","Malovoz","Maltar","Maltašić","Malter","Malunjak","Malvić","Maljarić","Maljik","Maljković","MaljkovićBabić","MaljkovićKocevski","Maljur","Mamić","Mamilović","Mamlić","Mamula","Mamuzić","Mamužić","Manc","Mance","Manceta","Manci","Manczi","Mančić","Mandalić","Mandarić","MandarićKolarik","MandarićKurilj","Mandekić","Mandić","Mandir","Mandl","Mandrić","Mandunović","Mandura","Mandurić","Mandušić","Mandžukić","Manestar","Manfred","Mangold","Manić","Manislović","Mann","Mano","Manojlović","Manolio","Manović","Manzer","Manzin","Manjerović","Manjić","Manjok","Maoduš","Mar","Maračić","Maradin","Marak","Maraković","Maran","Maranić","Maras","Marasović","Maraš","Marašek","Maratović","Maravić","Marcić","Marcijuš","Marcikić","Marciuš","MarciušPap","Marczi","Marčec","Marček","Marčeta","Marčetić","Marčičević","Marčić","Marčićević","Marčik","Marčinko","Marčinković","Marčit","Marčok","Marđetko","Marek","Marek Ilić","Marelja","Marendić","Marenić","Marenjak","Mareš","Maretić","Marević","Margaretić","Margeta","Margetić","Margić","Margil","Margit","Margold","Margold Bubalović","Marguš","Maričak","Maričević","Maričić","Marić","MarićMalinić","Marićak","Marijan","Marijanac","Marijančević","Marijanov","Marijanović","MarijanovićZulim","Marijašević","Marijić","Marin","Marina","Marincel","Marincl","Marinclin","Marinčić","Marinić","Marinković","Marino","Marinov","Marinović","MarinovićČačić","MarinovićVlaičević","Marinjak","Marjanac","Marjančević","Marjančić","Marjanov","Marjanović","MarjanovićBaglama","MarjanovićMatić","MarjanovićZulim","MarjanovićZulin","Markač","Markafić","Markan","Markanović","Markanjević","Markasović","Markeljević","Markešić","Marketić","Marki","Markić","Markioli","Markiš","Marko","Markolin","Markoš","Markota","Markotić","Markov","Markovac","Markovanović","Markovčić","Marković","MarkovićBrunčić","MarkovićDudjak","MarkovićĐurin","MarkovićGjurin","MarkovićKovač","MarkovićMandić","MarkovićPernar","MarkovićŠarac","Markovinović","Markovski","Marks","Markser","Markulak","Markulić","Markulin","Markulinčić","Markulj","Markuljević","Markus","Markuš","Markušev","Markušić","Markuz","Marman","Marmeggi","MarmilićCezner","Marod","Marod Scheiber","Marodi","Marodt","Maroević","Marojević","Marokić","Maroković","Marolin","Marolt","Maronić","MaronićFischer","Maros","Maros Batinić","Maroslavac","Maroš","Maroševac","Marošević","Maroši","Marošičević","Marošićević","Marov","Marović","Marsenić","Marsić","Maršal","Maršalek","Maršanić","Maršhauzer","Maršić","Maršo","Mart","Martalić","Martan","Martić","Martin","Martin Rajher","Martinčević","MartinčevićDiačec","MartinčevićKučuk","MartinčevićMikić","Martinčić","Martinćević","Martinek","Martinić","Martinić Perljević","Martinko","Martinko Mrđa","Martinković","Martinov","Martinović","Martinović De Conceicao","MartinovićGrčić","MartinovićPlavšić","Martinuš","Martinušić","Martinjak","Martinjaš","Marton","Martynyuk","Marukić","Marulin","Maruna","Marunica","Marunić","Marunović","Marušić","MarušićHalači","Maržić","Mas","Masić","Maskarić","Maslać","Maslak","Maslarić","Masle","Maslić","Maslov","Maslovara","Masljak","Masnica","Masnić","Masnikosa","Masoničić","Mastanjević","Mastelica","Mastelić","Mašaberg","Mašala","Mašanović","Mašek","Mašić","Mašina","Maširević","Maškov","Mašojević","Mašović","Maštrović","Matačić","MatačićBrodić","Matagić","Mataija","Matais","Matajčević","Matajčić","Matajić","Matajs","Matajz","Matak","Mataković","Mataković Erl","Matan","Matana","Matančić","Matanić","Matanić Petkovski","Matanov","Matanov Bugarić","Matanovac","Matanović","Matas","Matasić","Matasović","Mataušek","Matavulj","Mataz","Mate","Mateašić","Matečko","Matej","Matejak","Matejašić","Matejčić","Matejić","Matek","Matekalo","Mateković","Mateljić","Materni","Mateša","Matešić","Matešković","Matezić","Matezović","Mati","Matics","Matiček","Matičević","Matičić","Matić","MatićMandić","MatićSinković","MatićSpremo","Matija","Matijačić","Matijaković","MatijakovićKrišto","Matijanić","Matijas","Matijaš","Matijašec","Matijašević","Matijašić","Matijaško","Matijatko","Matijevac","Matijević","Matin","Matišić","MatišićKučinić","Matiz","Matjačić","Matjaš","Matjašić","Matko","Matkov","Matkovček","Matković","MatkovićBatalija","MatkovićSubašić","Matkun","Matleković","Matok","Matokić","Matoković","Matorić","Matoš","Matoša","Matošević","Matošić","Matota","Matotek","Matoušek","Matovac","Matović","Matovina","Matovinović","Matrić","Mattei","Matthias","Matthies","Matthies Pepelko","Matulić","Matulin","Maturanac","Maturanec","Maturić","Matus","Matusina","Matusinović","Matuš","Matušenski","Matušin","Matuško","Matušković","Matuzalem","Matuzović","Matvij","Mauhar","Mauk","Mauker","Maul","Maurac","Maurer","Maurić","Maurović","Maurus","Mauser","Mautner","Mauzer","Mavračić","Mavrek","Mavretić","Mavričić","Mavrić","Mavrin","Mayer","Mayer Topalović","Mazalica","Mazalović","Mazanek","Mazić","Maznik","Mazur","Mažar","Mažar Falamić","Mažar Tomeš","Mažuran","Meandžija","Meašić","Meaški","Mecanov","Mecanov Pofuk","Mečanin","Mećava","MedačKraker","Medak","Medaković","Medančić","Medanić","Medarić","Medarski","Medenjak","Medinac","Medjugorac","Medovka","Medvar","Medvedarović","Medvedec Lazarevski","Međaković","Međugorac","Međurečan","Megdanac","Mehak","Mehak Lipanović","Mehanović","MehičićButina","Mejaš","Mejdanac","Mekanj","Mekinda","Mekovec De Carvalho","Mekovec Diniz De Carvalho","Melar","MelegešGamoš","Melmajer","Melman","Memešahović","Menalo","Mendaš","Meničanin","Menićanin","Menkovska","Menrat","Merčinac","Merda","Merkaš","Merunka","Mesar","Mesarek","Mesarić","Mesaroš","MesarošBelanji","MesarošŠandor","MesićMuharemi","Meszaroš","Mešanović","MeščićDziegielewska","MeštrovićJelačić","Metlagel","Mezak","Mezarić","Mezga","Meznarić","Mežnarić","Miačank","Micai","Michalek","Michels Andračić","Mickovska","Micudaj","Mičan","Mička","Mičuda","Mićan","Mićanović","Mićuda","Mifka","Migač","Mihačić","Mihailović","Mihajlov","Mihajlović","Mihalak","Mihalčić","Mihalec","Mihalek","Mihalic","Mihaliček","Mihalička","Mihalić","Mihalik","Mihalik Vidaček","Mihalina","Mihaly","Mihalj","Mihaljčević","Mihaljčić","Mihaljčuk","Mihaljec","Mihaljek","Mihaljenović","Mihaljev","Mihaljević","MihaljevićJurić","MihaljevićŽiroš","Mihaljić","Mihaljik","Mihaljinec","Mihanić","Mihnjak","Miholjac","Mijač","Mijačank","Mijačević","Mijaćank","Mijadinović","Mijadžiković","Mijailović","Mijajlović","Mijakić","Mijakovac","Mijaković","Mijalković","Mijaljević","Mijanović","Mijatov","Mijatović","MijatovićAlošinac","MijićBarišić","Mijota","Mika","Mikac","Mikač","Mikać","MikaćMlađen","Mikala","Mikan","Mikanovac","Mikanović","Mikašek","Mikašinović","MikešićMerda","Miketa","MikićGradaščević","MikićVučak","Mikinac","Mikla","Miklaj","Miklavčić","Mikloška","Mikodanić","Mikola","Mikolac","Mikolaš","Mikolašević","Miksa","Mikša","Mikula","Mikulan","Mikulandra","Mikulandra Tutavac","Mikulaš","Mikulica","MikulićBednar","Mikuša","Mikuška","Mikuta","Mila","Miladić","Miladinović","Milak","Milakić","Milaković","Milaković Španović","Milanko","Milankov","Milanković","Milanović","Milanovski","Milanovski Varga","Milardović","Milas","Milas Nađ","Milaščević","Milašević","Milašin","Milašinčić","Milašinović","Milat","Milat Lendić","Miler Kardinal","Mileta","MiličićJuhas","MilićGregoran","Milidrag","Milijašević","MilinkovićKalić","Milisav","Milisavljević","MilišićKovačević","Milla","Milobara","Milohanić","Milohnoja","Milojica","Miloknaja","Miloknoja","Miloloža","Milorad","Miloradović","Milosavčević","Milosavić","Milosavljević","MiloševićManojlović","Milovac","Milovanov","Milovanović","Miljački","Miljak","Miljaković","Miljan","Miljančić","Miljanović","MiljanovićŠpika","Miljatović","Mimica","Minarek","Minarik","MinkošBubalović","Mioca","Miodanić","Miodrag","Miodragović","Miranović","Mirjačić","Mirjanić","Mirkajlović","MirkovićStipanić","Mirosav","Mirosavljević","Miroslav","Misanović","Misarček","Mišak","Mišanec","Mišanović","Miščančuk Dugac","Mišeta","Miškatović","MiškovićKlarić","Mišljenac","Mištrafović","Mišura","Mitanović","MitanovićGotić","Mitar","Mitermajer","Miterman","Mitka","Mitrekanić","Mitrina","Mittermann","Mizdrak","Mjeda","Mlačić","Mladenović","Mladina","Mladinov","Mlađenović","Mlakar","Mlakić","Mlikota","Mlinac","Mlinaček","Mlinar","Mlinarec","Mlinarević","Mlinarić","Mlinarik","Mlinarik Alimehaj","Mocnaj","Močilac","Močilnikar","Mofardin","Mogušar","Moharić","Moharoš","Mohila","Mohnacki","Moka","Mokran","Moldovan","Molnar","Molnar Toriž","Molodova","Morača","Morača Crnogorac","Morava","Moravac","Moravec","Moravek","Morgental","Morina","Morman","Morman Lukavec","Moro Vladić","Morovičan","Morvai","Morvat","Moržan","Moržanj","Moskalj","Moslavac","Mostarčić","Mostečak","Mostina","Mošnja","Moštak","Mračkovski","Mrak","MrakŠimenić","Mrakodolac","Mraković","Mraović","Mrastinski Jurčec","Mravec","Mravinac","Mravlinčić","Mravunac","Mraz","Mrazik","Mrazović","Mrčela","Mrdalj","Mrdeša","Mrdeža","Mrdjanović","Mrđa","Mrđan","Mrđanović","Mrekaj","Mrganić","Mrkalj","Mrkela","Mrkobrad","Mrkonja","Mrkota","Mrla","Mrmak","Mrnjavčić","Mrša","Mršak","Mršinjak","Mršo Stančić","Mrva","Mrvaljević","Mrzljak","Mrzljak Rado","Mržljak","Muačević","Muaremi","Mucafir","Mucak","Mucalj","Mucavac","Muchaus","MucićMak","Mučalović","Muha","Muhadri","Muhar","Muharemi","Muharemović","Mujadin","Mujagić","Mujakić","Mujaković","Mujanović","Mujarić","Mujkanović","Muk Vida","Mulac","Mulalić","Mulle ranješ","Muljaić","Muljajić","Munćan","Munda","Mundinac","Munđar","Munikravić","Munkačević","Munkaš","Muradbašić","Muraja","Murat","Murati","Muratović","Murgaš","Muržanj","Musa","Musa Balaš","Musa Korov","Musija","Muslija","MusovićJakovljević","Mustač","Mustać","Mustafa","Mustafić","Mustafov","Mustak","Mustapić","Mušac","Mušanić","Mušanović","Mušija","Mušnjak","Muštran","Mušura","Mutabožić","Mutaja","Mutapčić","Mutavdžić","Mutavdžija","Mutavđić","Mutnjaković","Mutzhaus","Mužar","Muždeka","Muženjak","Nacl","Nača","Nad","Nadalin","Nadarević","Nadašdi","Nadaši","Nadić","Nadj","Nadoveza","Nadžvegi","Nađ","NađMihaljević","NađPejaković","NađRađago","Nađorđ","Nađpal","Nađpalfi","Nađsombat","Nađvegi","Nagj","Naglav","Naglav Faisz","Naglav Hardt","Naglić","Nago","Nagy","Nagy Milošević","Nagypalfi","Nagyszombat","Nagyszombaty","NagyszombatyŠarić","Nagyvegi","Nagyy","Najbauer","Najcer","Najcer Bračevac","Najdanović","Najduček","Najduk","Najev","Najman","Najvirt","Nakani","Nakić","Nako","Nalčić","Naletilić","Nalio","Nalo","Namestnik","Namjesnik","Namjesnik Skender","Namjestnik","Nanaić","Nanaj","Nanay","Nanik","Nappholz","Narančić","Narandža","Narandžić","Naranđa","Narenđa","Nasić","Nategov","Natić","Natran","Naumov","Naumovska","Naumovski","Naumovski Bogdanović","NaumovskiČizmar","Navijalić","Navratil","Nazarević","Nazibegović","Nazifović","Nećak","Nedjeljkov Stambolija","Nedoklan","Negovanović","Nelken Bestvina","Nemčanin","Nemet Ivanović","Nemet Marković","Nemet Petriševac","Nemet Radvanji","NemetŠestak","Nenadić","Nenadov","Nenadović","Neogradi","Neral","Neralić","Neretljak","Nesladek","Nestorović Tavić","Nesvanulica","Netroufal","Neuman","Nevajdić","Nevidal","Nevidal Kraljević","Nezaj","Neziraj","Neznanović","Niedoba","Nikačević","NikićČakar","Niklaj","Nikola","NikolaŽaper","Nikolandić","Nikolaš","Nikolašević","Nikolaus","NikolićKovačić","NikolićOdak","Nikolin Horvat","Nikolin Tormaš","Nikolovska","Nikoljačić","Ništ Kokolari","Nižalek","Nižman","Nogalo","Nonveiller Kovač","Nosal","Nospak","Notta","Novačić","Novački","Novak","Novak Belić","Novak Kovač","Novak Lukadinović","Novak Mehić","Novaković","NovakovićGrčić","NovakovićReininger","Novalić","Novina","NovkovićNarančić","Novogradac","Novogradac Kater","Novogradec","Novogradić","Novoselac","NovoselićKazimić","NovoselićNovak","Novota","Nowosadek","Nožina","Numanović","Nuspahić","Nussgraber","Nyarko","Njari","Njary","Njegovan","Njegovanović","Njirjak","Obad","Obad Omeragić","Obadić","Obajdin","Obermajer","Oberman","Oberman Sebenji","Oblačić","Oblak","Obradović","ObradovićViland","Obranić","Obrdalj","Obrežanac","Obrovac","Obšivač","Obućina","Očanček","Očurščak","Očuršćak","Odak","Odak Peran","Odak Smodlaka","Odavić","Odenvald","Odobaša","Odobašić","Odža","Ofentavšek","Ogar","Ognjan","Ognjanovac","Ognjanović","Ojvan","Okanović","Oklobdžija","Okmažić","Okovacki","Okreša","Okštajner","Olah","Olajos","Olajoš","Olbina","Olbina Borić","Olivari","Olman","Oljača","Omanović","Omazić","Omeragić","OmeragićGatara","Omerašević","Omerbašić","OmerbašićŠišić","Ondrašek","Opačak","Opačak Fidel","Opačak Marković","Opačić","OpačićMatijević","Opalić","Opančar","Opat","Opraus","Oprea","Opselka","Opšivač","Opua","Opuvačić","Orak","Oravec","Orban","Orbanić","Ordanić","Orđan","Orehovac","Orešan","Oreščanin","Orgonaš","Orgulan","Orlovac","Ormanac","Orobabić","Orsag","Oršanić","Oršanski","Osbah","Osekovac","Osenjački","Osička","Oslanski","Osmak","Osmakčić","Osman","Osmanagić","Osmanhodžić","Osmani","Osmanlić","Osmanović","Osonjački","Ososlija","Osrečak","Osrečak Hranj","Ostajmer","Osterkamp","Osthajmer","OstojićVukelja","Ostopanj","Ostrijaš","Ostrman","Ostroman","Osvadić","Osvald","Oswald","Ošap","Ošapić","Ošlaj","Oštarjaš","Otartić","Oterbajn","Otrbajn","Ovad","Ovčar","Ovčar Mabić","Ovčarić","Ovčarik","Ovčina","Ovuka","Owais","Ozanjak","Ozdanovac","Ozimec Rikardo","Ozuška","Ožanić","Ožuška","Ožvald","Ožvalt","Ožvatić","Pacanović","Pacek","Pacek Dokuš","Pacher","Pacić","Paciorek","Pacl","Pacovski","Pacovski Erhard","Pačar","Pačarek","Pačarić","PačarićKulešević","Paći","Padar","Padežanin","Padjen","Padoš","Padovan","Padrov","Pađan","Pađen","Pađen Farkaš","Paestka","Page Holmes","Pahanić","Pahčainović","Pahert","Pahić","Pahl","Paić","Pajančić","PajančićBrkić","Pajazetović","Pajc","Pajcur","Pajčić","Pajčin","Pajdić","Pajer","Pajeska","Pajeska Kornel","Pajestka","Pajestka Mihajlović","Pajić","Pajković","Pajkurić","Pajnić","Pajor","Pajrok","Pajtak","Pajtel","Pajtl","Pajtler","Pajur","Pakasin","Pakić","Pakozdi","Pakšec","Pakši","Pakšić","Pal","Palaček","Palada","Palagyi","Palahinjak","Palaić","Palamaš","Palanac","Palančević","Palandžić","Palašić","Palašti","Palatinuš","Palcer","Palčec","Palčić","Palčok","Paleček","Palfi","Palian","Palić","Palijan","Palinić","Palinkaš","PalinkašŠćurla","Palir","Pališ","Paliž","PaližToth","Palko","PalkoČongor","Palla","Palm","Paloc","Palocz","Paloh","Paloš","Palošić","Palovčik","Paluch","Paluh","Paljević","Paljić","Paljušić","Pamer","Pamić","Pamper","Panak","Pancer","Pancić","Pančić","PančićRuška","Pančiško","Pandi","Pandl","Pandur","Pandurević","Pandurić","PandurićKlusko","Pandurović","Pandža","Pandža Babić","Pandžić","Panđa","Panđić","Panella","Panežić","Panico","Panić","PanićBoromisa","Panišić","Pankarić","Panker","Panković","Panović","Panta","Pantelić","Pantelinac","Pantić","Pantner","Pantoš","Panjak","Panjaković","Panjičanin","Panjičko","Panjkov","Panjković","Pap","Papa","Papac","Papak","PapateodoroŠkorić","Papazović","Papeš","Papež","Papić","PapićHerceg","Papišta","Papo","Paponja","Papp","Papratović","Paprić","Papšić","Papučić","Papuga","Par","Parabak","Parabucki","Parač","Parać","Paradinović","Paradžik","Paradžiković","Parađ","Parađiković","Parađina","Paraga","Paragi","Paragović","Paranos","Parat","Paravac","Paravinja","Parčetić","Pardon","Parezanović","Parežanin","Parić","Paripović","Paris","Park Yong","Parlić","Parlov","Parmačević","Paroški","Parsaee","Partić","Partlić","Parun","Pasa","Pasanović","Pasariček","Pasarić","Paska","Paska Katić","Pasler","Passalis","Past","Pastar","Pasti","Pastor","Pastorćić","Pastović","Pastuhović","Pastulović","Pastuović","Pastva","Pastvečka","Pastvečko","Pasza","Pasztor","Pašagić","Pašajlić","Pašalić","Pašić","Paškov","Paškuljević","PaškuljevićTurniški","Paškvan","Pašti","Pašul","Pašuld","Patača","Patačić","Patafta","Patai","Pataj","Patajac","Pataki","Pataran","Patarčić","Patarich","Patarić","Paternoga","Patila","Patkanj","Patko","Patkoš","Patković","Patoki","Patriarch","Patrlj Popović","Patron","Patrun","Patzl","Paudenović","Pauk","Pauković","Paulaj","Paulay","Paulić","Paulik","Paulini","Paulinić","Paulović","Paulus","Paun","Pauna","Paunković","Paunović","Paurević","Paurić","Paus","Paušak","Paušković","Pauzar","Pauzer","Pavasović","Pavec","Pavela","Pavela Bartol","Pavelić","PavelićPišl","Pavelik","Pavelja","Paver","Pavešić","Pavetić","PavetićHodak","Pavičevac","Pavičević","Pavičić","PavičićPribisalić","PavičićZegnal","Pavić","PavićNikolić","PavićPavlović","Pavićević","Pavin","Pavišević","Pavišić","Pavitović","Pavkov","Pavkov Mehandžić","Pavković","Pavlačić","Pavlak","Pavlak Milić","Pavlečić","Pavlek","Pavleković","Pavlešić","Pavletić","Pavlic","Pavlica","Pavličević","Pavličić","Pavlić","Pavlićević","Pavlik","Pavlinek","Pavlinić","Pavlinović","Pavlinušić","Pavlišak","Pavlošić","Pavlov","Pavlović","PavlovićPrekrat","Pavlovsky","Pavlus","Pavljuk","Pavoković","Pavor","Pavošev","Pavošević","PavoševićKrstanović","PavoševićMatijević","Pavrlišak","Pavrlišek","Pavšić","Pavuna","Payerl","PayerlČikara","Payeska","Pazaver","Pazman","Pazmanj","Pažanin","Pažin","Peaković","Pecarski","Pecelja","Pecolaj","Pecollaj","Pečar","Pečenka","Pečujlija","Pečvarac","Pećanac","Pećar","Pećina","Pećušak","Pehar","Peharda","Peharda Božić","Peica","Pejak","Pejakić","Pejaković","Pejanović","Pejazić","PejićBrezak","Pekanov","Pekanović","Pekar","Pekarik","Peko Lončar","Peko Santo","PelešBračun","Pelikan","Pelivan","Pelivanović","PelivanovićVidaković","Peljhan","Pena","Penava","Penavić","Penavin","Penga","Penzar","Penjašković","Peradenić","Peradić","Peradinović","Perajica","Perajin","Perak","Perak Kučinac","Peraković","Peran","Peranec","Peranić","PeranićPrgomet","Peranović","Perasić","Perasović","Pereža","Perhat","Perica","Perija","Periša","Perja","Perjavica","Perkatlić","PerkovićVirovac","PerkušićKomlenac","Pernar","Pernarčić","PeroševićSilađi","Perša","Pervan","Peša","Pešikan","Pešorda","Peštaj","Peštalić","Peštanac","Petak","PetakŠimunović","Petaković","Petanović","Petanjak","Petarac","Petelka","Peterka","Peternai","Petkovska","Petlovac","Petljanski","Petnjarić","PetnjarićKalić","Petovar","Petovari","Petrač","PetračOžeg","Petrak","Petranović","PetranovićCvenić","Petraš","Petrašević","Petrijevčanin","Petrina","PetrinaŠlihgar","Petrinšak","Petrinja","Petrinjac","Petrinjak","Petriševac","PetrlićStrugačevac","Petrošanec","Petrošanec Pišl","Petrov Vondrak","Petrovac","PetrovićPavlović","Peurača","Pfaf","Pfajfer","Pfann","Piacentini","Pichler Milaković","Pichler Sajler","Pifat","Pigac","Piha","Pijanović","Pijevac","Piknjač","Pikulska Pervan","Pilanović","Pilarić","Pilat","Pilav","Pilgermajer","Pilgermajer Dugalić","Pilgermayer","Pilicar","Piližota","Pilnaček","Pilja","Piljaš","Pinčar","Pintar","Pintar Kerovec","Pintarić","Pinter Franjić","PinjušićBabel","Pipaš","Piplica","Pirak","Pisačić","Pisar","Pisarević","Piskač","Piskać","Piščak","Pišćak","Piškorjanac","Pitinac","Pitomac","Pitra","Pivac","Pivač","PivačZeko","Pivar","Pivaš","Pivašević","PivićKovačević","Pivovariček","Pivovarić","Pjanić","Pjevac","Pjevač","Pjevačević","Plac","Placento","Plaček Bereš","Plačko","Plahinek","Plahinek Jurišić","Plahutnik","Plančak","Plander","Planinac","Planinc","Planinić","Plankar","Plano","Plantak","Plantek","Plantić","Plantosar","Plasaj","Plasajac","Plasajec","Plaskur","Plastić","Plaščak","Plaščak Kukučka","Plaščar","Plaščević","Plašćak","Platiša","Platužić","Platz","Plaušić","Plavac","Plavanac","Plavčić","Plavec","Plaveković","Plavljanić","Plavotić","Plavša","Plavšić","Plavšin","Plazanić","Plazanjić","Plazibat","Plazibat Brodarac","Plazonić","Plazonja","Plazonjić","Plažanin","Plečaš","Plećaš","Plemenitaš","Plenča","Plentaj","Plestenjak","Pleša","Pleška","Pletikapić","Plevnik Cvitanušić","Plevnik Dobravec","Ploskonka","Plukavec","Plužarić","PlužarićBaranja","Pljukavec","Pljuskovac","Pnjak","Poc Kovač","Pocrnja","Počanin","Počijak","Počuča","Počuća","Podbarac","Podgajac","Podgajac Albrecht","Podgorac","Podgoračan","Podgorščak","Podgoršćak","Podhraški","Podkrajac","Podlavicki","Podmanicki","Podmanicky","Podnar","Podoljak","Podpadac","Podravac","Podraza","Podrumac","Podunajec","Podunavac","Pogač","Pogačić","Pohiba","Poka","Pokas","Pokaz","Poklar","Pokrajac","Pokrajčić","Pokrivač","Pokrivka","Pokšiva","Polaček","Polak","Polanc","Polančec","Polanec","Polanščak","Poldrugač","Polerman","Polešak","Poletar","Polgar","Polimac","Polimanac","Pollak","Pollak Haring","Pollak Seričević","Polman","Polovina","Polšak","Poljak","Poljak Meković","Poljak Tibor","Poljaković","Poljančec","Poljanik","Poljarević","Poljičak","Pomarčinović","Pongrac","Pongračić","PongračićHorvat","PongračićPejić","Ponikvar","Ponka","Ponjavić","Popadić","Popara","Poparić","Popijač","Popinjač","Poplaša","Poplašen","Popovac","PopovićBasta","PopovićLubina","PopovićSenaši","Popržan","Porga","Poropat","Portnar","Posavac","Posavac Kunovac","Posavčević","Posavec","Posavec Jakobović","Posavec Kovač","Posavec Tušek","Posavi","Pospihalj","Pospišilova","Poša","Poštaš","Potalec","Potfay","Potkonjak","Potkonjak Rakinić","Potkovac","Potkozarac","Potkrajac","Potnar","Potnar Mijić","Potočar","Potočnjak","Poturak","Poturica","Povarnik","Považanj","Povoljnjak","Pozderac","Poznan","Poznanović","PoznićGorjanac","Pozsar","Požar","Požarnik","Požega","Požežanac","Požgain","Požgain Antolović","Požgaj","Požgaj Vinčić","Požnjak","Požnjak Vukovac","Pračić","Prađeno","Prah","Prahin","Praiz","Prajiz","Prakatur","Prakljačić","Pralas","Pralica","Pralija","Praljak","Prančević","Prangart","Pranić","Prankić","Pranješ","Pranjić","Pranjković","Praskalo","Prašnički","Prašnikar","Prašnjak","Pratljačić","Pratnemer","Pravdić","Pravdić Jurišić","Pravica","Pražak","Prebiračević","Prečanica","Predmerski Iharoš","Predovan","Predragović","Predrevac","Predrijevac","Preglej Kovačević","Prekačin","Prekodravac","Prekpalaj","Prekpaljaj","Prekrat","Prekratić","Preksavec","Preloščan","Prendaj","Prenkpalaj","Preradović","Presečan","Presnac","Prespjanin","Prespljanin","Prevendar","Prgomelja","Prgomet Selak","Prhal","Pribanić","Pribisalić","Prica","Prijatelj","Priman","Primorac","Prinčevac","Priselac","Pristav","Pristavnik","Pristojak","Prisuda","Pritisanac","Pritišanac","Privara","Prka","Prkačin","Prnjat","Procaj","Prodan","Prodanić","Prodanović","Prohaska","ProkešGracek","Prokuplja","Proleta","Prološčić Ćaleta","Prološčić Polovina","Prosan","Prostran","Protrka","Prpić Križevac","Prskalo","Prša","Prša Lučenčić","Prtenjača","Prtoljan","Prusac","Prusina","Pružinac","Prvonožac","Psotka","Pšag","Pšak","Pšenica","Ptičar","Ptičar Balajić","Puač","PuačMatešić","Puača","Pualić","Pucan","Pucar","Pucarević","Pucarin","Pucarin Kojić","Pudar","Pudža","Puđa","Pufler Sajler","Pugar Vajdić","Puhač","Puhali","Puhalo","Puhalović","Puhanić","Puhar","Puharić","Pukljak","Puktalović","Pulitika","Pulver Polimac","Pulja","Puljak","Puljek Salai","Punčikar","Punda","Pungrčar","Pupavac","Pupovac","Pupovac Fodor","Purar","Pureta","Purgar","Purgar Kalamari","Purgarić","Purkar","Purkat","Pustai","Pustaj","Pustaji","Pušac","Pušač","Pušelja","PušeljićŠimica","Pušenjak","Pušeta","Puškadija","Puškar","Puškarčuk","Puškarić","Putar","Putarić","Puvača","Puvalić","Puzavac","Pycha","Qenaj","Quast","Rab","Rab Guljaš","Rabac Knezović","Rabađija","Rabar","Rabbi","Rabbi Kalman","Rabel","Rabi","Rabić","Rabl","Rabljenović","Raboteg","Rac","Rac Sabo","Raca","Racić","Rack","Racko","Racz","Raček","Račić","Račimorski","Rački","Računica","Radačić","RadačićBosilj","Radak","Radaković","RadakovićMatovina","Radaljac Jurkin","Radan","Radan Dukić","Radanić","Radanović","RadanovićAmšlinger","RadanovićGrgurić","Radaš","Radašinović","Radat","Rade","Radeka","Radelić","Radeljak","Radeljić","Radenić","Radenković","Radešić","Radetić","Radičanin","Radičev","Radičević","Radičić","Radić","RadićBenki","RadićBilin","RadićČuti","RadićPechaček","RadićPocrnić","RadićStrižak","Radićanin","Radigović","Radijevac","Radiković","Radin","Radinčić","Radinković","Radinovac","Radinović","Radinski","Radiša","Radišević","Radišić","Radivoj","Radivojac","Radivojčević","Radivojević","Radko","Radl","Radl Barjaktarić","Radl Humer","Radlović","Radljević","Radman","Radman Dijkgraaf","Radman Meić","Radmanić","Radmanovac","Radmanović","Radmilović","Radnić","Rado","Radočaj","Radoćaj","Radoja","Radojčić","Radojčin","Radojević","RadojevićBačun","Radojica","Radojković","Radolić","Radolović","Radomirović","Radonić","RadonićVesel","Radonjić","Rados","Radosavac","Radosavljević","Radoš","RadošČatak","Radošević","Radošić","Radotić","Radovac","Radovančević","Radovanić","Radovanović","RadovanovićMiodragović","RadovanovićPetarac","Radović","Radujko","Radujković","Raduka","Radulić","Radulović","RadulovićBrdar","Radun","Radunković","Radunović","Radusin","Radusinović","Radušić","Radvanji","Radzira","Rađa","Rađan","Rađenović","Rafaj","Rafajac","Raff","Rago","Raguš","Raguz","Raguž","RagužBošnjak","RagužLučić","RagužPelić","Raich","Raič","RaičNowosadek","Raičević","Raičković","Raić","Raihl Kir","Railić","Raiz","Raizner","Rajačić","Rajaković","Rajc","Rajci","Rajčan","Rajčanji","Rajčevac","Rajčević","Rajčić","Rajda","Rajh","Rajher","Rajhl","Rajič","Rajić","Rajki","Rajkov","Rajkov Schleininger","Rajkovača","Rajkovačić","Rajković","RajkovićŠpoljarić","Rajle","Rajlić","Rajman","Rajndl","Rajndl Zubčić","Rajnić","Rajninger","Rajnović","Rajs","Rajs Ažić","Rajsz","Rajš","Rajšel","Rajšić","Rajtek","Rajter","Rajter Antić","Rajter Obrovac","Rajzl","Rak","Rak Kovač","RakŠtrbac","Rakanović","Rakarić","Rakas","Rakazović","Raketić","Rakić","Rakin","Rakin Hečko","Rakinić","Rakipi","Rakipović","RakipovićStojanović","Rakitić","Rakitničan","Rakitovac","Rakmić","Raknić","Rako","Rakocija","Rakočević","Rakonca","Rakonić","Rakovac","Raković","Rakušić","Ralašić","Ralbovski","Ralević","Ralić","RalićPopović","Rališ","Rall","Raljević","Raljić","Ramač","Rambusek","Ramčić","Ramić","Ramljak","Rancinger","Rančak","Rančić","Rančilović","Randović","Randunković","Ranđelović","Rangelov","Ranisavljević","Rank","Ranković","Ranogajac","Ranogajec","Ranogajec Böhm","Raos","Rap","Rapaić","Rapajić","Rapan","Rapčak","Rapić","Rasić","Rasonja","Raspasović","Raspopović","Raspor","Raspudić","RaspudićBrekalo","Rastić","Rastija","Rastovac","Rastović","Rastovski","Raščan","Raščanac","Raščanec","Raščanin","Rašeta","Rašetić","Rašić","Raškaj","Rašković","Rašljanin","Rašo","Rašperger","Raštegorac","Rat","Ratajac","Ratajec","Ratar","Ratić","RatićReinspach","Ratinčević","Ratkaj","Ratkajec","Ratko","Ratkovčić","Ratković","Rattinger","Rauch","Raucher","Raucher Josić","Rauher","Raumberger","Rausavljević","Rausch","Rausnitz","Rauš","Raušenberger","Raušević","Rauški","Raužan","RaužanŠibalić","Ravas","Ravlić","RavlićVrbešić","Ravlija","Ravnjak","Razer","Razić","Razl","Razman","Razum","Razumović","Ražić","Ražnatović","Reaček","Reba","Rebrača","Rebrina","Rebrna","Rebronja","Rebula","Rečica","RečićDraksler","Reder Vladić","Redžep Borak","Redžepagić","Ređa","Regajs","Regeljac","Rehak","Rehner Samardžić","Reinhardt","Reinspach","Reintebach","Reitenbach","Rekaš","Reksa","Relatić","Relja","Reljac","Reljan","Reljanović","Remaj","Remenar","Remeta","Remžgar","Remžgar Adam","Renčar","RennichČajko","Rennich Sabri","Repac","Repajić","Repalust","Repar","Repija","Repinac","Repka","Resan","Resanović","Resele Podnar","Resiga","Rešetar","Rešetar Rudić","Rešetarović","Reškovac","Reštar","Retkovac","Revald","Reveland","Revelant","Rezo Bošnjak","Režnjak","Riba","Ribar","Ribar Fekete","Ribarić","RibićGreganić","Rica","Richard","Ridgaser","Rigljan Stanisavljević","Rigo Blažević","Rigo Katanić","Rigo Mihajlović","Rihard","Rihart","Rihtarić","Rikanović","Rimac","RimacČota","Rimac Drlje","Rimai","Rimaj","Rimar","RipićMarjanović","Ristova","Rittgasser","Ritza","Rizvanović","Rkman","Rnjak","Robak","Ročoska","Rodjak","Rođak","Rođaković","Rogač","Rogalo","Rogan","Rogar","Rogić Janković","Rogina","Roglić Stanković","Rogoz Katić","RogozŠola","Rogulja","Rohaček","Roksandić","RoksandićKrižan","Roland","Romac","Roman","Romanić","Romanik","Romanović","Romanjek","Romanjik","Romštajn","RončevićMarković","Rončka","Ronta","Rora","Rorbaher","Rosandić","Rosani","RosoČajo","Rostaš","Roškar","Roško Vrtarić","Rošta","Roterbauer","Rothenbacher","Rothenhausler","Rozmajer","Rozman","Roža","Rožac","Rožajac","Roždijevac","Rožina","Rožman","Rožmarić","Ruda","Rudan","Rudar","Rudaš","Rudinski Grginac","Rudinski Mijatović","Rudman","Rudnjak","Rudvald","RuffŠarić","Rugole Car","Rugole Kocijan","Rujevčan","Rukavina","Rukavina Dobrišek","Rukovanski","Rukovanjski","Ruman","Rumbak","Rumbak Vajak","RumićBogdan","Rumora","Rumštajn","Runac","Runjak","Rupaner","Rupar","Rusan","Ruseva","Rusjan","Rušak","Rušanac","Rušanoski","Ruška","Ruška Krljar","Rušnjak","Rutar","Ružak","Ružanić","Ružička","Ružman","Sabadi","Sabadoš","Sabadžija","Sabelja","Sabić","Sablić","Sabljak","Sabljar","Sabljarić","Sabljić","Sabljić Talucci","Sabljo","Sabo","Sabo Hamidović","Sabočan","Sabočanac","Sabok","Sabol","Sabolčec","Sabolčić","Sabolek","Sabolek Tegzeš","Sabolić","Sabolović","Sabolski","Saborčić","Sabov","Sabow","Sabri","Saček","Sačer","Sačer Grgić","Saćer","Sadaić","Sadiki","Sadiković","Sadiku","Sadlek","Sadović","Sadžak","SadžakovićMatak","Safić","Safkin","Saftić","Sagadi","Sagadin","Sagaj","Saher","Sahula","Saić","Sailović","Saiti","Sajc","Sajda","Sajdl","Sajenković","Sajer","Sajfert","Sajko","Sajler","Sajlović","Sajter","Sak","Sak Bosnar","Sak Vitić","Sakač","Sakačić","Sakal","Sakić","Sakoman","Saković","SakovićVajzenbach","Sakradžija","Saks","Saksinger","Salai","Salaić","Salaj","Salaji","Salajić","Salak","Salak Tonhajzer","Salamaha","Salamon","Salamun","Salapić","Salaški","Salatić","Salčinović","Saler","Salha","Salić","Salihi","Salihović","Salijević","Salimović","Salinger","Salitrežić","Salkanović","Salkić","Salma","Salmadić","Saloki","Salonja","Salopek","Salopek Kotromanović","SalopekŽiha","Saljihi","Saljiji","Samac","Samac Katruša","Samarčić","Samardžić","SamardžićIlić","Samardžija","Samardžija Momčilović","Samarđić","Samarđija","Samaržija","Sambol","Sambolec","Samir","Samohod","Samohodaj","Samson","Sancin","Sandić","Sandukčić","Sanela Milanković","Sanić","Sanković","Sanseović","SanseovićZorica","Santaj","Santin","Santini","Santl","Santo","Santoši","Santovac","Santovac Livada","Santrač","Santrić","Santruček","Santucho Pejin","Sanjarić","Sapanjoš","Saplaić","Sarač","Saraga","Sarajlić","Sarajlija","Sarap","Sarapa","Saratlija","Saravanja","Sardelić","Sarić","SarićŠpiranović","Sarijević","Sarka","Sarkanjac","Sarkić","Sarta","Sarvaš","Sas","Sasi","Sastić","Satek","Satler","Satner","Sauer","Sauerborn","Sauerborn Dorić","Saulić","Sauter","Savadinović","Savanović","Savatić","Savatović","Savelić","Saveljev","Saveljić","Saver","Savevska","Savevski","Savičić","Savić","SavićDrašković","SavićPayerl","SavićTanacković","Savićević","Savin","Savković","Savova Peček","Savović","Scarpa","Scarpa Bugarić","Schapringer","Schasche","Schatzl","Schatzl Bakarec","Scheidsach","Scheimann","Schermann","Schmidt Korman","Schnalzer","Schönhof Kovačević","Schonschadowski","Schornavache","Schteigmajer","Schuessler Mandić","Schumacher","Schutzbach","Schwaller","Schwarzl","Schweizer Nađ","Sebal","Sebauer","Sečak","Sečan","Sečujac","Sedak","Sedarević","Sedlaček","Sedlan","Sedlan König","Sedlar","Sedmak","Segetlija","Sekač","Sekalec","Sekanić","Sekanović","Sekošan","Sekovanić","SekovanićCincar","Sekula","Selak","Selak Zeljko","Selaković","Selan","Selar","Selec Grejza","SelešiĐurica","SelićGnjaić","Seligman","Selman","Selmani","Seljaković","Seljmani","Seman","Semeljac","Semeljac Nikolić","Semialjac","Semijalac","Semijaljac","Senaši","Senčanin","Senčar","Senderak","Senđervari","Seničanin","Senohrabek","Senta","Sentivanac","Sentivanski","Sentkiralj","Sentkiralji","Serbedžija","Serdahelji","Serdar","Serdarević","Serdarušić","Seropian","Seropian Orkić","Ses Gado","Sesar","Sesvečan","Sesvečan Anić","Sesvećan","Sevald","Shala","Shamonky","Shaqiri","Siča","Sičaja","Sičajmov","Sičenica","Sigečan","Sigetac","Sigetlija","Sigurnjak","Sijarto","Sikirica","Sikora","Sikra","Sikra Golemac","Siladi","Siladji","Silađev","Silađi","Silajčik","Silajdžić","Silajdžija","Sildajev","Silika","Silvaš","Silvaši","Siljan","Siljanoska","Siljanoski","Simanić","Simatović","Simjanovski","Sinanović","Sinrajh","Sintai","Sinjaković","Siracki Kopić","Sireta","Sirotanović","SirotanovićŠipoš","Sirovica","Sirovina","Sisan","Sita","Sitar","Sitarić","Sitaš","Sivak","Sjauš","Skakić","SkakićBegić","Skala","Skaličić","Skandović","Skelac","Skeledžija","Skeleđija","Skenderija","Skitarelić","Sklabinski","Sklenar","SkokićAzenić","SkokićVučak","Skopalj","Skopljak","Skorupa","Skorupan","Skračić","Skroban","Skroza","Skukan","Skular","Skupnjak","Slabak","Slabinac","Slačanac","Sladaković","Slade","Sladić","Sladin","Sladoja","Sladojević","Sladović","Slakić","Slaković","Slam","Slamek","Slamić","Slanina","Slaninka","Slanovic","Slanovic Kuzmanović","Slanović","Slatina","Slatinac","Slatki","Slaver","Slavica","Slaviček","Slavić","Slavićek","Slavik","Slavinac","Slavković","Slavnić","Slavnović","Slavujević","Slavulj","Slavuljica","Slipac","SliškovićBartoloti","Slivac","Slivar","Slivka","Slivonja","Sloboda","Slobodan","Slobodjanac","Slobođan","Slobođanac","Slogar","Slokan","Slonka","Slonja","Slota","Slovaček","Sluganović","Slukan","Slutaj","Smaić","Smailbegović","Smajić","Smajlović","Smajo","Smakaj","Smažil","Smeška","Smetanin","Smiljan","Smiljanec","Smiljanić","Smješka","Smodlaka","Smolka","Smoljak","Smoljan","Smoljanac","Smoljanec","Smoljanić","Smoljanović","Smrčak","Smrekar","Sobačić","Sobonja","Sočivica","Sodar","Softa","Softa Majer","Soka","Sokač","SokačBalog","SokačConway","Sokačić","Sokać","Sokol Konrad","Sokolar","SokolićBilandžić","SokolićMihalak","Solak","Solanović","Solanjski","Solar","Soldan","Soldat","Soldo Pastar","Soleša","Solga","Solina","Solona","Solonja","Sombathelji","Somborac","Somljačan","Somolanji","Somrak","Sonnenfeld Kadlec","Sontacchi","Soon Han Soo","Sopjanac","Sopka","Sopta","Sosa","Sotinac","Sotirovska","Sovar","Sovina","Spaček","Spahić","Spahija","Spaić","Spajić","Spaqi","Spasenović","Spasenovska","Spasenovski","Spasić","Spasojević","Spasovski","Splavski","Spoljarić","Sprečaković","Sraga","Sraka","Srakić","Srb Petrinšak","Srbljanin","Srbljanović","Srdanović","Srdar","Srdarević","Srđak","Sremac","Srijemac","Srimac","Srmljanin","Srpak","Srša","Sršan","SršićKovač","Stadler","Stajević","Stajić","Stajin","Stajki","Stajković","Stakić","Staklarević","Staklenac","Stakor","Staković","Stamatoski","Stambolija","Stamenić","Stamenković","Stamenkovski","Stamičar","Stanar","Stanarević","Stančer","Stančić","Stančin","Stančirević","Stande","Stanečić","Stanek","Stanešić","Stanglmayr","Staničić","Stanić","StanićKmoniček","StanićRešicki","StanićŠtampek","Stanimijić","Stanimirović","Stanisavljević","Stanislav","Staniša","Stanišić","Stanivuk","Stanivuković","Stankić","Stanko","Stanković","StankovićKuna","StankovićMarton","Stanojčić","Stanojević","Stanojevljević","Stanojlov","Stanojlović","StanojlovićBotić","Stantić","Stanulov","Stanušić","Stanjković","Staparac","Stapić","Starčević","StarčevićDuvnjak","StarčevićMatijaško","StarčevićŠkarica","Starćević","Starešina","Starijaš","Stark","Staščik","Stašćik","Stavrić","Stazić","Stažić","Stefan","Stefankov","Stefanov","Stefanović","Stefanovski","Stefanovski Šefer","Steiner Brezničar","Stepan","Stepanić","Stepanović","Sternad","Stevanović","Stijelja","Stipac","Stipan","Stipančević","Stipandić","Stipanić","Stipanov","Stipanović","StipićVarvodić","Stivaničević","Stjepan","Stjepanek","Stjepanić","Stjepanović","Stjepanovski","StjepićMandić","Stoisavljević","Stojačić","Stojadinov","Stojadinović","Stojak","Stojaković","Stojan","Stojanac","Stojančić","Stojanov","Stojanović","Stojanovski","Stojavić","Stojisavljević","StojkovićMarčetić","Stojmanović","StojnovićOpačić","Stojsavljević","Stokanov","Stokanović","Stokuća","Stolar","Stolla","Strabić","Stracenski","Strahija","Strahinec","Strahinić","Strahinjić","Strahonja","Strajinić","Strajlović","Strajnić","Strajnović","Straka","Strakoš","Stramput","Stranatić","Stranput","Stranski","Stranjak","Strapač","Strapko","Strašek","Straub","Stravka","Stražanac","Stražanček","Strbad","Strbat","Strehovac","Strepački","Strešnjak","Strganac","Strgar","Strikinac","Strinavić","Strižak","Strmota","Strnad","Strpčanin","Strsoglavec","Strugačevac","Strugalović","Strugar","Struhak","Strukar","Stubičan","Stubičar","Stučka","Stupalo","Stupar","Stuparić","Subanović","Subašić","Subatić","Subjak","Subota","Sucala Mateić","Suchanek","Sučija","Suda","Sudar","Sudarević","Sudarić","Suhalj","Suhanek","Suhina","Suhopoljac","Suk Lamot","Sukačić","Sukalić","SuknaićBrinzej","Sulejmani","Sulejmanović","Sulejmanovski","Sulemanoski","Sulimani","Suljagić","Suljkanović","Suman","Sumarev","Sumrak","Sunarić","Superina","Sureta","Surla","Surota","Surovac","Surovčak","Susetka","Suša","Sušac","Sušac Bubić","Sušac Gajić","Sušak","Sušanj","Sušenka","Sušjenka","Sutarić","Suvajac","Suvala","Suvalj","Suvalj Kušter","Suvaljko","Svalina","Svalina Seletković","Svatić","Svečnjak","SverićPtičar","Svetina","Svilanović","Svilar","Svinjarević","Svirac","Svirać","Svoboda","Svoboda Mitoš","Svorcan","Svoren Uzelac","Svraka","Svrakačić","Svrakić","Svrtan","Svržnjak","Svržnjak Capek","Szabo","Szantosy","Szellar","Szentkiraly","Szentkiralyi","Szikra","Szilagy","Szilagyi","Szilvaši","Szombathelyi","Šabaković","Šabalić","Šaban","Šabanagić","Šabani","Šabani Ljutvi","Šabanov","Šabanović","Šabarić","Šabić","ŠabićDumančić","Šabjan","Šac","Šacl","Šaćiri","Šadl","Šafar","Šafarić","Šafarik","Šafran","Šafranko","Šafranj","Šagi","Šagodić","Šagolj","Šagovac","Šahini","Šahinović","Šain","Šainović","Šajatović","Šajber","Šajbl","Šajdler","Šajer","Šajfar","Šajfar Knežević","Šajgaji","Šajgo","Šajh","Šajin","Šajinović","Šajkaš","Šajkunić","Šajkunović","Šajn","Šajnović","Šajtoš","Šajvan","Šaka","Šakač","Šakanović","Šakić","Šakota","Šakotić","Šala","Šalaj","Šalajić","ŠalajićVukić","Šalamon","Šalamun","Šalavarda","Šalavardić","Šaldić","Šalek","Šalić","Šalika Todorović","Šalindrija","Šalinović","Šalković","Šalov","Šalov Jovandžikov","Šalovac","Šamadan","Šamanović","Šambić","Šamija","Šamonik","Šamota","Šamšalović","Šamu","Šamukić","Šandor","Šandorka","Šandrk","Šandro","Šandrovčan","Šangut","Šanić","Šanko","Šanta","Šantak","Šantalab","Šantar","Šantavec","Šantek","Šantić","Šantor","Šantoši","Šanjug","Šapčanin","Šapić","Šapina","Šaponja","Šaponja Lekšan","Šaponjić","Šarabača","Šarabaća","Šarabok","Šarac","Šaravanja","Šarc","Šarčanin","Šarčević","Šarćević","Šardi","Šare","Šarec","Šarek","Šarengradac","Šaretović","Šargač","Šargavinski","Šargovinski","Šarić","ŠarićBisatzky","Šariri","Šarkez","Šarkezi","Šarko","ŠarlahČačić","Šarlija","Šaronić","Šarović","Šaruga","Šarvari","Šaš","Šaša","Šašek","Šašić","Šaško","Šašlić","Šašlin","Šašlin Stipan","Šašo","Šašvari","Šat","Šatara","Šatlan","Šatović","Šatrović","Šatvar","Šaula","Šaulić","Šavora","Ščavničar","Ščerbakov","Ščerbakova","Ščrbak","Ščukanec","Šćasni","Šćepančević","Šćetar","Šćetka","Šćrbak","Šćukanec","Šćurla","Šeat","Šeatović","ŠeatovićWranka","Šebalj","Šebjanić","Šegan","Šegavčić","Šegota","Šejatović","Šekerija","Šekularac","Šelaj","Šelja","Šencaj","Šenica","Šeničar","Šepac","Šeparević","Šeparović","Šepecan","Šeperac","Šepka","Šerbedžija","Šerbeđija","Šerega","Šereš Taslidžić","Šerf Kardov","Šerman","Šeruga","Šesta","Šestak","Šestan","Šestanović","Šestanj","Šeša","Šetka","Šetula","Ševarac","Ševerdija","Šibalić","Šibila","Šijačić","Šijak","Šijaković","Šijan","Šikac","Šikanja","Šiketanc","Šikman","Šilac","Šilipetar","Šilovinac","Šiljak","Šiljak Trifunović","Šimac","Šimak","Šimanovac","Šimanović","Šimara","Šimašek","Šimatić","Šimatović","ŠimenićKovač","ŠimetićHajberger","ŠimićBogdanović","ŠimićŠebalj","Šimleša","Šimlješa","Šimonka","Šimpraga","Šimudvarac Travica","Šimulija","ŠimunićGašpar","ŠimunovićUljarević","Šimurda","Šimurina","Šinka","Šipalo","Šipek Kraševac","Šipka","Šiplika","Šipoc Princhausz","Šiprak","Šiptar","Šipura","Šira","Širac","Širajčić","Šišan","ŠiškićŠpanjević","Šišljagić","Šišuljak","Šivak","Škala","Škalec","Škalic","Škalić","Škamrala","Škara","Škare","Škarica","Škarica Jovkov","Škaričić","Škarić","Škaro","Škaurin","Škergat","Škerlak","Škeva","Škiljaica","Škiljan","Škoda","Školar","Školka","Školka Banović","Školopija","Škorak","Škorjanc","Škorjanec","Škorvaga","Škraba","Škrabak","Škrabić","Škrapec","Škrapić","Škrbac","Škrilac","Škrinar","Škrinjar","Škrinjarić","Škrinjarić Cincar","Škrljac","Škrnjug Majer","Škrobar","Škrpan","Škulac","Škuranec","Škurla","Škvarić","Šlageter","Šlang","Šlanković","Šlat","Šlezak","Šlibar","Šlingar","Šlogar","Šlopar","Šljivac","Šmaguc","Šmaholc","Šmajdek","Šmajzl","Šmital","Šmudla","Šnajdar","Šnajder","Šnajder Kuburić","Šnajkart","Šnalcer","Šnauc","Šnurkar","Šobačić","Šobak","Šoban","Šoban Božić","Šobar","Šobat","Šobota","Šodolovac","Šoja","Šoja Rikert","Šojat","Šokac","Šokčić Matković","Šokman","Šola","Šolaja","Šolak","Šolak Petković","Šolta","Šolja","Šoljan","Šoma","Šomođvarac","Šomoljanski","Šomorja","Šoponjaj","Šorak","Šorda","Šorman","Šormaz","Šormaz Mitrović","Šorša","Šostar","Šostarec","Šostarko","Šoša","Šoštar","Šoštarec","Šoštarek","Šoštarić","ŠoštarićVarga","Šoštarko","Šota","Šotanji","Šotman","Šotra","Šovag","Šovagović","Šovakov","Špac","Špajh","Špajzer","Špalat","Špalj","Špandler","Španiček","Španić","Španiel","Španović","Španjević","ŠpanjevićBukarica","Španjić","Šparavec","Špehar","Špelac","Šperac","Šperanda","Šperjak","Špernoga","Špernjak","Špica","Špičak","Špika","Špika Polić","Špiljak","Špionjak","Špionjak Marić","Špiranec","Špiranović","ŠpiranovićKanižaj","Šplajt","Špoljar","Špoljar Bosanac","Špoljarec","Špoljarević","ŠpoljarevićTurk","Špoljarić","ŠpoljarićJelić","ŠpoljarićPerhat","ŠpoljarićZlatić","Špoljarinec","Šprajcer","Špralja","Špringer Kovačević","Špringer Margetić","Špringman","Šrajber","Šrajer","Šrajer Hacker","Šrajner","Šram","Šramek","Štaba","ŠtabaŽulj","Štabek","Štadler","Štagljar","Štainer","Štajdohar","Štajduar","Štajduhar","Štajenbrikner","Štajerac","Štajfer","Štajhofer","Štajmaher","Štajmec","Štajnbrikner","Štajnbrinker","Štajner","Štajner Mehičić","Štajnfeld","Štakić","ŠtakićBruić","Štakor","Štalman","Štamberger","Štambuk","Štampalija","Štampar","Štampek","Štampf","Štampfer","Štancer Radić","Štanfel","Štangl","Štargl","Štark","Štasni","Štasny","Štaub","Štaubringer","Štefan","Štefan Ivanišić","Štefan Stipić","Štefanac","Štefančić","Štefanec","Štefanek","Štefanić","Štefanko","Štefanović","Štefičar","Štegmajer","Štembergar","Štepanko","Šteta","Štetka","Štifan","Štimac","Štimac Glaser","Štimac Popić","Štirjan","Štoka","Štokan","Štokbauer","Štola","Štolba","Štolfa","Štorat","Štrajbl","Štrak","Štrak Grgić","Štrasser","Štraub","Štraus","Štrbac","Štrbac Tišma","Štrbenac","Štrekelj Pađen","Štriga","Štrigar","Štrkalj","Štroliga","Štromar","Štuka","Štula","Štulac","Štulina","Šturman","Šuba","Šubara","Šubarić","Šubaša","Šućura","Šuflaj","Šugar","Šugarić","Šuica","Šujica","Šukunda","Šukurma","Šulava","Šulhof Jagodić","Šulina","Šulmajster","Šulovnjak","Šuljak","Šuman","Šumanovac","Šumanović","Šumar","Šumiga","Šumrada","Šunalić","Šunda","Šundalić","Šuniga","Šunjara","Šunjerga","Šupljika","Šuprina","Šuprna","Šura","Šurina","Šurjan","Šurlan","Šustar","Šusterajter","Šuša","Šušak","Šušak Bagarić","Šušnjar","Šušnjara","Šuštar","Šuta","Šutak","Šutak Kosić","Šutalo","Šutalo Ibrahimpašić","Šuvak","Šuvakov","Šuvaković","Šuvarić","ŠuveljakŽuljević","Švab","Švabe","Švabel","Švabelj","Švabić","Švacov","Švaganović","Švagelj","Švager","Švajbert","Švajcer","Švajger","Švajgert","Švajhofer","Švajnbert","Švaljek","Švarc","Švarcer","Švarcmajer","Švarić","Švegar","Švenda","Švetak","Švigač","Švonja","Švraka","Tabaček","Tabain","Tabak","Tabaković","Tabor","Tabori","Taborin","Tabula","Tacko","Tačković","Tadej","Tadić","TadićĆavar","TadićMatić","Tadija","Tadijan","Tadijanov","Tadijanović","Tagliber","Tagliber Modrić","Tahić","Tahiri","Tahirović","Tahler","Tahtler","Tairi","Tajfl","Tajhman","Tajhman Polgar","Tajić","Tajmer","Tajs","Tajz","Takacz","Takač","Takać","Takalić","Takaro","Takov","Talafuk","Talaja","Talajić","Talan","Talapka","Talapko","Talas","Talavanić","Taler","Taletović","Talić","Talijan","Talijanac","Taloš","Talpai","Talvizer","Tamaš","Tambolaš","Tame","Tame Ivaković","Tamindžić","Tanacković","Tanasić","Tanasijević","Tanasković","Tanazović","Tančak","Tančik","Tandara","Tandarić","Tanevska","Tanevski","Tanić","Tankosić","Tanocki","Tanović","Tanurdžić","Tanžera","Tanjer","Tanjga","Tapšanj","Tapšanji","Tar","Taraba","Tarabarić","Taradan","Taradi","Tarakčija","Tarandek","Tarandžić","Taranić","TaranićVagner","Taraš","Tarbuk","TarbukČivić","Tarcal","Tardik","Tarđanin","Targuš","Tariba","Tarle","Tarlošy","Tarnai","Tarnaj","Tarodi","Tasić","Taslak","Taslidžić","Tasovski","Tassone","Tašković","Tatai","Tataj","Tataji","Tatalović","Tatar","Tatarević","Tatarin","Tatarko","Tatarović","Tatić","Tatomir","Tatomirović","Taus","Taušan","Tauzović","Tavas","Taves","Tavić","Tavra","Tavrić","Tegeltija","Tekavčić","Telak","Telarović","Telebar","Telenta","Telišman Krha","Temaj","Teneta","Tenžera","Teofanović","Tepavac","Ternaj","Teskač","Teskera","Tesla","Tešanac","Tešankić","Tešanov","Tešanović","Tešija","Tettmann","Teufel Damjanov","Tevanović","Than","Thellman","Thiel Manfred","Thomajer","Thomas Majdenić","Tiban","Tibinac","Tibljaš","Tibor Kovač","Tiborc Juriša","Tica","Tičac","Tičak","Tićak","Tidlačka","Tiervald","Tierwald","Tigandžin","Tijan","Tijanić","Tijardović","Tikas","Tilman","Tilman Crnov","Timar","Timarac","Timarić","Tinaher","Tipura","Tirvald","Tirvald Vrhovski","Tisai","Tisaj","Tisanić","Tissauer","Tišljar","Tišljarić","Tišma","Tišma Radmanić","Tivadar","Tivanovac","Tkačuk","Tkalac","Tkalčec","Tkalčević","Tkalčić","TkalčićDulić","Tkalec","Tkalec Povoljnjak","Tobijas","Tobijaš","Todanović","Todorovska","Togonal","Tojaga","Tojagić","Tojzan","Toka","Tokai","Tokalić","TokićMajstorović","Tolmačević","Tolnai","Tolnaj","TolušićLacković","Toljan","Toljanić","Tomac","Tomaić","Tomakić","Tomaković","Tomala","Toman","Tomanček","Tomanić","Tomanović","Tomas","Tomasić","Tomasino","Tomasović","Tomasy","Tomaš","Tomašegović","Tomašek","Tomašev","Tomašević","TomaševićGregorović","TomaševićRigo","Tomaši","Tomašić","Tomašićević","Tomaško","Tomašković","Tomaz","TomićGotal","TomićMartinović","TomićObrdalj","TomićSablić","Tominac","Tomka","Tomljanović","Tompa","Tomrecaj","Tončalek","Tonkovac","Topal","Topalić","Topalov","Topalović","Toplak","Topolovac","Topolovčan","Torbarina","Torbica","Tordinac","Torijanac","Torjanac","Torlaković","Torloina","Tormaš","Toskova","Toša","Toša Berečić","Tošanović","Tot Antal","Tot Kaša","Tot Marčik","Tota","Totaj","Totarvaj","Toth Tucak","TotićMatess","Totman","Tovarloža","Tovarović","Tovjanin","Trac","Traffa","Traic","Traičevska","Traičevski","Trajanoski","Trajanović","Trajanovski","Trajber","Trajković","Traljić","Tram","Tramišak","Tramošljanin","Tramposch","Trampus","Tramšek","Trančar","Tratnjak","Trauber","Travančić","Travica","Trazer","Trbara","Trboglav","Trčak","Trčak Ocvirek","Trenka","Trepač","TrepšićBašić","Tresiglavić","Treskanica","Treskavica","Tresoglavić","Tretinjak","Tribuljak","Tripolski Kovačević","Triva","Trivanović","Trkulja","Trlaja","Trlajić","Trnka","Trnjanov","Trobonjača","Troha","Trojan","Trplan","Trputac","Trstenjački","Trstenjak","Trtanj","Trtica","Trubelja","Trubeljak","Truhan","Truhar","Trupeljak","Trupina","Trvalovski","Tuba","Tubanović","Tubanski","Tubanjski","Tucak","Tucak Roguljić","Tucaković","Tučanac","Tučkar","Tudaković","Tudja","Tuđan","Tuđman","Tukara","Tukera","Tuksar","Tulla","Tuma","Tuma Pavlov","Tumbas","Tumpa","Tunanović","Tunkova","Tunja","Tupeljak","Turajlić","Turalija","Turčan","Turda","Turibak","Turičar","Turina","Turina Lončar","Turinski Lazić","Turjak","TurjakČebohin","Turkalj","Turkalj Topal","TurkovićGibanjek","Turnadžić","Turšćak","Turza","Tustonja","Tuškan","Tuškanović","Tušla","Tuta","Tutavac","Tuzlak","Tuzlak Kurtović","Tvarog","Tvrdoreka","Tvrdorjeka","Ubavić","Ubavin","Ucal","Udarević","UdovićLazarević","Udvardi","Udvari","Ugarak","Ugarčić","UgarčićHardi","Ugarković","UgarkovićBiškup","Uglarik","Ugljanac","Ugljar","Ugljarević","Uglješa","Ugrai","Ugrica","Ugrina","Ujhazi","Ujvari","Ujvari Čeh","Ujvary Cseh","Ukaj","Ukmar","Ukropina","UlakovićVojinović","Ulanicki","Uldrijan","Ulman","Uljarević","Umiljanović","Umolac","Unčanin","Ungar","Unterajner","Uranić","Uranjek","Uranjek Varga","Urban","Urban Hering","Urbanek","Urbanović","Urbanovski","Urbanovsky","Urmanac","Ursa","UrsićMolnar","Uršanić","Urtajl","Urukalo","Ustalić","Ušak","Ušćebrka","Uštar","Uštipak","Utješanović","UtrobičićRanđelović","Uvalić","Uvanović","Uzelac","Užanicki","Užanicky","Užanitski","Užar","Užarević","UžarevićTodorović","Vaci","Vaci Lajoš","Vacić","Vacka","Vačora","Vačora Sapanjoš","Vadas","Vadaski","Vadla","Vadlja","Vadnjak","Vađon","Vagenhofer","Vagner","Vagroš","Vahala","Vahl","Vaht","Vaip","Vajagić","Vajak","Vajda","Vajda Mlinaček","Vajdička","Vajdić","Vajdlih","Vajgert","Vajić","Vajing","Vajlandić","Vajler","Vajn","Vajnand","Vajnberger","Vajngerl","Vajngli","Vajnper","Vajs","Vajsenbek","Vajtner","Vajzenbach","Vajzenbac lić","Vajzer","Vakanjac","Vakareskov","Vakoš","Vakula","Val","Valašek","Valcer","Valdec","Valdin","Valečić","Valek","Valenčak","Valenčić","ValenčićBrkić","Valent","Valenta","Valentak","Valenteković","Valentić","ValentićButković","ValentićJasnić","ValentićVukadinović","Valentin","Valentinčić","Valer","Valeri","Valerie","Valešić","Valetić","Valić","ValićMarjanac","Validžić","ValidžićHalak","Valiđić","Valinčić","Valkai","Valkovac","Valković","Valo","Valović","Valpovac","Valter","Valušek","Valjak","ValjakŠtrbac","Valjan","Valjavec","Valjetić","Valjin","Valjkovac","Vampatić","Vampola","Vampovac","Vampula","Vampula Larma","Van","Van Der Linde","Van Genderen","Van Hemert","Van Meijeren","Vancaš","Vanče","Vanček","Vančevski","Vančić","Vančura","Vandić","Vandža","Vanđa","Vanek","Vanevska","Vanevski","Vangelovska","Vangelovski","Vaniček","Vanišević","VanišićPanico","Vanko","Vanković","Vanstone Josipović","Vanstone Mrdeša","Vanjek","Vanjevac","Varadi","Varaždinac","Varda","Vardić","Vareha","Varenica","Varenina","Varešanović","Vareško","Varevac","Varezić","Varga","Varga Betz","Varga Kojić","Varga Kučić","Varga Ljubić","Varganović","Vargaš","Vargek","Vargić","Vargović","Varhold","Varičak","Varjačić","Varkonji","Varlam","Varmuža","Varnai","Varnica","Varošanac","Varoščić","Varšava","Vartušek","Varvir","Varvodić","Varzić","VarzićPavković","Varžić","VaržićBiuklia","VaržićBiuklija","Vasić","VasićĐokić","Vasilić","Vasilijević","Vasilj","Vasiljev","Vasiljević","Vasiljevska","Vasiljevski","Vasko Osim","Vaskrsić","Vasquez","Vastl","Vasung","Vaš","Vašadi","Vašalić","Vašanda","Vašarević","Vašarhelji","Vašaš","Vašek","Vaška","Vaškaj","Vaštag","Vatavuk","Vatovec","Vaupotić","Vavan","Vavetić","Vavidec","Vavra","Vavrikov","Vavroš","Vavžek","Vavžik","Vazdar","Važanić","Važić","Včeva","Vdoviak","Vdovjak","Večanin","Večenaj","Večerina","Vedernjak","Vegar","Vehabović","Veizenbach","Veka","VekićKljaić","Vela","Velat","Veledar","Veličan","Velikanović","Velikinac","Veljanov","Veljanova","Veljanović","Veman","Vemenac","Venžera","Veraja","Verhas","Verhas Alt","Verhaz","Veriga","Verinac","Verkman","Vernački","Vernath","Veršanski","Verzak","VesanovićDvornik","VeselicaČatipović","Veselovac","Vestemar","Vešara","Vešligaj","Veverka","Vezaj","Vezmar","Vezmarović","Viandt","Vice Trlaja","Vichta","Vida","Vidaček","Vidačić","Vidak","Vidakovic","Vidaković","VidakovićBošnjak","VidakovićRomanić","Vidakušić","Vidanec","Vidanović","Vidas","Videčak","Videćak","Viderščak","Videršćak","Vidlak","Vidmar","Vidosavljević","VidošićStrugačevac","VidovićMikac","Vidra","Vidrač","Vidranski","VidranskiŠkorić","Vidranjski","Viduka","Vigand","Viharev Balaić","Vihovanec","Vihta","Vijačkić","Vijant","Vijevac","Vila","Vilagoš","Vilajtović","Viland","Vilanj","Vilenica","Vileta","Viljanac","Viljevac","Vinaj","Vinarić","Vinceljak","Vincenc Spasovski","VincetićSkroban","Vinčak","VinkeševićRadić","Vinketa","Vinogradac","Vinogradac Andraković","Viola","Viola Franz","Virag","ViragŠandor","VirgejĐurašević","Virovac","Visak","Vislavski","Višekruna","Vištica","Vitanović","Vitas","Vitman","Vittman","Viviora","Viviora Rous","Vivjora","Vizentaner","Vizentaner Lendić","Vizjak","Vještica","Vladetić","Vladić","Vladika","Vladimir","Vladisavljević","Vladova","Vladović","Vladušić","Vlah","Vlahek","Vlahinja","Vlaho","Vlahović","Vlahušić","Vlaičević","Vlainić","VlainićVorih","Vlaisavljević","Vlajčić","Vlajić","Vlajinić","Vlajkov","Vlajnić","Vlajsović","Vlaović","Vlasalija","Vlastelić","Vlašić","Vlaškalić","Vlaškovac","Vlatković","Vočanec","Voćanec","Vodanović","Vodeničar","Vodopija","Vođinac","VogronićOpačić","Vojaković","VojakovićFingler","Vojanić","Volak","Volar","Volarev","Volarević","Volarić","Volfand","Vončina","Vondra","Vondrak","Vonjak","Vorkapić","Vosab","Vošanović","Vovra","Vrabac","Vrabec","Vrabel","Vračar","Vračarić","Vračević","Vračić","Vrag","Vragolović","Vragović","Vrajić","Vran","Vranaričić","Vrančić","Vrandečić","Vraneš","Vranešević","Vranešić","Vranić","Vranka","Vrankić","Vranković","Vranović","Vranješ","VranješBrković","VranješMiličić","VranješMilošević","Vranješević","Vranjić","Vranjković","VranjkovićĆenan","VranjkovićKnežević","Vrapčenjak","Vratarić","Vratović","Vrban","Vrban Ružić","Vrbanac","Vrbanc","Vrbanec","Vrbanek","Vrbanić","Vrbanus","Vrbanjac","Vrbas","Vrbaslija","Vrbaški","Vrbica","Vrca","Vrcan","Vrdoljak","Vrđuka","Vrebac","Vrekalić","Vrekalović","Vrga","Vrhar","Vrhovac","Vrkljan","Vrlika","Vrlja","Vrljičak","Vrpoljac","Vrsajković","Vrselja","Vrtačnik","Vrtar","Vrtarić","VrtarićDubrović","VrtarićSabljo","Vrućina","Vučak","Vučak Grunbaum","Vučanović","Vučevac","Vučkovac","Vudrag","Vudrag Buljević","Vudrak","VugdelijaŽižić","Vuglač","Vuica","Vujaklija","Vujaklija Crnomarković","Vujaković","Vujanac","Vujanić","Vujanović","Vujasenović","Vujasin","Vujasinović","Vujatović","Vujeva","Vujica","Vujnovac","Vuka","Vukadin","Vukadin Markulinčić","Vukadin Romić","Vukadinović","Vukajlić","Vukajlija","Vukajlović","Vukalović","Vukaljević","Vukanović","Vukas","Vukasović","VukasovićLončar","VukasovićPejković","Vukašinac","Vukašinec","Vukašinović","Vukelja","Vukman","Vukmanić","Vukmanov","Vukmanović","Vukmirica","Vukobradović","Vukobrat","Vukobratović","Vukoja","Vukoja Matanović","Vukoja Pavličić","Vukojevac","VukojevićBabić","VukojevićTomašić","Vukomanović","Vukosav","Vukosavljević","Vukovac","VukovićDijanović","VukovićMihalić","Vukovljak Kralj","Vuksan","Vuksanić","VuksanićPuljek","Vuksanović","VukšićMihaljević","Vulama","Vuleta","Vuleta Blažević","Vunak","Vunjak","Vuradin","Vurdelja","Wagner","Waldman","Walkiewicz","Walleitner","Waller","Walter","Walz","Walzak","Washington","Wastl","Wayn","Wdoviak","Wdowiak","Wedral","Weigand","Weinand","Werkmann","Wershansky","Wertag","Westermajer","Wiedman","Wiessentaner","Wilhelm Vrbanić","Wilhem Arsić","Wolf Tucaković","Yahia","Yakub","Ylmaz","Zabjan","Zabludski","Zaboš","Zabrdac","Začek","Zadković","Zadnik","Zadol","Zadravec","Zadrić","Zadro","Zafred","Zagorac","Zagorčak","Zagorec","Zagorščak","Zagoršćak","Zagoršek","Zagrajski","Zagvozda","Zagvozda Grahovac","Zaharčev","Zaharov","Zahatek","Zahiri","Zahirović","ZahirovićPoslon","Zahiti","Zahn","Zahora","Zaibet","Zaić","Zajac","Zajačko","Zajček","Zajec","Zajic","Zajic Stojanović","Zajkić","Zajović","Zakany","Zakanj","Zakanji","Zake","Zakić","Zaklan","Zaklanac","Zaklanović","Zaković","Zakšek","Zakupski","Zalaj","Zalaji","Zalar","Zalezina","Zaleznik","Zaležak","Zalogar","Zaloscer","Zalović","Zamaklar","Zambo","Zamečnik","Zamolinski","Zamulinski","Zamuljinski","Zandt","Zaneti","Zaneti Suzić","Zanoški","Zanze","Zanjaši","Zaoral","Zapalac","Zaputil","Zaračko","Zaradić","Zarecki","Zarev","Zarić","Zarka","Zarli","Zaspan","Zaterini","Zatezalo","Zatko","Zattherini","Zavacki","Zavada","Zavagni","Zavišić","Zavođa","Zavor","Zavorski","Završki","Zbanatski","Zbodulja","Zdarilek","Zdelar","Zdelar Anočić","Zdelar Ivić","Zdeličan","Zdenčan","Zdenčanović","Zdilar","Zdjelar","Zdjelar Czigler","Zdjelar Jusup","Zdjelarević","Zdravčević","ZdravčevićVrkić","Zdravković","Zeba","Zec Serdar","Zechmajster","Zegnal","Zekan","ZekićSušac","Zeko Pivač","Zelenika","Zelenka","Zelenjak","ZelićŽeravica","Zelinac","Zeljak","Zeman","Zemljak","Zemljak Spechtenhauser","Zenhausern","Zenuta","Zetaić","Zetajić","Zezula","Zglavnik","Zgonjanin","Zgrablić","Zibar","Zidar","Zidar Milić","Zidarević","Zidarić","Zijan","Zima","Zimaj","Zimmerman","Zimmermann","Zimonja","Zinaić","ZinaićBlažinkov","Zinajić","Zita","Zjakić","Zjalić","Zlatanović","Zlatar","Zlatarek","Zlatarević","Zlatarić","Zlatić","ZlatićKavgić","Zlatković","Zlatović","Zlatunić","Zlokapa","Zlokolica","Zlosa","Zlovarić","Zmaić","Zmajić","Zmajšek","Znaor","Znika","Zobenica","Zobundžija","Zolaj","Zolaji","Zolota","Zoraj","Zoraja","Zorbas","Zorbaz","Zorica","Zorman","Zoroja","Zovak","Zovo Susak","Zrakić","Zrinščak","Zrmanjac","Zrna","Zrno Dimnjašević","Zuanović","Zubac","Zubac Ištuk","Zubaj","Zubak","Zuban","Zubonja","Zukan","Zulbari","Zundanović","Zurak","Zurapović","Zuščak","Zušćak","Zuzjak","Zuzjak Novak","Zvanić","Zvardon","Zvekan","Zvekanov","Zvekanović","Zveržina","Zvocak","Zvonar","Zvonarek","Zvonarević","Zvonarić","Žabarović","Žabčić","Žabić","Žaček","Žada","Žadanji","Žagač","Žagar","Žagarac","Žagarova","Žago","Žaja","Žajdlik","Žajlik","Žaki","Žaknić","Žakula","Žalac","Žalako","Žalik","Žalonkin","Žampak","Žanić","Žanija","Žanko","Žaper","Žaper Radičević","Žarak","Žarić","Žarko","Žarković","ŽarkovićMaršal","Ždrale","Žeđa","Žegarac","Žegura Schonberger","Želka","Željeznak","Željeznjak","Žemla","Žerav","Žeravica","Žeravica Lang","Žerjav","Žganec","Žganjar","Žganjer","Žgela","Žgrabljić","Žibrat","Židar","Žido Lazarević","Žigman","Žiha","Žilavec","Žiljak","Žindarec","Žipac","Žiraj","ŽirošTatalović","Žiška","Žitnjak","Živadinović","Živaković","ŽivakovićKerže","Živalj","Živaljić","Živanić","Živanov","Živanović","Živičnjak","ŽivićĆojbašić","ŽivkovićUbavin","Žiža","Žižek","Žižanović","ŽižanovićŠahini","ŽižićAbramović","Žmegač","Žnidarec","Žnidarić","Žnidaršić","Žohar","Žolja","Žonka","Žulj Raštegorac","ŽuljevićGrafina","Žuna","Žuna Pfeiffer","Župan","Župan Perasić","Župančić","Županić","Županović","Župarić","Žurga","Žuro Tijardović","Žuvela","Žuža","Žužak","Žužanić","ŽužanićKlapan","Žvab"]})),n$=c((()=>{Ug=["Adi","Ado","Andel","Andelin","Andelko","Andelo","Andi","Andras","Andrej","Andrija","Andro","Anko","Ante","Antek","Antonin","Antonio","Antun","Bela","Belimir","Berti","Boris","Borko","Borna","Božidar","Branimir","Bruno","Časlav","Dado","Damil","Damir","Danijel","Dario","Darko","David","Davor","Davorin","Domagoj","Donat","Dražen","Držimir","Držislav","Dubravko","Duje","Dujo","Emil","Emilijan","Erik","Fabijan","Filip","Franjo","Gaj","Gašpar","Goran","Gordan","Gradimir","Grga","Grgo","Grgur","Gvozden","Hrvoj","Hrvoje","Ico","Igor","Ilija","Ilko","Ino","Ivan","Ive","Ivek","Ivica","Ivo","Jadran","Jadranko","Jadro","Jakov","Jan","Janko","Jasen","Jasenko","Josip","Joško","Joso","Joža","Jože","Krešimir","Kristijan","Kruno","Krunoslav","Ladislav","Ljudevit","Lucijan","Luka","Marin","Marko","Martin","Matan","Mate","Matej","Matija","Matko","Mato","Mihael","Milan","Mile","Milivoj","Miljenko","Mimo","Miran","Mirko","Miro","Mislav","Mladen","Nedjeljko","Neven","Nikola","Nino","Ozren","Pavel","Pepo","Pero","Petar","Pravdan","Rino","Robert","Roberto","Robi","Roko","Sanjin","Saša","Slavek","Slaven","Slavko","Srećko","Stanko","Štef","Stipan","Stipe","Stjepan","Stribor","Svebor","Tihomir","Toma","Tome","Tomislav","Tomo","Tonči","Tone","Toni","Tonko","Trpimir","Trpko","Tvrtko","Valentin","Vanja","Vatroslav","Vedran","Velimir","Vijeko","Vjekoslav","Vjenceslav","Vladek","Vladislav","Vlado","Vlatko","Zdenko","Zdravko","Željko","Zoltan","Zrinislav","Zrinko","Zvonimir"]})),i$=c((()=>{Wg=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name}, #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),r$=c((()=>{Zg=["g.","gđa.","gđa.","gđa","dr."]})),t$=c((()=>{qg=["dipl.oecc","dipl.ing"]})),o$=c((()=>{Qg={descriptor:["Glavni","Senior","Korporativni","Nacionalni","Regionalni","Okružni","Središnji","Globalni","Međunarodni","Operativni"],level:["programski","brand","sigurnosni","marketing","implementacijski","integracijski","funkcionalni","tržišni","grupni","aplikacijski","optimizacijski","operativni","infrastrukturni","komercijalni","prodajni","web","financijski","podatkovni","logistički","kreativni","računovodstveni","financijski"],job:["voditelj","suradnik","službenik","menadžer","inženjer","specijalist","direktor","koordinator","administrator","arhitekt","analist","dizajner","planer","ekspert","savjetnik","organizator","tehničar","konzultant","asistent","agent","predstavnik","referent","strateg"]}})),s$=c((()=>{XY(),e$(),a$(),n$(),i$(),r$(),t$(),o$(),Yg={female_first_name:Hg,first_name:Fg,last_name:Jg,male_first_name:Ug,name:Wg,prefix:Zg,suffix:qg,title:Qg}})),l$=c((()=>{$g=["### ###","### ###","### ###","### ### ####","+385 ## ### ###","00385 ## ### ###"]})),u$=c((()=>{l$(),Xg={formats:$g}})),c$=c((()=>{FY(),UY(),qY(),$Y(),s$(),u$(),ek={title:"Hrvatski",address:xg,cell_phone:Kg,date:Og,internet:Gg,name:Yg,phone_number:Xg}})),d$=c((()=>{ak=["###","###/#","##","##/#","#","#/#"]})),h$=c((()=>{nk=["#{city_prefix} #{Name.last_name}","#{Name.last_name}#{city_suffix}"]})),p$=c((()=>{ik=["Հյուսիսային","Արևելյան","Արևմտյան","Հարավային","Նոր"]})),m$=c((()=>{rk=["ակերտ","աշեն","աշատ"]})),f$=c((()=>{tk=["ԱՄՆ","Ադրբեջան","Ալբանիա","Ալժիր","Ամերիկյան Սամոա","Ամերիկյան Վիրջինյան կղզիներ","Անգիլիա","Անգոլա","Անդորրա","Անտիգուա և Բարբուդա","Ավստրալիա","Ավստրիա","Արգենտինա","Արուբա","Արցախի Հանրապետություն","Արևելյան Թիմոր","Աֆղանստան","Բահամներ","Բահրեյն","Բանգլադեշ","Բարբադոս","Բելառուս","Բելիզ","Բենին","Բերմուդա","Բոլիվիա","Բոսնիա և Հերցեգովինա","Բոտսվանա","Բութան","Բուլղարիա","Բուրկինա Ֆասո","Բուրունդի","Բրազիլիա","Բրիտանական Վիրջինյան Կղզիներ","Բրունեյ","Գաբոն","Գամբիա","Գայանա","Գերմանիա","Գերնսի","Գուամ","Գվատեմալա","Գվինեա","Գվինեա-Բիսաու","Գրենադա","Դանիա","Դոմինիկա","Դոմինիկյան Հանրապետություն","Եգիպտոս","Եթովպիա","Եմեն","Զամբիա","Զիմբաբվե","Էկվադոր","Էստոնիա","Էրիտրեա","Թաիլանդ","Թայվան","Թըրքս և Կայկոս կղզիներ","Թունիս","Թուրքիա","Թուրքմենստան","Ինդոնեզիա","Իռլանդիա","Իսլանդիա","Իսպանիա","Իսրայել","Իտալիա","Իրան","Իրաք","Լաոս","Լատվիա","Լեհաստան","Լեսոթո","Լիբանան","Լիբերիա","Լիբիա","Լիխտենշտայն","Լիտվա","Լյուքսեմբուրգ","Խորվաթիա","Կաբո Վերդե","Կամբոջա","Կամերուն","Կայմանյան կղզիներ","Կանադա","Կատար","Կենտրոնաաֆրիկյան Հանրապետություն","Կիպրոս","Կիրիբատի","Կոլումբիա","Կոմորներ","Կոնգոյի Հանրապետություն","ԿոնգոյիԴեմոկրատական Հանրապետություն ԿԴՀ","Կոստա Ռիկա","Կոտ դ'Իվուար","Կուբա","Կուկի կղզիներ","Հայաստան","Հայիթի","Հասարակածային Գվինեա","Հարավային Կորեա","Հարավաֆրիկյան Հանրապետություն","Հյուսիսային Կորեա","Հյուսիսային Մակեդոնիա","Հյուսիսային Մարիանյան կղզիներ","Հնդկաստան","Հոնդուրաս","Հոնկոնգ","Հորդանան","Հունաստան","Հունգարիա","Ղազախստան","Ղրղզստան","Ճամայկա","Ճապոնիա","ՄԱԷ","ՄԹ","Մադագասկար","Մալայզիա","Մալավի","Մալդիվներ","Մալթա","Մալի","Մակաու","Մայոտ","Մավրիկիոս","Մավրիտանիա","Մարշալյան կղզիներ","Մարոկկո","Մեն կղզի","Մեքսիկա","Միկրոնեզիա","Մյանմա","Մոզամբիկ","Մոլդովա","Մոնակո","Մոնղոլիա","Մոնտսերատ","Նամիբիա","Նաուրու","Նեպալ","Նիգեր","Նիգերիա","Նիդերլանդյան Անտիլներ","Նիդերլանդներ","Նիկարագուա","Նիուե","Նոր Զելանդիա","Նոր Կալեդոնիա","Նորվեգիա","Նորֆոլք կղզի","Շվեդիա","Շվեյցարիա","Շրի Լանկա","Ուգանդա","Ուզբեկստան","Ուկրաինա","Ուոլիս և Ֆուտունա","Ուրուգվայ","Չադ","Չեխիա","Չեռնոգորիա","Չիլի","Չինաստան","Պալաու","Պակիստան","Պաղեստին","Պանամա","Պապուա Նոր Գվինեա","Պարագվայ","Պերու","Պորտուգալիա","Պուերտո Ռիկո","Ջերսի","Ջիբութի","Ջիբրալթար","Ռուանդա","Ռումինիա","Ռուսաստան","Սալվադոր","Սահրավիա","Սամոա","Սան Մարինո","Սան Տոմե և Պրինսիպի","Սաուդյան Արաբիա","Սեյշելներ","Սեն Մարտեն (Ֆրանսիական Անտիլներ)","Սենեգալ","Սենտ Լյուսիա","Սենտ Կիտս և Նևիս","Սենտ Պիեռ և Միկելոն","Սենտ Վինսենտ և Գրենադիներ","Սերբիա","Սիեռա Լեոնե","Սինգապուր","Սիրիա","Սլովակիա","Սլովենիա","Սողոմոնյան Կղզիներ","Սոմալիա","Սուդան","Սուրբ Բարդուղիմեոսի կղզի","Սուրբ Հեղինեի կղզի","Սուրինամ","Սվազիլենդ","Վանուատու","Վատիկան","Վենեսուելա","Վիետնամ","Վրաստան","Տանզանիա","Տաջիկստան","Տոգո","Տոկելաու","Տոնգա","Տուվալու","Տրինիդադ Տոբագո","Փիթքերն կղզիներ","Քենիա","Քուվեյթ","Օման","Ֆարերյան կղզիներ","Ֆիլիպիններ","Ֆինլանդիա","Ֆիջի","Ֆոլկլենդյան կղզիներ","Ֆրանսիա","Ֆրանսիական Պոլինեզիա"]})),v$=c((()=>{ok=["Արցախի Հանրապետություն"]})),g$=c((()=>{sk=["Հյուսիսային","Արևելյան","Հարավային","Արևմտյան","Հյուսիսարևելյան","Հյուսիսարևմտյան","Հարավարևելյան","Հարավարևմտյան"]})),k$=c((()=>{lk=["Բն. ###","Տուն ###"]})),y$=c((()=>{uk=["Արագածոտն","Արարատ","Արմավիր","Գեղարքունիք","Կոտայք","Լոռի","Շիրակ","Սյունիք","Տավուշ","Վայոց ձոր","Երևան","Ստեփանակերտ","Ասկերան","Հադրութ","Մարտակերտ","Մարտունի","Շահումյան","Շուշի","Քաշաթաղ"]})),b$=c((()=>{ck=["#{address.street_name} #{address.building_number}"]})),S$=c((()=>{dk=["#{Name.last_name} #{street_suffix}"]})),A$=c((()=>{hk=[" փողոց"," պողոտա"]})),M$=c((()=>{d$(),h$(),p$(),m$(),f$(),v$(),g$(),k$(),y$(),b$(),S$(),A$(),pk={building_number:ak,city:nk,city_prefix:ik,city_suffix:rk,country:tk,default_country:ok,direction:sk,secondary_address:lk,state:uk,street_address:ck,street_name:dk,street_suffix:hk}})),T$=c((()=>{mk=["կարմիր","կանաչ","կապույտ","դեղին","մանուշակագույն","սպիտակ","սև","նարնջագույն","վարդագույն","մոխրագույն","երկնագույն","ոսկեգույն"]})),_$=c((()=>{T$(),fk={color:mk}})),w$=c((()=>{vk={wide:["Հունվար","Փետրվար","Մարտ","Ապրիլ","Մայիս","Հունիս","Հուլիս","Օգոստոս","Սեպտեմբեր","Հոկտեմբեր","Նոյեմբեր","Դեկտեմբեր"],abbr:["Հնվ","Փտր","Մրտ","Ապր","Մյս","Հնս","Հլս","Օգս","Սպտ","Հկտ","Նմբ","Դկտ"]}})),j$=c((()=>{gk={wide:["Կիրակի","Երկուշաբթի","Երեքշաբթի","Չորեքշաբթի","Հինգշաբթի","Ուրբաթ","Շաբաթ"],abbr:["կրկ","երկ","երք","չրք","հնգ","ուրբ","շբթ"]}})),E$=c((()=>{w$(),j$(),kk={month:vk,weekday:gk}})),N$=c((()=>{yk=["com","biz","info","name","net","org","am"]})),B$=c((()=>{N$(),bk={domain_suffix:yk}})),P$=c((()=>{Sk=["տարի","որ","փոխեց","ամեն","ինչ","կենցաղից","մինչև","համաշխարհային","տնտեսություն","մի","քանի","շաբաթում","բնականոն","դարձնելով","այն","դեռ","երեկ","անհնար","էր","թվում","ը","շատերի","համար","կմնա","որպես","անտեսանելի","աղետի","խստագույն","սահմանափակումների","մարդկային","կորուստների","և","գործազրկության","Տարեսկզբին","չինական","Վուհանի","շուկայում","ենթադրաբար","չղջիկից","մարդուն","փոխանցված","վիրուսն","ապացուցեց","տեխնոլոգիական","նվաճումների","հասած","մարդկությունը","դեռևս","շատ","բան","չգիտի","իր","սեփական","առողջության","բնության","ու","դրա","հետ","հարաբերությունների","մասին","Գարնանը","երբ","վիրուսը","կաթվածահար","արեց","կյանքը","գրեթե","ողջ","աշխարհում","Հռոմի","կաթոլիկ","եկեղեցու","առաջնորդն","հավատացյալ","հոտին","դիմեց","աղոթքով","տարվա","ընթացքում","շատերն","էին","հիշում","մեջբերում","Մենք","առաջ","էինք","շարժվում","գլխապտույտ","արագությամբ","վստահ","ուժեղ","ենք","կարող","անել","կամենանք","Ձգտելով","անձնական","բարեկեցության","մենք","թույլ","տալիս","մեզ","տարվել","նյութականով","վազում","շահի","ետևից","չէին","կանգնեցնում","մեր","շուրջ","մոլեգնող","պատերազմներն","անարդարությունը","ոչ","էլ","աղքատների","օգնություն","աղերսող","ձայնն","լսում","շարունակում","ընթացքը","չնայելով","բանի","առողջ","մնալ","հիվանդ","հայտարարել","պապը","Անտեսանելի","առեղծվածային","մեկ","տարում","խլեց","ավելի","քան","միլիոն","հազար","մարդու","կյանք","վարակվեցին","միլիոնից","ավելին","վարակվածներից","յուրաքանչյուր","չորրորդը","մոտ","միլիոնը","այս","պահին","պայքարում","է","հիվանդության","դեմ","մարդ","գտնվում","ծայրահեղ","ծանր","վիճակում","Եվ","եթե","տարեսկզբին","որոշ","պետություններ","պարծենալ","իրենց","առողջապահական","համակարգերով","նորագույն","տեխնոլոգիաներով","ապա","համավարակից","հետո","ակնհայտ","դարձավ","անկախ","բյուջի","չափից","հնարավորություններից","հարուստ","թե","աղքատ","բոլորն","են","նույն","նավակում","նույնքան","անպաշտպան"]})),L$=c((()=>{P$(),Ak={words:Sk}})),D$=c((()=>{Mk=["Մարիա","Նարե","Մանե","Մարի","Մարիամ","Անի","Անգելինա","Անահիտ","Էլեն","Միլենա","Եվա","Աննա","Արփի","Գայանե","Լիլիթ","Մերի","Վիկտորյա","Արինա","Յանա","Սոնա","Նատալի","Գոհար","Հասմիկ","Սոֆի","Էմիլի","Սուսաննա","Արևիկ","Կարինե","Լյուսի","Արիանա","Տաթև","Լիկա","Ռուզաննա","Լիլի","Սոֆյա","Անուշ","Էլինա","Սառա","Նանե","Էվա","Լիանա","Մոնիկա","Կարինա","Լիա","Նարինե","Լուսինե"]})),x$=c((()=>{Tk=["Մարիա","Նարե","Մանե","Մարի","Մարիամ","Անի","Անգելինա","Անահիտ","Էլեն","Միլենա","Եվա","Աննա","Արփի","Գայանե","Լիլիթ","Մերի","Վիկտորյա","Արինա","Յանա","Սոնա","Նատալի","Գոհար","Հասմիկ","Սոֆի","Էմիլի","Սուսաննա","Արևիկ","Կարինե","Լյուսի","Արիանա","Տաթև","Լիկա","Ռուզաննա","Լիլի","Սոֆյա","Անուշ","Էլինա","Սառա","Նանե","Էվա","Լիանա","Մոնիկա","Կարինա","Լիա","Նարինե","Լուսինե","Դավիթ","Նարեկ","Ալեքս","Տիգրան","Հայկ","Գոռ","Արթուր","Արմեն","Մարկ","Էրիկ","Արամ","Սամվել","Արման","Ալեն","Աշոտ","Արեն","Գագիկ","Դանիել","Արեգ","Ռոբերտ","Արտյոմ","Արսեն","Միքայել","Սարգիս","Հովհաննես","Վահե","Կարեն","Գևորգ","Լևոն","Վարդան","Ռուբեն","Սուրեն","Հակոբ","Մհեր","Անդրանիկ","Ավետ","Գրիգոր","Ռաֆայել","Ալեքսանդր","Մոնթե","Հարություն","Էդուարդ","Ալբերտ","Գարիկ","Համլետ"]})),C$=c((()=>{_k=["Հարությունյան","Սարգսյան","Հովհաննիսյան","Հովհաննիսյան","Սարգսյան","Հարությունյան","Գրիգորյան","Խաչատրյան","Խաչատրյան","Գրիգորյան","Հակոբյան","Հակոբյան","Վարդանյան","Պետրոսյան","Կարապետյան","Գևորգյան","Գևորգյան","Վարդանյան","Պետրոսյան","Կարապետյան","Մկրտչյան","Մկրտչյան","Ղազարյան","Ղազարյան","Մանուկյան","Մանուկյան","Պողոսյան","Ավետիսյան","Ավետիսյան","Պողոսյան","Մարտիրոսյան","Սահակյան","Սահակյան","Մարտիրոսյան","Դավթյան","Առաքելյան","Մարգարյան","Մարգարյան","Գալստյան","Բաղդասարյան","Առաքելյան","Դավթյան","Ստեփանյան","Գալստյան","Հայրապետյան","Հայրապետյան","Սիմոնյան","Ավագյան","Գասպարյան","Սիմոնյան","Մուրադյան","Մուրադյան","Ավագյան","Գասպարյան","Բաղդասարյան","Ստեփանյան","Ասատրյան","Հովսեփյան","Աբրահամյան","Աբրահամյան","Զաքարյան","Մելքոնյան","Մելքոնյան","Ալեքսանյան","Մխիթարյան","Ասատրյան","Բարսեղյան","Մովսիսյան","Կիրակոսյան","Կիրակոսյան","Եղիազարյան","Բաբայան","Հովսեփյան","Մնացականյան","Թադևոսյան","Զաքարյան","Մինասյան","Մխիթարյան","Բաբայան","Բարսեղյան","Ալեքսանյան","Համբարձումյան","Մովսիսյան","Եղիազարյան","Համբարձումյան","Թադևոսյան","Այվազյան","Այվազյան","Գաբրիելյան","Ներսիսյան","Մնացականյան","Մովսիսյան"]})),K$=c((()=>{wk=["Դավիթ","Նարեկ","Ալեքս","Տիգրան","Հայկ","Գոռ","Արթուր","Արմեն","Մարկ","Էրիկ","Արամ","Սամվել","Արման","Ալեն","Աշոտ","Արեն","Գագիկ","Դանիել","Արեգ","Ռոբերտ","Արտյոմ","Արսեն","Միքայել","Սարգիս","Հովհաննես","Վահե","Կարեն","Գևորգ","Լևոն","Վարդան","Ռուբեն","Սուրեն","Հակոբ","Մհեր","Անդրանիկ","Ավետ","Գրիգոր","Ռաֆայել","Ալեքսանդր","Մոնթե","Հարություն","Էդուարդ","Ալբերտ","Գարիկ","Համլետ"]})),R$=c((()=>{jk=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),z$=c((()=>{D$(),x$(),C$(),K$(),R$(),Ek={female_first_name:Mk,first_name:Tk,last_name:_k,male_first_name:wk,name:jk}})),O$=c((()=>{Nk=["+374 ## ######","+374 ### #####"]})),I$=c((()=>{O$(),Bk={formats:Nk}})),V$=c((()=>{M$(),_$(),E$(),B$(),L$(),z$(),I$(),Pk={title:"Armenian",separator:" և ",address:pk,commerce:fk,date:kk,internet:bk,lorem:Ak,name:Ek,phone_number:Bk}})),G$=c((()=>{Lk=["##","#"]})),H$=c((()=>{Dk=["#{city_name}"]})),F$=c((()=>{xk=["Airmadidi","Ampana","Amurang","Andolo","Banggai","Bantaeng","Barru","Bau-Bau","Benteng","Bitung","Bolaang Uki","Boroko","Bulukumba","Bungku","Buol","Buranga","Donggala","Enrekang","Gorontalo","Jeneponto","Kawangkoan","Kendari","Kolaka","Kotamobagu","Kota Raha","Kwandang","Lasusua","Luwuk","Majene","Makale","Makassar","Malili","Mamasa","Mamuju","Manado","Marisa","Maros","Masamba","Melonguane","Ondong Siau","Palopo","Palu","Pangkajene","Pare-Pare","Parigi","Pasangkayu","Pinrang","Polewali","Poso","Rantepao","Ratahan","Rumbia","Sengkang","Sidenreng","Sigi Biromaru","Sinjai","Sunggu Minasa","Suwawa","Tahuna","Takalar","Tilamuta","Toli Toli","Tomohon","Tondano","Tutuyan","Unaaha","Wangi Wangi","Wanggudu","Watampone","Watan Soppeng","Ambarawa","Anyer","Bandung","Bangil","Banjar (Jawa Barat)","Banjarnegara","Bangkalan","Bantul","Banyumas","Banyuwangi","Batang","Batu","Bekasi","Blitar","Blora","Bogor","Bojonegoro","Bondowoso","Boyolali","Bumiayu","Brebes","Caruban","Cianjur","Ciamis","Cibinong","Cikampek","Cikarang","Cilacap","Cilegon","Cirebon","Demak","Depok","Garut","Gresik","Indramayu","Jakarta","Jember","Jepara","Jombang","Kajen","Karanganyar","Kebumen","Kediri","Kendal","Kepanjen","Klaten","Pelabuhan Ratu","Kraksaan","Kudus","Kuningan","Lamongan","Lumajang","Madiun","Magelang","Magetan","Majalengka","Malang","Mojokerto","Mojosari","Mungkid","Ngamprah","Nganjuk","Ngawi","Pacitan","Pamekasan","Pandeglang","Pare","Pati","Pasuruan","Pekalongan","Pemalang","Ponorogo","Probolinggo","Purbalingga","Purwakarta","Purwodadi","Purwokerto","Purworejo","Rangkasbitung","Rembang","Salatiga","Sampang","Semarang","Serang","Sidayu","Sidoarjo","Singaparna","Situbondo","Slawi","Sleman","Soreang","Sragen","Subang","Sukabumi","Sukoharjo","Sumber","Sumedang","Sumenep","Surabaya","Surakarta","Tasikmalaya","Tangerang","Tangerang Selatan","Tegal","Temanggung","Tigaraksa","Trenggalek","Tuban","Tulungagung","Ungaran","Wates","Wlingi","Wonogiri","Wonosari","Wonosobo","Yogyakarta","Atambua","Baa","Badung","Bajawa","Bangli","Bima","Denpasar","Dompu","Ende","Gianyar","Kalabahi","Karangasem","Kefamenanu","Klungkung","Kupang","Labuhan Bajo","Larantuka","Lewoleba","Maumere","Mataram","Mbay","Negara","Praya","Raba","Ruteng","Selong","Singaraja","Soe","Sumbawa Besar","Tabanan","Taliwang","Tambolaka","Tanjung","Waibakul","Waikabubak","Waingapu","Denpasar","Negara,Bali","Singaraja","Tabanan","Bangli"]})),J$=c((()=>{Ck=["Indonesia"]})),U$=c((()=>{Kk=["#####"]})),W$=c((()=>{Rk=["Aceh","Sumatera Utara","Sumatera Barat","Jambi","Bangka Belitung","Riau","Kepulauan Riau","Bengkulu","Sumatera Selatan","Lampung","Banten","DKI Jakarta","Jawa Barat","Jawa Tengah","Jawa Timur","Nusa Tenggara Timur","DI Yogyakarta","Bali","Nusa Tenggara Barat","Kalimantan Barat","Kalimantan Tengah","Kalimantan Selatan","Kalimantan Timur","Kalimantan Utara","Sulawesi Selatan","Sulawesi Utara","Gorontalo","Sulawesi Tengah","Sulawesi Barat","Sulawesi Tenggara","Maluku","Maluku Utara","Papua Barat","Papua"]})),Z$=c((()=>{zk=["#{street_name} no #{building_number}"]})),q$=c((()=>{Ok=["#{street_prefix} #{Name.first_name}","#{street_prefix} #{Name.last_name}"]})),Q$=c((()=>{Ik=["Ds.","Dk.","Gg.","Jln.","Jr.","Kpg.","Ki.","Psr."]})),Y$=c((()=>{G$(),H$(),F$(),J$(),U$(),W$(),Z$(),q$(),Q$(),Vk={building_number:Lk,city:Dk,city_name:xk,default_country:Ck,postcode:Kk,state:Rk,street_address:zk,street_name:Ok,street_prefix:Ik}})),$$=c((()=>{Gk=["#{prefix} #{Name.last_name}","#{Name.last_name} #{suffix}","#{prefix} #{Name.last_name} #{suffix}"]})),X$=c((()=>{Hk=["PT","CV","UD","PD","Perum"]})),eX=c((()=>{Fk=["(Persero) Tbk","Tbk"]})),aX=c((()=>{$$(),X$(),eX(),Jk={name:Gk,prefix:Hk,suffix:Fk}})),nX=c((()=>{Uk={wide:["Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember"],wide_context:["Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember"],abbr:["Jan","Feb","Mar","Apr","Mei","Jun","Jul","Ags","Sep","Okt","Nov","Des"],abbr_context:["Jan","Feb","Mar","Apr","Mei","Jun","Jul","Ags","Sep","Okt","Nov","Des"]}})),iX=c((()=>{Wk={wide:["Minggu","Senin","Selasa","Rabu","Kamis","Jumat","Sabtu"],wide_context:["Minggu","Senin","Selasa","Rabu","Kamis","Jumat","Sabtu"],abbr:["Min","Sen","Sel","Rab","Kam","Jum","Sab"],abbr_context:["Min","Sen","Sel","Rab","Kam","Jum","Sab"]}})),rX=c((()=>{nX(),iX(),Zk={month:Uk,weekday:Wk}})),tX=c((()=>{qk=["com","net","org","asia","tv","biz","info","in","name","co","id","ac.id","sch.id","go.id","mil.id","co.id","or.id","web.id","my.id","net.id","biz.id","desa.id","ponpes.id"]})),oX=c((()=>{Qk=["gmail.com","yahoo.com","gmail.co.id","yahoo.co.id"]})),sX=c((()=>{tX(),oX(),Yk={domain_suffix:qk,free_email:Qk}})),lX=c((()=>{$k=["Ade","Agnes","Ajeng","Amalia","Anita","Ayu","Aisyah","Ana","Ami","Ani","Azalea","Aurora","Alika","Anastasia","Amelia","Almira","Agustina","Aulia","Anggun","Bella","Betania","Belinda","Citra","Cindy","Chelsea","Clara","Cornelia","Cinta","Cinthia","Ciaobella","Cici","Carla","Calista","Devi","Dewi","Dian","Diah","Diana","Dina","Dinda","Dalima","Dwi","Dyah","Ditya","Eka","Eva","Endah","Elisa","Eli","Ella","Ellis","Elma","Elvina","Fitria","Fitriani","Febi","Faizah","Farah","Farhunnisa","Fathonah","Febrina","Febriana","Fitri","Fara","Gabriella","Gasti","Gawati","Genta","Ghaliyati","Gina","Gilda","Ganesha","Gadis","Halima","Hesti","Hilda","Hafshah","Hamima","Hana","Hani","Hasna","Humaira","Ika","Indah","Intan","Irma","Icha","Ida","Ifa","Ilsa","Ina","Ira","Iriana","Irawati","Indira","Jamalia","Janet","Jane","Julia","Juli","Jessica","Jasmin","Jelita","Kamaria","Kamila","Kani","Karen","Karimah","Kartika","Kasiyah","Keisha","Kezia","Kiandra","Kayla","Kania","Kirana","Lala","Lalita","Latika","Laila","Laras","Lidya","Lili","Lintang","Lestari","Linda","Laksita","Maria","Mala","Maya","Maida","Maimunah","Melinda","Mila","Mutia","Michelle","Malika","Melani","Nadia","Nadine","Nabila","Natalia","Novi","Nova","Nurul","Nilam","Najwa","Nada","Naura","Nur","Novita","Nimas","Noviana","Olivia","Ophelia","Oni","Oliva","Padma","Putri","Paramita","Paris","Patricia","Paulin","Puput","Puji","Pia","Puspa","Puti","Putri","Padmi","Puspita","Pratiwi","Prita","Qori","Queen","Ratih","Ratna","Restu","Rini","Rika","Rina","Rahayu","Rahmi","Rachel","Rahmi","Raisa","Raina","Rahmawati","Retno","Ria","Rosalina","Rita","Rosa","Sarah","Sari","Siti","Siska","Suci","Syahrini","Septi","Sadina","Safina","Sakura","Salimah","Salwa","Salsabila","Samiah","Shania","Sabrina","Silvia","Shakila","Sintia","Sartika","Safira","Sasha","Sherly","Talia","Tami","Tira","Tiara","Titin","Tania","Tina","Tantri","Tari","Titi","Tri","Tsabita","Uchita","Unjani","Ulya","Uli","Ulva","Umi","Usyi","Vanya","Vanesa","Vivi","Vera","Vicky","Victoria","Violet","Vania","Winda","Widya","Wulan","Wirda","Wani","Wulandari","Yani","Yessi","Yulia","Yuliana","Yuni","Yunita","Yance","Zahra","Zalindra","Zaenab","Zulfa","Zizi","Zulaikha","Zamira","Zelda","Zelaya"]})),uX=c((()=>{Xk=["Agustina","Andriani","Anggraini","Aryani","Astuti","Ananda","Anandya","Azzahra","Aqila","Amanta","Afifah","Ardiyanti","Andini","Aurelia","Aryanti","Azizah","Anjani","Damayanti","Elvina","Fujiati","Farida","Fathina","Fernanda","Febrianti","Handayani","Hassanah","Hartati","Hasanah","Haryanti","Hariyah","Hastuti","Halimah","Harini","Juwita","Jelita","Kusmawati","Kuswandari","Kusuma","Kahyang","Laksmiwati","Laksita","Lestari","Lailasari","Leilani","Mandasari","Mardhiyah","Mayasari","Melani","Mulyani","Maryati","Mahestri","Maharani","Maheswari","Melinda","Mustika","Nurdiyanti","Novitasari","Nuraini","Nasyidah","Nasyiah","Namaga","Nathania","Nurlaela","Ningrum","Palastri","Pudjiastuti","Puspasari","Puspita","Purwanti","Pratiwi","Purnawati","Pertiwi","Permata","Prastuti","Padmasari","Putri","Purnama","Rahmawati","Rahayu","Riyanti","Rahimah","Ramadhani","Rachmawati","Suartini","Sudiati","Suryatmi","Susanti","Safitri","Salsabilla","Salma","Saputri","Saraswati","Oktaviani","Utami","Usamah","Usada","Uyainah","Yuniar","Yuliarti","Yulianti","Yolanda","Wahyuni","Wijayanti","Widiastuti","Winarsih","Wulandari","Wastuti","Zulaika","Zahrah"]})),cX=c((()=>{ey=["dr.","drg.","Dr.","Hj."]})),dX=c((()=>{ay=["Abyasa","Ade","Adhiarja","Adiarja","Adika","Adikara","Adinata","Aditya","Agus","Ajiman","Ajimat","Ajimin","Ajiono","Akarsana","Alambana","Among","Anggabaya","Anom","Argono","Aris","Arta","Artanto","Artawan","Arsipatra","Asirwada","Asirwanda","Aslijan","Asmadi","Asman","Asmianto","Asmuni","Aswani","Atma","Atmaja","Bagas","Bagiya","Bagus","Bagya","Bahuraksa","Bahuwarna","Bahuwirya","Bajragin","Bakda","Bakiadi","Bakianto","Bakidin","Bakijan","Bakiman","Bakiono","Bakti","Baktiadi","Baktianto","Baktiono","Bala","Balamantri","Balangga","Balapati","Balidin","Balijan","Bambang","Banara","Banawa","Banawi","Bancar","Budi","Cagak","Cager","Cahyadi","Cahyanto","Cahya","Cahyo","Cahyono","Caket","Cakrabirawa","Cakrabuana","Cakrajiya","Cakrawala","Cakrawangsa","Candra","Chandra","Candrakanta","Capa","Caraka","Carub","Catur","Caturangga","Cawisadi","Cawisono","Cawuk","Cayadi","Cecep","Cemani","Cemeti","Cemplunk","Cengkal","Cengkir","Dacin","Dadap","Dadi","Dagel","Daliman","Dalimin","Daliono","Damar","Damu","Danang","Daniswara","Danu","Danuja","Dariati","Darijan","Darimin","Darmaji","Darman","Darmana","Darmanto","Darsirah","Dartono","Daru","Daruna","Daryani","Dasa","Digdaya","Dimas","Dimaz","Dipa","Dirja","Drajat","Dwi","Dono","Dodo","Edi","Eka","Elon","Eluh","Eman","Emas","Embuh","Emong","Empluk","Endra","Enteng","Estiawan","Estiono","Eko","Edi","Edison","Edward","Elvin","Erik","Emil","Ega","Emin","Eja","Gada","Gadang","Gading","Gaduh","Gaiman","Galak","Galang","Galar","Galih","Galiono","Galuh","Galur","Gaman","Gamani","Gamanto","Gambira","Gamblang","Ganda","Gandewa","Gandi","Gandi","Ganep","Gangsa","Gangsar","Ganjaran","Gantar","Gara","Garan","Garang","Garda","Gatot","Gatra","Ghani","Gibran","Gilang","Hairyanto","Hardana","Hardi","Harimurti","Harja","Harjasa","Harjaya","Harjo","Harsana","Harsanto","Harsaya","Hartaka","Hartana","Harto","Hasta","Heru","Himawan","Hadi","Halim","Hasim","Hasan","Hendra","Hendri","Heryanto","Hamzah","Hari","Imam","Indra","Irwan","Irsad","Ikhsan","Irfan","Ian","Ibrahim","Ibrani","Ismail","Irnanto","Ilyas","Ibun","Ivan","Ikin","Ihsan","Jabal","Jaeman","Jaga","Jagapati","Jagaraga","Jail","Jaiman","Jaka","Jarwa","Jarwadi","Jarwi","Jasmani","Jaswadi","Jati","Jatmiko","Jaya","Jayadi","Jayeng","Jinawi","Jindra","Joko","Jumadi","Jumari","Jamal","Jamil","Jais","Jefri","Johan","Jono","Kacung","Kajen","Kambali","Kamidin","Kariman","Karja","Karma","Karman","Karna","Karsa","Karsana","Karta","Kasiran","Kasusra","Kawaca","Kawaya","Kayun","Kemba","Kenari","Kenes","Kuncara","Kunthara","Kusuma","Kadir","Kala","Kalim","Kurnia","Kanda","Kardi","Karya","Kasim","Kairav","Kenzie","Kemal","Kamal","Koko","Labuh","Laksana","Lamar","Lanang","Langgeng","Lanjar","Lantar","Lega","Legawa","Lembah","Liman","Limar","Luhung","Lukita","Luluh","Lulut","Lurhur","Luwar","Luwes","Latif","Lasmanto","Lukman","Luthfi","Leo","Luis","Lutfan","Lasmono","Laswi","Mahesa","Makara","Makuta","Manah","Maras","Margana","Mariadi","Marsudi","Martaka","Martana","Martani","Marwata","Maryadi","Maryanto","Mitra","Mujur","Mulya","Mulyanto","Mulyono","Mumpuni","Muni","Mursita","Murti","Mustika","Maman","Mahmud","Mahdi","Mahfud","Malik","Muhammad","Mustofa","Marsito","Mursinin","Nalar","Naradi","Nardi","Niyaga","Nrima","Nugraha","Nyana","Narji","Nasab","Nasrullah","Nasim","Najib","Najam","Nyoman","Olga","Ozy","Omar","Opan","Oskar","Oman","Okto","Okta","Opung","Paiman","Panca","Pangeran","Pangestu","Pardi","Parman","Perkasa","Praba","Prabu","Prabawa","Prabowo","Prakosa","Pranata","Pranawa","Prasetya","Prasetyo","Prayitna","Prayoga","Prayogo","Purwadi","Purwa","Purwanto","Panji","Pandu","Paiman","Prima","Putu","Raden","Raditya","Raharja","Rama","Rangga","Reksa","Respati","Rusman","Rosman","Rahmat","Rahman","Rendy","Reza","Rizki","Ridwan","Rudi","Raden","Radit","Radika","Rafi","Rafid","Raihan","Salman","Saadat","Saiful","Surya","Slamet","Samsul","Soleh","Simon","Sabar","Sabri","Sidiq","Satya","Setya","Saka","Sakti","Taswir","Tedi","Teddy","Taufan","Taufik","Tomi","Tasnim","Teguh","Tasdik","Timbul","Tirta","Tirtayasa","Tri","Tugiman","Umar","Usman","Uda","Umay","Unggul","Utama","Umaya","Upik","Viktor","Vino","Vinsen","Vero","Vega","Viman","Virman","Wahyu","Wira","Wisnu","Wadi","Wardi","Warji","Waluyo","Wakiman","Wage","Wardaya","Warsa","Warsita","Warta","Wasis","Wawan","Xanana","Yahya","Yusuf","Yosef","Yono","Yoga"]})),hX=c((()=>{ny=["Adriansyah","Ardianto","Anggriawan","Ahmad","Adhitama","Abiputra","Antoni","Alamsyah","Airlangga","Abimanyu","Agustian","Arifin","Ardana","Aswandi","Budiman","Budiyanto","Bagaskara","Damanik","Darmawan","Dirgantara","Darojat","Firmansyah","Firgantoro","Fabian","Febian","Faresta","Gunarto","Gunawan","Hardiansyah","Habibi","Hakim","Halim","Haryanto","Hidayat","Hidayanto","Hutagalung","Hutapea","Hutasoit","Himawan","Hermawan","Herlambang","Handoko","Haikal","Irawan","Iswahyudi","Irfandi","Kuswoyo","Januar","Jailani","Kurniawan","Kusumo","Latupono","Lazuardi","Lesmana","Maheswara","Mahendra","Mustofa","Mansur","Mandala","Megantara","Maulana","Maryadi","Mangunsong","Manullang","Marpaung","Marbun","Mahardika","Narpati","Natsir","Nugroho","Najmudin","Nashiruddin","Nainggolan","Nababan","Napitupulu","Nugraha","Nanda","Oktavian","Oktovian","Pangestu","Putra","Pranowo","Prabowo","Pratama","Prasetya","Prasetyo","Pradana","Pradipta","Prakasa","Permadi","Prasasta","Prayoga","Perdana","Purnawarman","Purnama","Purwadi","Ramadan","Rajasa","Rajata","Rendra","Rayhan","Rahardian","Saptono","Santoso","Saputra","Saefullah","Setiawan","Suryono","Suwarno","Siregar","Sihombing","Salahudin","Sihombing","Samosir","Saragih","Sihotang","Simanjuntak","Sinaga","Simbolon","Sitompul","Sitorus","Sirait","Siregar","Situmorang","Syahreza","Sabian","Satria","Supriyanto","Sudrajat","Tampubolon","Thamrin","Tamba","Tarihoran","Utama","Uwais","Wahyudin","Waluyo","Wibowo","Winarno","Wibisono","Wijaya","Widodo","Wacana","Waskita","Wasita","Wicaksono","Wardana","Yulianto","Yanuar","Yudhistira","Zulkarnain"]})),pX=c((()=>{iy=["dr.","drg.","Dr.","Drs.","Ir.","H."]})),mX=c((()=>{ry=["#{male_first_name} #{male_last_name}","#{male_last_name} #{male_first_name}","#{male_first_name} #{male_first_name} #{male_last_name}","#{female_first_name} #{female_last_name}","#{female_first_name} #{male_last_name}","#{female_last_name} #{female_first_name}","#{female_first_name} #{female_first_name} #{female_last_name}"]})),fX=c((()=>{ty=[]})),vX=c((()=>{oy=["S.Ked","S.Gz","S.Pt","S.IP","S.E.I","S.E.","S.Kom","S.H.","S.T.","S.Pd","S.Psi","S.I.Kom","S.Sos","S.Farm","M.M.","M.Kom.","M.TI.","M.Pd","M.Farm","M.Ak"]})),gX=c((()=>{lX(),uX(),cX(),dX(),hX(),pX(),mX(),fX(),vX(),sy={female_first_name:$k,female_last_name:Xk,female_title:ey,male_first_name:ay,male_last_name:ny,male_title:iy,name:ry,prefix:ty,suffix:oy}})),kX=c((()=>{ly=["02# #### ###","02## #### ###","03## #### ###","04## #### ###","05## #### ###","06## #### ###","07## #### ###","09## #### ###","02# #### ####","02## #### ####","03## #### ####","04## #### ####","05## #### ####","06## #### ####","07## #### ####","09## #### ####","08## ### ###","08## #### ###","08## #### ####","(+62) 8## ### ###","(+62) 2# #### ###","(+62) 2## #### ###","(+62) 3## #### ###","(+62) 4## #### ###","(+62) 5## #### ###","(+62) 6## #### ###","(+62) 7## #### ###","(+62) 8## #### ###","(+62) 9## #### ###","(+62) 2# #### ####","(+62) 2## #### ####","(+62) 3## #### ####","(+62) 4## #### ####","(+62) 5## #### ####","(+62) 6## #### ####","(+62) 7## #### ####","(+62) 8## #### ####","(+62) 9## #### ####"]})),yX=c((()=>{kX(),uy={formats:ly}})),bX=c((()=>{Y$(),aX(),rX(),sX(),gX(),yX(),cy={title:"Indonesia",address:Vk,company:Jk,date:Zk,internet:Yk,name:sy,phone_number:uy}})),SX=c((()=>{dy=["###","##","#"]})),AX=c((()=>{hy=["#{city_prefix} #{Name.first_name} #{city_suffix}","#{city_prefix} #{Name.first_name}","#{Name.first_name} #{city_suffix}","#{Name.last_name} #{city_suffix}"]})),MX=c((()=>{py=["Agliè","Andezeno","Barbania","Brosso","Buriasco","Caluso","Cantoira","Carmagnola","Cavour","Chiaverano","Ciconio","Coazze","Cumiana","Feletto","Front","Giaveno","Grugliasco","Lauriano","Locana","Lusigliè","Mathi","Mompantero","Nichelino","Novalesa","Oulx","Perrero","Pinerolo","Pomaretto","Pramollo","Quassolo","Rivara","Rondissone","Rueglio","Santena","Sparone","Usseaux","Varisella","Vidracco","Vinovo","Volvera","Balocco","Campertogno","Cervatto","Cravagliana","Formigliana","Lamporo","Moncrivello","Pila","Rassa","Rossa","Scopa","Valduggia","Vocca","Biandrate","Briona","Comignago","Galliate","Invorio","Mezzomerico","Pisano","Sillavengo","Terdobbiate","Vinzaglio","Alto","Barge","Benevello","Bosia","Brondello","Canosio","Cartignano","Castino","Cervere","Clavesana","Demonte","Envie","Frassino","Gorzegno","Isasca","Macra","Marmora","Montanera","Murello","Nucetto","Pagno","Peveragno","Pocapaglia","Revello","Robilante","Roddi","Saliceto","Sanfrè","Sinio","Treiso","Venasca","Vignolo","Albugnano","Bruno","Canelli","Castell'Alfero","Coazzolo","Cortazzone","Fontanile","Maretto","Monale","Quaranti","Scurzolengo","Tigliole","Viale","Balzola","Bosio","Carezzano","Casasco","Cereseto","Dernice","Frugarolo","Giarole","Lerma","Molare","Montaldeo","Mornese","Ottiglio","Pasturana","Prasco","Rivarone","Solero","Terruggia","Trisobbio","Villalvernia","Bioglio","Camburzano","Cerrione","Donato","Magnano","Mottalciata","Piedicavallo","Pray","Tollegno","Verrone","Lessona","Baceno","Bognanco","Caprezzo","Crodo","Ghiffa","Macugnaga","Miazzina","Omegna","Premia","Trasquera","Allein","Avise","Brissogne","Chamois","Cogne","Etroubles","Gressan","Issime","Morgex","Pollein","Quart","Saint-Denis","Saint-Rhémy-en-Bosses","Valpelline","Villeneuve","Azzate","Besnate","Bregano","Brusimpiano","Caravate","Castelseprio","Clivio","Cugliate-Fabiasco","Dumenza","Gemonio","Inarzo","Luino","Marnate","Morazzone","Saltrio","Ternate","Albiolo","Barni","Bregnano","Cabiate","Carbonate","Cavargna","Dizzasco","Faloppio","Guanzate","Lasnigo","Luisago","Moltrasio","Musso","Pigra","Pusiano","Schignano","Torno","Zelbio","Aprica","Caiolo","Chiavenna","Dazio","Gordona","Livigno","Morbegno","Poggiridenti","Sernio","Tartano","Valdidentro","Abbiategrasso","Binasco","Buscate","Carpiano","Cisliano","Corsico","Gaggiano","Inzago","Magenta","Melzo","Nosate","Pantigliate","Rescaldina","Sedriano","Tribiano","Vignate","Albino","Ardesio","Barbata","Bossico","Brumano","Capizzone","Cerete","Colzate","Cusio","Fontanella","Gandosso","Gorno","Lallio","Martinengo","Mozzo","Pagazzano","Parzanica","Piazzatorre","Pradalunga","Ranica","Rovetta","Selvino","Sovere","Taleggio","Valbondione","Valtorta","Viadanica","Zogno","Acquafredda","Artogne","Berlingo","Botticino","Breno","Calvisano","Castelcovati","Cellatica","Cigole","Cologne","Edolo","Gambara","Gottolengo","Iseo","Lograto","Maclodio","Manerbio","Milzano","Muscoline","Odolo","Ospitaletto","Passirano","Poncarale","Preseglie","Sellero","Sulzano","Trenzano","Piancogno","Barbianello","Borgarello","Calvignano","Casteggio","Cervesina","Copiano","Fortunago","Garlasco","Langosco","Lungavilla","Menconico","Nicorvo","Retorbido","Rosasco","Sommo","Vidigulfo","Zerbo","Azzanello","Capergnanica","Castelleone","Crema","Fiesco","Grontardo","Montodine","Pandino","Ricengo","Soresina","Tornata","Voltido","Casalromano","Commessaggio","Gonzaga","Marmirolo","Ostiglia","Quistello","Sabbioneta","Viadana","Barzago","Bulciago","Casatenovo","Cremeno","Erve","Merate","Morterone","Pagnona","Premana","Sirtori","Valmadrera","Codogno","Galgagnano","Maccastorna","Meleti","Sordio","Barlassina","Briosco","Concorezzo","Lesmo","Renate","Triuggio","Caponago","Avelengo","Brennero","Castelbello-Ciardes","Dobbiaco","Gais","Laion","Luson","Merano","Naz-Sciaves","Plaus","Rasun-Anterselva","Scena","Stelvio","Tirolo","Vandoies","Vipiteno","Andalo","Bieno","Caldes","Capriana","Cavareno","Cis","Dambel","Fierozzo","Giustino","Lavis","Massimeno","Mezzolombardo","Nogaredo","Pinzolo","Ronzone","Sanzeno","Sover","Storo","Terragnolo","Trambileno","Vignola-Falesina","Altavalle","Novella","Belfiore","Buttapietra","Concamarise","Garda","Legnago","Oppeano","Roncà","Sommacampagna","Trevenzuolo","Zevio","Altissimo","Breganze","Caltrano","Castegnero","Creazzo","Gallio","Longare","Montegaldella","Orgiano","Roana","Santorso","Solagna","Trissino","Villaverla","Valbrenta","Gosaldo","Sospirolo","Casier","Codognè","Fontanelle","Loria","Montebelluna","Paese","Preganziol","Sarmede","Vedelago","Cavarzere","Eraclea","Martellago","Pianiga","Spinea","Agna","Barbona","Campodarsego","Cartura","Conselve","Gazzo","Loreggia","Monselice","Ponso","Saccolongo","Stanghella","Tribano","Vigonza","Calto","Ceneselli","Gaiba","Melara","Rosolina","Villadose","Artegna","Bordano","Cassacco","Comeglians","Enemonzo","Grimacco","Mortegliano","Pagnacco","Pontebba","Premariacco","Ravascletto","Rigolato","Sedegliano","Talmassons","Torreano","Varmo","Sappada","Monfalcone","Turriaco","Brugnera","Claut","Fontanafredda","Porcia","Spilimbergo","Airole","Bajardo","Castellaro","Chiusavecchia","Dolcedo","Ospedaletti","Pontedassio","Sanremo","Triora","Vessalico","Arnasco","Bormida","Ceriale","Giustenice","Mallare","Nasino","Pallare","Roccavignale","Stellanello","Vendone","Bogliasco","Carasco","Cogoleto","Fontanigorda","Lorsica","Mignanego","Rapallo","Rovegno","Torriglia","Zoagli","Framura","Pignone","Zignago","Bobbio","Cerignale","Gazzola","Rottofreno","Zerba","Bore","Compiano","Fontevivo","Palanzano","Terenzo","Varsi","Brescello","Castellarano","Gattatico","Poviglio","Toano","Bomporto","Fanano","Maranello","Montefiorino","Polinago","Sestola","Argelato","Camugnano","Fontanelice","Marzabotto","Valsamoggia","Comacchio","Tresignana","Conselice","Cesena","Modigliana","Sarsina","Gemmano","Saludecio","Pennabilli","Comano","Montignoso","Zeri","Capannori","Massarosa","Pietrasanta","Agliana","Montale","Uzzano","Empoli","Impruneta","Pelago","Signa","Capoliveri","Piombino","Bientina","Cascina","Montescudaio","Ponsacco","Vicopisano","Bucine","Lucignano","Monteriggioni","Poggibonsi","Sinalunga","Campagnatico","Gavorrano","Pitigliano","Montemurlo","Bettona","Collazzone","Gubbio","Norcia","Pietralunga","Sigillo","Trevi","Allerona","Baschi","Guardea","Narni","Porano","Fermignano","Lunano","Montefelcino","Petriano","Sassofeltrio","Vallefoglia","Camerano","Corinaldo","Jesi","Montemarciano","Polverigi","Staffolo","Caldarola","Colmurano","Gagliole","Montecassiano","Muccia","Sarnano","Urbisaglia","Castignano","Force","Montegallo","Ripatransone","Altidona","Grottazzolina","Montegranaro","Ortezzano","Smerillo","Bomarzo","Capranica","Corchiano","Graffignano","Monterosi","Proceno","Tuscania","Vetralla","Amatrice","Cantalice","Collegiove","Cottanello","Leonessa","Montebuono","Selci","Vacone","Ariccia","Canterano","Ciciliano","Formello","Gorga","Licenza","Mentana","Moricone","Nettuno","Pomezia","Saracinesco","Vallepietra","Zagarolo","Fiumicino","Pontinia","Sabaudia","Terracina","Alvito","Arnara","Casalattico","Ceccano","Esperia","Fontechiari","Morolo","Picinisco","Ripi","Settefrati","Terelle","Vallerotonda","Aielli","Barete","Calascio","Capistrello","Castellafiume","Introdacqua","Navelli","Ortucchio","Pescina","Rivisondoli","Scoppito","Trasacco","Arsita","Campli","Cermignano","Cortino","Notaresco","Alanno","Civitaquana","Farindola","Nocciano","Picciano","Salle","Vicoli","Atessa","Casacanditella","Castelguidone","Crecchio","Fraine","Gessopalena","Lentella","Monteferrante","Orsogna","Palombaro","Poggiofiorito","Roccamontepiano","Tollo","Vacri","Fallo","Casacalenda","Guardiaregia","Lucito","Monacilioni","Oratino","Portocannone","Roccavivara","Tavenna","Ururi","Filignano","Macchiagodena","Pescolanciano","Roccamandolfi","Venafro","Aversa","Capodrise","Casaluce","Ciorlano","Francolise","Liberi","Parete","Pratella","Succivo","Casapesenna","Arpaia","Bucciano","Castelpagano","Circello","Forchia","Montesarchio","Paupisi","Puglianello","Vitulano","Arzano","Caivano","Casamarciano","Cicciano","Frattamaggiore","Liveri","Nola","Portici","Ercolano","Saviano","Andretta","Baiano","Calitri","Castelfranci","Domicella","Gesualdo","Lapio","Mercogliano","Montella","Nusco","Quadrelle","Senerchia","Sturno","Torrioni","Venticano","Agropoli","Aquara","Battipaglia","Caggiano","Cannalonga","Ceraso","Corbara","Futani","Laurito","Montecorice","Padula","Perito","Polla","Ravello","Rofrano","Sapri","Serramezzana","Torchiara","Valva","Apricena","Carlantino","Faeto","Manfredonia","Serracapriola","Vieste","Alberobello","Bitonto","Conversano","Molfetta","Putignano","Turi","Crispiano","Laterza","Massafra","Palagianello","Cisternino","Oria","Alliste","Collepasso","Diso","Giurdignano","Lizzanello","Melendugno","Neviano","Palmariggi","Ruffano","Seclì","Sternatia","Taviano","Ugento","Presicce-Acquarica","Trani","Armento","Baragiano","Calvera","Castelmezzano","Fardella","Latronico","Marsicovetere","Montemilone","Picerno","Rapolla","Rotonda","Spinoso","Trecchina","Ginestra","Calciano","Garaguso","Pomarico","Tursi","Aieta","Amendolara","Bocchigliero","Campana","Castrolibero","Cerisano","Cleto","Diamante","Fuscaldo","Lattarico","Maierà","Marzi","Mottafollone","Panettieri","Pietrafitta","Rose","Scigliano","Verbicaro","Amaroni","Belcastro","Conflenti","Decollatura","Girifalco","Maida","Montauro","Petrizzi","Squillace","Zagarise","Bagaladi","Bovalino","Canolo","Ciminà","Delianuova","Giffone","Maropati","Monasterace","Platì","Roghudi","Seminara","Stignano","Carfizzi","Mesoraca","Strongoli","Briatico","Dinami","Filogaso","Limbadi","Nicotera","Ricadi","Spadola","Vazzano","Calatafimi-Segesta","Gibellina","Poggioreale","Vita","Aliminusa","Bisacquino","Caltavuturo","Castelbuono","Cinisi","Lascari","Montelepre","Roccamena","Trabia","Villabate","Antillo","Castell'Umberto","Falcone","Frazzanò","Graniti","Limina","Mandanici","Mistretta","Patti","Roccafiorita","Savoca","Tortorici","Venetico","Bivona","Cammarata","Comitini","Montallegro","Ravanusa","Bompensiere","Gela","Mussomeli","Sommatino","Assoro","Cerami","Pietraperzia","Calatabiano","Linguaglossa","Mineo","Pedara","Sant'Alfio","Vizzini","Comiso","Buccheri","Floridia","Pachino","Aggius","Banari","Bono","Buddusò","Cargeghe","Cossoine","Ittireddu","Mara","Nule","Osilo","Pattada","Romana","Sennori","Torralba","Telti","Stintino","Atzara","Bitti","Dorgali","Gairo","Irgoli","Loculi","Mamoiada","Olzai","Orgosolo","Osidda","Posada","Sorgono","Tonara","Urzulei","Quartucciu","Albagiara","Assolo","Bidonì","Cuglieri","Gonnostramatza","Mogoro","Nurachi","Paulilatino","Seneghe","Simala","Sorradile","Uras","Siapiccia","Laconi","Suni","Barrali","Carbonia","Dolianova","Esterzili","Gergei","Gonnesa","Iglesias","Monastir","Nurallao","Ortacesus","Portoscuso","Santadi","Senorbì","Setzu","Silius","Tuili","Villacidro","Villaperuccio","Villaspeciosa"]})),TX=c((()=>{my=["San","Borgo","Sesto","Quarto","Settimo"]})),_X=c((()=>{fy=["a mare","lido","ligure","del friuli","salentino","calabro","veneto","nell'emilia","umbro","laziale","terme","sardo"]})),wX=c((()=>{vy=["Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antartide (territori a sud del 60° parallelo)","Antigua e Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Bielorussia","Belgio","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia e Herzegovina","Botswana","Bouvet Island (Bouvetoya)","Brasile","Territorio dell'arcipelago indiano","Isole Vergini Britanniche","Brunei Darussalam","Bulgaria","Burkina Faso","Burundi","Cambogia","Cameroon","Canada","Capo Verde","Isole Cayman","Repubblica Centrale Africana","Chad","Cile","Cina","Isola di Pasqua","Isola di Cocos (Keeling)","Colombia","Comoros","Congo","Isole Cook","Costa Rica","Costa d'Avorio","Croazia","Cuba","Cipro","Repubblica Ceca","Danimarca","Gibuti","Repubblica Dominicana","Equador","Egitto","El Salvador","Guinea Equatoriale","Eritrea","Estonia","Etiopia","Isole Faroe","Isole Falkland (Malvinas)","Fiji","Finlandia","Francia","Guyana Francese","Polinesia Francese","Territori Francesi del sud","Gabon","Gambia","Georgia","Germania","Ghana","Gibilterra","Grecia","Groenlandia","Grenada","Guadalupa","Guam","Guatemala","Guernsey","Guinea","Guinea-Bissau","Guyana","Haiti","Heard Island and McDonald Islands","Città del Vaticano","Honduras","Hong Kong","Ungheria","Islanda","India","Indonesia","Iran","Iraq","Irlanda","Isola di Man","Israele","Italia","Giamaica","Giappone","Jersey","Giordania","Kazakhstan","Kenya","Kiribati","Korea","Kuwait","Republicca Kirgiza","Repubblica del Laos","Latvia","Libano","Lesotho","Liberia","Libyan Arab Jamahiriya","Liechtenstein","Lituania","Lussemburgo","Macao","Macedonia","Madagascar","Malawi","Malesia","Maldive","Mali","Malta","Isole Marshall","Martinica","Mauritania","Mauritius","Mayotte","Messico","Micronesia","Moldova","Principato di Monaco","Mongolia","Montenegro","Montserrat","Marocco","Mozambico","Myanmar","Namibia","Nauru","Nepal","Antille Olandesi","Olanda","Nuova Caledonia","Nuova Zelanda","Nicaragua","Niger","Nigeria","Niue","Isole Norfolk","Northern Mariana Islands","Norvegia","Oman","Pakistan","Palau","Palestina","Panama","Papua Nuova Guinea","Paraguay","Peru","Filippine","Pitcairn Islands","Polonia","Portogallo","Porto Rico","Qatar","Reunion","Romania","Russia","Rwanda","San Bartolomeo","Sant'Elena","Saint Kitts and Nevis","Saint Lucia","Saint Martin","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Arabia Saudita","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovenia","Isole Solomon","Somalia","Sud Africa","Georgia del sud e South Sandwich Islands","Spagna","Sri Lanka","Sudan","Suriname","Svalbard & Jan Mayen Islands","Swaziland","Svezia","Svizzera","Siria","Taiwan","Tajikistan","Tanzania","Tailandia","Timor-Leste","Togo","Tokelau","Tonga","Trinidad e Tobago","Tunisia","Turchia","Turkmenistan","Isole di Turks and Caicos","Tuvalu","Uganda","Ucraina","Emirati Arabi Uniti","Regno Unito","Stati Uniti d'America","United States Minor Outlying Islands","Isole Vergini Statunitensi","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe"]})),jX=c((()=>{gy=["Italia"]})),EX=c((()=>{ky=["#####"]})),NX=c((()=>{yy=["Appartamento ##","Piano #"]})),BX=c((()=>{by=["Agrigento","Alessandria","Ancona","Aosta","Arezzo","Ascoli Piceno","Asti","Avellino","Bari","Barletta-Andria-Trani","Belluno","Benevento","Bergamo","Biella","Bologna","Bolzano","Brescia","Brindisi","Cagliari","Caltanissetta","Campobasso","Carbonia-Iglesias","Caserta","Catania","Catanzaro","Chieti","Como","Cosenza","Cremona","Crotone","Cuneo","Enna","Fermo","Ferrara","Firenze","Foggia","Forlì-Cesena","Frosinone","Genova","Gorizia","Grosseto","Imperia","Isernia","La Spezia","L'Aquila","Latina","Lecce","Lecco","Livorno","Lodi","Lucca","Macerata","Mantova","Massa-Carrara","Matera","Messina","Milano","Modena","Monza e della Brianza","Napoli","Novara","Nuoro","Olbia-Tempio","Oristano","Padova","Palermo","Parma","Pavia","Perugia","Pesaro e Urbino","Pescara","Piacenza","Pisa","Pistoia","Pordenone","Potenza","Prato","Ragusa","Ravenna","Reggio Calabria","Reggio Emilia","Rieti","Rimini","Roma","Rovigo","Salerno","Medio Campidano","Sassari","Savona","Siena","Siracusa","Sondrio","Taranto","Teramo","Terni","Torino","Ogliastra","Trapani","Trento","Treviso","Trieste","Udine","Varese","Venezia","Verbano-Cusio-Ossola","Vercelli","Verona","Vibo Valentia","Vicenza","Viterbo"]})),PX=c((()=>{Sy=["AG","AL","AN","AO","AR","AP","AT","AV","BA","BT","BL","BN","BG","BI","BO","BZ","BS","BR","CA","CL","CB","CI","CE","CT","CZ","CH","CO","CS","CR","KR","CN","EN","FM","FE","FI","FG","FC","FR","GE","GO","GR","IM","IS","SP","AQ","LT","LE","LC","LI","LO","LU","MC","MN","MS","MT","ME","MI","MO","MB","NA","NO","NU","OT","OR","PD","PA","PR","PV","PG","PU","PE","PC","PI","PT","PN","PZ","PO","RG","RA","RC","RE","RI","RN","RM","RO","SA","VS","SS","SV","SI","SR","SO","TA","TE","TR","TO","OG","TP","TN","TV","TS","UD","VA","VE","VB","VC","VR","VV","VI","VT"]})),LX=c((()=>{Ay=["#{street_name} #{building_number}","#{street_name} #{building_number}, #{secondary_address}"]})),DX=c((()=>{My=["#{street_suffix} #{Name.first_name}","#{street_suffix} #{Name.last_name}"]})),xX=c((()=>{Ty=["Piazza","Strada","Via","Borgo","Contrada","Rotonda","Incrocio"]})),CX=c((()=>{SX(),AX(),MX(),TX(),_X(),wX(),jX(),EX(),NX(),BX(),PX(),LX(),DX(),xX(),_y={building_number:dy,city:hy,city_name:py,city_prefix:my,city_suffix:fy,country:vy,default_country:gy,postcode:ky,secondary_address:yy,state:by,state_abbr:Sy,street_address:Ay,street_name:My,street_suffix:Ty}})),KX=c((()=>{wy=["24 ore","24/7","terza generazione","quarta generazione","quinta generazione","sesta generazione","asimmetrica","asincrona","background","bi-direzionale","biforcata","bottom-line","coerente","coesiva","composita","sensibile al contesto","basta sul contesto","basata sul contenuto","dedicata","didattica","direzionale","discreta","dinamica","eco-centrica","esecutiva","esplicita","full-range","globale","euristica","alto livello","olistica","omogenea","ibrida","impattante","incrementale","intangibile","interattiva","intermediaria","locale","logistica","massimizzata","metodica","mission-critical","mobile","modulare","motivazionale","multimedia","multi-tasking","nazionale","neutrale","nextgeneration","non-volatile","object-oriented","ottima","ottimizzante","radicale","real-time","reciproca","regionale","responsiva","scalabile","secondaria","stabile","statica","sistematica","sistemica","tangibile","terziaria","uniforme","valore aggiunto"]})),RX=c((()=>{jy=["valore aggiunto","verticalizzate","proattive","forti","rivoluzionari","scalabili","innovativi","intuitivi","strategici","e-business","mission-critical","24/7","globali","B2B","B2C","granulari","virtuali","virali","dinamiche","magnetiche","web","interattive","sexy","back-end","real-time","efficienti","front-end","distributivi","estensibili","mondiali","open-source","cross-platform","sinergiche","out-of-the-box","enterprise","integrate","di impatto","wireless","trasparenti","next-generation","cutting-edge","visionari","plug-and-play","collaborative","olistiche","ricche"]})),zX=c((()=>{Ey=["partnerships","comunità","ROI","soluzioni","e-services","nicchie","tecnologie","contenuti","supply-chains","convergenze","relazioni","architetture","interfacce","mercati","e-commerce","sistemi","modelli","schemi","reti","applicazioni","metriche","e-business","funzionalità","esperienze","webservices","metodologie"]})),OX=c((()=>{Ny=["implementate","utilizzo","integrate","ottimali","evolutive","abilitate","reinventate","aggregate","migliorate","incentivate","monetizzate","sinergizzate","strategiche","deploy","marchi","accrescitive","target","sintetizzate","spedizioni","massimizzate","innovazione","guida","estensioni","generate","exploit","transizionali","matrici","ricontestualizzate"]})),IX=c((()=>{By=["adattiva","avanzata","migliorata","assimilata","automatizzata","bilanciata","centralizzata","compatibile","configurabile","cross-platform","decentralizzata","digitalizzata","distribuita","piccola","ergonomica","esclusiva","espansa","estesa","configurabile","fondamentale","orizzontale","implementata","innovativa","integrata","intuitiva","inversa","gestita","obbligatoria","monitorata","multi-canale","multi-laterale","open-source","operativa","ottimizzata","organica","persistente","polarizzata","proattiva","programmabile","progressiva","reattiva","riallineata","ricontestualizzata","ridotta","robusta","sicura","condivisibile","stand-alone","switchabile","sincronizzata","sinergica","totale","universale","user-friendly","versatile","virtuale","visionaria"]})),VX=c((()=>{Py=["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name} #{suffix}","#{Name.last_name}, #{Name.last_name} e #{Name.last_name} #{suffix}"]})),GX=c((()=>{Ly=["Abilità","Access","Adattatore","Algoritmo","Alleanza","Analizzatore","Applicazione","Approccio","Architettura","Archivio","Intelligenza artificiale","Array","Attitudine","Benchmark","Capacità","Sfida","Circuito","Collaborazione","Complessità","Concetto","Conglomerato","Contingenza","Core","Database","Data-warehouse","Definizione","Emulazione","Codifica","Criptazione","Firmware","Flessibilità","Previsione","Frame","framework","Funzione","Funzionalità","Interfaccia grafica","Hardware","Help-desk","Gerarchia","Hub","Implementazione","Infrastruttura","Iniziativa","Installazione","Set di istruzioni","Interfaccia","Soluzione internet","Intranet","Conoscenza base","Matrici","Matrice","Metodologia","Middleware","Migrazione","Modello","Moderazione","Monitoraggio","Moratoria","Rete","Architettura aperta","Sistema aperto","Orchestrazione","Paradigma","Parallelismo","Policy","Portale","Struttura di prezzo","Prodotto","Produttività","Progetto","Proiezione","Protocollo","Servizio clienti","Software","Soluzione","Standardizzazione","Strategia","Struttura","Successo","Sovrastruttura","Supporto","Sinergia","Task-force","Finestra temporale","Strumenti","Utilizzazione","Sito web","Forza lavoro"]})),HX=c((()=>{Dy=["SPA","e figli","Group","s.r.l."]})),FX=c((()=>{KX(),RX(),zX(),OX(),IX(),VX(),GX(),HX(),xy={adjective:wy,bs_adjective:jy,bs_noun:Ey,bs_verb:Ny,descriptor:By,name:Py,noun:Ly,suffix:Dy}})),JX=c((()=>{Cy=["com","com","com","net","org","it","it","it"]})),UX=c((()=>{Ky=["gmail.com","yahoo.com","hotmail.com","email.it","libero.it","yahoo.it"]})),WX=c((()=>{JX(),UX(),Ry={domain_suffix:Cy,free_email:Ky}})),ZX=c((()=>{zy=["Abbondanza","Acilia","Ada","Adalberta","Adalgisa","Addolorata","Adelaide","Adelasia","Adele","Adelina","Adina","Adria","Adriana","Agape","Agata","Agnese","Agostina","Aida","Alba","Alberta","Albina","Alcina","Alda","Alessandra","Alessia","Alfonsa","Alfreda","Alice","Alida","Alina","Allegra","Alma","Altea","Amalia","Amanda","Amata","Ambra","Amelia","Amina","Anastasia","Anatolia","Ancilla","Andromeda","Angela","Angelica","Anita","Anna","Annabella","Annagrazia","Annamaria","Annunziata","Antea","Antigone","Antonella","Antonia","Apollina","Apollonia","Appia","Arabella","Argelia","Arianna","Armida","Artemisa","Asella","Asia","Assunta","Astrid","Atanasia","Aurelia","Aurora","Ausilia","Ausiliatrice","Ave","Aza","Azelia","Azzurra","Babila","Bambina","Barbara","Bartolomea","Basilia","Bassilla","Batilda","Beata","Beatrice","Belina","Benedetta","Beniamina","Benigna","Benvenuta","Berenice","Bernadetta","Betta","Bianca","Bibiana","Bice","Brigida","Brigitta","Bruna","Brunilde","Calogera","Calpurnia","Camelia","Camilla","Candida","Capitolina","Carina","Carla","Carlotta","Carmela","Carmen","Carola","Carolina","Casilda","Casimira","Cassandra","Cassiopea","Catena","Caterina","Cecilia","Celeste","Celinia","Chiara","Cinzia","Cirilla","Clara","Claudia","Clelia","Clemenzia","Cleo","Cleofe","Cleopatra","Cloe","Clorinda","Cointa","Colomba","Concetta","Consolata","Cora","Cordelia","Corinna","Cornelia","Cosima","Costanza","Crescenzia","Cristiana","Cristina","Crocefissa","Cronida","Cunegonda","Cuzia","Dafne","Dalida","Dalila","Damiana","Daniela","Daria","Deanna","Debora","Degna","Delfina","Delia","Delinda","Delizia","Demetria","Deodata","Desdemona","Desiderata","Devota","Diamante","Diana","Dianora","Diletta","Dina","Diodata","Dionisia","Doda","Dolores","Domenica","Donata","Donatella","Donna","Dora","Dorotea","Druina","Dulina","Ebe","Edda","Edelberga","Editta","Edvige","Egizia","Egle","Elaide","Elda","Elena","Eleonora","Elettra","Eliana","Elide","Elimena","Elisa","Elisabetta","Elisea","Ella","Eloisa","Elsa","Elvia","Elvira","Emanuela","Emilia","Emiliana","Emma","Enimia","Enrica","Eracla","Ermelinda","Ermenegarda","Ermenegilda","Erminia","Ernesta","Ersilia","Esmeralda","Estella","Ester","Esterina","Eufemia","Eufrasia","Eugenia","Eulalia","Euridice","Eusebia","Eutalia","Eva","Evangelina","Evelina","Fabiana","Fabiola","Fatima","Fausta","Federica","Fedora","Felicia","Felicita","Fernanda","Fiammetta","Filippa","Filomena","Fiordaliso","Fiore","Fiorella","Fiorenza","Flaminia","Flavia","Flaviana","Flora","Floriana","Floridia","Florina","Foca","Fortunata","Fosca","Franca","Francesca","Fulvia","Gabriella","Gaia","Galatea","Gaudenzia","Gelsomina","Geltrude","Gemma","Generosa","Genesia","Genoveffa","Germana","Gertrude","Ghita","Giacinta","Giada","Gigliola","Gilda","Giliola","Ginevra","Gioacchina","Gioconda","Gioia","Giorgia","Giovanna","Gisella","Giuditta","Giulia","Giuliana","Giulitta","Giuseppa","Giuseppina","Giusta","Glenda","Gloria","Godeberta","Godiva","Grazia","Graziana","Graziella","Greta","Griselda","Guenda","Guendalina","Gundelinda","Ianira","Ida","Idea","Iginia","Ilaria","Ilda","Ildegarda","Ildegonda","Ileana","Ilenia","Ilia","Ilva","Imelda","Immacolata","Incoronata","Ines","Innocenza","Iolanda","Iole","Iona","Ione","Ionne","Irene","Iride","Iris","Irma","Irmina","Isa","Isabella","Iside","Isidora","Isotta","Italia","Ivetta","Lara","Laura","Lavinia","Lea","Leda","Lelia","Lena","Leonia","Leonilda","Leontina","Letizia","Lia","Liana","Liberata","Liboria","Licia","Lidania","Lidia","Liliana","Linda","Lisa","Livia","Liviana","Lodovica","Loredana","Lorella","Lorena","Lorenza","Loretta","Loriana","Luana","Luce","Lucia","Luciana","Lucilla","Lucrezia","Ludovica","Luigia","Luisa","Luminosa","Luna","Macaria","Maddalena","Mafalda","Magda","Maida","Manuela","Mara","Marana","Marcella","Mareta","Margherita","Maria","Marianna","Marica","Mariella","Marilena","Marina","Marinella","Marinetta","Marisa","Marita","Marta","Martina","Maruta","Marzia","Massima","Matilde","Maura","Melania","Melissa","Melitina","Menodora","Mercede","Messalina","Mia","Michela","Milena","Mimma","Mina","Minerva","Minervina","Miranda","Mirella","Miriam","Mirta","Moira","Monica","Morena","Morgana","Nadia","Natalia","Natalina","Neiva","Nerea","Nicla","Nicoletta","Nilde","Nina","Ninfa","Nives","Noemi","Norina","Norma","Novella","Nuccia","Nunziata","Odetta","Odilia","Ofelia","Olga","Olimpia","Olinda","Olivia","Oliviera","Ombretta","Ondina","Onesta","Onorata","Onorina","Orchidea","Oriana","Orietta","Ornella","Orsola","Orsolina","Ortensia","Osanna","Otilia","Ottilia","Palladia","Palmazio","Palmira","Pamela","Paola","Patrizia","Pelagia","Penelope","Perla","Petronilla","Pia","Piera","Placida","Polissena","Porzia","Prisca","Priscilla","Proserpina","Prospera","Prudenzia","Quartilla","Quieta","Quiteria","Rachele","Raffaella","Rainelda","Rebecca","Regina","Renata","Riccarda","Rina","Rita","Roberta","Romana","Romilda","Romina","Romola","Rosa","Rosalia","Rosalinda","Rosamunda","Rosanna","Rosita","Rosmunda","Rossana","Rossella","Rufina","Saba","Sabina","Sabrina","Samanta","Samona","Sandra","Santina","Sara","Savina","Scolastica","Sebastiana","Seconda","Secondina","Sefora","Selene","Selvaggia","Semiramide","Serafina","Serena","Severa","Sibilla","Sidonia","Silvana","Silvia","Simona","Simonetta","Siria","Smeralda","Soave","Sofia","Sofronia","Solange","Sonia","Speranza","Stefania","Stella","Susanna","Sveva","Tabita","Tamara","Tarquinia","Tarsilla","Taziana","Tea","Tecla","Telica","Teodata","Teodolinda","Teodora","Teresa","Teudosia","Tina","Tiziana","Tosca","Trasea","Tullia","Ugolina","Ulfa","Uliva","Unna","Vala","Valentina","Valeria","Valeriana","Vanda","Vanessa","Vanna","Venera","Veneranda","Venere","Venusta","Vera","Verdiana","Verena","Veriana","Veridiana","Veronica","Viliana","Vilma","Vincenza","Viola","Violante","Virginia","Vissia","Vittoria","Viviana","Wanda","Zabina","Zaira","Zama","Zanita","Zarina","Zelinda","Zenobia","Zita","Zoe","Zosima"]})),qX=c((()=>{Oy=["Abaco","Abbondanzio","Abbondio","Abdone","Abelardo","Abele","Abenzio","Abibo","Abramio","Abramo","Acacio","Acario","Accursio","Achille","Acilio","Aciscolo","Acrisio","Adalardo","Adalberto","Adalfredo","Adalgiso","Adalrico","Adamo","Addo","Adelardo","Adelberto","Adelchi","Adelfo","Adelgardo","Adelmo","Adeodato","Adolfo","Adone","Adriano","Adrione","Afro","Agabio","Agamennone","Agapito","Agazio","Agenore","Agesilao","Agostino","Agrippa","Aiace","Aidano","Aimone","Aladino","Alamanno","Alano","Alarico","Albano","Alberico","Alberto","Albino","Alboino","Albrico","Alceo","Alceste","Alcibiade","Alcide","Alcino","Aldo","Aldobrando","Aleandro","Aleardo","Aleramo","Alessandro","Alessio","Alfio","Alfonso","Alfredo","Algiso","Alighiero","Almerigo","Almiro","Aloisio","Alvaro","Alviero","Alvise","Amabile","Amadeo","Amando","Amanzio","Amaranto","Amato","Amatore","Amauri","Ambrogio","Ambrosiano","Amedeo","Amelio","Amerigo","Amico","Amilcare","Amintore","Amleto","Amone","Amore","Amos","Ampelio","Anacleto","Andrea","Angelo","Aniceto","Aniello","Annibale","Ansaldo","Anselmo","Ansovino","Antelmo","Antero","Antimo","Antino","Antioco","Antonello","Antonio","Apollinare","Apollo","Apuleio","Aquilino","Araldo","Aratone","Arcadio","Archimede","Archippo","Arcibaldo","Ardito","Arduino","Aresio","Argimiro","Argo","Arialdo","Ariberto","Ariele","Ariosto","Aris","Aristarco","Aristeo","Aristide","Aristione","Aristo","Aristofane","Aristotele","Armando","Arminio","Arnaldo","Aronne","Arrigo","Arturo","Ascanio","Asdrubale","Asimodeo","Assunto","Asterio","Astianatte","Ataleo","Atanasio","Athos","Attila","Attilano","Attilio","Auberto","Audace","Augusto","Aureliano","Aurelio","Auro","Ausilio","Averardo","Azeglio","Azelio","Bacco","Baldassarre","Balderico","Baldo","Baldomero","Baldovino","Barbarigo","Bardo","Bardomiano","Barnaba","Barsaba","Barsimeo","Bartolo","Bartolomeo","Basileo","Basilio","Bassiano","Bastiano","Battista","Beato","Bellino","Beltramo","Benedetto","Beniamino","Benigno","Benito","Benvenuto","Berardo","Berengario","Bernardo","Beronico","Bertoldo","Bertolfo","Biagio","Bibiano","Bindo","Bino","Birino","Bonagiunta","Bonaldo","Bonaventura","Bonavita","Bonifacio","Bonito","Boris","Bortolo","Brancaleone","Brando","Bruno","Bruto","Caino","Caio","Calanico","Calcedonio","Callisto","Calogero","Camillo","Candido","Cantidio","Canziano","Carlo","Carmelo","Carmine","Caronte","Carponio","Casimiro","Cassiano","Cassio","Casto","Cataldo","Catullo","Cecco","Cecilio","Celso","Cesare","Cesario","Cherubino","Chiaffredo","Cino","Cipriano","Cirano","Ciriaco","Cirillo","Cirino","Ciro","Clarenzio","Claudio","Cleandro","Clemente","Cleonico","Climaco","Clinio","Clodomiro","Clodoveo","Colmanno","Colmazio","Colombano","Colombo","Concetto","Concordio","Corbiniano","Coreno","Coriolano","Cornelio","Coronato","Corrado","Cosimo","Cosma","Costante","Costantino","Costanzo","Cremenzio","Crescente","Crescenzio","Crespignano","Crispino","Cristaldo","Cristiano","Cristoforo","Crocefisso","Cuniberto","Cupido","Daciano","Dacio","Dagoberto","Dalmazio","Damaso","Damiano","Damocle","Daniele","Danilo","Danio","Dante","Dario","Davide","Davino","Decimo","Delfino","Demetrio","Democrito","Demostene","Deodato","Desiderato","Desiderio","Didimo","Diego","Dino","Diocleziano","Diodoro","Diogene","Diomede","Dione","Dionigi","Dionisio","Divo","Dodato","Domenico","Domezio","Domiziano","Donatello","Donato","Doriano","Doroteo","Duccio","Duilio","Durante","Eberardo","Ecclesio","Edgardo","Edilberto","Edmondo","Edoardo","Efisio","Efrem","Egeo","Egidio","Eginardo","Egisto","Eleuterio","Elia","Eliano","Elifio","Eligio","Elio","Eliodoro","Eliseo","Elita","Elmo","Elogio","Elpidio","Elvezio","Elvino","Emanuele","Emidio","Emiliano","Emilio","Emmerico","Empirio","Endrigo","Enea","Enecone","Ennio","Enrico","Enzo","Eraclide","Eraldo","Erardo","Erasmo","Erberto","Ercolano","Ercole","Erenia","Eriberto","Erico","Ermanno","Ermenegildo","Ermes","Ermete","Ermilo","Erminio","Ernesto","Eros","Esa�","Esuperio","Eterie","Ettore","Euclide","Eufebio","Eufemio","Eufronio","Eugenio","Eusebio","Euseo","Eustorgio","Eustosio","Eutalio","Evaldo","Evandro","Evaristo","Evasio","Everardo","Evidio","Evodio","Evremondo","Ezechiele","Ezio","Fabiano","Fabio","Fabrizio","Famiano","Fausto","Fazio","Fedele","Federico","Fedro","Felice","Feliciano","Ferdinando","Fermiano","Fermo","Fernando","Ferruccio","Festo","Fidenziano","Fidenzio","Filiberto","Filippo","Filomeno","Fiorenziano","Fiorenzo","Flaviano","Flavio","Fleano","Floriano","Folco","Fortunato","Fosco","Francesco","Franco","Frido","Frontiniano","Fulberto","Fulgenzio","Fulvio","Furio","Furseo","Fuscolo","Gabino","Gabriele","Gaetano","Gaglioffo","Gaio","Galdino","Galeazzo","Galileo","Gallicano","Gandolfo","Garimberto","Gaspare","Gastone","Gaudenzio","Gaudino","Gautiero","Gavino","Gedeone","Geminiano","Generoso","Genesio","Gennaro","Gentile","Genziano","Gerardo","Gerasimo","Geremia","Gerino","Germano","Gerolamo","Geronimo","Geronzio","Gervasio","Gesualdo","Gherardo","Giacinto","Giacobbe","Giacomo","Giadero","Giambattista","Gianbattista","Giancarlo","Giandomenico","Gianfranco","Gianluca","Gianluigi","Gianmarco","Gianmaria","Gianmario","Gianni","Gianpaolo","Gianpiero","Gianpietro","Gianuario","Giasone","Gilberto","Gildo","Gillo","Gineto","Gino","Gioacchino","Giobbe","Gioberto","Giocondo","Gioele","Giona","Gionata","Giordano","Giorgio","Giosu�","Giosuele","Giotto","Giovanni","Giove","Gioventino","Giovenzio","Girardo","Girolamo","Giuda","Giuliano","Giulio","Giuseppe","Giustiniano","Giusto","Glauco","Goffredo","Golia","Gomberto","Gondulfo","Gonerio","Gonzaga","Gordiano","Gosto","Gottardo","Graciliano","Grato","Graziano","Gregorio","Grimaldo","Gualberto","Gualtiero","Guelfo","Guerrino","Guglielmo","Guiberto","Guido","Guiscardo","Gumesindo","Gustavo","Iacopo","Iacopone","Iago","Icaro","Icilio","Ido","Iginio","Igino","Ignazio","Igor","Ilario","Ildebrando","Ildefonso","Illidio","Illuminato","Immacolato","Indro","Innocente","Innocenzo","Iorio","Ippocrate","Ippolito","Ireneo","Isacco","Isaia","Ischirione","Isidoro","Ismaele","Italo","Ivan","Ivano","Ivanoe","Ivo","Ivone","Ladislao","Lamberto","Lancilotto","Landolfo","Lanfranco","Lapo","Laurentino","Lauriano","Lautone","Lavinio","Lazzaro","Leandro","Leo","Leonardo","Leone","Leonida","Leonio","Leonzio","Leopardo","Leopoldo","Letterio","Liberato","Liberatore","Liberio","Libero","Liberto","Liborio","Lidio","Lieto","Lino","Lisandro","Livino","Livio","Lodovico","Loreno","Lorenzo","Loris","Luca","Luciano","Lucio","Ludano","Ludovico","Luigi","Macario","Maccabeo","Maffeo","Maggiorino","Magno","Maiorico","Malco","Mamante","Mancio","Manetto","Manfredo","Manilio","Manlio","Mansueto","Manuele","Marcello","Marciano","Marco","Mariano","Marino","Mario","Marolo","Martino","Marzio","Massimiliano","Massimo","Matroniano","Matteo","Mattia","Maurilio","Maurizio","Mauro","Medardo","Medoro","Melanio","Melchiade","Melchiorre","Melezio","Menardo","Menelao","Meneo","Mennone","Mercurio","Metello","Metrofane","Michelangelo","Michele","Milo","Minervino","Mirco","Mirko","Mirocleto","Misaele","Modesto","Monaldo","Monitore","Moreno","Mos�","Muziano","Namazio","Napoleone","Narciso","Narseo","Narsete","Natale","Nazario","Nazzareno","Nazzaro","Neopolo","Neoterio","Nereo","Neri","Nestore","Nicarete","Nicea","Niceforo","Niceto","Nicezio","Nico","Nicodemo","Nicola","Nicol�","Niniano","Nino","No�","Norberto","Nostriano","Nunzio","Oddone","Oderico","Odidone","Odorico","Olimpio","Olindo","Oliviero","Omar","Omero","Onesto","Onofrio","Onorino","Onorio","Orazio","Orenzio","Oreste","Orfeo","Orio","Orlando","Oronzo","Orsino","Orso","Ortensio","Oscar","Osmondo","Osvaldo","Otello","Ottaviano","Ottavio","Ottone","Ovidio","Paciano","Pacifico","Pacomio","Palatino","Palladio","Pammachio","Pancario","Pancrazio","Panfilo","Pantaleo","Pantaleone","Paolo","Pardo","Paride","Parmenio","Pasquale","Paterniano","Patrizio","Patroclo","Pauside","Peleo","Pellegrino","Pericle","Perseo","Petronio","Pierangelo","Piergiorgio","Pierluigi","Piermarco","Piero","Piersilvio","Pietro","Pio","Pippo","Placido","Platone","Plinio","Plutarco","Polidoro","Polifemo","Pollione","Pompeo","Pomponio","Ponziano","Ponzio","Porfirio","Porziano","Postumio","Prassede","Priamo","Primo","Prisco","Privato","Procopio","Prospero","Protasio","Proteo","Prudenzio","Publio","Pupolo","Pusicio","Quarto","Quasimodo","Querano","Quintiliano","Quintilio","Quintino","Quinziano","Quinzio","Quirino","Radolfo","Raffaele","Raide","Raimondo","Rainaldo","Ramiro","Raniero","Ranolfo","Reginaldo","Regolo","Remigio","Remo","Remondo","Renato","Renzo","Respicio","Ricario","Riccardo","Richelmo","Rinaldo","Rino","Robaldo","Roberto","Rocco","Rodiano","Rodolfo","Rodrigo","Rolando","Rolfo","Romano","Romeo","Romero","Romoaldo","Romolo","Romualdo","Rosario","Rubiano","Rufino","Rufo","Ruggero","Ruperto","Rutilo","Sabato","Sabazio","Sabele","Sabino","Saffiro","Saffo","Saladino","Salom�","Salomone","Salustio","Salvatore","Salvo","Samuele","Sandro","Sansone","Sante","Santo","Sapiente","Sarbello","Saturniano","Saturnino","Saul","Saverio","Savino","Sebastiano","Secondiano","Secondo","Semplicio","Sempronio","Senesio","Senofonte","Serafino","Serapione","Sergio","Servidio","Serviliano","Sesto","Settimio","Settimo","Severiano","Severino","Severo","Sico","Sicuro","Sidonio","Sigfrido","Sigismondo","Silvano","Silverio","Silvestro","Silvio","Simeone","Simone","Sinesio","Sinfronio","Sireno","Siriano","Siricio","Sirio","Siro","Sisto","Soccorso","Socrate","Solocone","Sostene","Sosteneo","Sostrato","Spano","Spartaco","Speranzio","Stanislao","Stefano","Stiliano","Stiriaco","Surano","Sviturno","Taddeo","Taide","Tammaro","Tancredi","Tarcisio","Tarso","Taziano","Tazio","Telchide","Telemaco","Temistocle","Teobaldo","Teodoro","Teodosio","Teodoto","Teogene","Terenzio","Terzo","Tesauro","Tesifonte","Tibaldo","Tiberio","Tiburzio","Ticone","Timoteo","Tirone","Tito","Tiziano","Tizio","Tobia","Tolomeo","Tommaso","Torquato","Tosco","Tranquillo","Tristano","Tulliano","Tullio","Turi","Turibio","Tussio","Ubaldo","Ubertino","Uberto","Ugo","Ugolino","Uguccione","Ulberto","Ulderico","Ulfo","Ulisse","Ulpiano","Ulrico","Ulstano","Ultimo","Umberto","Umile","Uranio","Urbano","Urdino","Uriele","Ursicio","Ursino","Ursmaro","Valente","Valentino","Valeriano","Valerico","Valerio","Valfredo","Valfrido","Valtena","Valter","Varo","Vasco","Vedasto","Velio","Venanzio","Venceslao","Venerando","Venerio","Ventura","Venustiano","Venusto","Verano","Verecondo","Verenzio","Verulo","Vespasiano","Vezio","Vidiano","Vidone","Vilfredo","Viliberto","Vincenzo","Vindonio","Vinebaldo","Vinfrido","Vinicio","Virgilio","Virginio","Virone","Viscardo","Vitale","Vitalico","Vito","Vittore","Vittoriano","Vittorio","Vivaldo","Viviano","Vladimiro","Vodingo","Volfango","Vulmaro","Vulpiano","Walter","Zabedeo","Zaccaria","Zaccheo","Zanobi","Zefiro","Zena","Zenaide","Zenebio","Zeno","Zenobio","Zenone","Zetico","Zoilo","Zosimo","Abbondanza","Acilia","Ada","Adalberta","Adalgisa","Addolorata","Adelaide","Adelasia","Adele","Adelina","Adina","Adria","Adriana","Agape","Agata","Agnese","Agostina","Aida","Alba","Alberta","Albina","Alcina","Alda","Alessandra","Alessia","Alfonsa","Alfreda","Alice","Alida","Alina","Allegra","Alma","Altea","Amalia","Amanda","Amata","Ambra","Amelia","Amina","Anastasia","Anatolia","Ancilla","Andromeda","Angela","Angelica","Anita","Anna","Annabella","Annagrazia","Annamaria","Annunziata","Antea","Antigone","Antonella","Antonia","Apollina","Apollonia","Appia","Arabella","Argelia","Arianna","Armida","Artemisa","Asella","Asia","Assunta","Astrid","Atanasia","Aurelia","Aurora","Ausilia","Ausiliatrice","Ave","Aza","Azelia","Azzurra","Babila","Bambina","Barbara","Bartolomea","Basilia","Bassilla","Batilda","Beata","Beatrice","Belina","Benedetta","Beniamina","Benigna","Benvenuta","Berenice","Bernadetta","Betta","Bianca","Bibiana","Bice","Brigida","Brigitta","Bruna","Brunilde","Calogera","Calpurnia","Camelia","Camilla","Candida","Capitolina","Carina","Carla","Carlotta","Carmela","Carmen","Carola","Carolina","Casilda","Casimira","Cassandra","Cassiopea","Catena","Caterina","Cecilia","Celeste","Celinia","Chiara","Cinzia","Cirilla","Clara","Claudia","Clelia","Clemenzia","Cleo","Cleofe","Cleopatra","Cloe","Clorinda","Cointa","Colomba","Concetta","Consolata","Cora","Cordelia","Corinna","Cornelia","Cosima","Costanza","Crescenzia","Cristiana","Cristina","Crocefissa","Cronida","Cunegonda","Cuzia","Dafne","Dalida","Dalila","Damiana","Daniela","Daria","Deanna","Debora","Degna","Delfina","Delia","Delinda","Delizia","Demetria","Deodata","Desdemona","Desiderata","Devota","Diamante","Diana","Dianora","Diletta","Dina","Diodata","Dionisia","Doda","Dolores","Domenica","Donata","Donatella","Donna","Dora","Dorotea","Druina","Dulina","Ebe","Edda","Edelberga","Editta","Edvige","Egizia","Egle","Elaide","Elda","Elena","Eleonora","Elettra","Eliana","Elide","Elimena","Elisa","Elisabetta","Elisea","Ella","Eloisa","Elsa","Elvia","Elvira","Emanuela","Emilia","Emiliana","Emma","Enimia","Enrica","Eracla","Ermelinda","Ermenegarda","Ermenegilda","Erminia","Ernesta","Ersilia","Esmeralda","Estella","Ester","Esterina","Eufemia","Eufrasia","Eugenia","Eulalia","Euridice","Eusebia","Eutalia","Eva","Evangelina","Evelina","Fabiana","Fabiola","Fatima","Fausta","Federica","Fedora","Felicia","Felicita","Fernanda","Fiammetta","Filippa","Filomena","Fiordaliso","Fiore","Fiorella","Fiorenza","Flaminia","Flavia","Flaviana","Flora","Floriana","Floridia","Florina","Foca","Fortunata","Fosca","Franca","Francesca","Fulvia","Gabriella","Gaia","Galatea","Gaudenzia","Gelsomina","Geltrude","Gemma","Generosa","Genesia","Genoveffa","Germana","Gertrude","Ghita","Giacinta","Giada","Gigliola","Gilda","Giliola","Ginevra","Gioacchina","Gioconda","Gioia","Giorgia","Giovanna","Gisella","Giuditta","Giulia","Giuliana","Giulitta","Giuseppa","Giuseppina","Giusta","Glenda","Gloria","Godeberta","Godiva","Grazia","Graziana","Graziella","Greta","Griselda","Guenda","Guendalina","Gundelinda","Ianira","Ida","Idea","Iginia","Ilaria","Ilda","Ildegarda","Ildegonda","Ileana","Ilenia","Ilia","Ilva","Imelda","Immacolata","Incoronata","Ines","Innocenza","Iolanda","Iole","Iona","Ione","Ionne","Irene","Iride","Iris","Irma","Irmina","Isa","Isabella","Iside","Isidora","Isotta","Italia","Ivetta","Lara","Laura","Lavinia","Lea","Leda","Lelia","Lena","Leonia","Leonilda","Leontina","Letizia","Lia","Liana","Liberata","Liboria","Licia","Lidania","Lidia","Liliana","Linda","Lisa","Livia","Liviana","Lodovica","Loredana","Lorella","Lorena","Lorenza","Loretta","Loriana","Luana","Luce","Lucia","Luciana","Lucilla","Lucrezia","Ludovica","Luigia","Luisa","Luminosa","Luna","Macaria","Maddalena","Mafalda","Magda","Maida","Manuela","Mara","Marana","Marcella","Mareta","Margherita","Maria","Marianna","Marica","Mariella","Marilena","Marina","Marinella","Marinetta","Marisa","Marita","Marta","Martina","Maruta","Marzia","Massima","Matilde","Maura","Melania","Melissa","Melitina","Menodora","Mercede","Messalina","Mia","Michela","Milena","Mimma","Mina","Minerva","Minervina","Miranda","Mirella","Miriam","Mirta","Moira","Monica","Morena","Morgana","Nadia","Natalia","Natalina","Neiva","Nerea","Nicla","Nicoletta","Nilde","Nina","Ninfa","Nives","Noemi","Norina","Norma","Novella","Nuccia","Nunziata","Odetta","Odilia","Ofelia","Olga","Olimpia","Olinda","Olivia","Oliviera","Ombretta","Ondina","Onesta","Onorata","Onorina","Orchidea","Oriana","Orietta","Ornella","Orsola","Orsolina","Ortensia","Osanna","Otilia","Ottilia","Palladia","Palmazio","Palmira","Pamela","Paola","Patrizia","Pelagia","Penelope","Perla","Petronilla","Pia","Piera","Placida","Polissena","Porzia","Prisca","Priscilla","Proserpina","Prospera","Prudenzia","Quartilla","Quieta","Quiteria","Rachele","Raffaella","Rainelda","Rebecca","Regina","Renata","Riccarda","Rina","Rita","Roberta","Romana","Romilda","Romina","Romola","Rosa","Rosalia","Rosalinda","Rosamunda","Rosanna","Rosita","Rosmunda","Rossana","Rossella","Rufina","Saba","Sabina","Sabrina","Samanta","Samona","Sandra","Santina","Sara","Savina","Scolastica","Sebastiana","Seconda","Secondina","Sefora","Selene","Selvaggia","Semiramide","Serafina","Serena","Severa","Sibilla","Sidonia","Silvana","Silvia","Simona","Simonetta","Siria","Smeralda","Soave","Sofia","Sofronia","Solange","Sonia","Speranza","Stefania","Stella","Susanna","Sveva","Tabita","Tamara","Tarquinia","Tarsilla","Taziana","Tea","Tecla","Telica","Teodata","Teodolinda","Teodora","Teresa","Teudosia","Tina","Tiziana","Tosca","Trasea","Tullia","Ugolina","Ulfa","Uliva","Unna","Vala","Valentina","Valeria","Valeriana","Vanda","Vanessa","Vanna","Venera","Veneranda","Venere","Venusta","Vera","Verdiana","Verena","Veriana","Veridiana","Veronica","Viliana","Vilma","Vincenza","Viola","Violante","Virginia","Vissia","Vittoria","Viviana","Wanda","Zabina","Zaira","Zama","Zanita","Zarina","Zelinda","Zenobia","Zita","Zoe","Zosima"]})),QX=c((()=>{Iy=["Abate","Abbate","Abbondanza","Abbrescia","Accardi","Accardo","Accurso","Aceto","Acquadro","Acquaviva","Acquistapace","Adami","Adamo","Addari","Addis","Adragna","Affinito","Agnello","Agostinelli","Agostini","Agresta","Aiello","Alaimo","Albanese","Albano","Alberti","Alcamo","Alessandrini","Alessi","Alfano","Alfieri","Alivernini","Allegretti","Aloi","Altieri","Amabile","Amadori","Amato","Ambrosini","Ambrosino","Ambrosio","Amendola","Amerio","Amici","Amico","Ammoscato","Amoroso","Amoruso","Ancona","Andreoli","Andrisani","Anelli","Angeletti","Angeli","Angelini","Angeloni","Angelucci","Annunziata","Anselmi","Anselmo","Antenucci","Antezza","Antonacci","Antonelli","Antonini","Antonucci","Anzalone","Apicella","Aprile","Aquino","Aramini","Arcangeli","Arena","Argenio","Argento","Argiolas","Artioli","Asaro","Ascione","Astolfi","Atzeni","Atzori","Avallone","Avola","Azara","Babini","Bacci","Baggio","Baiocco","Balboni","Baldacci","Baldassarre","Baldi","Baldini","Baldo","Balducci","Balestra","Balistreri","Ballarin","Balsamo","Balzano","Bandini","Bani","Baraldi","Barbagallo","Barbarossa","Barbarulo","Barbato","Barbera","Barberi","Barberis","Barbero","Barbieri","Barbiero","Barile","Barillà","Barletta","Barone","Baroni","Barra","Barreca","Barresi","Barretta","Barsotti","Bartoli","Bartolini","Bartolomei","Bartolucci","Basile","Bassani","Bassi","Basso","Battaglia","Battista","Battisti","Battistini","Bedini","Belli","Bellini","Bellomo","Bellotti","Bellucci","Belmonte","Belotti","Beltrame","Beltrami","Belvisi","Benatti","Benedetti","Benedetto","Benetti","Benigni","Benini","Bennardo","Bentivoglio","Benvenuti","Benvenuto","Berardi","Beretta","Bergamasco","Bergamini","Bernabei","Bernardi","Bernardini","Bernasconi","Bertaccini","Bertani","Bertelli","Berti","Bertini","Berto","Bertolini","Bertolussi","Beso","Betti","Bevilacqua","Biagetti","Biagi","Biagini","Bianc","Biancheri","Bianchetti","Bianchi","Bianchini","Bianco","Biasci","Biccari","Biggi","Bindi","Bini","Bionaz","Biondi","Bisconti","Bisio","Bizzarri","Blanc","Blasi","Bocchi","Boccia","Bodini","Boffa","Boi","Bologna","Bonanni","Bonanno","Bonato","Bonazzi","Bonelli","Bonetti","Bongiorno","Bongiovanni","Boni","Bonifazi","Bonini","Bono","Bonomi","Bonomo","Bordoni","Borelli","Borghi","Borgia","Borrelli","Bortolin","Bortoluzzi","Bortot","Boscaino","Boschetti","Boschi","Bosco","Boscolo","Bosi","Botta","Bove","Bovolenta","Bozzi","Bozzo","Braia","Brambilla","Branca","Brandi","Bresciani","Bressan","Briano","Brigandì","Brignone","Brizzi","Brogi","Brumat","Brunelli","Brunetti","Bruni","Bruno","Bruschi","Bruzzone","Buccheri","Bucci","Bulgarelli","Buongiorno","Buonomo","Burgio","Butera","Buzzi","Cabras","Caccamo","Caccavo","Cacciapuoti","Cacciatore","Cadoni","Caforio","Caggiano","Caiazza","Caiazzo","Calabrese","Calabria","Calabrò","Calafiore","Calandro","Calì","Califano","Callegari","Calligaris","Calò","Camilli","Cammarata","Cammisa","Campagna","Campana","Campanella","Campanile","Campanini","Campisi","Campo","Campoli","Campus","Canale","Cancelliere","Cancellieri","Candela","Candido","Canepa","Cangiano","Canino","Cannas","Cannata","Cannella","Cannone","Canova","Cantagallo","Cantoni","Canu","Capannolo","Capasso","Capecchi","Capelli","Capitani","Capizzi","Capoccia","Capocotta","Capogna","Capone","Caporaso","Cappai","Cappelletti","Cappelli","Cappello","Cappiello","Capponi","Capraro","Capriotti","Capuano","Caputo","Cara","Caracciolo","Caradonna","Carbon","Carbone","Carboni","Cardella","Cardia","Cardinale","Cardinali","Cardini","Cardone","Carè","Careddu","Carella","Caretti","Caricari","Carini","Carletti","Carli","Carlini","Carlino","Carloni","Carlotti","Carlucci","Carminati","Carnevale","Carnovale","Carollo","Carosi","Carrara","Carraro","Carrieri","Carriero","Carrozza","Carrozzo","Carrus","Carta","Caruso","Carvelli","Casadei","Casadio","Casagrande","Casale","Casali","Casano","Casavecchia","Cascio","Cascone","Casella","Caselli","Caserta","Casini","Casolaro","Cassano","Castagna","Castaldi","Castaldo","Castellana","Castellani","Castellano","Castelli","Castiello","Castiglioni","Casu","Casula","Catalano","Cataldi","Cataldo","Catania","Catanzaro","Catarsi","Catellani","Caterino","Cattaneo","Cattani","Cavaliere","Cavalieri","Cavallari","Cavallaro","Cavalli","Cavallini","Cavallo","Cavriani","Ceccarelli","Ceccarini","Cecchetti","Cecchi","Cecchini","Cecere","Celano","Celentano","Celeste","Celi","Celli","Cellini","Cenni","Centofanti","Cerise","Cerrani","Cerrato","Cerri","Cerullo","Cerutti","Cesaretti","Cherchi","Cherubini","Chessa","Chessari","Chiacchio","Chianese","Chiaravalle","Chiavacci","Chilà","Chimenti","Chiodi","Chirico","Ciaccio","Ciacio","Ciampa","Cianci","Ciani","Ciavarella","Cicala","Cicatiello","Ciccarelli","Cicchetti","Ciccone","Cifarelli","Cilli","Cimmino","Cinelli","Cingolani","Cini","Cioffi","Cioni","Ciotola","Ciotti","Cipolla","Cipollaro","Cipolletta","Cipriani","Cipriano","Cirelli","Cirillo","Citro","Cittadino","Ciuffetelli","Ciuffreda","Ciulla","Clemente","Coccia","Cocco","Cola","Colangelo","Colantuono","Colella","Coletta","Colombo","Colonna","Colucci","Comito","Como","Concas","Conforti","Congiu","Coniglio","Consiglio","Cont","Conte","Conti","Contini","Contu","Coppola","Corazza","Cordioli","Coretti","Corona","Corradi","Corradini","Corrado","Corrao","Correale","Corridori","Corsi","Corsini","Corso","Cortese","Cortesi","Corti","Cortinovis","Cosentino","Coslovich","Cossu","Costa","Costantin","Costantini","Costantino","Costanza","Costanzo","Cottone","Coviello","Cozzani","Cozzi","Cozzolino","Crea","Cremona","Cremonesi","Crepaldi","Crescenzi","Crespi","Crevatin","Crimi","Crippa","Crisafulli","Criscenti","Crisci","Criscione","Crispino","Cristiano","Cristofaro","Critelli","Croce","Cruciani","Cruciata","Cucchiara","Cucciniello","Cuomo","Curci","Curcio","Curreli","Cusimano","Cusumano","Cuzzocrea","D'Agostino","D'Aleo","D'Alessandro","D'Alessio","D'Amato","D'Ambrosio","D'Amico","D'Amore","D'Andrea","D'Angeli","D'Angelo","D'Anna","D'Argenio","D'Avino","D'Elia","D'Errico","D'Incà","D'Ippolito","D'Onofrio","D'Orazio","D'Urso","Da Rold","Daidone","Dal Farra","Dalmasso","Damiani","Damiano","Damico","Daniele","Dante","Dattilo","Davoli","De Angelis","De Biase","De Blasi","De Bona","De Bonis","De Candido","De Carlo","De Carolis","De Chiara","De Cicco","De Col","De Cristofaro","De Falco","De Fazio","De Feo","De Filippis","De Filippo","De Giorgi","De Giorgio","De Gregorio","De Lorenzo","De Luca","De Lucia","De Maio","De Marco","De Maria","De Martino","De Masi","De Meo","De Napoli","De Palma","De Rosa","De Rossi","De Salvo","De Sanctis","De Santis","De Simone","De Stefano","De Vita","De Vito","Degano","Degrassi","Deiana","Del Bianco","Del Gaudio","Del Monte","Del Prete","Del Vecchio","Delfino","Dell'Amico","Delle Monache","Delogu","Demontis","Demurtas","Denaro","Denti","Deriu","Desiderio","Desogus","Destro","Di Bari","Di Battista","Di Bella","Di Benedetto","Di Biase","Di Blasi","Di Caccamo","Di Carlo","Di Cesare","Di Ciocco","Di Costanzo","Di Dio","Di Domenico","Di Donato","Di Fazio","Di Felice","Di Fiore","Di Francesco","Di Franco","Di Gaetano","Di Gennaro","Di Giacomo","Di Giorgio","Di Giovanni","Di Girolamo","Di Giuseppe","Di Gregorio","Di Grezia","Di Iorio","Di Lascio","Di Lecce","Di Liberto","Di Lorenzo","Di Luca","Di Maggio","Di Maio","Di Marco","Di Maria","Di Marino","Di Maro","Di Martino","Di Marzio","Di Matteo","Di Mauro","Di Michele","Di Nardo","Di Natale","Di Palma","Di Paola","Di Paolo","Di Pasquale","Di Pede","Di Pietro","Di Rocco","Di Salvo","Di Santo","Di Sarno","Di Somma","Di Stefano","Di Tommaso","Di Tullio","Di Vita","Diamanti","Diana","Dini","Dionisi","Distefano","Dodaro","Dolce","Dolci","Dominici","Donati","Donato","Donda","Doria","Doro","Doronzo","Drago","Dragone","Dragoni","Duca","Ducci","Durante","Dutto","Egger","Elia","Eligibile","Epifani","Ercoli","Ermini","Errante","Errera","Errichiello","Errico","Esposito","Evangelista","Evangelisti","Evola","Fabbri","Fabbricatore","Fabbro","Fabiani","Fabiano","Fabris","Fabrizi","Fabrizio","Fadda","Falbo","Falchi","Falcioni","Falco","Falcone","Falzone","Fanara","Fancello","Fanelli","Fantini","Fantozzi","Faraci","Faraone","Farella","Farin","Farina","Farris","Fasano","Fasoli","Fava","Favara","Favaro","Favero","Favre","Fazio","Fedele","Federici","Federico","Feleppa","Felici","Feliziani","Femina","Ferilli","Ferluga","Ferracuti","Ferraiuolo","Ferrando","Ferrante","Ferranti","Ferrara","Ferrari","Ferrarini","Ferrario","Ferraris","Ferraro","Ferrarotti","Ferreri","Ferrero","Ferretti","Ferri","Ferrigno","Ferrini","Ferro","Ferroni","Festa","Festuccia","Fichera","Fierro","Filice","Filippi","Filippini","Filipponi","Fini","Finocchiaro","Finotti","Fior","Fioravanti","Fiore","Fiorelli","Fiorentini","Fiorentino","Fiorenza","Fioretti","Fiori","Fiorillo","Fiorini","Fiorucci","Fischetti","Flacco","Flore","Floridia","Florio","Floris","Foglia","Fois","Fonda","Fontana","Fonti","Forconi","Forgione","Forlani","Formica","Fornara","Forte","Fortugno","Fortunato","Foschi","Foti","Francesca","Franceschi","Franceschini","Francesconi","Francese","Franchi","Franchini","Franco","Franzè","Franzoni","Frasca","Fratello","Fratti","Frau","Frezza","Frigerio","Frigo","Fucci","Fumagalli","Fumarola","Fuoco","Furlan","Furno","Fusaro","Fusco","Gabriele","Gabrielli","Gaddini","Gagliano","Gagliardi","Galante","Galasso","Galati","Galeazzi","Galli","Gallo","Galluzzo","Gamba","Gamberini","Gambino","Gamper","Gandolfo","Gangemi","Garau","Garavaglia","Gargiulo","Garifo","Garofalo","Gaspari","Gasparini","Gasser","Gatta","Gatti","Gatto","Gaudiano","Gazzola","Gemma","Genchi","Genna","Gennaro","Genovese","Gentile","Gentili","Gerace","Geraci","Germani","Gervasi","Ghilardi","Giacalone","Giaccio","Giachi","Giacomelli","Giampaoli","Giampaolo","Giannelli","Giannetti","Gianni","Giannini","Giannone","Giannotti","Gianotti","Giansante","Giardina","Giardini","Gigli","Giglio","Gigliotti","Gioacchini","Gioia","Giordani","Giordano","Giorgetti","Giorgi","Giorgio","Giovannelli","Giovannetti","Giovannini","Giovinazzo","Girardi","Giraudo","Girone","Giudice","Giuffrida","Giugliano","Giuliani","Giuliano","Giunta","Giusti","Giustra","Gobbi","Golinelli","Gori","Govoni","Granà","Granata","Granato","Grande","Grandi","Grange","Grassi","Grasso","Gravina","Graziani","Graziano","Greco","Gregori","Greppi","Grieco","Grilli","Grillo","Grimaldi","Grossi","Grosso","Gruber","Gruppuso","Gualtieri","Guarino","Guarneri","Guarnieri","Guastella","Guastone","Guerra","Guerrieri","Guerriero","Guerrini","Guglielmi","Guida","Guidetti","Guidi","Guido","Guidotti","Gulino","Gullì","Gurrieri","Gusmeroli","Hofer","Huber","Iacolare","Iacono","Iacovino","Iacovone","Iandolo","Iannaccone","Iannello","Ianni","Iannone","Iannucci","Iaria","Iazzetta","Ierardi","Iezzi","Impellizzeri","Improta","Indelicato","Ingrassia","Ingrosso","Innocenti","Inzerillo","Iodice","Iorio","Iotti","Iovino","Ippoliti","Ippolito","Iuliano","Izzi","Izzo","Kofler","La Barbera","La Malfa","La Manna","La Monaca","La Monica","La Porta","La Rocca","La Rosa","La Sala","La Torre","Labate","Laezza","Laganà","Lai","Lamacchia","Lamberti","Lana","Landi","Lanteri","Lanza","Lari","Latini","Latorre","Lattanzi","Lauri","Lavecchia","Lazzari","Lazzarini","Lazzaro","Leale","Lecca","Ledda","Leggio","Lelli","Lentini","Lenzi","Leo","Leonardi","Leoncini","Leone","Leonetti","Leoni","Leopardi","Lepore","Lezzi","Liberati","Librizzi","Licata","Liccardo","Licciardello","Licitra","Ligorio","Liguori","Liotta","Lipari","Lippi","Lippolis","Lisi","Litterio","Liuzzi","Liverani","Lo Bianco","Lo Cascio","Lo Giudice","Lo Iacono","Lo Piccolo","Lo Pinto","Lo Presti","Locatelli","Locci","Loddo","Lodi","Loffredo","Loi","Loiacono","Lolli","Lombardi","Lombardini","Lombardo","Lonardi","Longhi","Longo","Longobardi","Lopez","Lorenzini","Loreti","Loreto","Lori","Lorusso","Lotito","Lotti","Lovato","Luca","Lucarelli","Lucarini","Lucchese","Lucchesi","Luchetti","Luchini","Lucia","Luciani","Luciano","Lucidi","Luconi","Lugli","Luise","Luongo","Lupi","Lupica","Lupo","Luppi","Luppino","Luzi","Luzzi","Macaluso","Macchi","Macchia","Macrì","Madonna","Maffei","Maggi","Maggiani","Maggio","Maggiore","Magi","Magliocco","Magnani","Magno","Maiello","Mainardi","Maio","Maione","Mair","Malagoli","Malaspina","Malatesta","Malavasi","Malerba","Malizia","Maltese","Manca","Mancinelli","Mancini","Mancino","Mancuso","Manetti","Manfredi","Mangano","Mangione","Manica","Manicone","Maniscalco","Manna","Mannino","Manno","Manti","Mantovani","Manzella","Manzi","Manzo","Maragno","Marangi","Marangon","Marangoni","Marani","Marano","Marcelli","Marcello","Marchesan","Marchese","Marchesi","Marchesini","Marchetti","Marchetto","Marchi","Marchini","Marciano","Marcianò","Marcon","Marconi","Marcovecchio","Marcucci","Marega","Marelli","Maresca","Margiotta","Mari","Marian","Mariani","Mariano","Marinelli","Marini","Marino","Marinucci","Mariotti","Mariucci","Marone","Marongiu","Marotta","Marra","Marras","Marrazzo","Marrone","Marsella","Marsili","Martelli","Martellucci","Martina","Martinelli","Martines","Martini","Martino","Martorana","Martucci","Marzano","Marzi","Marziali","Marzocchi","Masala","Mascia","Masciandaro","Mascolo","Masi","Masia","Masiero","Massa","Massari","Massaro","Massimi","Mastrogiacomo","Mastroianni","Mastronardi","Mastropietro","Masucci","Matarazzo","Matera","Matranga","Matta","Mattei","Matteucci","Mattia","Mattioli","Maugeri","Mauri","Maurizi","Mauro","Mautone","Mazza","Mazzanti","Mazzarella","Mazzaro","Mazzei","Mazzeo","Mazzi","Mazzini","Mazzocchi","Mazzola","Mazzoleno","Mazzone","Mazzoni","Mazzotta","Mazzotti","Mecca","Medeot","Medici","Medugno","Megna","Melandri","Mele","Meli","Melillo","Melis","Meloni","Memoli","Mencarelli","Menconi","Menegatti","Mengoni","Menna","Menozzi","Meo","Mercuri","Mercurio","Mereu","Merli","Merlo","Merola","Messana","Messina","Micco","Miccoli","Miceli","Micheletti","Michelucci","Micillo","Migliaccio","Miglio","Migliore","Mignogna","Milan","Milani","Milano","Milazzo","Milella","Militello","Minelli","Mingarelli","Minniti","Miotto","Mirabella","Mistretta","Moccia","Modica","Moffa","Molinari","Molinaro","Mollica","Molteni","Monaci","Monaco","Monni","Montagna","Montagner","Montalbano","Montalto","Montanari","Montanaro","Montefusco","Monteleone","Montemurro","Monterosso","Montesano","Monti","Monticelli","Mora","Morabito","Morandi","Moras","Mordenti","Morelli","Morello","Moretti","Moretto","Morgante","Mori","Moriconi","Morini","Moro","Moroni","Morra","Morreale","Morri","Morrone","Mosca","Moscato","Moser","Mosti","Motisi","Motta","Mottola","Mulas","Mulè","Munaro","Mura","Muratore","Murgia","Murolo","Murru","Murtas","Musella","Musso","Musumeci","Nanni","Napoletano","Napoli","Napolitano","Nappi","Narcisi","Narciso","Nardi","Natale","Natali","Nava","Navarra","Nazzaro","Negri","Neri","Nesti","Nicastro","Niccolai","Nicoletti","Nicolini","Nicolò","Nicolosi","Nicosia","Nicotra","Nieddu","Nigro","Nobile","Nobili","Nocentini","Nocera","Nocerino","Nota","Notaro","Noto","Novelli","Novello","Nucci","Nucera","Nuzzo","Occhipinti","Oggiano","Oliva","Oliveri","Olivi","Olivieri","Oliviero","Olla","Orefice","Orlandi","Orlando","Orrù","Orsini","Ortenzi","Ortolani","Ostuni","Ottaviani","Ottaviano","Ottonello","Pace","Paci","Pacifici","Pacifico","Pacini","Padovan","Padula","Paganelli","Pagani","Pagano","Pagliai","Pagliuca","Pala","Paladini","Palano","Palazzi","Palazzo","Palazzolo","Palermo","Palla","Palladino","Pallotta","Palma","Palmeri","Palmieri","Palmisani","Palmisano","Palombi","Palombo","Palumbo","Panaro","Pandolfi","Panetta","Pani","Panico","Pantano","Panza","Panzeri","Paola","Paolella","Paoletti","Paoli","Paolicelli","Paolillo","Paolini","Paolino","Paolucci","Paone","Paonessa","Papa","Papaleo","Papapietro","Papini","Pappalardo","Paradiso","Pardini","Parente","Pariggiano","Paris","Parise","Parisi","Parodi","Parrinello","Parrino","Pascale","Pascali","Pascarella","Pascucci","Pasini","Pasqua","Pasquali","Pasquini","Passarelli","Passeri","Passero","Passuello","Pastore","Pastorelli","Pastorino","Patanè","Patriarca","Patrone","Patruno","Patti","Pau","Pavan","Pavani","Pavone","Peaquin","Pece","Pecora","Pecoraro","Pecorella","Pedone","Pedrazzini","Pedroni","Pedrotti","Pellecchia","Pellegrini","Pellegrino","Pellicano","Pellicanò","Pellitteri","Peluso","Penna","Pennestrì","Penzo","Pepe","Perego","Perilli","Perin","Perini","Perna","Peroni","Perotti","Perra","Perri","Perrini","Perrone","Perrotta","Perugini","Peruzzi","Pesaresi","Pesce","Pession","Petito","Petralia","Petrarca","Petrella","Petrelli","Petrini","Petrone","Petronio","Petrucci","Pezzella","Pezzi","Piacentini","Piana","Pianese","Pianigiani","Piazza","Piazzolla","Pibiri","Pica","Picariello","Picchi","Piccinini","Piccione","Picco","Piccoli","Piccolo","Pichler","Pieri","Pierini","Pierro","Piga","Pignatelli","Pilato","Pili","Pillitteri","Pinardi","Pini","Pinna","Pinto","Pintus","Pipitone","Piras","Pircher","Piredda","Pirone","Pirrello","Pirrone","Pisani","Pisano","Pischedda","Pisciotta","Piscitelli","Piscopo","Pisu","Pittalis","Pitzalis","Piva","Pivetta","Pizzi","Pizzimenti","Pizzitola","Pizzo","Pizzuti","Platania","Poggi","Poggio","Polese","Poletti","Poli","Polidori","Polimeno","Politi","Polito","Polizzi","Pollina","Polverino","Pompei","Pompili","Pompilio","Ponti","Porcari","Porcu","Postiglione","Potenza","Pozzi","Pozzo","Pratesi","Praticò","Prato","Prencipe","Prete","Preziosi","Principato","Prisco","Privitera","Procopio","Proietti","Provenzano","Puca","Pucci","Puccio","Puddu","Puggioni","Pugliese","Pugliesi","Puglisi","Puleo","Putzolu","Quaglia","Quaranta","Quarta","Quinto","Raffa","Rago","Ragone","Ragusa","Raimondi","Raimondo","Rallo","Rambaldi","Ramella","Rampazzo","Randazzo","Raneri","Ranieri","Raniolo","Ranucci","Rapisarda","Rapuano","Ratti","Rauso","Ravaioli","Re","Rea","Reale","Recchia","Redaelli","Reina","Renda","Renna","Renzi","Repetto","Restivo","Riccardi","Ricci","Ricciardi","Riccio","Riccobono","Ridolfi","Riggi","Riggio","Righetti","Righi","Rigoni","Rinaldi","Riolo","Riparbelli","Riva","Rizza","Rizzi","Rizzo","Roberti","Rocca","Rocchi","Rocco","Rodigari","Rogolino","Rollo","Romagnoli","Romanelli","Romani","Romaniello","Romanini","Romano","Romeo","Rondinone","Rondoni","Rosa","Rosati","Rosi","Ross","Rosselli","Rosset","Rossetti","Rossi","Rossini","Rosso","Rota","Rotolo","Rotondo","Rotundo","Ruberto","Rubino","Rucco","Ruggeri","Ruggieri","Ruggiero","Ruotolo","Rusciano","Russo","Saba","Sabatini","Sabatino","Sabato","Sabbatini","Sabia","Sabino","Sacchet","Sacchetti","Sacchi","Sacco","Saccone","Saia","Sala","Saladino","Salamone","Salatiello","Salemi","Salemme","Salerno","Salierno","Salis","Salomone","Salvadori","Salvati","Salvatore","Salvatori","Salvi","Salvucci","Salzano","Sammartano","Sammartino","Sanfilippo","Sanna","Sannino","Sansone","Santamaria","Santangelo","Santarelli","Santarossa","Santarsia","Santarsiero","Santi","Santilli","Santinelli","Santini","Santo","Santoni","Santori","Santoro","Santucci","Sapienza","Saponaro","Saporito","Saracino","Sardella","Sardina","Sarnataro","Sarti","Sartor","Sartori","Sassano","Sassi","Sasso","Satta","Savini","Savoca","Savoia","Sbrana","Scaglione","Scala","Scalia","Scalise","Scalzo","Scano","Scanu","Scarano","Scardino","Scarpa","Scarpellini","Scherini","Schettino","Schiavi","Schiavo","Schiavon","Schiavone","Schifano","Schillaci","Schirru","Sciacca","Scocco","Scognamiglio","Scopece","Scorza","Scotti","Scrofani","Scuderi","Sebastiani","Secchi","Secci","Sechi","Semeraro","Semprini","Senatore","Sepe","Serafini","Serafino","Serena","Sergi","Serpa","Serr","Serra","Sessa","Sestito","Severi","Severino","Sevi","Sforza","Siciliano","Signorelli","Signorile","Signorini","Siino","Silenzi","Silvestri","Silvestrini","Silvestro","Simeoli","Simeone","Simeoni","Simeti","Simoncelli","Simone","Simonetti","Simoni","Simonini","Simula","Sini","Sinopoli","Siracusa","Siragusa","Siri","Soccorsi","Sodano","Soldati","Solinas","Sorbello","Sorce","Soro","Sorrentino","Sottile","Spada","Spadafora","Spadaro","Spadoni","Spagnolo","Spagnuolo","Spano","Spanò","Spanu","Sparacino","Spataro","Speranza","Spiga","Spina","Spinelli","Spizzirri","Stabile","Staffieri","Stanzione","Stefani","Stella","Stigliano","Storti","Strano","Sucameli","Sucera","Surace","Suriano","Tacconi","Taddei","Tagliabue","Tagliaferri","Talarico","Tallarico","Tallone","Tamburini","Tammaro","Tanzi","Taormina","Tarantino","Tarquini","Tartamella","Tassi","Tassinari","Tasso","Tassone","Tataranni","Tavani","Tedde","Tedeschi","Tedesco","Telesca","Terenzi","Teresi","Terlizzi","Termine","Terzi","Terzo","Tesi","Testa","Tiano","Tiberti","Tilotta","Tiozzo","Tirelli","Tirri","Todaro","Tofani","Toldo","Tolomeo","Tolu","Tomaselli","Tomasello","Tomasi","Tomassoni","Tomei","Tommasi","Tonelli","Tonini","Torchia","Torchio","Tornatore","Torre","Torresi","Torri","Torrisi","Tortora","Tortorici","Toscano","Tosi","Totaro","Toti","Toto","Traini","Tralli","Trapani","Travaglini","Traverso","Tretola","Trevisan","Triolo","Tripodi","Troisi","Trombetta","Trovato","Tucci","Tuccillo","Tufano","Tufo","Tumbarello","Tumino","Turchi","Turco","Ugolini","Urbano","Urso","Usai","Vacca","Vaccari","Vaccaro","Vailati","Valente","Valenti","Valentini","Valentino","Valenza","Valeri","Valle","Valletta","Valli","Vallone","Valsecchi","Vanni","Vannini","Varriale","Vascotto","Vassallo","Vecchi","Vella","Venezia","Ventimiglia","Ventura","Venturelli","Venturi","Venturini","Vercesi","Verde","Verme","Veronese","Vezzoli","Viale","Vianello","Vicari","Vichi","Vicinanza","Vicini","Vierin","Villa","Villani","Villari","Vincenzi","Vinci","Viola","Violante","Violi","Virgilio","Visani","Viscò","Visconti","Visentin","Visintin","Vita","Vitale","Vitali","Viti","Vitiello","Vittori","Viviani","Vizziello","Volpe","Volpi","Vuillermoz","Zaccaria","Zaccaro","Zagaria","Zago","Zambon","Zamboni","Zambuto","Zampieri","Zanatta","Zanella","Zanelli","Zanetta","Zanetti","Zani","Zanon","Zanotti","Zappacosta","Zappalà","Zappia","Zedda","Zeni","Zennaro","Zingaretti","Zito","Zollo","Zordan","Zotti","Zucca","Zuliani","Zullo","Zumbo","Zunino"]})),YX=c((()=>{Vy=["Abaco","Abbondanzio","Abbondio","Abdone","Abelardo","Abele","Abenzio","Abibo","Abramio","Abramo","Acacio","Acario","Accursio","Achille","Acilio","Aciscolo","Acrisio","Adalardo","Adalberto","Adalfredo","Adalgiso","Adalrico","Adamo","Addo","Adelardo","Adelberto","Adelchi","Adelfo","Adelgardo","Adelmo","Adeodato","Adolfo","Adone","Adriano","Adrione","Afro","Agabio","Agamennone","Agapito","Agazio","Agenore","Agesilao","Agostino","Agrippa","Aiace","Aidano","Aimone","Aladino","Alamanno","Alano","Alarico","Albano","Alberico","Alberto","Albino","Alboino","Albrico","Alceo","Alceste","Alcibiade","Alcide","Alcino","Aldo","Aldobrando","Aleandro","Aleardo","Aleramo","Alessandro","Alessio","Alfio","Alfonso","Alfredo","Algiso","Alighiero","Almerigo","Almiro","Aloisio","Alvaro","Alviero","Alvise","Amabile","Amadeo","Amando","Amanzio","Amaranto","Amato","Amatore","Amauri","Ambrogio","Ambrosiano","Amedeo","Amelio","Amerigo","Amico","Amilcare","Amintore","Amleto","Amone","Amore","Amos","Ampelio","Anacleto","Andrea","Angelo","Aniceto","Aniello","Annibale","Ansaldo","Anselmo","Ansovino","Antelmo","Antero","Antimo","Antino","Antioco","Antonello","Antonio","Apollinare","Apollo","Apuleio","Aquilino","Araldo","Aratone","Arcadio","Archimede","Archippo","Arcibaldo","Ardito","Arduino","Aresio","Argimiro","Argo","Arialdo","Ariberto","Ariele","Ariosto","Aris","Aristarco","Aristeo","Aristide","Aristione","Aristo","Aristofane","Aristotele","Armando","Arminio","Arnaldo","Aronne","Arrigo","Arturo","Ascanio","Asdrubale","Asimodeo","Assunto","Asterio","Astianatte","Ataleo","Atanasio","Athos","Attila","Attilano","Attilio","Auberto","Audace","Augusto","Aureliano","Aurelio","Auro","Ausilio","Averardo","Azeglio","Azelio","Bacco","Baldassarre","Balderico","Baldo","Baldomero","Baldovino","Barbarigo","Bardo","Bardomiano","Barnaba","Barsaba","Barsimeo","Bartolo","Bartolomeo","Basileo","Basilio","Bassiano","Bastiano","Battista","Beato","Bellino","Beltramo","Benedetto","Beniamino","Benigno","Benito","Benvenuto","Berardo","Berengario","Bernardo","Beronico","Bertoldo","Bertolfo","Biagio","Bibiano","Bindo","Bino","Birino","Bonagiunta","Bonaldo","Bonaventura","Bonavita","Bonifacio","Bonito","Boris","Bortolo","Brancaleone","Brando","Bruno","Bruto","Caino","Caio","Calanico","Calcedonio","Callisto","Calogero","Camillo","Candido","Cantidio","Canziano","Carlo","Carmelo","Carmine","Caronte","Carponio","Casimiro","Cassiano","Cassio","Casto","Cataldo","Catullo","Cecco","Cecilio","Celso","Cesare","Cesario","Cherubino","Chiaffredo","Cino","Cipriano","Cirano","Ciriaco","Cirillo","Cirino","Ciro","Clarenzio","Claudio","Cleandro","Clemente","Cleonico","Climaco","Clinio","Clodomiro","Clodoveo","Colmanno","Colmazio","Colombano","Colombo","Concetto","Concordio","Corbiniano","Coreno","Coriolano","Cornelio","Coronato","Corrado","Cosimo","Cosma","Costante","Costantino","Costanzo","Cremenzio","Crescente","Crescenzio","Crespignano","Crispino","Cristaldo","Cristiano","Cristoforo","Crocefisso","Cuniberto","Cupido","Daciano","Dacio","Dagoberto","Dalmazio","Damaso","Damiano","Damocle","Daniele","Danilo","Danio","Dante","Dario","Davide","Davino","Decimo","Delfino","Demetrio","Democrito","Demostene","Deodato","Desiderato","Desiderio","Didimo","Diego","Dino","Diocleziano","Diodoro","Diogene","Diomede","Dione","Dionigi","Dionisio","Divo","Dodato","Domenico","Domezio","Domiziano","Donatello","Donato","Doriano","Doroteo","Duccio","Duilio","Durante","Eberardo","Ecclesio","Edgardo","Edilberto","Edmondo","Edoardo","Efisio","Efrem","Egeo","Egidio","Eginardo","Egisto","Eleuterio","Elia","Eliano","Elifio","Eligio","Elio","Eliodoro","Eliseo","Elita","Elmo","Elogio","Elpidio","Elvezio","Elvino","Emanuele","Emidio","Emiliano","Emilio","Emmerico","Empirio","Endrigo","Enea","Enecone","Ennio","Enrico","Enzo","Eraclide","Eraldo","Erardo","Erasmo","Erberto","Ercolano","Ercole","Erenia","Eriberto","Erico","Ermanno","Ermenegildo","Ermes","Ermete","Ermilo","Erminio","Ernesto","Eros","Esaù","Esuperio","Eterie","Ettore","Euclide","Eufebio","Eufemio","Eufronio","Eugenio","Eusebio","Euseo","Eustorgio","Eustosio","Eutalio","Evaldo","Evandro","Evaristo","Evasio","Everardo","Evidio","Evodio","Evremondo","Ezechiele","Ezio","Fabiano","Fabio","Fabrizio","Famiano","Fausto","Fazio","Fedele","Federico","Fedro","Felice","Feliciano","Ferdinando","Fermiano","Fermo","Fernando","Ferruccio","Festo","Fidenziano","Fidenzio","Filiberto","Filippo","Filomeno","Fiorenziano","Fiorenzo","Flaviano","Flavio","Fleano","Floriano","Folco","Fortunato","Fosco","Francesco","Franco","Frido","Frontiniano","Fulberto","Fulgenzio","Fulvio","Furio","Furseo","Fuscolo","Gabino","Gabriele","Gaetano","Gaglioffo","Gaio","Galdino","Galeazzo","Galileo","Gallicano","Gandolfo","Garimberto","Gaspare","Gastone","Gaudenzio","Gaudino","Gautiero","Gavino","Gedeone","Geminiano","Generoso","Genesio","Gennaro","Gentile","Genziano","Gerardo","Gerasimo","Geremia","Gerino","Germano","Gerolamo","Geronimo","Geronzio","Gervasio","Gesualdo","Gherardo","Giacinto","Giacobbe","Giacomo","Giadero","Giambattista","Gianbattista","Giancarlo","Giandomenico","Gianfranco","Gianluca","Gianluigi","Gianmarco","Gianmaria","Gianmario","Gianni","Gianpaolo","Gianpiero","Gianpietro","Gianuario","Giasone","Gilberto","Gildo","Gillo","Gineto","Gino","Gioacchino","Giobbe","Gioberto","Giocondo","Gioele","Giona","Gionata","Giordano","Giorgio","Giosuè","Giosuele","Giotto","Giovanni","Giove","Gioventino","Giovenzio","Girardo","Girolamo","Giuda","Giuliano","Giulio","Giuseppe","Giustiniano","Giusto","Glauco","Goffredo","Golia","Gomberto","Gondulfo","Gonerio","Gonzaga","Gordiano","Gosto","Gottardo","Graciliano","Grato","Graziano","Gregorio","Grimaldo","Gualberto","Gualtiero","Guelfo","Guerrino","Guglielmo","Guiberto","Guido","Guiscardo","Gumesindo","Gustavo","Iacopo","Iacopone","Iago","Icaro","Icilio","Ido","Iginio","Igino","Ignazio","Igor","Ilario","Ildebrando","Ildefonso","Illidio","Illuminato","Immacolato","Indro","Innocente","Innocenzo","Iorio","Ippocrate","Ippolito","Ireneo","Isacco","Isaia","Ischirione","Isidoro","Ismaele","Italo","Ivan","Ivano","Ivanoe","Ivo","Ivone","Ladislao","Lamberto","Lancilotto","Landolfo","Lanfranco","Lapo","Laurentino","Lauriano","Lautone","Lavinio","Lazzaro","Leandro","Leo","Leonardo","Leone","Leonida","Leonio","Leonzio","Leopardo","Leopoldo","Letterio","Liberato","Liberatore","Liberio","Libero","Liberto","Liborio","Lidio","Lieto","Lino","Lisandro","Livino","Livio","Lodovico","Loreno","Lorenzo","Loris","Luca","Luciano","Lucio","Ludano","Ludovico","Luigi","Macario","Maccabeo","Maffeo","Maggiorino","Magno","Maiorico","Malco","Mamante","Mancio","Manetto","Manfredo","Manilio","Manlio","Mansueto","Manuele","Marcello","Marciano","Marco","Mariano","Marino","Mario","Marolo","Martino","Marzio","Massimiliano","Massimo","Matroniano","Matteo","Mattia","Maurilio","Maurizio","Mauro","Medardo","Medoro","Melanio","Melchiade","Melchiorre","Melezio","Menardo","Menelao","Meneo","Mennone","Mercurio","Metello","Metrofane","Michelangelo","Michele","Milo","Minervino","Mirco","Mirko","Mirocleto","Misaele","Modesto","Monaldo","Monitore","Moreno","Mosè","Muziano","Namazio","Napoleone","Narciso","Narseo","Narsete","Natale","Nazario","Nazzareno","Nazzaro","Neopolo","Neoterio","Nereo","Neri","Nestore","Nicarete","Nicea","Niceforo","Niceto","Nicezio","Nico","Nicodemo","Nicola","Nicolò","Niniano","Nino","Noè","Norberto","Nostriano","Nunzio","Oddone","Oderico","Odidone","Odorico","Olimpio","Olindo","Oliviero","Omar","Omero","Onesto","Onofrio","Onorino","Onorio","Orazio","Orenzio","Oreste","Orfeo","Orio","Orlando","Oronzo","Orsino","Orso","Ortensio","Oscar","Osmondo","Osvaldo","Otello","Ottaviano","Ottavio","Ottone","Ovidio","Paciano","Pacifico","Pacomio","Palatino","Palladio","Pammachio","Pancario","Pancrazio","Panfilo","Pantaleo","Pantaleone","Paolo","Pardo","Paride","Parmenio","Pasquale","Paterniano","Patrizio","Patroclo","Pauside","Peleo","Pellegrino","Pericle","Perseo","Petronio","Pierangelo","Piergiorgio","Pierluigi","Piermarco","Piero","Piersilvio","Pietro","Pio","Pippo","Placido","Platone","Plinio","Plutarco","Polidoro","Polifemo","Pollione","Pompeo","Pomponio","Ponziano","Ponzio","Porfirio","Porziano","Postumio","Prassede","Priamo","Primo","Prisco","Privato","Procopio","Prospero","Protasio","Proteo","Prudenzio","Publio","Pupolo","Pusicio","Quarto","Quasimodo","Querano","Quintiliano","Quintilio","Quintino","Quinziano","Quinzio","Quirino","Radolfo","Raffaele","Raide","Raimondo","Rainaldo","Ramiro","Raniero","Ranolfo","Reginaldo","Regolo","Remigio","Remo","Remondo","Renato","Renzo","Respicio","Ricario","Riccardo","Richelmo","Rinaldo","Rino","Robaldo","Roberto","Rocco","Rodiano","Rodolfo","Rodrigo","Rolando","Rolfo","Romano","Romeo","Romero","Romoaldo","Romolo","Romualdo","Rosario","Rubiano","Rufino","Rufo","Ruggero","Ruperto","Rutilo","Sabato","Sabazio","Sabele","Sabino","Saffiro","Saffo","Saladino","Salomè","Salomone","Salustio","Salvatore","Salvo","Samuele","Sandro","Sansone","Sante","Santo","Sapiente","Sarbello","Saturniano","Saturnino","Saul","Saverio","Savino","Sebastiano","Secondiano","Secondo","Semplicio","Sempronio","Senesio","Senofonte","Serafino","Serapione","Sergio","Servidio","Serviliano","Sesto","Settimio","Settimo","Severiano","Severino","Severo","Sico","Sicuro","Sidonio","Sigfrido","Sigismondo","Silvano","Silverio","Silvestro","Silvio","Simeone","Simone","Sinesio","Sinfronio","Sireno","Siriano","Siricio","Sirio","Siro","Sisto","Soccorso","Socrate","Solocone","Sostene","Sosteneo","Sostrato","Spano","Spartaco","Speranzio","Stanislao","Stefano","Stiliano","Stiriaco","Surano","Sviturno","Taddeo","Taide","Tammaro","Tancredi","Tarcisio","Tarso","Taziano","Tazio","Telchide","Telemaco","Temistocle","Teobaldo","Teodoro","Teodosio","Teodoto","Teogene","Terenzio","Terzo","Tesauro","Tesifonte","Tibaldo","Tiberio","Tiburzio","Ticone","Timoteo","Tirone","Tito","Tiziano","Tizio","Tobia","Tolomeo","Tommaso","Torquato","Tosco","Tranquillo","Tristano","Tulliano","Tullio","Turi","Turibio","Tussio","Ubaldo","Ubertino","Uberto","Ugo","Ugolino","Uguccione","Ulberto","Ulderico","Ulfo","Ulisse","Ulpiano","Ulrico","Ulstano","Ultimo","Umberto","Umile","Uranio","Urbano","Urdino","Uriele","Ursicio","Ursino","Ursmaro","Valente","Valentino","Valeriano","Valerico","Valerio","Valfredo","Valfrido","Valtena","Valter","Varo","Vasco","Vedasto","Velio","Venanzio","Venceslao","Venerando","Venerio","Ventura","Venustiano","Venusto","Verano","Verecondo","Verenzio","Verulo","Vespasiano","Vezio","Vidiano","Vidone","Vilfredo","Viliberto","Vincenzo","Vindonio","Vinebaldo","Vinfrido","Vinicio","Virgilio","Virginio","Virone","Viscardo","Vitale","Vitalico","Vito","Vittore","Vittoriano","Vittorio","Vivaldo","Viviano","Vladimiro","Vodingo","Volfango","Vulmaro","Vulpiano","Walter","Zabedeo","Zaccaria","Zaccheo","Zanobi","Zefiro","Zena","Zenaide","Zenebio","Zeno","Zenobio","Zenone","Zetico","Zoilo","Zosimo"]})),$X=c((()=>{Gy=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),XX=c((()=>{Hy=["Sig.","Dott.","Dr.","Ing."]})),e0=c((()=>{Fy=[]})),a0=c((()=>{ZX(),qX(),QX(),YX(),$X(),XX(),e0(),Jy={female_first_name:zy,first_name:Oy,last_name:Iy,male_first_name:Vy,name:Gy,prefix:Hy,suffix:Fy}})),n0=c((()=>{Uy=["+## ### ## ## ####","+## ## #######","+## ## ########","+## ### #######","+## ### ########","+## #### #######","+## #### ########","0## ### ####","+39 0## ### ###","3## ### ###","+39 3## ### ###"]})),i0=c((()=>{n0(),Wy={formats:Uy}})),r0=c((()=>{CX(),FX(),WX(),a0(),i0(),Zy={title:"Italian",address:_y,company:xy,internet:Ry,name:Jy,phone_number:Wy}})),t0=c((()=>{qy=["#{city_prefix}#{Name.first_name}#{city_suffix}","#{Name.first_name}#{city_suffix}","#{city_prefix}#{Name.last_name}#{city_suffix}","#{Name.last_name}#{city_suffix}"]})),o0=c((()=>{Qy=["北","東","西","南","新","湖","港"]})),s0=c((()=>{Yy=["市","区","町","村"]})),l0=c((()=>{$y=["アフリカ","南極大陸","アジア","ヨーロッパ","北アメリカ","南アメリカ","南極","北極","アフガニスタン","アルバニア","アルジェリア","アメリカ","米国","アンゴラ","アルゼンチン","オーストラリア","濠洲","オーストリア","バハマ","バーレーン","バングラデシュ","バルバドス","ベルギー","ベリーズ","ブータン","ボリビア","ボスニヤ・","ヘルツェゴビナ","ボツワナ","ブラジル","ブルネイ","ブルガリア","カンボジア","カメルーン","カナダ","中央アフリカ","チャド","チリ","中国","コロンビア","コンゴ","コスタリカ","クロアチア","キューバ","キプロス","チェコ","デンマーク","ドミニカ共和国","エクアドル","エジプト","エルサルバドル","赤道ギニア","エストニア","エチオピア","フィジー","フィンランド","フランス","ガンビア","ドイツ","ガーナ","英国","イギリス","ギリシャ","グリーンランド","グレナダ","グアテマラ","ギニア","ガイヤナ","ハイチ","オランダ","ホンジェラス","香港","ハンガリー","アイスランド","インド","インドネシア","イラン","イラク","アイルランド","イスラエル","イタリア","ジャマイカ","日本","ヨルダン","ケニア","コソボ","クウェート","ラオス","ラトビア","レバノン","リベリア","リビア","リトアニア","ルクセンブルク","マカオ","マダガスカル","マラウィ","マレーシア","マルタ","モルジブ","モーリシャス","メキシコ","モルドバ","モナコ","蒙古","モンゴル","モロッコ","モザンビーク","ミャンマー","ナミビア","ネパール","ニューギニア","ニュージーランド","ニカラグア","ナイジェリア","北朝鮮","ノルウェー","オーマン","パキスタン","パレスチナ","パナマ","パプアニューギニア","パラグアイ","ペルー","フィリピン","ポーランド","ポルトガル","カタール","ルーマニア","ロシア","ルワンダ","サウジアラビア","スコットランド","セネガル","セイシェル","シンガポール","スロバキア","スロベニア","ソロモン諸島","ソマリア","南アフリカ","韓国","スペイン","スリランカ","スーダン","スウェーデン","スイス","シリア","タヒチ","台湾","タンザニア","タイ","トリニダード・トバゴ","チュニジア","トルコ","ウガンダ","ウクライナ","アラブ首長国連邦","ウルグアイ","バチカン","ベネズエラ","ベトナム","ウェールズ","イエメン","ザイール","ザンビア","ジンバブエ"]})),u0=c((()=>{Xy=["###-####"]})),c0=c((()=>{eb=["北海道","青森県","岩手県","宮城県","秋田県","山形県","福島県","茨城県","栃木県","群馬県","埼玉県","千葉県","東京都","神奈川県","新潟県","富山県","石川県","福井県","山梨県","長野県","岐阜県","静岡県","愛知県","三重県","滋賀県","京都府","大阪府","兵庫県","奈良県","和歌山県","鳥取県","島根県","岡山県","広島県","山口県","徳島県","香川県","愛媛県","高知県","福岡県","佐賀県","長崎県","熊本県","大分県","宮崎県","鹿児島県","沖縄県"]})),d0=c((()=>{ab=["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47"]})),h0=c((()=>{nb=["#{Name.first_name}#{street_suffix}","#{Name.last_name}#{street_suffix}"]})),p0=c((()=>{t0(),o0(),s0(),l0(),u0(),c0(),d0(),h0(),ib={city:qy,city_prefix:Qy,city_suffix:Yy,country:$y,postcode:Xy,state:eb,state_abbr:ab,street_name:nb}})),m0=c((()=>{rb=["090-####-####","080-####-####","070-####-####"]})),f0=c((()=>{m0(),tb={formats:rb}})),v0=c((()=>{ob=["おどりば","料理人","いち","やぶれる","辞儀する","逮捕","色彩","妻","きづく","はきだす","歯","憶測","すむ","墨","胃腸","駆け出す","栞","ふゆかい","豪華","写す","むちつじょ","ごらく","可愛い","ふじょ","でんせんびょう","いちにち","ついたち","彼女","ひめさま","解説","すいがら","約","並","こっせつ","あらじお","あらしお","書架","勝手","ぎせい","こくひん","嫌","博物館","しんし","帳簿","初めに","空き瓶","ふてい","見返す","ほんるいだ","さわ","悪気","ほんそう","謙虚","耐火","ぼうりょく","潔い","けす","締まる","ちょうりょく","のうし","暴走","華道","基盤","廃棄","かざる","くら","氏名","がぞう","ふきつ","こうばん","かんさい","ひとごみ","構える","たす","とむ","すみ","めいよ","帝","かんえん","たび","模型","冬休み","誇張","何千","そうだん","しっぷう","はやて","ほどう","敵","ひふ","火","壁","弱点","かいそく","没頭","貴賓","さいげつ","盛り上がる","柱","ひはん","輪郭","こづつみ","扇","性病","濃紺","洗浄剤","舞踏","つぎ","しめる","延長","しつ","ざせき","もくひょう","宝くじ","劣悪","はなみ","同音異義語","たいほう","慶弔","疎外","れいてん","死ぬ","さと","煩い","携帯","かいせい","哺育","敬語","とうとい","とうひょうする","頑張れ","れいせい","蛇","いしゃりょう","アメリカ製","光年","社員","もよう","ぎゃくしゅう","甲乙","ふくし","へいせい","てんのう","年次","二巻","がくふ","しどう","よすみ","おおごえ","かつぐ","地下街","はくじん","間接","せっとく","つうこん","びんぼう","川底","こうえん","うごき","六","乾燥","洗濯屋","なぞ","ふじん","対応","順序","首","むれる","しめる","移す","分ける","しょうげき","ぎょうし","あまい","じょうきゅう","たんれん","かけこむ","素材","受付","いままで","りょこう","満潮","もちいる","あわれ","賀状","詰め込む","数える","ずいじ","いっぱく","聴者","そうぐう","とうさく","思い遣り","鋭い","貞操","原因","象牙","歌謡","会議","待遇","なかよし","おなか","りりしい","おおちがい","賛成","奔放","非難","ようじ","錯乱","じこ","前","累進","緊張する","ぎじゅく","うち","悪霊","枢軸","子守歌","りゅうき","雄犬","みずいろ","大間違い","走り回る","そんけい","しっぺい","てんし","病院","残業","ひんしつ","けんしゅうせい","椅子","いさぎよい","枕","墓","洗剤","たいがい","じしょ","副大統領","瞬く","ふじ山","ふくせん","漬物","はんけん","愛する","ねんがん","ねんじ","いきどおり","おとこのこ","仁","鶴","施設","請ける","拒否","うみ","移譲","溶岩","性格","じしん","裏口","ふたたび","猿真似","しめらせる","みき","つぐなう","しんじゅく","こせき","よくあつ","懇談","指定する","専門","一生","平壌","滝","じどうし","着く","泥棒","構え","きじゅつ","しょひょう","貨幣","好奇心","皇太子妃","かいほうする","主に","背広","ちんみ","よそく","なつかしい","がんい","ちょうしゃ","無敵","所","だいがくいんせい","左右","のむ","愛国心","桑原","どうはんする","いっかい","なみだ","くまもとけん","主観的","普段","こころみる","ふくぶくろ","てんぷく","せいめい","はなのあな","みぎて","親子丼","反則","しゅうり","かくにん","生える","けむし","すける","のぞいて","和尚","えんちょうする","こうとう","なげすてる","なまけもの","あい","きとく","審判","怖い","こたえる","比較","ゆにゅう","曲","ちんもく","破産","迫る","あわ","辛子","糸","早々","運命","錠","のうみん","夏","野獣","試験","数詞","毎日","ぎせいしゃ","よくし","せん","おろし","ゆれる","いし","える","ごらん","ばい","たい","拘置","うらぎり","競艇","かぐ","悔しい","にゅうせき","ために","ふうふ","ちょうせん","破壊","困難","まんえつ","移動","しあつ","あまる","香り","いなか","通す","ほうき","栄誉","ちめいてき","おとろえる","いしずえ","知り合い","貨物船","酸っぱい","めいわくめーる","めいわくメール","とうほう","てら","ぜんにほん","七つ","暗い","てのこう","しんぞう","仰々しい","さんぎょう","公共","年額","かわさき","日刊","ちょう","縮小","いっこ","不況","人柄","はい","原潜","つみ","かんかつ","ぞうえん","雑費","おくれる","面倒臭い","しょうじょう","たおす","順番","天皇","しゅいん","動揺","乙","さわやか","とう","望み","一人娘","かく","かど","ねんがじょう","ちょくせつ","せんじょう","燃やす","ふかのう","買い物","風潮","沖縄","いか","こうくうぼかん","かくれる","きぼうする","媒介","れいぞうこ","冷酷","紛らわしい","せんげん","家具","繁茂","なさけない","きずつく","空き缶","禅寺","大文字","火葬","雰囲気","化粧","忍者","ふんしゃ","限る","ちゅうとはんぱ","はずかしめる","何度","風船","こうぎょう","かくしゅう","しりつ","こい","あがる","教える","程","忘れ物","襲撃","かいころく","月刊","となえる","せんのう","営業中","ながさき","げんまい","二つ","髪の毛","ろくおん","匿名","高瀬","しききん","ふかぶん","怒鳴る","福祉","あさねぼう","りゃくご","しざい","運","力","ねばる","つくる","わかめ","おうしゅう","やすい","え","かせぎ","あらかじめ","かんせつ","恥ずかしがる","焦がす","はいき","はかる","図説","どうめい","ようじ","ふねんごみ","ふねんゴミ","鎮める","しゅくん"]})),g0=c((()=>{sb=["つぎつぎ","薬","当て字","しょくん","間隔","飽くまでも","あびる","雇用","かんどうする","じじょでん","超音波","じゅうどう","面","先週","しょうがっこう","避ける","ふそく","まぎらす","閉める","たまご","こわす","底","〜亭","しゃくや","しゃっか","ひきざん","割り箸","こうぞく","果てる","つなひき","漂う","漠然","しょうりゃく","減俸","さいぼう","さいほう","平安","封筒","旧姓","よわよわしい","味噌","ぼきん","くつじょく","絹糸","ちきゅう","かぜ","半額","かんそく","ぶん","ふん","たれる","廉価","ずいぶん","屈む","かんりょうてき","すんか","殻","擬装","うえる","たいさ","あつい","げいひんかん","洋服","大丈夫","察知","しえんする","仕方がない","徳川","ちらかす","こくふくする","ぶそう","こうつう","逆","馬鹿馬鹿しい","切迫","不健康","学院","都合","備える","へいがい","はじめて","輸出","迷路","母","ひかくする","はなぢ","はなじ","むこう","ねんじゅう","自宅","誘惑","ちえん","太る","ちかく","奴ら","堀川","ちがい","たいこうする","運ぶ","独裁","はっぽう","とちょう","先ず","はんそう","せいじょう","しょうじょう","かんじる","体重","上手","原油","ざぜん","既に","華やか","仕事","あらす","ゆるむ","きょうどう","開閉","悲しみ","しゃこ","ねばり","ようい","おりめ","伐採","牛乳","秘める","右翼","伝統","きひん","やさしい","ほ","警官","左手","全日本","むぜい","ごふく","かいたく","撃つ","しあとるし","シアトルし","ちょさくけん","じぎする","譜面","貫く","約する","提案する","哀れむ","迷子","きょうき","ごうけん","せんたくする","しゅしょう","江戸","狂う","助手","新婚旅行","検査","色々","かぶしきしじょう","桜色","普及","零す","ししょく","きゅうりょう","おんとう","しょうゆ","没落","人性","けいかん","電話","お盆","きいろ","やしなう","鍋","遮断","かわかす","寮生","面積","とうき","ふくへい","ないしょばなし","不思議","この頃","おかね","殺人者","かいぞく","歯を磨く","店","はなはだ","フランス語","評価","九日","さいばん","推奨","出版","恨み","気持ちいい","黙る","はりい","凝固","傑作","魅力","ぐん","右利き","まほうつかい","復旧","かくじっけん","じきしょうそう","あれる","きょうはんしゃ","たいりく","げんめつ","俵","むらさきいろ","病床","米兵","まつり","塾生","親切","めいがら","核実験","なおさら","魔術","がいよう","かんぜん","せいかん","果樹","〜系","ほにゅうびん","じょうだん","賢明","みなと","もはん","こうちょく","泳ぐ","重い","日没","碁","かつ","どうけつ","近視","配慮","のき","入江","とめる","暇","書き方","胃","りょうど","難しい","浮世絵","喜劇","とうさん","はんだんする","こうせい","大仏","揺さぶる","いじん","機嫌","黒板","えきびょう","妥協する","つうやく","乗せる","けしき","床","品詞","消す","金縛り","じゅうらい","急騰","十台","窓","雑音","きょだい","鈍器","禍根","かたみち","山葵","店舗","渦巻き","おととい","いっさくじつ","救急車","馬","ころす","ぼくし","せっぷく","たて","おどろく","やさい","じぞう","こはん","いく","自立","かっこう","脱税","始まる","学者","かい","ひきさく","長唄","下着","よくげつ","休日","以下","廃墟","部首","壊す","むく","委員","待合","頂く","よぼう","壮年","斬殺","ちゅうもんする","じっかん","境","施行","つく","活用","ぶき","かいじゅう","人口","ぼうず","そあく","むぼう","白菊","りゃくず","汚す","すいせん","あらそう","高値","あう","せいしん","指紋","超〜","うえる","つまる","靖国神社","とりあえず","とふ","たくす","じょうじゅん","羊毛","浅い","閉じる","戦没","あっとうする","ひがい","量","じょうき","誤用","ほうせき","つばさ","号","けいむしょ","電源","勇気","ふかさ","はだか","たいやく","きょうしつ","退く","さきまわり","こうおつ","無糖","ふさい","とくに","めいし","みつ","ほんらい","まもる","あつかい","日欧","天井","みさき","おきゃくさん","にんい","きょうかい","いつ頃","かん","しきもう","特殊","同僚","血液","じぶん","しょうかする","礎","みなもと","軒","ぶっきょう","しずむ","たらす","憂い","総括","もうす","暴力","しばふ","いたずら","米国","魔法","ことばつき","窒息","唄う","金","きもち","誓い","どろ","話","奇襲","巡回","失う","隆起","投資","芽","あくれい","奉仕","ひんきゃく","ひんかく","まつ","せんりゅう","だいどころ","いう","こいぬ","なんべい","さくにゅう","フランス人","きげんご","こくみん","交錯","好き","一文字","ほうげん","地面","だくりゅう","見当たる","浸す","あしくび","弱虫","送る","遺失","あおい","ちあん","宜しく","あらあらしい","かおつき","かちゅう","がんばる","芸者","陳列室","弥生","明治","めいしょ","ごじゅう","済ます","無駄","終点","ぞくご","掛ける","ほうしゅう","騎兵","液体","下さい","けいじばん","杏","合う","疾走","りゅうこうご","出かける","はちまき","手作り","れつあく","うんがいい","はちのす","ハチのす","色盲","形","希望する","こうせい","いちだい","春休み","縛る","金星","そんざい","防犯","大尉","老齢","差し上げる","犠牲","にる","問題","双","安泰","せんじょうざい","継承","かんしん","丼","ざんぴん","そだてる","たつ","不可欠","報じる","抑制","けいけんしゃ","きょうふ","せいぞう","きんく"]})),k0=c((()=>{v0(),g0(),lb={supplemental:ob,words:sb}})),y0=c((()=>{ub=["大翔","蓮","颯太","樹","大和","陽翔","陸斗","太一","海翔","蒼空","翼","陽菜","結愛","結衣","杏","莉子","美羽","結菜","心愛","愛菜","美咲"]})),b0=c((()=>{cb=["佐藤","鈴木","高橋","田中","渡辺","伊藤","山本","中村","小林","加藤","吉田","山田","佐々木","山口","斎藤","松本","井上","木村","林","清水"]})),S0=c((()=>{db=["#{last_name} #{first_name}"]})),A0=c((()=>{y0(),b0(),S0(),hb={first_name:ub,last_name:cb,name:db}})),M0=c((()=>{pb=["0####-#-####","0###-##-####","0##-###-####","0#-####-####"]})),T0=c((()=>{M0(),mb={formats:pb}})),_0=c((()=>{p0(),f0(),k0(),A0(),T0(),fb={title:"Japanese",address:ib,cell_phone:tb,lorem:lb,name:hb,phone_number:mb}})),w0=c((()=>{vb=["#{city_name}#{city_suffix}"]})),j0=c((()=>{gb=["강릉","양양","인제","광주","구리","부천","밀양","통영","창원","거창","고성","양산","김천","구미","영주","광산","남","북","고창","군산","남원","동작","마포","송파","용산","부평","강화","수성"]})),E0=c((()=>{kb=["구","시","군"]})),N0=c((()=>{yb=["###-###","#####"]})),B0=c((()=>{bb=["강원","경기","경남","경북","광주","대구","대전","부산","서울","울산","인천","전남","전북","제주","충남","충북","세종"]})),P0=c((()=>{Sb=["강원","경기","경남","경북","광주","대구","대전","부산","서울","울산","인천","전남","전북","제주","충남","충북","세종"]})),L0=c((()=>{Ab=["#{street_root}#{street_suffix}"]})),D0=c((()=>{Mb=["상계","화곡","신정","목","잠실","면목","주안","안양","중","정왕","구로","신월","연산","부평","창","만수","중계","검단","시흥","상도","방배","장유","상","광명","신길","행신","대명","동탄"]})),x0=c((()=>{Tb=["읍","면","동"]})),C0=c((()=>{w0(),j0(),E0(),N0(),B0(),P0(),L0(),D0(),x0(),_b={city:vb,city_name:gb,city_suffix:kb,postcode:yb,state:bb,state_abbr:Sb,street_name:Ab,street_root:Mb,street_suffix:Tb}})),K0=c((()=>{wb=["#{prefix} #{Name.first_name}","#{Name.first_name} #{suffix}"]})),R0=c((()=>{jb=["주식회사","한국"]})),z0=c((()=>{Eb=["연구소","게임즈","그룹","전자","물산","코리아"]})),O0=c((()=>{K0(),R0(),z0(),Nb={name:wb,prefix:jb,suffix:Eb}})),I0=c((()=>{Bb=["co.kr","com","biz","info","ne.kr","net","or.kr","org"]})),V0=c((()=>{Pb=["gmail.com","yahoo.co.kr","hanmail.net","naver.com"]})),G0=c((()=>{I0(),V0(),Lb={domain_suffix:Bb,free_email:Pb}})),H0=c((()=>{Db=["국가는","법률이","정하는","바에","의하여","재외국민을","보호할","의무를","진다.","모든","국민은","신체의","자유를","가진다.","국가는","전통문화의","계승·발전과","민족문화의","창달에","노력하여야","한다.","통신·방송의","시설기준과","신문의","기능을","보장하기","위하여","필요한","사항은","법률로","정한다.","헌법에","의하여","체결·공포된","조약과","일반적으로","승인된","국제법규는","국내법과","같은","효력을","가진다.","다만,","현행범인인","경우와","장기","3년","이상의","형에","해당하는","죄를","범하고","도피","또는","증거인멸의","염려가","있을","때에는","사후에","영장을","청구할","수","있다.","저작자·발명가·과학기술자와","예술가의","권리는","법률로써","보호한다.","형사피고인은","유죄의","판결이","확정될","때까지는","무죄로","추정된다.","모든","국민은","행위시의","법률에","의하여","범죄를","구성하지","아니하는","행위로","소추되지","아니하며,","동일한","범죄에","대하여","거듭","처벌받지","아니한다.","국가는","평생교육을","진흥하여야","한다.","모든","국민은","사생활의","비밀과","자유를","침해받지","아니한다.","의무교육은","무상으로","한다.","저작자·발명가·과학기술자와","예술가의","권리는","법률로써","보호한다.","국가는","모성의","보호를","위하여","노력하여야","한다.","헌법에","의하여","체결·공포된","조약과","일반적으로","승인된","국제법규는","국내법과","같은","효력을","가진다."]})),F0=c((()=>{H0(),xb={words:Db}})),J0=c((()=>{Cb=["서연","민서","서현","지우","서윤","지민","수빈","하은","예은","윤서","민준","지후","지훈","준서","현우","예준","건우","현준","민재","우진","은주","서준","도윤","시우","주원","하준","지호","준우","도현","선우","서진","연우","유준","정우","승우","승현","시윤","준혁","은우","지환","승민","유찬","윤우","민성","준영","시후","진우","지원","수현","재윤","시현","동현","수호","태윤","민규","재원","한결","민우","재민","은찬","윤호","시원","이준","민찬","지안","시온","성민","준호","승준","성현","이안","현서","재현","하율","지한","우빈","태민","지성","예성","민호","태현","지율","민혁","서우","성준","은호","규민","정민","윤성","윤재","하람","하진","민석","준수","은성","태양","예찬","준희","도훈","하민","준성","지완","현수","승원","강민","정현","우주","태준","승호","주호","성빈","주안","도영","우현","민수","건희","주환","하랑","다온","정훈","원준","시율","시훈","지오","민기","현민","시완","경민","서율","현성","승윤","주영","동하","태훈","민건","도율","동건","재훈","태영","호준","승빈","가온","재준","시환","세현","태경","이현","도원","도경","정후","현진","재영","정원","서후","현승","찬영","라온","영준","상현","범준","온유","승훈","성윤","재하","로운","주혁","찬우","이든","연준","하윤","우성","동윤","성훈","승재","찬희","지혁","건호","세준","동욱","태율","수민","태호","유건","승찬","도하","윤찬","단우","태우","현호","윤후","현빈","시안","재우","준석","지운","주현","형준","연호","효준","재혁","성우","규빈","주완","주한","동우","하늘","수혁","재희","시헌","상윤","우찬","유빈","진호","유현","석현","우영","준형","도연","유진","서원","지용","용준","규현","준후","동준","은율","도준","호진","강현","태인","진혁","상우","우준","은준","승후","시호","지웅","승환","은혁","동훈","유민","하온","성원","도진","승주","영민","대현","종현","세훈","도겸","서호","현석","신우","재호","준현","원우","강우","승유","상민","태환","은수","선호","준원","민결","정빈","태오","동혁","영우","아인","유안","동규","진서","태성","유성","혜성","요한","성진","여준","윤건","인우","태건","주형","우혁","희찬","한율","하성","준범","찬민","정호","윤수","민제","성호","인성","건후","경준","희준","상준","승혁","재이","태원","준민","재율","민승","태웅","채민","한울","승헌","재성","시준","진영","환희","선율","세윤","호연","승기","세진","성재","태하","주성","호영","가람","다원","찬율","현규","규원","이한","연후","현욱","준하","시영","희성","정윤","진욱","지윤","창민","지온","지섭","해준","정환","건율","은재","찬혁","동연","유하","노아","성찬","세민","서빈","우석","영훈","도형","준기","윤준","지석","로이","인호","은후","명준","상훈","기현","재형","아준","해성","민후","진성","주하","시언","시형","상원","태연","도건","재인","준휘","동민","한준","기범","다니","주헌","재용","수환","태규","선재","영재","영진","주찬","지수","동호","우재","승범","동원","한별","건영","승연","도헌","한솔","유담","예건","은결","민율","민욱","지헌","석준","준모","현재","이수","리안","재범","재환","찬유","호윤","해솔","태희","건하","상혁","성욱","영찬","동환","진원","하빈","준환","재욱","경훈","준상","서하","연수","하루","예담","수찬","강준","도균","태이","형우","승규","재빈","종혁","도운","근우","찬호","윤혁","유신","리우","범수","동주","혁준","찬빈","한빈","태빈","창현","성주","지현","이찬","유승","은규","연재","희재","태완","수영","병준","동휘","세영","태욱","의준","관우","성환","재연","재경","민영","윤석","대한","선준","지유","지욱","은석","성연","경빈","정욱","한서","보겸","인준","윤제","도빈","준용","규진","희원","주언","다율","성하","영광","현중","종윤","형진","채훈","정혁","태형","준오","진수","승진","유겸","찬서","종민","영빈","의찬","승하","종우","유환","희수","호성","태헌","채우","재헌","원재","석민","경원","승리","강희","상욱","민형","용현","범진","민섭","준이","서안","명진","예훈","시혁","상진","영현","원석","승수","우민","현태","도담","정연","이삭","형주","미르","대윤","로하","정인","용우","유호","태균","건민","요셉","기훈","영웅","지홍","종원","선후","동후","태겸","종훈","유한","제민","준표","원빈","보성","인서","동희","의진","준규","리한","재후","혜준","경호","진현","현도","찬솔","호현","다현","동균","원호","재웅","세인","하겸","제이","민겸","진석","승욱","동근","다훈","형민","동영","대호","기윤","지승","슬우","해찬","대영","강윤","서한","동진","진후","정진","윤상","영서","민균","재승","정준","세찬","규태","민국","우림","경환","우솔","의현","대성","도엽","근호","효재","다민","효민","민철","예승","준엽","어진","승언","하원","두현","지형","성율","채운","진형","대원","정수","시하","도은","용진","주빈","제현","태진","범서","건형","해인","로건","민교","혁진","수인","슬찬","영호","하엘","정운","경현","세환","태산","아론","선민","준섭","태후","은유","기찬","승엽","선규","다빈","태주","기태","채환","제윤","승완","무진","정재","수안","진규","시유","용재","현웅","기준","윤오","우리","태은","수한","석훈","석원","로빈","다엘","세원","채윤","원진","태혁","재아","규연","한빛","필립","성혁","재완","제하","선빈","세빈","윤기","이레","인혁","주훈","광현","도혁","재진","보민","진하","동빈","병찬","효성","성규","채준","승효","시진","승한","시운","원영","리호","강빈","강호","성운","유석","채호","다겸","종호","채원","이도","범석","현종","성수","도언","민하","석진","건욱","상연","건휘","한성","효원","믿음","도우","규호","선웅","태유","강산","도환","선유","형석","정헌","현기","용민","태수","하담","무성","희승","리온","서훈","용훈","대훈","루이","이환","동화","경태","이담","강인","유근","영후","찬휘","래원","채현","무빈","민근","희우","하음","민상","윤민","현찬","경록","찬웅","지상","상호","서찬","루다","하영","찬형","효찬","희윤","영인","규성","예현","정한","현율","지효","상빈","채완","사무","경찬","솔민","서형","태서","동율","재홍","은기","승운","은총","윤환","주용","서환","용찬","진환","세연","누리","진율","원희","기원","인후","태강","준식","민권","세호","병현","재서","윤빈","인수","호빈","세종","신후","효빈","서인","대연","우형","마루","태용","주윤","수완","보현","경모","희건","영주","장우","석우","강유","영석","정안","동해","동찬","휘성","규범","영환","호재","상헌","병훈","현오","동은","용하","광민","인규","명재","인찬","세웅","진모","도한","성은","도완","중현","대경","리오","대환","해민","민솔","민구","이솔","윤겸","다윤","채율","인하","동완","경수","수오","찬욱","태온","태운","리환","승건","재석","재유","해온","호민","용빈","태한","연성","도후","기주","다인","서혁","예강","홍준","지찬","대희","강훈","이건","현후","장현","레오","호찬","이서","주연","진유","해원","동헌","시찬","성후","종하","근영","제원","세혁","예한","태랑","이루","준명","무경","시연","진웅","찬규","은상","성모","현동","원혁","용호","동엽","상후","규환","대건","루하","재겸","건웅","지빈","해윤","하운","호원","현제","석빈","제우","휘준","기환","규담","경진","치우","민환","세헌","제훈","장원","해담","서온","현식","휘찬","예환","동재","창우","준아","해진","준한","재휘","이헌","준재","기민","영욱","진오","로한","윤형","상율","강후","석주","세율","하승","하울","명훈","한겸","창희","태림","찬이","세온","지범","성범","서완","원찬","정찬","민식","동인","범규","영수","준경","민용","유노","원규","규하","창준","하임","현섭","민범","민종","도휘","강율","현모","리후","우경","규영","상엽","은택","송현","윤하","승제","가을","다운","형찬","혁주","종찬","훈민","윤태","석영","윤규","승휘","도유","재찬","형빈","찬준","석호","우람","요엘","태범","무겸","희상","준빈","은빈","기성","다솔","사랑","준연","진명","세하","다윗","형욱","용주","종빈","호수","윤섭","진용","재익","창빈","소율","수원","지태","해율","동운","재운","강혁","권우","기영","리원","창훈","선욱","민중","세한","재한","종욱","윤승","동한","성용","은섭","라윤","승희","종인","수하","화랑","하언","승표","소망","준열","태휘","하경","승용","유섭","민강","민강","래현","한음","라현","한영","수겸","석환","동률","형규","예율","이언","윤슬","병우","연석","우겸","수형","준선","규찬","일우","제영","제희","승율","민주","태정","병민","진헌","다한","라엘","남규","윤진","태리","재상","정완","찬수","진솔","수연","운찬","호경","주은","건률","경윤","지명","성제","로아","예안","은오","준홍","권율","지산","태석","효승","병윤","연서","유원","가빈","보검","이산","준승","건아","건이","민진","용성","예온","유상","범찬","병호","명현","남우","문성","동권","주승","규혁","승오","효석","병주","호승","백호","유태","남준","주엽","상범","강찬","승모","대겸","유수","지언","원율","태언","성균","승균","라율","희민","예람","한주","한선","무현","수윤","정규","시욱","찬진","태섭","의성","민현","승철","희율","현택","유완","보석","태승","별하","영운","종환","이룸","태근","지담","은겸","찬현","현채","해든","보승","정율","찬열","경률","찬주","문수","은서","아성","한민","현겸","성일","신혁","종연","바다","동언","로윤","종범","석찬","무영","호석","루빈","다호","아민","재오","병욱","기웅","하균","호건","한희","형서","경우","신유","은률","석희","민유","에녹","수범","유주","진표","우승","보경","산하","승태","담우","우연","경서","주율","태일","재은","수성","하현","성헌","아진","동수","현근","건혁","준일","리현","명규","아람","효진","준태","한승","수훈","채성","상운","성태","부건","찬용","하림","순우","제준","병헌","찬후","민창","우정","명호","경욱","이겸","예하","이재","윤도","현구","신율","다올","루한","영하","민관","정효","규헌","나율","연욱","기백","준협","동유","형원","은솔","수용","리건","윤철","여름","기호","상은","라원","용수","철민","휘서","재건","주명","영원","모건","우섭","성한","도민","민오","근형","정주","주열","태린","종석","시열","예겸","재정","윤영","래오","채빈","우인","지인","해강","윤식","서언","보근","준화","도일","용희","건오","채혁","희제","교빈","부겸","태관","명우","세운","희태","시한","창윤","희서","진한","규한","대규","진홍","기연","윤결","윤범","우제","율찬","승화","병규","용석","예호","정범","하선","관호","명성","장호","도아","기문","노엘","태권","찬슬","명환","찬슬","성엽","승일","영윤","장훈","창호","루안","호림","준헌","세중","문규","정석","재선","건준","찬윤","서휘","주민","두영","힘찬","연승","정하","대웅","효근","오현","정희","용원","세형","희철","한이","원기","윤솔","연오","종수","종서","푸름","시오","정모","동국","수홍","유재","종헌","승택","장혁","다준","한규","준겸","태곤","동기","선오","승안","영록","예서","영제","선진","용환","래온","성철","단율","리암","현일","연제","성근","혜찬","병진","진섭","남현","재권","경석","정엽","희범","수아","라준","신욱","서헌","윤구","승열","해랑","주석","명근","재엽","원형","명찬","명수","기율","테오","유온","담현","나단","준구","도희","재강","하린","순호","노을","우용","성웅","찬하","수헌","원태","범주","종은","건일","희도","예일","근후","준의","명민","제연","소명","은표","준교","정웅","호정","동관","우담","진희","부경","이원","설민","한진","가율","영도","경재","현명","시경","태선","치원","은제","도규","용욱","무준","현희","동석","담율","정무","은교","해승","소울","영기","유비","현솔","기우","원민","상언","기쁨","휘영","환준","재효","다성","주오","병건","예권","은환","서로","남훈","인환","상규","본준","찬양","도근","도욱","율호","제호","두원","재언","재명","범희","주온","서범","석윤","세범","우철","효건","재근","백현","기혁","혜민","익현","덕현","치훈","태홍","현철","예섭","선균","아윤","은민","진훈","철우","정근","무건","영건","재열","인석","홍석","용화","현범","강한","신영","채범","희망","오성","명석","창욱","영채","치현","윤종","재중","상희","대은","승겸","연찬","충현","현균","혁민","승영","이랑","예닮","기량","광호","효인","제아","인영","효섭","경도","학준","찬성","송민","서유","원후","예원","혁찬","지음","민웅","문기","규형","제율","관영","인태","윤채","상수","동명","윤택","이엘","영규","정명","효우","기정","평안","채헌","강은","이완","정태","제혁","종건","중원","수종","한수","원서","에이","정서","동아","의겸","설우","현담","서웅","윤한","시아","서영","종후","제성","선혁","승권","홍민","윤현","연진","요섭","세용","병철","서겸","희주","명원","성문","창환","정섭","동성","솔찬","제형","유솔","치호","선제","치호","찬홍","기석","유솔","종진","다울","시웅","승채","기용","윤모","재림","시은","태화","태식","아율","강욱","인재","재균","용범","성휘","경한","제후","바울","한비","재백","가원","승조","성록","주노","창수","로원","하륜","성완","산희","지강","치윤","예범","범기","율빈","루오","종운","지황","본우","상유","강모","우열","예중","평강","주상","영균","정흠","석규","대혁","규동","은철","홍기","호세","진구","성열","효상","원일","제이","여민","선용","상명","상효","지영","도협","용운","상협","형근","현교","형호","용규","이강","광희","나엘","가현","한슬","근혁","병수","경완","영범","택연","준언","지건","우원","희섭","유강","승은","두연","반석","모세","기완","경주","윤권","리완","은중","은산","은중","규완","준택","기욱","강연","유범","호근","준학","종화","율하","건도","창혁","규상","영성","용휘","권희","요환","다함","승학","무결","인철","경인","부성","동경","교현","새벽","영태","루아","규준","호율","용후","건태","호용","성언","다빛","백준","성희","주경","관희","종휘","은강","이람","찬일","한유","율희","찬의","동섭","기헌","휘승","예후","호균","선홍","지훤","동일","현용","종성","소원","유로","상영","로현","윤원","창진","이룬","현상","교준","구현","승구","문경","제인","상화","윤중","준효","준건","바론","오윤","경섭","무열","화평","우창","나루","남호","경율","산들","제욱","예근","우태","에릭","율민","진휘","이정","정음","준익","운호","범근","중호","민엽","효제","율민","예헌","에릭","준익","이정","민엽","강휘","그루","승록","준율","우신","현덕","호인","건용","건주","두호","택현","태상","하주","규석","우상","강건","천우","성국","한얼","지서","인욱","우종","이선","현유","형섭","상휘","성오","도호","하리","명서","도권","준완","진운","현조","훈석","명균","차민","성식","찬석","여찬","찬울","종한","세욱","환이","정균","진민","앤드","성인","은휼","강원","현세","호겸","은식","경탁","해수","의재","병관","하연","예석","유인","효담","리윤","병권","권호","규선","동형","한률","의연","재규","은효","현탁","서경","루민","휘원","민태","건모","태안","영일","현영","다혁","성영","서균","진건","율원","정용","혁수","보윤","환호","휘윤","인범","남윤","원섭","남윤","대용","찬승","효범","성택","원섭","서담","호형","산호","호선","의석","라운","규인","형식","창연","명섭","국현","채진","예빈","유철","준철","이로","가민","호태","창범","은범","호중","서주","대헌","윤근","인겸","홍재","성효","홍찬","이진","솔빈","건유","창규","하솔","석범","서욱","보규","아현","승지","무혁","동오","승온","다건","진기","원종","원겸","성무","채하","희권","다움","산이","혁빈","환서","희담","도열","광훈","우수","지백","현이","단유","휘수","성유","라호","교진","마음","나우","영한","해일","민한","상하","훈희","한경","호범","용기","대진","의담","예랑","유영","명철","휘재","찬식","선엽","서용","효신","혁재","민세","해리","재광","지솔","휘건","의빈","영헌","대우","채영","한중","진태","이연","두진","건빈","제환","정기","대휘","남혁","경규","재학","희온","성화","제헌","영권","휘상","래윤","익준","성률","라임","조이","기하","원경","성권","규식","유혁","태풍","해건","주우","규람","우린","재온","예종","민선","유천","의선","현무","유림","하건","부민","다을","루카","초원","재문","문찬","대율","태종","효중","용태","세완","현선","태광","상록","윤담","연웅","도성","선중","상인","한샘","상재","경헌","카이","상일","찬오","성안","현주","원식","의영","영조","재화","광수","주선","시엘","원상","해밀","규림","종율","차윤","재관","관후","철현","조슈","유지","기담","의민","현건","현창","로준","문혁","교민","인섭","규안","푸른","대운","중혁","동범","승협","드림","류하","나로","동효","무찬","시울","동겸","여훈","동범","규서","원중","여울","두환","서홍","금성","용건","경일","휘민","리하","헌재","상철","희창","웅찬","승관","의정","운성","건규","용대","자윤","지구","희락","온율","상경","원욱","경근","솔우","휘연","병재","찬원","순혁","한길","담희","예윤","강석","철호","창성","강률","문석","우택","홍주","유일","호산","명관","리준","호열","동열","종선","인기","치영","보람","오름","찬범","보담","순범","세움","성광","서희","영철","완희","성결","태령","유엘","호담","케빈","경운","경택","호은","은종","비오","성관","형윤","한석","로희","명건","승아","해빈","영근","유권","희강","은태","규보","강이","형선","기동","규보","형선","원용","나라","창하","은태","세주","이음","해람","아빈","찬기","제용","기은","진교","류현","세강","의윤","권민","희웅","성겸","형기","차율","광재","광진","하라","택민","대준","승교","대욱","조영","경덕","성경","호철","희진","윤동","견우","화준","재안","대수","의서","은현","세건","의환","이우","근태","경후","용선","경식","민택","희영","정식","건무","홍빈","동협","순찬","승보","제승","해환","희석","라이","진겸","민조","알렉","두준","해영","수진","라울","나현","승인","태검","평화","규언","창영","혜강","휘경","하유","대승","루호","인선","벤자","우식","상기","종명","성보","창용","루현","조은","성건","용제","수웅","채욱","조한","영선","보건","은별","회준","채웅","범호","남기","보건","수언","무율","라일","준회","은별","진효","재국","근원","경하","남경","진온","규승","자운","진완","정의","준안","제경","종희","호제","원택","슬옹","희중","진선","건훈","영승","헌우","건효","정언","재동","민훈","수열","레이","우건","규도","여원","규남","효서","병서","로율","브라","인율","대균","혁규","남율","승렬","유우","율건","성배","윤교","효영","민홍","규은","대근","준근","병국","영탁","예완","수근","창인","루리","이율","종규","알렉","희훈","종완","상건","현보","선윤","대찬","정택","휘겸","관용","하서","재일","자민","소민","창석","윤창","경무","조엘","상오","희겸","순민","이훈","루원","준유","찬종","대형","휘진","기빈","기수","경은","선주","권준","승배","경은","순민","현결","인교","대형","휘진","채건","영식","윤표","시민","석재","효겸","단후","동익","경목","연태","나무","영상","명기","정오","채오","경오","이래","태찬","예인","희현","강운","주진","성중","용은","바름","상용","선하","선명","희동","규온","유정","병희","유창","택준","선일","라함","다헌","한호","진재","윤학","영택","재령","해우","재황","동선","대엽","영휘","찬엽","레온","태기","서강","찬별","라훈","태효","준세","나준","이호","지광","설호","성필","승필","은조","다일","강일","근석","서오","주엘","하이","두희","우선","보빈","창주","진리","우중","성지","하다","필준","훈서","유래","라익","경필","정제","권영","기승","영대","나혁","준보","원하","학현","아서","훈서","학현","유래","영대","장희","아서","여명","재신","래호","욱진","경범","철희","강진","유마","다우","정휘","필규","구윤","용연","하을","치후","민률","대인","운혁","홍규","진엽","병선","해서","재덕","명주","유은","선휘","아랑","경표","겨울","희운","학윤","백찬","병율","신호","영완","유훈","현윤","보배","유종","용인","슬기","찬경","자현","중훈","세담","경철","중기","신원","근휘","기명","성표","채형","조셉","해주","록희","찬중","형록","수창","제웅","미루","나훈","건수","병석","승종","천희","혜승","리율","헌준","종엽","승비","범식","석형","도흔","승섭","명제","치민","본율","정협","철웅","예솔","찬결","강재","도안","남주","조운","기륜","근희","하일","현묵","철환","준웅","도안","관형","현표","린우","벼리","준웅","은탁","하일","영신","창근","재담","철환","저스","조운","자훈","진철","태의","근희","규희","기륜","기택","광명","병후","선교","주왕","초인","로훈","진범","경남","원정","준솔","규섭","효종","루희","노율","규열","홍현","정철","승석","민산","온우","유택","아원","정록","서백","택윤","중민","근하","근찬","용한","준찬","성룡","강륜","나겸","라언","서정","한웅","지만","성온","두산","윤강","성구","중한","세창","늘찬","문영","철수","예우","경배","리훈","성목","대민","래인","태평","제이","웅빈","헨리","이윤","보준","로은","민경","순율","현학","성도","승룡","서린","경대","형철","배성","그린","영화","권률","축복","단희","근수","빛찬","용혁","병하","승룡","용혁","서린","충민","소담","광휘","진협","종준","성익","인한","강온","재의","유록","제완","호서","환성","가헌","재모","혜율","의건","영오","선기","휘담","대유","충만","지노","성렬","형택","운서","장환","준행","기선","성래","영섭","대일","주아","승익","송주","보영","선형","기서","채정","기남","홍진","은엽","시명","규정","원균","성묵","보원","이섭","현송","신형","종오","순후","담호","윤홍","근민","태익","한검","신웅","종문","희용","태구","이석","창휘","장민","보권","유선","은광","휼","희람","겸희","의주","성아","보명","회윤","중우","래이","후성","경연","부현","상권","한열","희호","남건","문호","인오","순형","동렬","상태","재필","광원","경동","평온","신현","루카","다하","나온","다하","성학","다진","재필","건화","시몬","승곤","창헌","형태","두형","단하","루카","평온","창엽","이룩","홍윤","상태","성흠","아담","경동","태신","재륜","원근","이빈","순규","광준","세휘","루니","하록","이영","민설","새힘","태중","세일","세광","율기","정목","용헌","이혁","웅재","차빈","오율","천호","혜원","광일","종태","영은","대선","하석","송윤","현률","은진","정일","은한","승래","경돈","윤산","승서","연택","경래","두경","효윤","수일","민표","우엽","지흠","선모","우근","효주","용근","정건","인택","도명","회성","치헌","광영","세희","본혁","민휘","에반","겨운","구준","이경","승명","보율","원범","로휘","신재","지휼","재철","유단","한세","강수","형훈","정유","유단","명선","세희","정유","하론","보율","신재","용균","찬익","도결","승형","아섬","효식","인용","나윤","진식","범우","민곤","건엽","경묵","정겸","라빈","승률","세명","희종","리언","준제","하훈","송우","경선","세정","정은","예주","우서","현배","세은","송준","성조","리찬","일환","상목","율우","은원","크리","완우","영율","규화","차현","민희","승회","유리","유휘","이주","보선","범모","겸재","소중","욱현","데이","찬훈","주담","아일","찬재","선구","관율","근서","래훈","학민","강헌","대홍","호동","관유","예운","기열","보결","회찬","성동","창재","현목","정래","으뜸","성덕","래건","신희","한들","중건","창대","호령","상환","창건","보훈","무근","범성","창은","종국","형건","경륜","민광"]})),U0=c((()=>{Kb=["김","이","박","최","정","강","조","윤","장","임","오","한","신","서","권","황","안","송","류","홍","유","전","양","고","문","손","배","백","허","노","심","하","주","구","곽","성","차","우","진","민","나","지","엄","변","채","원","방","천","공","현","함","여","염","석","추","도","소","설","선","마","길","연","위","표","명","기","반","라","왕","금","옥","육","인","맹","제","모","남","탁","국","어","경","은","편","용","예","봉","사","부","황","가","복","태","목","형","피","두","감","호","제","음","빈","동","온","사","시","범","선","좌","팽","승","간","상","갈","서","단","견","당"]})),W0=c((()=>{Rb=["#{last_name} #{first_name}"]})),Z0=c((()=>{J0(),U0(),W0(),zb={first_name:Cb,last_name:Kb,name:Rb}})),q0=c((()=>{Ob=["0#-#####-####","0##-###-####","0##-####-####"]})),Q0=c((()=>{q0(),Ib={formats:Ob}})),Y0=c((()=>{C0(),O0(),G0(),F0(),Z0(),Q0(),Vb={title:"Korean",address:_b,company:Nb,internet:Lb,lorem:xb,name:zb,phone_number:Ib}})),$0=c((()=>{Gb=["###","##"]})),X0=c((()=>{Hb=["#{Address.city_name}"]})),e1=c((()=>{Fb=["Ainaži","Aizkraukle","Aizpute","Aknīste","Aloja","Alūksne","Ape","Auce","Baldone","Baloži","Balvi","Bauska","Brocēni","Cēsis","Cesvaine","Dagda","Daugavpils","Dobele","Durbe","Grobiņa","Gulbene","Ikšķile","Ilūkste","Jaunjelgava","Jēkabpils","Jelgava","Jūrmala","Kandava","Kārsava","Krāslava","Kuldīga","Ķegums","Lielvārde","Liepāja","Līgatne","Limbaži","Līvāni","Lubāna","Ludza","Madona","Mazsalaca","Ogre","Olaine","Pāvilosta","Piltene","Pļaviņas","Preiļi","Priekule","Rēzekne","Rīga","Rūjiena","Sabile","Salacgrīva","Salaspils","Saldus","Saulkrasti","Seda","Sigulda","Skrunda","Smiltene","Staicele","Stende","Strenči","Subate","Talsi","Tukums","Valdemārpils","Valka","Valmiera","Vangaži","Varakļāni","Ventspils","Viesīte","Viļaka","Viļāni","Zilupe"]})),a1=c((()=>{Jb=["Andora","Apvienotie Arābu Emirāti","Afganistāna","Albānija","Armēnija","Antiļas","Angola","Antarktika","Argentīna","Amerikāņu Samoa","Austrija","Austrālija","Azerbaidžāna","Bosnija un Hercegovina","Barbadosa","Bangladeša","Beļģija","Burkinafaso","Bulgārija","Bahreina","Burundija","Benina","Bruneja","Bolīvija","Brazīlija","Butāna","Buvē sala","Botsvāna","Baltkrievija","Beliza","Kanāda","Kongo","Šveice","Kotdivuāra","Kuka salas","Čīle","Kamerūna","Ķīna","Kolumbija","Kostarika","Kuba","Kaboverde","Kipra","Čehija","Vācija","Dānija","Dominika","Alžīrija","Ekvadora","Igaunija","Ēģipte","Spānija","Etiopija","Somija","Fidži","Francija","Gabona","Lielbritānija","Grenāda","Gruzija","Gana","Grenlande","Gambija","Gvineja","Gvadelupa","Grieķija","Gvatemala","Guama","Gajāna","Honkonga","Hondurasa","Horvātija","Haiti","Ungārija","Indonēzija","Īrija","Izraēla","Indija","Irāka","Irāna","Islande","Itālija","Jamaika","Jordānija","Japāna","Kenija","Kirgizstāna","Kambodža","Korejas Tautas Demokrātiskā Republika","Korejas Republika","Kuveita","Kaimanu salas","Kazahstāna","Laosa","Libāna","Lihtenšteina","Šrilanka","Libērija","Lesoto","Lietuva","Luksemburga","Latvija","Lībija","Maroka","Monako","Moldova","Madagaskara","Maķedonija","Mali","Mongolija","Makao","Martinika","Mauritānija","Montserrata","Malta","Maurīcija","Maldīvija","Malāvija","Meksika","Malaizija","Mozambika","Namībija","Nigēra","Nigērija","Nikaragva","Nīderlande","Norvēģija","Nepāla","Jaunzēlande","Omāna","Panama","Peru","Filipīnas","Pakistāna","Polija","Puertoriko","Portugāle","Paragvaja","Katara","Rumānija","Krievija","Ruanda","Saūda Arābija","Sudāna","Zviedrija","Singapūra","Slovēnija","Slovākija","Sjerraleone","Sanmarīno","Senegāla","Somālija","Surinama","Salvadora","Sīrija","Svazilenda","Čada","Togo","Taizeme","Tadžikistāna","Turkmenistāna","Tunisija","Tonga","Turcija","Taivāna","Tanzānija","Ukraina","Uganda","Amerikas Savienotās Valstis","Urugvaja","Uzbekistāna","Venecuēla","Vjetnama","Jemena","Zambija","Zimbabve"]})),n1=c((()=>{Ub=["Latvija"]})),i1=c((()=>{Wb=["LV####","LV-####"]})),r1=c((()=>{Zb=["dz. ###","- ###"]})),t1=c((()=>{qb=["Aizkraukles raj.","Alūksnes raj.","Baltijas jūra","Balvu raj.","Bauskas raj.","Cēsu raj.","Daugavpils raj.","Dobeles raj.","Gulbenes raj.","Jēkabpils raj.","Jelgavas raj.","Jūrmala","Krāslavas raj.","Kuldīgas raj.","Liepājas raj.","Limbažu raj.","Ludzas raj.","Madonas raj.","Ogres raj.","Preiļu raj.","Rēzeknes raj.","Rīga un Rīgas raj.","Saldus raj.","Talsu raj.","Tukuma raj.","Valkas raj.","Valmieras raj.","Ventspils raj."]})),o1=c((()=>{Qb=["#{street_name} #{building_number}","#{street_name} #{building_number} #{secondary_address}"]})),s1=c((()=>{Yb=["#{Address.street_title} #{street_suffix}"]})),l1=c((()=>{$b=["iela","bulvāris","gatve","gāte","laukums","dambis"]})),u1=c((()=>{Xb=["13. janvāra","Admirāļu","Airītes","Akaču","Akadēmijas","Akadēmiķa Mstislava Keldiša","Akāciju","Aklā","Akmeņu","Aleksandra Bieziņa","Aleksandra Čaka","Alfrēda Kalniņa","Alīses","Alksnāja","Amālijas","Anglikāņu","Anniņmuižas","Anniņmuižas","Apakšgrāvja","Apmetņu","Apriķu","Arsenāla","Artilērijas","Asītes","Atgāzenes","Atgriežu","Atpūtas","Audēju","Augļu","Augšiela","Augšzemes","Ābolu","Āpšu","Ārlavas","Babītes","Baložu","Baumaņa","Bārbeles","Bārddziņu","Bāriņu","Bātas","Beverīnas","Bērzlapu","Bērzupes","Bieķensalas","Biešu","Bišu","Bīskapa","Blaumaņa","Blīdenes","Bramberģes","Brigādes","Briņģu","Brīvības","Brīvības","Bruņinieku","Brūkleņu","Bukaišu","Centrāltirgus","Cepļa","Cēres","Cigoriņu","Cīruļu","Čuguna","Dandāles","Dauguļu","Dāliju","Dārzaugļu","Dārzciema","Dārziņu","Dignājas","Dikļu","Dīķa","Dreiliņu","Dricānu","Dzelzceļa","Dzeņu","Dzērvju","Džūkstes","Ernesta Birznieka-Upīša","Ernestīnes","Ērgļu","Festivāla","Firsa Sadovņikova","Friča Brīvzemnieka","Fridriķa","Gaiziņa","Gleznotāju","Glūdas","Gogoļa","Granīta","Grebenščikova","Grenču","Grēcinieku","Grēdu","Grīšļu","Grobiņas","Ģertrūdes","Ģimnastikas","Hermaņa","Ikšķiles","Ilmājas","Indriķa","Inženieru","Īsā","Īvandes","Īves","Jasmuižas","Jāņa","Jāņa Asara","Jāņa Čakstes","Jāņa Endzelīna","Jāņa Grestes","Jāņavārtu","Jāņogu","Jēkaba","Jēkabpils","Jēzusbaznīcas","Jukuma Vācieša","Jūrkalnes","Kalēju","Kalētu","Kaļķu","Kameņu","Kaņiera","Kapseļu","Kartupeļu","Katoļu","Kāļu","Kārļa Ulmaņa","Kārsavas","Klāņu","Komētas","Konrāda","Kraukļu","Krāmu","Krāslavas","Krāsotāju","Krišjāņa Barona","Krišjāņa Valdemāra","Krīdenera","Krūzes","Kukšu","Kursīšu","Kviešu","Ķekavas","Ķemeru","Ķengaraga","Ķēniņu","Ķivuļu","Latviešu strēlnieku","Lavīzes","Lāčplēša","Lieģu","Liepājas","Lībagu","Līdaku","Līdera","Līksnas","Līvānu","Līvciema","Līves","Lokomotīves","Lubānas","Ludviķa","Lutriņu","Ļaudonas","Ļermontova","Magoņu","Makša","Malēju","Matīsa","Mazā Bauskas","Mazā Bišu","Mazā Cepļa","Mazā Jaunavu","Mazā Kalna","Mazā Krasta","Mazā Lubānas","Mazā Matīsa","Mazā Miesnieku","Mazā Monētu","Mazā Muzeja","Mazā Nometņu","Mazā Pils","Mazā Smilšu","Mazā Stērstu","Mazā Trokšņu","Mālu","Māras aleja","Mārstaļu","Mārupes","Merķeļa","Mežkalna","Mežmalas","Mežotnes","Mēmeles","Mērsraga","Mūku","Mūkupurva","Mūkusalas","Mūrnieku","Naudītes","Nāras","Neļķu","Nēģu","Nīgrandes","Nīkrāces","Ojāra Vācieša","Olīvu","Ormaņu","Pampāļu","Paula Lejiņa","Pārmiju","Pārslas","Pērkones","Pērnavas","Pērses","Pēterbaznīcas","Pilsoņu","Pīpeņu","Planīcas","Plaužu","Pleskodāles","Plēnes","Plēsuma","Plūmju","Pļavas","Pļaviņu","Pļavnieku","Poļu","Prāgas","Preiļu","Prūšu","Purmsātu","Puškina","Pūpolu","Raiņa","Raņķa","Raušu","Rāceņu","Rencēnu","Rēzeknes","Rēznas","Riharda Vāgnera","Rikšotāju","Rīdzenes","Rītausmas","Rītupes","Robežu","Rubeņkalna","Rudbāržu","Rušonu","Rūdolfa","Rūjienas","Rūsiņa","Sapņu","Sarkanā","Sārtes","Sātiņu","Sējas","Sērenes","Sieksātes","Sīpeles","Sīpolu","Skaņu","Skārņu","Skrīnes","Slāvu","Smārdes","Smilšu","Spaļu","Sparģeļu","Spāres","Spārnu","Speķa","Spīdolas","Spīķeru","Staļģenes","Stāvā","Stērstu","Stopiņu","Strenču","Strūgu","Suntažu","Sūnu","Svētes","Šampētera","Šaurā","Šautuves","Šķirotavas","Šķūņu","Tadaiķu","Taisnā","Teātra","Tempļa","Terēzes","Tējas","Tērbatas","Tēriņu","Tērvetes","Tipogrāfijas","Tirgoņu","Tīnūžu","Tīraines","Tīreļa","Tīruma","Torņa","Torņakalna","Trokšņu","Turgeņeva","Ugāles","Upesgrīvas","Ūbeles","Ūdensvada","Vaiņodes","Valdeķu","Valtaiķu","Vaļņu","Varakļānu","Varšavas","Vārnu","Vecpilsētas","Velēnu","Vēja","Vienības","Viesītes","Viļānu","Virānes","Virsaišu","Visvalža","Višķu","Zaķu","Zaļenieku","Zāļu","Zeltiņu","Zeļļu","Zemaišu","Zemitāna","Zemītes","Zuteņu","Zvaigžņu","Zvārdes","Zvārtavas","Žaņa Lipkes","Žīguru","Žubīšu"]})),c1=c((()=>{$0(),X0(),e1(),a1(),n1(),i1(),r1(),t1(),o1(),s1(),l1(),u1(),eS={building_number:Gb,city:Hb,city_name:Fb,country:Jb,default_country:Ub,postcode:Wb,secondary_address:Zb,state:qb,street_address:Qb,street_name:Yb,street_suffix:$b,street_title:Xb}})),d1=c((()=>{aS=["2#######","(371) 2#######","+371 2#######"]})),h1=c((()=>{d1(),nS={formats:aS}})),p1=c((()=>{iS=["sarkana","zaļa","zila","dzeltena","ruda","zaļgan-zila","balta","melna","oranža","rozā","pelēka","sarkan-brūna","violeta","gaišzila","zeltaina","debess-zila","olīv","purpura","krēma","zelta","красно-пурпурный","lillā","sudrabaina"]})),m1=c((()=>{rS=["Grāmatu","Filmu","Mūzikas","Spēļu","Elektronikas","Datoru","Mājas","Dārzkopības","Bakaleja","Veselības","Skaistuma","Rotaļlietu","Bērnu","Zīdaiņu","Apģerba","Apavu","Dārglietu","Sporta","Tūrisma","Auto","Rūpniecības"]})),f1=c((()=>{tS={adjective:["Mazs","Ergonomisks","Raupjš","Vieds","Lielisks","Neticams","Fantastisks","Praktisks","Spalvains","Ciets","Mīksts","Rūgts"],material:["dzelzs","koka","betona","plastmasas","kokvilnas","granīta","gumijas"],product:["krēsls","auto","dators","siksna","gredzens","galds","džemperis","zābaks","kažoks","radio","skaļrunis","monitors","televizors","skapis","ritenis","plakāts","ceļarullis","nazis","plāksteris","telefons","pončiks"]}})),v1=c((()=>{p1(),m1(),f1(),oS={color:iS,department:rS,product_name:tS}})),g1=c((()=>{sS=["#{prefix} #{Name.male_last_name}","#{prefix} #{Name.male_last_name} #{suffix}","#{prefix} #{Name.female_last_name} #{suffix}","#{Name.male_last_name} un #{Name.male_last_name}","#{Name.male_last_name}, #{Name.male_last_name} un #{Name.male_last_name}"]})),k1=c((()=>{lS=["SIA","AS","IU","Bezp.Org.","Firma","Biedrība"]})),y1=c((()=>{uS=["un partneri","holdings","grupa","aģentūra"]})),b1=c((()=>{g1(),k1(),y1(),cS={name:sS,prefix:lS,suffix:uS}})),S1=c((()=>{dS={wide:["janvāris","februāris","marts","aprīlis","maijs","jūnijs","jūlijs","augusts","septembris","oktobris","novembris","decembris"],wide_context:["janvārī","februārī","martā","aprīlī","maijā","jūnijā","jūlijā","augustā","septembrī","oktobrī","novembrī","decembrī"],abbr:["jan.","feb.","mar.","apr.","mai.","jūn.","jūl.","aug.","sep.","okt.","nov.","dec."],abbr_context:["janv.","febr.","mar.","apr.","mai.","jūn.","jūl.","aug.","sept.","okt.","nov.","dec."]}})),A1=c((()=>{hS={wide:["Svētdiena","Pirmdiena","Otrdiena","Trešdiena","Ceturtdiena","Piektdiena","Sestdiena"],wide_context:["svētdien","pirmdien","otrdien","trešdien","ceturtdien","piektdien","sestdien"],abbr:["Pr","Ot","Tr","Ct","Pk","Se","Sv"],abbr_context:["sv.","pr.","otr.","tr.","cet.","pk.","se."]}})),M1=c((()=>{S1(),A1(),pS={month:dS,weekday:hS}})),T1=c((()=>{mS=["lv","com","info","net","org"]})),_1=c((()=>{fS=["inbox.lv","one.lv","mail.lv","outlook.lv","apollo.lv","yahoo.com","hotmail.com","gmail.com"]})),w1=c((()=>{T1(),_1(),vS={domain_suffix:mS,free_email:fS}})),j1=c((()=>{gS=["ābbās","ābduco","ābēo","ābscīdo","ābscondītus","ābsēns","ābsorbēo","ābsquē","ābstērgo","ābsum","ābundāns","ābutor","āccēdo","āccēndo","āccēptus","āccīpīo","āccommodo","āccusātor","ācēr","ācērbītās","ācērvus","ācīdus","ācīēs","ācquīro","ācsī","ādāmo","ādāugēo","āddo","ādduco","ādēmptīo","ādēo","ādēptīo","ādfēctus","ādfēro","ādfīcīo","ādflīcto","ādhāēro","ādhuc","ādīcīo","ādīmplēo","ādīnvēntītīās","ādīpīscor","ādīuvo","ādmīnīstrātīo","ādmīrātīo","ādmītto","ādmonēo","ādmovēo","ādnuo","ādopto","ādsīduē","ādstrīngo","ādsuēsco","ādsum","ādulātīo","ādulēscēns","ādultus","āduro","ādvēnīo","ādvērsus","ādvoco","āēdīfīcīum","āēgēr","āēgrē","āēgrotātīo","āēgrus","āēnēus","āēquītās","āēquus","āēr","āēstās","āēstīvus","āēstus","āētās","āētērnus","āgēr","āggēro","āggrēdīor","āgnītīo","āgnosco","āgo","āīt","āīunt","ālīēnus","ālīī","ālīoquī","ālīquā","ālīus","āllātus","ālo","āltēr","āltus","ālvēus","āmārītudo","āmbītus","āmbulo","āmīcītīā","āmīculum","āmīssīo","āmītā","āmītto","āmo","āmor","āmovēo","āmplēxus","āmplītudo","āmplus","āncīllā","āngēlus","āngulus","āngustus","ānīmādvērto","ānīmī","ānīmus","ānnus","ānsēr","āntē","āntēā","āntēpono","āntīquus","āpērīo","āpērtē","āpostolus","āppārātus","āppēllo","āppono","āpposītus","āpprobo","āpto","āptus","āpud","āquā","ārā","ārānēā","ārbītro","ārbor","ārbustum","ārcā","ārcēo","ārcēsso","ārcus","ārgēntum","ārgumēntum","ārguo","ārmā","ārmārīum","ārmo","āro","ārs","ārtīculus","ārtīfīcīosē","ārto","ārx","āscīsco","āscīt","āspēr","āspīcīo","āsporto","āssēntātor","āstrum","ātāvus","ātēr","ātquī","ātrocītās","ātrox","āttēro","āttollo","āttonbītus","āuctor","āuctus","āudācīā","āudāx","āudēntīā","āudēo","āudīo","āudītor","āufēro","āurēus","āurīs","āurum","āut","āutēm","āutus","āuxīlīum","āvārītīā","āvārus","āvēho","āvērto","āvoco","bāīulus","bālbus","bārbā","bārdus","bāsīum","bēātus","bēllīcus","bēllum","bēnē","bēnēfīcīum","bēnēvolēntīā","bēnīgnē","bēstīā","bībo","bīs","blāndīor","boņus","boš","brēvīs","cādo","cāēcus","cāēlēstīs","cāēlum","cālāmītās","cālcār","cālco","cālculus","cāllīdē","cāmpānā","cāndīdus","cānīs","cānonīcus","cānto","cāpīllus","cāpīo","cāpītulus","cāpto","cāput","cārbo","cārcēr","cārēo","cārīēs","cārīosus","cārītās","cārmēn","cārpo","cārus","cāsso","cāstē","cāsus","cātēnā","cātērvā","cāttus","cāudā","cāusā","cāutē","cāvēo","cāvus","cēdo","cēlēbrēr","cēlēr","cēlo","cēnā","cēnāculum","cēno","cēnsurā","cēntum","cērno","cērnuus","cērtē","cērto","cērtus","cērvus","cētērā","chārīsmā","chīrogrāphum","cībo","cībus","cīcutā","cīlīcīum","cīmēntārīus","cīmīnātīo","cīnīs","cīrcumvēnīo","cīto","cīvīs","cīvītās","clām","clāmo","clāro","clārus","clāudēo","clāustrum","clēmēntīā","clībānus","coādunātīo","coāēgrēsco","coēpī","coērcēo","cogīto","cognātus","cognomēn","čoģo","cohāēro","cohībēo","čohors","collīgo","coļļoco","coļļum","coļo","coļor","comā","combībo","comburo","comēdo","comēs","comētēs","comīs","comītātus","commēmoro","commīnor","čommodo","communīs","compāro","compēllo","complēctus","compoņo","comprēhēndo","comptuš","conātus","concēdo","concīdo","cončūlko","condīco","coņduco","confēro","confīdo","coņforto","confuģo","congrēgātīo","conīcīo","conīēcto","conītor","conīurātīo","coņor","conquēror","conscēndo","consērvo","consīdēro","conspērgo","constāns","consuāsor","contābēsco","contēgo","contīgo","contrā","conturbo","convēntus","coņvoco","copīā","copīosē","corņu","coronā","corpuš","corrēptīus","corrīgo","corroboro","corrumpo","coruscus","cotīdīē","crāpulā","crās","crāstīnus","crēātor","crēbēr","crēbro","crēdo","crēo","crēptīo","crēpusculum","crēsco","crētā","crībro","crīnīs","crucīāmēntum","crudēlīs","cruēntus","crūr","crustulum","crūx","cubīculārīs","cubītum","čūbo","cuī","cuīus","culpā","cuļpo","cultēllus","culturā","cūm","cunābulā","cunāē","cunctātīo","cupīdītās","cupīo","cuppēdīā","cuprēssus","cūr","curā","curātīo","curīā","curīosītās","curīs","cūro","currīculum","currūs","cursīm","curšo","curšus","cūrto","curtūs","cūrvo","čurvus","custodīā","dāmnātīo","dāmno","dāpīfēr","dēbēo","dēbīlīto","dēcēns","dēcērno","dēcēt","dēcīmus","dēcīpīo","dēcor","dēcrētum","dēcumbo","dēdēcor","dēdīco","dēduco","dēfāēco","dēfēndo","dēfēro","dēfēssus","dēfētīscor","dēfīcīo","dēfīgo","dēflēo","dēfluo","dēfungo","dēgēnēro","dēgēro","dēgusto","dēīndē","dēlēctātīo","dēlēgo","dēlēo","dēlībēro","dēlīcātē","dēlīnquo","dēludo","dēmēns","dēmērgo","dēmītto","dēmo","dēmonstro","dēmoror","dēmulcēo","dēmum","dēnēgo","dēnīquē","dēns","dēnuncīo","dēnuo","dēorsum","dēpērēo","dēpono","dēpopulo","dēporto","dēprāēdor","dēprēcātor","dēprīmo","dēpromo","dēpulso","dēputo","dērēlīnquo","dērīdēo","dērīpīo","dēsīdēro","dēsīno","dēsīpīo","dēsolo","dēspārātus","dēspēcto","dēspīrmātīo","īnfīt","īnflāmmātīo","ocēr","pāēns","pātīor","pātrīā","pātrocīnor","pātruus","pāucī","pāulātīm","pāupēr","pāx","pēccātus","pēcco","pēcto","pēctus","pēcunīā","pēcus","pēīor","pēl","socīus","sodālītās","soļ","solēo","solīo","solītudo","solīum","sollērs","sollīcīto","soļum","soluš","soļutīo","soļvo","somnīculosus","somņus","soņītus","soņo","sophīsmātā","šopor","sordēo","sortītus","spārgo","spēcīosus","spēctāculum","spēculum","spērno","spēro","spēs","spīculum","spīrītus","spolīātīo","spontē","stābīlīs","stātīm","stātuā","stēllā","stīllīcīdīum","stīpēs","stīps","što","strēnuus","struēs","studīo","stuļtus","suādēo","suāsorīā","sūb","subīto","subīungo","sublīmē","subnēcto","subsēco","substāntīā","subvēnīo","succēdo","succurro","suffīcīo","suffočo","suffrāgīum","suggēro","suī","suļūm","sūm","summā","summīssē","summopērē","sūmo","sumptus","supēllēx","supēr","suppēllēx","supplānto","suppono","suprā","surčūlus","surģo","suršum","suscīpīo","suspēndo","sustīnēo","suūs","synāgogā","tābēllā","tābērnus","tābēsco","tābgo","tābulā","tācēo","tāctus","tāēdīum","tālīo","tālīs","tālus","tām","tāmdīu","tāmēn","tāmētsī","tāmīsīum","tāmquām","tāndēm","tāntīllus","tāntum","tārdus","tēgo","tēmērītās","tēmpērāntīā","tēmplum","tēmptātīo","tēmpus","tēnāx","tēndo","tēnēo","tēnēr","tēnuīs","tēnus","tēpēsco","tēpīdus","tēr","tērēbro","tērēs","tērgā","tērgēo","tērgīvērsātīo","tērgo","tērgum","tērmēs","tērmīnātīo","tēro","tērrā","tērrēo","tērrīto","tērror","tērsus","tērtīus","tēstīmonīum","tēxo","tēxtīlīs","tēxtor","tēxtus","thālāssīnus","thēātrum","thēcā","thēmā","thēologus","thērmāē","thēsāurus","thēsīs","thorāx","thymbrā","thymūm","tībī","tīmīdus","tīmor","tītulus","tolēro","toļļo","tondēo","toņšor","torquēo","torrēns","tot","totīdēm","totīēs","totūs","trācto","trādo","trāho","trāns","trēdēcīm","trēmo","trēpīdē","trēs","trībuo","trīcēsīmus","trīduānā","trīgīntā","trīpudīo","trīstīs","trīumphus","trucīdo","truculēntēr","tubīnēus","tuī","tūm","tumuļtus","tūnč","turbā","tūrbo","turpē","turpīs","tutāmēn","tutīs","tyrānnus","ubērrīmē","ubī","ulcīscor","ullūs","ultērīus","ultīo","ultrā","umbrā","umērus","umquām","unā","undē","undīquē","unīvērsē","unūs","urbānus","urbš","urēdo","usītās","usquē","ustīlo","ustulo","ušūs","utēr","utērquē","utīlīs","utīquē","ūtor","utpotē","utrīmquē","utroquē","utrūm","ūxor","vāco","vācuus","vādo","vāē","vāldē","vālēns","vālēo","vālētudo","vālīdus","vāllum","vāpulus","vārīētās","vārīus","vēhēmēns","vēl","vēlocītēr","vēlum","vēlut","vēnīā","vēnīo","vēntīto","vēntosus","vēntus","vēnustās","vēr","vērbērā","vērbum","vērē","vērēcundīā","vērēor","vērgo","vērītās","vēro","vērsus","vērto","vērumtāmēn","vērus","vēsco","vēsīcā","vēspēr","vēspīllo","vēstēr","vēstīgīum","vēstrum","vētus","vīā","vīcīnus","vīcīssītudo","vīctorīā","vīctus","vīdēlīcēt","vīdēo","vīduātā","vīduo","vīgīlo","vīgor","vīlīcus","vīlīs","vīlītās","vīllā","vīnco","vīnculum","vīndīco","vīnītor","vīnum","vīr","vīrgā","vīrgo","vīrīdīs","vīrīlītēr","vīrtus","vīs","vīscus","vītā","vītīosus","vītīum","vīto","vīvo","vīx","vobīs","vocīfēror","vočo","volātīcus","voļo","volubīlīs","voluntārīus","volūp","volutābrum","volvā","vomēr","vomīcā","vomīto","vorāgo","vorāx","voro","vos","votūm","vovēo","vox","vulārītēr","vulgārīs","vulgīvāgus","vulgo","vulgus","vulnēro","vuļņus","vulpēs","vultīculus","vultūosus","xīphīās"]})),E1=c((()=>{kS=["ā","āb","āččūšāmūš","āččūšāņtīūm","ād","ādīpīščī","āļīāš","āļīqūām","āļīqūīd","āmēt","āņīmī","āpērīām","ārčhītēčto","āšpērīorēš","āšpērņātūr","āššūmēņdā","āt","ātqūē","āūt","āūtēm","āūtēm","bēātāē","bļāņdītīīš","čommodī","čoņšēčtētūr","čoņšēqūātūr","čoņšēqūūņtūr","čorporīš","čorrūptī","čūļpā","čūm","čūmqūē","čūpīdītātē","dēbītīš","dēļēčtūš","dēļēņītī","dēšērūņt","dīčtā","dīģņīššīmoš","dīštīņčtīo","doļor","doļorē","doļorēm","doļorēmqūē","doļorēš","doļorībūš","doļorūm","dūčīmūš","ēā","ēāqūē","ēārūm","ēīūš","ēļīģēņdī","ēņīm","ēoš","ērror","ēššē","ēšt","ēt","ēūm","ēvēņīēt","ēx","ēxčēptūrī","ēxērčītātīoņēm","ēxpēdītā","ēxpļīčābo","fāčērē","fāčīļīš","fūģā","fūģīāt","fūģīt","hārūm","hīč","īd","īļļo","īļļūm","īmpēdīt","īņ","īņčīdūņt","īņvēņtorē","īpšā","īpšām","īpšūm","īštē","ītāqūē","īūrē","īūšto","ļāborē","ļāborīošām","ļāborūm","ļāūdāņtīūm","ļībēro","māģņām","māģņī","māīorēš","māxīmē","mīņīmā","mīņūš","modī","moļēštīāē","moļēštīāš","moļļītīā","ņām","ņātūš","ņēčēššītātībūš","ņēmo","ņēqūē","ņēščīūņt","ņīhīļ","ņīšī","ņobīš","ņoņ","ņoštrūm","ņūļļā","ņūmqūām","oččāēčātī","odīo","odīt","offīčīā","offīčīīš","omņīš","optīo","pārīātūr","pērfērēņdīš","pēršpīčīātīš","pļāčēāt","porro","poššīmūš","prāēšēņtīūm","provīdēņt","qūāē","qūāērāt","qūām","qūāš","qūāšī","qūī","qūīā","qūībūšdām","qūīdēm","qūīš","qūīšqūām","qūo","qūod","qūoš","rātīoņē","rēčūšāņdāē","rēīčīēņdīš","rēm","rēpēļļāt","rēpēļļēņdūš","rēprēhēņdērīt","rēpūdīāņdāē","rērūm","šāēpē","šāpīēņtē","šēd","šēqūī","šīmīļīqūē","šīņt","šīt","šoļūtā","šūņt","šūščīpīt","tēmporā","tēmporē","tēmporībūš","tēņētūr","totām","ūļļām","ūņdē","ūt","vēļ","vēļīt","vēņīām","vērītātīš","vēro","vītāē","voļūptāš","voļūptāš","voļūptātē","voļūptātēm","voļūptātēš","voļūptātībūš","voļūptātūm"]})),N1=c((()=>{j1(),E1(),yS={supplemental:gS,words:kS}})),B1=c((()=>{bS=["Aīda","Akvelīna","Albertīne","Alvīne","Amālija","Astrīda","Aurēlija","Ārija","Baņuta","Bārbala","Beāte","Dagmāra","Dainuvīte","Dārta","Diāna","Dzirkstīte","Dzīle","Edīte","Elfrīda","Elīna","Elīza","Elmīra","Elvīra","Emīlija","Ernestīne","Evelīna","Ērika","Frīda","Gabriela","Gudrīte","Ģertrūde","Helēna","Hermīne","Ināra","Ingrīda","Ingūna","Irēna","Īrisa","Janīna","Jasmīna","Jautrīte","Judīte","Justīne","Jūlija","Jūsma","Karīna","Katrīna","Klāra","Kristiāna","Kristīne","Lavīze","Lāsma","Leonīda","Leontīne","Liāna","Liliāna","Lība","Līga","Līksma","Līna","Līva","Līvija","Līze","Luīze","Lūcija","Malvīne","Māra","Mārīte","Mētra","Modrīte","Mudīte","Olīvija","Otīlija","Patrīcija","Paulīne","Pārsla","Regīna","Renāte","Rudīte","Rūta","Sabīne","Sarmīte","Saulcerīte","Skaidrīte","Spīdola","Tamāra","Terēze","Tīna","Trīne","Undīne","Valentīna","Valērija","Vēsma","Vijolīte","Vilhelmīne","Vizbulīte","Zeltīte","Ziedīte","Zigfrīda","Zigrīda","Zīle","Žanete","Žanna","Ženija","Žubīte"]})),P1=c((()=>{SS=["Aigare","Alksne","Andersone","Aspere","Auziņa","Ābele","Āboliņa","Āboltiņa","Balode","Beļavske","Bergmane","Bērziņa","Bērzīte","Birziņa","Birzniece","Bīriņa","Blaua","Blekte","Breņķe","Briede","Brunkeviča","Buile","Buša","Cauna","Cālīte","Cīrule","Čudara","Danielsone","Dīriķe","Dombrovska","Dreimane","Dzene","Eglīte","Endziņa","Fogele","Freimane","Gaile","Gailīte","Gibala","Graudiņa","Gribuste","Grīnberga","Grūba","Jansone","Jēkabsone","Jukuma","Kalēja","Kalniņa","Karlsone","Kauliņa","Kārkliņa","Kļaviņa","Koha","Koka","Krance","Krastiņa","Kraule","Krauze","Krēsliņa","Krieviņa","Krieva","Kronberga","Krūmiņa","Kulmane","Laiviņa","Landmane","Lapiņa","Lapsiņa","Lasmane","Lauberga","Lāce","Legzdiņa","Lielmane","Liepiņa","Līce","Līdaka","Loča","Lodiņa","Lūse","Matisone","Medne","Meiere","Mekša","Meldere","Melngaile","Mihailova","Miķelsone","Niedra","Ose","Ostrovska","Ozere","Ozoliņa","Ozola","Paltere","Pavlovska","Pence","Petrovska","Pērkona","Pētersone","Podziņa","Pole","Pretkalniņa","Priedīte","Puķīte","Putniņa","Riekstiņa","Romanovska","Rozenbaha","Rozīte","Rubene","Rudzīte","Runce","Salmiņa","Seržante","Sietniece","Siliņa","Sīle","Skudra","Smuģe","Sproģe","Sprūde","Strautiņa","Strautmane","Strazdiņa","Širova","Šīrante","Šmite","Šteina","Tālberga","Teicāne","Tiltiņa","Tīrele","Tuča","Ūdre","Valtere","Vasile","Vecumniece","Veinberga","Veisa","Vilka","Vilsone","Viļuma","Vintere","Vītiņa","Vītoliņa","Vītola","Vītuma","Volle","Zariņa","Zālīte","Zeidmane","Zeltiņa","Ziemele","Zībere","Zunda","Zvaigzne","Zvejniece","Zvinele","Muceniece","Meldere","Dzirkale","Arāja","Sējēja","Podniece","Ratniece","Deģe","Bondare","Sondore","Namiķe","Jumiķe","Muižniece","Bajāre","Ķēniņa","Ķeizare","Barone","Vaivade","Zviedre","Vāciete","Lejiņa","Vanaga","Rubene","Celma","Liepa","Kalna","Celmiņa","Lejniece","Biseniece","Kurzemniece","Sauliete","Pakalniete","Pridāne","Groduma","Kalnāja","Porgante","Sukute","Meškūna","Rožkalne","Mazjāne","Latkovska","Jankovska","Šileiko","Budreiko","Ivanova","Morozova","Logina","Gasjūne","Pauļuka","Sosāre","Meškūne"]})),L1=c((()=>{AS=["Ainārs","Alfrēds","Aloīzs","Aļģirds","Aļģis","Andris","Andžejs","Andžs","Anrijs","Anšlavs","Arkādijs","Armīns","Artūrs","Arvīds","Ādams","Ādolfs","Ārijs","Āris","Boļeslavs","Broņislavs","Dāgs","Dāvids","Dāvis","Edgars","Edvīns","Eduards","Edžus","Egīls","Einārs","Eižens","Elmārs","Emīls","Ermīns","Ervīns","Ēriks","Ēvalds","Gunārs","Ģederts","Ģirts","Ilgmārs","Ilmārs","Inārs","Indriķis","Ingmārs","Jānis","Jāzeps","Jevgeņijs","Jēkabs","Jurģis","Jūlijs","Kārlis","Klāvs","Konrāds","Konstantīns","Kristiāns","Krišjānis","Krišs","Leonīds","Marģers","Matīss","Mārcis","Māris","Mārtiņš","Miķelis","Monvīds","Niklāvs","Ojārs","Oļegs","Oļģerts","Pāvils","Pēteris","Regnārs","Renārs","Ričards","Romāns","Rūdis","Rūdolfs","Rūsiņš","Tālis","Tālivaldis","Tālrīts","Uģis","Valdemārs","Valentīns","Valērijs","Vilmārs","Vitālijs","Voldemārs","Zigfrīds","Zigmārs","Žanis"]})),D1=c((()=>{MS=["Aigars","Alksnis","Andersons","Aspers","Auziņš","Ābele","Āboliņš","Āboltiņš","Balodis","Beļavskis","Bergmanis","Bērziņš","Bērzīts","Birziņš","Birznieks","Bīriņš","Blaus","Blekte","Breņķis","Briedis","Brunkevičs","Builis","Bušs","Caune","Cālītis","Cīrulis","Čudars","Danielsons","Dīriķis","Dombrovskis","Dreimanis","Dzenis","Eglītis","Endziņš","Fogelis","Freimanis","Gailis","Gailītis","Gibala","Graudiņš","Gribusts","Grīnbergs","Grūbe","Jansons","Jēkabsons","Jukums","Kalējs","Kalniņš","Karlsons","Kauliņš","Kārkliņš","Kļaviņš","Kohs","Koks","Krancis","Krastiņš","Kraulis","Krauze","Krēsliņš","Krieviņš","Krievs","Kronbergs","Krūmiņš","Kulmanis","Laiviņš","Landmanis","Lapiņš","Lapsiņš","Lasmanis","Laubergs","Lācis","Legzdiņš","Lielmanis","Liepiņš","Līcis","Līdaks","Ločs","Lodiņš","Lūsis","Matisons","Mednis","Meiers","Mekšs","Melderis","Melngailis","Mihailovs","Miķelsons","Niedra","Osis","Ostrovskis","Ozers","Ozoliņš","Ozols","Palters","Pavlovskis","Pencis","Petrovskis","Pērkons","Pētersons","Podziņš","Polis","Pretkalniņš","Priedītis","Puķītis","Putniņš","Riekstiņš","Romanovskis","Rozenbahs","Rozītis","Rubenis","Rudzītis","Runcis","Salmiņš","Seržants","Sietnieks","Siliņš","Sīlis","Skudra","Smuģis","Sproģis","Sprūde","Strautiņš","Strautmanis","Strazdiņš","Širovs","Šīrants","Šmits","Šteins","Tālbergs","Teicāns","Tiltiņš","Tīrelis","Tučs","Ūdris","Valters","Vasils","Vecumnieks","Veinbergs","Veiss","Vilks","Vilsons","Viļums","Vinters","Vītiņš","Vītoliņš","Vītols","Vītums","Vollis","Zariņš","Zālītis","Zeidmanis","Zeltiņš","Ziemelis","Zībers","Zunda","Zvaigzne","Zvejnieks","Zvinelis","Mucenieks","Melderis","Dzirkalis","Arājs","Sējējs","Podnieks","Ratnieks","Deģis","Bondars","Sondors","Namiķis","Jumiķis","Muižnieks","Bajārs","Ķēniņš","Ķeizars","Barons","Vaivads","Zviedrs","Vācietis","Lejiņš","Vanags","Rubenis","Celms","Liepa","Kalns","Celmiņš","Lejnieks","Bisenieks","Kurzemnieks","Saulietis","Pakalnietis","Pridāns","Grodums","Kalnājs","Porgants","Sukuts","Meškūns","Rožkalns","Mazjānis","Latkovskis","Jankovskis","Šileiko","Budreiko","Ivanovs","Morozovs","Logins","Gasjūns","Pauļuks","Sosārs","Meškūns"]})),x1=c((()=>{TS=["#{prefix} #{male_first_name} #{male_last_name}","#{male_first_name} #{male_last_name}","#{male_last_name} #{male_first_name}","#{male_first_name} #{male_first_name} #{male_last_name}","#{male_first_name} #{male_last_name}-#{male_last_name}","##{prefix} {female_first_name} #{female_last_name}","#{female_first_name} #{female_last_name} #{suffix}","#{female_first_name} #{female_last_name}","#{female_last_name} #{female_first_name}","#{female_first_name} #{female_first_name} #{female_last_name}","#{female_first_name} #{female_last_name}-#{female_last_name}"]})),C1=c((()=>{_S=["Prof.","Dr.","Biedrs"]})),K1=c((()=>{wS=["k-dze","kundze"]})),R1=c((()=>{jS={descriptor:["Galvenais","Vecākais","Tiešo","Korporatīvās","Produktu","Reģionālās","Rajona","Klientu","Investīciju","Starptautiskās","Iekšējās","Personu"],level:["risinājumu","programmu","drošības","izpētes","mārketinga","vadības","izveides","integrāciju","funkcionalitātes","taktikas","identitātes","tirgus","grupas","nodaļas","pielietojumu","optimizācijas","operāciju","infrastruktūras","intraneta","sakaru","kvalitātes","mobilitātes","kontu","datu","kreatīvais","konfigurācijas","grāmatojumu","sadarbības","lietojamības","mērījumu"],job:["uzraugs","vadītājs","pārstāvis","oficieris","menedžers","inženieris","speciālists","direktors","koordinators","administrators","arhitekts","analītiķis","dizainers","plānotājs","pārraugs","tehniķis","izstrādātājs","producents","konsultants","asistents","aģents","stratēģis"]}})),z1=c((()=>{B1(),P1(),L1(),D1(),x1(),C1(),K1(),R1(),ES={female_first_name:bS,female_last_name:SS,male_first_name:AS,male_last_name:MS,name:TS,prefix:_S,suffix:wS,title:jS}})),O1=c((()=>{NS=["(371)6#######","+371 6#######","6#######"]})),I1=c((()=>{O1(),BS={formats:NS}})),V1=c((()=>{c1(),h1(),v1(),b1(),M1(),w1(),N1(),z1(),I1(),PS={title:"Latvian",separator:" un ",address:eS,cell_phone:nS,commerce:oS,company:cS,date:pS,internet:vS,lorem:yS,name:ES,phone_number:BS}})),G1=c((()=>{LS=["#","##","###"]})),H1=c((()=>{DS=["#{city_name}"]})),F1=c((()=>{xS=["Аеродром","Арачиново","Берово","Битола","Богданци","Боговиње","Босилово","Брвеница","Бутел","Валандово","Василево","Вевчани","Велес","Виница","Вранештица","Врапчиште","Гази Баба","Гевгелија","Гостивар","Градско","Дебар","Дебарца","Делчево","Демир Капија","Демир Хисар","Дојран","Долнени","Другово","Ѓорче Петров","Желино","Зајас","Зелениково","Зрновци","Илинден","Јегуновце","Кавадарци","Карбинци","Карпош","Кисела Вода","Кичево","Конче","Кочани","Кратово","Крива Паланка","Кривогаштани","Крушево","Куманово","Липково","Лозово","Маврово и Ростуше","Македонска Каменица","Македонски Брод","Могила","Неготино","Новаци","Ново Село","Осломеј","Охрид","Петровец","Пехчево","Пласница","Прилеп","Пробиштип","Радовиш","Ранковце","Ресен","Росоман","Сарај","Свети Николе","Скопје","Сопиште","Струга","Старо Нагоричане","Струмица","Студеничани","Теарце","Тетово","Центар","Центар Жупа","Чаир","Чашка","Чешиново-Облешево","Чучер-Сандево","Штип","Шуто Оризари"]})),J1=c((()=>{CS=["Авганистан","Австралија","Австрија","Азербејџан","Албанија","Алжир","Американска Самоа","Американски Девствени Острови","Ангила","Ангола","Андора","Антарктик","Антигва и Барбуда","Аргентина","Аруба","Бангладеш","Барбадос","Бахами","Бахреин","Белгија","Белиз","Белорусија","Бенин","Бермуда","Божиќен Остров","Боливија","Босна и Херцеговина","Боцвана","Бразил","Брег на Слоновата Коска","Британска Индоокеанска Територија","Британски Девствени Острови","Брунеј","Бугарија","Буркина Фасо","Бурунди","Бутан","Валис и Футуна","Вануату","Венецуела","Виетнам","Габон","Гамбија","Гана","Гваделуп","Гвајана","Гватемала","Гвинеја","Гвинеја-Бисао","Германија","Гернзи","Гибралтар","Гренада","Гренланд","Грузија","Грција","Гуам","Данска","Демократска Народна Република Кореја","Доминика","Доминиканска Република","Египет","Еквадор","Екваторска Гвинеја","Ел Салвадор","Еритреја","Ерменија","Есватини","Естонија","Етиопија","Замбија","Западна Сахара","Зелен ’Рт","Зимбабве","Израел","Индија","Индонезија","Ирак","Иран","Ирска","Исланд","Источен Тимор","Италија","Јамајка","Јапонија","Јемен","Јордан","Јужна Африка","Јужна Џорџија и Јужни Сендвички Острови","Казакстан","Кајмански Острови","Камбоџа","Камерун","Канада","Катар","Кенија","Кина","Кипар","Киргистан","Кирибати","Кокосови Острови","Колумбија","Комори","Конго","Костарика","Куба","Кувајт","Кукови Острови","Лаос","Лесото","Летонија","Либан","Либерија","Либија","Литванија","Лихтенштајн","Луксембург","Мавританија","Маврициус","Мадагаскар","Мајот","Макао","Македонија","Малави","Малдиви","Малезија","Мали","Мали оддалечени острови на САД","Малта","Мароко","Мартиник","Маршалски Острови","Мексико","Микронезија","Мјанмар","Мозамбик","Молдавија","Монако","Монголија","Монтсерат","Намибија","Науру","Непал","Нигер","Нигерија","Никарагва","Ниуе","Нова Каледонија","Нов Зеланд","Норвешка","Норфолшски Остров","Обединети Арапски Емирати","Обединето Кралство","Оман","Остров Буве","Остров Ман","Остров Хард и острови Мекдоналд","Пакистан","Палау","Палестина (автономни територии)","Панама","Папуа Нова Гвинеја","Парагвај","Перу","Питкернски Острови","Полска","Порторико","Португалија","Реинион","Република Кореја","Романија","Руанда","Русија","Самоа","Сан Марино","Сао Томе и Принсипе","Саудиска Арабија","Свалбард и Јан Мајен","Света Елена (остров)","Света Луција","Света Столица (Држава на градот Ватикан)","Свети Вартоломеј","Свети Винсент и Гренадини","Свети Кристофер и Невис","Свети Мартин (остров)","Свети Пјер и Микелон","Северни Маријански Острови","Сејшели","Сенегал","Сиера Леоне","Сингапур","Сирија","Словачка","Словенија","Соединети Американски Држави","Соломонски Острови","Сомалија","Србија","Судан","Суринам","Тајван","Тајланд","Танзанија","Таџикистан","Того","Токелау","Тонга","Тринидад и Тобаго","Тувалу","Тунис","Туркменистан","Туркс и Кајкос","Турција","Уганда","Узбекистан","Украина","Унгарија","Уругвај","Фарски Острови","Филипини","Финска","Фиџи","Фолкландски Острови","Франција","Француска Гвајана","Француска Полинезија","Француски јужни и арктички територии","Хаити","Холандија","Холандски Антили","Хонгконг","Хондурас","Хрватска","Централноафриканската Република","Црна Гора","Чад","Чешка","Чиле","Џерси","Џибути","Швајцарија","Шведска","Шпанија","Шри Ланка"]})),U1=c((()=>{KS=["Македонија"]})),W1=c((()=>{RS=["####"]})),Z1=c((()=>{zS=["кат #","стан ##"]})),q1=c((()=>{OS=["11. Октомври","12. Македонска Народноослободителна Ударна Бригада","13. Август","13. Ноември","14. Декември","15. Македонски Корпус","20. Октомври","23. Октомври","50. Македонска Дивизија","8. Март","8. Септември","9. Мај","Аврам Пишевски","Австралиска","Александар Бујанов","Александар Македонски","Александар Македонски","Александар Мартулков","Александар Пушкин","Александар Турунџев","Александар Урдаревски - Санде","Алексо Демниевски - Бауман","Алжирска","Аминта III","Анастас Митрев","Ангел Винички","Ангел Димовски","Ангел Динев","Андон Дуков","Андон Кецкаров","Андон Папрадишки","Андон Тошев","Андреа Зограф","Анкарска","Анте Хаџи Митков","Антифашистички Фронт на Жените","Антифашистичко Собрание на Народното Ослободување на Македонија","Антон Панов","Антон Попов","Антон Чехов","Апостол Гусларот","Апостол Петков","Арсениј Јовков","Арсо Мицков","Архиепископ Ангелариј","Архиепископ Доситеj","Архимедова","Архитект Сотир Томовски","Атанас Димитров - Бабата","Атанас Иљовски","Атанас Раздолов","Атинска","Ацо Караманов","Ацо Шопов","Бабуна","Багдадска","Балканска","Банатска","Баница","Банско","Бардовечки Пат","Беласица","Белградска","Бел Камен","Белчишка","Беровска","Бертранд Расел","Бистра","Бетовенова","Битолска","Битпазарска","Благоја Вујов","Благоја Гојан","Благоја Стефковски","Благој Давков - Блацки","Благој Деспотовски - Шовељ","Благој Јанков - Мучето","Благој Страчков","Блаже Крстев - Биринчето","Блажо Нешков","Бледски Договор","Богомилски Поход","Божидар Аџија","Божин Николов - Силни","Божин Стизов","Божин Стојков","Бојаџиска","Боривој Милошевски","Борис Бојаџиски","Борис Кидрич","Борис Сарафов","Борис Траjковски","Борка Талески","Боро Боцевски - Боте","Боро Камчевски","Боро Кралевски","Боро Менков","Боро Петрушевски","Боца Ивановска","Браќа Галеви","Браќа Кошулчеви","Бранко Заревски","Брегалница","Бриселска","Будимпештанска","Букурешка","Бутелска","Бутелски Венец","Валандовска","Вангел Тодоровски - Мајорот","Ванчо Мицков","Вардар","Вардарска","Варшавска","Васил Аџиларски","Васил Главинов","Васил Ѓоргов","Васил Стефановски","Васил Чакаларов","Васко Карајанов","Васко Карангелески","Ваташа","Веле Марков","Велешка","Венијамин Мачуковски","Вера Циривири - Трена","Видое Смилевски - Бато","Виенска","Виетнамска","Виктор Иго","Вилијам Шекспир","Виничка","Винсент Ван Гог","Владимир Каваев","Владимир Мајаковски","Владимир Полежиноски - Полежина","Влае","Внатрешна Македонска Револуционерна Организација","Воденска","Водоча","Војвода Ивец","Војдан Чернодрински","Волковска","Волфганг Амадеус Моцарт","Востаничка","Гаврил Лесновски","Гаврило Радомир","Галичица","Галичник","Гемиџиска","Георги Димитров","Георгиј Кастриот - Скендер Бег","Георги Казепов","Георги Пешков","Георги Поп Христов","Георги Стрижевски","Герман","Герника","Гиго Михајловски","Ѓорѓе Андреевиќ - Кун","Ѓорѓи Абаџиев","Ѓорѓи Динков - Динката","Ѓорѓија Пулески","Ѓорѓи Капчев","Ѓорѓи Костовски","Ѓорѓи Сугарев","Ѓоре Ѓорески","Горноврановска","Горно Лисиче","Ѓорче Петров","Гостиварска","Гоце Делчев","Григор Прличев","Груица Војвода","Ѓузепе Гарибалди","Ѓуро Малешевец","Ѓуро Салај","Ѓуро Стругар","Ѓурчин Кокале","Дабничка","Дамаска","Даме Груев","Дамјан Крапчев - Стари","Даскал Камче","Даутица","Дебарска","Дебарца","Дејан Војвода","Демир Трајко","Депа Кавајова","Дижонска","Диме Анцин","Диме Мечето","Димитар Благоев","Димитар Василев - Македонски","Димитар Влахов","Димитар Гуштанов","Димитар Мирачиев","Димитар Николовски - Таки Даскалот","Димитар Пандилов","Димитар Поп-Георгиев Беровски","Димитар Туриманџоски","Димитрија Чуповски","Димо Хаџи Димов","Димче Мирчев","Дичо Петров","Добри Даскалов","Драган Ѓаконовски - Шпато","Драга Стојановска","Драмска","Дрезденска","Дренак","Дреновска Клисура","Дринска","Дубровничка","Дурмиторска","Душко Бојковски","Евлија Челебија","Езерци","Елисие Поповски - Марко","Емил Зола","Ениџе Вардар","Ернесто Че Гевара","Ефтим Спространов","Жданец","Жеденска","Женевска","Живко Чинго","Жил Верн","Жорж Бизе","Загребска","Зејнел Ајдини","Зеленгора","Зеничка","Зеф Љуш Марку","Злате Михајловски","Златко Шнајдер","Ибе Паликуќа","Иван Аговски","Иван Козаров","Иван Мажураниќ","Иван Наумов - Алабакот","Иван Тургењев","Иван Хаџи Николов","Иван Цанкар","Извор","Илија Димовски - Гоце","Илија Марков","Илија Плавев","Илија Ристовски","Илинден","Иљо Војвода","Индира Ганди","Индустриска","Исаија Мажовски","Истарска","Јабланица","Јадранска","Јајце","Јакупица","Јане Сандански","Јани Лукровски","Јоаким Крчовски","Јован Кукузел","Јорганџиска","Јордан Николов - Орце","Јордан Пиперков - Пиперката","Јордан Поп Јорданов - Орцето","Јордан Филиповски","Јордан Хаџи Константинов - Џинот","Јордан Чопела - Орде","Јосип Јуриј Штросмаер","Јосиф Даскалов","Јосиф Јосифовски - Свештарот","Јосиф Михајловиќ","Јохан Гутенберг","Јуриј Гагарин","Јуриј Розентал","Јустинијан I","Кавадаречка","Кавалска","Кадињача","Казанџиска","Каирска","Кајларска","Камник","Капиштец","Караорман","Кара Трифун","Караџица","Карбуница","Карпошово Востание","Катлановска","Кемал Сејфула","Керамидница","Кипарска","Кирe Гаврилоски - Јане","Кирил и Методиј","Кирил Манчев","Кирил Пејчиновиќ - Тетоец","Киро Глигоров","Киро Димишков","Киро Крстески - Платник","Киро Нацев - Фетак","Китка","Кичевска","Клепа","Климент Охридски","Клисурска","Ковачка","Кожув","Козјак","Козле","Коле Канински","Коле Неделковски","Копачка","Кораб","Корџевска","Коста Абраш","Коста Веселинов","Коста Кирков","Коста Ристовски","Коста Солев","Коста Шахов","Костурска","Костурски Херои","Коце Металец","Кочанска","Кочо Рацин","Краишка","Крали Марко","Кратовска","Кримска","Крсте Асенов","Крсте Гермов - Шаќир","Крсте Мисирков","Крсто Раковски","Крушевска Република","Крчин","Кузман Јосифоски - Питу","Кузман Шапкарев","Кујунџиска","Кукушка","Кумановска","Кумбара","Кумровец","Лав Толстој","Лавчанска Корија","Лазар Дамовски - Ошенски","Лазар Димитров","Лазар Личеноски","Лазар Поп Трајков","Лазар Танев","Лазар Трповски","Лазо Дренков","Лазо Москов","Лајош Кошут","Леринска","Лесновска","Лисец","Лихнида","Локов","Лондонска","Луj Пастер","Лудвиг Ван Бетовен","Љубин","Љубљанска","Љубо Здравковски - Орлов","Људевит Гај","Мавровска","Мајка Тереза","Мајски Манифест","Македонија","Македонска Војска","Македонска Преродба","Македонски Кралеви","Македонско-косовска ударна бригада","Максим Горки","Малешевска","Малина Попиванова","МАНАПО","Манчу Матак","Мара Междуречка","Марија Кири Склодовска","Мариовска","Марјан Лазевски","Маркова Река","Марко Цепенков","Марк Твен","Маршал Тито","Махатма Ганди","Маџари","Маџир Маало","Мегленска","Места","Методија Андонов - Ченто","Методија Патчев","Методија Шаторов - Шарло","Метохиска","Мечкин Камен","Мијачка","Милан Комненоски","Миле Поп Јорданов","Мирка Гинова","Мирче Ацев","Мирче Мацанов","Мис Елен Стон","Мите Богоевски","Мито Хаџивасилев - Јасмин","Митре Влаот","Михаил Глинка","Михаил и Ефтихиј","Михаил Цоков","Михаил Чаков","Мице Козароски - Јандре","Мишевска","Мишко Михајловски","Модест Мусогорски","Мокра","Момин Поток","Морава","Московска","Мостарска","Мраморец","Мрежичка","Мукос","Мустафа Кемал Ататурк","Мутавџиска","Надбискуп Чекада","Надежда Крупскаја","Народен Фронт","Натанаил Кучевишки","Наум Наумоски - Борче","Наум Охридски","Наум Чакаров","Невена Георгиева - Дуња","Неврокопска","Негоричанска","Неготинска","Никола Вапцаров","Никола Грчето","Николај Островски","Никола Карев","Никола Киров - Мајски","Никола Кљусев","Никола Коперник","Никола Малешевски","Никола Мартиноски","Никола Парапунов","Никола Петров","Никола Петров - Русински","Никола Пушкаров","Никола Тесла","Никола Тримпаре","Ниџе Планина","Нов Живот","Новопроектирана","Њуделхиска","Овчеполска","Огражден","Опинчарска","Оровска","Осло","Островска","Отокар Кершовани","Отон Жупанчич","Охридска","Павел Шатев","Павле Илиќ","Пајак Планина","Палмиро Тољати","Панајот Гиновски","Пандил Шишков","Пандо Кљашев","Панко Брашнаров","Панче Арсовски","Панче Неделковски","Папуџиска","Париска","Париска Комуна","Партение Зографски","Партизански Одреди","Патрис Лумумба","Пејо Јаворов","Пелинце","Пелистерска","Пере Тошев","Перо Наков","Петар Ацев","Петар Драпшин","Петар Ичко","Петар Манџуков","Петар Поп Арсов","Петар Чајковски","Петар Чангов","Петар Чаулев","Петко Јанчевски","Петре Георгиев","Петре Пирузе","Петре Филиповски - Гарката","Петричка","Пехчевска","Пијанец","Пиринска","Питу Гули","Плачковица","Покриена Чаршија","Полог","Поп Богомил","Прашка","Презвитер Константин","Пресека","Преспанска","Пржино","Призренска","Прилепска","Пробиштипска","Пролет","Просек","Прохор Пчињски","Раде Јовчевски - Корчагин","Радика","Радишанска","Радњанска","Радобил","Радослав Петковски","Радушка","Разловечко Востание","Разлошка","Рајко Жинзифов","Рампо Левков - Левката","Рафаел Батино","Рељо Шесто Крило","Ресенска","Речиште","Ризо Ризов","Римска","Ристо Равановски","Ристо Шишков","Роcа Плавева","Роза Луксембург","Рокомија","Романија","Ромен Ролан","Роналд Реган","Рударска","Рудо","Румена Хаџи Панзова","Сава Михајлов","Салих Асим","Самарџиска","Самоилова","Сараевска","Сарачка","Саса","Свеќарска","Светиниколска","Светозар Марковиќ","Серава","Сердарот","Серска","Симеон Кавракиров","Симче Настевски","Сирма Војвода","Славе Георгиевски - Шнајдер","Славе Деловски","Славејко Арсов","Славеј Планина","Славка Димкова","Славчо Стојменски","Сливовска","Смилевска","Солунска","Солунска Глава","Софиска","Софре Марковски","Спиро Големџиојски - Црне","Спиро Гулапчев","Стале Попов","Стари Новак","Стефан Верковиќ","Стефан Јакимов - Дедов","Стефан Наумов - Стив","Стјепан Филиповиќ - Стево","Стоби","Стогово","Стојко Јовановски","Стојна Стевкова","Стокхолмска","Страхил Пинџуров","Страшо Пинџур","Стрезово","Стрмашево","Струма","Струмичка","Струмјани","Струшка","Тајмишка","Тале Христов","Тасино Чешмиче","Ташкентска","Ташко Караџа","Темко Попов","Теодосиј Гологанов","Теодосиј Синаитски","Тиранска","Товарник","Тодор Александров","Тодор Циповски - Мерџан","Тодор Чангов","Тодор Чапов","Томас Минцер","Томе Арсовски","Томе Пуре","Томе Стефановски","Томе Томшиќ","Топаанска","Тоше Проески","Трајко Иванов","Трајко Китанчев","Три Круши","Трифун Бузев","Трифун Пановски","Трифун Хаџи Јанев","Трнодол","Трпе Петревски","Тушинска","Ужичка Република","Февруарски Поход","Федерико Гарсија Лорка","Ферид Бајрам","Ферид Заири","Филип II Македонски","Финска","Фјодор Достоевски","Франклин Рузвелт","Франсоа Волтер","Франце Прешерн","Франц Лист","Фрањо Клуз","Фредерик Шопен","Фуштанска","Хаванска","Хаџи Јован Шишков","Хаџи Трајко","Хашка","Хелсинки","Хераклеа Линкестис","Хо Ши Мин","Христијан Тодоровски - Карпош","Христо Батанџиев","Христо Смирненски","Христо Татарчев","Христо Узунов","Христо Чернопеев","Хусеин Бајрам","Цветан Димов - Чаирчанец","Цветан Цветковски","Церска","Цетињска","Црвена Вода","Црвени Брегови","Црниче","Црногорска","Црноок","Црноризец Храбар","Чаирска","Чудомир Кантарџиев","Чупино Брдо","Џумајска","Шандор Петефи","Шар Планина","Шарски Одред","Шина Стојанова","Штипска","Шундаревска"]})),Q1=c((()=>{IS=["#{street_name} #{building_number}"]})),Y1=c((()=>{VS=["#{street}"]})),$1=c((()=>{G1(),H1(),F1(),J1(),U1(),W1(),Z1(),q1(),Q1(),Y1(),GS={building_number:LS,city:DS,city_name:xS,country:CS,default_country:KS,postcode:RS,secondary_address:zS,street:OS,street_address:IS,street_name:VS}})),X1=c((()=>{HS=["07# ### ####","+389 7# ### ####"]})),e2=c((()=>{X1(),FS={formats:HS}})),a2=c((()=>{JS=["#{Name.last_name} #{suffix}","#{Address.city_name} #{suffix}","#{Name.last_name}, #{Name.last_name} и #{Name.last_name}"]})),n2=c((()=>{US=["ДОО","ДООЕЛ","АД","ТП"]})),i2=c((()=>{a2(),n2(),WS={name:JS,suffix:US}})),r2=c((()=>{ZS={wide:["јануари","февруари","март","април","мај","јуни","јули","август","септември","октомври","ноември","декември"],wide_context:["јануари","февруари","март","април","мај","јуни","јули","август","септември","октомври","ноември","декември"],abbr:["јан","фев","мар","апр","мај","јун","јул","авг","сеп","окт","ное","дек"],abbr_context:["јан","фев","мар","апр","мај","јун","јул","авг","сеп","окт","ное","дек"]}})),t2=c((()=>{qS={wide:["недела","понеделник","вторник","среда","четврток","петок","сабота"],wide_context:["недела","понеделник","вторник","среда","четврток","петок","сабота"],abbr:["нед","пон","вто","сре","чет","пет","саб"],abbr_context:["нед","пон","вто","сре","чет","пет","саб"]}})),o2=c((()=>{r2(),t2(),QS={month:ZS,weekday:qS}})),s2=c((()=>{YS=["mk","com","com.mk","org.mk","gov.mk","net.mk","inf.mk","net","org","eu","мкд"]})),l2=c((()=>{$S=["t.mk","gmail.com","yahoo.com","hotmail.com"]})),u2=c((()=>{s2(),l2(),XS={domain_suffix:YS,free_email:$S}})),c2=c((()=>{eA=["Ава","Александра","Ана","Анастасија","Анѓа","Ангела","Ангелина","Анче","Атанасија","Билјана","Бисера","Бистра","Блага","Благица","Благојка","Благородна","Благуна","Блаженка","Богдана","Богиња","Божана","Бојана","Борјана","Борка","Босилка","Бранка","Валентина","Вања","Варвара","Василка","Василија","Васка","Велика","Вера","Вероника","Весела","Весна","Виолета","Војданка","Воскресија","Габриела","Галаба","Галена","Голубинка","Гордана","Горица","Горјана","Грозда","Дамјана","Даница","Данка","Даринка","Дафина","Деница","Десанка","Деспина","Дивна","Добрила","Добринка","Домника","Донка","Драга","Драгана","Душанка","Душка","Ѓурѓа","Ѓурѓица","Ева","Евгенија","Евдокија","Екатерина","Елена","Елеонора","Елисавета","Елица","Елка","Есма","Ефимија","Ефросина","Живка","Загорка","Зафирка","Захаринка","Здравка","Злата","Зора","Зорица","Зорка","Sвезда","Ива","Ивана","Иванка","Илинденка","Илинка","Ирина","Искра","Јаворка","Јагода","Јадранка","Јана","Јанка","Јасна","Јована","Јовка","Јордана","Јорданка","Јулијана","Калина","Каранфилка","Ката","Катерина","Катина","Катица","Катја","Кераца","Кита","Климентина","Константина","Косара","Костадинка","Крстана","Лена","Ленче","Лепа","Лидија","Лика","Лилјана","Лина","Љуба","Љубинка","Љубица","Љупка","Магдалена","Македонка","Макрина","Мара","Марија","Марика","Марина","Марта","Матрона","Меглена","Меланија","Мена","Мери","Милева","Милена","Милица","Милка","Мирјана","Мирка","Нада","Надежда","Наумка","Невенка","Неда","Неделка","Никодина","Николина","Олга","Оливера","Павлина","Павлинка","Параскева","Пауна","Пелагија","Петкана","Петра","Петранка","Писана","Радмила","Рајна","Ракита","Рафаила","Рахела","Рахилка","Ристана","Родна","Роса","Роска","Ружа","Румена","Русалина","Русанка","Сава","Сандра","Сара","Сашка","Светлана","Серафима","Симјанка","Симона","Славенка","Славица","Славјанка","Славка","Слободанка","Снежана","Сончица","Софија","Спаса","Спасена","Споменка","Сребра","Стамена","Стефанија","Стефанка","Стојанка","Стојна","Стојмена","Сузана","Тамара","Таска","Татјана","Темјана","Теодора","Теодосија","Теофилка","Тодорка","Трајанка","Трена","Трендафилка","Убавка","Фана","Фанка","Филимена","Флоринка","Фросина","Христина","Цара","Цвета","Цветанка"]})),d2=c((()=>{aA=["Абаџиевa","Абовa","Аврамовa","Аврамовска","Аврамчевa","Ајановска","Алексиевa","Алексовa","Алексовска","Ангеловска","Андовa","Андоновa","Андоновска","Андреевска","Антоновa","Анчевска","Апостолова","Апостолска","Арсовa","Арсова","Арсовска","Атанасовa","Атанасова","Атанасовска","Атковa","Ацевa","Ацевска","Аџимитревска","Бабамовска","Бабунска","Бавтировска","Бајалска","Бакевска","Балабанова","Басаровска","Бачовска","Беличанец","Белковска","Беловска","Белогаска","Белчевa","Бендевска","Билбиловска","Билјановска","Бислимовска","Битовска","Блажевска","Близнаковa","Богдановa","Богдановска","Богданска","Богоевa","Богоеска","Божиковa","Божинова","Божиновска","Бојановска","Бојаџи","Бојаџиевa","Боцевска","Бошевска","Бошковa","Бошковска","Брезоска","Бубуловска","Бужаровска","Бузевa","Бујуклиевa","Бунева","Варсаковска","Василевска","Василеска","Васковa","Величковска","Велјановa","Велковa","Висулчева","Владимирска","Владова","Влаховa","Влахчева","Вражалска","Гаврилска","Гајдова","Галевска","Гапо","Гаревска","Геновa","Георгиевa","Георгиевска","Герасимовска","Гермовa","Геровa","Гечевска","Гешоска","Гиговa","Гиевска","Главаш","Глигоровa","Глигоровска","Голабовска","Грабул","Грабулоска","Гроздановa","Грошевa","Грујовска","Групче","Гугувчевска","Гучева","Давидовска","Давковa","Давчевa","Давчевска","Дамеска","Дамовска","Дворчанец","Дејановa","Демниева","Деспотовска","Дилевa","Димитриева","Димитровa","Димковска","Димовa","Димовска","Диневa","Диневска","Добревска","Додевска","Дојчиновa","Доневска","Дракул","Дренковa","Дрнковa","Дуганова","Дуковска","Ѓаконовска","Ѓелевa","Ѓорѓевска","Ѓорчевa","Ѓузелевa","Ѓурлуковa","Ѓурчиновa","Евремовa","Едиповска","Ежовa","Ефтимова","Жековa","Железаровa","Жерновска","Забазноска","Зафировска","Здравевa","Здравковска","Зографска","Ивановa","Ивановска","Иваноска","Игновска","Игњатовска","Икономовa","Илиевa","Илиевска","Иљоска","Исаковска","Ицева","Јакимовска","Јаконовa","Јаневска","Јанчевска","Јачевa","Јовановa","Јовановска","Јовчевска","Јордановa","Јордановска","Јосифовска","Јосифоска","Јурукова","Јурукоска","Калајџиска","Калчевска","Камберска","Кантарџиевa","Караѓозовa","Карадак","Караман","Каранфиловска","Караџа","Каревa","Каровa","Каровска","Картовa","Катарџиевa","Кепеска","Керамитчиевa","Керамичиевa","Кирјазовска","Киселиновa","Китаноска","Кичевска","Кљусевa","Колишевска","Колозовa","Кондова","Кондовска","Конеска","Константиновa","Константиновска","Кордаловa","Коробар","Корубин","Костадинова","Костовска","Котевска","Котеска","Коцаре","Коцо","Кочовска","Коџоман","Крле","Крстева","Крстевска","Крстеска","Крцковска","Кузмановска","Кулишевa","Куновска","Куноска","Кутурец","Кушевска","Ладинска","Лазаревска","Лазаровa","Лазарова","Лазеска","Лазовска","Лакинска","Лактинска","Лапе","Лахтова","Левенска","Лековска","Леовa","Лечевска","Липова","Личеноска","Лозановска","Луловска","Љуткова","Мазевa","Мајсторовa","Македонска","Малевска","Малеска","Маловска","Манаковска","Манговa","Манговска","Маневa","Манева","Маневска","Манивиловa","Манчевa","Манчевска","Мариновa","Марковска","Мартиновска","Мартиноска","Масин","Матевска","Матковска","Матовска","Маџировa","Миладиновa","Милосавлева","Милошевска","Милчин","Миљовска","Минчевa","Миовска","Миронска","Мисиркова","Митевска","Митревска","Митриќеска","Михајловa","Михајловска","Мицевa","Мицевска","Мицковска","Мицовa","Мишковска","Младеновa","Младеновска","Мојсовска","Мокровa","Момировска","Мошин","Мукаетовa","Муратовска","Мусалевска","Мустачки","Најденовa","Најдовска","Најческа","Наковa","Наневска","Настевa","Наумовa","Наумовска","Наумческа","Начевa","Неделковска","Нестор","Несторовска","Нетковa","Нешковска","Николеска","Николовa","Николовска","Никушевa","Ниновa","Оровчанец","Ортаковa","Османли","Павловска","Павлоска","Пајтонџиевa","Паковска","Паликрушева","Панговска","Пандеска","Пандиловa","Пандовска","Панковa","Пановa","Пановска","Панчевска","Папрадишки","Пејовa","Пендовска","Пенушлиска","Пепељуговска","Перинска","Перчинковска","Петковска","Петровa","Петровска","Петрушевa","Петрушевска","Пиперковска","Планинска","Подгорец","Полежиноска","Полјанска","Поповa","Поповска","Попоска","Преспанска","Прилепчанска","Прличко","Псалтировa","Пуцкова","Равановска","Радическа","Раковска","Рацин","Реџепова","Ризовa","Ристовa","Ристовска","Ристоска","Руменова","Русјаковa","Русомановa","Салџиева","Саневa","Сариевска","Светиевa","Серафимовa","Серафимовска","Сидовска","Силјановска","Симовa","Симовска","Симоновска","Скаловска","Славенска","Славеска","Сланева","Смаќоска","Смилевска","Смокварска","Соколовa","Солевa","Солунска","Софрониевска","Спасеновска","Спасовa","Спасовска","Спировa","Спировска","Ставревa","Ставреска","Стаматоска","Станковa","Станковска","Старделовa","Стевановa","Стевковска","Стефановa","Стефановска","Стојановa","Стојановска","Стојаноска","Стојковa","Стојковска","Стојменска","Стојчевa","Такева","Таковска","Талевска","Талеска","Темелкоска","Теодосиевска","Терзиевa","Тодоровa","Тодоровска","Тозија","Толевска","Томовска","Тофоска","Точко","Тошевa","Тошевска","Трајковска","Тренеска","Тренчевска","Трифуновска","Тројачанец","Трпеновска","Тушевска","Ќамиловa","Ќорнаковa","Ќортошевa","Ќурчиевa","Угриновска","Узуновa","Узуновска","Урдин","Филиповска","Фирфовa","Фотева","Хаџимановa","Хаџиниколовa","Христова","Христовска","Цаневa","Цветановска","Цековa","Цековска","Ценевa","Црвенковска","Црвеновa","Чакар","Чакмаковa","Чаловска","Чапаровска","Чаушевa","Чашуле","Чевревска","Чејковска","Чемерска","Чемковa","Чипан","Чокревска","Чундева","Чупона","Чучковa","Чушкаровa","Џамбаз","Џамбазова","Џаџевa","Џековa","Џинлеска","Џорлевa","Џувалековска","Џуновa","Шаревска","Шијак","Шијаковa","Шијаковска","Шириловa","Шишковa","Шоповa","Шоптрајановa","Штерјоска","Шулинчевска"]})),h2=c((()=>{nA=["г-ѓа","г-ца","д-р","м-р"]})),p2=c((()=>{iA=["Александар","Алексо","Ангел","Ангеле","Андон","Андреј","Андреја","Анте","Антим","Антон","Антониј","Апостол","Арсениј","Асен","Атанас","Атанасиј","Ацо","Благе","Благој","Благоја","Блаже","Богатин","Богдан","Богоја","Богослав","Божидар","Божин","Божо","Бојан","Борис","Борислав","Борјан","Борко","Боро","Бошко","Бранко","Вангел","Ване","Ванче","Ванчо","Васил","Василиј","Василко","Велимир","Величко","Велјан","Вељо","Венко","Веселин","Видое","Виктор","Владимир","Владо","Властимир","Воислав","Војдан","Војкан","Волче","Гаврил","Гане","Георги","Герасим","Глигор","Гого","Горан","Горјан","Гоце","Григор","Гроздан","Давид","Дамјан","Данаил","Даниел","Данчо","Дарко","Дејан","Делјан","Делчо","Диме","Димитар","Димитрие","Димитриј","Димитрија","Димко","Димо","Димче","Добри","Дојчин","Доротеј","Драган","Драги","Драгиша","Драгољуб","Драгомир","Драгослав","Душан","Душко","Ѓоко","Ѓорѓи","Ѓоре","Ѓорче","Ѓурчин","Евгениј","Евтим","Емануел","Емил","Еразмо","Ефтим","Живко","Зафир","Захариј","Здравко","Златан","Злате","Златко","Зоран","Sвездан","Sвонко","Иван","Ивко","Иво","Игнат","Игор","Илија","Исак","Јаков","Јане","Јоаким","Јован","Јованче","Јовица","Јово","Јозо","Јонче","Јордан","Јосиф","Кирил","Киро","Климент","Козма","Коле","Константин","Костадин","Коце","Кочо","Крсте","Крсто","Круме","Ксенте","Кузман","Лазар","Лазо","Леонид","Лука","Љубе","Љубен","Љубиша","Љубомир","Љупчо","Македон","Максим","Марин","Марјан","Марко","Мате","Матеја","Мето","Методи","Методиј","Методија","Милан","Миле","Милош","Милчо","Минчо","Миодраг","Мирко","Мирослав","Мирче","Митре","Михаил","Михајло","Михо","Мичо","Младен","Момо","Момчило","Нанче","Наум","Небојша","Неделко","Ненад","Неофит","Нестор","Нешо","Никита","Никифор","Никодим","Никола","Огнен","Оливер","Орде","Павле","Пантелејмон","Панче","Партениј","Паскал","Пенчо","Перо","Петар","Петко","Петре","Пеце","Пимен","Прокопиј","Прохор","Раде","Радован","Рајко","Ранко","Ризо","Ристе","Ристо","Ромил","Саве","Саво","Самоил","Самуил","Санде","Сашко","Силјан","Симон","Славе","Славко","Славчо","Слободан","Сократ","Сотир","Софе","Софрониј","Спасе","Спиро","Србо","Сребре","Стале","Стево","Стефан","Стоилко","Стојан","Стојмен","Стојче","Страте","Страхил","Танас","Ташко","Ташо","Темелко","Теодор","Теодосиј","Теофан","Теофил","Тихо","Тихомир","Тоде","Тодор","Томе","Томислав","Трајан","Трајко","Трајче","Трифун","Тришо","Филип","Харалампие","Христијан","Христо","Цветан","Цветко","Цеко","Часлав","Чедо","Чедомир","Шишман"]})),m2=c((()=>{c2(),p2(),rA=eA.concat(iA)})),f2=c((()=>{tA=["Абаџиев","Аврамов","Аврамовски","Аврамчев","Ајановски","Алексиев","Алексов","Алексовски","Ангеловски","Андов","Андонов","Андоновски","Андреевски","Антонов","Анчевски","Апостолов","Апостолски","Арсов","Арсовски","Атанасов","Атанасовски","Атков","Ацев","Ацевски","Аџимитревски","Бабамовски","Бабунски","Бавтировски","Бајалски","Бакевски","Балабанов","Басаровски","Бачовски","Беличанец","Белковски","Беловски","Белогаски","Белчев","Бендевски","Билбиловски","Билјановски","Бислимовски","Битовски","Блажевски","Близнаков","Богданов","Богдановски","Богдански","Богоев","Богоески","Божиков","Божинов","Божиновски","Бојановски","Бојаџи","Бојаџиев","Боцевски","Бошевски","Бошков","Бошковски","Брезоски","Бубуловски","Бужаровски","Бузев","Бујуклиев","Бунев","Варсаковски","Василевски","Василески","Васков","Величковски","Велјанов","Велков","Висулчев","Владимирски","Владов","Влахов","Влахчев","Вражалски","Гаврилски","Гајдов","Галевски","Гапо","Гаревски","Генов","Георгиев","Георгиевски","Герасимовски","Гермов","Геров","Гечевски","Гешоски","Гигов","Гиевски","Главаш","Глигоров","Глигоровски","Голабовски","Грабул","Грабулоски","Грозданов","Грошев","Грујовски","Групче","Гугувчевски","Гучев","Давидовски","Давков","Давчев","Давчевски","Дамески","Дамовски","Дворчанец","Дејанов","Демниев","Деспотовски","Дилев","Димитриев","Димитров","Димковски","Димов","Димовски","Динев","Диневски","Дирјан","Добревски","Доброхотов","Додевски","Дојчинов","Доневски","Дракул","Дренков","Дрнков","Дуганов","Дуковски","Ѓаконовски","Ѓелев","Ѓорѓевски","Ѓорчев","Ѓузелев","Ѓурлуков","Ѓурчинов","Евремов","Едиповски","Ежов","Ефтимов","Жеков","Железаров","Жерновски","Забазноски","Зафировски","Здравев","Здравковски","Зографски","Иванов","Ивановски","Иваноски","Игновски","Игњатовски","Икономов","Илиев","Илиевски","Иљоски","Исаковски","Ицев","Јакимовски","Јаконов","Јаневски","Јанчевски","Јачев","Јованов","Јовановски","Јовчевски","Јорданов","Јордановски","Јосифовски","Јосифоски","Јуруков","Јурукоски","Калајџиски","Калчевски","Камберски","Кантарџиев","Караѓозов","Карадак","Караман","Каранфиловски","Карев","Каров","Каровски","Картов","Катарџиев","Кепески","Керамитчиев","Керамичиев","Кирјазовски","Киселинов","Китаноски","Кичевски","Кљусев","Кодра","Колишевски","Колозов","Кондов","Кондовски","Конески","Константинов","Константиновски","Кордалов","Корубин","Костадинов","Костовски","Котевски","Котески","Коцаре","Коцо","Кочовски","Коџоман","Крле","Крстев","Крстевски","Крстески","Крцковски","Кузмановски","Кулишев","Куновски","Куноски","Кушевски","Ладински","Лазаревски","Лазаров","Лазески","Лазовски","Лакински","Лактински","Лапе","Лахтов","Левенски","Лековски","Леов","Лечевски","Липов","Личеноски","Лозановски","Луловски","Љутков","Мазев","Мајсторов","Македонски","Малевски","Малески","Маловски","Манаковски","Мангов","Манговски","Манев","Маневски","Манивилов","Манчев","Манчевски","Маринов","Марковски","Мартиновски","Мартиноски","Масин","Матевски","Матковски","Матовски","Маџиров","Миладинов","Милосавлев","Милошевски","Милчин","Миљовски","Минчев","Миовски","Миронски","Мисирков","Митевски","Митревски","Митриќески","Михајлов","Михајловски","Мицев","Мицевски","Мицковски","Мицов","Мишковски","Младенов","Младеновски","Мојсовски","Мокров","Момировски","Мошин","Мукаетов","Муратовски","Мусалевски","Мустачки","Најденов","Најдовски","Најчески","Наков","Наневски","Настев","Наумов","Наумовски","Наумчески","Начев","Неделковски","Нестор","Несторовски","Нетков","Нешковски","Николески","Николов","Николовски","Никушев","Нинов","Оровчанец","Ортаков","Османли","Павловски","Павлоски","Пајтонџиев","Паковски","Паликрушев","Панговски","Пандески","Пандилов","Пандовски","Панков","Панов","Пановски","Панчевски","Папрадишки","Пејов","Пендовски","Пенушлиски","Пепељуговски","Перински","Перчинковски","Петковски","Петров","Петровски","Петрушев","Петрушевски","Пиперковски","Планински","Подгорец","Полежиноски","Полјански","Попов","Поповски","Попоски","Преспански","Прилепчански","Прличко","Псалтиров","Пуцков","Равановски","Радически","Раковски","Рацин","Ризов","Ристов","Ристовски","Ристоски","Руменов","Русјаков","Русоманов","Салџиев","Санев","Сариевски","Светиев","Серафимов","Серафимовски","Сидовски","Силјановски","Симов","Симовски","Симоновски","Скаловски","Славенски","Славески","Сланев","Смаќоски","Смилевски","Смокварски","Соколов","Солев","Солунски","Софрониевски","Спасеновски","Спасов","Спасовски","Спиров","Спировски","Ставрев","Ставрески","Стаматоски","Станков","Станковски","Старделов","Стеванов","Стевковски","Стефанов","Стефановски","Стојанов","Стојановски","Стојаноски","Стојков","Стојковски","Стојменски","Стојчев","Такев","Таковски","Талевски","Талески","Темелкоски","Теодосиевски","Терзиев","Тодоров","Тодоровски","Тозија","Толевски","Томовски","Тофоски","Точко","Тошев","Тошевски","Трајковски","Тренески","Тренчевски","Трифуновски","Тројачанец","Трпеновски","Тушевски","Ќамилов","Ќорнаков","Ќортошев","Ќурчиев","Угриновски","Узунов","Узуновски","Урдин","Филиповски","Фирфов","Фотев","Хаџиманов","Хаџиниколов","Христов","Христовски","Цанев","Цветановски","Цеков","Цековски","Ценев","Црвенковски","Црвенов","Чакар","Чакмаков","Чаловски","Чапаровски","Чаушев","Чашуле","Чевревски","Чејковски","Чемерски","Чемков","Чипан","Чокревски","Чундев","Чупона","Чучков","Чушкаров","Џамбаз","Џамбазов","Џаџев","Џеков","Џинлески","Џорлев","Џувалековски","Џунов","Шаревски","Шијак","Шијаков","Шијаковски","Ширилов","Шишков","Шопов","Шоптрајанов","Штерјоски","Шулинчевски"]})),v2=c((()=>{d2(),f2(),oA=aA.concat(tA)})),g2=c((()=>{sA=["г-дин","д-р","м-р"]})),k2=c((()=>{lA=["#{female_prefix} #{female_first_name} #{female_last_name}","#{male_prefix} #{male_first_name} #{male_last_name}","#{female_first_name} #{female_last_name}","#{female_first_name} #{female_last_name}","#{female_first_name} #{female_last_name}","#{male_first_name} #{male_last_name}","#{male_first_name} #{male_last_name}","#{male_first_name} #{male_last_name}"]})),y2=c((()=>{uA=["#{female_prefix}","#{male_prefix}"]})),b2=c((()=>{cA=[]})),S2=c((()=>{dA={descriptor:["Главен","Генерален","Корпоративен","Државен","Регионален","Окружен","Централен","Глобален","Меѓународен"],level:["програмски","истражен","маркетиншки","интеграциски","операциски","комуникациски","креативен","кориснички"],job:["директор","соработник","управител","инженер","специјалист","координатор","администратор","архитект","аналитичар","дизајнер","техничар","консултант","помошник","агент","застапник"]}})),A2=c((()=>{c2(),d2(),h2(),m2(),v2(),p2(),f2(),g2(),k2(),y2(),b2(),S2(),hA={female_first_name:eA,female_last_name:aA,female_prefix:nA,first_name:rA,last_name:oA,male_first_name:iA,male_last_name:tA,male_prefix:sA,name:lA,prefix:uA,suffix:cA,title:dA}})),M2=c((()=>{pA=["02 ### ####","03# ### ###","04# ### ###","+389 2 ### ####","+389 3# ### ###","+389 4# ### ###","00389 2 ### ####","00389 3# ### ###","00389 4# ### ###"]})),T2=c((()=>{M2(),mA={formats:pA}})),_2=c((()=>{$1(),e2(),i2(),o2(),u2(),A2(),T2(),fA={title:"Macedonian",separator:" и ",address:GS,cell_phone:FS,company:WS,date:QS,internet:XS,name:hA,phone_number:mA}})),w2=c((()=>{vA=["#","##"]})),j2=c((()=>{gA=["#{city_root}#{city_suffix}"]})),E2=c((()=>{kA=["Fet","Gjes","Høy","Inn","Fager","Lille","Lo","Mal","Nord","Nær","Sand","Sme","Stav","Stor","Tand","Ut","Vest"]})),N2=c((()=>{yA=["berg","borg","by","bø","dal","eid","fjell","fjord","foss","grunn","hamn","havn","helle","mark","nes","odden","sand","sjøen","stad","strand","strøm","sund","vik","vær","våg","ø","øy","ås"]})),B2=c((()=>{bA=["sgate","svei","s Gate","s Vei","gata","veien"]})),P2=c((()=>{SA=["Norge"]})),L2=c((()=>{AA=["####","####","####","0###"]})),D2=c((()=>{MA=["Leil. ###","Oppgang A","Oppgang B"]})),x2=c((()=>{TA=[""]})),C2=c((()=>{_A=["#{street_name} #{building_number}"]})),K2=c((()=>{wA=["#{street_root}#{street_suffix}","#{street_prefix} #{street_root}#{street_suffix}","#{Name.first_name}#{common_street_suffix}","#{Name.last_name}#{common_street_suffix}"]})),R2=c((()=>{jA=["Øvre","Nedre","Søndre","Gamle","Østre","Vestre"]})),z2=c((()=>{EA=["Eike","Bjørke","Gran","Vass","Furu","Litj","Lille","Høy","Fosse","Elve","Ku","Konvall","Soldugg","Hestemyr","Granitt","Hegge","Rogne","Fiol","Sol","Ting","Malm","Klokker","Preste","Dam","Geiterygg","Bekke","Berg","Kirke","Kors","Bru","Blåveis","Torg","Sjø"]})),O2=c((()=>{NA=["alléen","bakken","berget","bråten","eggen","engen","ekra","faret","flata","gata","gjerdet","grenda","gropa","hagen","haugen","havna","holtet","høgda","jordet","kollen","kroken","lia","lunden","lyngen","løkka","marka","moen","myra","plassen","ringen","roa","røa","skogen","skrenten","spranget","stien","stranda","stubben","stykket","svingen","tjernet","toppen","tunet","vollen","vika","åsen"]})),I2=c((()=>{w2(),j2(),E2(),N2(),B2(),P2(),L2(),D2(),x2(),C2(),K2(),R2(),z2(),O2(),BA={building_number:vA,city:gA,city_root:kA,city_suffix:yA,common_street_suffix:bA,default_country:SA,postcode:AA,secondary_address:MA,state:TA,street_address:_A,street_name:wA,street_prefix:jA,street_root:EA,street_suffix:NA}})),V2=c((()=>{PA=["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} og #{Name.last_name}"]})),G2=c((()=>{LA=["Gruppen","AS","ASA","BA","RFH","og Sønner"]})),H2=c((()=>{V2(),G2(),DA={name:PA,suffix:LA}})),F2=c((()=>{xA=["no","com","net","org"]})),J2=c((()=>{F2(),CA={domain_suffix:xA}})),U2=c((()=>{KA=["Emma","Sara","Thea","Ida","Julie","Nora","Emilie","Ingrid","Hanna","Maria","Sofie","Anna","Malin","Amalie","Vilde","Frida","Andrea","Tuva","Victoria","Mia","Karoline","Mathilde","Martine","Linnea","Marte","Hedda","Marie","Helene","Silje","Leah","Maja","Elise","Oda","Kristine","Aurora","Kaja","Camilla","Mari","Maren","Mina","Selma","Jenny","Celine","Eline","Sunniva","Natalie","Tiril","Synne","Sandra","Madeleine"]})),W2=c((()=>{RA=["Emma","Sara","Thea","Ida","Julie","Nora","Emilie","Ingrid","Hanna","Maria","Sofie","Anna","Malin","Amalie","Vilde","Frida","Andrea","Tuva","Victoria","Mia","Karoline","Mathilde","Martine","Linnea","Marte","Hedda","Marie","Helene","Silje","Leah","Maja","Elise","Oda","Kristine","Aurora","Kaja","Camilla","Mari","Maren","Mina","Selma","Jenny","Celine","Eline","Sunniva","Natalie","Tiril","Synne","Sandra","Madeleine","Markus","Mathias","Kristian","Jonas","Andreas","Alexander","Martin","Sander","Daniel","Magnus","Henrik","Tobias","Kristoffer","Emil","Adrian","Sebastian","Marius","Elias","Fredrik","Thomas","Sondre","Benjamin","Jakob","Oliver","Lucas","Oskar","Nikolai","Filip","Mats","William","Erik","Simen","Ole","Eirik","Isak","Kasper","Noah","Lars","Joakim","Johannes","Håkon","Sindre","Jørgen","Herman","Anders","Jonathan","Even","Theodor","Mikkel","Aksel"]})),Z2=c((()=>{zA=["Johansen","Hansen","Andersen","Kristiansen","Larsen","Olsen","Solberg","Andresen","Pedersen","Nilsen","Berg","Halvorsen","Karlsen","Svendsen","Jensen","Haugen","Martinsen","Eriksen","Sørensen","Johnsen","Myhrer","Johannessen","Nielsen","Hagen","Pettersen","Bakke","Skuterud","Løken","Gundersen","Strand","Jørgensen","Kvarme","Røed","Sæther","Stensrud","Moe","Kristoffersen","Jakobsen","Holm","Aas","Lie","Moen","Andreassen","Vedvik","Nguyen","Jacobsen","Torgersen","Ruud","Krogh","Christiansen","Bjerke","Aalerud","Borge","Sørlie","Berge","Østli","Ødegård","Torp","Henriksen","Haukelidsæter","Fjeld","Danielsen","Aasen","Fredriksen","Dahl","Berntsen","Arnesen","Wold","Thoresen","Solheim","Skoglund","Bakken","Amundsen","Solli","Smogeli","Kristensen","Glosli","Fossum","Evensen","Eide","Carlsen","Østby","Vegge","Tangen","Smedsrud","Olstad","Lunde","Kleven","Huseby","Bjørnstad","Ryan","Rasmussen","Nygård","Nordskaug","Nordby","Mathisen","Hopland","Gran","Finstad","Edvardsen"]})),q2=c((()=>{OA=["Markus","Mathias","Kristian","Jonas","Andreas","Alexander","Martin","Sander","Daniel","Magnus","Henrik","Tobias","Kristoffer","Emil","Adrian","Sebastian","Marius","Elias","Fredrik","Thomas","Sondre","Benjamin","Jakob","Oliver","Lucas","Oskar","Nikolai","Filip","Mats","William","Erik","Simen","Ole","Eirik","Isak","Kasper","Noah","Lars","Joakim","Johannes","Håkon","Sindre","Jørgen","Herman","Anders","Jonathan","Even","Theodor","Mikkel","Aksel"]})),Q2=c((()=>{IA=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{female_first_name} #{female_first_name} #{last_name}","#{male_first_name} #{male_first_name} #{last_name}","#{first_name} #{last_name} #{last_name}","#{first_name} #{last_name}"]})),Y2=c((()=>{VA=["Dr.","Prof."]})),$2=c((()=>{GA=["Jr.","Sr.","I","II","III","IV","V"]})),X2=c((()=>{U2(),W2(),Z2(),q2(),Q2(),Y2(),$2(),HA={female_first_name:KA,first_name:RA,last_name:zA,male_first_name:OA,name:IA,prefix:VA,suffix:GA}})),e8=c((()=>{FA=["########","## ## ## ##","### ## ###","+47 ## ## ## ##"]})),a8=c((()=>{e8(),JA={formats:FA}})),n8=c((()=>{I2(),H2(),J2(),X2(),a8(),UA={title:"Norwegian",address:BA,company:DA,internet:CA,name:HA,phone_number:JA}})),i8=c((()=>{WA=["Bhaktapur","Biratnagar","Birendranagar","Birgunj","Butwal","Damak","Dharan","Gaur","Gorkha","Hetauda","Itahari","Janakpur","Kathmandu","Lahan","Nepalgunj","Pokhara"]})),r8=c((()=>{ZA=["Nepal"]})),t8=c((()=>{qA=[0]})),o8=c((()=>{QA=["Baglung","Banke","Bara","Bardiya","Bhaktapur","Bhojupu","Chitwan","Dailekh","Dang","Dhading","Dhankuta","Dhanusa","Dolakha","Dolpha","Gorkha","Gulmi","Humla","Ilam","Jajarkot","Jhapa","Jumla","Kabhrepalanchok","Kalikot","Kapilvastu","Kaski","Kathmandu","Lalitpur","Lamjung","Manang","Mohottari","Morang","Mugu","Mustang","Myagdi","Nawalparasi","Nuwakot","Palpa","Parbat","Parsa","Ramechhap","Rauswa","Rautahat","Rolpa","Rupandehi","Sankhuwasabha","Sarlahi","Sindhuli","Sindhupalchok","Sunsari","Surket","Syangja","Tanahu","Terhathum"]})),s8=c((()=>{i8(),r8(),t8(),o8(),YA={city:WA,default_country:ZA,postcode:qA,state:QA}})),l8=c((()=>{$A=["Pvt Ltd","Group","Ltd","Limited"]})),u8=c((()=>{l8(),XA={suffix:$A}})),c8=c((()=>{eM=["np","com","info","net","org"]})),d8=c((()=>{aM=["worldlink.com.np","gmail.com","yahoo.com","hotmail.com"]})),h8=c((()=>{c8(),d8(),nM={domain_suffix:eM,free_email:aM}})),p8=c((()=>{iM=["Aarav","Ajita","Amit","Amita","Amrit","Arijit","Ashmi","Asmita","Bibek","Bijay","Bikash","Bina","Bishal","Bishnu","Buddha","Deepika","Dipendra","Gagan","Ganesh","Khem","Krishna","Laxmi","Manisha","Nabin","Nikita","Niraj","Nischal","Padam","Pooja","Prabin","Prakash","Prashant","Prem","Purna","Rajendra","Rajina","Raju","Rakesh","Ranjan","Ratna","Sagar","Sandeep","Sanjay","Santosh","Sarita","Shilpa","Shirisha","Shristi","Siddhartha","Subash","Sumeet","Sunita","Suraj","Susan","Sushant"]})),m8=c((()=>{rM=["Adhikari","Aryal","Baral","Basnet","Bastola","Basynat","Bhandari","Bhattarai","Chettri","Devkota","Dhakal","Dongol","Ghale","Gurung","Gyawali","Hamal","Jung","KC","Kafle","Karki","Khadka","Koirala","Lama","Limbu","Magar","Maharjan","Niroula","Pandey","Pradhan","Rana","Raut","Sai","Shai","Shakya","Sherpa","Shrestha","Subedi","Tamang","Thapa"]})),f8=c((()=>{p8(),m8(),tM={first_name:iM,last_name:rM}})),v8=c((()=>{oM=["##-#######","+977-#-#######","+977########"]})),g8=c((()=>{v8(),sM={formats:oM}})),k8=c((()=>{s8(),u8(),h8(),f8(),g8(),lM={title:"Nepalese",address:YA,company:XA,internet:nM,name:tM,phone_number:sM}})),y8=c((()=>{uM=["#","##","###","###a","###b","###c","### I","### II","### III"]})),b8=c((()=>{cM=["#{city_prefix}#{city_suffix}","#{city_prefix}"]})),S8=c((()=>{dM=["Aagte","Aal","Aalden","Aals","Aalst","Aalsum","Aanschot","Aarden","Aarle","Abbe","Abbegea","Abben","Abbestede","Abcoven","Absdale","Abts","Acht","Achter","Achterste","Achtmaal","Achttien","Acquoy","Aduard","Aduarder","Aekinga","Aerde","Aerden","Aerdt","Afferden","Aijen","Akersloot","Akker","Akkerput","Akkrun","Akmarijp","Aldeboarn","Aldegae","Aldtsjerk","Aling","Alkmaar","Allersma","Allinga","Almere","Alphen","Altena","Alteveer","Alting","Altweert","Alverna","Ameide","Amerika","Amerongen","Ammerstol","Ams","Amster","Andel","Angeren","Anholt","Anjum","Anke","Ankum","Anna","Annendaal","Anneville","Anreep","Ansen","Apeldoorn","Apen","Appel","Appen","Arcen","Archem","Arendnest","Arensge","Arkens","Armweide","Arnhem","Arnoud","Arriën","Arriër","Arum","Arwerd","Asch","Asenray","Asperen","Asschat","Assel","Asselt","Assen","Asten","Atze","Augs","Averlo","Avest","Azelo","Azewijn","Ba","Baaium","Baak","Baaks","Baal","Baamsum","Baan","Baard","Baarder","Baarle","Baarlo","Baars","Baarschot","Baexem","Baflo","Bahr","Bakel","Bakelse","Bakertand","Bakke","Bakkerom","Balgoij","Balinge","Ballast","Balleman","Ballum","Balma","Bane","Bankert","Bantega","Bare","Bargebek","Barlage","Barlaque","Barlo","Barnflair","Barrier","Bars","Basse","Basser","Baten","Bath","Bathmen","Bavinkel","Bazuin","Bears","Beckum","Bedaf","Bedum","Beekb","Beekkant","Beemdkant","Beemte","Beertsen","Beerze","Beerzer","Beesd","Beetgum","Beetgumer","Behelp","Beilen","Beinum","Beke","Beldert","Belgen","Belgeren","Belt","Belvert","Bemmel","Bemmer","Benderse","Beneden","Benne","Bennekom","Bent","Bente","Benthem","Berg","Bergakker","Bergen","Bergens","Bergerden","Bergharen","Berghem","Berghum","Bergstoep","Berik","Beringe","Berk","Berke","Berken","Berkt","Berlicum","Bern","Besse","Besthmen","Beswerd","Bethlehem","Beugt","Beuke","Beun","Beusb","Beusichem","Bever","Bidding","Biert","Bierum","Biessum","Biest","Biezen","Bigge","Bijster","Bijsteren","Billing","Bilt","Bingerden","Bisselt","Bissen","Blaker","Blaricum","Blauhûs","Blauw","Blauwe","Blauwen","Bleijen","Bleijs","Blekslage","Blenkert","Blerick","Blessum","Blije","Blijham","Blijnse","Blok","Blokken","Blokum","Boazum","Boberden","Bocholtz","Bocht","Boeiink","Boek","Boekel","Boekelo","Boekelte","Boekend","Boer","Boerakker","Boerelaan","Boeren","Boerengat","Boerenhol","Boerhaar","Boijl","Boks","Boksum","Bokt","Bollinga","Bols","Bolst","Bolt","Bommerig","Bong","Bonkwert","Bonner","Bonrepas","Bontebok","Boomen","Boord","Borger","Borgharen","Borgs","Borgweg","Borkel","Borkeld","Born","Borne","Borneo","Bornwird","Bos","Boschkens","Bosje","Bosjes","Boskamp","Boskant","Boskoop","Boslust","Bosschen","Bosscher","Bosven","Boter","Botshoofd","Boukoul","Bourtange","Boven","Bovenstad","Boxtel","Braak","Braamt","Brabander","Brakel","Brand","Brande","Brandt","Brantgum","Breda","Brede","Bree","Breede","Breedeweg","Breehees","Breezand","Brem","Breskens","Breugel","Breukele","Breyvin","Brielle","Brigdamme","Brij","Brillerij","Briltil","Brinkmans","Britsum","Britswert","Broek","Broekens","Broekkant","Brommelen","Brons","Bruchem","Bruggen","Brugger","Bruil","Bruinisse","Bruister","Brumhold","Brunssum","Brunsting","Bruntinge","Buchten","Buggenum","Buis","Buiten","Bulkenaar","Bult","Bultinge","Bunne","Bunnik","Burdaard","Burger","Burgh","Burgt","Burgum","Burgwerd","Burstum","Burum","Bussel","Busselte","Busser","Buttinge","Buurtje","Cadier","Cadzand","Calfven","Calslagen","Caluna","Camerig","Capelle","Carnisse","Cartils","Castelré","Castenray","Castert","Castricum","Catsop","Chaam","Clinge","Coevorden","Colmont","Cornjum","Cornwerd","Cottessen","Crapoel","Crau","Crix","Crob","Croy","Culemborg","Daarle","Dale","Dalem","Dalen","Daler","Dalerend","Dalerpeel","Dallinge","Damwâld","Daniken","Darp","Dassemus","Dearsum","Dedgum","Deelen","Deelse","Deelshurk","Deense","Deest","Deil","Deinum","Dekes","Dekkers","Del","Delden","Delf","Delft","Dellen","Delwijnen","Demen","Den ","Deursen","Deuteren","Deventer","Dieden","Diemen","Diepen","Diependal","Diepswal","Diermen","Dieskant","Dieteren","Diever","Dijken","Dijker","Dijkster","Dijkwel","Dintelsas","Dinther","Dintherse","Diphoorn","Dirkshorn","Dis","Diunt","Doenrade","Does","Doeveren","Doezum","Doijum","Dokkum","Doldersum","Dom","Dommelen","Donderen","Dongen","Donia","Doniaga","Donzel","Dood","Doodstil","Doon","Doorn","Doornen","Doornik","Doorning","Doorwerth","Doosje","Dorkwerd","Dorst","Dorther","Douverge","Douwen","Draai","Drachten","Dreischor","Drie","Drieboere","Driehuis","Driene","Dries","Driewegen","Driezum","Drieën","Drijber","Drimmelen","Drogeham","Drogt","Dronrijp","Dronten","Druif","Drunen","Druten","Drylts","Duifhuis","Duinen","Duiven","Duizel","Duizend","Dulder","Dunsborg","Dussen","Duur","Duurends","Eagum","Earnewâld","Easterein","Eastermar","Easthim","Echt","Echten","Echtener","Echter","Eder","Eede","Eefsele","Eekt","Eekwerd","Eelde","Eelen","Eems","Eemster","Eemten","Een","Eenigen","Eenrum","Eenum","Eerde","Eersel","Eerste","Ees","Eesterga","Effen","Egchel","Egede","Egmond","Egypte","Eikelen","Eikelhof","Eimeren","Eindewege","Eindje","Ekamp","Elde","Elden","Eldik","Eldrik","Elft","Elkerzee","Ellemeet","Eller","Ellerhei","Ellersing","Elsen","Elshof","Elspeet","Elst","Elsteren","Elzet","Emmeloord","Emmen","Empel","Endepoel","Eng","Enge","Engel","Engelbert","Engelen","Engelum","Englum","Engwegen","Engwierum","Enk","Enschedé","Enspijk","Enumatil","Enzelens","Eper","Eppen","Erichem","Erlecom","Ermelo","Ermer","Escharen","Eschoten","Espelo","Essen","Etenaken","Etzenrade","Eursing","Eursinge","Euverem","Ever","Everd","Everlo","Everse","Ewer","Ewinkel","Exmorra","Eygels","Eyser","Ezinge","Ezuma","Faan","Falom","Farmsum","Fatum","Feerwerd","Fel","Ferwert","Fiemel","Fijfhûs","Finke","Finkum","Flieren","Flânsum","Fokkers","Follega","Folsgeare","Formerum","Fort","Fortmond","Foudgum","Fraamklap","Frankhuis","Frankrijk","Fransum","Friens","Frytum","Fûns","Gaag","Gaanderen","Gaar","Gaast","Gaasten","Gaastmar","Gaete","Gagel","Galder","Gameren","Gammelke","Ganzert","Gapinge","Garminge","Garnwerd","Garre","Garrels","Garst","Garyp","Gassel","Gasthuis","Gawege","Gebergte","Geefs","Geen","Geer","Gees","Geeuwen","Geffen","Gelders","Gelderse","Geleen","Gelkenes","Gellicum","Gemaal","Gement","Gemert","Gemonde","Gendt","Geneijgen","Genen","Gening","Genne","Gennep","Genooi","Gerheggen","Gerner","Gersloot","Gerven","Gerwen","Geulhem","Gever","Geverik","Gewande","Giers","Giessen","Gietelo","Giethmen","Giethoorn","Gijbe","Gijsselte","Gijzel","Gilze","Ginkel","Ginnum","Glaner","Goaiïngea","Godlinze","Goes","Goilberd","Goirle","Goldhoorn","Gooium","Goor","Gorinchem","Gorp","Gortel","Gouda","Gouderak","Goudseweg","Goënga","Graaf","Graauw","Gracht","Graet","Graf","Grafwegen","Gras","Graspeel","Graszode","Grathem","Grauwe","Grave","Grazen","Greonterp","Greup","Griete","Grijps","Grits","Groe","Groede","Groen","Groenekan","Groeneweg","Groenlo","Groep","Groes","Groessen","Groet","Groeve","Groeze","Gron","Groot","Groote","Grote","Grotel","Grou","Gytsjerk","Haaften","Haag","Haagje","Haaks","Haakswold","Haalderen","Haalweide","Haamstede","Haandrik","Haar","Haarlem","Haarsteeg","Haart","Haelen","Haerst","Hagestein","Haiink","Halder","Haler","Half","Halfmijl","Halfweg","Halle","Haller","Hallum","Halte","Halvink","Hamrik","Hamshorn","Handel","Hane","Hank","Hankate","Hansweert","Hantum","Hantumer","Harculo","Harde","Hardinx","Haren","Harener","Haring","Harke","Harkema","Harl","Harles","Harpel","Harre","Harse","Harskamp","Harssens","Hartwerd","Haspel","Hasselt","Hasselter","Hatte","Hattem","Hauwert","Havelt","Havelte","Hayum","Haze","Hazenhurk","Hazennest","Heaburgen","Hedel","Hedik","Heech","Heegher","Heek","Heelsum","Heems","Heemstede","Heenweg","Heer","Heerde","Heere","Heeren","Heers","Hees","Heesakker","Heesbeen","Heesboom","Heesch","Heesselt","Heet","Heezeren","Hefswal","Hegge","Hei","Heiakker","Heibloem","Heid","Heide","Heidekant","Heiden","Heier","Heihoefke","Heij","Heijen","Heikant","Heikantse","Heille","Heine","Heioord","Heister","Heitrak","Hekel","Hekkum","Hel","Helden","Helkant","Hell","Helle","Hellegat","Hellen","Hellevoet","Helling","Hellouw","Helwerd","Hemert","Hemrik","Hendrik","Henge","Herfte","Herike","Herk","Herken","Hermalen","Hernen","Herpen","Herpt","Hersel","Hersend","Hert","Herten","Hertme","Herveld","Herwen","Herwijnen","Herxen","Hesens","Hespe","Hessum","Heugde","Heukelom","Heukelum","Heult","Heumen","Heure","Heurne","Heusden","Heuvel","Heuvels","Heuveltje","Hexel","Heze","Hiaure","Hichtum","Hidaard","Hien","Hierden","Hieslum","Hijken","Hijum","Hilaard","Hilakker","Hild","Hill","Hilte","Hilversum","Hinnaard","Hintham","Hitsertse","Hodenpijl","Hoef","Hoefkens","Hoek","Hoekdries","Hoekelum","Hoekens","Hoekje","Hoeks","Hoekske","Hoetmans","Hoeve","Hoeven","Hoeves","Hoge","Hogert","Hogeweg","Holker","Hollum","Holm","Holset","Holsloot","Holst","Holt","Holte","Holten","Holter","Holthe","Holtien","Holtinge","Holtum","Holwerd","Holwierde","Holwinde","Hommelse","Hommert","Hommerts","Honderd","Honds","Hondsrug","Hongerige","Honthem","Hoog","Hoogcruts","Hooge","Hoogehaar","Hoogen","Hoogeweg","Hooghalen","Hoogmade","Hoogmeien","Hoogwatum","Hool","Hoon","Hoonte","Hoorn","Hoornder","Hoptille","Horck","Horick","Horn","Horssen","Horsten","Horzik","Hout","Houterd","Houtgoor","Houthei","Houthem","Houw","Houwer","Hugten","Huij","Huinen","Huinerwal","Huis","Huissen","Huize","Huizinge","Hul","Huls","Hulsen","Hulst","Hulten","Hultje","Humcoven","Hunnecum","Hunsel","Hupsel","Hurkske","Hurpesch","Hutten","Huurne","Höchte","Höfke","Húns","Idaerd","Idserda","Idsken","Idzegea","Iens","IJmuiden","IJpe","IJpelo","IJsselham","IJzen","IJzeren","IJzerlo","Illik","Indoornik","Ingwert","Inia","Itens","Itteren","Jaars","Jammer","Jannum","Jellum","Jelsum","Jeth","Jipsing","Jirnsum","Jislum","Jisp","Jistrum","Jonas","Jonen","Jonkers","Jorwert","Joure","Jous","Jousterp","Jouswerd","Jouwer","Jubbega","Jukwerd","Junne","Jutryp","Kaag","Kaakhorn","Kaard","Kaarschot","Kaat","Kade","Kadoelen","Kalis","Kalteren","Kameren","Kamp","Kampen","Kamper","Kamperei","Kampers","Kamperzee","Kantens","Kantje","Kapel","Kapelle","Kapolder","Kappert","Karre","Kasen","Kasteren","Kater","Katerveer","Kathagen","Katlijk","Kats","Katwijk","Kaumes","Kavel","Kaweide","Kedichem","Keegen","Keent","Keersop","Keinsmer","Keizers","Kekerdom","Kelmond","Kelpen","Kempkens","Kerk","Kerken","Kerkhof","Kerkrade","Kerkwerve","Keske","Kessel","Kesseleik","Ketting","Keulse","Keunen","Keup","Keuter","Kibbel","Kiel","Kiester","Kievit","Kijf","Kijfwaard","Kijkuit","Kilder","Kille","Kimswerd","Kinderbos","Kink","Kinnum","Kipper","Klaaswaal","Kladde","Klaren","Klatering","Klef","Klei","Klein","Kleinder","Kleine","Kleinge","Klem","Kletter","Klevers","Klispoel","Klomp","Klooster","Klosse","Klösse","Knaphof","Knegsel","Knipe","Knol","Knolle","Knuiters","Koedood","Koehool","Koekange","Koekanger","Koekoek","Koel","Koevering","Kokkelert","Kolder","Kolhol","Kolhorn","Kolk","Kollum","Kolonie","Kommer","Konings","Koog","Kooi","Kooldert","Kopaf","Korhorn","Korn","Kornhorn","Kort","Korte","Korteraar","Korteven","Kortgene","Kostvlies","Koude","Kouden","Koudhoorn","Koulen","Kraan","Kraanven","Kraats","Krabben","Krachtig","Kranen","Krassum","Kreek","Kreielt","Kreijel","Kreijl","Krewerd","Krim","Krimpen","Krol","Kruin","Kruishaar","Kruispunt","Kruisweg","Kuikhorne","Kuiks","Kuinre","Kuitaart","Kuivezand","Kulert","Kulsdom","Kunrade","Kutt","Kuundert","Kuzemer","Kwaal","Kwakel","Kwakkel","Kwartier","Kûkherne","Laag","Laaghalen","Laaghaler","Laak","Laaksum","Laan","Lage","Lagekant","Lageweg","Lakei","Laker","Lalle","Lammer","Lammerweg","Lamperen","Landerum","Landsrade","Lang","Lange","Langeraar","Langerak","Langereit","Lank","Lankes","Laren","Laskwerd","Lattrop","Laude","Lauwer","Ledeacker","Leeg","Leegte","Leek","Leem","Leen","Leens","Leensel","Leermens","Leersum","Leeuw","Leeuwerik","Leeuwte","Lege","Legert","Leiden","Leimuiden","Leker","Lekker","Lelystad","Lemel","Lemele","Lemmer","Lemselo","Lengel","Lent","Lenthe","Leons","Lerop","Lethe","Lettele","Leuke","Leunen","Leur","Leusden","Leutes","Leuth","Leuven","Leuvenum","Leveroy","Lexmond","Lhee","Lichtaard","Lichtmis","Liefkens","Liempde","Lienden","Lier","Lieren","Lierop","Lies","Lievelde","Lieving","Lijnden","Limbricht","Limmen","Linde","Lingsfort","Lintelo","Lintvelde","Lioessens","Lippen","Lith","Lithoijen","Lobith","Loc","Locht","Loenen","Loer","Loete","Logt","Loil","Lollum","Lomm","Lonneker","Loo","Loobrink","Loofaert","Looi","Looien","Look","Loon","Loons","Loonse","Looveer","Loppersum","Lovendaal","Loveren","Loënga","Lubbinge","Luchen","Luchten","Luissel","Luitert","Lula","Lunen","Lunteren","Lunters","Lutjegast","Lutjerijp","Lutke","Lutkepost","Lutten","Lutter","Lytse","Lytshuzen","Maagd","Maaijkant","Maalb","Maaldrift","Maalstede","Maar","Maarn","Maars","Maarssen","Maasband","Maasbree","Maaskant","Maat","Maatsehei","Macharen","Made","Magele","Magrette","Makkum","Mal","Malden","Mallem","Mamelis","Manen","Mantgum","Mantinge","Maren","Maria","Maris","Mark","Markvelde","Marle","Marrum","Mars","Marssum","Marsum","Martens","Marum","Mataram","Maten","Mathijs","Maurik","Maxet","Medemblik","Medevoort","Medler","Meed","Meeden","Meele","Meemortel","Meene","Meer","Meeren","Meern","Meerten","Meerven","Meerwijck","Megelsum","Megen","Meije","Meijel","Melick","Melis","Melissant","Menaldum","Mensinge","Menzel","Meppen","Merkel","Merm","Merselo","Merum","Mesch","Meteren","Metsla","Midbuul","Midde","Middel","Middelijk","Midden","Middenhof","Midlaren","Midlum","Mids","Midwolde","Miedum","Mildert","Milheeze","Mill","Mils","Milschot","Minkeloos","Mispel","Moddergat","Moer","Moeren","Moerslag","Moespot","Molembaix","Molenbaan","Molenbelt","Molengat","Molenhof","Molenperk","Molenrij","Molenstad","Molkwar","Monster","Montfort","Mook","Moord","Moorsel","Morige","Morra","Mortel","Mosbulten","Mosik","Moskou","Mosse","Mossel","Most","Muggenhol","Muis","Muizenhol","Mulderij","Mullegen","Munneke","Munnekens","Munniken","Munte","Murns","Mussel","Mûnein","Naarder","Nabbegat","Nagel","Nansum","Napels","Natten","Neder","Nederbiel","Neer","Neerijnen","Neeritter","Neerloon","Neerst","Negen","Nekke","Nergena","Nia","Nie","Niebert","Niehove","Nier","Niersen","Niesoord","Nieuw","Nieuwaal","Nieuwe","Nieuwer","Nieuwklap","Nieuwkoop","Nieuwolda","Nieuwstad","Niftrik","Nijega","Nijehaske","Nijesyl","Nijken","Nijkerker","Nijlân","Nijmegen","Nijnsel","Nijrees","Nijstad","Nijve","Nispense","Noardein","Noenes","Nolde","Noord","Noorden","Noorder","Noordhorn","Noordink","Noordkant","Noordse","Notendaal","Notsel","Noukoop","Nuenen","Nuijen","Nuil","Nuis","Nunhem","Nunspeet","Nuth","Obbicht","Ock","Oegst","Oekel","Oeken","Oele","Oensel","Oentsjerk","Oerle","Oete","Oever","Offinga","Ofwegen","Ohé;","Oijen","Oirlo","Oirs","Okswerd","Olde","Oldehove","Oldemarkt","Olden","Oldeneel","Oldenhave","Oldeouwer","Oldörp","Olen","Oler","Oling","Olterterp","Ommel","Ommen","Ommeren","Onder","Onna","Onsenoort","Onstwedde","Ooij","Ooijen","Oost","Oostappen","Ooste","Ooster","Oosterend","Oosterens","Oosterhof","Oosterik","Oosternie","Oosternij","Oosterse","Oosterzee","Oosthem","Oostindië","Oostrum","Oostum","Oostwold","Oostzaan","Op","Opende","Ophemert","Ophuis","Opijnen","Opmeeden","Opper","Opperdoes","Opperduit","Opwetten","Opwierde","Oranje","Orvelte","Osen","Oshaar","Ospel","Ossen","Ossenisse","Ostaaijen","Osterbos","Othene","Otterlo","Ottersum","Ou","OuBildt","Oude","Oudega","Oudehaske","Oudehorne","Ouden","Oudenrijn","Ouder","Oudeschip","Oudleusen","Oukoop","OuLeede","OuLeije","OuPolder","OuSchouw","OuStaten","OuStee","OuStoof","OuStrumpt","OuWaranda","Ouwer","OuWillem","Ouwster","Oventje","Over","Overa","Overakker","Overbiel","Overeys","Overgeul","Overheek","Overschot","Overval","Overwater","Paal","Paarde","Paarlo","Paauwen","Paddepoel","Padhuis","Paesens","Palestina","Pallert","Pandgat","Panheel","Pann","Pannerden","Papen","Papenveer","Park","Parrega","Partij","Pasop","Patrijzen","Peebos","Peelkant","Peij","Peizerweg","Pelikaan","Pepinus","Pernis","Pers","Pesaken","Peters","Petten","Piaam","Pieperij","Piepert","Piershil","Pieter","Pikesyl","Piksen","Pingjum","Pinkeveer","Pitteperk","Plaat","Plaats","Plak","Plantage","Plas","Plat","Plein","Poffert","Polen","Polle","Pollen","Ponte","Poonhaven","Poppen","Posterenk","Posthoorn","Pot","Praets","Prickart","Puiflijk","Punt","Purmer","Purmerend","Puth","Putse","Putten","Putters","Pyramide","Raai","Raak","Raam","Raar","Raard","Raayen","Raerd","Rakens","Rakt","Rand","Rande","Randen","Ranum","Raren","Rasquert","Ratte","Ravensgat","Reahûs","Rechteren","Rectum","Reduzum","Reeth","Reidswal","Reitsum","Remswerd","Renesse","Renkum","Renneborg","Rens","Respel","Ressen","Reters","Reth","Reuth","Reutje","Reuzen","Rewert","Rhaan","Rheder","Rhee","Rhenoy","Rhoon","Ridder","Riel","Rien","Riet","Rietven","Rijckholt","Rijen","Rijke","Rijkel","Rijker","Rijlst","Rijnsater","Rijsb","Rijsoord","Rijt","Rijtjes","Ril","Rimpelt","Rink","Rips","Rith","Ritsuma","Roeke","Roekel","Roelage","Roels","Roermond","Roeven","Roggel","Rohel","Rolaf","Roligt","Rollecate","Rolpaal","Rome","Rond","Ronduite","Rood","Roodehaan","Rooden","Roond","Roosteren","Rooth","Ropta","Roskam","Rothem","Rott","Rotte","Rotter","Rotting","Rottum","Rozendaal","Rucphen","Ruif","Ruigen","Ruigezand","Ruimel","Ruinen","Ruischer","Ruiten","Rukven","Rullen","Rumpt","Rund","Rusven","Rut","Ryptsjerk","Rytseterp","Saaksum","Saaxum","Salverd","Sandebuur","Santfort","Santpoort","Sasput","Sauwerd","Schaa","Schaaphok","Schaaps","Schadron","Schafelt","Schaft","Schagen","Schager","Schandelo","Schans","Schapers","Scharen","Scharne","Scharster","Schatkuil","Schaveren","Scheemder","Schelf","Schellach","Schelm","Schettens","Schey","Schieven","Schijf","Schijndel","Schillers","Schimmert","Schin","Schinnen","Schippers","School","Schoon","Schoonen","Schoor","Schoorl","Schoot","Schore","Schoter","Schotters","Schouw","Schouwen","Schouwer","Schraard","Schrap","Schuilen","Schuring","Schuwacht","Sebalde","Seerijp","Sell","Selmien","Selwerd","Seroos","Seters","Sibbe","Siberië","Siegers","Simpel","Sinouts","Sinsel","Sint","Sion","Sittard","Sjunga","Skarl","Skillaerd","Skou","Skrins","Skyldum","Slee","Sleen","Slegge","Slek","Slichten","Sliffert","Slijkwell","Slikken","Sloot","Sluis","Smakt","Smal","Smalle","Smeerling","Smelbrêge","Smele","Smilde","Smits","Sneek","Sneiders","Snelle","Sneps","Snikzwaag","Snipperij","Snoden","Soeter","Solwerd","Someren","Sopsum","Spaanrijt","Spaanse","Spaken","Spannen","Spannum","Spears","Spek","Spekklef","Spekt","Speuld","Speurgt","Spier","Spijk","Spik","Spits","Spoolde","Spoor","Sprang","Sprundel","Spurkt","Stad","Stadterij","Starten","Stations","Staverden","Stedum","Steeg","Steegh","Steel","Steen","Steenkamp","Steenoven","Steenpaal","Steensel","Steenvak","Stegen","Steger","Stegeren","Stein","Sterken","Sterre","Steurgat","Stevens","Stevert","Stiem","Stiens","Stitswerd","Stobben","Stokhem","Stokkelen","Stokkum","Stokske","Stokt","Stolpen","Stomme","Stoof","Stork","Stouten","Stox","Strand","Straten","Strateris","Streek","Strepen","Streukel","Strij","Strijen","Strijp","Stroet","Stroo","Stroopuit","Strubben","Strucht","Strype","Stuw","Sumar","Sumarre","Surhuizum","Susteren","Suttum","Suwâld","Swaenwert","Swalmen","Sweik","Syt","Sânfurd","Taarlo","Teeffelen","Teije","Teijl","Telgt","Tempel","Ter","Terband","Terblijt","Terdiek","Tereyken","Tergêft","Terhagen","Terheijl","Terherne","Terkaple","Terlet","Terlinden","Termaar","Termoors","Termunten","Termunter","Ternaard","Teroele","Terover","Tersoal","Tervaten","Tervoorst","Tervoort","Terwispel","Terwolde","Terziet","Teuge","Theetuin","Themaat","Tholen","Thull","Thuserhof","Tibma","Tiel","Tielse","Tiggelt","Tijnje","Tike","Til","Timmer","Tippe","Tjaard","Tjams","Tjerkwerd","Tjoene","Tolbert","Tolkamer","Tommel","Tongeren","Tongerlo","Tonsel","Toom","Toornwerd","Top","Toren","Toterfout","Toven","Tragel","Tranendal","Trege","Trent","Tricht","Triemen","Trimpert","Trintelen","Tritzum","Tronde","Trophorne","Trutjes","Tuil","Tull","Tungelroy","Turns","Tusschen","Tuut","Tuuthees","Twee","Tweedeweg","TweeTol","Twekkelo","Twello","Twijzel","Twijzeler","Twisk","Tynaarlo","Tytsjerk","Ubach","Ubbena","Ubber","Uddel","Uffelsen","Uffelte","Uit","Uiter","Uithoorn","Uitwierde","Ulfter","Ulicoten","Ulrum","Ulsda","Ulvend","Unga","Uppel","Usquert","Usselo","Vaals","Vaar","Vaarle","Vaart","Vaesrade","Valk","Valken","Valom","Valsteeg","Varik","Varsen","Varssel","Vebenabos","Vecht","Veecaten","Veele","Veeler","Veen","Veenhof","Veenhoop","Veenhuis","Veere","Veessen","Veghel","Veld","Veldbraak","Velde","Velden","Veldhuis","Veldzicht","Velp","Velsen","Veluwe","Vemde","Ven","Venbe","Vene","Venekoten","Venlo","Venne","Venray","Venweg","Vergelt","Verloren","Vessem","Vestjens","Vet","Vetterik","Veulen","Vianen","Viel","Vier","Vierhuis","Vijcie","Vijf","Vilgert","Vilsteren","Vilt","Vink","Vinkel","Vinken","Vinkepas","Vis","Visschers","Vissers","Vlaas","Vlake","Vlas","Vledder","Vleet","Vleuten","Vlie","Vliegert","Vlieghuis","Vlijmen","Vliss","Vlist","Vlodrop","Vloei","Vloet","Vlootkant","Vogelfort","Volthe","Voor","Voorne","Voorrijp","Voorst","Voorstad","Voorste","Voorster","Voort","Voortje","Voorweg","Vorchten","Vorst","Vorsten","Voske","Voskuil","Vosse","Vossebelt","Vosselen","Vossen","Voulwames","Vrachelen","Vragender","Vredepeel","Vree","Vries","Vriezen","Vrij","Vrijhoeve","Vrilk","Vroe","Vroelen","Vuile","Vuilpan","Vuren","Waaksens","Waal","Waar","Waard","Waarde","Waarden","Waarder","Waatskamp","Wachtum","Waddinx","Wadway","Wadwerd","Wagen","Waije","Walder","Walik","Walsert","Wammert","Wanneper","Wanroij","Wapen","Wapse","Wapser","Warf","Warffum","Warfster","Warmen","Warmond","Warnia","Warstiens","Warten","Waspik","Water","Wateren","Waterkant","Waterop","Waterval","Waver","Weakens","Wedde","Wedder","Wee","Weeg","Weende","Weerd","Weerdinge","Weere","Weert","Weerwille","Wehe","Wehl","Weidum","Weij","Weijer","Weijpoort","Weilens","Weimeren","Weipoort","Weite","Weitemans","Weiwerd","Wekerom","Wele","Wells","Welsum","Wely","Wenum","Weper","Wercheren","Weren","Wergea","Werk","Wernhouts","Wesch","Wessing","Wessinge","West","Westeneng","Wester","Westerein","Westerlee","Westernie","Westerse","Westhim","Westlaren","Westmaas","Westrik","Wetering","Wetsens","Weurt","Wevers","Weverslo","Wezel","Wezep","Wezup","Wezuper","Wielder","Wieler","Wielse","Wiene","Wierren","Wierum","Wiesel","Wieuwens","Wijchen","Wijnaldum","Wijnb","Wijnje","Wijster","Wijthmen","Wijzend","Wilderhof","Wildert","Wilgen","Wilp","Wils","Wilsum","Winde","Windraak","Winkel","Winkels","Winssen","Winsum","Wintelre","Winthagen","Wirdum","Wisse","Wissel","Wissen","Witharen","Withuis","Witman","Witmarsum","Witrijt","Witte","Wittelte","Witten","Wiuwert","Wjelsryp","Woerd","Woerdense","Woezik","Wognum","Wolfers","Wolfhaag","Wolfhagen","Wolfheze","Wolfs","Wolfshuis","Wolling","Wolsum","Wommels","Wonne","Wons","Woord","Wopereis","Wordragen","Wormer","Worsum","Woubrugge","Wouwse","Wulpenbek","Wyns","Wytgaard","Wâldsein","Wânswert","Yerseke","Yndyk","Zaamslag","Zaarvlaas","Zalk","Zand","Zande","Zandfort","Zandkant","Zandoerle","Zandplaat","Zandpol","Zandput","Zandvoort","Zee","Zeegat","Zeegse","Zeerijp","Zeesse","Zegge","Zeijen","Zeijer","Zeist","Zelder","Zelen","Zelt","Zenderen","Zethuis","Zeven","Zevenhuis","Zierikzee","Zieuwent","Zijder","Zijdewind","Zijp","Zijper","Zijtaart","Zilven","Zinkweg","Zittard","Zoeke","Zoelen","Zoelmond","Zoerte","Zoeter","Zoggel","Zomerven","Zond","Zorgvlied","Zoutkamp","Zuid","Zuider","Zuidhorn","Zuidlaren","Zuidwolde","Zuidzande","Zuidzijde","Zuilichem","Zundert","Zurich","Zutphen","Zuuk","Zwaag","Zwager","Zwanegat","Zwart","Zwarte","Zweek","Zwiggelte","Zwijn","Zwinderen","Zwolle"]})),A8=c((()=>{hM=[" aan de IJssel"," aan de Rijn","ambacht","beek","berg","bergen","bosch","broek","brug","buren","burg","buurt","dam","dijk","dijke","donk","dorp","eind","enmaes","gat","geest","heide","hoek","horst","hout","hoven","huizen","ingen","kerk","laar","land","meer","recht","schoten","sluis","stroom","swaerd","veen","veld","vliet","weer","wier","wijk","woud","woude","zijl",""]})),M8=c((()=>{pM=["Afghanistan","Akrotiri","Albanië","Algerije","Amerikaanse Maagdeneilanden","Amerikaans-Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua en Barbuda","Argentinië","Armenië","Aruba","Ashmore and Cartier Islands","Atlantic Ocean","Australië","Azerbeidzjan","Bahama's","Bahrein","Bangladesh","Barbados","Belarus","België","Belize","Benin","Bermuda","Bhutan","Bolivië","Bosnië-Herzegovina","Botswana","Bouvet Island","Brazilië","British Indian Ocean Territory","Britse Maagdeneilanden","Brunei","Bulgarije","Burkina Faso","Burundi","Cambodja","Canada","Caymaneilanden","Centraal-Afrikaanse Republiek","Chili","China","Christmas Island","Clipperton Island","Cocos (Keeling) Islands","Colombia","Comoren (Unie)","Congo (Democratische Republiek)","Congo (Volksrepubliek)","Cook","Coral Sea Islands","Costa Rica","Cuba","Cyprus","Denemarken","Dhekelia","Djibouti","Dominica","Dominicaanse Republiek","Duitsland","Ecuador","Egypte","El Salvador","Equatoriaal-Guinea","Eritrea","Estland","Ethiopië","European Union","Falkland","Faroe Islands","Fiji","Filipijnen","Finland","Frankrijk","Frans-Polynesië","Gabon","Gambia","Gaza Strip","Georgië","Ghana","Gibraltar","Grenada","Griekenland","Groenland","Guam","Guatemala","Guernsey","Guinea","Guinee-Bissau","Guyana","Haïti","Heard Island and McDonald Islands","Vaticaanstad","Honduras","Hongarije","Hongkong","Ierland","IJsland","India","Indonesië","Irak","Iran","Isle of Man","Israël","Italië","Ivoorkust","Jamaica","Jan Mayen","Japan","Jemen","Jersey","Jordanië","Kaapverdië","Kameroen","Kazachstan","Kenia","Kirgizstan","Kiribati","Koeweit","Kroatië","Laos","Lesotho","Letland","Libanon","Liberia","Libië","Liechtenstein","Litouwen","Luxemburg","Macao","Macedonië","Madagaskar","Malawi","Maldiven","Maleisië","Mali","Malta","Marokko","Marshall Islands","Mauritanië","Mauritius","Mayotte","Mexico","Micronesië","Moldavië","Monaco","Mongolië","Montenegro","Montserrat","Mozambique","Myanmar","Namibië","Nauru","Navassa Island","Nederland","Aruba","St. Maarten","Curacao","Nepal","Ngwane","Nicaragua","Nieuw-Caledonië","Nieuw-Zeeland","Niger","Nigeria","Niue","Noordelijke Marianen","Noord-Korea","Noorwegen","Norfolk Island","Oekraïne","Oezbekistan","Oman","Oostenrijk","Pakistan","Palau","Panama","Papoea-Nieuw-Guinea","Paracel Islands","Paraguay","Peru","Pitcairn","Polen","Portugal","Puerto Rico","Qatar","Roemenië","Rusland","Rwanda","Saint Helena","Saint Lucia","Saint Vincent en de Grenadines","Saint-Pierre en Miquelon","Salomon","Samoa","San Marino","São Tomé en Principe","Saudi-Arabië","Senegal","Servië","Seychellen","Sierra Leone","Singapore","Sint-Kitts en Nevis","Slovenië","Slowakije","Soedan","Somalië","South Georgia and the South Sandwich Islands","Southern Ocean","Spanje","Spratly Islands","Sri Lanka","Suriname","Svalbard","Syrië","Tadzjikistan","Taiwan","Tanzania","Thailand","Timor Leste","Togo","Tokelau","Tonga","Trinidad en Tobago","Tsjaad","Tsjechië","Tunesië","Turkije","Turkmenistan","Turks-en Caicoseilanden","Tuvalu","Uganda","Uruguay","Vanuatu","Venezuela","Verenigd Koninkrijk","Verenigde Arabische Emiraten","Verenigde Staten van Amerika","Vietnam","Wake Island","Wallis en Futuna","Wereld","West Bank","Westelijke Sahara","Zambia","Zimbabwe","Zuid-Afrika","Zuid-Korea","Zweden","Zwitserland"]})),T8=c((()=>{mM=["Nederland"]})),_8=c((()=>{fM=["#### ??"]})),w8=c((()=>{vM=["1 hoog","2 hoog","3 hoog","3 hoog achter"]})),j8=c((()=>{gM=["Noord-Holland","Zuid-Holland","Utrecht","Zeeland","Overijssel","Gelderland","Drenthe","Friesland","Groningen","Noord-Brabant","Limburg","Flevoland"]})),E8=c((()=>{kM=["#{street_name} #{building_number}"]})),N8=c((()=>{yM=["#{Name.first_name}#{street_suffix}","#{Name.last_name}#{street_suffix}"]})),B8=c((()=>{bM=["straat","laan","weg","plantsoen","park","gracht","dijk"]})),P8=c((()=>{y8(),b8(),S8(),A8(),M8(),T8(),_8(),w8(),j8(),E8(),N8(),B8(),SM={building_number:uM,city:cM,city_prefix:dM,city_suffix:hM,country:pM,default_country:mM,postcode:fM,secondary_address:vM,state:gM,street_address:kM,street_name:yM,street_suffix:bM}})),L8=c((()=>{AM=["rood","groen","blauw","koningblauw","geel","purper","muntgroen","groenblauw","wit","zwart","oranje","roze","grijs","donkergrijs","oker","terracotta","kastanjebruin","paars","turkoois","bruin","hemelsblauw","zalmroze","oudroze","appelgroen","levend wit","olijfgroen","magenta","limoen","ivoor","indigo","goud","fuchsia","cyaan","azuurblauw","lavendel","zilver"]})),D8=c((()=>{MM=["Boeken","Films","Muziek","Spelletjes","Elektronica","Computers","Huis","Tuin","Gereedschap","Kruiden","Gezondheid","Beauty","Speelgoed","Kinderen","Baby","Kleding","Schoenen","Sieraden","Sport","Verzorging","Auto","Industrieel"]})),x8=c((()=>{TM={adjective:["Klein","Ergonomisch","Rustiek","Intelligent","Prachtig","Ongelooflijk","Fantastisch","Praktisch","Slank","Geweldig","Algemeen","Handgemaakt","Ambachtelijk","Artistiek","Verantwoord","Uitgekiend","Zeldzaam","Verfijnd","Merkloos","Smakelijk"],material:["Staal","Glazen","Wollen","Houten","Beton","Plastic","Katoenen","Granieten","Rubberen","IJzeren","Zachte","Verse","Bevroren"],product:["Stoel","Auto","Computer","Toetsenbord","Muis","Fiets","Bal","Handschoenen","Broek","Shirt","Tafel","Bijzettafeltje","Boekenkast","Kaasschaaf","Leunstoel","Poef","Hangmat","Trui","Schoenen","Hoed","Handdoeken","Zeep","Tonijn","Kip","Vis","Kaas","Spek","Pizza","Salade","Worstjes","Chips"]}})),C8=c((()=>{L8(),D8(),x8(),_M={color:AM,department:MM,product_name:TM}})),K8=c((()=>{wM=["BV","V.O.F.","Groep","NV","Bedrijf","en Zonen","Combinatie"]})),R8=c((()=>{K8(),jM={suffix:wM}})),z8=c((()=>{EM={wide:["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],wide_context:["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],abbr:["jan","feb","mrt","apr","mei","jun","jul","aug","sep","okt","nov","dec"],abbr_context:["jan","feb","mrt","apr","mei","jun","jul","aug","sep","okt","nov","dec"]}})),O8=c((()=>{NM={wide:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"],wide_context:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"],abbr:["zo","ma","di","wo","do","vr","za"],abbr_context:["zo","ma","di","wo","do","vr","za"]}})),I8=c((()=>{z8(),O8(),BM={month:EM,weekday:NM}})),V8=c((()=>{PM=["ondersteunende","primaire","onderliggende","digitale","open source","virtuele","cross-platform","overtollige","online","haptische","multi-byte","Bluetooth","draadloze","minuscule","neurale","optische","solid state","mobiele","cruciale","kostbare","verwaarloosde","smakelijke"]})),G8=c((()=>{LM=["driver","protocol","bandbreedte","paneel","microchip","programma","port","kaart","array","verbinding","draad","stekker","systeem","sensor","firewall","harde schijf","pixel","alarm","voeding","monitor","toepassing","zender","bus","stroomkring","condensator","matrix"]})),H8=c((()=>{DM=["Als we de {{noun}} {{verb}}, dan kunnen we naar de {{abbreviation}} {{noun}} via de {{adjective}} {{abbreviation}} {{noun}}!","We moeten de {{adjective}} {{abbreviation}} {{noun}} {{verb}}!","Probeer om de {{abbreviation}} {{noun}} te {{verb}}, misschien gaat dat de {{adjective}} {{noun}} {{verb}}!","Je kan de {{noun}} niet {{verb}} zonder de {{adjective}} {{abbreviation}} {{noun}} te {{verb}}!","Gebruik de {{adjective}} {{abbreviation}} {{noun}}, dan kan je de {{adjective}} {{noun}} {{verb}}!","De {{abbreviation}} {{noun}} ligt eruit, jullie moeten de {{adjective}} {{noun}} {{verb}} zodat we de {{abbreviation}} {{noun}} kunnen {{verb}}!","Het maakt niet uit of we de {{noun}} {{verb}}, we moeten de {{adjective}} {{abbreviation}} {{noun}} {{verb}}!","Ik ga de {{adjective}} {{abbreviation}} {{noun}} {{verb}}, dat zou de {{noun}} moeten {{verb}}!"]})),F8=c((()=>{xM=["back-uppen","omzeilen","hacken","overschrijven","samenpersen","kopiëren","navigeren","indexeren","aansluiten","genereren","kwantificeren","berekenen","samenstellen","invoeren","verzenden","programmeren","herstarten","ontleden","in stukjes snijden","analyseren"]})),J8=c((()=>{V8(),G8(),H8(),F8(),CM={adjective:PM,noun:LM,phrase:DM,verb:xM}})),U8=c((()=>{KM=["nl","com","net","org","eu"]})),W8=c((()=>{RM=["gmail.com","yahoo.com","hotmail.com"]})),Z8=c((()=>{U8(),W8(),zM={domain_suffix:KM,free_email:RM}})),q8=c((()=>{OM=["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]})),Q8=c((()=>{q8(),IM={words:OM}})),Y8=c((()=>{VM=["Yarah","Vere","Siënna","Sanna","Salomë","Roxy","Nela","Myra","Liene","Lia","Kayleigh","Kaylee","Kato","Florence","Eefje","Dieke","Zeyneb","Wende","Vienna","Melisa","Maaike","Lova","Lilian","Juno","Joanna","Jesslyn","Jaelynn","Gioia","Claire","Alma","Aliya","Alisa","Zofia","Vivian","Nowi","Noami","Milana","Marlie","Macy","Maan","Lorena","Liselotte","Lien","Laure","Laila","Kim","Khadija","Joya","Jacoba","Gigi","Wilhelmina","Vivienne","Rose","Rana","Milly","Michelle","Marrit","Malou","Jaimy","Gaia","Fayen","Fabiënne","Eveline","Daisy","Babette","Aaltje","Scottie","Nomi","Mathilde","Linne","Laurie","Kyara","Jalou","Iva","Inara","Grace","Emmy","Elle","Diana","Céline","Selena","Safiya","Quinty","Oliwia","Nadine","Meghan","Marwa","Jada","Ines","Fardau","Eliana","Carmen","Ayana","Asya","Annabel","Amara","Alexandra","Rachel","Melissa","Melina","Luus","Jayda","Jacky","Eleonora","Asiya","Annemijn","Sare","Ninthe","Nena","Melody","Kira","Jasmine","Imani","Hira","Elynn","Dominique","Ashley","Aleyna","Pola","Noë","Lisanne","Lilou","Kiara","Jette","Jess","Isabeau","Floortje","Fiep","Fieke","Femm","Famke","Chelsey","Amelie","Vanessa","Skye","Sienna","Safa","Lydia","Esma","Daantje","Catharina","Carlijn","Asel","Amaya","Amalia","Ada","Zahra","Tirza","Nikkie","Mirre","Mayra","Lenne","Jule","Jana","Farah","Defne","Ariana","Yenthe","Renske","Medina","Liliana","Kenza","Jazz","Esra","Emilie","Dua","Chloe","Abby","Selma","Maren","Jolijn","Febe","Elodie","Djenna","Diede","Cataleya","Aliyah","Aisha","Teddy","Nika","Myla","Izzy","Dewi","Mirte","Mikki","Kensi","Karlijn","Jazzlynn","Imke","Eleanor","Wies","Thirza","Safae","Meyra","Lune","Jazzlyn","Faya","Arya","Nadia","Puk","Oumayra","Lois","Josefien","Vive","Fayenne","Celine","Nynke","Loes","Danique","Aurora","Angelina","Alya","Abigail","Tara","Quinn","Meike","Maartje","Jolien","Selina","Phileine","Miley","Lexie","Florine","Coco","Britt","Alyssa","Yasmine","Sammie","Nila","Lucie","Eef","Bella","Aylin","Ziva","Neeltje","Jesslynn","Jente","Jara","Bobbie","Yinthe","Megan","Freya","Donna","Alice","Milena","Joëlle","Jenna","Evelien","Nisa","Lott","Loa","Daphne","Dani","Maysa","Hidaya","Hayley","Gwen","Esther","Elize","Dana","Maxime","Madelief","Keet","Jip","Ize","Noëlla","Layla","Hendrika","Hafsa","Giulia","Eliza","Bowie","Marly","Linn","Jane","Filou","Zuzanna","Leyla","Fatima","Evie","Marley","Kyra","Hanne","Jailey","Ise","Adriana","Liza","Doris","Dina","Amina","Mina","Aaliyah","Romee","Pippa","Juliette","Alicia","Merle","Lea","Elina","Sena","Flore","Riley","Nour","Lizz","Jessie","Cornelia","Beau","Valerie","Silke","Valentina","Loua","Vieve","Vesper","Ruby","Nienke","Jula","Azra","Myrthe","Soof","Juliëtte","Lexi","Davina","Liya","Yasmin","Esmée","Amelia","Niene","Mette","Ela","Aimée","Joy","Ilse","Zeynep","Yfke","Elizabeth","Mare","Isra","Helena","Stella","Jinthe","Meryem","Janna","Isabelle","Maja","Lieve","Yuna","Pien","Faye","Pleun","Noortje","Janne","Novi","Ava","Sterre","Maeve","Elisabeth","Bibi","Ayla","Liyana","Mae","Leah","Marie","Juna","Lucy","Josephine","Victoria","Indy","Maryam","Jaylinn","Zoey","Rosie","Mira","Nore","Jinte","Zara","Bente","Senna","Pip","Alina","Féline","Aya","Anouk","Amélie","Lou","Nine","Jet","Robin","Nikki","June","Fem","Demi","Mirthe","Lana","Noëlle","Lise","Lilly","Jackie","Benthe","Bobbi","Fiene","Elisa","Maya","Jade","Emilia","Elif","Romy","Lot","Jolie","Guusje","Mara","Kate","Marit","Nola","Louise","Lola","Laura","Iris","Philou","Tessa","Inaya","Elise","Eline","Sam","Evy","Johanna","Femke","Charlie","Livia","Rosalie","Suus","Sanne","Fay","Fenne","Linde","Isabel","Puck","Lize","Rosa","Amira","Lily","Naomi","Lizzy","Liva","Juul","Jill","Hanna","Floor","Amber","Suze","Veerle","Merel","Anne","Cato","Charlotte","Kiki","Lena","Ivy","Feline","Jasmijn","Liz","Elena","Maria","Norah","Lara","Fien","Isabella","Luna","Amy","Sophia","Hailey","Bo","Vera","Julie","Lisa","Esmee","Noa","Ella","Lina","Mia","Sofia","Loïs","Hannah","Roos","Emily","Isa","Fenna","Elin","Fleur","Lynn","Sarah","Nova","Nina","Maud","Sofie","Milou","Lauren","Lotte","Eva","Noor","Liv","Yara","Olivia","Lieke","Nora","Saar","Evi","Anna","Sara","Tess","Julia","Zoë","Sophie","Mila","Emma"]})),$8=c((()=>{GM=["Amber","Anna","Anne","Anouk","Bas","Bram","Britt","Daan","Emma","Eva","Femke","Finn","Fleur","Iris","Isa","Jan","Jasper","Jayden","Jesse","Johannes","Julia","Julian","Kevin","Lars","Lieke","Lisa","Lotte","Lucas","Luuk","Maud","Max","Mike","Milan","Nick","Niels","Noa","Rick","Roos","Ruben","Sander","Sanne","Sem","Sophie","Stijn","Sven","Thijs","Thijs","Thomas","Tim","Tom"]})),X8=c((()=>{HM=["Bakker","Beek","Berg","Boer","Bos","Bosch","Brink","Broek","Brouwer","Bruin","Dam","Dekker","Dijk","Dijkstra","Graaf","Groot","Haan","Hendriks","Heuvel","Hoek","Jacobs","Jansen","Janssen","Jong","Klein","Kok","Koning","Koster","Leeuwen","Linden","Maas","Meer","Meijer","Mulder","Peters","Ruiter","Schouten","Smit","Smits","Stichting","Veen","Ven","Vermeulen","Visser","Vliet","Vos","Vries","Wal","Willems","Wit"]})),e3=c((()=>{FM=["Tymon","Steven","Semih","Seff","Sabir","Nico","Naoufal","Nadir","Mirza","Miguel","Manoah","Kenji","Kenan","Joseph","Jordy","Jeppe","Diego","Coen","Can","Bentley","Yasin","Tomas","Sjoerd","Savi","Safouane","Raphaël","Mas","Maes","Louie","Karam","John","Jelmer","Jayvano","Hein","Giel","Emin","Deen","Badr","Arda","Umut","Teunis","Silas","Rayen","Nikodem","Mex","Marius","Kayden","Jidde","Glenn","Frederik","Foss","Finnley","Ensar","Duco","Dies","Brenn","Yousef","Siep","Rohan","Osman","Nox","Natan","Mathijs","Marley","Jaxon","Jairo","Jaimy","Eray","Don","Chase","Bruno","Brian","Anton","Xander","Senne","Reza","Oliwier","Mitch","Krijn","Jorrit","Jimi","Dominik","Devin","Tobin","Stefan","Jakob","Igor","Giovanni","Dylano","Armin","Adrian","Youp","Sebas","Sander","Robert","Nils","Mozes","Micah","Menno","Jaylano","Ilias","Freek","Flip","Dion","Christopher","Ahmet","Yassir","Yannick","Valentino","Samuël","Noam","Mylan","Kenzo","Jona","Danilo","Bowie","Zain","Wolf","Thije","Theo","Mylo","Matz","Lieuwe","Joes","Jacobus","Idris","Gideon","Bruce","Abdullah","Zef","Viktor","Seb","Rover","Raphael","Kacper","Josh","Jeremiah","Deniz","Aleksander","Zev","Yves","Viggo","Naoufel","Matthew","Keano","Jaylen","Bo","Bjorn","Anouar","Abraham","Storm","Martin","Manu","Jefta","Djayden","Benyamin","Benja","Ahmad","Nino","Malik","Junayd","Isa","Finley","Ayman","Zeyd","Yassine","Sev","Rico","Mels","Maximilian","Leendert","Kick","Enzo","Sjors","Silvan","Peter","Otto","Milano","Marijn","Javi","Yahya","Wes","Toon","Tommy","Loet","Leonardo","Len","Kaan","Dax","Davy","Adriaan","Thiago","Mustafa","Merijn","Kerem","Johan","Isaiah","Bryan","Bastiaan","Axel","Toby","Thom","Noan","Marcus","Ismail","Davi","Bodi","Tieme","Ole","Nout","Musa","Moussa","Luciano","Liyam","Kyano","Dorian","Bradley","Wouter","Siebe","Ralph","Quin","Fender","Arie","Albert","Zion","Wessel","Rick","Miles","Mahir","Mads","Klaas","Flynn","Dexx","Anthony","Tristan","Mink","Mehmet","Maas","Lyam","Jorn","Joost","Christian","Alparslan","Tyler","Maher","Jakub","Alan","William","Rafaël","Jur","Jimmy","George","Christiaan","Brandon","Ace","Tibbe","Sebastian","Lorenzo","Bilal","Teije","Joe","Michael","Louay","Lou","Levy","Kevin","Isaac","Ilay","Harvey","Davey","Younes","Xem","Tycho","Seppe","Riv","Marinus","Maarten","Ayoub","Ahmed","Tuur","Tijmen","Kjeld","Fynn","Frenkie","Dante","Ayaz","Abe","Jackson","Bart","Xavier","Ted","Sebastiaan","Safouan","Midas","Gabriël","Fos","Douwe","Boet","Berend","Yassin","Rowan","Revi","Maurits","Marcel","Ivo","Eli","Shane","Rein","Muhammad","Lennox","Ivar","Huub","Tijs","Matthias","Juda","Dave","Antoni","Damin","Colin","Zakaria","Vincent","Sverre","Mik","Lennon","Donny","Thijn","Novan","Mart","Bob","Senna","Olaf","Mohammad","Julan","Riff","Jaivey","Collin","Nouri","Noël","Ferre","Mert","Boas","Sten","Gabriel","Pelle","Mark","Leo","Rafael","Oskar","Naud","Aras","Sami","Kasper","Jop","Ethan","Dirk","Bodhi","Eden","Bobby","Jordan","Ivan","Vinz","Twan","Odin","Manuel","Jesper","Scott","Raff","Luke","Brent","Zayd","Sil","Miran","Charlie","Amin","Valentijn","Eymen","Jules","Kees","Jayce","Matteo","Chris","Quinten","Mateo","Lux","Justin","Joey","Jay","Ayden","Laurens","Luka","Joah","Gerrit","Evan","Ben","Jari","Mika","Kian","Ian","Ilyas","Jort","Mike","Maxim","Ibrahim","Vigo","Victor","Louis","Jayson","Florian","Youssef","Vic","Raf","Filip","Yusuf","Timo","Vik","Micha","Matthijs","Lasse","Faas","Riley","Mace","Daniel","Jamie","Fabian","Nick","Muhammed","Luc","Imran","Joël","Niels","Philip","Milo","Lewis","Wout","Leon","Joas","Jasper","Seth","Omar","Koen","Julius","Beau","Rens","Mayson","Kay","Hamza","Daley","Robin","Nolan","Cornelis","Bas","Lukas","Jonathan","Jonas","Ali","Ravi","Hendrik","Sef","Lex","Thijmen","Damian","Arthur","Aron","Emir","Jonah","Ãmer","Jelte","Melle","Jacob","Alex","Jim","Elijah","Stef","Kaj","Johannes","Jelle","Joris","Jip","Aaron","Loek","Logan","Lev","Dylan","Simon","Kyan","Sep","Moos","Felix","Job","Elias","Ezra","Oscar","Casper","Duuk","Sepp","Pieter","Rayan","Aiden","Joshua","Dean","Niek","Lenn","Tygo","Jake","Stan","Kai","Roan","Mick","Mohammed","Dani","Nathan","Oliver","Alexander","Mohamed","Hidde","Samuel","Zayn","Amir","Xavi","Jurre","Boris","Senn","Jason","Pepijn","Quinn","Pim","Jace","Jax","Tijn","Tim","Willem","Jaxx","Otis","Fedde","Tom","Owen","Ryan","Tobias","Floris","Abel","Jayden","Sven","Morris","Cas","Ties","Daniël","Joep","Jan","Jens","Vince","Dex","Ruben","Olivier","Guus","Thijs","Stijn","Jack","David","Teun","Hugo","Mats","Gijs","Lars","Luca","Siem","Mason","Julian","Boaz","Benjamin","Thomas","Max","Adam","Jesse","Mees","Sam","Noud","Bram","Luuk","Milan","James","Liam","Finn","Sem","Levi","Lucas","Daan","Noah"]})),a3=c((()=>{JM=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{tussenvoegsel} #{last_name}","#{first_name} #{tussenvoegsel} #{last_name}"]})),n3=c((()=>{UM=["Dhr.","Mevr. Dr.","Bsc","Msc","Prof."]})),i3=c((()=>{WM=["Jr.","Sr.","I","II","III","IV","V"]})),r3=c((()=>{ZM=["van","van de","van den","van 't","van het","de","den"]})),t3=c((()=>{Y8(),$8(),X8(),e3(),a3(),n3(),i3(),r3(),qM={female_first_name:VM,first_name:GM,last_name:HM,male_first_name:FM,name:JM,prefix:UM,suffix:WM,tussenvoegsel:ZM}})),o3=c((()=>{QM=["(####) ######","##########","06########","06 #### ####"]})),s3=c((()=>{o3(),YM={formats:QM}})),l3=c((()=>{P8(),C8(),R8(),I8(),J8(),Z8(),Q8(),t3(),s3(),$M={title:"Dutch",address:SM,commerce:_M,company:jM,date:BM,hacker:CM,internet:zM,lorem:IM,name:qM,phone_number:YM}})),u3=c((()=>{XM=["#","##","###","###a","###b","###c"]})),c3=c((()=>{eT=["#{city_prefix}","#{city_prefix}#{city_suffix}"]})),d3=c((()=>{aT=["'s Herenelderen","'s-Gravenvoeren","'s-Gravenwezel","Aaigem","Aalbeke","Aalst","Aalst","Aalter","Aarschot","Aarsele","Aartrijke","Aartselaar","Achel","Adegem","Adinkerke","Afsnee","Alken","Alsemberg","Alveringem","Antwerpen","Anzegem","Appels","Appelterre-Eichem","Ardooie","Arendonk","As","Aspelare","Asper","Asse","Assebroek","Assenede","Assent","Astene","Attenhoven","Attenrode-Wever","Avekapelle","Avelgem","Averbode","Baaigem","Baal","Baardegem","Baarle-Hertog","Baasrode","Bachte-Maria-Leerne","Balegem","Balen","Bambrugge","Bassevelde","Batsheers","Bavegem","Bavikhove","Bazel","Beek","Beerlegem","Beernem","Beerse","Beersel","Beerst","Beert","Beervelde","Beerzel","Begijnendijk","Beigem","Bekegem","Bekkerzeel","Bekkevoort","Bellegem","Bellem","Bellingen","Belsele","Berbroek","Berchem","Berchem","Berendrecht-Zandvliet-Lillo","Berg","Berg","Beringen","Berlaar","Berlare","Berlingen","Bertem","Beselare","Betekom","Bevel","Bever","Bevere","Beveren","Beveren","Beveren","Beveren","Beverlo","Beverst","Bierbeek","Bikschote","Bilzen","Binderveld","Binkom","Bissegem","Blaasveld","Blanden","Blankenberge","Bocholt","Boechout","Boekhout","Boekhoute","Boezinge","Bogaarden","Bommershoven","Bonheiden","Booischot","Booitshoeke","Boom","Boorsem","Boortmeerbeek","Borchtlombeek","Borgerhout","Borgloon","Borlo","Bornem","Borsbeek","Borsbeke","Bossuit","Bost","Bottelare","Boutersem","Bouwel","Bovekerke","Brasschaat","Brecht","Bredene","Bree","Breendonk","Brielen","Broechem","Broekom","Brugge","Brussegem","Brustem","Budingen","Buggenhout","Buizingen","Buken","Bulskamp","Bunsbeek","Burcht","Burst","Buvingen","Dadizele","Daknam","Damme","De Klinge","De Moeren","De Panne","De Pinte","Deerlijk","Deftinge","Deinze","Denderbelle","Denderhoutem","Denderleeuw","Dendermonde","Denderwindeke","Dentergem","Dessel","Desselgem","Destelbergen","Desteldonk","Deurle","Deurne","Deurne","Diegem","Diepenbeek","Diest","Diets-Heur","Dikkebus","Dikkele","Dikkelvenne","Diksmuide","Dilbeek","Dilsen","Doel","Donk","Dormaal","Dranouter","Drieslinter","Drogenbos","Drongen","Dudzele","Duffel","Duisburg","Duras","Dworp","Edegem","Edelare","Eeklo","Eernegem","Egem","Eggewaartskapelle","Eigenbilzen","Eindhout","Eine","Eisden","Eke","Ekeren","Eksaarde","Eksel","Elen","Elene","Elewijt","Eliksem","Elingen","Ellikom","Elsegem","Elst","Elverdinge","Elversele","Emblem","Emelgem","Ename","Engelmanshoven","Eppegem","Erembodegem","Erondegem","Erpe","Erps-Kwerps","Ertvelde","Erwetegem","Esen","Essen","Essene","Etikhove","Ettelgem","Everbeek","Everberg","Evergem","Ezemaal","Gaasbeek","Galmaarden","Gavere","Geel","Geetbets","Gelinden","Gellik","Gelrode","Geluveld","Geluwe","Genk","Genoelselderen","Gent","Gentbrugge","Geraardsbergen","Gerdingen","Gestel","Gierle","Gijverinkhove","Gijzegem","Gijzelbrechtegem","Gijzenzele","Gingelom","Gistel","Gits","Glabbeek-Zuurbemde","Godveerdegem","Goeferdinge","Goetsenhoven","Gontrode","Gooik","Gors-Opleeuw","Gorsem","Gotem","Gottem","Grammene","Grazen","Grembergen","Grimbergen","Grimminge","Grobbendonk","Groot-Bijgaarden","Groot-Gelmen","Groot-Loon","Grote-Brogel","Grote-Spouwen","Grotenberge","Gruitrode","Guigoven","Gullegem","Gutschoven","Haacht","Haaltert","Haasdonk","Haasrode","Hakendover","Halen","Hallaar","Halle","Halle","Halle-Booienhoven","Halmaal","Hamme","Hamme","Hamont","Handzame","Hansbeke","Harelbeke","Hasselt","Hechtel","Heers","Hees","Heestert","Heffen","Heikruis","Heindonk","Heist","Heist-op-den-Berg","Hekelgem","Heks","Helchteren","Heldergem","Helen-Bos","Helkijn","Hemelveerdegem","Hemiksem","Hendrieken","Henis","Heppen","Herderen","Herdersem","Herent","Herentals","Herenthout","Herfelingen","Herk-de-Stad","Herne","Herselt","Herstappe","Herten","Hertsberge","Herzele","Heule","Heurne","Heusden","Heusden","Hever","Heverlee","Hillegem","Hingene","Hoboken","Hoegaarden","Hoeilaart","Hoeke","Hoelbeek","Hoeleden","Hoepertingen","Hoeselt","Hoevenen","Hofstade","Hofstade","Hollebeke","Holsbeek","Hombeek","Hooglede","Hoogstade","Hoogstraten","Horpmaal","Houtave","Houtem","Houthalen","Houthulst","Houtvenne","Houwaart","Hove","Huise","Huizingen","Huldenberg","Hulshout","Hulste","Humbeek","Hundelgem","Ichtegem","Iddergem","Idegem","Ieper","Impe","Ingelmunster","Ingooigem","Itegem","Itterbeek","Izegem","Izenberge","Jabbeke","Jesseren","Jeuk","Kaaskerke","Kachtem","Kaggevinne","Kalken","Kallo","Kalmthout","Kampenhout","Kanegem","Kanne","Kapelle-op-den-Bos","Kapellen","Kapellen","Kaprijke","Kaster","Kasterlee","Kaulille","Keerbergen","Keiem","Kemmel","Kemzeke","Kerkhove","Kerkom","Kerkom-bij-Sint-Truiden","Kerksken","Kermt","Kerniel","Kersbeek-Miskom","Kessel","Kessel-Lo","Kessenich","Kester","Kieldrecht","Kinrooi","Klein-Gelmen","Kleine-Brogel","Kleine-Spouwen","Klemskerke","Klerken","Kluizen","Knesselare","Knokke","Kobbegem","Koekelare","Koersel","Koksijde","Koningshooikt","Koninksem","Kontich","Kooigem","Koolkerke","Koolskamp","Korbeek-Dijle","Korbeek-Lo","Kortemark","Kortenaken","Kortenberg","Kortessem","Kortijs","Kortrijk","Kortrijk-Dutsel","Kozen","Kraainem","Krombeke","Kruibeke","Kruishoutem","Kumtich","Kuringen","Kuttekoven","Kuurne","Kwaadmechelen","Kwaremont","Laar","Laarne","Lampernisse","Lanaken","Landegem","Landen","Landskouter","Langdorp","Langemark","Lanklaar","Lapscheure","Lauw","Lauwe","Lebbeke","Lede","Ledeberg","Ledegem","Leefdaal","Leerbeek","Leest","Leeuwergem","Leffinge","Leisele","Leke","Lembeek","Lembeke","Lemberge","Lendelede","Leopoldsburg","Letterhoutem","Leupegem","Leut","Leuven","Lichtaart","Lichtervelde","Liedekerke","Lieferinge","Lier","Liezele","Lille","Linden","Linkebeek","Linkhout","Lint","Lippelo","Lissewege","Lo","Lochristi","Loenhout","Loker","Lokeren","Loksbergen","Lombardsijde","Lommel","Londerzeel","Loonbeek","Loppem","Lot","Lotenhulle","Lovendegem","Lovenjoel","Lubbeek","Lummen","Maarke-Kerkem","Maaseik","Machelen","Machelen","Mal","Maldegem","Malderen","Mannekensvere","Mariakerke","Mariekerke","Marke","Markegem","Martenslinde","Massemen","Massenhoven","Mater","Mazenzele","Mechelen","Mechelen-Bovelingen","Mechelen-aan-de-Maas","Meensel-Kiezegem","Meer","Meerbeek","Meerbeke","Meerdonk","Meerhout","Meerle","Meeswijk","Meetkerke","Meeuwen","Meigem","Meilegem","Meise","Melden","Meldert","Meldert","Meldert","Melkwezer","Melle","Melsbroek","Melsele","Melsen","Membruggen","Mendonk","Menen","Merchtem","Mere","Merelbeke","Merendree","Merkem","Merksem","Merksplas","Mesen","Mespelare","Messelbroek","Mettekoven","Meulebeke","Michelbeke","Middelburg","Middelkerke","Mielen-boven-Aalst","Millen","Minderhout","Moelingen","Moen","Moerbeke","Moerbeke","Moere","Moerkerke","Moerzeke","Mol","Molenbeek-Wersbeek","Molenbeersel","Molenstede","Mollem","Montenaken","Moorsel","Moorsele","Moorslede","Moortsele","Mopertingen","Moregem","Morkhoven","Mortsel","Muizen","Muizen","Mullem","Munkzwalm","Munsterbilzen","Munte","Nazareth","Nederboelare","Nederbrakel","Nederename","Nederhasselt","Nederokkerzeel","Nederzwalm-Hermelgem","Neerglabbeek","Neerharen","Neerhespen","Neerijse","Neerlanden","Neerlinter","Neeroeteren","Neerpelt","Neerrepen","Neervelp","Neerwinden","Neigem","Nerem","Nevele","Niel","Niel-bij-As","Niel-bij-Sint-Truiden","Nieuwenhove","Nieuwenrode","Nieuwerkerken","Nieuwerkerken","Nieuwkapelle","Nieuwkerke","Nieuwkerken-Waas","Nieuwmunster","Nieuwpoort","Nieuwrode","Nijlen","Ninove","Nokere","Noorderwijk","Noordschote","Nossegem","Nukerke","Oedelem","Oekene","Oelegem","Oeren","Oeselgem","Oetingen","Oevel","Okegem","Olen","Olmen","Olsene","Onkerzele","Onze-Lieve-Vrouw-Lombeek","Onze-Lieve-Vrouw-Waver","Ooigem","Ooike","Oombergen","Oorbeek","Oordegem","Oostakker","Oostduinkerke","Oosteeklo","Oostende","Oosterzele","Oostham","Oostkamp","Oostkerke","Oostkerke","Oostmalle","Oostnieuwkerke","Oostrozebeke","Oostvleteren","Oostwinkel","Opbrakel","Opdorp","Opglabbeek","Opgrimbie","Ophasselt","Opheers","Ophoven","Opitter","Oplinter","Opoeteren","Oppuurs","Opvelp","Opwijk","Ordingen","Orsmaal-Gussenhoven","Otegem","Ottenburg","Ottergem","Oud-Heverlee","Oud-Turnhout","Oudegem","Oudekapelle","Oudenaarde","Oudenaken","Oudenburg","Outer","Outgaarden","Outrijve","Ouwegem","Overboelare","Overhespen","Overijse","Overmere","Overpelt","Overrepen","Overwinden","Paal","Pamel","Parike","Passendale","Paulatem","Peer","Pellenberg","Pepingen","Perk","Pervijze","Petegem-aan-de-Leie","Petegem-aan-de-Schelde","Peutie","Piringen","Pittem","Poederlee","Poeke","Poelkapelle","Poesele","Pollare","Pollinkhove","Poperinge","Poppel","Proven","Pulderbos","Pulle","Putte","Puurs","Ramsdonk","Ramsel","Ramskapelle","Ramskapelle","Ransberg","Ranst","Ravels","Reet","Rekem","Rekkem","Relegem","Remersdaal","Reninge","Reningelst","Reppel","Ressegem","Retie","Riemst","Rijkel","Rijkevorsel","Rijkhoven","Rijmenam","Riksingen","Rillaar","Roborst","Roesbrugge-Haringe","Roeselare","Roksem","Rollegem","Rollegem-Kapelle","Romershoven","Ronse","Ronsele","Roosbeek","Rosmeer","Rotem","Rotselaar","Rozebeke","Ruddervoorde","Ruien","Ruisbroek","Ruisbroek","Ruiselede","Rukkelingen-Loon","Rumbeke","Rummen","Rumsdorp","Rumst","Runkelen","Rupelmonde","Rutten","Schaffen","Schalkhoven","Schelderode","Scheldewindeke","Schelle","Schellebelle","Schendelbeke","Schepdaal","Scherpenheuvel","Schilde","Schoonaarde","Schore","Schorisse","Schoten","Schriek","Schuiferskapelle","Schulen","Semmerzake","Serskamp","Sijsele","Sinaai","Sint-Agatha-Rode","Sint-Amands","Sint-Amandsberg","Sint-Andries","Sint-Antelinks","Sint-Baafs-Vijve","Sint-Blasius-Boekel","Sint-Denijs","Sint-Denijs-Boekel","Sint-Denijs-Westrem","Sint-Eloois-Vijve","Sint-Eloois-Winkel","Sint-Genesius-Rode","Sint-Gillis-Waas","Sint-Gillis-bij-Dendermonde","Sint-Goriks-Oudenhove","Sint-Huibrechts-Hern","Sint-Huibrechts-Lille","Sint-Jacobskapelle","Sint-Jan","Sint-Jan-in-Eremo","Sint-Job-in-'t-Goor","Sint-Joris","Sint-Joris","Sint-Joris-Weert","Sint-Joris-Winge","Sint-Katelijne-Waver","Sint-Katherina-Lombeek","Sint-Kornelis-Horebeke","Sint-Kruis","Sint-Kruis-Winkel","Sint-Kwintens-Lennik","Sint-Lambrechts-Herk","Sint-Laureins","Sint-Laureins-Berchem","Sint-Lenaarts","Sint-Lievens-Esse","Sint-Lievens-Houtem","Sint-Margriete","Sint-Margriete-Houtem","Sint-Maria-Horebeke","Sint-Maria-Latem","Sint-Maria-Lierde","Sint-Maria-Oudenhove","Sint-Martens-Bodegem","Sint-Martens-Latem","Sint-Martens-Leerne","Sint-Martens-Lennik","Sint-Martens-Lierde","Sint-Martens-Voeren","Sint-Michiels","Sint-Niklaas","Sint-Pauwels","Sint-Pieters-Kapelle","Sint-Pieters-Kapelle","Sint-Pieters-Leeuw","Sint-Pieters-Rode","Sint-Pieters-Voeren","Sint-Rijkers","Sint-Stevens-Woluwe","Sint-Truiden","Sint-Ulriks-Kapelle","Sleidinge","Slijpe","Sluizen","Smeerebbe-Vloerzegem","Smetlede","Snaaskerke","Snellegem","Spalbeek","Spiere","Stabroek","Staden","Stalhille","Stavele","Steendorp","Steenhuffel","Steenhuize-Wijnhuize","Steenkerke","Steenokkerzeel","Stekene","Stene","Sterrebeek","Stevoort","Stokkem","Stokrooie","Strijpen","Strijtem","Strombeek-Bever","Stuivekenskerke","Temse","Teralfene","Terhagen","Ternat","Tervuren","Tessenderlo","Testelt","Teuven","Tiegem","Tielen","Tielrode","Tielt","Tielt","Tienen","Tildonk","Tisselt","Tollembeek","Tongeren","Tongerlo","Tongerlo","Torhout","Tremelo","Turnhout","Uikhoven","Uitbergen","Uitkerke","Ulbeek","Ursel","Vaalbeek","Val-Meer","Varendonk","Varsenare","Vechmaal","Veerle","Veldegem","Veldwezelt","Velm","Veltem-Beisem","Velzeke-Ruddershove","Verrebroek","Vertrijk","Veulen","Veurne","Viane","Vichte","Viersel","Vilvoorde","Vinderhoute","Vinkem","Vinkt","Vissenaken","Vladslo","Vlamertinge","Vlekkem","Vlezenbeek","Vliermaal","Vliermaalroot","Vlierzele","Vlijtingen","Vlimmeren","Vlissegem","Volkegem","Vollezele","Voorde","Voormezele","Voort","Vorselaar","Vorsen","Vorst","Vosselaar","Vosselare","Vossem","Vrasene","Vremde","Vreren","Vroenhoven","Vucht","Vurste","Waanrode","Waarbeke","Waardamme","Waarloos","Waarmaarde","Waarschoot","Waasmont","Waasmunster","Wachtebeke","Wakken","Walem","Walsbets","Walshoutem","Waltwilder","Wambeek","Wange","Wannegem-Lede","Wanzele","Waregem","Waterland-Oudeman","Watervliet","Watou","Webbekom","Wechelderzande","Weelde","Weerde","Weert","Welden","Welle","Wellen","Wemmel","Wenduine","Werchter","Werken","Werm","Wervik","Wespelaar","Westende","Westerlo","Westkapelle","Westkerke","Westmalle","Westmeerbeek","Westouter","Westrem","Westrozebeke","Westvleteren","Wetteren","Wevelgem","Wezemaal","Wezembeek-Oppem","Wezeren","Wichelen","Widooie","Wiekevorst","Wielsbeke","Wieze","Wijchmaal","Wijer","Wijgmaal","Wijnegem","Wijshagen","Wijtschate","Wilderen","Willebringen","Willebroek","Wilrijk","Wilsele","Wilskerke","Wimmertingen","Wingene","Winksele","Wintershoven","Woesten","Wolvertem","Wommelgem","Wommersom","Wondelgem","Wontergem","Wortegem","Wortel","Woubrechtegem","Woumen","Wulpen","Wulvergem","Wulveringem","Wuustwezel","Zaffelare","Zandbergen","Zande","Zandhoven","Zandvoorde","Zandvoorde","Zarlardinge","Zarren","Zaventem","Zedelgem","Zegelsem","Zele","Zelem","Zellik","Zelzate","Zemst","Zepperen","Zerkegem","Zevekote","Zeveneken","Zeveren","Zevergem","Zichem","Zichen-Zussen-Bolder","Zillebeke","Zingem","Zoerle-Parwijs","Zoersel","Zolder","Zomergem","Zonhoven","Zonnebeke","Zonnegem","Zottegem","Zoutenaaie","Zoutleeuw","Zuidschote","Zuienkerke","Zulte","Zulzeke","Zutendaal","Zwevegem","Zwevezele","Zwijnaarde","Zwijndrecht"]})),h3=c((()=>{nT=["gem","tem","vijve","zele"]})),p3=c((()=>{iT=["België"]})),m3=c((()=>{rT=["####"]})),f3=c((()=>{tT=["1e verdieping","2e verdieping","3e verdieping"]})),v3=c((()=>{oT=["West-Vlaanderen","Oost-Vlaanderen","Vlaams-Brabant","Antwerpen","Limburg","Brussel"]})),g3=c((()=>{sT=["WVL","OVL","VBR","ANT","LIM","BRU"]})),k3=c((()=>{lT=["#{street_name} #{building_number}"]})),y3=c((()=>{uT=["#{Name.first_name}#{street_suffix}","#{Name.last_name}#{street_suffix}"]})),b3=c((()=>{cT=["straat","laan","weg","dreef","plein","park"]})),S3=c((()=>{u3(),c3(),d3(),h3(),p3(),m3(),f3(),v3(),g3(),k3(),y3(),b3(),dT={building_number:XM,city:eT,city_prefix:aT,city_suffix:nT,default_country:iT,postcode:rT,secondary_address:tT,state:oT,state_abbr:sT,street_address:lT,street_name:uT,street_suffix:cT}})),A3=c((()=>{hT=["NV","BVBA","CVBA","VZW"]})),M3=c((()=>{A3(),pT={suffix:hT}})),T3=c((()=>{mT=["be","brussels","vlaanderen","com","net","org"]})),_3=c((()=>{fT=["gmail.com","yahoo.com","hotmail.com","skynet.be"]})),w3=c((()=>{T3(),_3(),vT={domain_suffix:mT,free_email:fT}})),j3=c((()=>{gT=["Lucas","Liam","Louis","Noah","Lars","Arthur","Mathis","Kobe","Wout","Milan","Alexander","Daan","Adam","Vince","Jules","Victor","Finn","Stan","Leon","Seppe","Senne","Thomas","Mats","Robbe","Matteo","Ferre","Nathan","Warre","Jasper","Vic","Elias","Tuur","Lowie","Mauro","Maxim","Ruben","Rune","Mohamed","Simon","Rayan","Lukas","Lander","Xander","Emiel","Siebe","Jonas","Sam","Luca","Arne","Cas","Felix","Jack","Mathias","Jayden","Quinten","Tibo","Lewis","Sem","Maxime","Viktor","Emile","Sander","Aaron","Oscar","Bas","Niels","Jef","Nand","Lou","Tristan","Gust","David","Brent","Jelle","Lenn","Miel","Wannes","Gilles","Jarne","Alex","Imran","Lennert","Milo","Jens","Matthias","Dries","Axel","Juul","Hamza","Ilias","Thibo","Nicolas","Bent","Jesse","Bram","Maurice","Ilyas","Gabriel","Robin","Kasper","Emma","Louise","Marie","Elise","Noor","Ella","Julie","Lotte","Lore","Fien","Lena","Mila","Olivia","Amber","Anna","Elena","Hanne","Laura","Charlotte","Lina","Nina","Fleur","Lisa","Nora","Juliette","Luna","Amelie","Kato","Sara","Febe","Axelle","Janne","Eline","Helena","Noa","Camille","Roos","Lily","Jade","Nore","Jana","Manon","Sarah","Liv","Amélie","Lara","Mona","Alice","Tess","Kaat","Femke","Aya","Eva","Lien","Bo","Zoe","Oona","Sofia","Leonie","Linde","Jolien","Fran","Pauline","Laure","Merel","Marthe","Sam","Yana","Renée","Paulien","Margot","Yasmine","Ines","Elisa","Emily","Maya","Floor","Amy","Lize","Amina","Lucie","Julia","Lise","Hailey","Hannah","Alicia","Norah","Margaux","Lieze","Sien","Zoë","Inaya","Aline","Amira","Victoria","Flore","Lana","Sterre","Maud","Chloe"]})),E3=c((()=>{kT=["Claes","Claeys","Declerck","Declercq","Decock","Decoster","Desmet","Devos","Dewilde","Gielen","Goossens","Hermans","Jacobs","Janssen","Janssens","Lemmens","Maes","Martens","Mertens","Michiels","Peeters","Smet","Smets","Thijs","Vandamme","Vandenberghe","Vandenbroeck","Vandevelde","Verhaeghe","Verstraete","Willems","Wouters"]})),N3=c((()=>{yT=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}"]})),B3=c((()=>{bT=["Dr.","Ir.","Ing.","Prof."]})),P3=c((()=>{ST=["MBA","Phd."]})),L3=c((()=>{j3(),E3(),N3(),B3(),P3(),AT={first_name:gT,last_name:kT,name:yT,prefix:bT,suffix:ST}})),D3=c((()=>{MT=["###/######","###/## ## ##","### ## ## ##","###/### ###","##########","04##/### ###","04## ## ## ##","00324 ## ## ##","+324 ## ## ## ##"]})),x3=c((()=>{D3(),TT={formats:MT}})),C3=c((()=>{S3(),M3(),w3(),L3(),x3(),_T={title:"Dutch (Belgium)",address:dT,company:pT,internet:vT,name:AT,phone_number:TT}})),K3=c((()=>{wT=["#####","####","###"]})),R3=c((()=>{jT=["#{city_name}"]})),z3=c((()=>{ET=["Aleksandrów Kujawski","Aleksandrów Łódzki","Alwernia","Andrychów","Annopol","Augustów","Babimost","Baborów","Baranów Sandomierski","Barcin","Barczewo","Bardo","Barlinek","Bartoszyce","Barwice","Bełchatów","Bełżyce","Będzin","Biała","Biała Piska","Biała Podlaska","Biała Rawska","Białobrzegi","Białogard","Biały Bór","Białystok","Biecz","Bielawa","Bielsk Podlaski","Bielsko-Biała","Bieruń","Bierutów","Bieżuń","Biłgoraj","Biskupiec","Bisztynek","Blachownia","Błaszki","Błażowa","Błonie","Bobolice","Bobowa","Bochnia","Bodzentyn","Bogatynia","Boguchwała","Boguszów-Gorce","Bojanowo","Bolesławiec","Bolków","Borek Wielkopolski","Borne Sulinowo","Braniewo","Brańsk","Brodnica","Brok","Brusy","Brwinów","Brzeg","Brzeg Dolny","Brzesko","Brzeszcze","Brześć Kujawski","Brzeziny","Brzostek","Brzozów","Buk","Bukowno","Busko-Zdrój","Bychawa","Byczyna","Bydgoszcz","Bystrzyca Kłodzka","Bytom","Bytom Odrzański","Bytów","Cedynia","Chełm","Chełmek","Chełmno","Chełmża","Chęciny","Chmielnik","Chocianów","Chociwel","Chodecz","Chodzież","Chojna","Chojnice","Chojnów","Choroszcz","Chorzele","Chorzów","Choszczno","Chrzanów","Ciechanowiec","Ciechanów","Ciechocinek","Cieszanów","Cieszyn","Ciężkowice","Cybinka","Czaplinek","Czarna Białostocka","Czarna Woda","Czarne","Czarnków","Czchów","Czechowice-Dziedzice","Czeladź","Czempiń","Czerniejewo","Czersk","Czerwieńsk","Czerwionka-Leszczyny","Częstochowa","Człopa","Człuchów","Czyżew","Ćmielów","Daleszyce","Darłowo","Dąbie","Dąbrowa Białostocka","Dąbrowa Górnicza","Dąbrowa Tarnowska","Debrzno","Dębica","Dęblin","Dębno","Dobczyce","Dobiegniew","Dobra (powiat łobeski)","Dobra (powiat turecki)","Dobre Miasto","Dobrodzień","Dobrzany","Dobrzyń nad Wisłą","Dolsk","Drawno","Drawsko Pomorskie","Drezdenko","Drobin","Drohiczyn","Drzewica","Dukla","Duszniki-Zdrój","Dynów","Działdowo","Działoszyce","Działoszyn","Dzierzgoń","Dzierżoniów","Dziwnów","Elbląg","Ełk","Frampol","Frombork","Garwolin","Gąbin","Gdańsk","Gdynia","Giżycko","Glinojeck","Gliwice","Głogów","Głogów Małopolski","Głogówek","Głowno","Głubczyce","Głuchołazy","Głuszyca","Gniew","Gniewkowo","Gniezno","Gogolin","Golczewo","Goleniów","Golina","Golub-Dobrzyń","Gołańcz","Gołdap","Goniądz","Gorlice","Gorzów Śląski","Gorzów Wielkopolski","Gostynin","Gostyń","Gościno","Gozdnica","Góra","Góra Kalwaria","Górowo Iławeckie","Górzno","Grabów nad Prosną","Grajewo","Grodków","Grodzisk Mazowiecki","Grodzisk Wielkopolski","Grójec","Grudziądz","Grybów","Gryfice","Gryfino","Gryfów Śląski","Gubin","Hajnówka","Halinów","Hel","Hrubieszów","Iława","Iłowa","Iłża","Imielin","Inowrocław","Ińsko","Iwonicz-Zdrój","Izbica Kujawska","Jabłonowo Pomorskie","Janikowo","Janowiec Wielkopolski","Janów Lubelski","Jarocin","Jarosław","Jasień","Jasło","Jastarnia","Jastrowie","Jastrzębie-Zdrój","Jawor","Jaworzno","Jaworzyna Śląska","Jedlicze","Jedlina-Zdrój","Jedwabne","Jelcz-Laskowice","Jelenia Góra","Jeziorany","Jędrzejów","Jordanów","Józefów (powiat biłgorajski)","Józefów (powiat otwocki)","Jutrosin","Kalety","Kalisz","Kalisz Pomorski","Kalwaria Zebrzydowska","Kałuszyn","Kamienna Góra","Kamień Krajeński","Kamień Pomorski","Kamieńsk","Kańczuga","Karczew","Kargowa","Karlino","Karpacz","Kartuzy","Katowice","Kazimierz Dolny","Kazimierza Wielka","Kąty Wrocławskie","Kcynia","Kędzierzyn-Koźle","Kępice","Kępno","Kętrzyn","Kęty","Kielce","Kietrz","Kisielice","Kleczew","Kleszczele","Kluczbork","Kłecko","Kłobuck","Kłodawa","Kłodzko","Knurów","Knyszyn","Kobylin","Kobyłka","Kock","Kolbuszowa","Kolno","Kolonowskie","Koluszki","Kołaczyce","Koło","Kołobrzeg","Koniecpol","Konin","Konstancin-Jeziorna","Konstantynów Łódzki","Końskie","Koprzywnica","Korfantów","Koronowo","Korsze","Kosów Lacki","Kostrzyn","Kostrzyn nad Odrą","Koszalin","Kościan","Kościerzyna","Kowal","Kowalewo Pomorskie","Kowary","Koziegłowy","Kozienice","Koźmin Wielkopolski","Kożuchów","Kórnik","Krajenka","Kraków","Krapkowice","Krasnobród","Krasnystaw","Kraśnik","Krobia","Krosno","Krosno Odrzańskie","Krośniewice","Krotoszyn","Kruszwica","Krynica Morska","Krynica-Zdrój","Krynki","Krzanowice","Krzepice","Krzeszowice","Krzywiń","Krzyż Wielkopolski","Książ Wielkopolski","Kudowa-Zdrój","Kunów","Kutno","Kuźnia Raciborska","Kwidzyn","Lądek-Zdrój","Legionowo","Legnica","Lesko","Leszno","Leśna","Leśnica","Lewin Brzeski","Leżajsk","Lębork","Lędziny","Libiąż","Lidzbark","Lidzbark Warmiński","Limanowa","Lipiany","Lipno","Lipsk","Lipsko","Lubaczów","Lubań","Lubartów","Lubawa","Lubawka","Lubień Kujawski","Lubin","Lublin","Lubliniec","Lubniewice","Lubomierz","Luboń","Lubraniec","Lubsko","Lwówek","Lwówek Śląski","Łabiszyn","Łańcut","Łapy","Łasin","Łask","Łaskarzew","Łaszczów","Łaziska Górne","Łazy","Łeba","Łęczna","Łęczyca","Łęknica","Łobez","Łobżenica","Łochów","Łomianki","Łomża","Łosice","Łowicz","Łódź","Łuków","Maków Mazowiecki","Maków Podhalański","Malbork","Małogoszcz","Małomice","Margonin","Marki","Maszewo","Miasteczko Śląskie","Miastko","Michałowo","Miechów","Miejska Górka","Mielec","Mieroszów","Mieszkowice","Międzybórz","Międzychód","Międzylesie","Międzyrzec Podlaski","Międzyrzecz","Międzyzdroje","Mikołajki","Mikołów","Mikstat","Milanówek","Milicz","Miłakowo","Miłomłyn","Miłosław","Mińsk Mazowiecki","Mirosławiec","Mirsk","Mława","Młynary","Mogielnica","Mogilno","Mońki","Morąg","Mordy","Moryń","Mosina","Mrągowo","Mrocza","Mszana Dolna","Mszczonów","Murowana Goślina","Muszyna","Mysłowice","Myszków","Myszyniec","Myślenice","Myślibórz","Nakło nad Notecią","Nałęczów","Namysłów","Narol","Nasielsk","Nekla","Nidzica","Niemcza","Niemodlin","Niepołomice","Nieszawa","Nisko","Nowa Dęba","Nowa Ruda","Nowa Sarzyna","Nowa Sól","Nowe","Nowe Brzesko","Nowe Miasteczko","Nowe Miasto Lubawskie","Nowe Miasto nad Pilicą","Nowe Skalmierzyce","Nowe Warpno","Nowogard","Nowogrodziec","Nowogród","Nowogród Bobrzański","Nowy Dwór Gdański","Nowy Dwór Mazowiecki","Nowy Sącz","Nowy Staw","Nowy Targ","Nowy Tomyśl","Nowy Wiśnicz","Nysa","Oborniki","Oborniki Śląskie","Obrzycko","Odolanów","Ogrodzieniec","Okonek","Olecko","Olesno","Oleszyce","Oleśnica","Olkusz","Olsztyn","Olsztynek","Olszyna","Oława","Opalenica","Opatów","Opoczno","Opole","Opole Lubelskie","Orneta","Orzesze","Orzysz","Osieczna","Osiek","Ostrołęka","Ostroróg","Ostrowiec Świętokrzyski","Ostróda","Ostrów Lubelski","Ostrów Mazowiecka","Ostrów Wielkopolski","Ostrzeszów","Ośno Lubuskie","Oświęcim","Otmuchów","Otwock","Ozimek","Ozorków","Ożarów","Ożarów Mazowiecki","Pabianice","Paczków","Pajęczno","Pakość","Parczew","Pasłęk","Pasym","Pelplin","Pełczyce","Piaseczno","Piaski","Piastów","Piechowice","Piekary Śląskie","Pieniężno","Pieńsk","Pieszyce","Pilawa","Pilica","Pilzno","Piła","Piława Górna","Pińczów","Pionki","Piotrków Kujawski","Piotrków Trybunalski","Pisz","Piwniczna-Zdrój","Pleszew","Płock","Płońsk","Płoty","Pniewy","Pobiedziska","Poddębice","Podkowa Leśna","Pogorzela","Polanica-Zdrój","Polanów","Police","Polkowice","Połaniec","Połczyn-Zdrój","Poniatowa","Poniec","Poręba","Poznań","Prabuty","Praszka","Prochowice","Proszowice","Prószków","Pruchnik","Prudnik","Prusice","Pruszcz Gdański","Pruszków","Przasnysz","Przecław","Przedbórz","Przedecz","Przemków","Przemyśl","Przeworsk","Przysucha","Pszczyna","Pszów","Puck","Puławy","Pułtusk","Puszczykowo","Pyrzyce","Pyskowice","Pyzdry","Rabka-Zdrój","Raciąż","Racibórz","Radków","Radlin","Radłów","Radom","Radomsko","Radomyśl Wielki","Radymno","Radziejów","Radzionków","Radzymin","Radzyń Chełmiński","Radzyń Podlaski","Rajgród","Rakoniewice","Raszków","Rawa Mazowiecka","Rawicz","Recz","Reda","Rejowiec Fabryczny","Resko","Reszel","Rogoźno","Ropczyce","Różan","Ruciane-Nida","Ruda Śląska","Rudnik nad Sanem","Rumia","Rybnik","Rychwał","Rydułtowy","Rydzyna","Ryglice","Ryki","Rymanów","Ryn","Rypin","Rzepin","Rzeszów","Rzgów","Sandomierz","Sanok","Sejny","Serock","Sędziszów","Sędziszów Małopolski","Sępopol","Sępólno Krajeńskie","Sianów","Siechnice","Siedlce","Siemianowice Śląskie","Siemiatycze","Sieniawa","Sieradz","Sieraków","Sierpc","Siewierz","Skalbmierz","Skała","Skarszewy","Skaryszew","Skarżysko-Kamienna","Skawina","Skępe","Skierniewice","Skoczów","Skoki","Skórcz","Skwierzyna","Sława","Sławków","Sławno","Słomniki","Słubice","Słupca","Słupsk","Sobótka","Sochaczew","Sokołów Małopolski","Sokołów Podlaski","Sokółka","Solec Kujawski","Sompolno","Sopot","Sosnowiec","Sośnicowice","Stalowa Wola","Starachowice","Stargard Szczeciński","Starogard Gdański","Stary Sącz","Staszów","Stawiski","Stawiszyn","Stąporków","Stęszew","Stoczek Łukowski","Stronie Śląskie","Strumień","Stryków","Strzegom","Strzelce Krajeńskie","Strzelce Opolskie","Strzelin","Strzelno","Strzyżów","Sucha Beskidzka","Suchań","Suchedniów","Suchowola","Sulechów","Sulejów","Sulejówek","Sulęcin","Sulmierzyce","Sułkowice","Supraśl","Suraż","Susz","Suwałki","Swarzędz","Syców","Szadek","Szamocin","Szamotuły","Szczawnica","Szczawno-Zdrój","Szczebrzeszyn","Szczecin","Szczecinek","Szczekociny","Szczucin","Szczuczyn","Szczyrk","Szczytna","Szczytno","Szepietowo","Szklarska Poręba","Szlichtyngowa","Szprotawa","Sztum","Szubin","Szydłowiec","Ścinawa","Ślesin","Śmigiel","Śrem","Środa Śląska","Środa Wielkopolska","Świątniki Górne","Świdnica","Świdnik","Świdwin","Świebodzice","Świebodzin","Świecie","Świeradów-Zdrój","Świerzawa","Świętochłowice","Świnoujście","Tarczyn","Tarnobrzeg","Tarnogród","Tarnowskie Góry","Tarnów","Tczew","Terespol","Tłuszcz","Tolkmicko","Tomaszów Lubelski","Tomaszów Mazowiecki","Toruń","Torzym","Toszek","Trzcianka","Trzciel","Trzcińsko-Zdrój","Trzebiatów","Trzebinia","Trzebnica","Trzemeszno","Tuchola","Tuchów","Tuczno","Tuliszków","Turek","Tuszyn","Twardogóra","Tychowo","Tychy","Tyczyn","Tykocin","Tyszowce","Ujazd","Ujście","Ulanów","Uniejów","Ustka","Ustroń","Ustrzyki Dolne","Wadowice","Wałbrzych","Wałcz","Warka","Warszawa","Warta","Wasilków","Wąbrzeźno","Wąchock","Wągrowiec","Wąsosz","Wejherowo","Węgliniec","Węgorzewo","Węgorzyno","Węgrów","Wiązów","Wieleń","Wielichowo","Wieliczka","Wieluń","Wieruszów","Więcbork","Wilamowice","Wisła","Witkowo","Witnica","Wleń","Władysławowo","Włocławek","Włodawa","Włoszczowa","Wodzisław Śląski","Wojcieszów","Wojkowice","Wojnicz","Wolbórz","Wolbrom","Wolin","Wolsztyn","Wołczyn","Wołomin","Wołów","Woźniki","Wrocław","Wronki","Września","Wschowa","Wyrzysk","Wysoka","Wysokie Mazowieckie","Wyszków","Wyszogród","Wyśmierzyce","Zabłudów","Zabrze","Zagórów","Zagórz","Zakliczyn","Zakopane","Zakroczym","Zalewo","Zambrów","Zamość","Zator","Zawadzkie","Zawichost","Zawidów","Zawiercie","Ząbki","Ząbkowice Śląskie","Zbąszynek","Zbąszyń","Zduny","Zduńska Wola","Zdzieszowice","Zelów","Zgierz","Zgorzelec","Zielona Góra","Zielonka","Ziębice","Złocieniec","Złoczew","Złotoryja","Złotów","Złoty Stok","Zwierzyniec","Zwoleń","Żabno","Żagań","Żarki","Żarów","Żary","Żelechów","Żerków","Żmigród","Żnin","Żory","Żukowo","Żuromin","Żychlin","Żyrardów","Żywiec"]})),O3=c((()=>{NT=["Afganistan","Albania","Algieria","Andora","Angola","Antigua i Barbuda","Arabia Saudyjska","Argentyna","Armenia","Australia","Austria","Azerbejdżan","Bahamy","Bahrajn","Bangladesz","Barbados","Belgia","Belize","Benin","Bhutan","Białoruś","Birma","Boliwia","Sucre","Bośnia i Hercegowina","Botswana","Brazylia","Brunei","Bułgaria","Burkina Faso","Burundi","Chile","Chiny","Chorwacja","Cypr","Czad","Czarnogóra","Czechy","Dania","Demokratyczna Republika Konga","Dominika","Dominikana","Dżibuti","Egipt","Ekwador","Erytrea","Estonia","Etiopia","Fidżi","Filipiny","Finlandia","Francja","Gabon","Gambia","Ghana","Grecja","Grenada","Gruzja","Gujana","Gwatemala","Gwinea","Gwinea Bissau","Gwinea Równikowa","Haiti","Hiszpania","Holandia","Haga","Honduras","Indie","Indonezja","Irak","Iran","Irlandia","Islandia","Izrael","Jamajka","Japonia","Jemen","Jordania","Kambodża","Kamerun","Kanada","Katar","Kazachstan","Kenia","Kirgistan","Kiribati","Kolumbia","Komory","Kongo","Korea Południowa","Korea Północna","Kostaryka","Kuba","Kuwejt","Laos","Lesotho","Liban","Liberia","Libia","Liechtenstein","Litwa","Luksemburg","Łotwa","Macedonia","Madagaskar","Malawi","Malediwy","Malezja","Mali","Malta","Maroko","Mauretania","Mauritius","Meksyk","Mikronezja","Mołdawia","Monako","Mongolia","Mozambik","Namibia","Nauru","Nepal","Niemcy","Niger","Nigeria","Nikaragua","Norwegia","Nowa Zelandia","Oman","Pakistan","Palau","Panama","Papua-Nowa Gwinea","Paragwaj","Peru","Polska","322 575","Portugalia","Republika Południowej Afryki","Republika Środkowoafrykańska","Republika Zielonego Przylądka","Rosja","Rumunia","Rwanda","Saint Kitts i Nevis","Saint Lucia","Saint Vincent i Grenadyny","Salwador","Samoa","San Marino","Senegal","Serbia","Seszele","Sierra Leone","Singapur","Słowacja","Słowenia","Somalia","Sri Lanka","Stany Zjednoczone","Suazi","Sudan","Sudan Południowy","Surinam","Syria","Szwajcaria","Szwecja","Tadżykistan","Tajlandia","Tanzania","Timor Wschodni","Togo","Tonga","Trynidad i Tobago","Tunezja","Turcja","Turkmenistan","Tuvalu","Funafuti","Uganda","Ukraina","Urugwaj","Uzbekistan","Vanuatu","Watykan","Wenezuela","Węgry","Wielka Brytania","Wietnam","Włochy","Wybrzeże Kości Słoniowej","Wyspy Marshalla","Wyspy Salomona","Wyspy Świętego Tomasza i Książęca","Zambia","Zimbabwe","Zjednoczone Emiraty Arabskie"]})),I3=c((()=>{BT=["Polska"]})),V3=c((()=>{PT=["##-###"]})),G3=c((()=>{LT=["Apt. ###","Suite ###"]})),H3=c((()=>{DT=["Dolnośląskie","Kujawsko-pomorskie","Lubelskie","Lubuskie","Łódzkie","Małopolskie","Mazowieckie","Opolskie","Podkarpackie","Podlaskie","Pomorskie","Śląskie","Świętokrzyskie","Warmińsko-mazurskie","Wielkopolskie","Zachodniopomorskie"]})),F3=c((()=>{xT=["DŚ","KP","LB","LS","ŁD","MP","MZ","OP","PK","PL","PM","ŚL","ŚK","WM","WP","ZP"]})),J3=c((()=>{CT=["#{street_name} #{building_number}"]})),U3=c((()=>{KT=["#{street_prefix} #{Name.last_name}"]})),W3=c((()=>{RT=["ul.","al."]})),Z3=c((()=>{K3(),R3(),z3(),O3(),I3(),V3(),G3(),H3(),F3(),J3(),U3(),W3(),zT={building_number:wT,city:jT,city_name:ET,country:NT,default_country:BT,postcode:PT,secondary_address:LT,state:DT,state_abbr:xT,street_address:CT,street_name:KT,street_prefix:RT}})),q3=c((()=>{OT=["50#-###-###","51#-###-###","53#-###-###","57#-###-###","60#-###-###","66#-###-###","69#-###-###","72#-###-###","73#-###-###","78#-###-###","79#-###-###","88#-###-###"]})),Q3=c((()=>{q3(),IT={formats:OT}})),Y3=c((()=>{VT=["Adaptive","Advanced","Ameliorated","Assimilated","Automated","Balanced","Business-focused","Centralized","Cloned","Compatible","Configurable","Cross-group","Cross-platform","Customer-focused","Customizable","Decentralized","De-engineered","Devolved","Digitized","Distributed","Diverse","Down-sized","Enhanced","Enterprise-wide","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Function-based","Fundamental","Future-proofed","Grass-roots","Horizontal","Implemented","Innovative","Integrated","Intuitive","Inverse","Managed","Mandatory","Monitored","Multi-channelled","Multi-lateral","Multi-layered","Multi-tiered","Networked","Object-based","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Pre-emptive","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Re-contextualized","Re-engineered","Reduced","Reverse-engineered","Right-sized","Robust","Seamless","Secured","Self-enabling","Sharable","Stand-alone","Streamlined","Switchable","Synchronised","Synergistic","Synergized","Team-oriented","Total","Triple-buffered","Universal","Up-sized","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary","Vision-oriented"]})),$3=c((()=>{GT=["clicks-and-mortar","value-added","vertical","proactive","robust","revolutionary","scalable","leading-edge","innovative","intuitive","strategic","e-business","mission-critical","sticky","one-to-one","24/7","end-to-end","global","B2B","B2C","granular","frictionless","virtual","viral","dynamic","24/365","best-of-breed","killer","magnetic","bleeding-edge","web-enabled","interactive","dot-com","sexy","back-end","real-time","efficient","front-end","distributed","seamless","extensible","turn-key","world-class","open-source","cross-platform","cross-media","synergistic","bricks-and-clicks","out-of-the-box","enterprise","integrated","impactful","wireless","transparent","next-generation","cutting-edge","user-centric","visionary","customized","ubiquitous","plug-and-play","collaborative","compelling","holistic","rich"]})),X3=c((()=>{HT=["synergies","web-readiness","paradigms","markets","partnerships","infrastructures","platforms","initiatives","channels","eyeballs","communities","ROI","solutions","e-tailers","e-services","action-items","portals","niches","technologies","content","vortals","supply-chains","convergence","relationships","architectures","interfaces","e-markets","e-commerce","systems","bandwidth","infomediaries","models","mindshare","deliverables","users","schemas","networks","applications","metrics","e-business","functionalities","experiences","web services","methodologies"]})),e4=c((()=>{FT=["implement","utilize","integrate","streamline","optimize","evolve","transform","embrace","enable","orchestrate","leverage","reinvent","aggregate","architect","enhance","incentivize","morph","empower","envisioneer","monetize","harness","facilitate","seize","disintermediate","synergize","strategize","deploy","brand","grow","target","syndicate","synthesize","deliver","mesh","incubate","engage","maximize","benchmark","expedite","reintermediate","whiteboard","visualize","repurpose","innovate","scale","unleash","drive","extend","engineer","revolutionize","generate","exploit","transition","e-enable","iterate","cultivate","matrix","productize","redefine","recontextualize"]})),a4=c((()=>{JT=["24 hour","24/7","3rd generation","4th generation","5th generation","6th generation","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","background","bandwidth-monitored","bi-directional","bifurcated","bottom-line","clear-thinking","client-driven","client-server","coherent","cohesive","composite","context-sensitive","contextually-based","content-based","dedicated","demand-driven","didactic","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","even-keeled","executive","explicit","exuding","fault-tolerant","foreground","fresh-thinking","full-range","global","grid-enabled","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","multimedia","multi-state","multi-tasking","national","needs-based","neutral","next generation","non-volatile","object-oriented","optimal","optimizing","radical","real-time","reciprocal","regional","responsive","scalable","secondary","solution-oriented","stable","static","systematic","systemic","system-worthy","tangible","tertiary","transitional","uniform","upward-trending","user-facing","value-added","web-enabled","well-modulated","zero administration","zero defect","zero tolerance"]})),n4=c((()=>{UT=["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} and #{Name.last_name}"]})),i4=c((()=>{WT=["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","artificial intelligence","array","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","database","data-warehouse","definition","emulation","encoding","encryption","extranet","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","Graphic Interface","groupware","Graphical User Interface","hardware","help-desk","hierarchy","hub","implementation","info-mediaries","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge user","knowledge base","local area network","leverage","matrices","matrix","methodology","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","open system","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","secured line","service-desk","software","solution","standardization","strategy","structure","success","superstructure","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"]})),r4=c((()=>{ZT=["Inc","and Sons","LLC","Group"]})),t4=c((()=>{Y3(),$3(),X3(),e4(),a4(),n4(),i4(),r4(),qT={adjetive:VT,bs_adjective:GT,bs_noun:HT,bs_verb:FT,descriptor:JT,name:UT,noun:WT,suffix:ZT}})),o4=c((()=>{QT=["com","pl","com.pl","net","org"]})),s4=c((()=>{YT=["gmail.com","yahoo.com","hotmail.com"]})),l4=c((()=>{o4(),s4(),$T={domain_suffix:QT,free_email:YT}})),u4=c((()=>{XT=["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]})),c4=c((()=>{u4(),e_={words:XT}})),d4=c((()=>{a_=["Ada","Adelajda","Agata","Agnieszka","Agrypina","Aida","Aleksandra","Alicja","Alina","Amanda","Anastazja","Angela","Andżelika","Angelina","Anna","Hanna","Antonina","Ariadna","Aurora","Barbara","Beatrycze","Berta","Brygida","Kamila","Karolina","Karolina","Kornelia","Katarzyna","Cecylia","Karolina","Chloe","Krystyna","Klara","Klaudia","Klementyna","Konstancja","Koralia","Daria","Diana","Dina","Dorota","Edyta","Eleonora","Eliza","Elżbieta","Izabela","Elwira","Emilia","Estera","Eudoksja","Eudokia","Eugenia","Ewa","Ewelina","Ferdynanda","Florencja","Franciszka","Gabriela","Gertruda","Gloria","Gracja","Jadwiga","Helena","Henryka","Nadzieja","Ida","Ilona","Helena","Irena","Irma","Izabela","Izolda","Jakubina","Joanna","Janina","Żaneta","Joanna","Ginewra","Józefina","Judyta","Julia","Julia","Julita","Justyna","Kira","Cyra","Kleopatra","Larysa","Laura","Laurencja","Laurentyna","Lea","Leila","Eleonora","Liliana","Lilianna","Lilia","Lilla","Liza","Eliza","Laura","Ludwika","Luiza","Łucja","Lucja","Lidia","Amabela","Magdalena","Malwina","Małgorzata","Greta","Marianna","Maryna","Marta","Martyna","Maria","Matylda","Maja","Maja","Melania","Michalina","Monika","Nadzieja","Noemi","Natalia","Nikola","Nina","Olga","Olimpia","Oliwia","Ofelia","Patrycja","Paula","Pelagia","Penelopa","Filipa","Paulina","Rachela","Rebeka","Regina","Renata","Rozalia","Róża","Roksana","Rufina","Ruta","Sabina","Sara","Serafina","Sybilla","Sylwia","Zofia","Stella","Stefania","Zuzanna","Tamara","Tacjana","Tekla","Teodora","Teresa","Walentyna","Waleria","Wanesa","Wiara","Weronika","Wiktoria","Wirginia","Bibiana","Bibianna","Wanda","Wilhelmina","Ksawera","Ksenia","Zoe"]})),h4=c((()=>{n_=["Aaron","Abraham","Adam","Adrian","Atanazy","Agaton","Alan","Albert","Aleksander","Aleksy","Alfred","Alwar","Ambroży","Anatol","Andrzej","Antoni","Apollinary","Apollo","Arkady","Arkadiusz","Archibald","Arystarch","Arnold","Arseniusz","Artur","August","Baldwin","Bazyli","Benedykt","Beniamin","Bernard","Bertrand","Bertram","Borys","Brajan","Bruno","Cezary","Cecyliusz","Karol","Krystian","Krzysztof","Klarencjusz","Klaudiusz","Klemens","Konrad","Konstanty","Konstantyn","Kornel","Korneliusz","Korneli","Cyryl","Cyrus","Damian","Daniel","Dariusz","Dawid","Dionizy","Demetriusz","Dominik","Donald","Dorian","Edgar","Edmund","Edward","Edwin","Efrem","Efraim","Eliasz","Eleazar","Emil","Emanuel","Erast","Ernest","Eugeniusz","Eustracjusz","Fabian","Feliks","Florian","Franciszek","Fryderyk","Gabriel","Gedeon","Galfryd","Jerzy","Gerald","Gerazym","Gilbert","Gonsalwy","Grzegorz","Gwido","Harald","Henryk","Herbert","Herman","Hilary","Horacy","Hubert","Hugo","Ignacy","Igor","Hilarion","Innocenty","Hipolit","Ireneusz","Erwin","Izaak","Izajasz","Izydor","Jakub","Jeremi","Jeremiasz","Hieronim","Gerald","Joachim","Jan","Janusz","Jonatan","Józef","Jozue","Julian","Juliusz","Justyn","Kalistrat","Kazimierz","Wawrzyniec","Laurenty","Laurencjusz","Łazarz","Leon","Leonard","Leonid","Leon","Ludwik","Łukasz","Lucjan","Magnus","Makary","Marceli","Marek","Marcin","Mateusz","Maurycy","Maksym","Maksymilian","Michał","Miron","Modest","Mojżesz","Natan","Natanael","Nazariusz","Nazary","Nestor","Mikołaj","Nikodem","Olaf","Oleg","Oliwier","Onufry","Orestes","Oskar","Ansgary","Osmund","Pankracy","Pantaleon","Patryk","Patrycjusz","Patrycy","Paweł","Piotr","Filemon","Filip","Platon","Polikarp","Porfiry","Porfiriusz","Prokles","Prokul","Prokop","Kwintyn","Randolf","Rafał","Rajmund","Reginald","Rajnold","Ryszard","Robert","Roderyk","Roger","Roland","Roman","Romeo","Reginald","Rudolf","Samson","Samuel","Salwator","Sebastian","Serafin","Sergiusz","Seweryn","Zygmunt","Sylwester","Szymon","Salomon","Spirydion","Stanisław","Szczepan","Stefan","Terencjusz","Teodor","Tomasz","Tymoteusz","Tobiasz","Walenty","Walentyn","Walerian","Walery","Wiktor","Wincenty","Witalis","Włodzimierz","Władysław","Błażej","Walter","Walgierz","Wacław","Wilfryd","Wilhelm","Ksawery","Ksenofont","Jerzy","Zachariasz","Zachary"]})),p4=c((()=>{d4(),h4(),i_=a_.concat(n_)})),m4=c((()=>{r_=["Adamczak","Adamczyk","Adamek","Adamiak","Adamiec","Adamowicz","Adamski","Adamus","Aleksandrowicz","Andrzejczak","Andrzejewski","Antczak","Augustyn","Augustyniak","Bagiński","Balcerzak","Banach","Banasiak","Banasik","Banaś","Baran","Baranowski","Barański","Bartczak","Bartkowiak","Bartnik","Bartosik","Bednarczyk","Bednarek","Bednarski","Bednarz","Białas","Białek","Białkowski","Biedrzyński","Bielak","Bielawski","Bielecki","Bielski","Bieniek","Biernacki","Biernat","Bieńkowski","Bilski","Bober","Bochenek","Bogucki","Bogusz","Borek","Borkowski","Borowiec","Borowski","Bożek","Broda","Brzeziński","Brzozowski","Buczek","Buczkowski","Buczyński","Budziński","Budzyński","Bujak","Bukowski","Burzyński","Bąk","Bąkowski","Błaszczak","Błaszczyk","Cebula","Chmiel","Chmielewski","Chmura","Chojnacki","Chojnowski","Cholewa","Chrzanowski","Chudzik","Cichocki","Cichoń","Cichy","Ciesielski","Cieśla","Cieślak","Cieślik","Ciszewski","Cybulski","Cygan","Czaja","Czajka","Czajkowski","Czapla","Czarnecki","Czech","Czechowski","Czekaj","Czerniak","Czerwiński","Czyż","Czyżewski","Dec","Dobosz","Dobrowolski","Dobrzyński","Domagała","Domański","Dominiak","Drabik","Drozd","Drozdowski","Drzewiecki","Dróżdż","Dubiel","Duda","Dudek","Dudziak","Dudzik","Dudziński","Duszyński","Dziedzic","Dziuba","Dąbek","Dąbkowski","Dąbrowski","Dębowski","Dębski","Długosz","Falkowski","Fijałkowski","Filipek","Filipiak","Filipowicz","Flak","Flis","Florczak","Florek","Frankowski","Frąckowiak","Frączek","Frątczak","Furman","Gadomski","Gajda","Gajewski","Gaweł","Gawlik","Gawron","Gawroński","Gałka","Gałązka","Gil","Godlewski","Golec","Gołąb","Gołębiewski","Gołębiowski","Grabowski","Graczyk","Grochowski","Grudzień","Gruszczyński","Gruszka","Grzegorczyk","Grzelak","Grzesiak","Grzesik","Grześkowiak","Grzyb","Grzybowski","Grzywacz","Gutowski","Guzik","Gwoździk","Gwóźdź","Góra","Góral","Górecki","Górka","Górniak","Górny","Górski","Gąsior","Gąsiorowski","Głogowski","Głowacki","Głąb","Hajduk","Herman","Iwanowski","Iwański","Izdebski","Jabłoński","Jackowski","Jagielski","Jagiełło","Jagodziński","Jakubiak","Jakubowski","Janas","Janiak","Janicki","Janik","Janiszewski","Jankowiak","Jankowski","Janowski","Janus","Janusz","Januszewski","Jaros","Jarosz","Jarząbek","Jasiński","Jastrzębski","Jaworski","Jaśkiewicz","Jezierski","Jurek","Jurkiewicz","Jurkowski","Juszczak","Jóźwiak","Jóźwik","Jędrzejczak","Jędrzejczyk","Jędrzejewski","Kacprzak","Kaczmarczyk","Kaczmarek","Kaczmarski","Kaczor","Kaczorowski","Kaczyński","Kaleta","Kalinowski","Kalisz","Kamiński","Kania","Kaniewski","Kapusta","Karaś","Karczewski","Karpiński","Karwowski","Kasperek","Kasprzak","Kasprzyk","Kaszuba","Kawa","Kawecki","Kałuża","Kaźmierczak","Kiełbasa","Kisiel","Kita","Klimczak","Klimek","Kmiecik","Kmieć","Knapik","Kobus","Kogut","Kolasa","Komorowski","Konieczna","Konieczny","Konopka","Kopczyński","Koper","Kopeć","Korzeniowski","Kos","Kosiński","Kosowski","Kostecki","Kostrzewa","Kot","Kotowski","Kowal","Kowalczuk","Kowalczyk","Kowalewski","Kowalik","Kowalski","Koza","Kozak","Kozieł","Kozioł","Kozłowski","Kołakowski","Kołodziej","Kołodziejczyk","Kołodziejski","Krajewski","Krakowiak","Krawczyk","Krawiec","Kruk","Krukowski","Krupa","Krupiński","Kruszewski","Krysiak","Krzemiński","Krzyżanowski","Król","Królikowski","Książek","Kubacki","Kubiak","Kubica","Kubicki","Kubik","Kuc","Kucharczyk","Kucharski","Kuchta","Kuciński","Kuczyński","Kujawa","Kujawski","Kula","Kulesza","Kulig","Kulik","Kuliński","Kurek","Kurowski","Kuś","Kwaśniewski","Kwiatkowski","Kwiecień","Kwieciński","Kędzierski","Kędziora","Kępa","Kłos","Kłosowski","Lach","Laskowski","Lasota","Lech","Lenart","Lesiak","Leszczyński","Lewandowski","Lewicki","Leśniak","Leśniewski","Lipiński","Lipka","Lipski","Lis","Lisiecki","Lisowski","Maciejewski","Maciąg","Mackiewicz","Madej","Maj","Majcher","Majchrzak","Majewski","Majka","Makowski","Malec","Malicki","Malinowski","Maliszewski","Marchewka","Marciniak","Marcinkowski","Marczak","Marek","Markiewicz","Markowski","Marszałek","Marzec","Masłowski","Matusiak","Matuszak","Matuszewski","Matysiak","Mazur","Mazurek","Mazurkiewicz","Maćkowiak","Małecki","Małek","Maślanka","Michalak","Michalczyk","Michalik","Michalski","Michałek","Michałowski","Mielczarek","Mierzejewski","Mika","Miklaś","Mikołajczak","Mikołajczyk","Mikulski","Milczarek","Milewski","Miller","Misiak","Misztal","Miśkiewicz","Modzelewski","Molenda","Morawski","Motyka","Mroczek","Mroczkowski","Mrozek","Mróz","Mucha","Murawski","Musiał","Muszyński","Młynarczyk","Napierała","Nawrocki","Nawrot","Niedziela","Niedzielski","Niedźwiecki","Niemczyk","Niemiec","Niewiadomski","Noga","Nowacki","Nowaczyk","Nowak","Nowakowski","Nowicki","Nowiński","Olczak","Olejniczak","Olejnik","Olszewski","Orzechowski","Orłowski","Osiński","Ossowski","Ostrowski","Owczarek","Paczkowski","Pająk","Pakuła","Palacz","Paluch","Panek","Partyka","Pasternak","Paszkowski","Pawelec","Pawlak","Pawlicki","Pawlik","Pawlikowski","Pawłowski","Pałka","Piasecki","Piechota","Pieczek","Piekarski","Pietras","Pietruszka","Pietrzak","Pietrzyk","Pilarski","Pilch","Piotrowicz","Piotrowski","Piwowarczyk","Piórkowski","Piątek","Piątkowski","Piłat","Pluta","Podgórski","Polak","Popławski","Porębski","Prokop","Prus","Przybylski","Przybysz","Przybył","Przybyła","Ptak","Puchalski","Pytel","Płonka","Raczyński","Radecki","Radomski","Rak","Rakowski","Ratajczak","Robak","Rogala","Rogalski","Rogowski","Rojek","Romanowski","Rosa","Rosiak","Rosiński","Ruciński","Rudnicki","Rudziński","Rudzki","Rusin","Rutkowski","Rybak","Rybarczyk","Rybicki","Rzepka","Różański","Różycki","Sadowski","Sawicki","Serafin","Siedlecki","Sienkiewicz","Sieradzki","Sikora","Sikorski","Sitek","Siwek","Skalski","Skiba","Skibiński","Skoczylas","Skowron","Skowronek","Skowroński","Skrzypczak","Skrzypek","Skóra","Smoliński","Sobczak","Sobczyk","Sobieraj","Sobolewski","Socha","Sochacki","Sokołowski","Sokół","Sosnowski","Sowa","Sowiński","Sołtys","Sołtysiak","Sroka","Stachowiak","Stachowicz","Stachura","Stachurski","Stanek","Staniszewski","Stanisławski","Stankiewicz","Stasiak","Staszewski","Stawicki","Stec","Stefaniak","Stefański","Stelmach","Stolarczyk","Stolarski","Strzelczyk","Strzelecki","Stępień","Stępniak","Surma","Suski","Szafrański","Szatkowski","Szczepaniak","Szczepanik","Szczepański","Szczerba","Szcześniak","Szczygieł","Szczęsna","Szczęsny","Szeląg","Szewczyk","Szostak","Szulc","Szwarc","Szwed","Szydłowski","Szymański","Szymczak","Szymczyk","Szymkowiak","Szyszka","Sławiński","Słowik","Słowiński","Tarnowski","Tkaczyk","Tokarski","Tomala","Tomaszewski","Tomczak","Tomczyk","Tomys","Tracz","Trojanowski","Trzciński","Trzeciak","Turek","Twardowski","Urban","Urbanek","Urbaniak","Urbanowicz","Urbańczyk","Urbański","Walczak","Walkowiak","Warchoł","Wasiak","Wasilewski","Wawrzyniak","Wesołowski","Wieczorek","Wierzbicki","Wilczek","Wilczyński","Wilk","Winiarski","Witczak","Witek","Witkowski","Wiącek","Więcek","Więckowski","Wiśniewski","Wnuk","Wojciechowski","Wojtas","Wojtasik","Wojtczak","Wojtkowiak","Wolak","Woliński","Wolny","Wolski","Woś","Woźniak","Wrona","Wroński","Wróbel","Wróblewski","Wypych","Wysocki","Wyszyński","Wójcicki","Wójcik","Wójtowicz","Wąsik","Wąsowski","Węgrzyn","Włodarczyk","Włodarski","Zaborowski","Zabłocki","Zagórski","Zając","Zajączkowski","Zakrzewski","Zalewski","Zaremba","Zarzycki","Zaręba","Zawada","Zawadzki","Zdunek","Zieliński","Zielonka","Ziółkowski","Zięba","Ziętek","Zwoliński","Zych","Zygmunt","Łapiński","Łuczak","Łukasiewicz","Łukasik","Łukaszewski","Śliwa","Śliwiński","Ślusarczyk","Świderski","Świerczyński","Świątek","Żak","Żebrowski","Żmuda","Żuk","Żukowski","Żurawski","Żurek","Żyła"]})),f4=c((()=>{t_=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}"]})),v4=c((()=>{o_=["Pan","Pani"]})),g4=c((()=>{s_={descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","Dynamic","International","Legacy","Forward","Internal","Human","Chief","Principal"],level:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job:["Supervisor","Associate","Executive","Liaison","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"]}})),k4=c((()=>{d4(),p4(),m4(),h4(),f4(),v4(),g4(),l_={female_first_name:a_,first_name:i_,last_name:r_,male_first_name:n_,name:t_,prefix:o_,title:s_}})),y4=c((()=>{u_=["12-###-##-##","13-###-##-##","14-###-##-##","15-###-##-##","16-###-##-##","17-###-##-##","18-###-##-##","22-###-##-##","23-###-##-##","24-###-##-##","25-###-##-##","29-###-##-##","32-###-##-##","33-###-##-##","34-###-##-##","41-###-##-##","42-###-##-##","43-###-##-##","44-###-##-##","46-###-##-##","48-###-##-##","52-###-##-##","54-###-##-##","55-###-##-##","56-###-##-##","58-###-##-##","59-###-##-##","61-###-##-##","62-###-##-##","63-###-##-##","65-###-##-##","67-###-##-##","68-###-##-##","71-###-##-##","74-###-##-##","75-###-##-##","76-###-##-##","77-###-##-##","81-###-##-##","82-###-##-##","83-###-##-##","84-###-##-##","85-###-##-##","86-###-##-##","87-###-##-##","89-###-##-##","91-###-##-##","94-###-##-##","95-###-##-##"]})),b4=c((()=>{y4(),c_={formats:u_}})),S4=c((()=>{Z3(),Q3(),t4(),l4(),c4(),k4(),b4(),d_={title:"Polish",address:zT,cell_phone:IT,company:qT,internet:$T,lorem:e_,name:l_,phone_number:c_}})),A4=c((()=>{h_=["#####","####","###"]})),M4=c((()=>{p_=[]})),T4=c((()=>{m_=[" do Descoberto"," de Nossa Senhora"," do Norte"," do Sul"]})),_4=c((()=>{f_=["Afeganistão","Albânia","Algéria","Samoa","Andorra","Angola","Anguila","Antigua and Barbada","Argentina","Armênia","Aruba","Austrália","Áustria","Azerbaijão","Bahamas","Barém","Bangladesh","Barbados","Bélgica","Belize","Benin","Bermuda","Butão","Bolívia","Bôsnia","Botsuana","Ilha Bouvet","Brasil","Arquipélago de Chagos","Ilhas Virgens","Brunei","Bulgária","Burkina Faso","Burundi","Camboja","Camarões","Canadá","Cabo Verde","Ilhas Caiman","República da África Central","Chade","Chile","China","Ilha do Natal","Ilhas Cocos","Colômbia","Comores","Congo","Ilhas Cook","Costa Rica","Costa do Marfim","Croácia","Cuba","Chipre","República Tcheca","Dinamarca","Jibuti","Dominica","República Dominicana","Equador","Egito","El Salvador","Guiné Equatorial","Eritreia","Estônia","Etiópia","Ilhas Faroe","Malvinas","Fiji","Finlândia","França","Guiné Francesa","Polinésia Francesa","Gabão","Gâmbia","Georgia","Alemanha","Gana","Gibraltar","Grécia","Groelândia","Granada","Guadalupe","Guatemala","Guernesey","Guiné","Guiné-Bissau","Guiana","Haiti","Ilhas Heard e McDonald","Vaticano","Honduras","Hong Kong","Hungria","Islândia","Índia","Indonésia","Irã","Iraque","Irlanda","Ilha de Man","Israel","Itália","Jamaica","Japão","Jersey","Jordânia","Cazaquistão","Quênia","Quiribati","Coreia do Norte","Coreia do Sul","Kuwait","Quirguistão","Laos","Latvia","Líbano","Lesoto","Libéria","Líbia","Liechtenstein","Lituânia","Luxemburgo","Macao","Macedônia","Madagascar","Malawi","Malásia","Maldives","Mali","Malta","Ilhas Marshall","Martinica","Mauritânia","Maurícia","Maiote","México","Micronésia","Moldávia","Mônaco","Mongólia","Montenegro","Montserrat","Marrocos","Moçambique","Myanmar","Namibia","Nauru","Nepal","Antilhas Holandesas","Holanda","Nova Caledonia","Nova Zelândia","Nicarágua","Nigéria","Niue","Ilha Norfolk","Marianas Setentrionais","Noruega","Omã","Paquistão","Palau","Território da Palestina","Panamá","Papua-Nova Guiné","Paraguai","Peru","Filipinas","Polônia","Portugal","Porto Rico","Qatar","Romênia","Rússia","Ruanda","São Bartolomeu","Santa Helena","Santa Lúcia","São Martinho","São Pedro e Miquelão","São Vicente e Granadinas","Samoa","San Marino","Sao Tomé e Príncipe","Arábia Saudita","Senegal","Sérvia","Seicheles","Serra Leoa","Singapura","Eslováquia","Eslovênia","Ilhas Salomão","Somália","África do Sul","Ilhas Geórgia do Sul e Sandwich do Sul","Espanha","Sri Lanka","Sudão","Suriname","Ilhas Svalbard & Jan Mayen","Suazilândia","Suécia","Suíça","Síria","Taiwan","Tajiquistão","Tanzânia","Tailândia","Timor-Leste","Togo","Toquelau","Tonga","Trinidad e Tobago","Tunísia","Turquia","Turcomenistão","Turcas e Caicos","Tuvalu","Uganda","Ucrânia","Emirados Árabes Unidos","Reino Unido","Estados Unidos da América","Estados Unidos das Ilhas Virgens","Uruguai","Uzbequistão","Vanuatu","Venezuela","Vietnã","Wallis e Futuna","Iêmen","Zâmbia","Zimbábue"]})),w4=c((()=>{v_=["Brasil"]})),j4=c((()=>{g_=["#####-###"]})),E4=c((()=>{k_=["Apto. ###","Sobrado ##","Casa #","Lote ##","Quadra ##"]})),N4=c((()=>{y_=["Acre","Alagoas","Amapá","Amazonas","Bahia","Ceará","Distrito Federal","Espírito Santo","Goiás","Maranhão","Mato Grosso","Mato Grosso do Sul","Minas Gerais","Pará","Paraíba","Paraná","Pernambuco","Piauí","Rio de Janeiro","Rio Grande do Norte","Rio Grande do Sul","Rondônia","Roraima","Santa Catarina","São Paulo","Sergipe","Tocantins"]})),B4=c((()=>{b_=["AC","AL","AP","AM","BA","CE","DF","ES","GO","MA","MT","MS","MG","PA","PB","PR","PE","PI","RJ","RN","RS","RO","RR","SC","SP","SE","TO"]})),P4=c((()=>{S_=["Rua","Avenida","Travessa","Alameda","Marginal","Rodovia"]})),L4=c((()=>{A4(),M4(),T4(),_4(),w4(),j4(),E4(),N4(),B4(),P4(),A_={building_number:h_,city_prefix:p_,city_suffix:m_,country:f_,default_country:v_,postcode:g_,secondary_address:k_,state:y_,state_abbr:b_,street_suffix:S_}})),D4=c((()=>{M_=["amarelo","âmbar","ametista","azul","azul celeste","azul marinho","azul petróleo","açafrão","bordô","bronze","caramelo","castanho ","cenoura","cinza","cobre","coral","dourado","escarlate","esmeralda","ferrugem","fuligem","fúchsia","grená","índigo","jade","laranja","lilás","limão","madeira","magenta","marrom","ouro","pele","prata","preto","púrpura","rosa","roxo","salmão","turquesa","verde","verde lima","verde-azulado","vermelho","violeta"]})),x4=c((()=>{T_=["Livros","Filmes","Música","Jogos","Eletrônicos","Computadores","Casa","Jardim","Ferramentas","Mercearia","Saúde","Beleza","Brinquedos","Crianças","Bebê","Roupas","Sapatos","Jóias","Esportes","Turismo","Automotivo","Industrial"]})),C4=c((()=>{__={adjective:["Pequeno","Ergonômico","Rústico","Inteligente","Lindo","Incrível","Fantástico","Prático","Lustroso","Impressionante","Genérico","Feito à mão","Licenciado","Refinado","Sem marca","Gostoso"],material:["Aço","Madeira","Concreto","Plástico","Algodão","Granito","Borracha","Metal","Macio","Fresco","Congelado"],product:["Cadeira","Carro","Computador","Teclado","Mouse","Bicicleta","Bola","Luvas","Calças","Camiseta","Mesa","Sapatos","Chapéu","Toalhas","Sabonete","Atum","Frango","Peixe","Queijo","Bacon","Pizza","Salada","Salsicha","Salgadinhos"]}})),K4=c((()=>{D4(),x4(),C4(),w_={color:M_,department:T_,product_name:__}})),R4=c((()=>{j_=["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} e #{Name.last_name}"]})),z4=c((()=>{E_=["S.A.","LTDA","EIRELI","e Associados","Comércio"]})),O4=c((()=>{R4(),z4(),N_={name:j_,suffix:E_}})),I4=c((()=>{B_={wide:["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],wide_context:["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],abbr:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"],abbr_context:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"]}})),V4=c((()=>{P_={wide:["Domingo","Segunda","Terça","Quarta","Quinta","Sexta","Sábado"],wide_context:["Domingo","Segunda","Terça","Quarta","Quinta","Sexta","Sábado"],abbr:["Dom","Seg","Ter","Qua","Qui","Sex","Sáb"],abbr_context:["Dom","Seg","Ter","Qua","Qui","Sex","Sáb"]}})),G4=c((()=>{I4(),V4(),L_={month:B_,weekday:P_}})),H4=c((()=>{D_=["br","com","biz","info","name","net","org"]})),F4=c((()=>{x_=["gmail.com","yahoo.com","hotmail.com","live.com","bol.com.br"]})),J4=c((()=>{H4(),F4(),C_={domain_suffix:D_,free_email:x_}})),U4=c((()=>{K_=["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]})),W4=c((()=>{U4(),R_={words:K_}})),Z4=c((()=>{z_=["Feminino","Masculino"]})),q4=c((()=>{O_=["Alessandra","Alice","Aline","Alícia","Ana Clara","Ana Júlia","Ana Laura","Ana Luiza","Antonella","Beatriz","Bruna","Carla","Cecília","Clara","Célia","Dalila","Eduarda","Elisa","Eloá","Emanuelly","Esther","Fabrícia","Felícia","Giovanna","Helena","Heloísa","Isabel","Isabela","Isabella","Isabelly","Isis","Janaína","Joana","Júlia","Karla","Lara","Larissa","Laura","Lavínia","Liz","Lorena","Lorraine","Luiza","Lívia","Maitê","Manuela","Marcela","Margarida","Maria","Maria Alice","Maria Cecília","Maria Clara","Maria Eduarda","Maria Helena","Maria Júlia","Maria Luiza","Mariana","Marina","Marli","Meire","Melissa","Morgana","Márcia","Mércia","Natália","Núbia","Ofélia","Paula","Rafaela","Rebeca","Roberta","Sara","Sarah","Sophia","Suélen","Sílvia","Talita","Valentina","Vitória","Yasmin"]})),Q4=c((()=>{I_=["Alessandra","Alessandro","Alexandre","Alice","Aline","Alícia","Ana Clara","Ana Júlia","Ana Laura","Ana Luiza","Anthony","Antonella","Antônio","Arthur","Beatriz","Benjamin","Benício","Bernardo","Breno","Bruna","Bryan","Caio","Calebe","Carla","Carlos","Cauã","Cecília","Clara","Célia","César","Dalila","Daniel","Danilo","Davi","Davi Lucca","Deneval","Eduarda","Eduardo","Elisa","Eloá","Elísio","Emanuel","Emanuelly","Enzo","Enzo Gabriel","Esther","Fabiano","Fabrícia","Fabrício","Feliciano","Felipe","Felícia","Frederico","Fábio","Félix","Gabriel","Gael","Giovanna","Guilherme","Gustavo","Gúbio","Heitor","Helena","Heloísa","Henrique","Hugo","Hélio","Isaac","Isabel","Isabela","Isabella","Isabelly","Isadora","Isis","Janaína","Joana","Joaquim","João","João Lucas","João Miguel","João Pedro","Júlia","Júlio","Júlio César","Karla","Kléber","Ladislau","Lara","Larissa","Laura","Lavínia","Leonardo","Liz","Lorena","Lorenzo","Lorraine","Lucas","Lucca","Luiza","Lívia","Maitê","Manuela","Marcela","Marcelo","Marcos","Margarida","Maria","Maria Alice","Maria Cecília","Maria Clara","Maria Eduarda","Maria Helena","Maria Júlia","Maria Luiza","Mariana","Marina","Marli","Matheus","Meire","Melissa","Miguel","Morgana","Murilo","Márcia","Mércia","Nataniel","Natália","Nicolas","Noah","Norberto","Núbia","Ofélia","Pablo","Paula","Paulo","Pedro","Pedro Henrique","Pietro","Rafael","Rafaela","Raul","Rebeca","Ricardo","Roberta","Roberto","Salvador","Samuel","Sara","Sarah","Silas","Sirineu","Sophia","Suélen","Sílvia","Talita","Tertuliano","Théo","Valentina","Vicente","Vitor","Vitória","Víctor","Warley","Washington","Yago","Yango","Yasmin","Yuri","Ígor"]})),Y4=c((()=>{V_=["Silva","Souza","Carvalho","Santos","Reis","Xavier","Franco","Braga","Macedo","Batista","Barros","Moraes","Costa","Pereira","Carvalho","Melo","Saraiva","Nogueira","Oliveira","Martins","Moreira","Albuquerque"]})),$4=c((()=>{G_=["Alessandro","Alexandre","Anthony","Antônio","Arthur","Benjamin","Benício","Bernardo","Breno","Bryan","Caio","Calebe","Carlos","Cauã","César","Daniel","Danilo","Davi","Davi Lucca","Deneval","Eduardo","Elísio","Emanuel","Enzo","Enzo Gabriel","Fabiano","Fabrício","Feliciano","Felipe","Frederico","Fábio","Félix","Gabriel","Gael","Guilherme","Gustavo","Gúbio","Heitor","Henrique","Hugo","Hélio","Isaac","Joaquim","João","João Lucas","João Miguel","João Pedro","Júlio","Júlio César","Kléber","Ladislau","Leonardo","Lorenzo","Lucas","Lucca","Marcelo","Marcos","Matheus","Miguel","Murilo","Nataniel","Nicolas","Noah","Norberto","Pablo","Paulo","Pedro","Pedro Henrique","Pietro","Rafael","Raul","Ricardo","Roberto","Salvador","Samuel","Silas","Sirineu","Tertuliano","Théo","Vicente","Vitor","Víctor","Warley","Washington","Yago","Yango","Yuri","Ígor"]})),X4=c((()=>{H_=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),e9=c((()=>{F_=["Sr.","Sra.","Srta.","Dr.","Dra."]})),a9=c((()=>{J_=["Jr.","Neto","Filho"]})),n9=c((()=>{U_={descriptor:["Líder","Senior","Direto","Corporativo","Dinâmico","Futuro","Produto","Nacional","Regional","Distrito","Central","Global","Cliente","Investidor","Dinâmico","International","Legado","Avançar","Interno","Humano","Chefe","Principal"],level:["Soluções","Programa","Marca","Segurança","Pesquisar","Marketing","Diretivas","Implementation","Implementação","Funcionalidade","Resposta","Paradigma","Táticas","Identidade","Mercados","Grupo","Divisão","Aplicações","Otimização","Operações","Infraestrutura","Intranet","Comunicações","Web","Branding","Qualidade","Assurance","Mobilidade","Contas","Dados","Criativo","Configuration","Prestação de contas","Interações","Fatores","Usabilidade","Métricas"],job:["Supervisor","Associado","Executivo","Atentende","Policial","Gerente","Engenheiro","Especialista","Diretor","Coordenador","Administrador","Arquiteto","Analista","Designer","Planejador","Orquestrador","Técnico","Desenvolvedor","Produtor","Consultor","Assistente","Facilitador","Agente","Representante","Estrategista"]}})),i9=c((()=>{Z4(),q4(),Q4(),Y4(),$4(),X4(),e9(),a9(),n9(),W_={binary_gender:z_,female_first_name:O_,first_name:I_,last_name:V_,male_first_name:G_,name:H_,prefix:F_,suffix:J_,title:U_}})),r9=c((()=>{Z_=["(##) ####-####","+55 (##) ####-####","(##) #####-####"]})),t9=c((()=>{r9(),q_={formats:Z_}})),o9=c((()=>{L4(),K4(),O4(),G4(),J4(),W4(),i9(),t9(),Q_={title:"Portuguese (Brazil)",address:A_,commerce:w_,company:N_,date:L_,internet:C_,lorem:R_,name:W_,phone_number:q_}})),s9=c((()=>{Y_=["####","###","##","#"]})),l9=c((()=>{$_=["#{city_name}"]})),u9=c((()=>{X_=["Abrantes","Agualva-Cacém","Águeda","Albufeira","Alcácer do Sal","Alcobaça","Alfena","Almada","Almeirim","Amadora","Amarante","Amora","Anadia","Angra do Heroísmo","Aveiro","Barcelos","Barreiro","Beja","Braga","Bragança","Caldas da Rainha","Câmara de Lobos","Caniço","Cantanhede","Cartaxo","Castelo Branco","Chaves","Coimbra","Costa da Caparica","Covilhã","Elvas","Entroncamento","Ermesinde","Esmoriz","Espinho","Esposende","Estarreja","Estremoz","Évora","Fafe","Faro","Fátima","Felgueiras","Fiães","Figueira da Foz","Freamunde","Funchal","Fundão","Gafanha da Nazaré","Gandra","Gondomar","Gouveia","Guarda","Guimarães","Horta","Ílhavo","Lagoa","Lagos","Lamego","Leiria","Lisbon","Lixa","Loulé","Loures","Lourosa","Macedo de Cavaleiros","Machico","Maia","Mangualde","Marco de Canaveses","Marinha Grande","Matosinhos","Mealhada","Mêda","Miranda do Douro","Mirandela","Montemor-o-Novo","Montijo","Moura","Odivelas","Olhão da Restauração","Oliveira de Azeméis","Oliveira do Bairro","Oliveira do Hospital","Ourém","Ovar","Paços de Ferreira","Paredes","Penafiel","Peniche","Peso da Régua","Pinhel","Pombal","Ponta Delgada","Ponte de Sor","Portalegre","Portimão","Porto","Póvoa de Santa Iria","Póvoa de Varzim","Praia da Vitória","Quarteira","Queluz","Rebordosa","Reguengos de Monsaraz","Ribeira Grande","Rio Maior","Rio Tinto","Sabugal","Sacavém","Santa Comba Dão","Santa Cruz","Santa Maria da Feira","Santana","Santarém","Santiago do Cacém","Santo Tirso","São João da Madeira","São Mamede de Infesta","São Salvador de Lordelo","Seia","Seixal","Serpa","Setúbal","Silves","Sines","Tarouca","Tavira","Tomar","Tondela","Torres Novas","Torres Vedras","Trancoso","Trofa","Valbom","Vale de Cambra","Valongo","Valpaços","Vendas Novas","Viana do Castelo","Vila Baleira (a.k.a. Porto Santo)","Vila do Conde","Vila Franca de Xira","Vila Nova de Famalicão","Vila Nova de Foz Côa","Vila Nova de Gaia","Vila Nova de Santo André","Vila Real","Vila Real de Santo António","Viseu","Vizela"]})),c9=c((()=>{ew=[]})),d9=c((()=>{aw=[]})),h9=c((()=>{nw=["África do Sul","Áustria","Índia","Afeganistão","Albânia","Alemanha","Andorra","Angola","Anguila","Antárctida","Antígua e Barbuda","Antilhas Neerlandesas","Arábia Saudita","Argélia","Argentina","Arménia","Aruba","Austrália","Azerbaijão","Bélgica","Bósnia e Herzegovina","Baamas","Bangladeche","Barém","Barbados","Belize","Benim","Bermudas","Bielorrússia","Birmânia","Bolívia","Botsuana","Brasil","Brunei","Bulgária","Burúndi","Burquina Faso","Butão","Cabo Verde","Camarões","Camboja","Canadá","Catar","Cazaquistão","Chade","Chile","China","Chipre","Colômbia","Comores","Congo-Brazzaville","Congo-Kinshasa","Coreia do Norte","Coreia do Sul","Costa Rica","Costa do Marfim","Croácia","Cuba","Dinamarca","Domínica","Egipto","Emiratos Árabes Unidos","Equador","Eritreia","Eslováquia","Eslovénia","Espanha","Estónia","Estados Unidos","Etiópia","Faroé","Fiji","Filipinas","Finlândia","França","Gâmbia","Gabão","Gana","Geórgia","Geórgia do Sul e Sandwich do Sul","Gibraltar","Grécia","Granada","Gronelândia","Guadalupe","Guame","Guatemala","Guiana","Guiana Francesa","Guiné","Guiné Equatorial","Guiné-Bissau","Haiti","Honduras","Hong Kong","Hungria","Iémen","Ilha Bouvet","Ilha Norfolk","Ilha do Natal","Ilhas Caimão","Ilhas Cook","Ilhas Falkland","Ilhas Heard e McDonald","Ilhas Marshall","Ilhas Menores Distantes dos Estados Unidos","Ilhas Salomão","Ilhas Turcas e Caicos","Ilhas Virgens Americanas","Ilhas Virgens Britânicas","Ilhas dos Cocos","Indonésia","Irão","Iraque","Irlanda","Islândia","Israel","Itália","Jamaica","Japão","Jibuti","Jordânia","Jugoslávia","Kuwait","Líbano","Líbia","Laos","Lesoto","Letónia","Libéria","Listenstaine","Lituânia","Luxemburgo","México","Mónaco","Macau","Macedónia","Madagáscar","Malásia","Malávi","Maldivas","Mali","Malta","Marianas do Norte","Marrocos","Martinica","Maurícia","Mauritânia","Mayotte","Micronésia","Moçambique","Moldávia","Mongólia","Monserrate","Níger","Namíbia","Nauru","Nepal","Nicarágua","Nigéria","Niue","Noruega","Nova Caledónia","Nova Zelândia","Omã","Países Baixos","Palau","Panamá","Papua-Nova Guiné","Paquistão","Paraguai","Peru","Pitcairn","Polónia","Polinésia Francesa","Porto Rico","Portugal","Quénia","Quirguizistão","Quiribáti","Rússia","Reino Unido","República Centro-Africana","República Checa","República Dominicana","Reunião","Roménia","Ruanda","São Cristóvão e Neves","São Marinho","São Pedro e Miquelon","São Tomé e Príncipe","São Vicente e Granadinas","Síria","Salvador","Samoa","Samoa Americana","Santa Helena","Santa Lúcia","Sara Ocidental","Seicheles","Senegal","Serra Leoa","Singapura","Somália","Sri Lanca","Suécia","Suíça","Suazilândia","Sudão","Suriname","Svalbard e Jan Mayen","Tailândia","Taiwan","Tajiquistão","Tanzânia","Território Britânico do Oceano Índico","Territórios Austrais Franceses","Timor Leste","Togo","Tokelau","Tonga","Trindade e Tobago","Tunísia","Turquemenistão","Turquia","Tuvalu","Ucrânia","Uganda","Uruguai","Usbequistão","Vanuatu","Vaticano","Venezuela","Vietname","Wallis e Futuna","Zâmbia","Zimbabué"]})),p9=c((()=>{iw=["Portugal"]})),m9=c((()=>{rw=["Norte","Este","Sul","Oeste","Nordeste","Noroeste","Sudeste","Sodoeste"]})),f9=c((()=>{tw=["####-###"]})),v9=c((()=>{ow=["#{street_name} #{building_number}"]})),g9=c((()=>{sw=["#{street_prefix} #{Name.first_name} #{Name.last_name}","N#","N##","N###","N###-#"]})),k9=c((()=>{lw=["Acesso","Alameda","Avenida","Azinhaga","Bairro","Beco","Calçada","Caminho","Escadas","Estrada","Jardim","Ladeira","Largo","Praça","Praceta","Quinta","Rua","Travessa","Urbanização","Viela"]})),y9=c((()=>{s9(),l9(),u9(),c9(),d9(),h9(),p9(),m9(),f9(),v9(),g9(),k9(),uw={building_number:Y_,city:$_,city_name:X_,city_prefix:ew,city_suffix:aw,country:nw,default_country:iw,direction:rw,postcode:tw,street_address:ow,street_name:sw,street_prefix:lw}})),b9=c((()=>{cw=["+351 91#######","+351 93#######","+351 96#######"]})),S9=c((()=>{b9(),dw={formats:cw}})),A9=c((()=>{hw=["vermelho","verde","azul","amarelo","roxo","branco","preto","laranja","rosa","cinzento","castanho","violeta","turquesa","bronzeado","salmão","ameixa","orquídea","magenta","lima","marfim","índigo","ouro","fúcsia","ciano","azure","lavanda","prata"]})),M9=c((()=>{pw=["Livros","Filmes","Música","Jogos","Electrónica","Computadores","Casa","Jardim","Ferramentas","Mercearia","Saúde","Beleza","Brinquedos","Crianças","Bebé","Roupas","Sapatos","Jóias","Desporto","Ar Livre","Automóveis","Industrial"]})),T9=c((()=>{mw={adjective:["Pequeno","Ergonómico","Rústico","Inteligente","Linda","Incrível","Fantástico","Prático","Lustroso","Impressionante","Genérico","Artesanal","Feito à Mão","Licenciado","Refinado","Sem Marca","Saboroso"],material:["Aço","Madeira","Betão","Plástico","Algodão","Granito","Borracha","Metal","Suave","Fresco","Congelado"],product:["Cadeira","Carro","Computador","Teclado","Rato","Bicicleta","Bola","Luvas","Calças","Camisa","Mesa","Sapatos","Chapéu","Toalhas","Sabonete","Atum","Frango","Peixe","Queijo","Bacon","Pizza","Salada","Salsichas","Batatas Fritas"]}})),_9=c((()=>{A9(),M9(),T9(),fw={color:hw,department:pw,product_name:mw}})),w9=c((()=>{vw={wide:["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],abbr:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"]}})),j9=c((()=>{gw={wide:["Segunda","Terça","Quarta","Quinta","Sexta","Sábado","Domingo"],abbr:["Seg","Ter","Qua","Qui","Sex","Sáb","Dom"]}})),E9=c((()=>{w9(),j9(),kw={month:vw,weekday:gw}})),N9=c((()=>{yw=["pt","gov.pt","com.pt","org.pt","eu","com","biz","info","name","net","org"]})),B9=c((()=>{bw=["gmail.com","yahoo.com","hotmail.com","outlook.com","live.com","portugalmail.pt","mail.pt","sapo.pt","aeiou.pt"]})),P9=c((()=>{N9(),B9(),Sw={domain_suffix:yw,free_email:bw}})),L9=c((()=>{Aw=["Adriana","Alexandra","Alice","Amélia","Ana","Ariana","Áurea","Aurora","Bárbara","Beatriz","Benedita","Bruna","Caetana","Camila","Carla","Carlota","Carminho","Carmo","Carolina","Catarina","Cecília","Célia","Clara","Constança","Daniela","Débora","Diana","Eduarda","Elisa","Ema","Emília","Érica","Eva","Fabiana","Filipa","Flor","Francisca","Frederica","Gabriela","Helena","Inês","Irina","Íris","Isabel","Jéssica","Joana","Júlia","Juliana","Julieta","Lara","Laura","Leonor","Letícia","Lia","Lorena","Luana","Luena","Luísa","Luna","Madalena","Mafalda","Mara","Márcia","Margarida","Maria","Mariana","Marta","Matilde","Melissa","Mia","Miriam","Natália","Nicole","Núria","Ofélia","Olívia","Paula","Pilar","Rafaela","Raquel","Rita","Rosa","Safira","Sara","Sílvia","Sofia","Soraia","Tatiana","Teresa","Valentina","Vânia","Vera","Vitória"]})),D9=c((()=>{Mw=["Sra.","Dra.","Prof.ª","Eng.ª"]})),x9=c((()=>{Tw=["Adriana","Afonso","Alexandra","Alexandre","Alice","Amélia","Ana","André","Ângelo","António","Ariana","Artur","Áurea","Aurora","Bárbara","Beatriz","Benedita","Benjamim","Bernardo","Bruna","Bruno","Caetana","Camila","Carla","Carlos","Carlota","Carminho","Carmo","Carolina","Catarina","Cecília","Célia","César","Clara","Constança","Cristiano","Daniel","Daniela","David","Débora","Diana","Dinis","Diogo","Duarte","Edgar","Eduarda","Eduardo","Elias","Elisa","Ema","Emanuel","Emília","Érica","Eva","Fabiana","Fábio","Feliciano","Fernando","Filipa","Filipe","Flor","Francisca","Francisco","Frederica","Frederico","Gabriel","Gabriela","Gaspar","Gil","Gonçalo","Guilherme","Gustavo","Helena","Hélio","Henrique","Hugo","Igor","Ígor","Inês","Irina","Íris","Isabel","Isac","Ivan","Ivo","Jaime","Jéssica","Joana","João","Joaquim","Jorge","José","Josué","Júlia","Juliana","Julieta","Júlio","Lara","Laura","Leandro","Leonardo","Leonor","Letícia","Lia","Lorena","Lourenço","Luana","Lucas","Luena","Luís","Luísa","Luna","Madalena","Mafalda","Manel","Manuel","Mara","Marcelo","Márcia","Marco","Marcos","Margarida","Maria","Mariana","Mário","Marta","Martim","Mateus","Matias","Matilde","Mauro","Melissa","Mia","Micael","Miguel","Miriam","Moisés","Natália","Nicole","Norberto","Nuno","Núria","Ofélia","Olívia","Paula","Paulo","Pedro","Pilar","Rafael","Rafaela","Raquel","Raul","Renato","Ricardo","Rita","Roberto","Rodrigo","Romeu","Rosa","Rúben","Rui","Safira","Salvador","Samuel","Sandro","Santiago","Sara","Sebastião","Sérgio","Sílvia","Simão","Sofia","Soraia","Tatiana","Teresa","Tiago","Tomás","Tomé","Valentim","Valentina","Valter","Vânia","Vasco","Vera","Vicente","Vítor","Vitória","Xavier"]})),C9=c((()=>{_w=["Abreu","Albuquerque","Almeida","Alves","Amaral","Amorim","Andrade","Anjos","Antunes","Araújo","Assunção","Azevedo","Baptista","Barbosa","Barros","Batista","Borges","Braga","Branco","Brito","Campos","Cardoso","Carneiro","Carvalho","Castro","Coelho","Correia","Costa","Cruz","Cunha","Domingues","Esteves","Faria","Fernandes","Ferreira","Figueiredo","Fonseca","Freitas","Garcia","Gaspar","Gomes","Gonçalves","Guerreiro","Henriques","Jesus","Leal","Leite","Lima","Lopes","Loureiro","Lourenço","Macedo","Machado","Magalhães","Maia","Marques","Martins","Matias","Matos","Melo","Mendes","Miranda","Monteiro","Morais","Moreira","Mota","Moura","Nascimento","Neto","Neves","Nobre","Nogueira","Nunes","Oliveira","Pacheco","Paiva","Pereira","Pinheiro","Pinho","Pinto","Pires","Ramos","Raposo","Reis","Ribeiro","Rocha","Rodrigues","Santos","Saraiva","Silva","Simões","Soares","Sousa","Sá","Tavares","Teixeira","Torres","Valente","Vaz","Vicente","Vieira"]})),K9=c((()=>{ww=["Afonso","Alexandre","André","Ângelo","António","Artur","Benjamim","Bernardo","Bruno","Carlos","César","Cristiano","Daniel","David","Dinis","Diogo","Duarte","Edgar","Eduardo","Elias","Emanuel","Fábio","Feliciano","Fernando","Filipe","Francisco","Frederico","Gabriel","Gaspar","Gil","Gonçalo","Guilherme","Gustavo","Hélio","Henrique","Hugo","Igor","Ígor","Isac","Ivan","Ivo","Jaime","João","Joaquim","Jorge","José","Josué","Júlio","Leandro","Leonardo","Lourenço","Lucas","Luís","Manel","Manuel","Marcelo","Marco","Marcos","Mário","Martim","Mateus","Matias","Mauro","Micael","Miguel","Moisés","Norberto","Nuno","Paulo","Pedro","Rafael","Raul","Renato","Ricardo","Roberto","Rodrigo","Romeu","Rúben","Rui","Salvador","Samuel","Sandro","Santiago","Sebastião","Sérgio","Simão","Tiago","Tomás","Tomé","Valentim","Valter","Vasco","Vicente","Vítor","Xavier"]})),R9=c((()=>{jw=["Sr.","Dr.","Prof.","Eng.º"]})),z9=c((()=>{Ew=["#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}","#{male_prefix} #{male_first_name} #{last_name}","#{female_prefix} #{female_first_name} #{last_name}"]})),O9=c((()=>{Nw=["#{female_prefix}","#{male_prefix}"]})),I9=c((()=>{Bw=[]})),V9=c((()=>{L9(),D9(),x9(),C9(),K9(),R9(),z9(),O9(),I9(),Pw={female_first_name:Aw,female_prefix:Mw,first_name:Tw,last_name:_w,male_first_name:ww,male_prefix:jw,name:Ew,prefix:Nw,suffix:Bw}})),G9=c((()=>{Lw=["+351 2########","+351 3########","+351 91#######","+351 92#######","+351 93#######","+351 96#######"]})),H9=c((()=>{G9(),Dw={formats:Lw}})),F9=c((()=>{y9(),S9(),_9(),E9(),P9(),V9(),H9(),xw={title:"Portuguese (Portugal)",address:uw,cell_phone:dw,commerce:fw,date:kw,internet:Sw,name:Pw,phone_number:Dw}})),J9=c((()=>{Cw=["Bloc ##"]})),U9=c((()=>{Kw=["București","Cluj-Napoca","Timișoara","Iași","Constanța","Craiova","Brașov","Galați","Ploiești","Oradea","Brăila","Arad","Pitești","Sibiu","Bacău","Târgu Mureș","Baia Mare","Buzău","Botoșani","Satu Mare","Râmnicu Vâlcea","Drobeta-Turnu Severin","Suceava","Piatra Neamț","Târgu Jiu","Târgoviște","Focșani","Bistrița","Reșița","Tulcea","Călărași","Alba Iulia","Giurgiu","Deva","Hunedoara","Zalău","Sfântu Gheorghe","Bârlad","Vaslui","1387","Slobozia","Turda","Mediaș","Voluntari","Lugoj","Medgidia","Onești","Miercurea Ciuc","Sighetu Marmației","Petroșani","Mangalia","Tecuci","Râmnicu Sărat","Pașcani","Dej","Reghin","Năvodari","Odorheiu Secuiesc","Câmpina","Mioveni","Câmpulung","Caracal","Săcele","Făgăraș","Fetești","Sighișoara","Borșa","Roșiorii de Vede","Curtea de Argeș","Sebeș","Huși","Fălticeni","Pantelimon","Oltenița","Turnu Măgurele","Caransebeș","Dorohoi","Rădăuți","Zărnești","Lupeni","Aiud","Petrila","Buftea","Moinești","Târnăveni","Câmpia Turzii","Popești-Leordeni","Gherla","Carei","Cugir","Blaj","Codlea","Comănești","Târgu Neamț","Motru","Târgu Secuiesc","Moreni","Gheorgheni","Băicoi","Orăștie","Salonta","Balș","Drăgășani","Băilești","Calafat","Filiași","Cernavodă","Câmpulung Moldovenesc","Breaza","Marghita","Baia Sprie","Luduș","Corabia","Adjud","Vișeu de Sus","Bragadiru","Bocșa","Râșnov","Urziceni","Pucioasa","Vatra Dornei","Cisnădie","Mizil","Toplița","Chitila","Șimleu Silvaniei","Buhuși","Vicovu de Sus","Zimnicea","Găești","Gura Humorului","Otopeni","Ocna Mureș","Avrig","Simeria","Pecica","Dăbuleni","Bolintin-Vale","Rovinari","Comarnic","Vălenii de Munte","Sânnicolau Mare","Dărmănești","Moldova Nouă","Târgu Lăpuș","Săcueni","Videle","Scornicești","Boldești-Scăeni","Sântana","Târgu Ocna","Măgurele","Călan","Beclean","Țăndărei","Sovata","Oravița","Jibou","Urlați","Hârlău","Beiuș","Ianca","Jimbolia","Topoloveni","Drăgănești-Olt","Sinaia","Nehoiu","Covasna","Negrești-Oaș","Strehaia","Dolhasca","Orșova","Valea lui Mihai","Murfatlar","Aleșd","Darabani","Cristuru Secuiesc","Flămânzi","Mărășești","Sângeorz-Băi","Liteni","Târgu Frumos","Titu","Hațeg","Oțelu Roșu","Ineu","Năsăud","Huedin","Odobești","Hârșova","Bumbești-Jiu","Seini","Salcea","Podu Iloaiei","Eforie","Uricani","Baraolt","Bușteni","Tășnad","Iernut","Agnita","Babadag","Băbeni","Târgu Cărbunești","Negrești","Recaș","Siret","Măcin","Chișineu-Criș","Plopeni","Mihăilești","Șomcuta Mare","Fieni","Întorsura Buzăului","Călimănești","Panciu","Nădlac","Zlatna","Pătârlagele","Cehu Silvaniei","Amara","Budești","Anina","Dumbrăveni","Câmpeni","Pogoanele","Tăuții-Măgherăuș","Tismana","Curtici","Techirghiol","Sărmașu","Vlăhița","Cajvana","Săveni","Segarcea","Pâncota","Răcari","Făget","Tălmaciu","Buziaș","Fundulea","Murgeni","Teiuș","Însurăței","Bicaz","Târgu Bujor","Ștei","Lehliu Gară","Horezu","Deta","Slănic","Piatra-Olt","Ardud","Bălan","Sebiș","Brezoi","Potcoava","Gătaia","Novaci","Miercurea Nirajului","Baia de Aramă","Copșa Mică","Vânju Mare","Sângeorgiu de Pădure","Geoagiu","Săliște","Ciacova","Rupea","Milișăuți","Isaccea","Abrud","Fierbinți-Târg","Cavnic","Săliștea de Sus","Băile Herculane","Bălcești","Berbești","Ghimbav","Predeal","Țicleni","Azuga","Aninoasa","Bucecea","Băile Olănești","Slănic Moldova","Miercurea Sibiului","Sulina","Baia de Arieș","Făurei","Ocna Sibiului","Bechet","Căzănești","Ocnele Mari","Berești","Borsec","Băile Govora","Vașcău","Nucet","Solca","Băile Tușnad"]})),W9=c((()=>{Rw=["Alba","Arad","Arges","Bacau","Bihor","Bistrita-Nasaud","Botosani","Braila","Brasov","Bucuresti","Buzau","Calarasi","Caras-Severin","Cluj","Constanta","Covasna","Dambovita","Dolj","Galati","Giurgiu","Gorj","Harghita","Hunedoara","Ialomita","Iasi","Ilfov","Maramures","Mehedinti","Mures","Neamt","Olt","Prahova","Salaj","Satu-Mare","Sibiu","Suceava","Teleorman","Timis","Tulcea","Valcea","Vaslui","Vrancea"]})),Z9=c((()=>{zw=["România"]})),q9=c((()=>{Ow=["######"]})),Q9=c((()=>{Iw=["Ap. ##","Ap. ###"]})),Y9=c((()=>{Vw=["Alba","Arad","Arges","Bacau","Bihor","Bistrita-Nasaud","Botosani","Braila","Brasov","Bucuresti","Buzau","Calarasi","Caras-Severin","Cluj","Constanta","Covasna","Dambovita","Dolj","Galati","Giurgiu","Gorj","Harghita","Hunedoara","Ialomita","Iasi","Ilfov","Maramures","Mehedinti","Mures","Neamt","Olt","Prahova","Salaj","Satu-Mare","Sibiu","Suceava","Teleorman","Timis","Tulcea","Valcea","Vaslui","Vrancea"]})),$9=c((()=>{Gw=["AB","AR","AG","BC","BH","BN","BT","BR","BV","B","BZ","CL","CS","CJ","CT","CV","DB","DJ","GL","GR","GJ","HR","HD","IL","IS","IF","MM","MH","MS","NT","OT","PH","SJ","SM","SB","SV","TR","TM","TL","VL","VS","VN"]})),X9=c((()=>{Hw=["#{street_name}, #{building_number}, #{secondary_address}"]})),e6=c((()=>{Fw=["#{street_suffix} #{streets}"]})),a6=c((()=>{Jw=["Aleea","Bulevardul","Intrarea"]})),n6=c((()=>{Uw=["Capalna","Gheorghe Duca","Acvila","Lisabona","Campulung","Ilie Gurita","Succesului","Siret","Mihai Viteazul","Complexului","Chihlimbarului","Prahova","George Cosbuc","Bobalna","Eroina De La Jiu","Cucuzel Ion","Sergent Turturica","Timisul De Sus","Tuberozelor","Rulmentului","Soldat Polosca Tanase","Nabucului","Flautului","Poiana Codrului","Daia","Soldat Dima Dumitru","Bulandra Tony","Pastravilor","Eternitatii","Tufanilor","Discului","Garnitei","Costaforu","Aerogarii","Preluca","Delureni","Soldat Velicu Stefan","Ocalei","Calboranu George","Cercelus","Timocului","Alexandru Locusteanu","Pumnul Aron","Migdalului","Valului","Inginer Radu Elie","Cricovului","Mavrogheni","Bauxitei","Movilitei","Pictor Hentia Sava","Abus","Fieni","Zambetului","Izvorul Muresului","Rolei","Utiesului","Gheorghe Popescu","Radulescu Drumea","Sacele","Soimarestilor","Romeo","Voicesti","Carada Eugeniu","Barometrului","Tudorache Gheorghe","Morii","Jules Michelet","Nicolae G. Caranfil","Sergent Anghel Gheorghe","Reconstructiei","Vespasian","Tincani","Stirbei Voda","Ariesu Mare","Penelului","Piscul Vechi","Natiunile Unite","Doctor Tanasescu Ion","Stefan Greceanu","Banul Scarlat","Crinului","Domnita Florica","Plutonier Nita Ion","Soldat Ionita Stere","Rovine","Tropicelor","Matei Millo","Veronica Micle","Pictor Iser Iosif","Mitropolit Nifon","Locotenent Victor Manu","Studioului","Piatra Morii","Valea Lupului","Episcop Chesarie","Sergent Major Drag Marin","Bega","Dobrun","Fulgeresti"]})),i6=c((()=>{J9(),U9(),W9(),Z9(),q9(),Q9(),Y9(),$9(),X9(),e6(),a6(),n6(),Ww={building_number:Cw,city:Kw,county:Rw,default_country:zw,postcode:Ow,secondary_address:Iw,state:Vw,state_abbr:Gw,street_address:Hw,street_name:Fw,street_suffix:Jw,streets:Uw}})),r6=c((()=>{Zw=["0726######","0723######","0722######","0721######","0720######","0728######","0729######","0730######","0739######","0738######","0737######","0736######","0735######","0734######","0733######","0732######","0731######","0780######","0788######","0753######","0754######","0755######","0756######","0757######","0758######","0759######","0748######","0747######","0746######","0740######","0741######","0742######","0743######","0744######","0745######","0711######","0727######","0725######","0724######","0786######","0760######","0761######","0762######","0763######","0764######","0765######","0766######","0767######","0785######","0768######","0769######","0784######","0770######","0772######","0771######","0749######","0750######","0751######","0752######"]})),t6=c((()=>{r6(),qw={formats:Zw}})),o6=c((()=>{Qw={wide:["Ianuarie","Februarie","Martie","Aprilie","Mai","Iunie","Iulie","August","Septembrie","Octombrie","Noiembrie","Decembrie"],wide_context:["Ianuarie","Februarie","Martie","Aprilie","Mai","Iunie","Iulie","August","Septembrie","Octombrie","Noiembrie","Decembrie"],abbr:["Ian","Feb","Mar","Apr","Mai","Iun","Iul","Aug","Sep","Oct","Noi","Dec"],abbr_context:["Ian","Feb","Mar","Apr","Mai","Iun","Iul","Aug","Sep","Oct","Noi","Dec"]}})),s6=c((()=>{Yw={wide:["Luni","Marți","Miercuri","Joi","Vineri","Sâmbătă","Duminică"],wide_context:["Luni","Marți","Miercuri","Joi","Vineri","Sâmbătă","Duminică"],abbr:["Luni","Marți","Miercuri","Joi","Vineri","Sâmbătă","Duminică"],abbr_context:["Luni","Marți","Miercuri","Joi","Vineri","Sâmbătă","Duminică"]}})),l6=c((()=>{o6(),s6(),$w={month:Qw,weekday:Yw}})),u6=c((()=>{Xw=["com","biz","info","name","net","org","ro","com.ro","org.ro","tm.ro","store.ro","info.ro","nom.ro","nt.ro","firm.ro","www.ro","arts.ro","rec.ro"]})),c6=c((()=>{ej=["gmail.com","yahoo.com","hotmail.com"]})),d6=c((()=>{u6(),c6(),aj={domain_suffix:Xw,free_email:ej}})),h6=c((()=>{nj=["Ada","Adela","Adelaida","Adelina","Adina","Adriana","Agata","Aglaia","Agripina","Aida","Alberta","Albertina","Alexandra","Alexandrina","Alida","Alina","Alice","Alis","Alma","Amalia","Amelia","Amanda","Ana","Anabela","Anaida","Anamaria","Anastasia","Anca","Ancuța","Anda","Andra","Andrada","Andreea","Anemona","Aneta","Angela","Anghelina","Anica","Anișoara","Antoaneta","Antonia","Antonela","Anuța","Ariadna","Ariana","Arina","Aristița","Artemisa","Astrid","Atena","Augustina","Aura","Aurelia","Aureliana","Aurica","Aurora","Beatrice","Betina","Bianca","Blanduzia","Bogdana","Brândușa","Camelia","Carina","Carla","Carmen","Carmina","Carolina","Casandra","Casiana","Caterina","Catinca","Catrina","Catrinel","Cătălina","Cecilia","Celia","Cerasela","Cezara","Cipriana","Clara","Clarisa","Claudia","Clementina","Cleopatra","Codrina","Codruța","Constantina","Constanța","Consuela","Coralia","Corina","Cornelia","Cosmina","Crenguța","Crina","Cristina","Daciana","Dafina","Daiana","Dalia","Dana","Daniela","Daria","Dariana","Delia","Demetra","Denisa","Despina","Diana","Dida","Didina","Dimitrina","Dina","Dochia","Doina","Domnica","Dora","Doriana","Dorina","Dorli","Draga","Dumitra","Dumitrana","Ecaterina","Eftimia","Elena","Eleonora","Eliana","Elisabeta","Elisaveta","Eliza","Elodia","Elvira","Emilia","Emanuela","Erica","Estera","Eufrosina","Eugenia","Eusebia","Eva","Evanghelina","Evelina","Fabia","Fabiana","Felicia","Filofteia","Fiona","Flavia","Floare","Floarea","Flora","Floriana","Florica","Florina","Florentina","Florența","Francesca","Frusina","Gabriela","Geanina","Gențiana","Georgeta","Georgia","Georgiana","Geta","Gherghina","Gianina","Gina","Giorgiana","Grațiana","Grațiela","Hortensia","Henrieta","Heracleea","Iasmina","Ica","Ileana","Ilinca","Ilona","Ina","Ioana","Ioanina","Iolanda","Ionela","Ionelia","Iosefina","Irina","Iridenta","Iris","Isabela","Iulia","Iuliana","Iustina","Ivona","Izabela","Jana","Janeta","Janina","Jasmina","Jeana","Julia","Julieta","Larisa","Laura","Laurenția","Lavinia","Lăcrămioara","Leana","Lelia","Leontina","Leopoldina","Letiția","Lia","Liana","Lidia","Ligia","Lili","Liliana","Lioara","Livia","Loredana","Lorelei","Lorena","Luana","Lucia","Luciana","Lucreția","Ludovica","Ludmila","Luiza","Luminița","Magdalena","Maia","Manuela","Mara","Marcela","Marga","Margareta","Marcheta","Maria","Mariana","Maricica","Marilena","Marina","Marinela","Marioara","Marta","Matilda","Malvina","Mădălina","Mălina","Mărioara","Măriuca","Melania","Melina","Mihaela","Milena","Mina","Minodora","Mioara","Mirabela","Mirela","Mirona","Miruna","Mona","Monalisa","Monica","Nadia","Narcisa","Natalia","Natașa","Noemi","Nicoleta","Niculina","Nidia","Nora","Norica","Oana","Octavia","Octaviana","Ofelia","Olga","Olimpia","Olivia","Ortansa","Otilia","Ozana","Pamela","Paraschiva","Paula","Paulica","Paulina","Patricia","Petronela","Petruța","Pompilia","Profira","Rada","Rafila","Raluca","Ramona","Rebeca","Renata","Rica","Roberta","Robertina","Rodica","Romanița","Romina","Roza","Rozalia","Roxana","Roxelana","Ruxanda","Ruxandra","Sabina","Sabrina","Safta","Salomea","Sanda","Saveta","Savina","Sânziana","Semenica","Severina","Sidonia","Silvia","Silvana","Silviana","Simina","Simona","Smaranda","Sofia","Sonia","Sorana","Sorina","Speranța","Stana","Stanca","Stela","Steliana","Steluța","Suzana","Svetlana","Ștefana","Ștefania","Tamara","Tania","Tatiana","Teea","Teodora","Teodosia","Teona","Tiberia","Timea","Tinca","Tincuța","Tudora","Tudorița","Tudosia","Valentina","Valeria","Vanesa","Varvara","Vasilica","Venera","Vera","Veronica","Veta","Vicenția","Victoria","Violeta","Viorela","Viorica","Virginia","Viviana","Voichița","Xenia","Zaharia","Zamfira","Zaraza","Zenobia","Zenovia","Zina","Zoe"]})),p6=c((()=>{ij=["Achim","Adam","Albu","Aldea","Alexa","Alexandrescu","Alexandru","Alexe","Andrei","Anghel","Antal","Anton","Apostol","Ardelean","Ardeleanu","Avram","Baciu","Badea","Balan","Balint","Banica","Banu","Barbu","Barbulescu","Bejan","Biro","Blaga","Boboc","Bodea","Bogdan","Bota","Botezatu","Bratu","Bucur","Buda","Bunea","Burlacu","Calin","Catana","Cazacu","Chiriac","Chirila","Chirita","Chis","Chivu","Ciobanu","Ciocan","Cojocaru","Coman","Constantin","Constantinescu","Cornea","Cosma","Costache","Costea","Costin","Covaci","Cozma","Craciun","Cretu","Crisan","Cristea","Cristescu","Croitoru","Cucu","Damian","Dan","Danciu","Danila","Dascalu","David","Diaconescu","Diaconu","Dima","Dinca","Dinu","Dobre","Dobrescu","Dogaru","Dragan","Draghici","Dragoi","Dragomir","Dumitrache","Dumitrascu","Dumitrescu","Dumitriu","Dumitru","Duta","Enache","Ene","Farcas","Filimon","Filip","Florea","Florescu","Fodor","Fratila","Gabor","Gal","Ganea","Gavrila","Georgescu","Gheorghe","Gheorghita","Gheorghiu","Gherman","Ghita","Giurgiu","Grecu","Grigoras","Grigore","Grigorescu","Grosu","Groza","Horvath","Iacob","Iancu","Ichim","Ignat","Ilie","Iliescu","Ion","Ionescu","Ionita","Iordache","Iorga","Iosif","Irimia","Ispas","Istrate","Ivan","Ivascu","Kiss","Kovacs","Lazar","Luca","Lungu","Lupu","Macovei","Maftei","Man","Manea","Manolache","Manole","Marcu","Marginean","Marian","Marin","Marinescu","Martin","Mateescu","Matei","Maxim","Mazilu","Micu","Mihai","Mihaila","Mihailescu","Mihalache","Mihalcea","Milea","Militaru","Mircea","Mirea","Miron","Miu","Mocanu","Moga","Moise","Moldovan","Moldoveanu","Molnar","Morar","Moraru","Muntean","Munteanu","Muresan","Musat","Nagy","Nastase","Neacsu","Neagoe","Neagu","Neamtu","Nechita","Necula","Nedelcu","Negoita","Negrea","Negru","Nemes","Nica","Nicoara","Nicolae","Nicolescu","Niculae","Niculescu","Nistor","Nita","Nitu","Oancea","Olariu","Olaru","Oltean","Olteanu","Oprea","Opris","Paduraru","Pana","Panait","Paraschiv","Parvu","Pasca","Pascu","Patrascu","Paun","Pavel","Petcu","Peter","Petre","Petrea","Petrescu","Pintea","Pintilie","Pirvu","Pop","Popa","Popescu","Popovici","Preda","Prodan","Puiu","Radoi","Radu","Radulescu","Roman","Rosca","Rosu","Rotaru","Rus","Rusu","Sabau","Sandor","Sandu","Sarbu","Sava","Savu","Serban","Sima","Simion","Simionescu","Simon","Sirbu","Soare","Solomon","Staicu","Stan","Stanciu","Stancu","Stanescu","Stefan","Stefanescu","Stoian","Stoica","Stroe","Suciu","Szabo","Szasz","Szekely","Tamas","Tanase","Tataru","Teodorescu","Toader","Toma","Tomescu","Toth","Trandafir","Trif","Trifan","Tudor","Tudorache","Tudose","Turcu","Ungureanu","Ursu","Vaduva","Varga","Vasile","Vasilescu","Vasiliu","Veres","Vintila","Visan","Vlad","Voicu","Voinea","Zaharia","Zamfir"]})),m6=c((()=>{rj=["Achim","Adam","Adelin","Adonis","Adrian","Adi","Agnos","Albert","Alex","Alexandru","Alexe","Aleodor","Alin","Alistar","Amedeu","Amza","Anatolie","Andrei","Angel","Anghel","Antim","Anton","Antonie","Antoniu","Arian","Aristide","Arsenie","Augustin","Aurel","Aurelian","Aurică","Avram","Axinte","Barbu","Bartolomeu","Basarab","Bănel","Bebe","Beniamin","Benone","Bernard","Bogdan","Brăduț","Bucur","Caius","Camil","Cantemir","Carol","Casian","Cazimir","Călin","Cătălin","Cedrin","Cezar","Ciprian","Claudiu","Codin","Codrin","Codruț","Cornel","Corneliu","Corvin","Constantin","Cosmin","Costache","Costel","Costin","Crin","Cristea","Cristian","Cristobal","Cristofor","Dacian","Damian","Dan","Daniel","Darius","David","Decebal","Denis","Dinu","Dominic","Dorel","Dorian","Dorin","Dorinel","Doru","Dragoș","Ducu","Dumitru","Edgar","Edmond","Eduard","Eftimie","Emil","Emilian","Emanoil","Emanuel","Emanuil","Eremia","Eric","Ernest","Eugen","Eusebiu","Eustațiu","Fabian","Felix","Filip","Fiodor","Flaviu","Florea","Florentin","Florian","Florin","Francisc","Frederic","Gabi","Gabriel","Gelu","George","Georgel","Georgian","Ghenadie","Gheorghe","Gheorghiță","Ghiță","Gică","Gicu","Giorgian","Grațian","Gregorian","Grigore","Haralamb","Haralambie","Horațiu","Horea","Horia","Iacob","Iancu","Ianis","Ieremia","Ilarie","Ilarion","Ilie","Inocențiu","Ioan","Ion","Ionel","Ionică","Ionuț","Iosif","Irinel","Iulian","Iuliu","Iurie","Iustin","Iustinian","Ivan","Jan","Jean","Jenel","Ladislau","Lascăr","Laurențiu","Laurian","Lazăr","Leonard","Leontin","Lică","Liviu","Lorin","Luca","Lucențiu","Lucian","Lucrețiu","Ludovic","Manole","Marcel","Marcu","Marian","Marin","Marius","Martin","Matei","Maxim","Maximilian","Mădălin","Mihai","Mihail","Mihnea","Mircea","Miron","Mitică","Mitruț","Mugur","Mugurel","Nae","Narcis","Nechifor","Nelu","Nichifor","Nicoară","Nicodim","Nicolae","Nicolaie","Nicu","Nicuță","Niculiță","Nicușor","Norbert","Norman","Octav","Octavian","Octaviu","Olimpian","Olimpiu","Oliviu","Ovidiu","Pamfil","Panait","Panagachie","Paul","Pavel","Pătru","Petre","Petrică","Petrișor","Petru","Petruț","Pompiliu","Radu","Rafael","Rareș","Raul","Răducu","Răzvan","Relu","Remus","Robert","Romeo","Romulus","Sabin","Sandu","Sava","Sebastian","Sergiu","Sever","Severin","Silvian","Silviu","Simi","Simion","Sinică","Sorin","Stan","Stancu","Stelian","Sandu","Șerban","Ștefan","Teodor","Teofil","Teohari","Theodor","Tiberiu","Timotei","Titus","Todor","Toma","Traian","Tudor","Valentin","Valeriu","Valter","Vasile","Vasilică","Veniamin","Vicențiu","Victor","Vincențiu","Viorel","Visarion","Vlad","Vladimir","Vlaicu","Voicu","Zamfir","Zeno"]})),f6=c((()=>{tj=["#{male_first_name} #{last_name}","#{male_first_name} #{last_name}","#{male_first_name} #{last_name}","#{male_first_name} #{last_name}","#{male_first_name} #{last_name}","#{male_first_name} #{last_name}","#{last_name} #{male_first_name}","#{last_name} #{male_first_name}","#{last_name} #{male_first_name}","#{last_name} #{male_first_name}","#{last_name} #{male_first_name}","#{last_name} #{male_first_name}","#{prefix} #{male_first_name} #{last_name}","#{prefix} #{male_first_name} #{last_name}","#{prefix} #{male_first_name} #{last_name}","#{male_first_name} #{last_name}, #{suffix}","#{prefix} #{male_first_name} #{last_name}, #{suffix}","#{female_first_name} #{last_name}","#{female_first_name} #{last_name}","#{female_first_name} #{last_name}","#{female_first_name} #{last_name}","#{female_first_name} #{last_name}","#{female_first_name} #{last_name}","#{last_name} #{female_first_name}","#{last_name} #{female_first_name}","#{last_name} #{female_first_name}","#{last_name} #{female_first_name}","#{last_name} #{female_first_name}","#{last_name} #{female_first_name}","#{prefix} #{female_first_name} #{last_name}","#{prefix} #{female_first_name} #{last_name}","#{prefix} #{female_first_name} #{last_name}"]})),v6=c((()=>{oj=["Dl","Dna","Dra"]})),g6=c((()=>{sj=["Jr.","Sr."]})),k6=c((()=>{h6(),p6(),m6(),f6(),v6(),g6(),lj={female_first_name:nj,last_name:ij,male_first_name:rj,name:tj,prefix:oj,suffix:sj}})),y6=c((()=>{uj=["021######","031######","0258######","0358######","0257######","0357######","0248######","0348######","0234######","0334######","0259######","0359######","0263######","0363######","0231######","0331######","0239######","0339######","0268######","0368######","0238######","0338######","0242######","0342######","0255######","0355######","0264######","0364######","0241######","0341######","0267######","0367######","0245######","0345######","0251######","0351######","0236######","0336######","0246######","0346######","0253######","0353######","0266######","0366######","0254######","0354######","0243######","0343######","0232######","0332######","0262######","0362######","0252######","0352######","0265######","0365######","0233######","0333######","0249######","0349######","0244######","0344######","0260######","0360######","0261######","0361######","0269######","0369######","0230######","0330######","0247######","0347######","0256######","0356######","0240######","0340######","0250######","0350######","0235######","0335######","0237######","0337######"]})),b6=c((()=>{y6(),cj={formats:uj}})),S6=c((()=>{i6(),t6(),l6(),d6(),k6(),b6(),dj={title:"Romanian",address:Ww,cell_phone:qw,date:$w,internet:aj,name:lj,phone_number:cj}})),A6=c((()=>{hj=["###"]})),M6=c((()=>{pj=["#{Address.city_name}"]})),T6=c((()=>{mj=["Москва","Владимир","Санкт-Петербург","Новосибирск","Екатеринбург","Нижний Новгород","Самара","Казань","Омск","Челябинск","Ростов-на-Дону","Уфа","Волгоград","Пермь","Красноярск","Воронеж","Саратов","Краснодар","Тольятти","Ижевск","Барнаул","Ульяновск","Тюмень","Иркутск","Владивосток","Ярославль","Хабаровск","Махачкала","Оренбург","Новокузнецк","Томск","Кемерово","Рязань","Астрахань","Пенза","Липецк","Тула","Киров","Чебоксары","Курск","Брянск","Магнитогорск","Иваново","Тверь","Ставрополь","Белгород","Сочи"]})),_6=c((()=>{fj=["Австралия","Австрия","Азербайджан","Албания","Алжир","Американское Самоа (не признана)","Ангилья","Ангола","Андорра","Антарктика (не признана)","Антигуа и Барбуда","Антильские Острова (не признана)","Аомынь (не признана)","Аргентина","Армения","Афганистан","Багамские Острова","Бангладеш","Барбадос","Бахрейн","Беларусь","Белиз","Бельгия","Бенин","Болгария","Боливия","Босния и Герцеговина","Ботсвана","Бразилия","Бруней","Буркина-Фасо","Бурунди","Бутан","Вануату","Ватикан","Великобритания","Венгрия","Венесуэла","Восточный Тимор","Вьетнам","Габон","Гаити","Гайана","Гамбия","Гана","Гваделупа (не признана)","Гватемала","Гвиана (не признана)","Гвинея","Гвинея-Бисау","Германия","Гондурас","Гренада","Греция","Грузия","Дания","Джибути","Доминика","Доминиканская Республика","Египет","Замбия","Зимбабве","Израиль","Индия","Индонезия","Иордания","Ирак","Иран","Ирландия","Исландия","Испания","Италия","Йемен","Кабо-Верде","Казахстан","Камбоджа","Камерун","Канада","Катар","Кения","Кипр","Кирибати","Китай","Колумбия","Коморские Острова","Конго","Демократическая Республика","Корея (Северная)","Корея (Южная)","Косово","Коста-Рика","Кот-д'Ивуар","Куба","Кувейт","Кука острова","Кыргызстан","Лаос","Латвия","Лесото","Либерия","Ливан","Ливия","Литва","Лихтенштейн","Люксембург","Маврикий","Мавритания","Мадагаскар","Македония","Малави","Малайзия","Мали","Мальдивы","Мальта","Маршалловы Острова","Мексика","Микронезия","Мозамбик","Молдова","Монако","Монголия","Марокко","Мьянма","Намибия","Науру","Непал","Нигер","Нигерия","Нидерланды","Никарагуа","Новая Зеландия","Норвегия","Объединенные Арабские Эмираты","Оман","Пакистан","Палау","Панама","Папуа — Новая Гвинея","Парагвай","Перу","Польша","Португалия","Республика Конго","Россия","Руанда","Румыния","Сальвадор","Самоа","Сан-Марино","Сан-Томе и Принсипи","Саудовская Аравия","Свазиленд","Сейшельские острова","Сенегал","Сент-Винсент и Гренадины","Сент-Киттс и Невис","Сент-Люсия","Сербия","Сингапур","Сирия","Словакия","Словения","Соединенные Штаты Америки","Соломоновы Острова","Сомали","Судан","Суринам","Сьерра-Леоне","Таджикистан","Таиланд","Тайвань (не признана)","Тамил-Илам (не признана)","Танзания","Тёркс и Кайкос (не признана)","Того","Токелау (не признана)","Тонга","Тринидад и Тобаго","Тувалу","Тунис","Турецкая Республика Северного Кипра (не признана)","Туркменистан","Турция","Уганда","Узбекистан","Украина","Уругвай","Фарерские Острова (не признана)","Фиджи","Филиппины","Финляндия","Франция","Французская Полинезия (не признана)","Хорватия","Центральноафриканская Республика","Чад","Черногория","Чехия","Чили","Швейцария","Швеция","Шри-Ланка","Эквадор","Экваториальная Гвинея","Эритрея","Эстония","Эфиопия","Южно-Африканская Республика","Ямайка","Япония"]})),w6=c((()=>{vj=["Россия"]})),j6=c((()=>{gj=["######"]})),E6=c((()=>{kj=["кв. ###"]})),N6=c((()=>{yj=["Республика Адыгея","Республика Башкортостан","Республика Бурятия","Республика Алтай Республика Дагестан","Республика Ингушетия","Кабардино-Балкарская Республика","Республика Калмыкия","Республика Карачаево-Черкессия","Республика Карелия","Республика Коми","Республика Марий Эл","Республика Мордовия","Республика Саха (Якутия)","Республика Северная Осетия-Алания","Республика Татарстан","Республика Тыва","Удмуртская Республика","Республика Хакасия","Чувашская Республика","Алтайский край","Краснодарский край","Красноярский край","Приморский край","Ставропольский край","Хабаровский край","Амурская область","Архангельская область","Астраханская область","Белгородская область","Брянская область","Владимирская область","Волгоградская область","Вологодская область","Воронежская область","Ивановская область","Иркутская область","Калиниградская область","Калужская область","Камчатская область","Кемеровская область","Кировская область","Костромская область","Курганская область","Курская область","Ленинградская область","Липецкая область","Магаданская область","Московская область","Мурманская область","Нижегородская область","Новгородская область","Новосибирская область","Омская область","Оренбургская область","Орловская область","Пензенская область","Пермская область","Псковская область","Ростовская область","Рязанская область","Самарская область","Саратовская область","Сахалинская область","Свердловская область","Смоленская область","Тамбовская область","Тверская область","Томская область","Тульская область","Тюменская область","Ульяновская область","Челябинская область","Читинская область","Ярославская область","Еврейская автономная область","Агинский Бурятский авт. округ","Коми-Пермяцкий автономный округ","Корякский автономный округ","Ненецкий автономный округ","Таймырский (Долгано-Ненецкий) автономный округ","Усть-Ордынский Бурятский автономный округ","Ханты-Мансийский автономный округ","Чукотский автономный округ","Эвенкийский автономный округ","Ямало-Ненецкий автономный округ","Чеченская Республика"]})),B6=c((()=>{bj=["#{street_name}, #{building_number}"]})),P6=c((()=>{Sj=["#{street_suffix} #{Address.street_title}","#{Address.street_title} #{street_suffix}"]})),L6=c((()=>{Aj=["ул.","улица","проспект","пр.","площадь","пл."]})),D6=c((()=>{Mj=["Советская","Молодежная","Центральная","Школьная","Новая","Садовая","Лесная","Набережная","Ленина","Мира","Октябрьская","Зеленая","Комсомольская","Заречная","Первомайская","Гагарина","Полевая","Луговая","Пионерская","Кирова","Юбилейная","Северная","Пролетарская","Степная","Пушкина","Калинина","Южная","Колхозная","Рабочая","Солнечная","Железнодорожная","Восточная","Заводская","Чапаева","Нагорная","Строителей","Береговая","Победы","Горького","Кооперативная","Красноармейская","Совхозная","Речная","Школьный","Спортивная","Озерная","Строительная","Парковая","Чкалова","Мичурина","Подгорная","Дружбы","Почтовая","Партизанская","Вокзальная","Лермонтова","Свободы","Дорожная","Дачная","Маяковского","Западная","Фрунзе","Дзержинского","Московская","Свердлова","Некрасова","Гоголя","Красная","Трудовая","Шоссейная","Чехова","Коммунистическая","Труда","Комарова","Матросова","Островского","Сосновая","Клубная","Куйбышева","Крупской","Березовая","Карла Маркса","8 Марта","Больничная","Садовый","Интернациональная","Суворова","Цветочная","Трактовая","Ломоносова","Горная","Космонавтов","Энергетиков","Шевченко","Весенняя","Механизаторов","Коммунальная","Лесной","40 лет Победы","Майская"]})),x6=c((()=>{A6(),M6(),T6(),_6(),w6(),j6(),E6(),N6(),B6(),P6(),L6(),D6(),Tj={building_number:hj,city:pj,city_name:mj,country:fj,default_country:vj,postcode:gj,secondary_address:kj,state:yj,street_address:bj,street_name:Sj,street_suffix:Aj,street_title:Mj}})),C6=c((()=>{_j=["красный","зеленый","синий","желтый","багровый","мятный","зеленовато-голубой","белый","черный","оранжевый","розовый","серый","красно-коричневый","фиолетовый","бирюзовый","желто-коричневый","небесно голубой","оранжево-розовый","темно-фиолетовый","орхидный","оливковый","пурпурный","лимонный","кремовый","сине-фиолетовый","золотой","красно-пурпурный","голубой","лазурный","лиловый","серебряный"]})),K6=c((()=>{wj=["Книги","Фильмы","музыка","игры","Электроника","компьютеры","Дом","садинструмент","Бакалея","здоровье","красота","Игрушки","детское","для малышей","Одежда","обувь","украшения","Спорт","туризм","Автомобильное","Галантерея","Меха","Пряжа","промышленное"]})),R6=c((()=>{jj={adjective:["Маленький","Эргономичный","Грубый","Интеллектуальный","Великолепный","Невероятный","Свободный","Большой","Фантастический","Практичный","Лоснящийся","Потрясающий"],material:["Стальной","Деревянный","Бетонный","Пластиковый","Хлопковый","Гранитный","Кожанный","Неодимовый","Меховой","Натуральный","Резиновый"],product:["Стул","Автомобиль","Компьютер","Берет","Кулон","Стол","Свитер","Ремень","Ножницы","Носки","Майка","Кепка","Куртка","Плащ","Сабо","Шарф","Клатч","Кошелек","Портмоне","Ботинок"]}})),z6=c((()=>{C6(),K6(),R6(),Ej={color:_j,department:wj,product_name:jj}})),O6=c((()=>{Nj=["#{prefix} #{Name.female_first_name}","#{prefix} #{Name.male_first_name}","#{prefix} #{Name.male_last_name}","#{prefix} #{suffix}#{suffix}","#{prefix} #{suffix}#{suffix}#{suffix}","#{prefix} #{Address.city_name}#{suffix}","#{prefix} #{Address.city_name}#{suffix}#{suffix}","#{prefix} #{Address.city_name}#{suffix}#{suffix}#{suffix}"]})),I6=c((()=>{Bj=["ИП","ООО","ЗАО","ОАО","ПАО","НКО","ТСЖ","ОП"]})),V6=c((()=>{Pj=["Снаб","Торг","Пром","Трейд","Сбыт"]})),G6=c((()=>{O6(),I6(),V6(),Lj={name:Nj,prefix:Bj,suffix:Pj}})),H6=c((()=>{Dj={wide:["январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь"],wide_context:["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"],abbr:["янв.","февр.","март","апр.","май","июнь","июль","авг.","сент.","окт.","нояб.","дек."],abbr_context:["янв.","февр.","марта","апр.","мая","июня","июля","авг.","сент.","окт.","нояб.","дек."]}})),F6=c((()=>{xj={wide:["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"],wide_context:["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],abbr:["Вс","Пн","Вт","Ср","Чт","Пт","Сб"],abbr_context:["вс","пн","вт","ср","чт","пт","сб"]}})),J6=c((()=>{H6(),F6(),Cj={month:Dj,weekday:xj}})),U6=c((()=>{Kj=["БИОС","Гб","ИИ","ОС","ОЗУ","ПО","СУБД","ХЗ","ЭВМ","HTTP","SDD","CSS","SSL","AGP","FTP","PCI","ADP","RSS","XML","EXE","COM","НМЖД","ПЗУ","SMTP","SMS","USB","PNG","SAS","JSON","XSS"]})),W6=c((()=>{Rj=["вспомогательный","основной","внутренний","цифровой","свободно-распростроняемый","виртуальный","кросс-платформенный","излишний","онлайн","сенсорный","многобайтный","беспроводной","1080-пиксельный","нейронный","оптический","твердотельный","мобильный"]})),Z6=c((()=>{zj=["резервное копирование","обход","архивирование","взлом","шифрование","переопределение","сжатие","скачивание","копирование","навигация","индексирование","соединение","генерация","определение количества","вычисление","синтез","передача","программирование","разбор"]})),q6=c((()=>{Oj=["драйвер","протокол","ограничитель","интерфейс","микрочип","код","парсер","сокет","кортеж","порт","ключ","массив","интерфейс","объект","сенсор","брандмауэр","винчестер","пиксель","механизм сигнализации","поглотитель","монитор","продукт","передатчик","блок разведения","канал","конденсатор","оператор"]})),Q6=c((()=>{Ij=["Чтобы {{verb}} {{noun}}, мы можем получить {{abbreviation}} {{noun}} через {{adjective}} {{abbreviation}} {{noun}}!","Необходимо {{verb}} {{adjective}} {{abbreviation}} {{noun}}!","Попробуйте {{verb}} {{abbreviation}} {{noun}}, возможно это позволит {{verb}} {{adjective}} {{noun}}!","Вы не можете {{verb}} {{noun}}, требуется {{ingverb}} или {{ingverb}}!","Используйте {{adjective}} {{abbreviation}} {{noun}}, для того чтобы {{verb}} {{adjective}} {{noun}}!","{{abbreviation}} {{noun}} недоступен, требуется {{verb}} {{adjective}} {{noun}}, чтобы мы могли {{verb}} {{abbreviation}} {{noun}}!","{{ingverb}} не работает, попробуйте {{verb}} {{adjective}} {{abbreviation}} {{noun}}!","Я планирую {{verb}} {{adjective}} {{abbreviation}} {{noun}}, это должно помочь {{verb}} {{abbreviation}} {{noun}}!"]})),Y6=c((()=>{Vj=["сохранить","обойти","взломать","переопределить","сжать","зашифровать","импортировать","экспортировать","копировать","навигировать","индексировать","соединить","генерировать","распарсить","квантифицировать","вычислить","синтезировать","ввести","передать","запрограммировать","перезагрузить","разобрать"]})),$6=c((()=>{U6(),W6(),Z6(),q6(),Q6(),Y6(),Gj={abbreviation:Kj,adjective:Rj,ingverb:zj,noun:Oj,phrase:Ij,verb:Vj}})),X6=c((()=>{Hj=["com","ru","info","рф","net","org"]})),e5=c((()=>{Fj=["yandex.ru","ya.ru","mail.ru","gmail.com","yahoo.com","hotmail.com"]})),a5=c((()=>{X6(),e5(),Jj={domain_suffix:Hj,free_email:Fj}})),n5=c((()=>{Uj=["а","административных","активизации","активности","активом","актуальность","анализа","базы","богатый","в","важную","важные","влечёт","внедрения","воздействия","всего","выбранный","вызывает","выполнять","высокотехнологичная","высшего","гражданского","дальнейшее","дальнейших","демократической","деятельности","для","другой","же","за","забывать","зависит","задания","задач","задача","занимаемых","значение","значимость","значительной","и","играет","идейные","изменений","инновационный","интересный","информационно-пропогандистское","кадров","кадровой","качества","качественно","количественный","консультация","концепция","кругу","курс","массового","материально-технической","место","мира","модели","модель","модернизации","на","намеченных","нами","направлений","напрямую","нас","настолько","насущным","национальный","начало","нашей","не","новая","новых","обеспечение","обеспечивает","образом","обуславливает","обучения","общества","общественной","обществом","однако","определения","опыт","организации","организационной","особенности","от","отметить","отношении","оценить","очевидна","плановых","по","повседневная","повседневной","повышение","повышению","подготовке","позволяет","позиции","показывает","понимание","порядка","последовательного","поставленных","постоянное","постоянный","потребностям","поэтапного","правительством","практика","предложений","предпосылки","представляет","прежде","принимаемых","принципов","проблем","проверки","прогресса","прогрессивного","проект","профессионального","процесс","путь","работы","равным","развития","различных","разнообразный","разработке","рамки","реализация","ресурсосберегающих","роль","рост","с","систему","системы","следует","сложившаяся","собой","современного","создаёт","создание","сознания","сомнений","соображения","соответствующей","соответствующих","социально-ориентированный","социально-экономическое","специалистов","способствует","степени","стороны","структура","структуры","существующий","сущности","сфера","также","таким","технологий","требует","укрепления","управление","уровня","условий","уточнения","участия","участниками","финансовых","форм","формировании","формированию","формирования","целесообразности","что","шагов","широким","широкому","экономической","эксперимент","этих"]})),i5=c((()=>{n5(),Wj={words:Uj}})),r5=c((()=>{Zj=["Анна","Алёна","Алевтина","Александра","Алина","Алла","Анастасия","Ангелина","Анжела","Анжелика","Антонида","Антонина","Анфиса","Арина","Валентина","Валерия","Варвара","Василиса","Вера","Вероника","Виктория","Галина","Дарья","Евгения","Екатерина","Елена","Елизавета","Жанна","Зинаида","Зоя","Ирина","Кира","Клавдия","Ксения","Лариса","Лидия","Любовь","Людмила","Маргарита","Марина","Мария","Надежда","Наталья","Нина","Оксана","Ольга","Раиса","Регина","Римма","Светлана","София","Таисия","Тамара","Татьяна","Ульяна","Юлия"]})),t5=c((()=>{qj=["Смирнова","Иванова","Кузнецова","Попова","Соколова","Лебедева","Козлова","Новикова","Морозова","Петрова","Волкова","Соловьева","Васильева","Зайцева","Павлова","Семенова","Голубева","Виноградова","Богданова","Воробьева","Федорова","Михайлова","Беляева","Тарасова","Белова","Комарова","Орлова","Киселева","Макарова","Андреева","Ковалева","Ильина","Гусева","Титова","Кузьмина","Кудрявцева","Баранова","Куликова","Алексеева","Степанова","Яковлева","Сорокина","Сергеева","Романова","Захарова","Борисова","Королева","Герасимова","Пономарева","Григорьева","Лазарева","Медведева","Ершова","Никитина","Соболева","Рябова","Полякова","Цветкова","Данилова","Жукова","Фролова","Журавлева","Николаева","Крылова","Максимова","Сидорова","Осипова","Белоусова","Федотова","Дорофеева","Егорова","Матвеева","Боброва","Дмитриева","Калинина","Анисимова","Петухова","Антонова","Тимофеева","Никифорова","Веселова","Филиппова","Маркова","Большакова","Суханова","Миронова","Ширяева","Александрова","Коновалова","Шестакова","Казакова","Ефимова","Денисова","Громова","Фомина","Давыдова","Мельникова","Щербакова","Блинова","Колесникова","Карпова","Афанасьева","Власова","Маслова","Исакова","Тихонова","Аксенова","Гаврилова","Родионова","Котова","Горбунова","Кудряшова","Быкова","Зуева","Третьякова","Савельева","Панова","Рыбакова","Суворова","Абрамова","Воронова","Мухина","Архипова","Трофимова","Мартынова","Емельянова","Горшкова","Чернова","Овчинникова","Селезнева","Панфилова","Копылова","Михеева","Галкина","Назарова","Лобанова","Лукина","Белякова","Потапова","Некрасова","Хохлова","Жданова","Наумова","Шилова","Воронцова","Ермакова","Дроздова","Игнатьева","Савина","Логинова","Сафонова","Капустина","Кириллова","Моисеева","Елисеева","Кошелева","Костина","Горбачева","Орехова","Ефремова","Исаева","Евдокимова","Калашникова","Кабанова","Носкова","Юдина","Кулагина","Лапина","Прохорова","Нестерова","Харитонова","Агафонова","Муравьева","Ларионова","Федосеева","Зимина","Пахомова","Шубина","Игнатова","Филатова","Крюкова","Рогова","Кулакова","Терентьева","Молчанова","Владимирова","Артемьева","Гурьева","Зиновьева","Гришина","Кононова","Дементьева","Ситникова","Симонова","Мишина","Фадеева","Комиссарова","Мамонтова","Носова","Гуляева","Шарова","Устинова","Вишнякова","Евсеева","Лаврентьева","Брагина","Константинова","Корнилова","Авдеева","Зыкова","Бирюкова","Шарапова","Никонова","Щукина","Дьячкова","Одинцова","Сазонова","Якушева","Красильникова","Гордеева","Самойлова","Князева","Беспалова","Уварова","Шашкова","Бобылева","Доронина","Белозерова","Рожкова","Самсонова","Мясникова","Лихачева","Бурова","Сысоева","Фомичева","Русакова","Стрелкова","Гущина","Тетерина","Колобова","Субботина","Фокина","Блохина","Селиверстова","Пестова","Кондратьева","Силина","Меркушева","Лыткина","Турова"]})),o5=c((()=>{Qj=["Александровна","Алексеевна","Альбертовна","Анатольевна","Андреевна","Антоновна","Аркадьевна","Арсеньевна","Артёмовна","Борисовна","Вадимовна","Валентиновна","Валерьевна","Васильевна","Викторовна","Витальевна","Владимировна","Владиславовна","Вячеславовна","Геннадьевна","Георгиевна","Германовна","Григорьевна","Данииловна","Денисовна","Дмитриевна","Евгеньевна","Егоровна","Ивановна","Игнатьевна","Игоревна","Ильинична","Константиновна","Лаврентьевна","Леонидовна","Макаровна","Максимовна","Матвеевна","Михайловна","Никитична","Николаевна","Олеговна","Романовна","Семёновна","Сергеевна","Станиславовна","Степановна","Фёдоровна","Эдуардовна","Юрьевна","Ярославовна"]})),s5=c((()=>{Yj=["Александр","Алексей","Альберт","Анатолий","Андрей","Антон","Аркадий","Арсений","Артём","Борис","Вадим","Валентин","Валерий","Василий","Виктор","Виталий","Владимир","Владислав","Вячеслав","Геннадий","Георгий","Герман","Григорий","Даниил","Денис","Дмитрий","Евгений","Егор","Иван","Игнатий","Игорь","Илья","Константин","Лаврентий","Леонид","Лука","Макар","Максим","Матвей","Михаил","Никита","Николай","Олег","Роман","Семён","Сергей","Станислав","Степан","Фёдор","Эдуард","Юрий","Ярослав"]})),l5=c((()=>{$j=["Смирнов","Иванов","Кузнецов","Попов","Соколов","Лебедев","Козлов","Новиков","Морозов","Петров","Волков","Соловьев","Васильев","Зайцев","Павлов","Семенов","Голубев","Виноградов","Богданов","Воробьев","Федоров","Михайлов","Беляев","Тарасов","Белов","Комаров","Орлов","Киселев","Макаров","Андреев","Ковалев","Ильин","Гусев","Титов","Кузьмин","Кудрявцев","Баранов","Куликов","Алексеев","Степанов","Яковлев","Сорокин","Сергеев","Романов","Захаров","Борисов","Королев","Герасимов","Пономарев","Григорьев","Лазарев","Медведев","Ершов","Никитин","Соболев","Рябов","Поляков","Цветков","Данилов","Жуков","Фролов","Журавлев","Николаев","Крылов","Максимов","Сидоров","Осипов","Белоусов","Федотов","Дорофеев","Егоров","Матвеев","Бобров","Дмитриев","Калинин","Анисимов","Петухов","Антонов","Тимофеев","Никифоров","Веселов","Филиппов","Марков","Большаков","Суханов","Миронов","Ширяев","Александров","Коновалов","Шестаков","Казаков","Ефимов","Денисов","Громов","Фомин","Давыдов","Мельников","Щербаков","Блинов","Колесников","Карпов","Афанасьев","Власов","Маслов","Исаков","Тихонов","Аксенов","Гаврилов","Родионов","Котов","Горбунов","Кудряшов","Быков","Зуев","Третьяков","Савельев","Панов","Рыбаков","Суворов","Абрамов","Воронов","Мухин","Архипов","Трофимов","Мартынов","Емельянов","Горшков","Чернов","Овчинников","Селезнев","Панфилов","Копылов","Михеев","Галкин","Назаров","Лобанов","Лукин","Беляков","Потапов","Некрасов","Хохлов","Жданов","Наумов","Шилов","Воронцов","Ермаков","Дроздов","Игнатьев","Савин","Логинов","Сафонов","Капустин","Кириллов","Моисеев","Елисеев","Кошелев","Костин","Горбачев","Орехов","Ефремов","Исаев","Евдокимов","Калашников","Кабанов","Носков","Юдин","Кулагин","Лапин","Прохоров","Нестеров","Харитонов","Агафонов","Муравьев","Ларионов","Федосеев","Зимин","Пахомов","Шубин","Игнатов","Филатов","Крюков","Рогов","Кулаков","Терентьев","Молчанов","Владимиров","Артемьев","Гурьев","Зиновьев","Гришин","Кононов","Дементьев","Ситников","Симонов","Мишин","Фадеев","Комиссаров","Мамонтов","Носов","Гуляев","Шаров","Устинов","Вишняков","Евсеев","Лаврентьев","Брагин","Константинов","Корнилов","Авдеев","Зыков","Бирюков","Шарапов","Никонов","Щукин","Дьячков","Одинцов","Сазонов","Якушев","Красильников","Гордеев","Самойлов","Князев","Беспалов","Уваров","Шашков","Бобылев","Доронин","Белозеров","Рожков","Самсонов","Мясников","Лихачев","Буров","Сысоев","Фомичев","Русаков","Стрелков","Гущин","Тетерин","Колобов","Субботин","Фокин","Блохин","Селиверстов","Пестов","Кондратьев","Силин","Меркушев","Лыткин","Туров"]})),u5=c((()=>{Xj=["Александрович","Алексеевич","Альбертович","Анатольевич","Андреевич","Антонович","Аркадьевич","Арсеньевич","Артёмович","Борисович","Вадимович","Валентинович","Валерьевич","Васильевич","Викторович","Витальевич","Владимирович","Владиславович","Вячеславович","Геннадьевич","Георгиевич","Германович","Григорьевич","Даниилович","Денисович","Дмитриевич","Евгеньевич","Егорович","Иванович","Игнатьевич","Игоревич","Ильич","Константинович","Лаврентьевич","Леонидович","Лукич","Макарович","Максимович","Матвеевич","Михайлович","Никитич","Николаевич","Олегович","Романович","Семёнович","Сергеевич","Станиславович","Степанович","Фёдорович","Эдуардович","Юрьевич","Ярославович"]})),c5=c((()=>{eE=["#{male_first_name} #{male_last_name}","#{male_last_name} #{male_first_name}","#{male_first_name} #{male_middle_name} #{male_last_name}","#{male_last_name} #{male_first_name} #{male_middle_name}","#{female_first_name} #{female_last_name}","#{female_last_name} #{female_first_name}","#{female_first_name} #{female_middle_name} #{female_last_name}","#{female_last_name} #{female_first_name} #{female_middle_name}"]})),d5=c((()=>{aE=[]})),h5=c((()=>{nE=[]})),p5=c((()=>{iE={descriptor:["Ведущий","Генеральный","Главный","Глобальный","Международный","Национальный","Областной","Районный","Региональный","Центральный"],level:["интеграционный","логистический","маркетинговый","оптимизационный","страховой","функциональный","коммуникационный","операционный"],job:["агент","администратор","аналитик","архитектор","дизайнер","инженер","консультант","координатор","менеджер","планировщик","помощник","разработчик","руководитель","сотрудник","специалист","техник"]}})),m5=c((()=>{r5(),t5(),o5(),s5(),l5(),u5(),c5(),d5(),h5(),p5(),rE={female_first_name:Zj,female_last_name:qj,female_middle_name:Qj,male_first_name:Yj,male_last_name:$j,male_middle_name:Xj,name:eE,prefix:aE,suffix:nE,title:iE}})),f5=c((()=>{tE=["(9##)###-##-##"]})),v5=c((()=>{f5(),oE={formats:tE}})),g5=c((()=>{x6(),z6(),G6(),J6(),$6(),a5(),i5(),m5(),v5(),sE={title:"Russian",separator:" и ",address:Tj,commerce:Ej,company:Lj,date:Cj,hacker:Gj,internet:Jj,lorem:Wj,name:rE,phone_number:oE}})),k5=c((()=>{lE=["#","##","###"]})),y5=c((()=>{uE=["#{city_name}"]})),b5=c((()=>{cE=["Bánovce nad Bebravou","Banská Bystrica","Banská Štiavnica","Bardejov","Bratislava I","Bratislava II","Bratislava III","Bratislava IV","Bratislava V","Brezno","Bytča","Čadca","Detva","Dolný Kubín","Dunajská Streda","Galanta","Gelnica","Hlohovec","Humenné","Ilava","Kežmarok","Komárno","Košice I","Košice II","Košice III","Košice IV","Košice-okolie","Krupina","Kysucké Nové Mesto","Levice","Levoča","Liptovský Mikuláš","Lučenec","Malacky","Martin","Medzilaborce","Michalovce","Myjava","Námestovo","Nitra","Nové Mesto n.Váhom","Nové Zámky","Partizánske","Pezinok","Piešťany","Poltár","Poprad","Považská Bystrica","Prešov","Prievidza","Púchov","Revúca","Rimavská Sobota","Rožňava","Ružomberok","Sabinov","Šaľa","Senec","Senica","Skalica","Snina","Sobrance","Spišská Nová Ves","Stará Ľubovňa","Stropkov","Svidník","Topoľčany","Trebišov","Trenčín","Trnava","Turčianske Teplice","Tvrdošín","Veľký Krtíš","Vranov nad Topľou","Žarnovica","Žiar nad Hronom","Žilina","Zlaté Moravce","Zvolen"]})),S5=c((()=>{dE=["North","East","West","South","New","Lake","Port"]})),A5=c((()=>{hE=["town","ton","land","ville","berg","burgh","borough","bury","view","port","mouth","stad","furt","chester","mouth","fort","haven","side","shire"]})),M5=c((()=>{pE=["Afganistan","Afgánsky islamský štát","Albánsko","Albánska republika","Alžírsko","Alžírska demokratická ľudová republika","Andorra","Andorrské kniežatsvo","Angola","Angolská republika","Antigua a Barbuda","Antigua a Barbuda","Argentína","Argentínska republika","Arménsko","Arménska republika","Austrália","Austrálsky zväz","Azerbajdžan","Azerbajdžanská republika","Bahamy","Bahamské spoločenstvo","Bahrajn","Bahrajnské kráľovstvo","Bangladéš","Bangladéšska ľudová republika","Barbados","Barbados","Belgicko","Belgické kráľovstvo","Belize","Belize","Benin","Beninská republika","Bhután","Bhutánske kráľovstvo","Bielorusko","Bieloruská republika","Bolívia","Bolívijská republika","Bosna a Hercegovina","Republika Bosny a Hercegoviny","Botswana","Botswanská republika","Brazília","Brazílska federatívna republika","Brunej","Brunejský sultanát","Bulharsko","Bulharská republika","Burkina Faso","Burkina Faso","Burundi","Burundská republika","Cyprus","Cyperská republika","Čad","Republika Čad","Česko","Česká republika","Čína","Čínska ľudová republika","Dánsko","Dánsko kráľovstvo","Dominika","Spoločenstvo Dominika","Dominikánska republika","Dominikánska republika","Džibutsko","Džibutská republika","Egypt","Egyptská arabská republika","Ekvádor","Ekvádorská republika","Eritrea","Eritrejský štát","Estónsko","Estónska republika","Etiópia","Etiópska federatívna demokratická republika","Fidži","Republika ostrovy Fidži","Filipíny","Filipínska republika","Fínsko","Fínska republika","Francúzsko","Francúzska republika","Gabon","Gabonská republika","Gambia","Gambijská republika","Ghana","Ghanská republika","Grécko","Helénska republika","Grenada","Grenada","Gruzínsko","Gruzínsko","Guatemala","Guatemalská republika","Guinea","Guinejská republika","Guinea-Bissau","Republika Guinea-Bissau","Guayana","Guayanská republika","Haiti","Republika Haiti","Holandsko","Holandské kráľovstvo","Honduras","Honduraská republika","Chile","Čílska republika","Chorvátsko","Chorvátska republika","India","Indická republika","Indonézia","Indonézska republika","Irak","Iracká republika","Irán","Iránska islamská republika","Island","Islandská republika","Izrael","Štát Izrael","Írsko","Írska republika","Jamajka","Jamajka","Japonsko","Japonsko","Jemen","Jemenská republika","Jordánsko","Jordánske hášimovské kráľovstvo","Južná Afrika","Juhoafrická republika","Kambodža","Kambodžské kráľovstvo","Kamerun","Kamerunská republika","Kanada","Kanada","Kapverdy","Kapverdská republika","Katar","Štát Katar","Kazachstan","Kazašská republika","Keňa","Kenská republika","Kirgizsko","Kirgizská republika","Kiribati","Kiribatská republika","Kolumbia","Kolumbijská republika","Komory","Komorská únia","Kongo","Konžská demokratická republika",'Kongo ("Brazzaville")',"Konžská republika",'Kórea ("Južná")',"Kórejská republika",'Kórea ("Severná")',"Kórejská ľudovodemokratická republika","Kostarika","Kostarická republika","Kuba","Kubánska republika","Kuvajt","Kuvajtský štát","Laos","Laoská ľudovodemokratická republika","Lesotho","Lesothské kráľovstvo","Libanon","Libanonská republika","Libéria","Libérijská republika","Líbya","Líbyjská arabská ľudová socialistická džamáhírija","Lichtenštajnsko","Lichtenštajnské kniežatstvo","Litva","Litovská republika","Lotyšsko","Lotyšská republika","Luxembursko","Luxemburské veľkovojvodstvo","Macedónsko","Macedónska republika","Madagaskar","Madagaskarská republika","Maďarsko","Maďarská republika","Malajzia","Malajzia","Malawi","Malawijská republika","Maldivy","Maldivská republika","Mali","Malijská republika","Malta","Malta","Maroko","Marocké kráľovstvo","Marshallove ostrovy","Republika Marshallových ostrovy","Mauritánia","Mauritánska islamská republika","Maurícius","Maurícijská republika","Mexiko","Spojené štáty mexické","Mikronézia","Mikronézske federatívne štáty","Mjanmarsko","Mjanmarský zväz","Moldavsko","Moldavská republika","Monako","Monacké kniežatstvo","Mongolsko","Mongolsko","Mozambik","Mozambická republika","Namíbia","Namíbijská republika","Nauru","Naurská republika","Nemecko","Nemecká spolková republika","Nepál","Nepálske kráľovstvo","Niger","Nigerská republika","Nigéria","Nigérijská federatívna republika","Nikaragua","Nikaragujská republika","Nový Zéland","Nový Zéland","Nórsko","Nórske kráľovstvo","Omán","Ománsky sultanát","Pakistan","Pakistanská islamská republika","Palau","Palauská republika","Panama","Panamská republika","Papua-Nová Guinea","Nezávislý štát Papua-Nová Guinea","Paraguaj","Paraguajská republika","Peru","Peruánska republika","Pobrežie Slonoviny","Republika Pobrežie Slonoviny","Poľsko","Poľská republika","Portugalsko","Portugalská republika","Rakúsko","Rakúska republika","Rovníková Guinea","Republika Rovníková Guinea","Rumunsko","Rumunsko","Rusko","Ruská federácia","Rwanda","Rwandská republika","Salvádor","Salvádorská republika","Samoa","Nezávislý štát Samoa","San Maríno","Sanmarínska republika","Saudská Arábia","Kráľovstvo Saudskej Arábie","Senegal","Senegalská republika","Seychely","Seychelská republika","Sierra Leone","Republika Sierra Leone","Singapur","Singapurska republika","Slovensko","Slovenská republika","Slovinsko","Slovinská republika","Somálsko","Somálska demokratická republika","Spojené arabské emiráty","Spojené arabské emiráty","Spojené štáty americké","Spojené štáty americké","Srbsko a Čierna Hora","Srbsko a Čierna Hora","Srí Lanka","Demokratická socialistická republika Srí Lanka","Stredoafrická republika","Stredoafrická republika","Sudán","Sudánska republika","Surinam","Surinamská republika","Svazijsko","Svazijské kráľovstvo","Svätá Lucia","Svätá Lucia","Svätý Krištof a Nevis","Federácia Svätý Krištof a Nevis","Sv. Tomáš a Princov Ostrov","Demokratická republika Svätý Tomáš a Princov Ostrov","Sv. Vincent a Grenadíny","Svätý Vincent a Grenadíny","Sýria","Sýrska arabská republika","Šalamúnove ostrovy","Šalamúnove ostrovy","Španielsko","Španielske kráľovstvo","Švajčiarsko","Švajčiarska konfederácia","Švédsko","Švédske kráľovstvo","Tadžikistan","Tadžická republika","Taliansko","Talianska republika","Tanzánia","Tanzánijská zjednotená republika","Thajsko","Thajské kráľovstvo","Togo","Tožská republika","Tonga","Tonžské kráľovstvo","Trinidad a Tobago","Republika Trinidad a Tobago","Tunisko","Tuniská republika","Turecko","Turecká republika","Turkménsko","Turkménsko","Tuvalu","Tuvalu","Uganda","Ugandská republika","Ukrajina","Uruguaj","Uruguajská východná republika","Uzbekistan","Vanuatu","Vanuatská republika","Vatikán","Svätá Stolica","Veľká Británia","Spojené kráľovstvo Veľkej Británie a Severného Írska","Venezuela","Venezuelská bolívarovská republika","Vietnam","Vietnamská socialistická republika","Východný Timor","Demokratická republika Východný Timor","Zambia","Zambijská republika","Zimbabwe","Zimbabwianska republika"]})),T5=c((()=>{mE=["Slovensko"]})),_5=c((()=>{fE=["#####","### ##","## ###"]})),w5=c((()=>{vE=["Apt. ###","Suite ###"]})),j5=c((()=>{gE=[]})),E5=c((()=>{kE=[]})),N5=c((()=>{yE=["Adámiho","Ahoj","Albína Brunovského","Albrechtova","Alejová","Alešova","Alibernetová","Alžbetínska","Alžbety Gwerkovej","Ambroseho","Ambrušova","Americká","Americké námestie","Americké námestie","Andreja Mráza","Andreja Plávku","Andrusovova","Anenská","Anenská","Antolská","Astronomická","Astrová","Azalková","Azovská","Babuškova","Bachova","Bajkalská","Bajkalská","Bajkalská","Bajkalská","Bajkalská","Bajkalská","Bajzova","Bancíkovej","Banícka","Baníkova","Banskobystrická","Banšelova","Bardejovská","Bartókova","Bartoňova","Bartoškova","Baštová","Bazová","Bažantia","Beblavého","Beckovská","Bedľová","Belániková","Belehradská","Belinského","Belopotockého","Beňadická","Bencúrova","Benediktiho","Beniakova","Bernolákova","Beskydská","Betliarska","Bezručova","Biela","Bielkova","Björnsonova","Blagoevova","Blatnická","Blumentálska","Blyskáčová","Bočná","Bohrova","Bohúňova","Bojnická","Borodáčova","Borská","Bosákova","Botanická","Bottova","Boženy Němcovej","Bôrik","Bradáčova","Bradlianska","Brančská","Bratská","Brestová","Brezovská","Briežky","Brnianska","Brodná","Brodská","Broskyňová","Břeclavská","Budatínska","Budatínska","Budatínska","Búdkova  cesta","Budovateľská","Budyšínska","Budyšínska","Buková","Bukureštská","Bulharská","Bulíkova","Bystrého","Bzovícka","Cablkova","Cesta na Červený most","Cesta na Červený most","Cesta na Senec","Cikkerova","Cintorínska","Cintulova","Cukrová","Cyrilova","Čajakova","Čajkovského","Čaklovská","Čalovská","Čapajevova","Čapkova","Čárskeho","Čavojského","Čečinová","Čelakovského","Čerešňová","Černyševského","Červeňova","Česká","Československých par","Čipkárska","Čmelíkova","Čmeľovec","Čulenova","Daliborovo námestie","Dankovského","Dargovská","Ďatelinová","Daxnerovo námestie","Devínska cesta","Dlhé diely I.","Dlhé diely II.","Dlhé diely III.","Dobrovičova","Dobrovičova","Dobrovského","Dobšinského","Dohnalova","Dohnányho","Doležalova","Dolná","Dolnozemská cesta","Domkárska","Domové role","Donnerova","Donovalova","Dostojevského rad","Dr. Vladimíra Clemen","Drevená","Drieňová","Drieňová","Drieňová","Drotárska cesta","Drotárska cesta","Drotárska cesta","Družicová","Družstevná","Dubnická","Dubová","Dúbravská cesta","Dudova","Dulovo námestie","Dulovo námestie","Dunajská","Dvořákovo nábrežie","Edisonova","Einsteinova","Elektrárenská","Exnárova","F. Kostku","Fadruszova","Fajnorovo nábrežie","Fándlyho","Farebná","Farská","Farského","Fazuľová","Fedinova","Ferienčíkova","Fialkové údolie","Fibichova","Filiálne nádražie","Flöglova","Floriánske námestie","Fraňa Kráľa","Francisciho","Francúzskych partizá","Františkánska","Františkánske námest","Furdekova","Furdekova","Gabčíkova","Gagarinova","Gagarinova","Gagarinova","Gajova","Galaktická","Galandova","Gallova","Galvaniho","Gašparíkova","Gaštanová","Gavlovičova","Gemerská","Gercenova","Gessayova","Gettingová","Godrova","Gogoľova","Goláňova","Gondova","Goralská","Gorazdova","Gorkého","Gregorovej","Grösslingova","Gruzínska","Gunduličova","Gusevova","Haanova","Haburská","Halašova","Hálkova","Hálova","Hamuliakova","Hanácka","Handlovská","Hany Meličkovej","Harmanecká","Hasičská","Hattalova","Havlíčkova","Havrania","Haydnova","Herlianska","Herlianska","Heydukova","Hlaváčikova","Hlavatého","Hlavné námestie","Hlboká cesta","Hlboká cesta","Hlivová","Hlučínska","Hodálova","Hodžovo námestie","Holekova","Holíčska","Hollého","Holubyho","Hontianska","Horárska","Horné Židiny","Horská","Horská","Hrad","Hradné údolie","Hrachová","Hraničná","Hrebendova","Hríbová","Hriňovská","Hrobákova","Hrobárska","Hroboňova","Hudecova","Humenské námestie","Hummelova","Hurbanovo námestie","Hurbanovo námestie","Hviezdoslavovo námes","Hýrošova","Chalupkova","Chemická","Chlumeckého","Chorvátska","Chorvátska","Iľjušinova","Ilkovičova","Inovecká","Inovecká","Iskerníková","Ivana Horvátha","Ivánska cesta","J.C.Hronského","Jabloňová","Jadrová","Jakabova","Jakubovo námestie","Jamnického","Jána Stanislava","Janáčkova","Jančova","Janíkove role","Jankolova","Jánošíkova","Jánoškova","Janotova","Jánska","Jantárová cesta","Jarabinková","Jarná","Jaroslavova","Jarošova","Jaseňová","Jasná","Jasovská","Jastrabia","Jašíkova","Javorinská","Javorová","Jazdecká","Jedlíkova","Jégého","Jelačičova","Jelenia","Jesenná","Jesenského","Jiráskova","Jiskrova","Jozefská","Junácka","Jungmannova","Jurigovo námestie","Jurovského","Jurská","Justičná","K lomu","K Železnej studienke","Kalinčiakova","Kamenárska","Kamenné námestie","Kapicova","Kapitulská","Kapitulský dvor","Kapucínska","Kapušianska","Karadžičova","Karadžičova","Karadžičova","Karadžičova","Karloveská","Karloveské rameno","Karpatská","Kašmírska","Kaštielska","Kaukazská","Kempelenova","Kežmarské námestie","Kladnianska","Klariská","Kláštorská","Klatovská","Klatovská","Klemensova","Klincová","Klobučnícka","Klokočova","Kľukatá","Kmeťovo námestie","Koceľova","Kočánkova","Kohútova","Kolárska","Kolískova","Kollárovo námestie","Kollárovo námestie","Kolmá","Komárňanská","Komárnická","Komárnická","Komenského námestie","Kominárska","Komonicová","Konopná","Konvalinková","Konventná","Kopanice","Kopčianska","Koperníkova","Korabinského","Koreničova","Kostlivého","Kostolná","Košická","Košická","Košická","Kováčska","Kovorobotnícka","Kozia","Koziarka","Kozmonautická","Krajná","Krakovská","Kráľovské údolie","Krasinského","Kraskova","Krásna","Krásnohorská","Krasovského","Krátka","Krčméryho","Kremnická","Kresánkova","Krivá","Križkova","Krížna","Krížna","Krížna","Krížna","Krmanova","Krompašská","Krupinská","Krupkova","Kubániho","Kubínska","Kuklovská","Kukučínova","Kukuričná","Kulíškova","Kultúrna","Kupeckého","Kúpeľná","Kutlíkova","Kutuzovova","Kuzmányho","Kvačalova","Kvetná","Kýčerského","Kyjevská","Kysucká","Laborecká","Lackova","Ladislava Sáru","Ľadová","Lachova","Ľaliová","Lamačská cesta","Lamačská cesta","Lamanského","Landererova","Langsfeldova","Ľanová","Laskomerského","Laučekova","Laurinská","Lazaretská","Lazaretská","Legerského","Legionárska","Legionárska","Lehockého","Lehockého","Lenardova","Lermontovova","Lesná","Leškova","Letecká","Letisko M.R.Štefánik","Letná","Levárska","Levická","Levočská","Lidická","Lietavská","Lichardova","Lipová","Lipovinová","Liptovská","Listová","Líščie nivy","Líščie údolie","Litovská","Lodná","Lombardiniho","Lomonosovova","Lopenícka","Lovinského","Ľubietovská","Ľubinská","Ľubľanská","Ľubochnianska","Ľubovnianska","Lúčna","Ľudové námestie","Ľudovíta Fullu","Luhačovická","Lužická","Lužná","Lýcejná","Lykovcová","M. Hella","Magnetová","Macharova","Majakovského","Majerníkova","Májkova","Májová","Makovického","Malá","Malé pálenisko","Malinová","Malý Draždiak","Malý trh","Mamateyova","Mamateyova","Mánesovo námestie","Mariánska","Marie Curie-Sklodows","Márie Medveďovej","Markova","Marótyho","Martákovej","Martinčekova","Martinčekova","Martinengova","Martinská","Mateja Bela","Matejkova","Matičná","Matúšova","Medená","Medzierka","Medzilaborecká","Merlotová","Mesačná","Mestská","Meteorová","Metodova","Mickiewiczova","Mierová","Michalská","Mikovíniho","Mikulášska","Miletičova","Miletičova","Mišíkova","Mišíkova","Mišíkova","Mliekárenská","Mlynarovičova","Mlynská dolina","Mlynská dolina","Mlynská dolina","Mlynské luhy","Mlynské nivy","Mlynské nivy","Mlynské nivy","Mlynské nivy","Mlynské nivy","Mlyny","Modranská","Mojmírova","Mokráň záhon","Mokrohájska cesta","Moldavská","Molecova","Moravská","Moskovská","Most SNP","Mostová","Mošovského","Motýlia","Moyzesova","Mozartova","Mraziarenská","Mudroňova","Mudroňova","Mudroňova","Muchovo námestie","Murgašova","Muškátová","Muštová","Múzejná","Myjavská","Mýtna","Mýtna","Na Baránku","Na Brezinách","Na Hrebienku","Na Kalvárii","Na Kampárke","Na kopci","Na križovatkách","Na lánoch","Na paši","Na piesku","Na Riviére","Na Sitine","Na Slavíne","Na stráni","Na Štyridsiatku","Na úvrati","Na vŕšku","Na výslní","Nábělkova","Nábrežie arm. gen. L","Nábrežná","Nad Dunajom","Nad lomom","Nad lúčkami","Nad lúčkami","Nad ostrovom","Nad Sihoťou","Námestie 1. mája","Námestie Alexandra D","Námestie Biely kríž","Námestie Hraničiarov","Námestie Jána Pavla","Námestie Ľudovíta Št","Námestie Martina Ben","Nám. M.R.Štefánika","Námestie slobody","Námestie slobody","Námestie SNP","Námestie SNP","Námestie sv. Františ","Narcisová","Nedbalova","Nekrasovova","Neronetová","Nerudova","Nevädzová","Nezábudková","Niťová","Nitrianska","Nížinná","Nobelova","Nobelovo námestie","Nová","Nová Rožňavská","Novackého","Nové pálenisko","Nové záhrady I","Nové záhrady II","Nové záhrady III","Nové záhrady IV","Nové záhrady V","Nové záhrady VI","Nové záhrady VII","Novinárska","Novobanská","Novohradská","Novosvetská","Novosvetská","Novosvetská","Obežná","Obchodná","Očovská","Odbojárov","Odborárska","Odborárske námestie","Odborárske námestie","Ohnicová","Okánikova","Okružná","Olbrachtova","Olejkárska","Ondavská","Ondrejovova","Oravská","Orechová cesta","Orechový rad","Oriešková","Ormisova","Osadná","Ostravská","Ostredková","Osuského","Osvetová","Otonelská","Ovručská","Ovsištské námestie","Pajštúnska","Palackého","Palárikova","Palárikova","Pálavská","Palisády","Palisády","Palisády","Palkovičova","Panenská","Pankúchova","Panónska cesta","Panská","Papánkovo námestie","Papraďová","Páričkova","Parková","Partizánska","Pasienky","Paulínyho","Pavlovičova","Pavlovova","Pavlovská","Pažického","Pažítková","Pečnianska","Pernecká","Pestovateľská","Peterská","Petzvalova","Pezinská","Piesočná","Piešťanská","Pifflova","Pilárikova","Pionierska","Pivoňková","Planckova","Planét","Plátenícka","Pluhová","Plynárenská","Plzenská","Pobrežná","Pod Bôrikom","Pod Kalváriou","Pod lesom","Pod Rovnicami","Pod vinicami","Podhorského","Podjavorinskej","Podlučinského","Podniková","Podtatranského","Pohronská","Polárna","Poloreckého","Poľná","Poľská","Poludníková","Porubského","Poštová","Považská","Povraznícka","Povraznícka","Pražská","Predstaničné námesti","Prepoštská","Prešernova","Prešovská","Prešovská","Prešovská","Pri Bielom kríži","Pri dvore","Pri Dynamitke","Pri Habánskom mlyne","Pri hradnej studni","Pri seči","Pri Starej Prachárni","Pri Starom háji","Pri Starom Mýte","Pri strelnici","Pri Suchom mlyne","Pri zvonici","Pribinova","Pribinova","Pribinova","Pribišova","Pribylinská","Priečna","Priekopy","Priemyselná","Priemyselná","Prievozská","Prievozská","Prievozská","Príkopova","Primaciálne námestie","Prístav","Prístavná","Prokofievova","Prokopa Veľkého","Prokopova","Prúdová","Prvosienková","Púpavová","Pustá","Puškinova","Račianska","Račianska","Račianske mýto","Radarová","Rádiová","Radlinského","Radničná","Radničné námestie","Radvanská","Rajská","Raketová","Rákosová","Rastislavova","Rázusovo nábrežie","Repná","Rešetkova","Revolučná","Révová","Revúcka","Rezedová","Riazanská","Riazanská","Ribayová","Riečna","Rigeleho","Rízlingová","Riznerova","Robotnícka","Romanova","Röntgenova","Rosná","Rovná","Rovniankova","Rovníková","Rozmarínová","Rožňavská","Rožňavská","Rožňavská","Rubinsteinova","Rudnayovo námestie","Rumančeková","Rusovská cesta","Ružičková","Ružinovská","Ružinovská","Ružinovská","Ružomberská","Ružová dolina","Ružová dolina","Rybárska brána","Rybné námestie","Rýdziková","Sabinovská","Sabinovská","Sad Janka Kráľa","Sadová","Sartorisova","Sasinkova","Seberíniho","Sečovská","Sedlárska","Sedmokrásková","Segnerova","Sekulská","Semianova","Senická","Senná","Schillerova","Schody pri starej vo","Sibírska","Sienkiewiczova","Silvánska","Sinokvetná","Skalická cesta","Skalná","Sklenárova","Sklenárska","Sládkovičova","Sladová","Slávičie údolie","Slavín","Slepá","Sliačska","Sliezska","Slivková","Slnečná","Slovanská","Slovinská","Slovnaftská","Slowackého","Smetanova","Smikova","Smolenická","Smolnícka","Smrečianska","Soferove schody","Socháňova","Sokolská","Solivarská","Sološnická","Somolického","Somolického","Sosnová","Spišská","Spojná","Spoločenská","Sputniková","Sreznevského","Srnčia","Stachanovská","Stálicová","Staničná","Stará Černicová","Stará Ivánska cesta","Stará Prievozská","Stará Vajnorská","Stará vinárska","Staré Grunty","Staré ihrisko","Staré záhrady","Starhradská","Starohájska","Staromestská","Staroturský chodník","Staviteľská","Stodolova","Stoklasová","Strakova","Strážnická","Strážny dom","Strečnianska","Stredná","Strelecká","Strmá cesta","Strojnícka","Stropkovská","Struková","Studená","Stuhová","Súbežná","Súhvezdná","Suché mýto","Suchohradská","Súkennícka","Súľovská","Sumbalova","Súmračná","Súťažná","Svätého Vincenta","Svätoplukova","Svätoplukova","Svätovojtešská","Svetlá","Svíbová","Svidnícka","Svoradova","Svrčia","Syslia","Šafárikovo námestie","Šafárikovo námestie","Šafránová","Šagátova","Šalviová","Šancová","Šancová","Šancová","Šancová","Šándorova","Šarišská","Šášovská","Šaštínska","Ševčenkova","Šintavská","Šípková","Škarniclova","Školská","Škovránčia","Škultétyho","Šoltésovej","Špieszova","Špitálska","Športová","Šrobárovo námestie","Šťastná","Štedrá","Štefánikova","Štefánikova","Štefánikova","Štefanovičova","Štefunkova","Štetinova","Štiavnická","Štúrova","Štyndlova","Šulekova","Šulekova","Šulekova","Šumavská","Šuňavcova","Šustekova","Švabinského","Tabaková","Tablicova","Táborská","Tajovského","Tallerova","Tehelná","Technická","Tekovská","Telocvičná","Tematínska","Teplická","Terchovská","Teslova","Tetmayerova","Thurzova","Tichá","Tilgnerova","Timravina","Tobrucká","Tokajícka","Tolstého","Tománkova","Tomášikova","Tomášikova","Tomášikova","Tomášikova","Tomášikova","Topoľčianska","Topoľová","Továrenská","Trebišovská","Trebišovská","Trebišovská","Trenčianska","Treskoňova","Trnavská cesta","Trnavská cesta","Trnavská cesta","Trnavská cesta","Trnavská cesta","Trnavské mýto","Tŕňová","Trojdomy","Tučkova","Tupolevova","Turbínova","Turčianska","Turnianska","Tvarožkova","Tylova","Tyršovo nábrežie","Údernícka","Údolná","Uhorková","Ukrajinská","Ulica 29. augusta","Ulica 29. augusta","Ulica 29. augusta","Ulica 29. augusta","Ulica Imricha Karvaš","Ulica Jozefa Krónera","Ulica Viktora Tegelh","Úprkova","Úradnícka","Uránová","Urbánkova","Ursínyho","Uršulínska","Úzka","V záhradách","Vajanského nábrežie","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Valašská","Valchárska","Vansovej","Vápenná","Varínska","Varšavská","Varšavská","Vavilovova","Vavrínova","Vazovova","Včelárska","Velehradská","Veltlínska","Ventúrska","Veterná","Veternicová","Vetvová","Viedenská cesta","Viedenská cesta","Vietnamská","Vígľašská","Vihorlatská","Viktorínova","Vilová","Vincenta Hložníka","Vínna","Vlastenecké námestie","Vlčkova","Vlčkova","Vlčkova","Vodný vrch","Votrubova","Vrábeľská","Vrakunská cesta","Vranovská","Vretenová","Vrchná","Vrútocká","Vyhliadka","Vyhnianska cesta","Vysoká","Vyšehradská","Vyšná","Wattova","Wilsonova","Wolkrova","Za Kasárňou","Za sokolovňou","Za Stanicou","Za tehelňou","Záborského","Zadunajská cesta","Záhorácka","Záhradnícka","Záhradnícka","Záhradnícka","Záhradnícka","Záhrebská","Záhrebská","Zálužická","Zámocká","Zámocké schody","Zámočnícka","Západná","Západný rad","Záporožská","Zátišie","Závodníkova","Zelená","Zelinárska","Zimná","Zlaté piesky","Zlaté schody","Znievska","Zohorská","Zochova","Zrinského","Zvolenská","Žabí majer","Žabotova","Žehrianska","Železná","Železničiarska","Žellova","Žiarska","Židovská","Žilinská","Žilinská","Živnostenská","Žižkova","Župné námestie"]})),B5=c((()=>{bE=["#{street_name} #{building_number}"]})),P5=c((()=>{SE=["#{street}"]})),L5=c((()=>{k5(),y5(),b5(),S5(),A5(),M5(),T5(),_5(),w5(),j5(),E5(),N5(),B5(),P5(),AE={building_number:lE,city:uE,city_name:cE,city_prefix:dE,city_suffix:hE,country:pE,default_country:mE,postcode:fE,secondary_address:vE,state:gE,state_abbr:kE,street:yE,street_address:bE,street_name:SE}})),D5=c((()=>{ME=["Adaptive","Advanced","Ameliorated","Assimilated","Automated","Balanced","Business-focused","Centralized","Cloned","Compatible","Configurable","Cross-group","Cross-platform","Customer-focused","Customizable","Decentralized","De-engineered","Devolved","Digitized","Distributed","Diverse","Down-sized","Enhanced","Enterprise-wide","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Function-based","Fundamental","Future-proofed","Grass-roots","Horizontal","Implemented","Innovative","Integrated","Intuitive","Inverse","Managed","Mandatory","Monitored","Multi-channelled","Multi-lateral","Multi-layered","Multi-tiered","Networked","Object-based","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Pre-emptive","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Re-contextualized","Re-engineered","Reduced","Reverse-engineered","Right-sized","Robust","Seamless","Secured","Self-enabling","Sharable","Stand-alone","Streamlined","Switchable","Synchronised","Synergistic","Synergized","Team-oriented","Total","Triple-buffered","Universal","Up-sized","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary","Vision-oriented"]})),x5=c((()=>{TE=["clicks-and-mortar","value-added","vertical","proactive","robust","revolutionary","scalable","leading-edge","innovative","intuitive","strategic","e-business","mission-critical","sticky","one-to-one","24/7","end-to-end","global","B2B","B2C","granular","frictionless","virtual","viral","dynamic","24/365","best-of-breed","killer","magnetic","bleeding-edge","web-enabled","interactive","dot-com","sexy","back-end","real-time","efficient","front-end","distributed","seamless","extensible","turn-key","world-class","open-source","cross-platform","cross-media","synergistic","bricks-and-clicks","out-of-the-box","enterprise","integrated","impactful","wireless","transparent","next-generation","cutting-edge","user-centric","visionary","customized","ubiquitous","plug-and-play","collaborative","compelling","holistic","rich","synergies","web-readiness","paradigms","markets","partnerships","infrastructures","platforms","initiatives","channels","eyeballs","communities","ROI","solutions","e-tailers","e-services","action-items","portals","niches","technologies","content","vortals","supply-chains","convergence","relationships","architectures","interfaces","e-markets","e-commerce","systems","bandwidth","infomediaries","models","mindshare","deliverables","users","schemas","networks","applications","metrics","e-business","functionalities","experiences","web services","methodologies"]})),C5=c((()=>{_E=["implement","utilize","integrate","streamline","optimize","evolve","transform","embrace","enable","orchestrate","leverage","reinvent","aggregate","architect","enhance","incentivize","morph","empower","envisioneer","monetize","harness","facilitate","seize","disintermediate","synergize","strategize","deploy","brand","grow","target","syndicate","synthesize","deliver","mesh","incubate","engage","maximize","benchmark","expedite","reintermediate","whiteboard","visualize","repurpose","innovate","scale","unleash","drive","extend","engineer","revolutionize","generate","exploit","transition","e-enable","iterate","cultivate","matrix","productize","redefine","recontextualize"]})),K5=c((()=>{wE=["24 hour","24/7","3rd generation","4th generation","5th generation","6th generation","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","background","bandwidth-monitored","bi-directional","bifurcated","bottom-line","clear-thinking","client-driven","client-server","coherent","cohesive","composite","context-sensitive","contextually-based","content-based","dedicated","demand-driven","didactic","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","even-keeled","executive","explicit","exuding","fault-tolerant","foreground","fresh-thinking","full-range","global","grid-enabled","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","multimedia","multi-state","multi-tasking","national","needs-based","neutral","next generation","non-volatile","object-oriented","optimal","optimizing","radical","real-time","reciprocal","regional","responsive","scalable","secondary","solution-oriented","stable","static","systematic","systemic","system-worthy","tangible","tertiary","transitional","uniform","upward-trending","user-facing","value-added","web-enabled","well-modulated","zero administration","zero defect","zero tolerance"]})),R5=c((()=>{jE=["#{Name.last_name} #{suffix}","#{Name.last_name} #{suffix}","#{Name.man_last_name} a #{Name.man_last_name} #{suffix}"]})),z5=c((()=>{EE=["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","artificial intelligence","array","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","database","data-warehouse","definition","emulation","encoding","encryption","extranet","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","Graphic Interface","groupware","Graphical User Interface","hardware","help-desk","hierarchy","hub","implementation","info-mediaries","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge user","knowledge base","local area network","leverage","matrices","matrix","methodology","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","open system","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","secured line","service-desk","software","solution","standardization","strategy","structure","success","superstructure","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"]})),O5=c((()=>{NE=["s.r.o.","a.s.","v.o.s."]})),I5=c((()=>{D5(),x5(),C5(),K5(),R5(),z5(),O5(),BE={adjective:ME,bs_noun:TE,bs_verb:_E,descriptor:wE,name:jE,noun:EE,suffix:NE}})),V5=c((()=>{PE=["sk","com","net","eu","org"]})),G5=c((()=>{LE=["gmail.com","zoznam.sk","azet.sk"]})),H5=c((()=>{V5(),G5(),DE={domain_suffix:PE,free_email:LE}})),F5=c((()=>{xE=["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]})),J5=c((()=>{F5(),CE={words:xE}})),U5=c((()=>{KE=["Alexandra","Karina","Daniela","Andrea","Antónia","Bohuslava","Dáša","Malvína","Kristína","Nataša","Bohdana","Drahomíra","Sára","Zora","Tamara","Ema","Tatiana","Erika","Veronika","Agáta","Dorota","Vanda","Zoja","Gabriela","Perla","Ida","Liana","Miloslava","Vlasta","Lívia","Eleonóra","Etela","Romana","Zlatica","Anežka","Bohumila","Františka","Angela","Matilda","Svetlana","Ľubica","Alena","Soňa","Vieroslava","Zita","Miroslava","Irena","Milena","Estera","Justína","Dana","Danica","Jela","Jaroslava","Jarmila","Lea","Anastázia","Galina","Lesana","Hermína","Monika","Ingrida","Viktória","Blažena","Žofia","Sofia","Gizela","Viola","Gertrúda","Zina","Júlia","Juliana","Želmíra","Ela","Vanesa","Iveta","Vilma","Petronela","Žaneta","Xénia","Karolína","Lenka","Laura","Stanislava","Margaréta","Dobroslava","Blanka","Valéria","Paulína","Sidónia","Adriána","Beáta","Petra","Melánia","Diana","Berta","Patrícia","Lujza","Amália","Milota","Nina","Margita","Kamila","Dušana","Magdaléna","Oľga","Anna","Hana","Božena","Marta","Libuša","Božidara","Dominika","Hortenzia","Jozefína","Štefánia","Ľubomíra","Zuzana","Darina","Marcela","Milica","Elena","Helena","Lýdia","Anabela","Jana","Silvia","Nikola","Ružena","Nora","Drahoslava","Linda","Melinda","Rebeka","Rozália","Regína","Alica","Marianna","Miriama","Martina","Mária","Jolana","Ľudomila","Ľudmila","Olympia","Eugénia","Ľuboslava","Zdenka","Edita","Michaela","Stela","Viera","Natália","Eliška","Brigita","Valentína","Terézia","Vladimíra","Hedviga","Uršuľa","Alojza","Kvetoslava","Sabína","Dobromila","Klára","Simona","Aurélia","Denisa","Renáta","Irma","Agnesa","Klaudia","Alžbeta","Elvíra","Cecília","Emília","Katarína","Henrieta","Bibiána","Barbora","Marína","Izabela","Hilda","Otília","Lucia","Branislava","Bronislava","Ivica","Albína","Kornélia","Sláva","Slávka","Judita","Dagmara","Adela","Nadežda","Eva","Filoména","Ivana","Milada"]})),W5=c((()=>{RE=["Antalová","Babková","Bahnová","Balážová","Baranová","Baranková","Bartovičová","Bartošová","Bačová","Bernoláková","Beňová","Biceková","Bieliková","Blahová","Bondrová","Bosáková","Bošková","Brezinová","Bukovská","Chalupková","Chudíková","Cibulová","Cibulková","Cyprichová","Cígerová","Danková","Daňková","Daňová","Debnárová","Dejová","Dekýšová","Doležalová","Dočolomanská","Droppová","Dubovská","Dudeková","Dulová","Dullová","Dusíková","Dvončová","Dzurjaninová","Dávidová","Fabianová","Fabiánová","Fajnorová","Farkašovská","Ficová","Filcová","Filipová","Finková","Ftoreková","Gašparová","Gašparovičová","Gocníková","Gregorová","Gregušová","Grznárová","Habláková","Habšudová","Haldová","Halušková","Haláková","Hanková","Hanzalová","Haščáková","Heretiková","Hečková","Hlaváčeková","Hlinková","Holubová","Holubyová","Hossová","Hozová","Hrašková","Hricová","Hrmová","Hrušovská","Hubová","Ihnačáková","Janečeková","Janošková","Jantošovičová","Janíková","Jančeková","Jedľovská","Jendeková","Jonatová","Jurinová","Jurkovičová","Juríková","Jánošíková","Kafendová","Kaliská","Karulová","Kenížová","Klapková","Kmeťová","Kolesárová","Kollárová","Kolniková","Kolníková","Kolárová","Korecová","Kostkaová","Kostrecová","Kováčová","Kováčiková","Kozová","Kočišová","Krajíčeková","Krajčová","Krajčovičová","Krajčírová","Králiková","Krúpová","Kubíková","Kyseľová","Kállayová","Labudová","Lepšíková","Liptáková","Lisická","Lubinová","Lukáčová","Luptáková","Líšková","Madejová","Majeská","Malachovská","Malíšeková","Mamojková","Marcinková","Mariánová","Masaryková","Maslová","Matiašková","Medveďová","Melcerová","Mečiarová","Michalíková","Mihaliková","Mihálová","Miháliková","Miklošková","Mikulíková","Mikušová","Mikúšová","Milotová","Mináčová","Mišíková","Mojžišová","Mokrošová","Morová","Moravčíková","Mydlová","Nemcová","Nováková","Obšutová","Ondrušová","Otčenášová","Pauková","Pavlikovská","Pavúková","Pašeková","Pašková","Pelikánová","Petrovická","Petrušková","Pešková","Plchová","Plekanecová","Podhradská","Podkonická","Poliaková","Pupáková","Raková","Repiská","Romančíková","Rusová","Ružičková","Rybníčeková","Rybárová","Rybáriková","Samsonová","Sedliaková","Senková","Sklenková","Skokanová","Skutecká","Slašťanová","Slobodová","Slobodníková","Slotová","Slováková","Smreková","Stodolová","Straková","Strnisková","Svrbíková","Sámelová","Sýkorová","Tatarová","Tatarková","Tatárová","Tatárkaová","Thomková","Tomečeková","Tomková","Trubenová","Turčoková","Uramová","Urblíková","Vajcíková","Vajdová","Valachová","Valachovičová","Valentová","Valušková","Vaneková","Veselová","Vicenová","Višňovská","Vlachová","Vojteková","Vydarená","Zajacová","Zimová","Zimková","Záborská","Zúbriková","Čapkovičová","Čaplovičová","Čarnogurská","Čierná","Čobrdová","Ďaďová","Ďuricová","Ďurišová","Šidlová","Šimonovičová","Škriniarová","Škultétyová","Šmajdová","Šoltésová","Šoltýsová","Štefanová","Štefanková","Šulcová","Šurková","Švehlová","Šťastná"]})),Z5=c((()=>{zE=["Drahoslav","Severín","Alexej","Ernest","Rastislav","Radovan","Dobroslav","Dalibor","Vincent","Miloš","Timotej","Gejza","Bohuš","Alfonz","Gašpar","Emil","Erik","Blažej","Zdenko","Dezider","Arpád","Valentín","Pravoslav","Jaromír","Roman","Matej","Frederik","Viktor","Alexander","Radomír","Albín","Bohumil","Kazimír","Fridrich","Radoslav","Tomáš","Alan","Branislav","Bruno","Gregor","Vlastimil","Boleslav","Eduard","Jozef","Víťazoslav","Blahoslav","Beňadik","Adrián","Gabriel","Marián","Emanuel","Miroslav","Benjamín","Hugo","Richard","Izidor","Zoltán","Albert","Igor","Július","Aleš","Fedor","Rudolf","Valér","Marcel","Ervín","Slavomír","Vojtech","Juraj","Marek","Jaroslav","Žigmund","Florián","Roland","Pankrác","Servác","Bonifác","Svetozár","Bernard","Júlia","Urban","Dušan","Viliam","Ferdinand","Norbert","Róbert","Medard","Zlatko","Anton","Vasil","Vít","Adolf","Vratislav","Alfréd","Alojz","Ján","Tadeáš","Ladislav","Peter","Pavol","Miloslav","Prokop","Cyril","Metod","Patrik","Oliver","Ivan","Kamil","Henrich","Drahomír","Bohuslav","Iľja","Daniel","Vladimír","Jakub","Krištof","Ignác","Gustáv","Jerguš","Dominik","Oskar","Vavrinec","Ľubomír","Mojmír","Leonard","Tichomír","Filip","Bartolomej","Ľudovít","Samuel","Augustín","Belo","Oleg","Bystrík","Ctibor","Ľudomil","Konštantín","Ľuboslav","Matúš","Móric","Ľuboš","Ľubor","Vladislav","Cyprián","Václav","Michal","Jarolím","Arnold","Levoslav","František","Dionýz","Maximilián","Koloman","Boris","Lukáš","Kristián","Vendelín","Sergej","Aurel","Demeter","Denis","Hubert","Karol","Imrich","René","Bohumír","Teodor","Tibor","Maroš","Martin","Svätopluk","Stanislav","Leopold","Eugen","Félix","Klement","Kornel","Milan","Vratko","Ondrej","Andrej","Edmund","Oldrich","Oto","Mikuláš","Ambróz","Radúz","Bohdan","Adam","Štefan","Dávid","Silvester"]})),q5=c((()=>{OE=["Antal","Babka","Bahna","Bahno","Baláž","Baran","Baranka","Bartovič","Bartoš","Bača","Bernolák","Beňo","Bicek","Bielik","Blaho","Bondra","Bosák","Boška","Brezina","Bukovský","Chalupka","Chudík","Cibula","Cibulka","Cibuľa","Cyprich","Cíger","Danko","Daňko","Daňo","Debnár","Dej","Dekýš","Doležal","Dočolomanský","Droppa","Dubovský","Dudek","Dula","Dulla","Dusík","Dvonč","Dzurjanin","Dávid","Fabian","Fabián","Fajnor","Farkašovský","Fico","Filc","Filip","Finka","Ftorek","Gašpar","Gašparovič","Gocník","Gregor","Greguš","Grznár","Hablák","Habšuda","Halda","Haluška","Halák","Hanko","Hanzal","Haščák","Heretik","Hečko","Hlaváček","Hlinka","Holub","Holuby","Hossa","Hoza","Hraško","Hric","Hrmo","Hrušovský","Huba","Ihnačák","Janeček","Janoška","Jantošovič","Janík","Janček","Jedľovský","Jendek","Jonata","Jurina","Jurkovič","Jurík","Jánošík","Kafenda","Kaliský","Karul","Keníž","Klapka","Kmeť","Kolesár","Kollár","Kolnik","Kolník","Kolár","Korec","Kostka","Kostrec","Kováč","Kováčik","Koza","Kočiš","Krajíček","Krajči","Krajčo","Krajčovič","Krajčír","Králik","Krúpa","Kubík","Kyseľ","Kállay","Labuda","Lepšík","Lipták","Lisický","Lubina","Lukáč","Lupták","Líška","Madej","Majeský","Malachovský","Malíšek","Mamojka","Marcinko","Marián","Masaryk","Maslo","Matiaško","Medveď","Melcer","Mečiar","Michalík","Mihalik","Mihál","Mihálik","Mikloško","Mikulík","Mikuš","Mikúš","Milota","Mináč","Mišík","Mojžiš","Mokroš","Mora","Moravčík","Mydlo","Nemec","Nitra","Novák","Obšut","Ondruš","Otčenáš","Pauko","Pavlikovský","Pavúk","Pašek","Paška","Paško","Pelikán","Petrovický","Petruška","Peško","Plch","Plekanec","Podhradský","Podkonický","Poliak","Pupák","Rak","Repiský","Romančík","Rus","Ružička","Rybníček","Rybár","Rybárik","Samson","Sedliak","Senko","Sklenka","Skokan","Skutecký","Slašťan","Sloboda","Slobodník","Slota","Slovák","Smrek","Stodola","Straka","Strnisko","Svrbík","Sámel","Sýkora","Tatar","Tatarka","Tatár","Tatárka","Thomka","Tomeček","Tomka","Tomko","Truben","Turčok","Uram","Urblík","Vajcík","Vajda","Valach","Valachovič","Valent","Valuška","Vanek","Vesel","Vicen","Višňovský","Vlach","Vojtek","Vydarený","Zajac","Zima","Zimka","Záborský","Zúbrik","Čapkovič","Čaplovič","Čarnogurský","Čierny","Čobrda","Ďaďo","Ďurica","Ďuriš","Šidlo","Šimonovič","Škriniar","Škultéty","Šmajda","Šoltés","Šoltýs","Štefan","Štefanka","Šulc","Šurka","Švehla","Šťastný"]})),Q5=c((()=>{IE=["#{prefix} #{male_first_name} #{male_last_name}","#{prefix} #{female_first_name} #{female_last_name}","#{male_first_name} #{male_last_name} #{suffix}","#{female_first_name} #{female_last_name} #{suffix}","#{male_first_name} #{male_last_name}","#{male_first_name} #{male_last_name}","#{male_first_name} #{male_last_name}","#{female_first_name} #{female_last_name}","#{female_first_name} #{female_last_name}","#{female_first_name} #{female_last_name}"]})),Y5=c((()=>{VE=["Ing.","Mgr.","JUDr.","MUDr."]})),$5=c((()=>{GE=["Phd."]})),X5=c((()=>{HE={descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","Dynamic","International","Legacy","Forward","Internal","Human","Chief","Principal"],level:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job:["Supervisor","Associate","Executive","Liaison","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"]}})),e7=c((()=>{U5(),W5(),Z5(),q5(),Q5(),Y5(),$5(),X5(),FE={female_first_name:KE,female_last_name:RE,male_first_name:zE,male_last_name:OE,name:IE,prefix:VE,suffix:GE,title:HE}})),a7=c((()=>{JE=["09## ### ###","0## #### ####","0# #### ####","+421 ### ### ###"]})),n7=c((()=>{a7(),UE={formats:JE}})),i7=c((()=>{L5(),I5(),H5(),J5(),e7(),n7(),WE={title:"Slovakian",address:AE,company:BE,internet:DE,lorem:CE,name:FE,phone_number:UE}})),r7=c((()=>{ZE=["###","##","#"]})),t7=c((()=>{qE=["#{city_prefix}#{city_suffix}"]})),o7=c((()=>{QE=["Söder","Norr","Väst","Öster","Aling","Ar","Av","Bo","Br","Bå","Ek","En","Esk","Fal","Gäv","Göte","Ha","Helsing","Karl","Krist","Kram","Kung","Kö","Lyck","Ny"]})),s7=c((()=>{YE=["stad","land","sås","ås","holm","tuna","sta","berg","löv","borg","mora","hamn","fors","köping","by","hult","torp","fred","vik"]})),l7=c((()=>{$E=["s Väg","s Gata"]})),u7=c((()=>{XE=["Ryssland","Kanada","Kina","USA","Brasilien","Australien","Indien","Argentina","Kazakstan","Algeriet","DR Kongo","Danmark","Färöarna","Grönland","Saudiarabien","Mexiko","Indonesien","Sudan","Libyen","Iran","Mongoliet","Peru","Tchad","Niger","Angola","Mali","Sydafrika","Colombia","Etiopien","Bolivia","Mauretanien","Egypten","Tanzania","Nigeria","Venezuela","Namibia","Pakistan","Moçambique","Turkiet","Chile","Zambia","Marocko","Västsahara","Burma","Afghanistan","Somalia","Centralafrikanska republiken","Sydsudan","Ukraina","Botswana","Madagaskar","Kenya","Frankrike","Franska Guyana","Jemen","Thailand","Spanien","Turkmenistan","Kamerun","Papua Nya Guinea","Sverige","Uzbekistan","Irak","Paraguay","Zimbabwe","Japan","Tyskland","Kongo","Finland","Malaysia","Vietnam","Norge","Svalbard","Jan Mayen","Elfenbenskusten","Polen","Italien","Filippinerna","Ecuador","Burkina Faso","Nya Zeeland","Gabon","Guinea","Storbritannien","Ghana","Rumänien","Laos","Uganda","Guyana","Oman","Vitryssland","Kirgizistan","Senegal","Syrien","Kambodja","Uruguay","Tunisien","Surinam","Nepal","Bangladesh","Tadzjikistan","Grekland","Nicaragua","Eritrea","Nordkorea","Malawi","Benin","Honduras","Liberia","Bulgarien","Kuba","Guatemala","Island","Sydkorea","Ungern","Portugal","Jordanien","Serbien","Azerbajdzjan","Österrike","Förenade Arabemiraten","Tjeckien","Panama","Sierra Leone","Irland","Georgien","Sri Lanka","Litauen","Lettland","Togo","Kroatien","Bosnien och Hercegovina","Costa Rica","Slovakien","Dominikanska republiken","Bhutan","Estland","Danmark","Färöarna","Grönland","Nederländerna","Schweiz","Guinea-Bissau","Taiwan","Moldavien","Belgien","Lesotho","Armenien","Albanien","Salomonöarna","Ekvatorialguinea","Burundi","Haiti","Rwanda","Makedonien","Djibouti","Belize","Israel","El Salvador","Slovenien","Fiji","Kuwait","Swaziland","Timor-Leste","Montenegro","Bahamas","Vanuatu","Qatar","Gambia","Jamaica","Kosovo","Libanon","Cypern","Brunei","Trinidad och Tobago","Kap Verde","Samoa","Luxemburg","Komorerna","Mauritius","São Tomé och Príncipe","Kiribati","Dominica","Tonga","Mikronesiens federerade stater","Singapore","Bahrain","Saint Lucia","Andorra","Palau","Seychellerna","Antigua och Barbuda","Barbados","Saint Vincent och Grenadinerna","Grenada","Malta","Maldiverna","Saint Kitts och Nevis","Marshallöarna","Liechtenstein","San Marino","Tuvalu","Nauru","Monaco","Vatikanstaten"]})),c7=c((()=>{eN=["Sverige"]})),d7=c((()=>{aN=["#####"]})),h7=c((()=>{nN=["Lgh. ###","Hus ###"]})),p7=c((()=>{iN=["Blekinge","Dalarna","Gotland","Gävleborg","Göteborg","Halland","Jämtland","Jönköping","Kalmar","Kronoberg","Norrbotten","Skaraborg","Skåne","Stockholm","Södermanland","Uppsala","Värmland","Västerbotten","Västernorrland","Västmanland","Älvsborg","Örebro","Östergötland"]})),m7=c((()=>{rN=["#{street_name} #{building_number}"]})),f7=c((()=>{tN=["#{street_root}#{street_suffix}","#{street_prefix} #{street_root}#{street_suffix}","#{Name.first_name}#{common_street_suffix}","#{Name.last_name}#{common_street_suffix}"]})),v7=c((()=>{oN=["Västra","Östra","Norra","Södra","Övre","Undre"]})),g7=c((()=>{sN=["Björk","Järnvägs","Ring","Skol","Skogs","Ny","Gran","Idrotts","Stor","Kyrk","Industri","Park","Strand","Skol","Trädgård","Ängs","Kyrko","Villa","Ek","Kvarn","Stations","Back","Furu","Gen","Fabriks","Åker","Bäck","Asp"]})),k7=c((()=>{lN=["vägen","gatan","gränden","gärdet","allén"]})),y7=c((()=>{r7(),t7(),o7(),s7(),l7(),u7(),c7(),d7(),h7(),p7(),m7(),f7(),v7(),g7(),k7(),uN={building_number:ZE,city:qE,city_prefix:QE,city_suffix:YE,common_street_suffix:$E,country:XE,default_country:eN,postcode:aN,secondary_address:nN,state:iN,street_address:rN,street_name:tN,street_prefix:oN,street_root:sN,street_suffix:lN}})),b7=c((()=>{cN=[56,62,59]})),S7=c((()=>{dN=["#{common_cell_prefix}-###-####"]})),A7=c((()=>{b7(),S7(),hN={common_cell_prefix:cN,formats:dN}})),M7=c((()=>{pN=["vit","silver","grå","svart","röd","grön","blå","gul","lila","indigo","guld","brun","rosa","purpur","korall"]})),T7=c((()=>{mN=["Böcker","Filmer","Musik","Spel","Elektronik","Datorer","Hem","Trädgård","Verktyg","Livsmedel","Hälsa","Skönhet","Leksaker","Klädsel","Skor","Smycken","Sport"]})),_7=c((()=>{fN={adjective:["Liten","Ergonomisk","Robust","Intelligent","Söt","Otrolig","Fantastisk","Praktisk","Slimmad","Grym"],material:["Stål","Metall","Trä","Betong","Plast","Bomull","Granit","Gummi","Latex"],product:["Stol","Bil","Dator","Handskar","Byxor","Skjorta","Bord","Skor","Hatt"]}})),w7=c((()=>{M7(),T7(),_7(),vN={color:pN,department:mN,product_name:fN}})),j7=c((()=>{gN=["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} #{suffix}"]})),E7=c((()=>{kN=["Gruppen","AB","HB","Group","Investment","Kommanditbolag","Aktiebolag"]})),N7=c((()=>{j7(),E7(),yN={name:gN,suffix:kN}})),B7=c((()=>{bN={wide:["januari","februari","mars","april","maj","juni","juli","augusti","september","oktober","november","december"],abbr:["jan","feb","mar","apr","maj","jun","jul","aug","sep","okt","nov","dec"]}})),P7=c((()=>{SN={wide:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"],abbr:["sön","mån","tis","ons","tor","fre","lör"]}})),L7=c((()=>{B7(),P7(),AN={month:bN,weekday:SN}})),D7=c((()=>{MN=["se","nu","info","com","org"]})),x7=c((()=>{D7(),TN={domain_suffix:MN}})),C7=c((()=>{_N=["Anna","Eva","Maria","Karin","Sara","Kristina","Lena","Emma","Kerstin","Marie","Malin","Ingrid","Jenny","Hanna","Linda","Annika","Susanne","Elin","Monica","Birgitta","Sofia","Johanna","Inger","Carina","Elisabeth","Julia","Ulla","Katarina","Linnéa","Emelie","Ida","Helena","Camilla","Åsa","Anette","Sandra","Gunilla","Anita","Maja","Marianne","Margareta","Amanda","Anneli","Therese","Ann","Josefin","Cecilia","Jessica","Helen","Lisa","Matilda","Caroline","Alice","Frida","Ulrika","Elsa","Barbro","Siv","Rebecca","Madeleine","Klara","Ebba","Sofie","Isabelle","Agneta","Gun","Wilma","Lina","Berit","Pia","Ella","Ellen","Yvonne","Louise","Astrid","Moa","Olivia","Nathalie","Mona","Agnes","Emilia","Alexandra","Alva","Britt","Erika","Viktoria","Ann-Christin","Felicia","Ann-Marie","Sonja","Britt-Marie","Pernilla","Lovisa","Charlotte","Linn","Gunnel","Nina","Mikaela","Karolina","Lisbeth"]})),K7=c((()=>{wN=["Anna","Eva","Maria","Karin","Sara","Kristina","Lena","Emma","Kerstin","Marie","Malin","Ingrid","Jenny","Hanna","Linda","Annika","Susanne","Elin","Monica","Birgitta","Sofia","Johanna","Inger","Carina","Elisabeth","Julia","Ulla","Katarina","Linnéa","Emelie","Ida","Helena","Camilla","Åsa","Anette","Sandra","Gunilla","Anita","Maja","Marianne","Margareta","Amanda","Anneli","Therese","Ann","Josefin","Cecilia","Jessica","Helen","Lisa","Matilda","Caroline","Alice","Frida","Ulrika","Elsa","Barbro","Siv","Rebecca","Madeleine","Klara","Ebba","Sofie","Isabelle","Agneta","Gun","Wilma","Lina","Berit","Pia","Ella","Ellen","Yvonne","Louise","Astrid","Moa","Olivia","Nathalie","Mona","Agnes","Emilia","Alexandra","Alva","Britt","Erika","Viktoria","Ann-Christin","Felicia","Ann-Marie","Sonja","Britt-Marie","Pernilla","Lovisa","Charlotte","Linn","Gunnel","Nina","Mikaela","Karolina","Lisbeth","Lars","Mikael","Anders","Johan","Erik","Per","Peter","Karl","Thomas","Jan","Daniel","Fredrik","Andreas","Hans","Stefan","Mohamed","Mats","Marcus","Mattias","Magnus","Jonas","Oskar","Alexander","Niklas","Bengt","Martin","Bo","Nils","Viktor","Patrik","Björn","David","Leif","Filip","Henrik","Joakim","Emil","Christer","Ulf","Sven","Simon","Christoffer","Anton","Gustav","Robert","Christian","William","Tommy","Kjell","Lucas","Rickard","Håkan","Adam","Göran","Jakob","Jonathan","Rolf","Lennart","Robin","Sebastian","Elias","Tobias","John","Stig","Axel","Linus","Oliver","Kent","Hugo","Isak","Roger","Jesper","Claes","Albin","Ludvig","Jörgen","Rasmus","Max","Ali","Jimmy","Kenneth","Joel","Gunnar","Dennis","Josef","Johnny","Olle","Liam","Leo","Olof","Pontus","Åke","Kurt","Kevin","Samuel","Edvin","Gabriel","Torbjörn","Arvid","Felix"]})),R7=c((()=>{jN=["Andersson","Johansson","Karlsson","Nilsson","Eriksson","Larsson","Olsson","Persson","Svensson","Gustafsson","Pettersson","Jonsson","Jansson","Hansson","Bengtsson","Jönsson","Lindberg","Jakobsson","Magnusson","Olofsson","Lindström","Lindqvist","Lindgren","Berg","Axelsson","Bergström","Lundberg","Lind","Lundgren","Lundqvist","Mattsson","Berglund","Fredriksson","Sandberg","Henriksson","Forsberg","Sjöberg","Ali","Wallin","Mohamed","Engström","Eklund","Danielsson","Lundin","Håkansson","Björk","Bergman","Gunnarsson","Holm","Wikström","Samuelsson","Isaksson","Fransson","Bergqvist","Nyström","Holmberg","Arvidsson","Löfgren","Söderberg","Nyberg","Blomqvist","Claesson","Nordström","Ahmed","Mårtensson","Lundström","Hassan","Viklund","Björklund","Eliasson","Pålsson","Berggren","Sandström","Lund","Nordin","Ström","Åberg","Falk","Ekström","Hermansson","Holmgren","Hellström","Dahlberg","Hedlund","Sundberg","Sjögren","Ek","Blom","Abrahamsson","Martinsson","Öberg","Andreasson","Strömberg","Månsson","Hansen","Åkesson","Dahl","Lindholm","Norberg","Holmqvist"]})),z7=c((()=>{EN=["Lars","Mikael","Anders","Johan","Erik","Per","Peter","Karl","Thomas","Jan","Daniel","Fredrik","Andreas","Hans","Stefan","Mohamed","Mats","Marcus","Mattias","Magnus","Jonas","Oskar","Alexander","Niklas","Bengt","Martin","Bo","Nils","Viktor","Patrik","Björn","David","Leif","Filip","Henrik","Joakim","Emil","Christer","Ulf","Sven","Simon","Christoffer","Anton","Gustav","Robert","Christian","William","Tommy","Kjell","Lucas","Rickard","Håkan","Adam","Göran","Jakob","Jonathan","Rolf","Lennart","Robin","Sebastian","Elias","Tobias","John","Stig","Axel","Linus","Oliver","Kent","Hugo","Isak","Roger","Jesper","Claes","Albin","Ludvig","Jörgen","Rasmus","Max","Ali","Jimmy","Kenneth","Joel","Gunnar","Dennis","Josef","Johnny","Olle","Liam","Leo","Olof","Pontus","Åke","Kurt","Kevin","Samuel","Edvin","Gabriel","Torbjörn","Arvid","Felix"]})),O7=c((()=>{NN=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),I7=c((()=>{BN=["Dr.","Prof.","PhD."]})),V7=c((()=>{PN={descriptor:["Ansvarig","Senior","Junior","Företags","Organisatorisk","Intern","Tillträdande","Nationell","Internationell","Regional","Global"],level:["Verkställande","Program","Varumärke","Säkerhet","Forskning","Marknadsföring","Direktiv","Implementation","Integration","Funktionalitet","Taktik","Marknader","Division","Grupp","Optimering","Infrastruktur","Operativ","Finansiell","Kommunikation"],job:["Direktör","Ingenjör","Handledare","Koordinator","Specialist","Administratör","Arkitekt","Analytiker","Designer","Planerare","Tekniker","Utvecklare","Konsult","Representant","Chef","Producent","Assistent"]}})),G7=c((()=>{C7(),K7(),R7(),z7(),O7(),I7(),V7(),LN={female_first_name:_N,first_name:wN,last_name:jN,male_first_name:EN,name:NN,prefix:BN,title:PN}})),H7=c((()=>{DN=["####-#####","####-######"]})),F7=c((()=>{H7(),xN={formats:DN}})),J7=c((()=>{CN=["#{Address.city} #{suffix}"]})),U7=c((()=>{KN=["IF","FF","BK","HK","AIF","SK","FC","SK","BoIS","FK","BIS","FIF","IK"]})),W7=c((()=>{J7(),U7(),RN={name:CN,suffix:KN}})),Z7=c((()=>{y7(),A7(),w7(),N7(),L7(),x7(),G7(),F7(),W7(),zN={title:"Swedish",address:uN,cell_phone:hN,commerce:vN,company:yN,date:AN,internet:TN,name:LN,phone_number:xN,team:RN}})),q7=c((()=>{ON=["###","##","#","##a","##b","##c"]})),Q7=c((()=>{IN=["Adana","Adıyaman","Afyon","Ağrı","Amasya","Ankara","Antalya","Artvin","Aydın","Balıkesir","Bilecik","Bingöl","Bitlis","Bolu","Burdur","Bursa","Çanakkale","Çankırı","Çorum","Denizli","Diyarbakır","Edirne","Elazığ","Erzincan","Erzurum","Eskişehir","Gaziantep","Giresun","Gümüşhane","Hakkari","Hatay","Isparta","İçel (Mersin)","İstanbul","İzmir","Kars","Kastamonu","Kayseri","Kırklareli","Kırşehir","Kocaeli","Konya","Kütahya","Malatya","Manisa","K.maraş","Mardin","Muğla","Muş","Nevşehir","Niğde","Ordu","Rize","Sakarya","Samsun","Siirt","Sinop","Sivas","Tekirdağ","Tokat","Trabzon","Tunceli","Şanlıurfa","Uşak","Van","Yozgat","Zonguldak","Aksaray","Bayburt","Karaman","Kırıkkale","Batman","Şırnak","Bartın","Ardahan","Iğdır","Yalova","Karabük","Kilis","Osmaniye","Düzce"]})),Y7=c((()=>{VN=["Afganistan","Almanya","Amerika Birleşik Devletleri","Amerikan Samoa","Andorra","Angola","Anguilla, İngiltere","Antigua ve Barbuda","Arjantin","Arnavutluk","Aruba, Hollanda","Avustralya","Avusturya","Azerbaycan","Bahama Adaları","Bahreyn","Bangladeş","Barbados","Belçika","Belize","Benin","Bermuda, İngiltere","Beyaz Rusya","Bhutan","Birleşik Arap Emirlikleri","Birmanya (Myanmar)","Bolivya","Bosna Hersek","Botswana","Brezilya","Brunei","Bulgaristan","Burkina Faso","Burundi","Cape Verde","Cayman Adaları, İngiltere","Cebelitarık, İngiltere","Cezayir","Christmas Adası , Avusturalya","Cibuti","Çad","Çek Cumhuriyeti","Çin","Danimarka","Doğu Timor","Dominik Cumhuriyeti","Dominika","Ekvator","Ekvator Ginesi","El Salvador","Endonezya","Eritre","Ermenistan","Estonya","Etiyopya","Fas","Fiji","Fildişi Sahili","Filipinler","Filistin","Finlandiya","Folkland Adaları, İngiltere","Fransa","Fransız Guyanası","Fransız Güney Eyaletleri (Kerguelen Adaları)","Fransız Polinezyası","Gabon","Galler","Gambiya","Gana","Gine","Gine-Bissau","Grenada","Grönland","Guadalup, Fransa","Guam, Amerika","Guatemala","Guyana","Güney Afrika","Güney Georgia ve Güney Sandviç Adaları, İngiltere","Güney Kıbrıs Rum Yönetimi","Güney Kore","Gürcistan H","Haiti","Hırvatistan","Hindistan","Hollanda","Hollanda Antilleri","Honduras","Irak","İngiltere","İran","İrlanda","İspanya","İsrail","İsveç","İsviçre","İtalya","İzlanda","Jamaika","Japonya","Johnston Atoll, Amerika","K.K.T.C.","Kamboçya","Kamerun","Kanada","Kanarya Adaları","Karadağ","Katar","Kazakistan","Kenya","Kırgızistan","Kiribati","Kolombiya","Komorlar","Kongo","Kongo Demokratik Cumhuriyeti","Kosova","Kosta Rika","Kuveyt","Kuzey İrlanda","Kuzey Kore","Kuzey Maryana Adaları","Küba","Laos","Lesotho","Letonya","Liberya","Libya","Liechtenstein","Litvanya","Lübnan","Lüksemburg","Macaristan","Madagaskar","Makau (Makao)","Makedonya","Malavi","Maldiv Adaları","Malezya","Mali","Malta","Marşal Adaları","Martinik, Fransa","Mauritius","Mayotte, Fransa","Meksika","Mısır","Midway Adaları, Amerika","Mikronezya","Moğolistan","Moldavya","Monako","Montserrat","Moritanya","Mozambik","Namibia","Nauru","Nepal","Nijer","Nijerya","Nikaragua","Niue, Yeni Zelanda","Norveç","Orta Afrika Cumhuriyeti","Özbekistan","Pakistan","Palau Adaları","Palmyra Atoll, Amerika","Panama","Papua Yeni Gine","Paraguay","Peru","Polonya","Portekiz","Porto Riko, Amerika","Reunion, Fransa","Romanya","Ruanda","Rusya Federasyonu","Saint Helena, İngiltere","Saint Martin, Fransa","Saint Pierre ve Miquelon, Fransa","Samoa","San Marino","Santa Kitts ve Nevis","Santa Lucia","Santa Vincent ve Grenadinler","Sao Tome ve Principe","Senegal","Seyşeller","Sırbistan","Sierra Leone","Singapur","Slovakya","Slovenya","Solomon Adaları","Somali","Sri Lanka","Sudan","Surinam","Suriye","Suudi Arabistan","Svalbard, Norveç","Svaziland","Şili","Tacikistan","Tanzanya","Tayland","Tayvan","Togo","Tonga","Trinidad ve Tobago","Tunus","Turks ve Caicos Adaları, İngiltere","Tuvalu","Türkiye","Türkmenistan","Uganda","Ukrayna","Umman","Uruguay","Ürdün","Vallis ve Futuna, Fransa","Vanuatu","Venezuela","Vietnam","Virgin Adaları, Amerika","Virgin Adaları, İngiltere","Wake Adaları, Amerika","Yemen","Yeni Kaledonya, Fransa","Yeni Zelanda","Yunanistan","Zambiya","Zimbabve"]})),$7=c((()=>{GN=["Türkiye"]})),X7=c((()=>{HN=["#####"]})),eee=c((()=>{FN=["#{street_name} #{building_number}"]})),aee=c((()=>{JN=["#{street_root}"]})),nee=c((()=>{UN=["Atatürk Bulvarı","Alparslan Türkeş Bulvarı","Ali Çetinkaya Caddesi","Tevfik Fikret Caddesi","Kocatepe Caddesi","İsmet Paşa Caddesi","30 Ağustos Caddesi","İsmet Attila Caddesi","Namık Kemal Caddesi","Lütfi Karadirek Caddesi","Sarıkaya Caddesi","Yunus Emre Sokak","Dar Sokak","Fatih Sokak ","Harman Yolu Sokak ","Ergenekon Sokak  ","Ülkü Sokak","Sağlık Sokak","Okul Sokak","Harman Altı Sokak","Kaldırım Sokak","Mevlana Sokak","Gül Sokak","Sıran Söğüt Sokak","Güven Yaka Sokak","Saygılı Sokak","Menekşe Sokak","Dağınık Evler Sokak","Sevgi Sokak","Afyon Kaya Sokak","Oğuzhan Sokak","İbn-i Sina Sokak","Okul Sokak","Bahçe Sokak","Köypınar Sokak","Kekeçoğlu Sokak","Barış Sokak","Bayır Sokak","Kerimoğlu Sokak","Nalbant Sokak","Bandak Sokak"]})),iee=c((()=>{q7(),Q7(),Y7(),$7(),X7(),eee(),aee(),nee(),WN={building_number:ON,city:IN,country:VN,default_country:GN,postcode:HN,street_address:FN,street_name:JN,street_root:UN}})),ree=c((()=>{ZN=["+90-53#-###-##-##","+90-54#-###-##-##","+90-55#-###-##-##","+90-50#-###-##-##"]})),tee=c((()=>{ree(),qN={formats:ZN}})),oee=c((()=>{QN=["kırmızı","yeşil","mavi","sarı","mor","nane yeşili","mavi","beyaz","siyah","turuncu","pembe","gri","bordo","menekşe","turkuaz","tan","gökyüzü mavisi","somon","erik","orkide","zeytin","eflatun","misket limonu","fildişi","indigo","altın","fuşya","camgöbeği","masmavi","lavanta","gümüş"]})),see=c((()=>{YN=["Kitaplar","Filmler","Müzikler","Oyunlar","Elektronik","Bilgisayarlar","Ev","Bahçe","Aletler","Bakkal","Sağlık","Güzellik","Oyuncaklar","Çocuklar","Bebek","Giyim","Ayakkabı","Mücevher","Spor Dalları","Açık Hava","Otomotiv","Sanayi"]})),lee=c((()=>{$N=["Gün boyu konfor ve destek için yapıştırılmış siyah deri ve PVC dolgulu koltuk ve sırt ile kaplanmış ergonomik yönetici koltuğu","Otomobil düzeni, motorun arkasına monte edilmiş transaks tipi şanzımanlar ve dört tekerlekten çekiş ile bir ön motor tasarımından oluşur","Yeni ABC 13 9370, 13.3, 5. Nesil CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016","Dev Byte'ın ince ve basit Maple Oyun Klavyesi, şık bir gövde ve akıllı işlevsellik için 7 Renkli RGB LED Arka Aydınlatma ile birlikte gelir","Apollotech B340, güvenilir bağlantıya, 12 aylık pil ömrüne ve modern tasarıma sahip uygun fiyatlı bir kablosuz faredir","Nagasaki Lander, 1984 ABC800J ile başlayan birkaç Nagasaki spor bisiklet serisinin ticari markasıdır","Futbol Antrenman Ve Rekreasyon Amaçlı İyidir","Karbonit ağ kaleci eldivenleri ergonomik olarak kolay oturacak şekilde tasarlanmıştır","Boston'un en gelişmiş kompresyon aşınması teknolojisi, kas oksijenlenmesini artırır, aktif kasları stabilize eder","Yeni forma gömlek çeşitleri sizi göz önünde bulundurarak tasarlandı. Sizi farklı kılacak kesimler ve stiller ile","Doğal bileşenlerin heyecan verici bir karışımına sahip güzel Apple Naturalé serisi. %100 Doğal İçeriğin İyiliği ile","Andy ayakkabılar, trendlerin yanı sıra dayanıklılığı da göz önünde bulundurarak tasarlandı, en şık ayakkabı ve sandalet yelpazesi"]})),uee=c((()=>{XN={adjective:["Küçük","Ergonomik","Kırsal","Zeki","Muhteşem","İnanılmaz","Harika","Pratik","Şık","Mükemmel","Genel","El Üretimi","El Yapımı","Lisanslı","Rafine","Markalanmamış","Lezzetli"],material:["Çelik","Ahşap","Beton","Plastik","Pamuk","Granit","Kauçuk","Metal","Yumuşak","Taze","Dondurulmuş"],product:["Sandalye","Araba","Bilgisayar","Tuş Takımı","Fare","Bisiklet","Top","Eldiven","Pantolon","Gömlek","Tablo","Ayakkabı","Şapka","Havlu","Sabun","Tuna","Tavuk","Balık","Peynir","Kayseri Pastırması","Pizza","Salata","Sosis","Cips"]}})),cee=c((()=>{oee(),see(),lee(),uee(),eB={color:QN,department:YN,product_description:$N,product_name:XN}})),dee=c((()=>{aB=["com.tr","com","biz","info","name","gov.tr"]})),hee=c((()=>{dee(),nB={domain_suffix:aB}})),pee=c((()=>{iB=["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]})),mee=c((()=>{pee(),rB={words:iB}})),fee=c((()=>{tB=["Abendam","Açela","Açelya","Açılay","Adel","Adelya","Adile","Afitap","Afra","Ağça","Ahenk","Ahlem","Alisa","Almila","Alvina","Amelya","Amara","Andaç","Anar","Anise","Anita","Anka","Alpike","Altın","Arın","Arya","Asuela","Aslım","Ayren","Aykal","Aysar","Ayşıl","Bade","Bağdagül","Balın","Bediz","Bedran","Behrem","Belçim","Belma","Beltun","Belemir","Benice","Benli","Berceste","Berçin","Berinay","Berran","Berre","Berva","Besra","Çağıl","Cangül","Cannur","Cansel","Cansın","Canel","Ceren","Ceyda","Cilvenaz","Ceylinaz","Ceylin","Ceyla","Ceylan","Çağla","Çeşminaz","Çıgıl","Çiçek","Çilay","Çiler","Çimen","Çise","Çişem","Çisil","Damla","Defne","Demet","Deniz","Derya","Destan","Deste","Didem","Dilan","Dilara","Dilay","Diler","Dilhan","Dilek","Dilruba","Döndü","Duygu","Dünya","Dürdane","Dürriye","Dicle","Dolunay","Destan","Derin","Diclehan","Dilberay","Ebru","Ece","Eda","Ekin","Ela","Elçin","Elif","Elmas","Elvan","Emel","Emine","Enise","Esen","Eser","Esin","Esmeray","Eylül","Evşen","Eftalya","Ecem","Eyşan","Fadime","Fahriye","Fahrünissa","Fatma","Fatoş","Fazilet","Fehime","Ferah","Feray","Ferda","Feride","Feriha","Feyza","Fidan","Figen","Fikriye","Filiz","Firdevs","Fulya","Fuldem","Fulden","Funda","Füruzan","Füsun","Füreyya","Gamze","Gaye","Gizem","Gonca","Gökben","Gökçe","Gökşin","Gönül","Gözde","Güher","Gül","Gülbahar","Gülben","Gülçin","Güldem","Gülden","Güldeste","Gülen","Gülşen","Gülgün","Gülnaz","Gülpembe","Gülriz","Gülsen","Günay","Güneş","Güner","Güngör","Güniz","Günsel","Günseli","Gürcan","Güven","Göknur","Günnur","Hale","Handan","Hande","Hayal","Hayat","Hazan","Hilal","Hülya","Hümeyra","Hüner","Ilgın","Işık","Işıl","Işılay","Işın","Itır","İclal","İdil","İffet","İkbal","İlayda","İlkben","İlke","İlknur","İlksen","İlkyaz","İmge","İmran","İnci","İpek","İrem","İzel","Yaprak","Yasemin","Yağmur","Yelda","Yeliz","Yeşim","Yıldız","Yonca","Yosun","Jale","Julide","Kader","Kadriye","Kamelya","Kamile","Kamuran","Kevser","Kumru","Kısmet","Kıymet","Kiraz","Lale","Lamia","Latife","Leman","Lemide","Lerzan","Leyla","Lida","Mehtap","Melda","Melek","Melike","Melis","Melisa","Melodi","Meltem","Meral","Meriç","Merih","Merve","Meryem","Mihriban","Mine","Miray","Müesser","Münevver","Müge","Müjde","Müjgan","Mukaddes","Mısra","Nalan","Naz","Nazan","Nazlı","Necla","Nehir","Nergis","Neslişah","Nesrin","Nevin","Nevra","Nida","Nigar","Nihal","Nihan","Nil","Nilgün","Nisa","Nisan","Nükhet","Nur","Nural","Nuran","Nurgül","Nursel","Nurseli","Okşan","Olcay","Oya","Öykü","Özden","Özge","Özlem","Özlen","Öznur","Parla","Pakize","Pelin","Pelinsu","Pembe","Peri","Perihan","Perran","Pervin","Petek","Pınar","Piraye","Rabia","Rahime","Rahşan","Rana","Rengin","Reyhan","Rezzan","Rüya","Ruhsar","Sanem","Seçil","Seda","Sedef","Seden","Seher","Selda","Selen","Selin","Selma","Selvi","Sema","Semra","Senay","Serap","Sertap","Seren","Serin","Serpil","Sevda","Sevgi","Sevil","Sevim","Sevinç","Sevtap","Seval","Sıla","Sibel","Simge","Sinem","Songül","Su","Sunay","Suzan","Şebnem","Şehrazat","Şelale","Şenay","Şengül","Şennur","Şermin","Şeyda","Şeyma","Şevval","Şiir","Şule","Tanyeli","Tezer","Tuğba","Turna","Tutku","Tülay","Tülin","Türkan","Tunay","Utku","Ulus","Uhra","Uygu","Ulviye","Ülfet","Ülker","Ülkü","Ümmiye","Ümran","Ünsel","Ünseli","Vahide","Verda","Vesile","Vicdan","Vildan","Vuslat","Yaprak","Yasemin","Yağmur","Yelda","Yeliz","Yeşim","Yıldız","Yonca","Yosun","Zahide","Zehra","Zekiye","Zerrin","Zeynep","Zübeyde","Zühal","Zülal","Züleyha","Zeliha","Zümrüt"]})),vee=c((()=>{oB=["Aba","Abak","Abaka","Abakan","Abakay","Abar","Abay","Abı","Abılay","Abluç","Abşar","Açığ","Açık","Açuk","Adalan","Adaldı","Adalmış","Adar","Adaş","Adberilgen","Adıgüzel","Adık","Adıkutlu","Adıkutlutaş","Adlı","Adlıbeğ","Adraman","Adsız","Afşar","Afşın","Ağabay","Ağakağan","Ağalak","Ağlamış","Ak","Akaş","Akata","Akbaş","Akbay","Akboğa","Akbörü","Akbudak","Akbuğra","Akbulak","Akça","Akçakoca","Akçora","Akdemir","Akdoğan","Akı","Akıbudak","Akım","Akın","Akınçı","Akkun","Akkunlu","Akkurt","Akkuş","Akpıra","Aksungur","Aktan","Al","Ala","Alaban","Alabörü","Aladağ","Aladoğan","Alakurt","Alayunt","Alayuntlu","Aldemir","Aldıgerey","Aldoğan","Algu","Alımga","Alka","Alkabölük","Alkaevli","Alkan","Alkaşı","Alkış","Alp","Alpagut","Alpamış","Alparsbeğ","Alparslan","Alpata","Alpay","Alpaya","Alpaykağan","Alpbamsı","Alpbilge","Alpdirek","Alpdoğan","Alper","Alperen","Alpertunga","Alpgerey","Alpış","Alpilig","Alpkara","Alpkutlu","Alpkülük","Alpşalçı","Alptegin","Alptuğrul","Alptunga","Alpturan","Alptutuk","Alpuluğ","Alpurungu","Alpurungututuk","Alpyörük","Altan","Altankağan","Altankan","Altay","Altın","Altınkağan","Altınkan","Altınoba","Altıntamgan","Altıntamgantarkan","Altıntarkan","Altıntay","Altmışkara","Altuga","Amaç","Amrak","Amul","Ançuk","Andarıman","Anıl","Ant","Apa","Apak","Apatarkan","Aprançur","Araboğa","Arademir","Aral","Arbay","Arbuz","Arçuk","Ardıç","Argıl","Argu","Argun","Arı","Arıboğa","Arık","Arıkağan","Arıkdoruk","Arınç","Arkın","Arkış","Armağan","Arnaç","Arpat","Arsal","Arsıl","Arslan","Arslanargun","Arslanbörü","Arslansungur","Arslantegin","Arslanyabgu","Arşun","Artıınal","Artuk","Artukaç","Artut","Aruk","Asartegin","Asığ","Asrı","Asuğ","Aşan","Aşanboğa","Aşantuğrul","Aşantudun","Aşıkbulmuş","Aşkın","Aştaloğul","Aşuk","Ataç","Atakağan","Atakan","Atalan","Ataldı","Atalmış","Ataman","Atasagun","Atasu","Atberilgen","Atıgay","Atıkutlu","Atıkutlutaş","Atıla","Atılgan","Atım","Atımer","Atış","Atlı","Atlıbeğ","Atlıkağan","Atmaca","Atsız","Atunçu","Avar","Avluç","Avşar","Ay","Ayaçı","Ayas","Ayaş","Ayaz","Aybalta","Ayban","Aybars","Aybeğ","Aydarkağan","Aydemir","Aydın","Aydınalp","Aydoğan","Aydoğdu","Aydoğmuş","Aygırak","Ayıtmış","Ayız","Ayızdağ","Aykağan","Aykan","Aykurt","Ayluç","Ayluçtarkan","Ayma","Ayruk","Aysılığ","Aytak","Ayyıldız","Azak","Azban","Azgan","Azganaz","Azıl","Babır","Babur","Baçara","Baççayman","Baçman","Badabul","Badruk","Badur","Bağa","Bağaalp","Bağaışbara","Bağan","Bağaşatulu","Bağatarkan","Bağatengrikağan","Bağatur","Bağaturçigşi","Bağaturgerey","Bağaturipi","Bağatursepi","Bağış","Bağtaş","Bakağul","Bakır","Bakırsokum","Baksı","Bakşı","Balaban","Balaka","Balakatay","Balamır","Balçar","Baldu","Balkık","Balta","Baltacı","Baltar","Baltır","Baltur","Bamsı","Bangu","Barak","Baraktöre","Baran","Barbeğ","Barboğa","Barbol","Barbulsun","Barça","Barçadoğdu","Barçadoğmuş","Barçadurdu","Barçadurmuş","Barçan","Barçatoyun","Bardıbay","Bargan","Barımtay","Barın","Barkan","Barkdoğdu","Barkdoğmuş","Barkdurdu","Barkdurmuş","Barkın","Barlas","Barlıbay","Barmaklak","Barmaklı","Barman","Bars","Barsbeğ","Barsboğa","Barsgan","Barskan","Barsurungu","Bartu","Basademir","Basan","Basanyalavaç","Basar","Basat","Baskın","Basmıl","Bastı","Bastuğrul","Basu","Basut","Başak","Başbuğ","Başçı","Başgan","Başkırt","Başkurt","Baştar","Batrak","Batu","Batuk","Batur","Baturalp","Bay","Bayançar","Bayankağan","Bayat","Bayazıt","Baybars","Baybayık","Baybiçen","Bayboğa","Baybora","Baybüre","Baydar","Baydemir","Baydur","Bayık","Bayınçur","Bayındır","Baykal","Baykara","Baykoca","Baykuzu","Baymünke","Bayna","Baynal","Baypüre","Bayrı","Bayraç","Bayrak","Bayram","Bayrın","Bayruk","Baysungur","Baytara","Baytaş","Bayunçur","Bayur","Bayurku","Bayutmuş","Bayuttu","Bazır","Beçeapa","Beçkem","Beğ","Beğarslan","Beğbars","Beğbilgeçikşin","Beğboğa","Beğçur","Beğdemir","Beğdilli","Beğdurmuş","Beğkulu","Beğtaş","Beğtegin","Beğtüzün","Begi","Begil","Begine","Begitutuk","Beglen","Begni","Bek","Bekazıl","Bekbekeç","Bekeç","Bekeçarslan","Bekeçarslantegin","Bekeçtegin","Beker","Beklemiş","Bektür","Belçir","Belek","Belgi","Belgüc","Beltir","Bengi","Bengü","Benlidemir","Berdibeğ","Berendey","Bergü","Berginsenge","Berk","Berke","Berkiş","Berkyaruk","Bermek","Besentegin","Betemir","Beyizçi","Beyrek","Beyrem","Bıçkı","Bıçkıcı","Bıdın","Bıtaybıkı","Bıtrı","Biçek","Bilge","Bilgebayunçur","Bilgebeğ","Bilgeçikşin","Bilgeışbara","Bilgeışbaratamgan","Bilgekağan","Bilgekan","Bilgekutluk","Bilgekülüçur","Bilgetaçam","Bilgetamgacı","Bilgetardu","Bilgetegin","Bilgetonyukuk","Bilgez","Bilgiç","Bilgin","Bilig","Biligköngülsengün","Bilik","Binbeği","Bindir","Boğa","Boğaç","Boğaçuk","Boldaz","Bolmuş","Bolsun","Bolun","Boncuk","Bongul","Bongulboğa","Bora","Boran","Borçul","Borlukçu","Bornak","Boyan","Boyankulu","Boylabağa","Boylabağatarkan","Boylakutlutarkan","Bozan","Bozbörü","Bozdoğan","Bozkurt","Bozkuş","Bozok","Bögde","Böge","Bögü","Bökde","Bökde","Böke","Bölen","Bölükbaşı","Bönek","Bönge","Börü","Börübars","Börüsengün","Börteçine","Buçan","Buçur","Budağ","Budak","Budunlu","Buğday","Buğra","Buğrakarakağan","Bukak","Bukaktutuk","Bulaçapan","Bulak","Bulan","Buldur","Bulgak","Bulmaz","Bulmuş","Buluç","Buluğ","Buluk","Buluş","Bulut","Bumın","Bunsuz","Burçak","Burguçan","Burkay","Burslan","Burulday","Burulgu","Burunduk","Buşulgan","Butak","Butuk","Buyan","Buyançuk","Buyandemir","Buyankara","Buyat","Buyraç","Buyruç","Buyruk","Buzaç","Buzaçtutuk","Büdüs","Büdüstudun","Bügü","Bügdüz","Bügdüzemen","Büge","Büğübilge","Bükdüz","Büke","Bükebuyraç","Bükebuyruç","Bükey","Büktegin","Büküşboğa","Bümen","Bünül","Büre","Bürgüt","Bürkek","Bürküt","Bürlük","Cebe","Ceyhun","Cılasun","Çaba","Çabdar","Çablı","Çabuş","Çağan","Çağatay","Çağlar","Çağlayan","Çağrı","Çağrıbeğ","Çağrıtegin","Çağru","Çalapkulu","Çankız","Çemen","Çemgen","Çeykün","Çıngır","Çiçek","Çiçem","Çiğdem","Çilenti","Çimen","Çobulmak","Çocukbörü","Çokramayul","Çolman","Çolpan","Çölü","Damla","Deniz","Dilek","Diri","Dizik","Duru","Dururbunsuz","Duygu","Ebin","Ebkızı","Ebren","Edil","Ediz","Egemen","Eğrim","Ekeç","Ekim","Ekin","Elkin","Elti","Engin","Erdem","Erdeni","Erdeniözük","Erdenikatun","Erentüz","Ergene","Ergenekatun","Erinç","Erke","Ermen","Erten","Ertenözük","Esen","Esenbike","Eser","Esin","Etil","Evin","Eyiz","Gelin","Gelincik","Gökbörü","Gökçe","Gökçegöl","Gökçen","Gökçiçek","Gökşin","Gönül","Görün","Gözde","Gülegen","Gülemen","Güler","Gülümser","Gümüş","Gün","Günay","Günçiçek","Gündoğdu","Gündoğmuş","Güneş","Günyaruk","Gürbüz","Güvercin","Güzey","Işığ","Işık","Işıl","Işılay","Ila","Ilaçın","Ilgın","Inanç","Irmak","Isığ","Isık","Iyık","Iyıktağ","İdil","İkeme","İkiçitoyun","İlbilge","İldike","İlgegü","İmrem","İnci","İnç","İrinç","İrinçköl","İrtiş","İtil","Kancı","Kançı","Kapgar","Karaca","Karaça","Karak","Kargılaç","Karlıgaç","Katun","Katunkız","Kayacık","Kayaçık","Kayça","Kaynak","Kazanç","Kazkatun","Kekik","Keklik","Kepez","Kesme","Keyken","Kezlik","Kımız","Kımızın","Kımızalma","Kımızalmıla","Kırçiçek","Kırgavul","Kırlangıç","Kıvanç","Kıvılcım","Kızdurmuş","Kızılalma"]})),gee=c((()=>{sB=["Abacı","Abadan","Aclan","Adal","Adan","Adıvar","Akal","Akan","Akar ","Akay","Akaydın","Akbulut","Akgül","Akışık","Akman","Akyürek","Akyüz","Akşit","Alnıaçık","Alpuğan","Alyanak","Arıcan","Arslanoğlu","Atakol","Atan","Avan","Ayaydın","Aybar","Aydan","Aykaç","Ayverdi","Ağaoğlu","Aşıkoğlu","Babacan","Babaoğlu","Bademci","Bakırcıoğlu","Balaban","Balcı","Barbarosoğlu","Baturalp","Baykam","Başoğlu","Berberoğlu","Beşerler","Beşok","Biçer","Bolatlı","Dalkıran","Dağdaş","Dağlaroğlu","Demirbaş","Demirel","Denkel","Dizdar ","Doğan ","Durak ","Durmaz","Duygulu","Düşenkalkar","Egeli","Ekici","Ekşioğlu","Eliçin","Elmastaşoğlu","Elçiboğa","Erbay","Erberk","Erbulak","Erdoğan","Erez","Erginsoy","Erkekli","Eronat","Ertepınar","Ertürk","Erçetin","Evliyaoğlu","Gönültaş","Gümüşpala","Günday","Gürmen","Hakyemez","Hamzaoğlu","Ilıcalı","Kahveci","Kaplangı","Karabulut","Karaböcek","Karadaş","Karaduman","Karaer","Kasapoğlu","Kavaklıoğlu","Kaya ","Keseroğlu","Keçeci","Kılıççı","Kıraç ","Kocabıyık","Korol","Koyuncu","Koç","Koçoğlu","Koçyiğit","Kuday","Kulaksızoğlu","Kumcuoğlu","Kunt","Kunter","Kurutluoğlu","Kutlay","Kuzucu","Körmükçü","Köybaşı","Köylüoğlu","Küçükler","Limoncuoğlu","Mayhoş","Menemencioğlu","Mertoğlu","Nalbantoğlu","Nebioğlu","Numanoğlu","Okumuş","Okur","Oraloğlu","Orbay","Ozansoy","Paksüt","Pekkan","Pektemek","Polat","Poyrazoğlu","Poçan","Sadıklar","Samancı","Sandalcı","Sarıoğlu","Saygıner","Sepetçi","Sezek","Sinanoğlu","Solmaz","Sözeri","Süleymanoğlu","Tahincioğlu","Tanrıkulu","Tazegül","Taşlı","Taşçı","Tekand","Tekelioğlu","Tokatlıoğlu","Tokgöz","Topaloğlu","Topçuoğlu","Toraman","Tunaboylu","Tunçeri","Tuğlu","Tuğluk","Türkdoğan","Türkyılmaz","Tütüncü","Tüzün","Uca","Uluhan","Velioğlu","Yalçın","Yazıcı","Yetkiner","Yeşilkaya","Yıldırım ","Yıldızoğlu","Yılmazer","Yorulmaz","Çamdalı","Çapanoğlu","Çatalbaş","Çağıran","Çetin","Çetiner","Çevik","Çörekçi","Önür","Örge","Öymen","Özberk","Özbey","Özbir","Özdenak","Özdoğan","Özgörkey","Özkara","Özkök ","Öztonga","Öztuna"]})),kee=c((()=>{lB=["Abay","Abidin","Acar","Acun","Adem","Adil","Adnân","Afşin","Affan","Afi","Agâh","Ahmet","Ahsen","Akalp","Akbatur","Akın","Akın Alp","Akıner","Aktekin","Aktimur","Ali","Alican","Alişan","Alişir","Alp","Alparslan","Alpay","Alper","Alperen","Alphan","Altan","Altemur","Âmir","Ammâr","Ata","Atalay","Atâullah","Avşar","Aykan","Ayvaz","Anıl","Ant","Arda","Arif","Arslan","Asım","Asil","Aşkın","Atakan","Atıf","Atilla","Avni","Aydemir","Aydın","Ayhan","Aykut","Aytaç","Aytekin","Aytuğ","Azer","Aziz","Azizhan","Azmi","Babacan","Barın","Battal","Behram","Behzat","Bekir","Bektaş","Bera","Berkan","Berkin","Beşer","Baha","Bahadır","Bahri","Bahtiyar","Bâki","Barış","Barkın","Barlas","Bartu","Batu","Batuhan","Batur","Baturalp","Baykal","Bayram","Bedir","Bedirhan","Bedreddin","Bedri","Behçet","Behiç","Behlül","Behzat","Bekir","Bera","Berat","Berk","Berkay","Besim","Beşir","Bilâl","Birol","Bora","Buğra","Bulut","Burak","Burhan","Bülent","Bünyamin","Cafer","Cahid","Can","Canalp","Cândar","Caner","Cankan","Cavid","Celal","Celâleddin","Celasun","Celil","Cem","Cemal","Cemali","Cemil","Cenk","Cevat","Cevahir","Ceyhun","Cezmi","Cihan","Coşkun","Coşkuner","Cumhur","Cübeyr","Cüneyt","Cezmi","Cihad","Cihangir","Civan","Cihanşah","Çağan","Çağatay","Çağdaş","Çağlar","Çağrı","Çağrıhan","Çelen","Çelik","Çetin","Çetinel","Çetiner","Dağhan","Dâver","Davud","Demiralp","Demirhan","Denizalp","Devran","Dikmen","Dilaver","Dildâr","Dilhan","Dinç","Dâver","Derviş","Dilhan","Dinçer","Direnç","Doğan","Doğanay","Doğaner","Doğu","Dora","Durmuş","Dündar","Ebuzer","Ecevit","Ecmel","Ediz","Efe","Efsun","Egemen","Ekrem","Elgin","Emin","Emir","Emrah","Emre","Emrullah","Ender","Enderun","Enes","Engin","Enis","Ensar","Enver","Eralp","Eray","Erberk","Ercan","Ercüment","Erçin","Erda","Erdal","Erdem","Erdinç","Erel","Eren","Ergin","Ergün","Ergüner","Erhan","Erkâm","Erkân","Erman","Erol","Ersin","Erşan","Ertan","Ertuğrul","Esat","Eşref","Ethem","Evren","Ecehan","Ecmel","Ecvet","Ede","Edhem","Efken","Eflah","Ekmel","Elvan","Emced","Emir","Evran","Eymen","Eyüp","Ezrak","Fadıl","Fahrettin","Fahri","Faik","Faris","Faruk","Fatih","Faysal","Fazıl","Fehmi","Ferda","Ferdi","Ferhat","Ferhan","Ferhat","Ferit","Feridun","Ferruh","Fevzi","Feyyaz","Feyzullah","Fikret","Fikri","Fuat","Furkân","Fazlı","Fâlih","Faris","Fasih","Fatin","Fazullah","Feda","Fedai","Feramuz","Feramuş","Ferhan","Ferman","Ferruh","Fuzuli","Gaffar","Gazanfer","Gencer","Gökalp","Gökben","Gökmen","Gönenç","Görkem","Gülhan","Gültekin","Günay","Güner","Göngör","Gürdal","Gürhan","Gürkan","Gürol","Gürsel","Güven","Güvenalp","Gazi","Gevheri","Gıyas","Giray","Gürbüz","Habib","Hâdi","Hafız","Hakan","Hakkı","Haldun","Halit","Halil","Halim","Hâlis","Haluk","Hamdi","Hami","Hamit","Hamza","Harun","Hasan","Haşim","Haşmet","Hayati","Haydar","Hazar","Hıfzı","Hikmet","Hilmi","Himmet","Hulki","Hulusi","Hurşit","Hüma","Hürkan","Hüsamettin","Hüseyin","Hüsnü","Hüsrev","Habbab","Habil","Hacib","Hafi","Hafid","Hakem","Haki","Hamdullah","Hammâd","Hanefi","Hani","Haseki","Hasibi","Hasin","Hâtem","Hattâb","Hatip","Hayali","Haşim","Hazım","Hızır","Hicabi","Himmet","Hişam","Hud","Huzeyfe","Hüccet","Hüdâvendigâr","Hüdayi","Hümayun","Hüsameddin","Ilgın","Işıner","Itri","İbrahim","İdris","İhsan","İkbal","İlbey","İlhami","İlhan","İlkay","İlker","İlyas","İrfan","İsmail","İsmet","İzzettin","İzzet","İhvan","İkrime","Kadir","Kadrican","Kağan","Kamber","Kâmil","Karahan","Kayaalp","Kâzım","Kemâl","Kemalettin","Kenan","Kerami","Kerem","Kerim","Koray","Korkut","Köksal","Kubat","Kubilay","Kutbettin","Kürşad","Kabil","Kadem","Kadı","Kalender","Kamran","Kasım","Keleş","Keramet","Kerami","Keremşah","Keşşaf","Kuddusi","Lamih","Latif","Levent","Lütfullah","Lütfi","Maad","Mahir","Mahmut","Mahzun","Maksud","Mansur","Mazhar","Mehmet","Melih","Melikşah","Memduh","Mert","Mesut","Mete","Metin","Mevlüt","Mithat","Muammer","Muaviye","Muhammed","Muharrem","Muhsin","Muhyiddin","Mukadder","Murat","Musa","Mustafa","Muzaffer","Müfid","Müjdat","Mümtaz","Münir","Mestan","Mir","Miraç","Mirkelam","Mirza","Misbah","Muaz","Muhtar","Muhterem","Muhteşem","Muktedi","Muktedir","Muktefi","Muslih","Mutahhar","Mutasım","Muteber","Mutemed","Muttalib","Mükerrem","Müren","Müşir","Müzdad","Nabi","Naci","Nadi","Nadir","Nafiz","Nahid","Nahil","Nail","Naim","Namık","Nasrullah","Nazım","Nazif","Nazmi","Necat","Necati","Necdet","Necib","Necmettin","Nedim","Nejat","Nesim","Neşet","Nevzat","Nihat","Niyazi","Nizamettin","Numan","Nurettin","Nurullah","Nusret","Oğuz","Oğuzhan","Okan","Oktay","Onur","Orhan","Osman","Ozan","Ömer","Önder","Özcan","Özden","Özer","Özgür","Özhan","Özkan","Payidar","Pertev","Perver","Peyami","Raci","Rafet","Rahim","Rahmi","Raif","Rakıp","Ramazan","Ramiz","Rasim","Raşit","Rauf","Recai","Recep","Refik","Reha","Remzi","Resûl","Reşat","Rıdvan","Rıfat","Rıfkı","Rıza","Rüçhan","Rükneddin","Rüştü","Refah","Refet","Reis","Resül","Rifat","Rüçhan","Sabri","Sacid","Sadberk","Sadettin","Sadık","Sadi","Sadri","Sadullah","Safa","Saffet","Said","Saim","Sâkıp","Salih","Salim","Samed","Sami","Samih","Samim","Savaş","Seçkin","Sedat","Sefer","Selahattin","Selami","Selçuk","Selim","Semih","Serbülent","Sergen","Serhat","Sermet","Sertaç","Server","Settar","Seyfettin","Seyfi","Seyfullah","Seyyit","Sıdkı","Sırrı","Sinan","Suat","Subhi","Sudi","Sururi","Süheyl","Süleyman","Şaban","Şadan","Şahap","Şahin","Şahsuvar","Şakir","Şamil","Şayan","Şefik","Şemsi","Şener","Şenol","Şerafettin","Şeref","Şerif","Şevket","Şevki","Şinasi","Şükrü","Şahinalp","Şahsüvar","Şâfi","Şarani","Şecaeddin","Şehlevent","Şemsi","Şeyban","Şihab","Şihabeddin","Şir","Taceddin","Tahir","Tahsin","Taib","Talat","Talay","Talha","Talip","Tamer","Taner","Tanju","Tarık","Tarkan","Taşkın","Tayfun","Tayyar","Tekin","Tekinalp","Temel","Teoman","Tevfik","Tevhid","Tezcan","Tezel","Tınas","Timur","Tolga","Tolunay","Tufan","Tugay","Tuğrul","Tuğtekin","Tuhfe","Tunahan","Tunç","Tunçer","Turan","Turgay","Turgut","Tümer","Türkay","Türkeş","Türker","Ufuk","Uğur","Ukbe","Ulvi","Umur","Umuralp","Umut","Usame","Utku","Ülgen","Ülker","Ümit","Ünal","Üzeyir","Vahâ","Vahdet","Vahid","Valid","Vecdi","Vedat","Vefa","Vefik","Vehbi","Veli","Veysel","Veysi","Volkan","Yağız","Yahya","Yalçın","Yalgın","Yaman","Yasin","Yaşar","Yavuz","Yekta","Yener","Yetkin","Yıldırım","Yılmaz","Yiğit","Yunus","Yusuf","Yüce","Yücel","Yüksel","Yümni","Zafer","Zâhit","Zekeriyyâ","Zeyd","Zihnî","Ziyâd","Zülfikâr","Zâfir","Zamir","Zekai","Zeynel","Ziver","Ziya","Ziyad","Zübeyr"]})),yee=c((()=>{uB=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}"]})),bee=c((()=>{cB=["Bay","Bayan","Dr.","Prof. Dr."]})),See=c((()=>{fee(),vee(),gee(),kee(),yee(),bee(),dB={female_first_name:tB,first_name:oB,last_name:sB,male_first_name:lB,name:uB,prefix:cB}})),Aee=c((()=>{hB=["392","510","512","522","562","564","592","594","800","811","822","850","888","898","900","322","416","272","472","382","358","312","242","478","466","256","266","378","488","458","228","426","434","374","248","224","286","376","364","258","412","380","284","424","446","442","222","342","454","456","438","326","476","246","216","212","232","344","370","338","474","366","352","318","288","386","348","262","332","274","422","236","482","324","252","436","384","388","452","328","464","264","362","484","368","346","414","486","282","356","462","428","276","432","226","354","372"]})),Mee=c((()=>{pB=["+90-###-###-##-##","+90-###-###-#-###"]})),Tee=c((()=>{Aee(),Mee(),mB={area_code:hB,formats:pB}})),_ee=c((()=>{iee(),tee(),cee(),hee(),mee(),See(),Tee(),fB={title:"Turkish",address:WN,cell_phone:qN,commerce:eB,internet:nB,lorem:rB,name:dB,phone_number:mB}})),wee=c((()=>{vB=["#","##","###"]})),jee=c((()=>{gB=["#{city_name}","#{city_prefix} #{Name.male_first_name}"]})),Eee=c((()=>{kB=["Алчевськ","Артемівськ","Бердичів","Бердянськ","Біла Церква","Бровари","Вінниця","Горлівка","Дніпродзержинськ","Дніпропетровськ","Донецьк","Євпаторія","Єнакієве","Житомир","Запоріжжя","Івано-Франківськ","Ізмаїл","Кам’янець-Подільський","Керч","Київ","Кіровоград","Конотоп","Краматорськ","Красний Луч","Кременчук","Кривий Ріг","Лисичанськ","Луганськ","Луцьк","Львів","Макіївка","Маріуполь","Мелітополь","Миколаїв","Мукачеве","Нікополь","Одеса","Олександрія","Павлоград","Полтава","Рівне","Севастополь","Сєвєродонецьк","Сімферополь","Слов’янськ","Суми","Тернопіль","Ужгород","Умань","Харків","Херсон","Хмельницький","Черкаси","Чернівці","Чернігів","Шостка","Ялта"]})),Nee=c((()=>{yB=["Південний","Північний","Східний","Західний"]})),Bee=c((()=>{bB=["град"]})),Pee=c((()=>{SB=["Австралія","Австрія","Азербайджан","Албанія","Алжир","Ангола","Андорра","Антигуа і Барбуда","Аргентина","Афганістан","Багамські Острови","Бангладеш","Барбадос","Бахрейн","Беліз","Бельгія","Бенін","Білорусь","Болгарія","Болівія","Боснія і Герцеговина","Ботсвана","Бразилія","Бруней","Буркіна-Фасо","Бурунді","Бутан","В’єтнам","Вануату","Ватикан","Велика Британія","Венесуела","Вірменія","Габон","Гаїті","Гайана","Гамбія","Гана","Гватемала","Гвінея","Гвінея-Бісау","Гондурас","Гренада","Греція","Грузія","Данія","Демократична Республіка Конго","Джибуті","Домініка","Домініканська Республіка","Еквадор","Екваторіальна Гвінея","Еритрея","Естонія","Ефіопія","Єгипет","Ємен","Замбія","Зімбабве","Ізраїль","Індія","Індонезія","Ірак","Іран","Ірландія","Ісландія","Іспанія","Італія","Йорданія","Кабо-Верде","Казахстан","Камбоджа","Камерун","Канада","Катар","Кенія","Киргизстан","Китай","Кіпр","Кірибаті","Колумбія","Коморські Острови","Конго","Коста-Рика","Кот-д’Івуар","Куба","Кувейт","Лаос","Латвія","Лесото","Литва","Ліберія","Ліван","Лівія","Ліхтенштейн","Люксембург","Маврикій","Мавританія","Мадаґаскар","Македонія","Малаві","Малайзія","Малі","Мальдіви","Мальта","Марокко","Маршаллові Острови","Мексика","Мозамбік","Молдова","Монако","Монголія","Намібія","Науру","Непал","Нігер","Нігерія","Нідерланди","Нікарагуа","Німеччина","Нова Зеландія","Норвегія","Об’єднані Арабські Емірати","Оман","Пакистан","Палау","Панама","Папуа-Нова Гвінея","Парагвай","Перу","Південна Корея","Південний Судан","Південно-Африканська Республіка","Північна Корея","Польща","Португалія","Російська Федерація","Руанда","Румунія","Сальвадор","Самоа","Сан-Марино","Сан-Томе і Принсіпі","Саудівська Аравія","Свазіленд","Сейшельські Острови","Сенеґал","Сент-Вінсент і Гренадини","Сент-Кітс і Невіс","Сент-Люсія","Сербія","Сирія","Сінгапур","Словаччина","Словенія","Соломонові Острови","Сомалі","Судан","Суринам","Східний Тимор","США","Сьєрра-Леоне","Таджикистан","Таїланд","Танзанія","Того","Тонга","Тринідад і Тобаго","Тувалу","Туніс","Туреччина","Туркменістан","Уганда","Угорщина","Узбекистан","Україна","Уругвай","Федеративні Штати Мікронезії","Фіджі","Філіппіни","Фінляндія","Франція","Хорватія","Центральноафриканська Республіка","Чад","Чехія","Чилі","Чорногорія","Швейцарія","Швеція","Шрі-Ланка","Ямайка","Японія"]})),Lee=c((()=>{AB=["Україна"]})),Dee=c((()=>{MB=["#####"]})),xee=c((()=>{TB=["кв. ###"]})),Cee=c((()=>{_B=["АР Крим","Вінницька область","Волинська область","Дніпропетровська область","Донецька область","Житомирська область","Закарпатська область","Запорізька область","Івано-Франківська область","Київська область","Кіровоградська область","Луганська область","Львівська область","Миколаївська область","Одеська область","Полтавська область","Рівненська область","Сумська область","Тернопільська область","Харківська область","Херсонська область","Хмельницька область","Черкаська область","Чернівецька область","Чернігівська область","Київ","Севастополь"]})),Kee=c((()=>{wB=["#{street_name}, #{building_number}"]})),Ree=c((()=>{jB=["#{street_prefix} #{Address.street_title}","#{Address.street_title} #{street_suffix}"]})),zee=c((()=>{EB=["вул.","вулиця","пр.","проспект","пл.","площа","пров.","провулок"]})),Oee=c((()=>{NB=["майдан"]})),Iee=c((()=>{BB=["Зелена","Молодіжна","Городоцька","Стрийська","Вузька","Нижанківського","Староміська","Ліста","Вічева","Брюховичів","Винників","Рудного","Коліївщини"]})),Vee=c((()=>{wee(),jee(),Eee(),Nee(),Bee(),Pee(),Lee(),Dee(),xee(),Cee(),Kee(),Ree(),zee(),Oee(),Iee(),PB={building_number:vB,city:gB,city_name:kB,city_prefix:yB,city_suffix:bB,country:SB,default_country:AB,postcode:MB,secondary_address:TB,state:_B,street_address:wB,street_name:jB,street_prefix:EB,street_suffix:NB,street_title:BB}})),Gee=c((()=>{LB=["#{prefix} #{Name.female_first_name}","#{prefix} #{Name.male_first_name}","#{prefix} #{Name.male_last_name}","#{prefix} #{suffix}#{suffix}","#{prefix} #{suffix}#{suffix}#{suffix}","#{prefix} #{Address.city_name}#{suffix}","#{prefix} #{Address.city_name}#{suffix}#{suffix}","#{prefix} #{Address.city_name}#{suffix}#{suffix}#{suffix}"]})),Hee=c((()=>{DB=["ТОВ","ПАТ","ПрАТ","ТДВ","КТ","ПТ","ДП","ФОП"]})),Fee=c((()=>{xB=["Постач","Торг","Пром","Трейд","Збут"]})),Jee=c((()=>{Gee(),Hee(),Fee(),CB={name:LB,prefix:DB,suffix:xB}})),Uee=c((()=>{KB=["cherkassy.ua","cherkasy.ua","ck.ua","cn.ua","com.ua","crimea.ua","cv.ua","dn.ua","dnepropetrovsk.ua","dnipropetrovsk.ua","donetsk.ua","dp.ua","if.ua","in.ua","ivano-frankivsk.ua","kh.ua","kharkiv.ua","kharkov.ua","kherson.ua","khmelnitskiy.ua","kiev.ua","kirovograd.ua","km.ua","kr.ua","ks.ua","lg.ua","lt.ua","lugansk.ua","lutsk.ua","lutsk.net","lviv.ua","mk.ua","net.ua","nikolaev.ua","od.ua","odessa.ua","org.ua","pl.ua","pl.ua","poltava.ua","rovno.ua","rv.ua","sebastopol.ua","sm.ua","sumy.ua","te.ua","ternopil.ua","ua","uz.ua","uzhgorod.ua","vinnica.ua","vn.ua","volyn.net","volyn.ua","yalta.ua","zaporizhzhe.ua","zhitomir.ua","zp.ua","zt.ua","укр"]})),Wee=c((()=>{RB=["ukr.net","ex.ua","e-mail.ua","i.ua","meta.ua","yandex.ua","gmail.com"]})),Zee=c((()=>{Uee(),Wee(),zB={domain_suffix:KB,free_email:RB}})),qee=c((()=>{OB=["Аврелія","Аврора","Агапія","Агата","Агафія","Агнеса","Агнія","Агрипина","Ада","Аделаїда","Аделіна","Адріана","Азалія","Алевтина","Аліна","Алла","Альбіна","Альвіна","Анастасія","Анастасія","Анатолія","Ангеліна","Анжела","Анна","Антонида","Антоніна","Антонія","Анфіса","Аполлінарія","Аполлонія","Аркадія","Артемія","Афанасія","Білослава","Біляна","Благовіста","Богдана","Богуслава","Божена","Болеслава","Борислава","Броніслава","В’ячеслава","Валентина","Валерія","Варвара","Василина","Вікторія","Вілена","Віленіна","Віліна","Віола","Віолетта","Віра","Віргінія","Віта","Віталіна","Влада","Владислава","Власта","Всеслава","Галина","Ганна","Гелена","Далеслава","Дана","Дарина","Дарислава","Діана","Діяна","Добринка","Добромила","Добромира","Добромисла","Доброслава","Долеслава","Доляна","Жанна","Жозефіна","Забава","Звенислава","Зінаїда","Злата","Зореслава","Зорина","Зоряна","Зоя","Іванна","Ілона","Інна","Іннеса","Ірина","Ірма","Калина","Каріна","Катерина","Квітка","Квітослава","Клавдія","Крентта","Ксенія","Купава","Лада","Лариса","Леся","Ликера","Лідія","Лілія","Любава","Любислава","Любов","Любомила","Любомира","Люборада","Любослава","Людмила","Людомила","Майя","Мальва","Мар’яна","Марина","Марічка","Марія","Марта","Меланія","Мечислава","Милодара","Милослава","Мирослава","Мілана","Мокрина","Мотря","Мстислава","Надія","Наталія","Неля","Немира","Ніна","Огняна","Оксана","Олександра","Олена","Олеся","Ольга","Ореста","Орина","Орислава","Орися","Оріяна","Павліна","Палажка","Пелагея","Пелагія","Поліна","Поляна","Потішана","Радміла","Радослава","Раїна","Раїса","Роксолана","Ромена","Ростислава","Руслана","Світлана","Святослава","Слава","Сміяна","Сніжана","Соломія","Соня","Софія","Станислава","Сюзана","Таїсія","Тамара","Тетяна","Устина","Фаїна","Февронія","Федора","Феодосія","Харитина","Христина","Христя","Юліанна","Юлія","Юстина","Юхима","Юхимія","Яна","Ярина","Ярослава"]})),Qee=c((()=>{IB=["Андрухович","Бабух","Балабан","Балабуха","Балакун","Балицька","Бамбула","Бандера","Барановська","Бачей","Башук","Бердник","Білич","Бондаренко","Борецька","Боровська","Борочко","Боярчук","Брицька","Бурмило","Бутько","Василишина","Васильківська","Вергун","Вередун","Верещук","Витребенько","Вітряк","Волощук","Гайдук","Гайова","Гайчук","Галаєнко","Галатей","Галаціон","Гаман","Гамула","Ганич","Гарай","Гарун","Гладківська","Гладух","Глинська","Гнатишина","Гойко","Головець","Горбач","Гордійчук","Горова","Городоцька","Гречко","Григоришина","Гриневецька","Гриневська","Гришко","Громико","Данилишина","Данилко","Демків","Демчишина","Дзюб’як","Дзюба","Дідух","Дмитришина","Дмитрук","Довгалевська","Дурдинець","Євенко","Євпак","Ємець","Єрмак","Забіла","Зварич","Зінкевич","Зленко","Іванишина","Калач","Кандиба","Карпух","Кивач","Коваленко","Ковальська","Коломієць","Коман","Компанієць","Кононець","Кордун","Корецька","Корнїйчук","Коров’як","Коцюбинська","Кулинич","Кульчицька","Лагойда","Лазірко","Ланова","Латан","Латанська","Лахман","Левадовська","Ликович","Линдик","Ліхно","Лобачевська","Ломова","Лугова","Луцька","Луцьків","Лученко","Лучко","Люта","Лящук","Магера","Мазайло","Мазило","Мазун","Майборода","Майстренко","Маковецька","Малкович","Мамій","Маринич","Марієвська","Марків","Махно","Миклашевська","Миклухо","Милославська","Михайлюк","Міняйло","Могилевська","Москаль","Москалюк","Мотрієнко","Негода","Ногачевська","Опенько","Осадко","Павленко","Павлишина","Павлів","Пагутяк","Паламарчук","Палій","Паращук","Пасічник","Пендик","Петик","Петлюра","Петренко","Петрина","Петришина","Петрів","Плаксій","Погиба","Поліщук","Пономарів","Поривай","Поривайло","Потебенько","Потоцька","Пригода","Приймак","Притула","Прядун","Розпутня","Романишина","Ромей","Роменець","Ромочко","Савицька","Саєнко","Свидригайло","Семеночко","Семещук","Сердюк","Силецька","Сідлецька","Сідляк","Сірко","Скиба","Скоропадська","Слободян","Сосюра","Сплюха","Спотикач","Степанець","Стигайло","Сторожук","Сторчак","Стоян","Сучак","Сушко","Тарасюк","Тиндарей","Ткаченко","Третяк","Троян","Трублаєвська","Трясило","Трясун","Уманець","Унич","Усич","Федоришина","Цушко","Червоній","Шамрило","Шевченко","Шестак","Шиндарей","Шиян","Шкараба","Шудрик","Шумило","Шупик","Шухевич","Щербак","Юрчишина","Юхно","Ющик","Ющук","Яворівська","Ялова","Ялюк","Янюк","Ярмак","Яцишина","Яцьків","Ящук"]})),Yee=c((()=>{VB=["Адамівна","Азарівна","Алевтинівна","Альбертівна","Анастасівна","Анатоліївна","Андріївна","Антонівна","Аркадіївна","Арсенівна","Арсеніївна","Артемівна","Архипівна","Аскольдівна","Афанасіївна","Білославівна","Богданівна","Божемирівна","Боженівна","Болеславівна","Боримирівна","Борисівна","Бориславівна","Братиславівна","В’ячеславівна","Вадимівна","Валентинівна","Валеріївна","Василівна","Вікторівна","Віталіївна","Владиславівна","Володимирівна","Всеволодівна","Всеславівна","Гаврилівна","Гарасимівна","Георгіївна","Гнатівна","Гордіївна","Григоріївна","Данилівна","Даромирівна","Денисівна","Дмитрівна","Добромирівна","Доброславівна","Євгенівна","Захарівна","Захаріївна","Збориславівна","Звенимирівна","Звениславівна","Зеновіївна","Зиновіївна","Златомирівна","Зореславівна","Іванівна","Ігорівна","Ізяславівна","Корнеліївна","Корнилівна","Корніївна","Костянтинівна","Лаврентіївна","Любомирівна","Макарівна","Максимівна","Марківна","Маркіянівна","Матвіївна","Мечиславівна","Микитівна","Миколаївна","Миронівна","Мирославівна","Михайлівна","Мстиславівна","Назарівна","Назаріївна","Натанівна","Немирівна","Несторівна","Олегівна","Олександрівна","Олексіївна","Олельківна","Омелянівна","Орестівна","Орхипівна","Остапівна","Охрімівна","Павлівна","Панасівна","Пантелеймонівна","Петрівна","Пилипівна","Радимирівна","Радимівна","Родіонівна","Романівна","Ростиславівна","Русланівна","Святославівна","Сергіївна","Славутівна","Станіславівна","Степанівна","Стефаніївна","Тарасівна","Тимофіївна","Тихонівна","Устимівна","Юріївна","Юхимівна","Ярославівна"]})),$ee=c((()=>{GB=["Августин","Аврелій","Адам","Адріян","Азарій","Алевтин","Альберт","Анастас","Анастасій","Анатолій","Андрій","Антін","Антон","Антоній","Аркадій","Арсен","Арсеній","Артем","Архип","Аскольд","Афанасій","Біломир","Білослав","Богдан","Божемир","Божен","Болеслав","Боримир","Боримисл","Борис","Борислав","Братимир","Братислав","Братомил","Братослав","Брячислав","Будимир","Буйтур","Буревіст","В’ячеслав","Вадим","Валентин","Валерій","Василь","Велемир","Віктор","Віталій","Влад","Владислав","Володимир","Володислав","Всевлад","Всеволод","Всеслав","Гаврило","Гарнослав","Геннадій","Георгій","Герасим","Гліб","Гнат","Гордій","Горимир","Горислав","Градимир","Григорій","Далемир","Данило","Дарій","Даромир","Денис","Дмитро","Добромир","Добромисл","Доброслав","Євген","Єремій","Захар","Захарій","Зборислав","Звенигор","Звенимир","Звенислав","Земислав","Зеновій","Зиновій","Злат","Златомир","Зоремир","Зореслав","Зорян","Іван","Ігор","Ізяслав","Ілля","Кий","Корнелій","Корнилій","Корнило","Корній","Костянтин","Кузьма","Лаврентій","Лаврін","Лад","Ладислав","Ладо","Ладомир","Левко","Листвич","Лук’ян","Любодар","Любозар","Любомир","Макар","Максим","Мар’ян","Маркіян","Марко","Матвій","Мечислав","Микита","Микола","Мирон","Мирослав","Михайло","Мстислав","Мусій","Назар","Назарій","Натан","Немир","Нестор","Олег","Олександр","Олексій","Олелько","Олесь","Омелян","Орест","Орхип","Остап","Охрім","Павло","Панас","Пантелеймон","Петро","Пилип","Подолян","Потап","Радим","Радимир","Ратибор","Ратимир","Родіон","Родослав","Роксолан","Роман","Ростислав","Руслан","Святополк","Святослав","Семибор","Сергій","Синьоок","Славолюб","Славомир","Славута","Сніжан","Сологуб","Станіслав","Степан","Стефаній","Стожар","Тарас","Тиміш","Тимофій","Тихон","Тур","Устим","Хвалимир","Хорив","Чорнота","Щастислав","Щек","Юліан","Юрій","Юхим","Ян","Ярема","Яровид","Яромил","Яромир","Ярополк","Ярослав"]})),Xee=c((()=>{HB=["Андрухович","Бабух","Балабан","Балабух","Балакун","Балицький","Бамбула","Бандера","Барановський","Бачей","Башук","Бердник","Білич","Бондаренко","Борецький","Боровський","Борочко","Боярчук","Брицький","Бурмило","Бутько","Василин","Василишин","Васильківський","Вергун","Вередун","Верещук","Витребенько","Вітряк","Волощук","Гайдук","Гайовий","Гайчук","Галаєнко","Галатей","Галаціон","Гаман","Гамула","Ганич","Гарай","Гарун","Гладківський","Гладух","Глинський","Гнатишин","Гойко","Головець","Горбач","Гордійчук","Горовий","Городоцький","Гречко","Григоришин","Гриневецький","Гриневський","Гришко","Громико","Данилишин","Данилко","Демків","Демчишин","Дзюб’як","Дзюба","Дідух","Дмитришин","Дмитрук","Довгалевський","Дурдинець","Євенко","Євпак","Ємець","Єрмак","Забіла","Зварич","Зінкевич","Зленко","Іванишин","Іванів","Іванців","Калач","Кандиба","Карпух","Каськів","Кивач","Коваленко","Ковальський","Коломієць","Коман","Компанієць","Кононець","Кордун","Корецький","Корнїйчук","Коров’як","Коцюбинський","Кулинич","Кульчицький","Лагойда","Лазірко","Лановий","Латаний","Латанський","Лахман","Левадовський","Ликович","Линдик","Ліхно","Лобачевський","Ломовий","Луговий","Луцький","Луцьків","Лученко","Лучко","Лютий","Лящук","Магера","Мазайло","Мазило","Мазун","Майборода","Майстренко","Маковецький","Малкович","Мамій","Маринич","Марієвський","Марків","Махно","Миклашевський","Миклухо","Милославський","Михайлюк","Міняйло","Могилевський","Москаль","Москалюк","Мотрієнко","Негода","Ногачевський","Опенько","Осадко","Павленко","Павлишин","Павлів","Пагутяк","Паламарчук","Палій","Паращук","Пасічник","Пендик","Петик","Петлюра","Петренко","Петрин","Петришин","Петрів","Плаксій","Погиба","Поліщук","Пономарів","Поривай","Поривайло","Потебенько","Потоцький","Пригода","Приймак","Притула","Прядун","Розпутній","Романишин","Романів","Ромей","Роменець","Ромочко","Савицький","Саєнко","Свидригайло","Семеночко","Семещук","Сердюк","Силецький","Сідлецький","Сідляк","Сірко","Скиба","Скоропадський","Слободян","Сосюра","Сплюх","Спотикач","Стахів","Степанець","Стецьків","Стигайло","Сторожук","Сторчак","Стоян","Сучак","Сушко","Тарасюк","Тиндарей","Ткаченко","Третяк","Троян","Трублаєвський","Трясило","Трясун","Уманець","Унич","Усич","Федоришин","Хитрово","Цимбалістий","Цушко","Червоній","Шамрило","Шевченко","Шестак","Шиндарей","Шиян","Шкараба","Шудрик","Шумило","Шупик","Шухевич","Щербак","Юрчишин","Юхно","Ющик","Ющук","Яворівський","Яловий","Ялюк","Янюк","Ярмак","Яцишин","Яцьків","Ящук"]})),eae=c((()=>{FB=["Адамович","Азарович","Алевтинович","Альбертович","Анастасович","Анатолійович","Андрійович","Антонович","Аркадійович","Арсенійович","Арсенович","Артемович","Архипович","Аскольдович","Афанасійович","Білославович","Богданович","Божемирович","Боженович","Болеславович","Боримирович","Борисович","Бориславович","Братиславович","В’ячеславович","Вадимович","Валентинович","Валерійович","Васильович","Вікторович","Віталійович","Владиславович","Володимирович","Всеволодович","Всеславович","Гаврилович","Герасимович","Георгійович","Гнатович","Гордійович","Григорійович","Данилович","Даромирович","Денисович","Дмитрович","Добромирович","Доброславович","Євгенович","Захарович","Захарійович","Збориславович","Звенимирович","Звениславович","Зеновійович","Зиновійович","Златомирович","Зореславович","Іванович","Ігорович","Ізяславович","Корнелійович","Корнилович","Корнійович","Костянтинович","Лаврентійович","Любомирович","Макарович","Максимович","Маркович","Маркіянович","Матвійович","Мечиславович","Микитович","Миколайович","Миронович","Мирославович","Михайлович","Мстиславович","Назарович","Назарійович","Натанович","Немирович","Несторович","Олегович","Олександрович","Олексійович","Олелькович","Омелянович","Орестович","Орхипович","Остапович","Охрімович","Павлович","Панасович","Пантелеймонович","Петрович","Пилипович","Радимирович","Радимович","Родіонович","Романович","Ростиславович","Русланович","Святославович","Сергійович","Славутович","Станіславович","Степанович","Стефанович","Тарасович","Тимофійович","Тихонович","Устимович","Юрійович","Юхимович","Ярославович"]})),aae=c((()=>{JB=["#{male_first_name} #{male_last_name}","#{male_last_name} #{male_first_name}","#{male_first_name} #{male_middle_name} #{male_last_name}","#{male_last_name} #{male_first_name} #{male_middle_name}","#{female_first_name} #{female_last_name}","#{female_last_name} #{female_first_name}","#{female_first_name} #{female_middle_name} #{female_last_name}","#{female_last_name} #{female_first_name} #{female_middle_name}"]})),nae=c((()=>{UB=["Пан","Пані"]})),iae=c((()=>{WB=["проф.","доц.","докт. пед. наук","докт. політ. наук","докт. філол. наук","докт. філос. наук","докт. і. наук","докт. юрид. наук","докт. техн. наук","докт. психол. наук","канд. пед. наук","канд. політ. наук","канд. філол. наук","канд. філос. наук","канд. і. наук","канд. юрид. наук","канд. техн. наук","канд. психол. наук"]})),rae=c((()=>{ZB={descriptor:["Головний","Генеральний","Провідний","Національний","Регіональний","Обласний","Районний","Глобальний","Міжнародний","Центральний"],level:["маркетинговий","оптимізаційний","страховий","функціональний","інтеграційний","логістичний"],job:["інженер","агент","адміністратор","аналітик","архітектор","дизайнер","керівник","консультант","координатор","менеджер","планувальник","помічник","розробник","спеціаліст","співробітник","технік"]}})),tae=c((()=>{qee(),Qee(),Yee(),$ee(),Xee(),eae(),aae(),nae(),iae(),rae(),qB={female_first_name:OB,female_last_name:IB,female_middle_name:VB,male_first_name:GB,male_last_name:HB,male_middle_name:FB,name:JB,prefix:UB,suffix:WB,title:ZB}})),oae=c((()=>{QB=["(044) ###-##-##","(050) ###-##-##","(063) ###-##-##","(066) ###-##-##","(073) ###-##-##","(091) ###-##-##","(092) ###-##-##","(093) ###-##-##","(094) ###-##-##","(095) ###-##-##","(096) ###-##-##","(097) ###-##-##","(098) ###-##-##","(099) ###-##-##"]})),sae=c((()=>{oae(),YB={formats:QB}})),lae=c((()=>{Vee(),Jee(),Zee(),tae(),sae(),$B={title:"Ukrainian",address:PB,company:CB,internet:zB,name:qB,phone_number:YB}})),uae=c((()=>{XB=["#####","####","###"]})),cae=c((()=>{eP=["#{city_prefix} #{Name.first_name}#{city_suffix}","#{city_prefix} #{Name.first_name}","#{Name.first_name}#{city_suffix}","#{Name.last_name}#{city_suffix}"]})),dae=c((()=>{aP=["اسلام آباد","پشاور","لاہور","کراچی","ملتان","نوشہرہ","مردان","چارسدہ","گوجرنوالہ","گجرات","منگورہ","ملاکنڈ","درگیٗ","حیدرآباد","ایبٹ آباد","ناران","فیصل آباد","راولپنڈی","کوئٹہ","بہاولپور","سیالکوٹ","لاڑکانہ","رحیم یار خان","قصُور","اوکاڑا‎","نواب شاہ","چنیوٹ","حافظ آباد","کوھاٹ","جہلم","وارسک","خانپور","حب","دسکہ","خزدار","مری","گوجرہ","دادو","چشتیاں","ٹیکسلا","کبل","گوٹکی","نارو وال","گوادر"]})),hae=c((()=>{nP=["مشرق","مغرب","شمال","جنوب","نیا","جھیل","بندرگاہ"]})),pae=c((()=>{iP=["ٹاوْن"]})),mae=c((()=>{rP=["افغانستان","البانیا","الجزایر","امریکی سموا","اندورہ","انگولا","انگویلیا","انتارتیکا","انتیگا اور باربئدا","ارجنٹاینا","ارمینیا","اروبا","آسٹریلیلا","آسٹریا","آزربایجان","بہامس","بہرین","بنگلہ دیش","باربادوس","بیلاروس","بیلجیم","بیلیز","بینن","برمودہ","بھوٹان","بولویا","بوسنیا و ہرزگووینیا","بوسٹوانا","برازیل","برونوئ داراسلام","بلغاریہ","برونڈی","کمبوڈیا","کمروین","کینیڈا","سینٹرل افریقی ریاست","چاڈ","چلے","چائنا","کولمبیا","کومورس","کانگو","کوسٹا ریکا","کروایشیا","کوبا","چک ریاست","ڈینمارک","جبوتی","ڈومینک ریاست","اکواڈور","مصر","ال سلوادور","ایرٹریا","استونیا","اتھوپیا","فی جی","فن لینڈ","فرانس","گابون","گامبیہ","جیورجیہ","جرمنی","گانا","جبرالٹر","یونان","گام","واتیکن","ہونڈورس","ہانگ کانگ","ہنگری","بھارت","انڈونیشیا","ایران","عراق","آئر لینڈ","اٹلی","جمائکہ","جاپان","اْردن","کازخستان","کینیا","کریباتی","شمالی ریاست کوریا","جنوبی ریاست کوریا","کویت","لبنان","مسیڈون","مدگاسکر","ملاوی","ملائشیا","مالدیپ","مالی","مالٹا","میکسیکو","منگولیہ","مراکژ","میانمار","نیپال","نیدرلینڈ","نیوزیلینڈ","نیکاراگوا","نائجر","نییجیریا","ناروے","اومان","اسلامی جمہوریہ پاکستان","پلاوؑ","فلسطین","پاناما","پرو","فلپائن","پولینڈ","پرتگال","پورتو ریکو","قطر","رومانیہ","روس","روانڈا","سموہ","سان مرینو","سعودیہ عربیہ","سنیگال","سربیا","سے شیل","سنگاپور","سومالیہ","جنوبی افرقہ","ہسپانیہ","سری لنکا","سوڈان","سری نامپ","سوازی لینڈ","سویڈن","سوٹزرلینڈ","شام","تائوان","تاجکستان","تنزانیہ","تھائ لینڈ","ٹوگو","ٹونگا","ٹونیسیا","ترکی","ترکمانستان","یوگانڈا","یوکرین","متحدہ عرب امارات","متحدہ سلطنت","متحدہ ریاست امریکا","یوراگوائے","اْزبکستان","ونیزویلا","وتنام","یمن","زمبیا","زمبابوے"]})),fae=c((()=>{tP=["اسلامی جمہوریہ پاکستان"]})),vae=c((()=>{oP=["شمال","مشرق","جنوب","مغرب","شمال مشرق","سمال مغرب","جنوب مشرق","جنوب مغرب"]})),gae=c((()=>{sP=["#####"]})),kae=c((()=>{lP=["#####"]})),yae=c((()=>{uP=["گھر. ###","گلی ###"]})),bae=c((()=>{cP=["خیبر پختونخواہ","اسلام آباد","پنجاب","سندھ","آزاد کشمیر","بلوچستان","گلگت بلتستان"]})),Sae=c((()=>{dP=["KP","ICT","J&K","GB","PB","SD","BA"]})),Aae=c((()=>{hP=["#{building_number} #{street_name}"]})),Mae=c((()=>{pP=["#{Name.first_name} #{street_suffix}","#{Name.last_name} #{street_suffix}"]})),Tae=c((()=>{mP=["گاوْں","گلی","آباد","کالونی","گھڑی"]})),_ae=c((()=>{uae(),cae(),dae(),hae(),pae(),mae(),fae(),vae(),gae(),kae(),yae(),bae(),Sae(),Aae(),Mae(),Tae(),fP={building_number:XB,city:eP,city_name:aP,city_prefix:nP,city_suffix:iP,country:rP,default_country:tP,direction:oP,postcode:sP,postcode_by_state:lP,secondary_address:uP,state:cP,state_abbr:dP,street_address:hP,street_name:pP,street_suffix:mP}})),wae=c((()=>{vP=["پانڈا","بھالو","امریکی کالا بھالو","ایشیایٰ کالا بھالو","بھورا بھالو"]})),jae=c((()=>{gP=["گائے","نیلی گاٗیے","امریکی گاٗیے"]})),Eae=c((()=>{kP=["امریکی گڑیال","آسٹریلیائ تازہ پانی کا گڑیال","نیل گڑیال","مشرقی افریقی گڑیال","نمکین پانی کا گڑیال","گڑیال"]})),Nae=c((()=>{yP=["شہد کی مکھی","مکھی","چیونٹی"]})),Bae=c((()=>{bP=["ایشیایْ شیر","مشرقی افریقی شیر","شمالی مغربی کانگو کا شیر"]})),Pae=c((()=>{SP=["bear","lion","insect","crocodilia","cow"]})),Lae=c((()=>{wae(),jae(),Eae(),Nae(),Bae(),Pae(),AP={bear:vP,cow:gP,crocodilia:kP,insect:yP,lion:bP,type:SP}})),Dae=c((()=>{MP=["#{Name.name}","#{Company.name}"]})),xae=c((()=>{TP=["اوقات نماز","قسط حساب","نقشہ نگار","دبیٗ وقت","ڈالر رپیہ","دراز","پاک وھیلز","واٹس ایپ"]})),Cae=c((()=>{_P=["0.#.#","0.##","#.##","#.#","#.#.#"]})),Kae=c((()=>{Dae(),xae(),Cae(),wP={author:MP,name:TP,version:_P}})),Rae=c((()=>{jP=["visa","mastercard","link one","paypak"]})),zae=c((()=>{Rae(),EP={credit_card_types:jP}})),Oae=c((()=>{NP=["+92 ###-###-####","03## ### ####","03#########"]})),Iae=c((()=>{Oae(),BP={formats:NP}})),Vae=c((()=>{PP=["سرخ","ہرا","نیلا","پیلا","ہلکا ہرا","سفہد","کالا","نارنجی","پیکا","مہندی","آسمانی","سنہری","چاندنی"]})),Gae=c((()=>{LP=["کتابیہ","فلم","گانی","کھیل","بجلی","کمپیوٹر","گھر","باغ","اوزار","اشیاء","صحر","خوبصورتی","کھلونہ","بچے","کپڑے","جوتے","گاڑیاں","کارغانے"]})),Hae=c((()=>{DP={adjective:["چھوٹا","آرامدہ","ہوشیار","خوبصورت","بیترین"],material:["لوہا","لکڑہ","کنکریٹ","پلاسٹک","رویٰ","گرانایٹ","ربڑ","دھات","نرم","تازہ","جم شدہ"],product:["کرسہ","گاڑی","کمپیوٹر","کی بورڈ","ماوٰس","بایٰک","بال","دستانے","پتلون","قمیص","میز","جوتے","ٹوپی","تولیہ","صابن","مچھلی","مرغ","پنیر","سلاد","سیخ کباب","پاپڑ"]}})),Fae=c((()=>{Vae(),Gae(),Hae(),xP={color:PP,department:LP,product_name:DP}})),Jae=c((()=>{CP={wide:["جنوری","فروری","مارچ","اپریل","مئ","جون","جولائ","اگست","ستمبر","اکتوبر","نومبر","دسمبر"],wide_context:["جنوری","فروری","مارچ","اپریل","مئ","جون","جولائ","اگست","ستمبر","اکتوبر","نومبر","دسمبر"]}})),Uae=c((()=>{KP={wide:["اتور","پیر","منگل","بدھ","جمعرات","جمعہ","ہفتہ"],wide_context:["اتور","پیر","منگل","بدھ","جمعرات","جمعہ","ہفتہ"]}})),Wae=c((()=>{Jae(),Uae(),RP={month:CP,weekday:KP}})),Zae=c((()=>{zP=["Savings","Current"]})),qae=c((()=>{OP=["deposit","withdrawal","payment","invoice"]})),Qae=c((()=>{Zae(),qae(),IP={account_type:zP,transaction_type:OP}})),Yae=c((()=>{VP=["سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسداسدھدسبابگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبادفھناسدھ","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدباسدفنباسد","رعابھ","ابسانفسدد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سندافاھگسدبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","ساسدبھ اسدفگبطاسدفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدطاسدگاسدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چاسدسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد"]})),$ae=c((()=>{GP=["سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد","سگ","دگاس","ساد","دسھا","باس","نان","انب","ابس","ادسگ","ابنسد","سفد","دف","بس","باسدب","باسدبا","رعابھ","ابسد","سب","ساد","ط","اسدبگ","اسدگ","اھگسد","سدگ","اسگ","شبچ","عو","سدبگا","اسبد","ساب","سدب","سبا","باسد","دسب","طسد","چسد"]})),Xae=c((()=>{Yae(),$ae(),HP={supplemental:VP,words:GP}})),ene=c((()=>{FP=["پاپ","فلک","دنیایٰ","جاز","فنک","کلاسکی","لاطینی","پرانی","ریپ"]})),ane=c((()=>{ene(),JP={genre:FP}})),nne=c((()=>{UP=["عورت","مرد"]})),ine=c((()=>{WP=["منایل","عایشہ","آمنہ","عمائم","خدیجہ","حفصہ","رابعہ","اقدس","حسنہ","مریم","حمیرہ","وردہ","شہناز","نوشین","مشال","روبینہ","روزینہ","حدید"]})),rne=c((()=>{ZP=["منایل","عایشہ","آمنہ","عمائم","خدیجہ","حفصہ","رابعہ","اقدس","حسنہ","مریم","حمیرہ","وردہ","شہناز","نوشین","مشال","روبینہ","روزینہ","حدید","عمیر","ابراہیم","احسن","عبداللہ","عثمان","حمزہ","سیف","ولید","وسیم","محسن","یاسین","کمال","عادل","اویس","مسود","شفیع","فرہان","ممتاز"]})),tne=c((()=>{qP=["اعوان","ملک","جبران","احمد","علی","خان","جان","آفریدی","باجوڑی","میمن","راجپوت","عبدالی","نیازی","شریف","چوہدری","ملوک","اللَہ","شنواری","حسین","الحق"]})),one=c((()=>{QP=["عمیر","ابراہیم","احسن","عبداللہ","عثمان","حمزہ","سیف","ولید","وسیم","محسن","یاسین","کمال","عادل","اویس","مسود","شفیع","فرہان","ممتاز"]})),sne=c((()=>{YP=["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{male_first_name} #{last_name}","#{female_first_name} #{last_name}","#{male_first_name} بن #{male_first_name}","#{female_first_name} بنت #{male_first_name}"]})),lne=c((()=>{$P=["محترم.","محترمہ.","ڈاکٹر"]})),une=c((()=>{XP=["چھوٹے","بڑے","پہل","دوم","سوم","چہارم","پنجم","ششم","هفتم","نوئم","دسم"]})),cne=c((()=>{eL={descriptor:["سربراہ","اعلیٰ","مستقبل","شہری","ڈسٹرکٹ","درمیانہ","گلوبل","گاہک","بین ال اقوامی","آگے","اندرونی","انسانی","چیف","پرنسپل"],level:["حل","پروگرام","برانڈ","سکیورٹی","ریسرچ","آگاہی","حربہ","شناخت","بازار","گروہ","تقسیم","استعمال","بات چیت","جال"]}})),dne=c((()=>{nne(),ine(),rne(),tne(),one(),sne(),lne(),une(),cne(),aL={binary_gender:UP,female_first_name:WP,first_name:ZP,last_name:qP,male_first_name:QP,name:YP,prefix:$P,suffix:XP,title:eL}})),hne=c((()=>{nL=["چیونٹیاں","چمگادڑ","بھالو","مکیاں","پرندے","بیل","بلیاں","مرغیاں","مویشی","کتے","مچھلیاں","بطخیں","ہاتھی","لومڑیاں","مینڈک","بکریاں","گھوڑے","شیر","بندر","الو","لوگ","سور","خرگوش","بھیڑ","بھیڑیں","زیبرا","کویں","کالی بلیاں","بھوت","جادوگر","بیٹیں","دشمن","پیغمبر","روح","عبادت گزار"]})),pne=c((()=>{iL=["#{Address.state} #{creature}"]})),mne=c((()=>{hne(),pne(),rL={creature:nL,name:iL}})),fne=c((()=>{tL=["سہراب سائکل","چائنہ سائکل"]})),vne=c((()=>{oL=["ڈیزل","بجلی","پیٹرول","شمسی"]})),gne=c((()=>{sL=["آستن مارٹن","بینٹلے","بی ایم ڈبلیو","فراری","ہنڈا","جیپ","مزدا","مرسیڈیز"]})),kne=c((()=>{lL=["کرولا","اکورڈ","سوک"]})),yne=c((()=>{uL=["ہیچ بیک","سواری"]})),bne=c((()=>{fne(),vne(),gne(),kne(),yne(),cL={bicycle:tL,fuel:oL,manufacturer:sL,model:lL,type:uL}})),Sne=c((()=>{_ae(),Lae(),Kae(),zae(),Iae(),Fae(),Wae(),Qae(),Xae(),ane(),dne(),mne(),bne(),dL={title:"Urdu",separator:" اور ",address:fP,animal:AP,app:wP,business:EP,cell_phone:BP,commerce:xP,date:RP,finance:IP,lorem:HP,music:JP,name:aL,team:rL,vehicle:cL}})),Ane=c((()=>{hL=["#{city_root}"]})),Mne=c((()=>{pL=["An Giang","Bà Rịa-Vũng Tàu","Bạc Liêu","Bắc Kạn","Bắc Giang","Bắc Ninh","Bến Tre","Bình Dương","Bình Định","Bình Phước","Bình Thuận","Cà Mau","Cao Bằng","Cần Thơ","Đà Nẵng","Đắk Lắk","Đắk Nông","Điện Biên","Đồng Nai","Đồng Tháp","Gia Lai","Hà Giang","Hà Nam","Hà Nội","Hà Tĩnh","Hải Dương","Hải Phòng","Hậu Giang","Hòa Bình","TP. Hồ Chí Minh","Hưng Yên","Khánh Hoà","Kiên Giang","Kon Tum","Lai Châu","Lạng Sơn","Lào Cai","Lâm Đồng","Long An","Nam Định","Nghệ An","Ninh Bình","Ninh Thuận","Phú Thọ","Phú Yên","Quảng Bình","Quảng Nam","Quảng Ngãi","Quảng Ninh","Quảng Trị","Sóc Trăng","Sơn La","Tây Ninh","Thái Bình","Thái Nguyên","Thanh Hoá","Thừa Thiên-Huế","Tiền Giang","Trà Vinh","Tuyên Quang","Vĩnh Long","Vĩnh Phúc","Yên Bái"]})),Tne=c((()=>{mL=["Afghanistan","Ai Cập","Albania","Algérie","Andorra","Angola","Vương quốc Liên hiệp Anh và Bắc Ireland","Antigua và Barbuda","Áo","Ả Rập Xê Út","Argentina","Armenia","Azerbaijan","Ấn Độ","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belize","Bénin","Bhutan","Bỉ","Bolivia","Bosna và Hercegovina","Botswana","Bồ Đào Nha","Bờ Biển Ngà","Brasil","Brunei","Bulgaria","Burkina Faso","Burundi","Cabo Verde","Các Tiểu Vương quốc Ả Rập Thống nhất","Cameroon","Campuchia","Canada","Chile","Colombia","Comoros","Cộng hòa Congo","Cộng hòa Dân chủ Congo","Costa Rica","Croatia","Cuba","Djibouti","Dominica","Cộng hòa Dominica","Đan Mạch","Đông Timor","Đức","Ecuador","El Salvador","Eritrea","Estonia","Ethiopia","Fiji","Gabon","Gambia","Ghana","Grenada","Gruzia","Guatemala","Guiné-Bissau","Guinea Xích Đạo","Guinée","Guyana","Haiti","Hà Lan","Hàn Quốc","Hoa Kỳ","Honduras","Hungary","Hy Lạp","Iceland","Indonesia","Iran","Iraq","Ireland","Israel","Jamaica","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Lào","Latvia","Lesotho","Liban","Liberia","Libya","Liechtenstein","Litva","Luxembourg","Macedonia","Madagascar","Malaysia","Mali","Malta","Maroc","Quần đảo Marshall","Mauritanie","Mauritius","México","Micronesia","Moldova","Monaco","Mông Cổ","Montenegro","Mozambique","Myanmar","Namibia","Nam Sudan","Nam Phi","Nauru","Na Uy","Nepal","New Zealand","Nicaragua","Niger","Nigeria","Nga","Nhật Bản","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Pháp","Phần Lan","Philippines","Qatar","România","Rwanda","Saint Kitts và Nevis","Saint Lucia","Saint Vincent và Grenadines","Samoa","San Marino","São Tomé và Príncipe","Séc","Sénégal","Serbia","Seychelles","Sierra Leone","Singapore","Síp","Slovakia","Slovenia","Solomon","Somalia","Sri Lanka","Sudan","Suriname","Swaziland","Syria","Tajikistan","Tanzania","Tây Ban Nha","Tchad","Thái Lan","Thổ Nhĩ Kỳ","Thụy Điển","Thụy Sĩ","Togo","Tonga","Triều Tiên","Trinidad và Tobago","Trung Quốc","Trung Phi","Tunisia","Turkmenistan","Tuvalu","Úc","Uganda","Ukraina","Uruguay","Uzbekistan","Vanuatu","Vatican","Venezuela","Việt Nam","Ý","Yemen","Zambia","Zimbabwe"]})),_ne=c((()=>{fL=["Việt Nam"]})),wne=c((()=>{vL=["#####"]})),jne=c((()=>{Ane(),Mne(),Tne(),_ne(),wne(),gL={city:hL,city_root:pL,country:mL,default_country:fL,postcode:vL}})),Ene=c((()=>{kL=["03# ### ####","05# ### ####","07# ### ####","08# ### ####","09# ### ####"]})),Nne=c((()=>{Ene(),yL={formats:kL}})),Bne=c((()=>{bL=["#{prefix} #{Name.last_name}"]})),Pne=c((()=>{SL=["Công ty","Cty TNHH","Cty","Cửa hàng","Trung tâm","Chi nhánh"]})),Lne=c((()=>{Bne(),Pne(),AL={name:bL,prefix:SL}})),Dne=c((()=>{ML={wide:["Tháng Giêng","Tháng Hai","Tháng Ba","Tháng Tư","Tháng Năm","Tháng Sáu","Tháng Bảy","Tháng Tám","Tháng Chín","Tháng Mười","Tháng Mười Một","Tháng Mười Hai"],wide_context:["Tháng Giêng","Tháng Hai","Tháng Ba","Tháng Tư","Tháng Năm","Tháng Sáu","Tháng Bảy","Tháng Tám","Tháng Chín","Tháng Mười","Tháng Mười Một","Tháng Mười Hai"],abbr:["Tháng 1","Tháng 2","Tháng 3","Tháng 4","Tháng 5","Tháng 6","Tháng 7","Tháng 8","Tháng 9","Tháng 10","Tháng 11","Tháng 12"],abbr_context:["Tháng 1","Tháng 2","Tháng 3","Tháng 4","Tháng 5","Tháng 6","Tháng 7","Tháng 8","Tháng 9","Tháng 10","Tháng 11","Tháng 12"]}})),xne=c((()=>{TL={wide:["Chủ nhật","Thứ hai","Thứ ba","Thứ tư","Thứ năm","Thứ sáu","Thứ bảy"],wide_context:["Chủ nhật","Thứ hai","Thứ ba","Thứ tư","Thứ năm","Thứ sáu","Thứ bảy"],abbr:["CN","T2","T3","T4","T5","T6","T7"],abbr_context:["C.Nhật","Thứ 2","Thứ 3","Thứ 4","Thứ 5","Thứ 6","Thứ 7"]}})),Cne=c((()=>{Dne(),xne(),_L={month:ML,weekday:TL}})),Kne=c((()=>{wL=["com","net","info","vn","com.vn"]})),Rne=c((()=>{Kne(),jL={domain_suffix:wL}})),zne=c((()=>{EL=["đã","đang","ừ","ờ","á","không","biết","gì","hết","đâu","nha","thế","thì","là","đánh","đá","đập","phá","viết","vẽ","tô","thuê","mướn","mượn","mua","một","hai","ba","bốn","năm","sáu","bảy","tám","chín","mười","thôi","việc","nghỉ","làm","nhà","cửa","xe","đạp","ác","độc","khoảng","khoan","thuyền","tàu","bè","lầu","xanh","đỏ","tím","vàng","kim","chỉ","khâu","may","vá","em","anh","yêu","thương","thích","con","cái","bàn","ghế","tủ","quần","áo","nón","dép","giày","lỗi","được","ghét","giết","chết","hết","tôi","bạn","tui","trời","trăng","mây","gió","máy","hàng","hóa","leo","núi","bơi","biển","chìm","xuồng","nước","ngọt","ruộng","đồng","quê","hương"]})),One=c((()=>{zne(),NL={words:EL}})),Ine=c((()=>{BL=["An Bình","An Di","An Hạ","An Hằng","An Khê","An Nhiên","An Nhàn","Anh Chi","Anh Hương","Anh Mai","Anh Phương","Anh Thi","Anh Thy","Anh Thơ","Anh Thư","Anh Thảo","Anh Vũ","Anh Ðào","Ban Mai","Bình Minh","Bình Yên","Bích Chiêu","Bích Châu","Bích Duyên","Bích Hiền","Bích Huệ","Bích Hà","Bích Hạnh","Bích Hải","Bích Hảo","Bích Hậu","Bích Hằng","Bích Hồng","Bích Hợp","Bích Lam","Bích Liên","Bích Loan","Bích Nga","Bích Ngà","Bích Ngân","Bích Ngọc","Bích Như","Bích Phượng","Bích Quyên","Bích Quân","Bích San","Bích Thoa","Bích Thu","Bích Thảo","Bích Thủy","Bích Trang","Bích Trâm","Bích Ty","Bích Vân","Bích Ðiệp","Bích Ðào","Băng Băng","Băng Tâm","Bạch Cúc","Bạch Hoa","Bạch Kim","Bạch Liên","Bạch Loan","Bạch Mai","Bạch Quỳnh","Bạch Trà","Bạch Tuyết","Bạch Vân","Bạch Yến","Bảo Anh","Bảo Bình","Bảo Châu","Bảo Huệ","Bảo Hà","Bảo Hân","Bảo Lan","Bảo Lễ","Bảo Ngọc","Bảo Phương","Bảo Quyên","Bảo Quỳnh","Bảo Thoa","Bảo Thúy","Bảo Tiên","Bảo Trâm","Bảo Trân","Bảo Trúc","Bảo Uyên","Bảo Vy","Bảo Vân","Bội Linh","Cam Thảo","Chi Lan","Chi Mai","Chiêu Dương","Cát Cát","Cát Linh","Cát Ly","Cát Tiên","Cát Tường","Cẩm Hiền","Cẩm Hường","Cẩm Hạnh","Cẩm Linh","Cẩm Liên","Cẩm Ly","Cẩm Nhi","Cẩm Nhung","Cẩm Thúy","Cẩm Tú","Cẩm Vân","Cẩm Yến","Di Nhiên","Diên Vỹ","Diễm Chi","Diễm Châu","Diễm Hương","Diễm Hạnh","Diễm Hằng","Diễm Khuê","Diễm Kiều","Diễm Liên","Diễm Lộc","Diễm My","Diễm Phúc","Diễm Phương","Diễm Phước","Diễm Phượng","Diễm Quyên","Diễm Quỳnh","Diễm Thúy","Diễm Thư","Diễm Thảo","Diễm Trang","Diễm Trinh","Diễm Uyên","Diệp Anh","Diệp Vy","Diệu Anh","Diệu Hiền","Diệu Hoa","Diệu Huyền","Diệu Hương","Diệu Hạnh","Diệu Hằng","Diệu Hồng","Diệu Lan","Diệu Linh","Diệu Loan","Diệu Nga","Diệu Ngà","Diệu Ngọc","Diệu Nương","Diệu Thiện","Diệu Thúy","Diệu Vân","Diệu Ái","Duy Hạnh","Duy Mỹ","Duy Uyên","Duyên Hồng","Duyên My","Duyên Mỹ","Duyên Nương","Dã Lan","Dã Lâm","Dã Thảo","Dạ Hương","Dạ Lan","Dạ Nguyệt","Dạ Thi","Dạ Thảo","Dạ Yến","Gia Hân","Gia Khanh","Gia Linh","Gia Nhi","Gia Quỳnh","Giang Thanh","Giang Thiên","Giao Hưởng","Giao Kiều","Giao Linh","Giáng Ngọc","Giáng Tiên","Giáng Uyên","Hiếu Giang","Hiếu Hạnh","Hiếu Khanh","Hiếu Minh","Hiền Chung","Hiền Hòa","Hiền Mai","Hiền Nhi","Hiền Nương","Hiền Thục","Hiểu Lam","Hiểu Vân","Hoa Liên","Hoa Lý","Hoa Thiên","Hoa Tiên","Hoa Tranh","Hoài An","Hoài Giang","Hoài Hương","Hoài Phương","Hoài Thương","Hoài Trang","Hoài Vỹ","Hoàn Châu","Hoàn Vi","Hoàng Cúc","Hoàng Hà","Hoàng Kim","Hoàng Lan","Hoàng Mai","Hoàng Miên","Hoàng Nguyên","Hoàng Oanh","Hoàng Sa","Hoàng Thư","Hoàng Xuân","Hoàng Yến","Hoạ Mi","Huyền Anh","Huyền Diệu","Huyền Linh","Huyền Ngọc","Huyền Nhi","Huyền Thoại","Huyền Thư","Huyền Trang","Huyền Trâm","Huyền Trân","Huệ An","Huệ Hương","Huệ Hồng","Huệ Lan","Huệ Linh","Huệ Lâm","Huệ My","Huệ Phương","Huệ Thương","Huệ Ân","Huỳnh Anh","Hà Giang","Hà Liên","Hà Mi","Hà My","Hà Nhi","Hà Phương","Hà Thanh","Hà Tiên","Hàm Duyên","Hàm Nghi","Hàm Thơ","Hàm Ý","Hương Chi","Hương Giang","Hương Lan","Hương Liên","Hương Ly","Hương Lâm","Hương Mai","Hương Nhi","Hương Thu","Hương Thảo","Hương Thủy","Hương Tiên","Hương Trang","Hương Trà","Hương Xuân","Hướng Dương","Hạ Băng","Hạ Giang","Hạ Phương","Hạ Tiên","Hạ Uyên","Hạ Vy","Hạc Cúc","Hạnh Chi","Hạnh Dung","Hạnh Linh","Hạnh My","Hạnh Nga","Hạnh Nhơn","Hạnh Phương","Hạnh San","Hạnh Thảo","Hạnh Trang","Hạnh Vi","Hải Anh","Hải Châu","Hải Duyên","Hải Dương","Hải Miên","Hải My","Hải Mỹ","Hải Ngân","Hải Nhi","Hải Phương","Hải Phượng","Hải San","Hải Sinh","Hải Thanh","Hải Thảo","Hải Thụy","Hải Uyên","Hải Vy","Hải Vân","Hải Yến","Hải Ân","Hải Ðường","Hảo Nhi","Hằng Anh","Hằng Nga","Họa Mi","Hồ Diệp","Hồng Anh","Hồng Bạch Thảo","Hồng Châu","Hồng Diễm","Hồng Giang","Hồng Hoa","Hồng Hà","Hồng Hạnh","Hồng Khanh","Hồng Khuê","Hồng Khôi","Hồng Linh","Hồng Liên","Hồng Lâm","Hồng Mai","Hồng Nga","Hồng Ngân","Hồng Ngọc","Hồng Nhung","Hồng Như","Hồng Nhạn","Hồng Oanh","Hồng Phúc","Hồng Phương","Hồng Quế","Hồng Thu","Hồng Thúy","Hồng Thư","Hồng Thảo","Hồng Thắm","Hồng Thủy","Hồng Trúc","Hồng Tâm","Hồng Vân","Hồng Xuân","Hồng Ðiệp","Hồng Ðào","Hồng Đăng","Khiết Linh","Khiết Tâm","Khuê Trung","Khánh Chi","Khánh Giang","Khánh Giao","Khánh Huyền","Khánh Hà","Khánh Hằng","Khánh Linh","Khánh Ly","Khánh Mai","Khánh My","Khánh Ngân","Khánh Ngọc","Khánh Quyên","Khánh Quỳnh","Khánh Thủy","Khánh Trang","Khánh Vi","Khánh Vy","Khánh Vân","Khúc Lan","Khả Khanh","Khả Tú","Khả Ái","Khải Ca","Khải Hà","Khải Tâm","Kim Anh","Kim Chi","Kim Cương","Kim Dung","Kim Duyên","Kim Hoa","Kim Hương","Kim Khanh","Kim Khuyên","Kim Khánh","Kim Lan","Kim Liên","Kim Loan","Kim Ly","Kim Mai","Kim Ngân","Kim Ngọc","Kim Oanh","Kim Phượng","Kim Quyên","Kim Sa","Kim Thanh","Kim Thoa","Kim Thu","Kim Thy","Kim Thông","Kim Thư","Kim Thảo","Kim Thủy","Kim Trang","Kim Tuyến","Kim Tuyết","Kim Tuyền","Kim Xuyến","Kim Xuân","Kim Yến","Kim Ánh","Kim Đan","Kiết Hồng","Kiết Trinh","Kiều Anh","Kiều Diễm","Kiều Dung","Kiều Giang","Kiều Hoa","Kiều Hạnh","Kiều Khanh","Kiều Loan","Kiều Mai","Kiều Minh","Kiều Mỹ","Kiều Nga","Kiều Nguyệt","Kiều Nương","Kiều Thu","Kiều Trang","Kiều Trinh","Kỳ Anh","Kỳ Diệu","Kỳ Duyên","Lam Giang","Lam Hà","Lam Khê","Lam Ngọc","Lam Tuyền","Lan Anh","Lan Chi","Lan Hương","Lan Khuê","Lan Ngọc","Lan Nhi","Lan Phương","Lan Thương","Lan Trúc","Lan Vy","Linh Chi","Linh Châu","Linh Duyên","Linh Giang","Linh Hà","Linh Lan","Linh Nhi","Linh Phương","Linh Phượng","Linh San","Linh Trang","Linh Ðan","Liên Chi","Liên Hoa","Liên Hương","Liên Như","Liên Phương","Liên Trân","Liễu Oanh","Loan Châu","Ly Châu","Lâm Nhi","Lâm Oanh","Lâm Tuyền","Lâm Uyên","Lê Quỳnh","Lưu Ly","Lệ Băng","Lệ Chi","Lệ Giang","Lệ Hoa","Lệ Huyền","Lệ Khanh","Lệ Nga","Lệ Nhi","Lệ Quyên","Lệ Quân","Lệ Thanh","Lệ Thu","Lệ Thủy","Lộc Uyên","Lộc Uyển","Lục Bình","Mai Anh","Mai Chi","Mai Châu","Mai Hiền","Mai Hà","Mai Hương","Mai Hạ","Mai Khanh","Mai Khôi","Mai Lan","Mai Linh","Mai Liên","Mai Loan","Mai Ly","Mai Nhi","Mai Phương","Mai Quyên","Mai Thanh","Mai Thu","Mai Thy","Mai Thảo","Mai Trinh","Mai Tâm","Mai Vy","Minh An","Minh Châu","Minh Duyên","Minh Hiền","Minh Huyền","Minh Huệ","Minh Hà","Minh Hương","Minh Hạnh","Minh Hằng","Minh Hồng","Minh Khai","Minh Khuê","Minh Loan","Minh Minh","Minh Nguyệt","Minh Ngọc","Minh Nhi","Minh Như","Minh Phương","Minh Phượng","Minh Thu","Minh Thúy","Minh Thư","Minh Thương","Minh Thảo","Minh Thủy","Minh Trang","Minh Tuyết","Minh Tuệ","Minh Tâm","Minh Uyên","Minh Vy","Minh Xuân","Minh Yến","Minh Đan","Mậu Xuân","Mộc Miên","Mộng Hoa","Mộng Hương","Mộng Hằng","Mộng Lan","Mộng Liễu","Mộng Nguyệt","Mộng Nhi","Mộng Quỳnh","Mộng Thi","Mộng Thu","Mộng Tuyền","Mộng Vi","Mộng Vy","Mộng Vân","Mộng Ðiệp","Mỹ Anh","Mỹ Diễm","Mỹ Dung","Mỹ Duyên","Mỹ Hiệp","Mỹ Hoàn","Mỹ Huyền","Mỹ Huệ","Mỹ Hường","Mỹ Hạnh","Mỹ Khuyên","Mỹ Kiều","Mỹ Lan","Mỹ Loan","Mỹ Lệ","Mỹ Lợi","Mỹ Nga","Mỹ Ngọc","Mỹ Nhi","Mỹ Nhân","Mỹ Nương","Mỹ Phương","Mỹ Phượng","Mỹ Phụng","Mỹ Thuần","Mỹ Thuận","Mỹ Trang","Mỹ Trâm","Mỹ Tâm","Mỹ Uyên","Mỹ Vân","Mỹ Xuân","Mỹ Yến","Nghi Dung","Nghi Minh","Nghi Xuân","Nguyên Hồng","Nguyên Thảo","Nguyết Ánh","Nguyệt Anh","Nguyệt Cát","Nguyệt Cầm","Nguyệt Hà","Nguyệt Hồng","Nguyệt Lan","Nguyệt Minh","Nguyệt Nga","Nguyệt Quế","Nguyệt Uyển","Nguyệt Ánh","Ngân Anh","Ngân Hà","Ngân Thanh","Ngân Trúc","Ngọc Anh","Ngọc Bích","Ngọc Cầm","Ngọc Diệp","Ngọc Dung","Ngọc Hiền","Ngọc Hoa","Ngọc Hoan","Ngọc Hoàn","Ngọc Huyền","Ngọc Huệ","Ngọc Hà","Ngọc Hân","Ngọc Hạ","Ngọc Hạnh","Ngọc Hằng","Ngọc Khanh","Ngọc Khuê","Ngọc Khánh","Ngọc Lam","Ngọc Lan","Ngọc Linh","Ngọc Liên","Ngọc Loan","Ngọc Ly","Ngọc Lâm","Ngọc Lý","Ngọc Lệ","Ngọc Mai","Ngọc Nhi","Ngọc Nữ","Ngọc Oanh","Ngọc Phụng","Ngọc Quyên","Ngọc Quế","Ngọc Quỳnh","Ngọc San","Ngọc Sương","Ngọc Thi","Ngọc Thy","Ngọc Thơ","Ngọc Trinh","Ngọc Trâm","Ngọc Tuyết","Ngọc Tâm","Ngọc Tú","Ngọc Uyên","Ngọc Uyển","Ngọc Vy","Ngọc Vân","Ngọc Yến","Ngọc Ái","Ngọc Ánh","Ngọc Ðiệp","Ngọc Ðàn","Ngọc Ðào","Nhan Hồng","Nhã Hương","Nhã Hồng","Nhã Khanh","Nhã Lý","Nhã Mai","Nhã Sương","Nhã Thanh","Nhã Trang","Nhã Trúc","Nhã Uyên","Nhã Yến","Nhã Ý","Như Anh","Như Bảo","Như Hoa","Như Hảo","Như Hồng","Như Loan","Như Mai","Như Ngà","Như Ngọc","Như Phương","Như Quân","Như Quỳnh","Như Thảo","Như Trân","Như Tâm","Như Ý","Nhất Thương","Nhật Dạ","Nhật Hà","Nhật Hạ","Nhật Lan","Nhật Linh","Nhật Lệ","Nhật Mai","Nhật Phương","Nhật Ánh","Oanh Thơ","Oanh Vũ","Phi Khanh","Phi Nhung","Phi Nhạn","Phi Phi","Phi Phượng","Phong Lan","Phương An","Phương Anh","Phương Chi","Phương Châu","Phương Diễm","Phương Dung","Phương Giang","Phương Hiền","Phương Hoa","Phương Hạnh","Phương Lan","Phương Linh","Phương Liên","Phương Loan","Phương Mai","Phương Nghi","Phương Ngọc","Phương Nhi","Phương Nhung","Phương Phương","Phương Quyên","Phương Quân","Phương Quế","Phương Quỳnh","Phương Thanh","Phương Thi","Phương Thùy","Phương Thảo","Phương Thủy","Phương Trang","Phương Trinh","Phương Trà","Phương Trâm","Phương Tâm","Phương Uyên","Phương Yến","Phước Bình","Phước Huệ","Phượng Bích","Phượng Liên","Phượng Loan","Phượng Lệ","Phượng Nga","Phượng Nhi","Phượng Tiên","Phượng Uyên","Phượng Vy","Phượng Vũ","Phụng Yến","Quế Anh","Quế Chi","Quế Linh","Quế Lâm","Quế Phương","Quế Thu","Quỳnh Anh","Quỳnh Chi","Quỳnh Dao","Quỳnh Dung","Quỳnh Giang","Quỳnh Giao","Quỳnh Hoa","Quỳnh Hà","Quỳnh Hương","Quỳnh Lam","Quỳnh Liên","Quỳnh Lâm","Quỳnh Nga","Quỳnh Ngân","Quỳnh Nhi","Quỳnh Nhung","Quỳnh Như","Quỳnh Phương","Quỳnh Sa","Quỳnh Thanh","Quỳnh Thơ","Quỳnh Tiên","Quỳnh Trang","Quỳnh Trâm","Quỳnh Vân","Sao Băng","Sao Mai","Song Kê","Song Lam","Song Oanh","Song Thư","Sông Hà","Sông Hương","Sơn Ca","Sơn Tuyền","Sương Sương","Thanh Bình","Thanh Dân","Thanh Giang","Thanh Hiếu","Thanh Hiền","Thanh Hoa","Thanh Huyền","Thanh Hà","Thanh Hương","Thanh Hường","Thanh Hạnh","Thanh Hảo","Thanh Hằng","Thanh Hồng","Thanh Kiều","Thanh Lam","Thanh Lan","Thanh Loan","Thanh Lâm","Thanh Mai","Thanh Mẫn","Thanh Nga","Thanh Nguyên","Thanh Ngân","Thanh Ngọc","Thanh Nhung","Thanh Nhàn","Thanh Nhã","Thanh Phương","Thanh Thanh","Thanh Thiên","Thanh Thu","Thanh Thúy","Thanh Thư","Thanh Thảo","Thanh Thủy","Thanh Trang","Thanh Trúc","Thanh Tuyết","Thanh Tuyền","Thanh Tâm","Thanh Uyên","Thanh Vy","Thanh Vân","Thanh Xuân","Thanh Yến","Thanh Đan","Thi Cầm","Thi Ngôn","Thi Thi","Thi Xuân","Thi Yến","Thiên Di","Thiên Duyên","Thiên Giang","Thiên Hà","Thiên Hương","Thiên Khánh","Thiên Kim","Thiên Lam","Thiên Lan","Thiên Mai","Thiên Mỹ","Thiên Nga","Thiên Nương","Thiên Phương","Thiên Thanh","Thiên Thêu","Thiên Thư","Thiên Thảo","Thiên Trang","Thiên Tuyền","Thiếu Mai","Thiều Ly","Thiện Mỹ","Thiện Tiên","Thu Duyên","Thu Giang","Thu Hiền","Thu Hoài","Thu Huyền","Thu Huệ","Thu Hà","Thu Hậu","Thu Hằng","Thu Hồng","Thu Linh","Thu Liên","Thu Loan","Thu Mai","Thu Minh","Thu Nga","Thu Nguyệt","Thu Ngà","Thu Ngân","Thu Ngọc","Thu Nhiên","Thu Oanh","Thu Phong","Thu Phương","Thu Phượng","Thu Sương","Thu Thuận","Thu Thảo","Thu Thủy","Thu Trang","Thu Việt","Thu Vân","Thu Vọng","Thu Yến","Thuần Hậu","Thy Khanh","Thy Oanh","Thy Trúc","Thy Vân","Thái Chi","Thái Hà","Thái Hồng","Thái Lan","Thái Lâm","Thái Thanh","Thái Thảo","Thái Tâm","Thái Vân","Thùy Anh","Thùy Dung","Thùy Dương","Thùy Giang","Thùy Linh","Thùy Mi","Thùy My","Thùy Nhi","Thùy Như","Thùy Oanh","Thùy Uyên","Thùy Vân","Thúy Anh","Thúy Diễm","Thúy Hiền","Thúy Huyền","Thúy Hà","Thúy Hương","Thúy Hường","Thúy Hạnh","Thúy Hằng","Thúy Kiều","Thúy Liên","Thúy Liễu","Thúy Loan","Thúy Mai","Thúy Minh","Thúy My","Thúy Nga","Thúy Ngà","Thúy Ngân","Thúy Ngọc","Thúy Phượng","Thúy Quỳnh","Thúy Vi","Thúy Vy","Thúy Vân","Thơ Thơ","Thư Lâm","Thư Sương","Thương Huyền","Thương Nga","Thương Thương","Thường Xuân","Thạch Thảo","Thảo Hương","Thảo Hồng","Thảo Linh","Thảo Ly","Thảo Mai","Thảo My","Thảo Nghi","Thảo Nguyên","Thảo Nhi","Thảo Quyên","Thảo Tiên","Thảo Trang","Thảo Uyên","Thảo Vy","Thảo Vân","Thục Anh","Thục Khuê","Thục Nhi","Thục Oanh","Thục Quyên","Thục Trang","Thục Trinh","Thục Tâm","Thục Uyên","Thục Vân","Thục Ðoan","Thục Ðào","Thục Ðình","Thụy Du","Thụy Khanh","Thụy Linh","Thụy Lâm","Thụy Miên","Thụy Nương","Thụy Trinh","Thụy Trâm","Thụy Uyên","Thụy Vân","Thụy Ðào","Thủy Hằng","Thủy Hồng","Thủy Linh","Thủy Minh","Thủy Nguyệt","Thủy Quỳnh","Thủy Tiên","Thủy Trang","Thủy Tâm","Tinh Tú","Tiên Phương","Tiểu Mi","Tiểu My","Tiểu Quỳnh","Trang Anh","Trang Linh","Trang Nhã","Trang Tâm","Trang Ðài","Triều Nguyệt","Triều Thanh","Triệu Mẫn","Trung Anh","Trà Giang","Trà My","Trâm Anh","Trâm Oanh","Trân Châu","Trúc Chi","Trúc Lam","Trúc Lan","Trúc Linh","Trúc Liên","Trúc Loan","Trúc Ly","Trúc Lâm","Trúc Mai","Trúc Phương","Trúc Quân","Trúc Quỳnh","Trúc Vy","Trúc Vân","Trúc Ðào","Trúc Đào","Trầm Hương","Tuyết Anh","Tuyết Băng","Tuyết Chi","Tuyết Hoa","Tuyết Hân","Tuyết Hương","Tuyết Hồng","Tuyết Lan","Tuyết Loan","Tuyết Lâm","Tuyết Mai","Tuyết Nga","Tuyết Nhi","Tuyết Nhung","Tuyết Oanh","Tuyết Thanh","Tuyết Trinh","Tuyết Trầm","Tuyết Tâm","Tuyết Vy","Tuyết Vân","Tuyết Xuân","Tuyền Lâm","Tuệ Lâm","Tuệ Mẫn","Tuệ Nhi","Tâm Hiền","Tâm Hạnh","Tâm Hằng","Tâm Khanh","Tâm Linh","Tâm Nguyên","Tâm Nguyệt","Tâm Nhi","Tâm Như","Tâm Thanh","Tâm Trang","Tâm Ðoan","Tâm Đan","Tùng Linh","Tùng Lâm","Tùng Quân","Tùy Anh","Tùy Linh","Tú Anh","Tú Ly","Tú Nguyệt","Tú Quyên","Tú Quỳnh","Tú Sương","Tú Trinh","Tú Tâm","Tú Uyên","Túy Loan","Tường Chinh","Tường Vi","Tường Vy","Tường Vân","Tịnh Lâm","Tịnh Nhi","Tịnh Như","Tịnh Tâm","Tịnh Yên","Tố Loan","Tố Nga","Tố Nhi","Tố Quyên","Tố Tâm","Tố Uyên","Từ Dung","Từ Ân","Uyên Minh","Uyên My","Uyên Nhi","Uyên Phương","Uyên Thi","Uyên Thy","Uyên Thơ","Uyên Trâm","Uyên Vi","Uyển Khanh","Uyển My","Uyển Nghi","Uyển Nhi","Uyển Nhã","Uyển Như","Vi Quyên","Vinh Diệu","Việt Hà","Việt Hương","Việt Khuê","Việt Mi","Việt Nga","Việt Nhi","Việt Thi","Việt Trinh","Việt Tuyết","Việt Yến","Vy Lam","Vy Lan","Vàng Anh","Vành Khuyên","Vân Anh","Vân Chi","Vân Du","Vân Hà","Vân Hương","Vân Khanh","Vân Khánh","Vân Linh","Vân Ngọc","Vân Nhi","Vân Phi","Vân Phương","Vân Quyên","Vân Quỳnh","Vân Thanh","Vân Thúy","Vân Thường","Vân Tiên","Vân Trang","Vân Trinh","Vũ Hồng","Xuyến Chi","Xuân Bảo","Xuân Dung","Xuân Hiền","Xuân Hoa","Xuân Hân","Xuân Hương","Xuân Hạnh","Xuân Lan","Xuân Linh","Xuân Liễu","Xuân Loan","Xuân Lâm","Xuân Mai","Xuân Nghi","Xuân Ngọc","Xuân Nhi","Xuân Nhiên","Xuân Nương","Xuân Phương","Xuân Phượng","Xuân Thanh","Xuân Thu","Xuân Thảo","Xuân Thủy","Xuân Trang","Xuân Tâm","Xuân Uyên","Xuân Vân","Xuân Yến","Xuân xanh","Yên Bằng","Yên Mai","Yên Nhi","Yên Ðan","Yên Đan","Yến Anh","Yến Hồng","Yến Loan","Yến Mai","Yến My","Yến Nhi","Yến Oanh","Yến Phương","Yến Phượng","Yến Thanh","Yến Thảo","Yến Trang","Yến Trinh","Yến Trâm","Yến Ðan","Ái Hồng","Ái Khanh","Ái Linh","Ái Nhi","Ái Nhân","Ái Thi","Ái Thy","Ái Vân","Ánh Dương","Ánh Hoa","Ánh Hồng","Ánh Linh","Ánh Lệ","Ánh Mai","Ánh Nguyệt","Ánh Ngọc","Ánh Thơ","Ánh Trang","Ánh Tuyết","Ánh Xuân","Ðan Khanh","Ðan Quỳnh","Đan Thu","Ðinh Hương","Ðoan Thanh","Ðoan Trang","Ðài Trang","Ðông Nghi","Ðông Nhi","Ðông Trà","Ðông Tuyền","Ðông Vy","Ðông Ðào","Ðồng Dao","Ý Bình","Ý Lan","Ý Nhi","Đan Linh","Đan Quỳnh","Đan Thanh","Đan Thu","Đan Thư","Đan Tâm","Đinh Hương","Đoan Thanh","Đoan Trang","Đài Trang","Đông Nghi","Đông Trà","Đông Tuyền","Đông Vy","Đơn Thuần","Đức Hạnh","Ấu Lăng"]})),Vne=c((()=>{PL=["An Cơ","An Khang","Ân Lai","An Nam","An Nguyên","An Ninh","An Tâm","Ân Thiện","An Tường","Anh Ðức","Anh Dũng","Anh Duy","Anh Hoàng","Anh Khải","Anh Khoa","Anh Khôi","Anh Minh","Anh Quân","Anh Quốc","Anh Sơn","Anh Tài","Anh Thái","Anh Tú","Anh Tuấn","Anh Tùng","Anh Việt","Anh Vũ","Bá Cường","Bá Kỳ","Bá Lộc","Bá Long","Bá Phước","Bá Thành","Bá Thiện","Bá Thịnh","Bá Thúc","Bá Trúc","Bá Tùng","Bách Du","Bách Nhân","Bằng Sơn","Bảo An","Bảo Bảo","Bảo Chấn","Bảo Ðịnh","Bảo Duy","Bảo Giang","Bảo Hiển","Bảo Hoa","Bảo Hoàng","Bảo Huy","Bảo Huynh","Bảo Huỳnh","Bảo Khánh","Bảo Lâm","Bảo Long","Bảo Pháp","Bảo Quốc","Bảo Sơn","Bảo Thạch","Bảo Thái","Bảo Tín","Bảo Toàn","Bích Nhã","Bình An","Bình Dân","Bình Ðạt","Bình Ðịnh","Bình Dương","Bình Hòa","Bình Minh","Bình Nguyên","Bình Quân","Bình Thuận","Bình Yên","Bửu Chưởng","Bửu Diệp","Bữu Toại","Cảnh Tuấn","Cao Kỳ","Cao Minh","Cao Nghiệp","Cao Nguyên","Cao Nhân","Cao Phong","Cao Sĩ","Cao Sơn","Cao Sỹ","Cao Thọ","Cao Tiến","Cát Tường","Cát Uy","Chấn Hùng","Chấn Hưng","Chấn Phong","Chánh Việt","Chế Phương","Chí Anh","Chí Bảo","Chí Công","Chí Dũng","Chí Giang","Chí Hiếu","Chí Khang","Chí Khiêm","Chí Kiên","Chí Nam","Chí Sơn","Chí Thanh","Chí Thành","Chiến Thắng","Chiêu Minh","Chiêu Phong","Chiêu Quân","Chính Tâm","Chính Thuận","Chính Trực","Chuẩn Khoa","Chung Thủy","Công Án","Công Ân","Công Bằng","Công Giang","Công Hải","Công Hào","Công Hậu","Công Hiếu","Công Hoán","Công Lập","Công Lộc","Công Luận","Công Luật","Công Lý","Công Phụng","Công Sinh","Công Sơn","Công Thành","Công Tráng","Công Tuấn","Cường Dũng","Cương Nghị","Cương Quyết","Cường Thịnh","Ðắc Cường","Ðắc Di","Ðắc Lộ","Ðắc Lực","Ðắc Thái","Ðắc Thành","Ðắc Trọng","Ðại Dương","Ðại Hành","Ðại Ngọc","Ðại Thống","Dân Hiệp","Dân Khánh","Ðan Quế","Ðan Tâm","Ðăng An","Ðăng Ðạt","Ðăng Khánh","Ðăng Khoa","Đăng Khương","Ðăng Minh","Đăng Quang","Danh Nhân","Danh Sơn","Danh Thành","Danh Văn","Ðạt Dũng","Ðạt Hòa","Ðình Chiểu","Ðình Chương","Ðình Cường","Ðình Diệu","Ðình Ðôn","Ðình Dương","Ðình Hảo","Ðình Hợp","Ðình Kim","Ðinh Lộc","Ðình Lộc","Ðình Luận","Ðịnh Lực","Ðình Nam","Ðình Ngân","Ðình Nguyên","Ðình Nhân","Ðình Phú","Ðình Phúc","Ðình Quảng","Ðình Sang","Ðịnh Siêu","Ðình Thắng","Ðình Thiện","Ðình Toàn","Ðình Trung","Ðình Tuấn","Ðoàn Tụ","Ðồng Bằng","Ðông Dương","Ðông Hải","Ðồng Khánh","Ðông Nguyên","Ðông Phong","Ðông Phương","Ðông Quân","Ðông Sơn","Ðức Ân","Ðức Anh","Ðức Bằng","Ðức Bảo","Ðức Bình","Ðức Chính","Ðức Duy","Ðức Giang","Ðức Hải","Ðức Hạnh","Đức Hòa","Ðức Hòa","Ðức Huy","Ðức Khải","Ðức Khang","Ðức Khiêm","Ðức Kiên","Ðức Long","Ðức Mạnh","Ðức Minh","Ðức Nhân","Ðức Phi","Ðức Phong","Ðức Phú","Ðức Quang","Ðức Quảng","Ðức Quyền","Ðức Siêu","Ðức Sinh","Ðức Tài","Ðức Tâm","Ðức Thắng","Ðức Thành","Ðức Thọ","Ðức Toàn","Ðức Toản","Ðức Trí","Ðức Trung","Ðức Tuấn","Ðức Tuệ","Ðức Tường","Dũng Trí","Dũng Việt","Dương Anh","Dương Khánh","Duy An","Duy Bảo","Duy Cẩn","Duy Cường","Duy Hải","Duy Hiền","Duy Hiếu","Duy Hoàng","Duy Hùng","Duy Khang","Duy Khánh","Duy Khiêm","Duy Kính","Duy Luận","Duy Mạnh","Duy Minh","Duy Ngôn","Duy Nhượng","Duy Quang","Duy Tâm","Duy Tân","Duy Thạch","Duy Thắng","Duy Thanh","Duy Thành","Duy Thông","Duy Tiếp","Duy Tuyền","Gia Ân","Gia Anh","Gia Bạch","Gia Bảo","Gia Bình","Gia Cần","Gia Cẩn","Gia Cảnh","Gia Ðạo","Gia Ðức","Gia Hiệp","Gia Hòa","Gia Hoàng","Gia Huấn","Gia Hùng","Gia Hưng","Gia Huy","Gia Khánh","Gia Khiêm","Gia Kiên","Gia Kiệt","Gia Lập","Gia Minh","Gia Nghị","Gia Phong","Gia Phúc","Gia Phước","Gia Thiện","Gia Thịnh","Gia Uy","Gia Vinh","Giang Lam","Giang Nam","Giang Sơn","Giang Thiên","Hà Hải","Hải Bằng","Hải Bình","Hải Ðăng","Hải Dương","Hải Giang","Hải Hà","Hải Long","Hải Lý","Hải Nam","Hải Nguyên","Hải Phong","Hải Quân","Hải Sơn","Hải Thụy","Hán Lâm","Hạnh Tường","Hào Nghiệp","Hạo Nhiên","Hiền Minh","Hiệp Dinh","Hiệp Hà","Hiệp Hào","Hiệp Hiền","Hiệp Hòa","Hiệp Vũ","Hiếu Dụng","Hiếu Học","Hiểu Lam","Hiếu Liêm","Hiếu Nghĩa","Hiếu Phong","Hiếu Thông","Hồ Bắc","Hồ Nam","Hòa Bình","Hòa Giang","Hòa Hiệp","Hòa Hợp","Hòa Lạc","Hòa Thái","Hoài Bắc","Hoài Nam","Hoài Phong","Hoài Thanh","Hoài Tín","Hoài Trung","Hoài Việt","Hoài Vỹ","Hoàn Kiếm","Hoàn Vũ","Hoàng Ân","Hoàng Duệ","Hoàng Dũng","Hoàng Giang","Hoàng Hải","Hoàng Hiệp","Hoàng Khải","Hoàng Khang","Hoàng Khôi","Hoàng Lâm","Hoàng Linh","Hoàng Long","Hoàng Minh","Hoàng Mỹ","Hoàng Nam","Hoàng Ngôn","Hoàng Phát","Hoàng Quân","Hoàng Thái","Hoàng Việt","Hoàng Xuân","Hồng Ðăng","Hồng Đức","Hồng Giang","Hồng Lân","Hồng Liêm","Hồng Lĩnh","Hồng Minh","Hồng Nhật","Hồng Nhuận","Hồng Phát","Hồng Quang","Hồng Quý","Hồng Sơn","Hồng Thịnh","Hồng Thụy","Hồng Việt","Hồng Vinh","Huân Võ","Hùng Anh","Hùng Cường","Hưng Ðạo","Hùng Dũng","Hùng Ngọc","Hùng Phong","Hùng Sơn","Hùng Thịnh","Hùng Tường","Hướng Bình","Hướng Dương","Hướng Thiện","Hướng Tiền","Hữu Bào","Hữu Bảo","Hữu Bình","Hữu Canh","Hữu Cảnh","Hữu Châu","Hữu Chiến","Hữu Cương","Hữu Cường","Hữu Ðạt","Hữu Ðịnh","Hữu Hạnh","Hữu Hiệp","Hữu Hoàng","Hữu Hùng","Hữu Khang","Hữu Khanh","Hữu Khoát","Hữu Khôi","Hữu Long","Hữu Lương","Hữu Minh","Hữu Nam","Hữu Nghị","Hữu Nghĩa","Hữu Phước","Hữu Tài","Hữu Tâm","Hữu Tân","Hữu Thắng","Hữu Thiện","Hữu Thọ","Hữu Thống","Hữu Thực","Hữu Toàn","Hữu Trác","Hữu Trí","Hữu Trung","Hữu Từ","Hữu Tường","Hữu Vĩnh","Hữu Vượng","Huy Anh","Huy Chiểu","Huy Hà","Huy Hoàng","Huy Kha","Huy Khánh","Huy Khiêm","Huy Lĩnh","Huy Phong","Huy Quang","Huy Thành","Huy Thông","Huy Trân","Huy Tuấn","Huy Tường","Huy Việt","Huy Vũ","Khắc Anh","Khắc Công","Khắc Dũng","Khắc Duy","Khắc Kỷ","Khắc Minh","Khắc Ninh","Khắc Thành","Khắc Triệu","Khắc Trọng","Khắc Tuấn","Khắc Việt","Khắc Vũ","Khải Ca","Khải Hòa","Khai Minh","Khải Tâm","Khải Tuấn","Khang Kiện","Khánh An","Khánh Bình","Khánh Ðan","Khánh Duy","Khánh Giang","Khánh Hải","Khánh Hòa","Khánh Hoàn","Khánh Hoàng","Khánh Hội","Khánh Huy","Khánh Minh","Khánh Nam","Khánh Văn","Khoa Trưởng","Khôi Nguyên","Khởi Phong","Khôi Vĩ","Khương Duy","Khuyến Học","Kiên Bình","Kiến Bình","Kiên Cường","Kiến Ðức","Kiên Giang","Kiên Lâm","Kiên Trung","Kiến Văn","Kiệt Võ","Kim Ðan","Kim Hoàng","Kim Long","Kim Phú","Kim Sơn","Kim Thịnh","Kim Thông","Kim Toàn","Kim Vượng","Kỳ Võ","Lạc Nhân","Lạc Phúc","Lâm Ðồng","Lâm Dũng","Lam Giang","Lam Phương","Lâm Trường","Lâm Tường","Lâm Viên","Lâm Vũ","Lập Nghiệp","Lập Thành","Liên Kiệt","Long Giang","Long Quân","Long Vịnh","Lương Quyền","Lương Tài","Lương Thiện","Lương Tuyền","Mạnh Cương","Mạnh Cường","Mạnh Ðình","Mạnh Dũng","Mạnh Hùng","Mạnh Nghiêm","Mạnh Quỳnh","Mạnh Tấn","Mạnh Thắng","Mạnh Thiện","Mạnh Trình","Mạnh Trường","Mạnh Tuấn","Mạnh Tường","Minh Ân","Minh Anh","Minh Cảnh","Minh Dân","Minh Ðan","Minh Danh","Minh Ðạt","Minh Ðức","Minh Dũng","Minh Giang","Minh Hải","Minh Hào","Minh Hiên","Minh Hiếu","Minh Hòa","Minh Hoàng","Minh Huấn","Minh Hùng","Minh Hưng","Minh Huy","Minh Hỷ","Minh Khang","Minh Khánh","Minh Khiếu","Minh Khôi","Minh Kiệt","Minh Kỳ","Minh Lý","Minh Mẫn","Minh Nghĩa","Minh Nhân","Minh Nhật","Minh Nhu","Minh Quân","Minh Quang","Minh Quốc","Minh Sơn","Minh Tân","Minh Thạc","Minh Thái","Minh Thắng","Minh Thiện","Minh Thông","Minh Thuận","Minh Tiến","Minh Toàn","Minh Trí","Minh Triết","Minh Triệu","Minh Trung","Minh Tú","Minh Tuấn","Minh Vu","Minh Vũ","Minh Vương","Mộng Giác","Mộng Hoàn","Mộng Lâm","Mộng Long","Nam An","Nam Dương","Nam Hải","Nam Hưng","Nam Lộc","Nam Nhật","Nam Ninh","Nam Phi","Nam Phương","Nam Sơn","Nam Thanh","Nam Thông","Nam Tú","Nam Việt","Nghị Lực","Nghị Quyền","Nghĩa Dũng","Nghĩa Hòa","Ngọc Ẩn","Ngọc Cảnh","Ngọc Cường","Ngọc Danh","Ngọc Ðoàn","Ngọc Dũng","Ngọc Hải","Ngọc Hiển","Ngọc Huy","Ngọc Khang","Ngọc Khôi","Ngọc Khương","Ngọc Lai","Ngọc Lân","Ngọc Minh","Ngọc Ngạn","Ngọc Quang","Ngọc Sơn","Ngọc Thạch","Ngọc Thiện","Ngọc Thọ","Ngọc Thuận","Ngọc Tiển","Ngọc Trụ","Ngọc Tuấn","Nguyên Bảo","Nguyên Bổng","Nguyên Ðan","Nguyên Giang","Nguyên Giáp","Nguyễn Hải An","Nguyên Hạnh","Nguyên Khang","Nguyên Khôi","Nguyên Lộc","Nguyên Nhân","Nguyên Phong","Nguyên Sử","Nguyên Văn","Nhân Nguyên","Nhân Sâm","Nhân Từ","Nhân Văn","Nhật Bảo Long","Nhật Dũng","Nhật Duy","Nhật Hòa","Nhật Hoàng","Nhật Hồng","Nhật Hùng","Nhật Huy","Nhật Khương","Nhật Minh","Nhật Nam","Nhật Quân","Nhật Quang","Nhật Quốc","Nhật Tấn","Nhật Thịnh","Nhất Tiến","Nhật Tiến","Như Khang","Niệm Nhiên","Phi Cường","Phi Ðiệp","Phi Hải","Phi Hoàng","Phi Hùng","Phi Long","Phi Nhạn","Phong Châu","Phong Dinh","Phong Ðộ","Phú Ân","Phú Bình","Phú Hải","Phú Hiệp","Phú Hùng","Phú Hưng","Phú Thịnh","Phú Thọ","Phú Thời","Phúc Cường","Phúc Ðiền","Phúc Duy","Phúc Hòa","Phúc Hưng","Phúc Khang","Phúc Lâm","Phục Lễ","Phúc Nguyên","Phúc Sinh","Phúc Tâm","Phúc Thịnh","Phụng Việt","Phước An","Phước Lộc","Phước Nguyên","Phước Nhân","Phước Sơn","Phước Thiện","Phượng Long","Phương Nam","Phương Phi","Phương Thể","Phương Trạch","Phương Triều","Quân Dương","Quang Anh","Quang Bửu","Quảng Ðại","Quang Danh","Quang Ðạt","Quảng Ðạt","Quang Ðức","Quang Dũng","Quang Dương","Quang Hà","Quang Hải","Quang Hòa","Quang Hùng","Quang Hưng","Quang Hữu","Quang Huy","Quang Khải","Quang Khanh","Quang Lâm","Quang Lân","Quang Linh","Quang Lộc","Quang Minh","Quang Nhân","Quang Nhật","Quang Ninh","Quang Sáng","Quang Tài","Quang Thạch","Quang Thái","Quang Thắng","Quang Thiên","Quang Thịnh","Quảng Thông","Quang Thuận","Quang Triều","Quang Triệu","Quang Trọng","Quang Trung","Quang Trường","Quang Tú","Quang Tuấn","Quang Vinh","Quang Vũ","Quang Xuân","Quốc Anh","Quốc Bảo","Quốc Bình","Quốc Ðại","Quốc Ðiền","Quốc Hải","Quốc Hạnh","Quốc Hiền","Quốc Hiển","Quốc Hòa","Quốc Hoài","Quốc Hoàng","Quốc Hùng","Quốc Hưng","Quốc Huy","Quốc Khánh","Quốc Mạnh","Quốc Minh","Quốc Mỹ","Quốc Phong","Quốc Phương","Quốc Quân","Quốc Quang","Quốc Quý","Quốc Thắng","Quốc Thành","Quốc Thiện","Quốc Thịnh","Quốc Thông","Quốc Tiến","Quốc Toản","Quốc Trụ","Quốc Trung","Quốc Trường","Quốc Tuấn","Quốc Văn","Quốc Việt","Quốc Vinh","Quốc Vũ","Quý Khánh","Quý Vĩnh","Quyết Thắng","Sĩ Hoàng","Sơn Dương","Sơn Giang","Sơn Hà","Sơn Hải","Sơn Lâm","Sơn Quân","Sơn Quyền","Sơn Trang","Sơn Tùng","Song Lam","Sỹ Ðan","Sỹ Hoàng","Sỹ Phú","Sỹ Thực","Tạ Hiền","Tài Ðức","Tài Nguyên","Tâm Thiện","Tân Bình","Tân Ðịnh","Tấn Dũng","Tấn Khang","Tấn Lợi","Tân Long","Tấn Nam","Tấn Phát","Tân Phước","Tấn Sinh","Tấn Tài","Tân Thành","Tấn Thành","Tấn Trình","Tấn Trương","Tất Bình","Tất Hiếu","Tất Hòa","Thạch Sơn","Thạch Tùng","Thái Bình","Thái Ðức","Thái Dương","Thái Duy","Thái Hòa","Thái Minh","Thái Nguyên","Thái San","Thái Sang","Thái Sơn","Thái Tân","Thái Tổ","Thắng Cảnh","Thắng Lợi","Thăng Long","Thành An","Thành Ân","Thành Châu","Thành Công","Thành Danh","Thanh Ðạo","Thành Ðạt","Thành Ðệ","Thanh Ðoàn","Thành Doanh","Thanh Hải","Thanh Hào","Thanh Hậu","Thành Hòa","Thanh Huy","Thành Khiêm","Thanh Kiên","Thanh Liêm","Thành Lợi","Thanh Long","Thành Long","Thanh Minh","Thành Nguyên","Thành Nhân","Thanh Phi","Thanh Phong","Thành Phương","Thanh Quang","Thành Sang","Thanh Sơn","Thanh Thế","Thanh Thiên","Thành Thiện","Thanh Thuận","Thành Tín","Thanh Tịnh","Thanh Toàn","Thanh Toản","Thanh Trung","Thành Trung","Thanh Tú","Thanh Tuấn","Thanh Tùng","Thanh Việt","Thanh Vinh","Thành Vinh","Thanh Vũ","Thành Ý","Thất Cương","Thất Dũng","Thất Thọ","Thế An","Thế Anh","Thế Bình","Thế Dân","Thế Doanh","Thế Dũng","Thế Duyệt","Thế Huấn","Thế Hùng","Thế Lâm","Thế Lực","Thế Minh","Thế Năng","Thế Phúc","Thế Phương","Thế Quyền","Thế Sơn","Thế Trung","Thế Tường","Thế Vinh","Thiên An","Thiên Ân","Thiện Ân","Thiên Bửu","Thiên Ðức","Thiện Ðức","Thiện Dũng","Thiện Giang","Thiên Hưng","Thiện Khiêm","Thiên Lạc","Thiện Luân","Thiên Lương","Thiện Lương","Thiên Mạnh","Thiện Minh","Thiện Ngôn","Thiên Phú","Thiện Phước","Thiện Sinh","Thiện Tâm","Thiện Thanh","Thiện Tính","Thiên Trí","Thiếu Anh","Thiệu Bảo","Thiếu Cường","Thịnh Cường","Thời Nhiệm","Thông Ðạt","Thông Minh","Thống Nhất","Thông Tuệ","Thụ Nhân","Thu Sinh","Thuận Anh","Thuận Hòa","Thuận Phong","Thuận Phương","Thuận Thành","Thuận Toàn","Thượng Cường","Thượng Khang","Thường Kiệt","Thượng Liệt","Thượng Năng","Thượng Nghị","Thượng Thuật","Thường Xuân","Thụy Du","Thụy Long","Thụy Miên","Thụy Vũ","Tích Ðức","Tích Thiện","Tiến Ðức","Tiến Dũng","Tiền Giang","Tiến Hiệp","Tiến Hoạt","Tiến Võ","Tiểu Bảo","Toàn Thắng","Tôn Lễ","Trí Dũng","Trí Hào","Trí Hùng","Trí Hữu","Trí Liên","Trí Minh","Trí Thắng","Trí Tịnh","Triển Sinh","Triệu Thái","Triều Thành","Trọng Chính","Trọng Dũng","Trọng Duy","Trọng Hà","Trọng Hiếu","Trọng Hùng","Trọng Khánh","Trọng Kiên","Trọng Nghĩa","Trọng Nhân","Trọng Tấn","Trọng Trí","Trọng Tường","Trọng Việt","Trọng Vinh","Trúc Cương","Trúc Sinh","Trung Anh","Trung Chính","Trung Chuyên","Trung Ðức","Trung Dũng","Trung Hải","Trung Hiếu","Trung Kiên","Trung Lực","Trung Nghĩa","Trung Nguyên","Trung Nhân","Trung Thành","Trung Thực","Trung Việt","Trường An","Trường Chinh","Trường Giang","Trường Hiệp","Trường Kỳ","Trường Liên","Trường Long","Trường Nam","Trường Nhân","Trường Phát","Trường Phu","Trường Phúc","Trường Sa","Trường Sinh","Trường Sơn","Trường Thành","Trường Vinh","Trường Vũ","Từ Ðông","Tuấn Anh","Tuấn Châu","Tuấn Chương","Tuấn Ðức","Tuấn Dũng","Tuấn Hải","Tuấn Hoàng","Tuấn Hùng","Tuấn Khải","Tuấn Khanh","Tuấn Khoan","Tuấn Kiệt","Tuấn Linh","Tuấn Long","Tuấn Minh","Tuấn Ngọc","Tuấn Sĩ","Tuấn Sỹ","Tuấn Tài","Tuấn Thành","Tuấn Trung","Tuấn Tú","Tuấn Việt","Tùng Anh","Tùng Châu","Tùng Lâm","Tùng Linh","Tùng Minh","Tùng Quang","Tường Anh","Tường Lâm","Tường Lân","Tường Lĩnh","Tường Minh","Tường Nguyên","Tường Phát","Tường Vinh","Tuyền Lâm","Uy Phong","Uy Vũ","Vạn Hạnh","Vạn Lý","Văn Minh","Vân Sơn","Vạn Thắng","Vạn Thông","Văn Tuyển","Viễn Cảnh","Viễn Ðông","Viễn Phương","Viễn Thông","Việt An","Việt Anh","Việt Chính","Việt Cương","Việt Cường","Việt Dũng","Việt Dương","Việt Duy","Việt Hải","Việt Hoàng","Việt Hồng","Việt Hùng","Việt Huy","Việt Khải","Việt Khang","Việt Khoa","Việt Khôi","Việt Long","Việt Ngọc","Viết Nhân","Việt Nhân","Việt Phong","Việt Phương","Việt Quốc","Việt Quyết","Viết Sơn","Việt Sơn","Viết Tân","Việt Thái","Việt Thắng","Việt Thanh","Việt Thông","Việt Thương","Việt Tiến","Việt Võ","Vĩnh Ân","Vinh Diệu","Vĩnh Hải","Vĩnh Hưng","Vĩnh Long","Vĩnh Luân","Vinh Quốc","Vĩnh Thọ","Vĩnh Thụy","Vĩnh Toàn","Vũ Anh","Vũ Minh","Vương Gia","Vương Triều","Vương Triệu","Vương Việt","Xuân An","Xuân Bình","Xuân Cao","Xuân Cung","Xuân Hàm","Xuân Hãn","Xuân Hiếu","Xuân Hòa","Xuân Huy","Xuân Khoa","Xuân Kiên","Xuân Lạc","Xuân Lộc","Xuân Minh","Xuân Nam","Xuân Ninh","Xuân Phúc","Xuân Quân","Xuân Quý","Xuân Sơn","Xuân Thái","Xuân Thiện","Xuân Thuyết","Xuân Trung","Xuân Trường","Xuân Tường","Xuân Vũ","Yên Bằng","Yên Bình","Yên Sơn"]})),Gne=c((()=>{Ine(),Vne(),LL=BL.concat(PL)})),Hne=c((()=>{DL=["Phạm","Nguyễn","Trần","Lê","Lý","Hoàng","Phan","Vũ","Tăng","Đặng","Bùi","Đỗ","Hồ","Ngô","Dương","Đào","Đoàn","Vương","Trịnh","Đinh","Lâm","Phùng","Mai","Tô","Trương","Hà"]})),Fne=c((()=>{xL=["#{male_first_name} #{last_name}","#{female_first_name} #{last_name}","#{first_name} #{last_name}"]})),Jne=c((()=>{Ine(),Gne(),Hne(),Vne(),Fne(),CL={female_first_name:BL,first_name:LL,last_name:DL,male_first_name:PL,name:xL}})),Une=c((()=>{KL=["02# #### ####","02## #### ####"]})),Wne=c((()=>{Une(),RL={formats:KL}})),Zne=c((()=>{jne(),Nne(),Lne(),Cne(),Rne(),One(),Jne(),Wne(),zL={title:"Vietnamese",address:gL,cell_phone:yL,company:AL,date:_L,internet:jL,lorem:NL,name:CL,phone_number:RL}})),qne=c((()=>{OL=["#####","####","###","##","#"]})),Qne=c((()=>{IL=["#{city_prefix}#{city_suffix}"]})),Yne=c((()=>{VL=["长","上","南","西","北","诸","宁","珠","武","衡","成","福","厦","贵","吉","海","太","济","安","吉","包"]})),$ne=c((()=>{GL=["沙市","京市","宁市","安市","乡县","海市","码市","汉市","阳市","都市","州市","门市","阳市","口市","原市","南市","徽市","林市","头市"]})),Xne=c((()=>{HL=["中国"]})),eie=c((()=>{FL=["######"]})),aie=c((()=>{JL=["北京市","上海市","天津市","重庆市","黑龙江省","吉林省","辽宁省","内蒙古","河北省","新疆","甘肃省","青海省","陕西省","宁夏","河南省","山东省","山西省","安徽省","湖北省","湖南省","江苏省","四川省","贵州省","云南省","广西省","西藏","浙江省","江西省","广东省","福建省","台湾省","海南省","香港","澳门"]})),nie=c((()=>{UL=["京","沪","津","渝","黑","吉","辽","蒙","冀","新","甘","青","陕","宁","豫","鲁","晋","皖","鄂","湘","苏","川","黔","滇","桂","藏","浙","赣","粤","闽","台","琼","港","澳"]})),iie=c((()=>{WL=["#{street_name}#{building_number}号"]})),rie=c((()=>{ZL=["#{Name.last_name}#{street_suffix}"]})),tie=c((()=>{qL=["巷","街","路","桥","侬","旁","中心","栋"]})),oie=c((()=>{qne(),Qne(),Yne(),$ne(),Xne(),eie(),aie(),nie(),iie(),rie(),tie(),QL={building_number:OL,city:IL,city_prefix:VL,city_suffix:GL,default_country:HL,postcode:FL,state:JL,state_abbr:UL,street_address:WL,street_name:ZL,street_suffix:qL}})),sie=c((()=>{YL=["绍齐","博文","梓晨","胤祥","瑞霖","明哲","天翊","凯瑞","健雄","耀杰","潇然","子涵","越彬","钰轩","智辉","致远","俊驰","雨泽","烨磊","晟睿","文昊","修洁","黎昕","远航","旭尧","鸿涛","伟祺","荣轩","越泽","浩宇","瑾瑜","皓轩","擎苍","擎宇","志泽","子轩","睿渊","弘文","哲瀚","雨泽","楷瑞","建辉","晋鹏","天磊","绍辉","泽洋","鑫磊","鹏煊","昊强","伟宸","博超","君浩","子骞","鹏涛","炎彬","鹤轩","越彬","风华","靖琪","明辉","伟诚","明轩","健柏","修杰","志泽","弘文","峻熙","嘉懿","煜城","懿轩","烨伟","苑博","伟泽","熠彤","鸿煊","博涛","烨霖","烨华","煜祺","智宸","正豪","昊然","明杰","立诚","立轩","立辉","峻熙","弘文","熠彤","鸿煊","烨霖","哲瀚","鑫鹏","昊天","思聪","展鹏","笑愚","志强","炫明","雪松","思源","智渊","思淼","晓啸","天宇","浩然","文轩","鹭洋","振家","乐驹","晓博","文博","昊焱","立果","金鑫","锦程","嘉熙","鹏飞","子默","思远","浩轩","语堂","聪健","明","文","果","思","鹏","驰","涛","琪","浩","航","彬"]})),lie=c((()=>{$L=["王","李","张","刘","陈","杨","黄","吴","赵","周","徐","孙","马","朱","胡","林","郭","何","高","罗","郑","梁","谢","宋","唐","许","邓","冯","韩","曹","曾","彭","萧","蔡","潘","田","董","袁","于","余","叶","蒋","杜","苏","魏","程","吕","丁","沈","任","姚","卢","傅","钟","姜","崔","谭","廖","范","汪","陆","金","石","戴","贾","韦","夏","邱","方","侯","邹","熊","孟","秦","白","江","阎","薛","尹","段","雷","黎","史","龙","陶","贺","顾","毛","郝","龚","邵","万","钱","严","赖","覃","洪","武","莫","孔"]})),uie=c((()=>{XL=["#{first_name}#{last_name}"]})),cie=c((()=>{sie(),lie(),uie(),eD={first_name:YL,last_name:$L,name:XL}})),die=c((()=>{aD=["0##-########","0###-########","1##########"]})),hie=c((()=>{die(),nD={formats:aD}})),pie=c((()=>{oie(),cie(),hie(),iD={title:"Chinese",address:QL,name:eD,phone_number:nD}})),mie=c((()=>{rD=["####","###","##","#"]})),fie=c((()=>{tD=["#{city_prefix}#{city_suffix}"]})),vie=c((()=>{oD=["臺北","新北","桃園","臺中","臺南","高雄","基隆","新竹","嘉義","苗栗","彰化","南投","雲林","屏東","宜蘭","花蓮","臺東","澎湖","金門","連江"]})),gie=c((()=>{sD=["縣","市"]})),kie=c((()=>{lD=["Taiwan (R.O.C.)"]})),yie=c((()=>{uD=["######"]})),bie=c((()=>{cD=["福建省","台灣省"]})),Sie=c((()=>{dD=["北","新北","桃","中","南","高","基","竹市","嘉市","竹縣","苗","彰","投","雲","嘉縣","宜","花","東","澎","金","馬"]})),Aie=c((()=>{hD=["#{street_name}#{building_number}號"]})),Mie=c((()=>{pD=["#{Name.last_name}#{street_suffix}"]})),Tie=c((()=>{mD=["街","路","北路","南路","東路","西路"]})),_ie=c((()=>{mie(),fie(),vie(),gie(),kie(),yie(),bie(),Sie(),Aie(),Mie(),Tie(),fD={building_number:rD,city:tD,city_prefix:oD,city_suffix:sD,default_country:lD,postcode:uD,state:cD,state_abbr:dD,street_address:hD,street_name:pD,street_suffix:mD}})),wie=c((()=>{vD=["紹齊","博文","梓晨","胤祥","瑞霖","明哲","天翊","凱瑞","健雄","耀傑","瀟然","子涵","越彬","鈺軒","智輝","致遠","俊馳","雨澤","燁磊","晟睿","文昊","修潔","黎昕","遠航","旭堯","鴻濤","偉祺","榮軒","越澤","浩宇","瑾瑜","皓軒","擎蒼","擎宇","志澤","子軒","睿淵","弘文","哲瀚","雨澤","楷瑞","建輝","晉鵬","天磊","紹輝","澤洋","鑫磊","鵬煊","昊強","偉宸","博超","君浩","子騫","鵬濤","炎彬","鶴軒","越彬","風華","靖琪","明輝","偉誠","明軒","健柏","修傑","志澤","弘文","峻熙","嘉懿","煜城","懿軒","燁偉","苑博","偉澤","熠彤","鴻煊","博濤","燁霖","燁華","煜祺","智宸","正豪","昊然","明杰","立誠","立軒","立輝","峻熙","弘文","熠彤","鴻煊","燁霖","哲瀚","鑫鵬","昊天","思聰","展鵬","笑愚","志強","炫明","雪松","思源","智淵","思淼","曉嘯","天宇","浩然","文軒","鷺洋","振家","樂駒","曉博","文博","昊焱","立果","金鑫","錦程","嘉熙","鵬飛","子默","思遠","浩軒","語堂","聰健"]})),jie=c((()=>{gD=["王","李","張","劉","陳","楊","黃","吳","趙","週","徐","孫","馬","朱","胡","林","郭","何","高","羅","鄭","梁","謝","宋","唐","許","鄧","馮","韓","曹","曾","彭","蕭","蔡","潘","田","董","袁","於","餘","葉","蔣","杜","蘇","魏","程","呂","丁","沈","任","姚","盧","傅","鐘","姜","崔","譚","廖","範","汪","陸","金","石","戴","賈","韋","夏","邱","方","侯","鄒","熊","孟","秦","白","江","閻","薛","尹","段","雷","黎","史","龍","陶","賀","顧","毛","郝","龔","邵","萬","錢","嚴","賴","覃","洪","武","莫","孔"]})),Eie=c((()=>{kD=["#{first_name}#{last_name}"]})),Nie=c((()=>{wie(),jie(),Eie(),yD={first_name:vD,last_name:gD,name:kD}})),Bie=c((()=>{bD=["0#-#######","02-########","09##-######"]})),Pie=c((()=>{Bie(),SD={formats:bD}})),Lie=c((()=>{_ie(),Nie(),Pie(),AD={title:"Chinese (Taiwan)",address:fD,name:yD,phone_number:SD}})),Die=c((()=>{MD=["South Africa"]})),xie=c((()=>{TD=["#####","####"]})),Cie=c((()=>{Die(),xie(),_D={default_country:MD,postcode:TD}})),Kie=c((()=>{wD=["082 ### ####","084 ### ####","083 ### ####","065 ### ####","082#######","082 #######"]})),Rie=c((()=>{Kie(),jD={formats:wD}})),zie=c((()=>{ED=["Pty Ltd","Ltd","CC"]})),Oie=c((()=>{zie(),ND={suffix:ED}})),Iie=c((()=>{BD=["co.za","com","org.za","info","net.za"]})),Vie=c((()=>{Iie(),PD={domain_suffix:BD}})),Gie=c((()=>{LD=["Ayanda","Uluthando","Nofoto","Yibanathi","Thadie","Ulwazi","Lerato","Amahle","Khulekani","Jabulile","Mthunzi","Sindisiwe","Inyoni","Ntombizodwa","Zobuhle","Samukelisiwe","Nonhlanhla","Nhlakanipho","Liyana","Nonjabulo","Ntokozo","Nokuthula","Buhle","Isisa","Thobeka","Thabisa","Zanele","Sizani","Nkosingiphile","Mhambi","Nomvula","Thulisile","Lukhona","Mbalienhle","Sizakele","Khethiwe","Nolwazi","Sinenhlanhla","Ayize","Duduzile","Busisiwe","Hlengiwe","Jabulile","Khanyisile","Nandi","Ndondoloza","Nozipho","Nonkululeko","Sibongile","Siphephelo"]})),Hie=c((()=>{DD=["Ayanda","Uluthando","Nofoto","Yibanathi","Thadie","Ulwazi","Lerato","Amahle","Khulekani","Jabulile","Mthunzi","Sindisiwe","Inyoni","Ntombizodwa","Zobuhle","Samukelisiwe","Nonhlanhla","Nhlakanipho","Liyana","Nonjabulo","Ntokozo","Nokuthula","Buhle","Isisa","Thobeka","Thabisa","Zanele","Sizani","Nkosingiphile","Mhambi","Nomvula","Thulisile","Lukhona","Mbalienhle","Sizakele","Khethiwe","Nolwazi","Sinenhlanhla","Ayize","Duduzile","Busisiwe","Hlengiwe","Jabulile","Khanyisile","Nandi","Ndondoloza","Nozipho","Nonkululeko","Sibongile","Siphephelo","Bonginkosi","Kagiso","Bhekizizwe","Bhekumbuso","Shaka","Funani","Kgabu","Solomon","Gatsha","Langa","Phila","Msizi","Nkosiyabo","Linda","Mpilo","Siyanda","Nkanyezi","Bafana","Lwandle","Sfiso","Thulani","Thando","Sanele","Anele","Lungelo","Dumisani","Bangizwe","Fanyana","Bhekimuzi","Mandla","Maphikelela","Mpumelelo","Mthunzi","Philani","Musawenkosi","Nkosenye","Nkosinhle","Phiwokwakhe","Sifiso","Zithulele","Sithembiso","Sipho","Siphiwe","Sibusiso","Velaphi","Thamsanqa","Vusumuzi","Themba","Zenzele","Ndleleni"]})),Fie=c((()=>{xD=["Bengu","Bhengu","Buthelezi","Bhuyeni","Bhembe","Bhengani","Bayeni","Chiliza","Cele","Cebekhulu","Dingiswayo","Dlamini","Dube","Fuze","Gwacela","Gigaba","Gumede","Guliwe","Gwala","Gama","Gumede","Hlongwa","Luthuli","Msibi","Mthethwa","Mashinini","Ndebele","Ngubane","Nondlela","Nzimande","Radebe","Seme","Senzangakhona","Sondisa","Zuma","Dhlomo","Nhleko","Mabizela","Khumalo","Kunene","Khawula","Khuzwayo","Lamula","Lembede","Lamula","Mkhatshwa","Moseley","Mavundla","Magoza","Malinga","Mbatha","Mqwebu","Mbende","Maduma","Mgenge","Mehloluhlaza","Maphisa","Mfeka","Mfumu","Musi","Mtolo","Nonyana","Ngema","Ngwazi","Nozulu","Ntombela","Ntanzi","Mbuso","Ngcolosi","Gabhezi","Nsele","Nyanda","Thusi","Mbatha","Biyela","Gumede","Nomvethe","Ndandali","Ncusi","Sibiya","Siyaya","Sothole","Sokhela","Sithuli","Shezi","Siwele","Tshabalala","Thoyana","Thumbeza","Delazy","Zungu","Mthembu","Vilakazi","Vezi","Mabhida","Wosiyane","Yengwa","Zondo","Zondi","Zubane"]})),Jie=c((()=>{CD=["Bonginkosi","Kagiso","Bhekizizwe","Bhekumbuso","Shaka","Funani","Kgabu","Solomon","Gatsha","Langa","Phila","Msizi","Nkosiyabo","Linda","Mpilo","Siyanda","Nkanyezi","Bafana","Lwandle","Sfiso","Thulani","Thando","Sanele","Anele","Lungelo","Dumisani","Bangizwe","Fanyana","Bhekimuzi","Mandla","Maphikelela","Mpumelelo","Mthunzi","Philani","Musawenkosi","Nkosenye","Nkosinhle","Phiwokwakhe","Sifiso","Zithulele","Sithembiso","Sipho","Siphiwe","Sibusiso","Velaphi","Thamsanqa","Vusumuzi","Themba","Zenzele","Ndleleni"]})),Uie=c((()=>{Gie(),Hie(),Fie(),Jie(),KD={female_first_name:LD,first_name:DD,last_name:xD,male_first_name:CD}})),Wie=c((()=>{RD=["01# ### #####","02# ### #####","03# ### #####","04# ### #####","05# ### #####","0800 ### ###","0860 ### ###","01#########","01# ########"]})),Zie=c((()=>{Wie(),zD={formats:RD}})),qie=c((()=>{Cie(),Rie(),Oie(),Vie(),Uie(),Zie(),OD={title:"Zulu (South Africa)",address:_D,cell_phone:jD,company:ND,internet:PD,name:KD,phone_number:zD}})),Qie=c((()=>{Rx(),AC(),oK(),qK(),xR(),dz(),Lz(),KO(),cG(),jG(),QG(),XG(),cH(),AH(),WH(),iF(),SF(),IF(),qF(),kJ(),oU(),aW(),dZ(),kZ(),tq(),Kq(),Wq(),tQ(),RQ(),LY(),c$(),V$(),bX(),r0(),_0(),Y0(),V1(),_2(),n8(),k8(),l3(),C3(),S4(),o9(),F9(),S6(),g5(),i7(),Z7(),_ee(),lae(),Sne(),Zne(),pie(),Lie(),qie(),ID={af_ZA:Me,ar:la,az:Ua,cz:Kn,de:Si,de_AT:$i,de_CH:yr,el:Mt,en:$s,en_AU:fl,en_AU_ocker:zl,en_BORK:Vl,en_CA:$l,en_GB:cu,en_GH:Cu,en_IE:Ju,en_IND:uc,en_NG:Ec,en_US:Rc,en_ZA:od,es:Zd,es_MX:Hh,fa:Xp,fi:om,fr:Wm,fr_BE:_f,fr_CA:Kf,fr_CH:Zf,ge:wv,he:Ag,hr:ek,hy:Pk,id_ID:cy,it:Zy,ja:fb,ko:Vb,lv:PS,mk:fA,nb_NO:UA,ne:lM,nl:$M,nl_BE:_T,pl:d_,pt_BR:Q_,pt_PT:xw,ro:dj,ru:sE,sk:WE,sv:zN,tr:fB,uk:$B,ur:dL,vi:zL,zh_CN:iD,zh_TW:AD,zu_ZA:OD}})),Yie=c((()=>{VD=class{constructor(e){this.faker=e,this.Helpers=e.helpers
for(let a of Object.getOwnPropertyNames(VD.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}word(e){let a
return a=typeof e>"u"?this.faker.definitions.lorem.words:this.faker.definitions.lorem.words.filter((a=>a.length===e)),this.faker.random.arrayElement(a)}words(e){typeof e>"u"&&(e=3)
let a=[]
for(let n=0;n<e;n++)a.push(this.faker.lorem.word())
return a.join(" ")}sentence(e,a){typeof e>"u"&&(e=this.faker.datatype.number({min:3,max:10}))
let n=this.faker.lorem.words(e)
return n.charAt(0).toUpperCase()+n.slice(1)+"."}slug(e){let a=this.faker.lorem.words(e)
return this.Helpers.slugify(a)}sentences(e,a){typeof e>"u"&&(e=this.faker.datatype.number({min:2,max:6})),typeof a>"u"&&(a=" ")
let n=[]
for(;e>0;e--)n.push(this.faker.lorem.sentence())
return n.join(a)}paragraph(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:3
return this.faker.lorem.sentences(e+this.faker.datatype.number(3))}paragraphs(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:3,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"\n \r",n=[]
for(;e>0;e--)n.push(this.faker.lorem.paragraph())
return n.join(a)}text(e){let a=this.faker.random.arrayElement(["lorem.word","lorem.words","lorem.sentence","lorem.sentences","lorem.paragraph","lorem.paragraphs","lorem.lines"])
return this.faker.fake(`{{${a}}}`)}lines(e){return typeof e>"u"&&(e=this.faker.datatype.number({min:1,max:5})),this.faker.lorem.sentences(e,"\n")}}})),$ie=c((()=>{GD=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(GD.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}genre(){return this.faker.random.arrayElement(this.faker.definitions.music.genre)}}})),Xie=c((()=>{HD=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(HD.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}firstName(e){if(typeof this.faker.definitions.name.male_first_name<"u"&&typeof this.faker.definitions.name.female_first_name<"u"){if("string"==typeof e&&("male"===e.toLowerCase()?e=0:"female"===e.toLowerCase()&&(e=1)),"number"!=typeof e){if(!(typeof this.faker.definitions.name.first_name>"u"))return this.faker.random.arrayElement(this.faker.definitions.name.first_name)
e=this.faker.datatype.number(1)}return 0===e?this.faker.random.arrayElement(this.faker.definitions.name.male_first_name):this.faker.random.arrayElement(this.faker.definitions.name.female_first_name)}return this.faker.random.arrayElement(this.faker.definitions.name.first_name)}lastName(e){return typeof this.faker.definitions.name.male_last_name<"u"&&typeof this.faker.definitions.name.female_last_name<"u"?("number"!=typeof e&&(e=this.faker.datatype.number(1)),0===e?this.faker.random.arrayElement(this.faker.locales[this.faker.locale].name.male_last_name):this.faker.random.arrayElement(this.faker.locales[this.faker.locale].name.female_last_name)):this.faker.random.arrayElement(this.faker.definitions.name.last_name)}middleName(e){return typeof this.faker.definitions.name.male_middle_name<"u"&&typeof this.faker.definitions.name.female_middle_name<"u"?("number"!=typeof e&&(e=this.faker.datatype.number(1)),0===e?this.faker.random.arrayElement(this.faker.definitions.name.male_middle_name):this.faker.random.arrayElement(this.faker.definitions.name.female_middle_name)):this.faker.random.arrayElement(this.faker.definitions.name.middle_name)}findName(e,a,n){let i=this.faker.datatype.number(8),r="",t=""
switch("number"!=typeof n&&(n=this.faker.datatype.number(1)),e=e||this.faker.name.firstName(n),a=a||this.faker.name.lastName(n),i){case 0:if(r=this.faker.name.prefix(n),r)return r+" "+e+" "+a
case 1:if(t=this.faker.name.suffix(),t)return e+" "+a+" "+t}return e+" "+a}jobTitle(){return this.faker.name.jobDescriptor()+" "+this.faker.name.jobArea()+" "+this.faker.name.jobType()}gender(e){return e?this.faker.random.arrayElement(this.faker.definitions.name.binary_gender):this.faker.random.arrayElement(this.faker.definitions.name.gender)}prefix(e){return typeof this.faker.definitions.name.male_prefix<"u"&&typeof this.faker.definitions.name.female_prefix<"u"?("number"!=typeof e&&(e=this.faker.datatype.number(1)),0===e?this.faker.random.arrayElement(this.faker.locales[this.faker.locale].name.male_prefix):this.faker.random.arrayElement(this.faker.locales[this.faker.locale].name.female_prefix)):this.faker.random.arrayElement(this.faker.definitions.name.prefix)}suffix(){return this.faker.random.arrayElement(this.faker.definitions.name.suffix)}title(){return this.faker.random.arrayElement(this.faker.definitions.name.title.descriptor)+" "+this.faker.random.arrayElement(this.faker.definitions.name.title.level)+" "+this.faker.random.arrayElement(this.faker.definitions.name.title.job)}jobDescriptor(){return this.faker.random.arrayElement(this.faker.definitions.name.title.descriptor)}jobArea(){return this.faker.random.arrayElement(this.faker.definitions.name.title.level)}jobType(){return this.faker.random.arrayElement(this.faker.definitions.name.title.job)}}})),ere=c((()=>{FD=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(FD.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}phoneNumber(e){return this.faker.helpers.replaceSymbolWithNumber(e||this.phoneFormats())}phoneNumberFormat(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0
return this.faker.helpers.replaceSymbolWithNumber(this.faker.definitions.phone_number.formats[e])}phoneFormats(){return this.faker.random.arrayElement(this.faker.definitions.phone_number.formats)}}}))
function are(e,a){return a.forEach((a=>{e=e.filter((e=>e!==a))})),e}var nre,ire=c((()=>{nre=class{constructor(e,a){this.faker=e,this.randomWord=this.word.bind(this),this.randomWords=this.words.bind(this),this.randomImage=this.image.bind(this),this.randomLocale=this.locale.bind(this),Array.isArray(a)&&a.length?this.faker.mersenne.seed_array(a):isNaN(a)||this.faker.mersenne.seed(a)
for(let n of Object.getOwnPropertyNames(nre.prototype))"constructor"===n||"function"!=typeof this[n]||(this[n]=this[n].bind(this))}number(e){return console.log("Deprecation Warning: faker.random.number is now located in faker.datatype.number"),this.faker.datatype.number(e)}float(e){return console.log("Deprecation Warning: faker.random.float is now located in faker.datatype.float"),this.faker.datatype.float(e)}arrayElement(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["a","b","c"]
return e[this.faker.datatype.number({max:e.length-1})]}arrayElements(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["a","b","c"],a=arguments.length>1?arguments[1]:void 0
"number"!=typeof a?a=this.faker.datatype.number({min:1,max:e.length}):a>e.length?a=e.length:a<0&&(a=0)
let n,i,r=e.slice(0),t=e.length,o=t-a
for(;t-- >o;)i=Math.floor((t+1)*this.faker.datatype.float({min:0,max:.99})),n=r[i],r[i]=r[t],r[t]=n
return r.slice(o)}objectElement(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{foo:"bar",too:"car"},a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"value",n=Object.keys(e),i=this.faker.random.arrayElement(n)
return"key"===a?i:e[i]}uuid(){return console.log("Deprecation Warning: faker.random.uuid is now located in faker.datatype.uuid"),this.faker.datatype.uuid()}boolean(){return console.log("Deprecation Warning: faker.random.boolean is now located in faker.datatype.boolean"),this.faker.datatype.boolean()}word(e){let a=this.faker.random.arrayElement(["commerce.department","commerce.productName","commerce.productAdjective","commerce.productMaterial","commerce.product","commerce.color","company.catchPhraseAdjective","company.catchPhraseDescriptor","company.catchPhraseNoun","company.bsAdjective","company.bsBuzz","company.bsNoun","address.streetSuffix","address.county","address.country","address.state","finance.accountName","finance.transactionType","finance.currencyName","hacker.noun","hacker.verb","hacker.adjective","hacker.ingverb","hacker.abbreviation","name.jobDescriptor","name.jobArea","name.jobType"]),n=this.faker.fake("{{"+a+"}}")
return this.faker.random.arrayElement(n.split(" "))}words(e){let a=[]
typeof e>"u"&&(e=this.faker.datatype.number({min:1,max:3}))
for(let n=0;n<e;n++)a.push(this.faker.random.word())
return a.join(" ")}image(){return console.log("Deprecation Warning: faker.random.image is now located in faker.image.image"),this.faker.image.image()}locale(){return this.faker.random.arrayElement(Object.keys(this.faker.locales))}alpha(e){typeof e>"u"?e={count:1}:"number"==typeof e?e={count:e}:typeof e.count>"u"&&(e.count=1),typeof e.upcase>"u"&&(e.upcase=!1),typeof e.bannedChars>"u"&&(e.bannedChars=[])
let a="",n=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
e.bannedChars&&(n=are(n,e.bannedChars))
for(let i=0;i<e.count;i++)a+=this.faker.random.arrayElement(n)
return e.upcase?a.toUpperCase():a}alphaNumeric(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}
typeof a.bannedChars>"u"&&(a.bannedChars=[])
let n="",i=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
a&&a.bannedChars&&(i=are(i,a.bannedChars))
for(let r=0;r<e;r++)n+=this.faker.random.arrayElement(i)
return n}hexaDecimal(e){return console.log("Deprecation Warning: faker.random.hexaDecimal is now located in faker.datatype.hexaDecimal"),this.faker.datatype.hexaDecimal(e)}}}))
function rre(e){if(Array.from)return Array.from(e)
let a=[]
return e.forEach((e=>{a.push(e)})),a}var tre,ore,sre,lre,ure=c((()=>{tre=["video","audio","image","text","application"],ore=["application/pdf","audio/mpeg","audio/wav","image/png","image/jpeg","image/gif","video/mp4","video/mpeg","text/html"],sre=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(sre.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}fileName(){let e=this.faker.random.words()
return e=e.toLowerCase().replace(/\W/g,"_")+"."+this.faker.system.fileExt(),e}commonFileName(e){let a=this.faker.random.words()
return a=a.toLowerCase().replace(/\W/g,"_"),a+="."+(e||this.faker.system.commonFileExt()),a}mimeType(){let e=Object.keys(this.faker.definitions.system.mimeTypes)
return this.faker.random.arrayElement(e)}commonFileType(){return this.faker.random.arrayElement(tre)}commonFileExt(){return this.faker.system.fileExt(this.faker.random.arrayElement(ore))}fileType(){let e=new Set,a=this.faker.definitions.system.mimeTypes
Object.keys(a).forEach((a=>{let n=a.split("/")[0]
e.add(n)}))
let n=rre(e)
return this.faker.random.arrayElement(n)}fileExt(e){if("string"==typeof e){let a=this.faker.definitions.system.mimeTypes
return this.faker.random.arrayElement(a[e].extensions)}let a=this.faker.definitions.system.mimeTypes,n=new Set
Object.keys(a).forEach((e=>{a[e].extensions instanceof Array&&a[e].extensions.forEach((e=>{n.add(e)}))}))
let i=rre(n)
return this.faker.random.arrayElement(i)}directoryPath(){let e=this.faker.definitions.system.directoryPaths
return this.faker.random.arrayElement(e)}filePath(){return this.faker.fake("{{system.directoryPath}}/{{system.fileName}}.{{system.fileExt}}")}semver(){return[this.faker.datatype.number(9),this.faker.datatype.number(9),this.faker.datatype.number(9)].join(".")}}})),cre=c((()=>{lre=class{recent(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"unix",a=new Date
switch(e){case"abbr":a=a.toLocaleTimeString()
break
case"wide":a=a.toTimeString()
break
case"unix":a=a.getTime()}return a}}}))
function dre(e,a){return typeof e[a]>"u"?-1:0}function hre(e,a,n){throw console.error("error",a),console.log("found",Object.keys(mre).length,"unique entries before throwing error. \nretried:",0,"\ntotal time:",e-n.startTime,"ms"),new Error(a+" for uniqueness check \n\nMay not be able to generate any more unique values with current settings. \nTry adjusting maxTime or maxRetries parameters for faker.unique()")}function pre(e,a,n){let i=(new Date).getTime();(n=n||{}).maxTime=n.maxTime||3,n.maxRetries=n.maxRetries||50,n.exclude=n.exclude||fre,n.compare=n.compare||dre,"number"!=typeof n.currentIterations&&(n.currentIterations=0),typeof n.startTime>"u"&&(n.startTime=(new Date).getTime())
let r=n.startTime
if("string"==typeof n.exclude&&(n.exclude=[n.exclude]),n.currentIterations,i-r>=n.maxTime)return hre(i,`Exceeded maxTime: ${n.maxTime}`,n)
if(n.currentIterations>=n.maxRetries)return hre(i,`Exceeded maxRetries: ${n.maxRetries}`,n)
let t=e.apply(this,a)
return-1===n.compare(mre,t)&&-1===n.exclude.indexOf(t)?(mre[t]=t,n.currentIterations=0,t):(n.currentIterations++,pre(e,a,n))}var mre,fre,vre,gre,kre,yre,bre,Sre,Are,Mre=c((()=>{mre={},fre=[]})),Tre=c((()=>{Mre(),vre=class{constructor(){this.maxTime=10,this.maxRetries=10
for(let e of Object.getOwnPropertyNames(vre.prototype))"constructor"===e||"function"!=typeof this[e]||(this[e]=this[e].bind(this))}unique(e,a,n){return(n=n||{}).startTime=(new Date).getTime(),"number"!=typeof n.maxTime&&(n.maxTime=this.maxTime),"number"!=typeof n.maxRetries&&(n.maxRetries=this.maxRetries),n.currentIterations=0,pre(e,a,n)}}})),_re=c((()=>{kre=class{constructor(e){this.faker=e,gre=e.fake
for(let a of Object.getOwnPropertyNames(kre.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}vehicle(){return gre("{{vehicle.manufacturer}} {{vehicle.model}}")}manufacturer(){return this.faker.random.arrayElement(this.faker.definitions.vehicle.manufacturer)}model(){return this.faker.random.arrayElement(this.faker.definitions.vehicle.model)}type(){return this.faker.random.arrayElement(this.faker.definitions.vehicle.type)}fuel(){return this.faker.random.arrayElement(this.faker.definitions.vehicle.fuel)}vin(){let e=["o","i","q"]
return`${this.faker.random.alphaNumeric(10,{bannedChars:e})}${this.faker.random.alpha({count:1,upcase:!0,bannedChars:e})}${this.faker.random.alphaNumeric(1,{bannedChars:e})}${this.faker.datatype.number({min:1e4,max:1e5})}`.toUpperCase()}color(){return gre("{{commerce.color}}")}vrm(){return`${this.faker.random.alpha({count:2,upcase:!0})}${this.faker.datatype.number({min:0,max:9})}${this.faker.datatype.number({min:0,max:9})}${this.faker.random.alpha({count:3,upcase:!0})}`.toUpperCase()}bicycle(){return this.faker.random.arrayElement(this.faker.definitions.vehicle.bicycle_type)}}})),wre=c((()=>{yre=class{constructor(e){this.faker=e
for(let a of Object.getOwnPropertyNames(yre.prototype))"constructor"===a||"function"!=typeof this[a]||(this[a]=this[a].bind(this))}adjective(e){let a=this.faker.definitions.word.adjective
return e&&(a=this.faker.definitions.word.adjective.filter((a=>a.length==e))),this.faker.random.arrayElement(a)||this.faker.random.arrayElement(this.faker.definitions.word.adjective)}adverb(e){let a=this.faker.definitions.word.adverb
return e&&(a=this.faker.definitions.word.adverb.filter((a=>a.length==e))),this.faker.random.arrayElement(a)||this.faker.random.arrayElement(this.faker.definitions.word.adverb)}conjunction(e){let a=this.faker.definitions.word.conjunction
return e&&(a=this.faker.definitions.word.conjunction.filter((a=>a.length==e))),this.faker.random.arrayElement(a)||this.faker.random.arrayElement(this.faker.definitions.word.conjunction)}interjection(e){let a=this.faker.definitions.word.interjection
return e&&(a=this.faker.definitions.word.interjection.filter((a=>a.length==e))),this.faker.random.arrayElement(a)||this.faker.random.arrayElement(this.faker.definitions.word.interjection)}noun(e){let a=this.faker.definitions.word.noun
return e&&(a=this.faker.definitions.word.noun.filter((a=>a.length==e))),this.faker.random.arrayElement(a)||this.faker.random.arrayElement(this.faker.definitions.word.noun)}preposition(e){let a=this.faker.definitions.word.preposition
return e&&(a=this.faker.definitions.word.preposition.filter((a=>a.length==e))),this.faker.random.arrayElement(a)||this.faker.random.arrayElement(this.faker.definitions.word.preposition)}verb(e){let a=this.faker.definitions.word.verb
return e&&(a=this.faker.definitions.word.verb.filter((a=>a.length==e))),this.faker.random.arrayElement(a)||this.faker.random.arrayElement(this.faker.definitions.word.verb)}}})),jre=c((()=>{_(),w(),j(),E(),N(),B(),P(),ux(),cx(),dx(),hx(),px(),mx(),kx(),bx(),Qie(),Yie(),T(),$ie(),Xie(),ere(),ire(),ure(),cre(),Tre(),_re(),wre(),bre=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}
this.definitions={},this.fake=new Q(this).fake,this.unique=(new vre).unique,this.mersenne=new p,this.random=new nre(this),this.helpers=new ae(this),this.datatype=new S(this),this.address=new f(this),this.animal=new v(this),this.commerce=new g(this),this.company=new y(this),this.database=new b(this),this.date=new A(this),this.finance=new $(this),this.git=new X(this),this.hacker=new ee(this),this.image=new te(this),this.internet=new oe(this),this.lorem=new VD(this),this.music=new GD(this),this.name=new HD(this),this.phone=new FD(this),this.system=new sre(this),this.time=new lre,this.vehicle=new kre(this),this.word=new yre(this),this.locales=this.locales||e.locales||{},this.locale=this.locale||e.locale||"en",this.localeFallback=this.localeFallback||e.localeFallback||"en",this.loadDefinitions()}loadDefinitions(){Object.entries(q).forEach((e=>{let[a,n]=e
typeof this.definitions[a]>"u"&&(this.definitions[a]={}),"string"!=typeof n?n.forEach((e=>{Object.defineProperty(this.definitions[a],e,{get:()=>typeof this.locales[this.locale][a]>"u"||typeof this.locales[this.locale][a][e]>"u"?this.locales[this.localeFallback][a][e]:this.locales[this.locale][a][e]})})):this.definitions[a]=n}))}seed(e){this.seedValue=e,this.random=new nre(this,this.seedValue),this.datatype=new S(this,this.seedValue)}setLocale(e){this.locale=e}},Sre=new bre({locales:ID}),Are=Sre}))
jre()},8679:()=>{"undefined"!=typeof global&&global.__pretenderNodePolyfill&&(delete global.self,delete global.__pretenderNodePolyfill)},3509:()=>{"undefined"!=typeof global&&void 0===global.self&&(global.self={},global.__pretenderNodePolyfill=!0)},768:(e,a,n)=>{"use strict"
n.d(a,{g7:()=>l})
var i=null,r={},t=1,o="@wry/context:Slot",s=Array,l=s[o]||function(){var e=function(){function e(){this.id=["slot",t++,Date.now(),Math.random().toString(36).slice(2)].join(":")}return e.prototype.hasValue=function(){for(var e=i;e;e=e.parent)if(this.id in e.slots){var a=e.slots[this.id]
if(a===r)break
return e!==i&&(i.slots[this.id]=a),!0}return i&&(i.slots[this.id]=r),!1},e.prototype.getValue=function(){if(this.hasValue())return i.slots[this.id]},e.prototype.withValue=function(e,a,n,r){var t,o=((t={__proto__:null})[this.id]=e,t),s=i
i={parent:s,slots:o}
try{return a.apply(r,n)}finally{i=s}},e.bind=function(e){var a=i
return function(){var n=i
try{return i=a,e.apply(this,arguments)}finally{i=n}}},e.noContext=function(e,a,n){if(!i)return e.apply(n,a)
var r=i
try{return i=null,e.apply(n,a)}finally{i=r}},e}()
try{Object.defineProperty(s,o,{value:s[o]=e,enumerable:!1,writable:!1,configurable:!1})}finally{return e}}()
l.bind,l.noContext},7812:(e,a,n)=>{"use strict"
n.d(a,{D:()=>l})
var i=Object.prototype,r=i.toString,t=i.hasOwnProperty,o=Function.prototype.toString,s=new Map
function l(e,a){try{return u(e,a)}finally{s.clear()}}function u(e,a){if(e===a)return!0
var n,i,s,l=r.call(e)
if(l!==r.call(a))return!1
switch(l){case"[object Array]":if(e.length!==a.length)return!1
case"[object Object]":if(p(e,a))return!0
var d=c(e),m=c(a),f=d.length
if(f!==m.length)return!1
for(var v=0;v<f;++v)if(!t.call(a,d[v]))return!1
for(v=0;v<f;++v){var g=d[v]
if(!u(e[g],a[g]))return!1}return!0
case"[object Error]":return e.name===a.name&&e.message===a.message
case"[object Number]":if(e!=e)return a!=a
case"[object Boolean]":case"[object Date]":return+e==+a
case"[object RegExp]":case"[object String]":return e==""+a
case"[object Map]":case"[object Set]":if(e.size!==a.size)return!1
if(p(e,a))return!0
for(var k=e.entries(),y="[object Map]"===l;;){var b=k.next()
if(b.done)break
var S=b.value,A=S[0],M=S[1]
if(!a.has(A))return!1
if(y&&!u(M,a.get(A)))return!1}return!0
case"[object Uint16Array]":case"[object Uint8Array]":case"[object Uint32Array]":case"[object Int32Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object ArrayBuffer]":e=new Uint8Array(e),a=new Uint8Array(a)
case"[object DataView]":var T=e.byteLength
if(T===a.byteLength)for(;T--&&e[T]===a[T];);return-1===T
case"[object AsyncFunction]":case"[object GeneratorFunction]":case"[object AsyncGeneratorFunction]":case"[object Function]":var _=o.call(e)
return _===o.call(a)&&(i=h,!((s=(n=_).length-i.length)>=0&&n.indexOf(i,s)===s))}return!1}function c(e){return Object.keys(e).filter(d,e)}function d(e){return void 0!==this[e]}var h="{ [native code] }"
function p(e,a){var n=s.get(e)
if(n){if(n.has(a))return!0}else s.set(e,n=new Set)
return n.add(a),!1}},9585:(e,a,n)=>{"use strict"
n.d(a,{B:()=>s})
var i=function(){return Object.create(null)},r=Array.prototype,t=r.forEach,o=r.slice,s=function(){function e(e,a){void 0===e&&(e=!0),void 0===a&&(a=i),this.weakness=e,this.makeData=a}return e.prototype.lookup=function(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a]
return this.lookupArray(e)},e.prototype.lookupArray=function(e){var a=this
return t.call(e,(function(e){return a=a.getChildTrie(e)})),a.data||(a.data=this.makeData(o.call(e)))},e.prototype.getChildTrie=function(a){var n=this.weakness&&function(e){switch(typeof e){case"object":if(null===e)break
case"function":return!0}return!1}(a)?this.weak||(this.weak=new WeakMap):this.strong||(this.strong=new Map),i=n.get(a)
return i||n.set(a,i=new e(this.weakness,this.makeData)),i},e}()},4173:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{ApolloLink:()=>P,Observable:()=>r,concat:()=>B,createOperation:()=>T,empty:()=>j,execute:()=>L,from:()=>E,fromError:()=>M,fromPromise:()=>A,getOperationName:()=>k,makePromise:()=>S,split:()=>N,toPromise:()=>b})
var i=n(6657)
const r=n.n(i)()
var t,o=function(e,a){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var n in a)a.hasOwnProperty(n)&&(e[n]=a[n])},o(e,a)},s="Invariant Violation",l=Object.setPrototypeOf,u=void 0===l?function(e,a){return e.__proto__=a,e}:l,c=function(e){function a(n){void 0===n&&(n=s)
var i=e.call(this,"number"==typeof n?s+": "+n+" (see https://github.com/apollographql/invariant-packages)":n)||this
return i.framesToPop=1,i.name=s,u(i,a.prototype),i}return function(e,a){function n(){this.constructor=e}o(e,a),e.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}(a,e),a}(Error)
function d(e,a){if(!e)throw new c(a)}function h(e){return function(){return console[e].apply(console,arguments)}}(t=d||(d={})).warn=h("warn"),t.error=h("error")
var p={env:{}}
if("object"==typeof process)p=process
else try{Function("stub","process = stub")(p)}catch(e){}var m=function(e,a){return m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var n in a)a.hasOwnProperty(n)&&(e[n]=a[n])},m(e,a)},f=function(){return f=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},f.apply(this,arguments)}
n(2410)
var v,g=Object.prototype
function k(e){return e.definitions.filter((function(e){return"OperationDefinition"===e.kind&&e.name})).map((function(e){return e.name.value}))[0]||null}function y(e){return e.request.length<=1}function b(e){var a=!1
return new Promise((function(n,i){e.subscribe({next:function(e){a||(a=!0,n(e))},error:i})}))}g.toString,g.hasOwnProperty,new Map,"function"==typeof WeakMap&&"object"==typeof navigator&&navigator.product,Object.prototype.toString,Object.prototype.hasOwnProperty,Object.create({}),function(e,a){function n(){this.constructor=e}m(e,a),e.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}((function(e,a){var n=v.call(this,e)||this
return n.link=a,n}),v=Error)
var S=b
function A(e){return new r((function(a){e.then((function(e){a.next(e),a.complete()})).catch(a.error.bind(a))}))}function M(e){return new r((function(a){a.error(e)}))}function T(e,a){var n=f({},e)
return Object.defineProperty(a,"setContext",{enumerable:!1,value:function(e){n=f({},n,"function"==typeof e?e(n):e)}}),Object.defineProperty(a,"getContext",{enumerable:!1,value:function(){return f({},n)}}),Object.defineProperty(a,"toKey",{enumerable:!1,value:function(){return function(e){var a=e.query,n=e.variables,i=e.operationName
return JSON.stringify([i,a,n])}(a)}}),a}function _(e,a){return a?a(e):r.of()}function w(e){return"function"==typeof e?new P(e):e}function j(){return new P((function(){return r.of()}))}function E(e){return 0===e.length?j():e.map(w).reduce((function(e,a){return e.concat(a)}))}function N(e,a,n){var i=w(a),t=w(n||new P(_))
return y(i)&&y(t)?new P((function(a){return e(a)?i.request(a)||r.of():t.request(a)||r.of()})):new P((function(a,n){return e(a)?i.request(a,n)||r.of():t.request(a,n)||r.of()}))}var B=function(e,a){var n=w(e)
if(y(n))return n
var i=w(a)
return y(i)?new P((function(e){return n.request(e,(function(e){return i.request(e)||r.of()}))||r.of()})):new P((function(e,a){return n.request(e,(function(e){return i.request(e,a)||r.of()}))||r.of()}))},P=function(){function e(e){e&&(this.request=e)}return e.prototype.split=function(a,n,i){return this.concat(N(a,n,i||new e(_)))},e.prototype.concat=function(e){return B(this,e)},e.prototype.request=function(e,a){throw new c(1)},e.empty=j,e.from=E,e.split=N,e.execute=L,e}()
function L(e,a){return e.request(T(a.context,function(e){var a={variables:e.variables||{},extensions:e.extensions||{},operationName:e.operationName,query:e.query}
return a.operationName||(a.operationName="string"!=typeof a.query?k(a.query):""),a}(function(e){for(var a=["query","operationName","variables","extensions","context"],n=0,i=Object.keys(e);n<i.length;n++){var r=i[n]
if(a.indexOf(r)<0)throw new c(2)}return e}(a))))||r.of()}},9079:function(e){var a
a=function(){return function(){var e={686:function(e,a,n){"use strict"
n.d(a,{default:function(){return S}})
var i=n(279),r=n.n(i),t=n(370),o=n.n(t),s=n(817),l=n.n(s)
function u(e){try{return document.execCommand(e)}catch(e){return!1}}var c=function(e){var a=l()(e)
return u("cut"),a}
function d(e){var a="rtl"===document.documentElement.getAttribute("dir"),n=document.createElement("textarea")
n.style.fontSize="12pt",n.style.border="0",n.style.padding="0",n.style.margin="0",n.style.position="absolute",n.style[a?"right":"left"]="-9999px"
var i=window.pageYOffset||document.documentElement.scrollTop
return n.style.top="".concat(i,"px"),n.setAttribute("readonly",""),n.value=e,n}var h=function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{container:document.body},n=""
if("string"==typeof e){var i=d(e)
a.container.appendChild(i),n=l()(i),u("copy"),i.remove()}else n=l()(e),u("copy")
return n}
function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function f(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function v(e,a){return v=Object.setPrototypeOf||function(e,a){return e.__proto__=a,e},v(e,a)}function g(e,a){return!a||"object"!==m(a)&&"function"!=typeof a?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}(e):a}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}function y(e,a){var n="data-clipboard-".concat(e)
if(a.hasAttribute(n))return a.getAttribute(n)}var b=function(e){!function(e,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(a&&a.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),a&&v(e,a)}(l,e)
var a,n,i,r,t,s=(r=l,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,a=k(r)
if(t){var n=k(this).constructor
e=Reflect.construct(a,arguments,n)}else e=a.apply(this,arguments)
return g(this,e)})
function l(e,a){var n
return function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,l),(n=s.call(this)).resolveOptions(a),n.listenClick(e),n}return a=l,n=[{key:"resolveOptions",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}
this.action="function"==typeof e.action?e.action:this.defaultAction,this.target="function"==typeof e.target?e.target:this.defaultTarget,this.text="function"==typeof e.text?e.text:this.defaultText,this.container="object"===m(e.container)?e.container:document.body}},{key:"listenClick",value:function(e){var a=this
this.listener=o()(e,"click",(function(e){return a.onClick(e)}))}},{key:"onClick",value:function(e){var a=e.delegateTarget||e.currentTarget,n=this.action(a)||"copy",i=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=e.action,n=void 0===a?"copy":a,i=e.container,r=e.target,t=e.text
if("copy"!==n&&"cut"!==n)throw new Error('Invalid "action" value, use either "copy" or "cut"')
if(void 0!==r){if(!r||"object"!==p(r)||1!==r.nodeType)throw new Error('Invalid "target" value, use a valid Element')
if("copy"===n&&r.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute')
if("cut"===n&&(r.hasAttribute("readonly")||r.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes')}return t?h(t,{container:i}):r?"cut"===n?c(r):h(r,{container:i}):void 0}({action:n,container:this.container,target:this.target(a),text:this.text(a)})
this.emit(i?"success":"error",{action:n,text:i,trigger:a,clearSelection:function(){a&&a.focus(),document.activeElement.blur(),window.getSelection().removeAllRanges()}})}},{key:"defaultAction",value:function(e){return y("action",e)}},{key:"defaultTarget",value:function(e){var a=y("target",e)
if(a)return document.querySelector(a)}},{key:"defaultText",value:function(e){return y("text",e)}},{key:"destroy",value:function(){this.listener.destroy()}}],i=[{key:"copy",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{container:document.body}
return h(e,a)}},{key:"cut",value:function(e){return c(e)}},{key:"isSupported",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["copy","cut"],a="string"==typeof e?[e]:e,n=!!document.queryCommandSupported
return a.forEach((function(e){n=n&&!!document.queryCommandSupported(e)})),n}}],n&&f(a.prototype,n),i&&f(a,i),l}(r()),S=b},828:function(e){if("undefined"!=typeof Element&&!Element.prototype.matches){var a=Element.prototype
a.matches=a.matchesSelector||a.mozMatchesSelector||a.msMatchesSelector||a.oMatchesSelector||a.webkitMatchesSelector}e.exports=function(e,a){for(;e&&9!==e.nodeType;){if("function"==typeof e.matches&&e.matches(a))return e
e=e.parentNode}}},438:function(e,a,n){var i=n(828)
function r(e,a,n,i,r){var o=t.apply(this,arguments)
return e.addEventListener(n,o,r),{destroy:function(){e.removeEventListener(n,o,r)}}}function t(e,a,n,r){return function(n){n.delegateTarget=i(n.target,a),n.delegateTarget&&r.call(e,n)}}e.exports=function(e,a,n,i,t){return"function"==typeof e.addEventListener?r.apply(null,arguments):"function"==typeof n?r.bind(null,document).apply(null,arguments):("string"==typeof e&&(e=document.querySelectorAll(e)),Array.prototype.map.call(e,(function(e){return r(e,a,n,i,t)})))}},879:function(e,a){a.node=function(e){return void 0!==e&&e instanceof HTMLElement&&1===e.nodeType},a.nodeList=function(e){var n=Object.prototype.toString.call(e)
return void 0!==e&&("[object NodeList]"===n||"[object HTMLCollection]"===n)&&"length"in e&&(0===e.length||a.node(e[0]))},a.string=function(e){return"string"==typeof e||e instanceof String},a.fn=function(e){return"[object Function]"===Object.prototype.toString.call(e)}},370:function(e,a,n){var i=n(879),r=n(438)
e.exports=function(e,a,n){if(!e&&!a&&!n)throw new Error("Missing required arguments")
if(!i.string(a))throw new TypeError("Second argument must be a String")
if(!i.fn(n))throw new TypeError("Third argument must be a Function")
if(i.node(e))return function(e,a,n){return e.addEventListener(a,n),{destroy:function(){e.removeEventListener(a,n)}}}(e,a,n)
if(i.nodeList(e))return function(e,a,n){return Array.prototype.forEach.call(e,(function(e){e.addEventListener(a,n)})),{destroy:function(){Array.prototype.forEach.call(e,(function(e){e.removeEventListener(a,n)}))}}}(e,a,n)
if(i.string(e))return function(e,a,n){return r(document.body,e,a,n)}(e,a,n)
throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}},817:function(e){e.exports=function(e){var a
if("SELECT"===e.nodeName)e.focus(),a=e.value
else if("INPUT"===e.nodeName||"TEXTAREA"===e.nodeName){var n=e.hasAttribute("readonly")
n||e.setAttribute("readonly",""),e.select(),e.setSelectionRange(0,e.value.length),n||e.removeAttribute("readonly"),a=e.value}else{e.hasAttribute("contenteditable")&&e.focus()
var i=window.getSelection(),r=document.createRange()
r.selectNodeContents(e),i.removeAllRanges(),i.addRange(r),a=i.toString()}return a}},279:function(e){function a(){}a.prototype={on:function(e,a,n){var i=this.e||(this.e={})
return(i[e]||(i[e]=[])).push({fn:a,ctx:n}),this},once:function(e,a,n){var i=this
function r(){i.off(e,r),a.apply(n,arguments)}return r._=a,this.on(e,r,n)},emit:function(e){for(var a=[].slice.call(arguments,1),n=((this.e||(this.e={}))[e]||[]).slice(),i=0,r=n.length;i<r;i++)n[i].fn.apply(n[i].ctx,a)
return this},off:function(e,a){var n=this.e||(this.e={}),i=n[e],r=[]
if(i&&a)for(var t=0,o=i.length;t<o;t++)i[t].fn!==a&&i[t].fn._!==a&&r.push(i[t])
return r.length?n[e]=r:delete n[e],this}},e.exports=a,e.exports.TinyEmitter=a}},a={}
function n(i){if(a[i])return a[i].exports
var r=a[i]={exports:{}}
return e[i](r,r.exports,n),r.exports}return n.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e}
return n.d(a,{a:a}),a},n.d=function(e,a){for(var i in a)n.o(a,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:a[i]})},n.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},n(686)}().default},e.exports=a()},3874:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{CodeJar:()=>r})
const i=window
function r(e,a){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}
const r=Object.assign({tab:"\t",indentOn:/{$/,spellcheck:!1,catchTab:!0,preserveIdent:!0,addClosing:!0,history:!0,window:i},n),t=r.window,o=t.document
let s,l,u=[],c=[],d=-1,h=!1
e.setAttribute("contenteditable","plaintext-only"),e.setAttribute("spellcheck",r.spellcheck?"true":"false"),e.style.outline="none",e.style.overflowWrap="break-word",e.style.overflowY="auto",e.style.whiteSpace="pre-wrap"
let p=!1
a(e),"plaintext-only"!==e.contentEditable&&(p=!0),p&&e.setAttribute("contenteditable","true")
const m=C((()=>{const n=y()
a(e,n),b(n)}),30)
let f=!1
const v=e=>!L(e)&&!D(e)&&"Meta"!==e.key&&"Control"!==e.key&&"Alt"!==e.key&&!e.key.startsWith("Arrow"),g=C((e=>{v(e)&&(E(),f=!1)}),300),k=(a,n)=>{u.push([a,n]),e.addEventListener(a,n)}
function y(){const a=O(),n={start:0,end:0,dir:void 0}
let{anchorNode:i,anchorOffset:r,focusNode:t,focusOffset:s}=a
if(!i||!t)throw"error1"
if(i.nodeType===Node.ELEMENT_NODE){const e=o.createTextNode("")
i.insertBefore(e,i.childNodes[r]),i=e,r=0}if(t.nodeType===Node.ELEMENT_NODE){const e=o.createTextNode("")
t.insertBefore(e,t.childNodes[s]),t=e,s=0}return B(e,(e=>{if(e===i&&e===t)return n.start+=r,n.end+=s,n.dir=r<=s?"->":"<-","stop"
if(e===i){if(n.start+=r,n.dir)return"stop"
n.dir="->"}else if(e===t){if(n.end+=s,n.dir)return"stop"
n.dir="<-"}e.nodeType===Node.TEXT_NODE&&("->"!=n.dir&&(n.start+=e.nodeValue.length),"<-"!=n.dir&&(n.end+=e.nodeValue.length))})),e.normalize(),n}function b(a){const n=O()
let i,r,t=0,o=0
if(a.dir||(a.dir="->"),a.start<0&&(a.start=0),a.end<0&&(a.end=0),"<-"==a.dir){const{start:e,end:n}=a
a.start=n,a.end=e}let s=0
B(e,(e=>{if(e.nodeType!==Node.TEXT_NODE)return
const n=(e.nodeValue||"").length
if(s+n>a.start&&(i||(i=e,t=a.start-s),s+n>a.end))return r=e,o=a.end-s,"stop"
s+=n})),i||(i=e,t=e.childNodes.length),r||(r=e,o=e.childNodes.length),"<-"==a.dir&&([i,t,r,o]=[r,o,i,t]),n.setBaseAndExtent(i,t,r,o)}function S(){const a=O().getRangeAt(0),n=o.createRange()
return n.selectNodeContents(e),n.setEnd(a.startContainer,a.startOffset),n.toString()}function A(){const a=O().getRangeAt(0),n=o.createRange()
return n.selectNodeContents(e),n.setStart(a.endContainer,a.endOffset),n.toString()}function M(e){if("Enter"===e.key){const a=S(),n=A()
let[i]=K(a),t=i
if(r.indentOn.test(a)&&(t+=r.tab),t.length>0?(z(e),e.stopPropagation(),x("\n"+t)):T(e),t!==i&&"}"===n[0]){const e=y()
x("\n"+i),b(e)}}}function T(e){if(p&&"Enter"===e.key)if(z(e),e.stopPropagation(),""==A()){x("\n ")
const e=y()
e.start=--e.end,b(e)}else x("\n")}function _(e){const a="([{'\"",n=")]}'\"",i=A(),r=S(),t="\\"===r.substr(r.length-1),o=i.substr(0,1)
if(n.includes(e.key)&&!t&&o===e.key){const a=y()
z(e),a.start=++a.end,b(a)}else if(a.includes(e.key)&&!t&&("\"'".includes(e.key)||[""," ","\n"].includes(o))){z(e)
const i=y(),r=i.start==i.end?"":O().toString()
x(e.key+r+n[a.indexOf(e.key)]),i.start++,i.end++,b(i)}}function w(e){if("Tab"===e.key)if(z(e),e.shiftKey){const e=S()
let[a,n]=K(e)
if(a.length>0){const e=y(),i=Math.min(r.tab.length,a.length)
b({start:n,end:n+i}),o.execCommand("delete"),e.start-=i,e.end-=i,b(e)}}else x(r.tab)}function j(a){if(L(a)){z(a),d--
const n=c[d]
n&&(e.innerHTML=n.html,b(n.pos)),d<0&&(d=0)}if(D(a)){z(a),d++
const n=c[d]
n&&(e.innerHTML=n.html,b(n.pos)),d>=c.length&&d--}}function E(){if(!h)return
const a=e.innerHTML,n=y(),i=c[d]
i&&i.html===a&&i.pos.start===n.start&&i.pos.end===n.end||(d++,c[d]={html:a,pos:n},c.splice(d+1),d>300&&(d=300,c.splice(0,1)))}function N(n){z(n)
const i=(n.originalEvent||n).clipboardData.getData("text/plain").replace(/\r/g,""),r=y()
x(i),a(e),b({start:r.start+i.length,end:r.start+i.length})}function B(e,a){const n=[]
e.firstChild&&n.push(e.firstChild)
let i=n.pop()
for(;i&&"stop"!==a(i);)i.nextSibling&&n.push(i.nextSibling),i.firstChild&&n.push(i.firstChild),i=n.pop()}function P(e){return e.metaKey||e.ctrlKey}function L(e){return P(e)&&!e.shiftKey&&"KeyZ"===e.code}function D(e){return P(e)&&e.shiftKey&&"KeyZ"===e.code}function x(e){e=e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;"),o.execCommand("insertHTML",!1,e)}function C(e,a){let n=0
return function(){for(var i=arguments.length,r=new Array(i),o=0;o<i;o++)r[o]=arguments[o]
clearTimeout(n),n=t.setTimeout((()=>e(...r)),a)}}function K(e){let a=e.length-1
for(;a>=0&&"\n"!==e[a];)a--
a++
let n=a
for(;n<e.length&&/[ \t]/.test(e[n]);)n++
return[e.substring(a,n)||"",a,n]}function R(){return e.textContent||""}function z(e){e.preventDefault()}function O(){var a
return(null===(a=e.parentNode)||void 0===a?void 0:a.nodeType)==Node.DOCUMENT_FRAGMENT_NODE?e.parentNode.getSelection():t.getSelection()}return k("keydown",(e=>{e.defaultPrevented||(l=R(),r.preserveIdent?M(e):T(e),r.catchTab&&w(e),r.addClosing&&_(e),r.history&&(j(e),v(e)&&!f&&(E(),f=!0)),p&&b(y()))})),k("keyup",(e=>{e.defaultPrevented||e.isComposing||(l!==R()&&m(),g(e),s&&s(R()))})),k("focus",(e=>{h=!0})),k("blur",(e=>{h=!1})),k("paste",(e=>{E(),N(e),E(),s&&s(R())})),{updateOptions(e){Object.assign(r,e)},updateCode(n){e.textContent=n,a(e)},onUpdate(e){s=e},toString:R,save:y,restore:b,recordHistory:E,destroy(){for(let[a,n]of u)e.removeEventListener(a,n)}}}},458:(e,a)=>{"use strict"
function n(e,a,n,i,r){var t={}
return function(){var o=(((new Error).stack||"").match(/(?:\s+at\s.+){2}\s+at\s(.+)/)||[void 0,""])[1]
if(!((o=/\)$/.test(o)?o.match(/[^(]+(?=\)$)/)[0]:o.trim())in t)){var s
switch(t[o]=!0,e){case"class":s="Class"
break
case"property":s="Property"
break
case"method":s="Method"
break
case"function":s="Function"}s+=" `"+a+"` has been deprecated",i&&(s+=" since version "+i),n&&(s+=", use `"+n+"` instead"),s+=".",o&&(s+="\n    at "+o),r&&(s+="\nCheck out "+r+" for more information."),console.warn(s)}}}function i(e,i,r,t,o,s){var l=(a.options.getWarner||n)(e,i,t,o,s),u={enumerable:(r=r||{writable:!0,enumerable:!1,configurable:!0}).enumerable,configurable:r.configurable}
if(r.get||r.set)r.get&&(u.get=function(){return l(),r.get.call(this)}),r.set&&(u.set=function(e){return l(),r.set.call(this,e)})
else{var c=r.value
u.get=function(){return l(),c},r.writable&&(u.set=function(e){l(),c=e})}return u}function r(e,i,r,t,o){for(var s=i.name,l=(a.options.getWarner||n)(e,s,r,t,o),u=function(){return l(),i.apply(this,arguments)},c=0,d=Object.getOwnPropertyNames(i);c<d.length;c++){var h=d[c],p=Object.getOwnPropertyDescriptor(i,h)
p.writable?u[h]=i[h]:p.configurable&&Object.defineProperty(u,h,p)}return u}function t(){for(var e=[],a=0;a<arguments.length;a++)e[a-0]=arguments[a]
var n=e[e.length-1]
n="function"==typeof n?e.pop():void 0
var t,o,s,l=e[0]
return"string"==typeof l?(t=l,o=e[1],s=e[2]):l&&(t=l.alternative,o=l.version,s=l.url),n?r("function",n,t,o,s):function(e,a,n){if("string"==typeof a)return i(n&&"function"==typeof n.value?"method":"property",a,n,t,o,s)
if("function"==typeof e){for(var l=r("class",e,t,o,s),u=e.name,c=0,d=Object.getOwnPropertyNames(l);c<d.length;c++){var h=d[c],p=Object.getOwnPropertyDescriptor(l,h);(p=i("class",u,p,t,o,s)).writable?l[h]=e[h]:p.configurable&&Object.defineProperty(l,h,p)}return l}}}a.options={getWarner:void 0},a.deprecated=t,Object.defineProperty(a,"__esModule",{value:!0}),a.default=t},3572:(e,a,n)=>{const i=n(932),{defaults:r}=n(8597),{inline:t}=n(9262),{findClosingBracket:o,escape:s}=n(9729)
e.exports=class e{constructor(e,a){if(this.options=a||r,this.links=e,this.rules=t.normal,this.options.renderer=this.options.renderer||new i,this.renderer=this.options.renderer,this.renderer.options=this.options,!this.links)throw new Error("Tokens array requires a `links` property.")
this.options.pedantic?this.rules=t.pedantic:this.options.gfm&&(this.options.breaks?this.rules=t.breaks:this.rules=t.gfm)}static get rules(){return t}static output(a,n,i){return new e(n,i).output(a)}output(a){let n,i,r,t,l,u,c=""
for(;a;)if(l=this.rules.escape.exec(a))a=a.substring(l[0].length),c+=s(l[1])
else if(l=this.rules.tag.exec(a))!this.inLink&&/^<a /i.test(l[0])?this.inLink=!0:this.inLink&&/^<\/a>/i.test(l[0])&&(this.inLink=!1),!this.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(l[0])?this.inRawBlock=!0:this.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(l[0])&&(this.inRawBlock=!1),a=a.substring(l[0].length),c+=this.renderer.html(this.options.sanitize?this.options.sanitizer?this.options.sanitizer(l[0]):s(l[0]):l[0])
else if(l=this.rules.link.exec(a)){const i=o(l[2],"()")
if(i>-1){const e=(0===l[0].indexOf("!")?5:4)+l[1].length+i
l[2]=l[2].substring(0,i),l[0]=l[0].substring(0,e).trim(),l[3]=""}a=a.substring(l[0].length),this.inLink=!0,r=l[2],this.options.pedantic?(n=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(r),n?(r=n[1],t=n[3]):t=""):t=l[3]?l[3].slice(1,-1):"",r=r.trim().replace(/^<([\s\S]*)>$/,"$1"),c+=this.outputLink(l,{href:e.escapes(r),title:e.escapes(t)}),this.inLink=!1}else if((l=this.rules.reflink.exec(a))||(l=this.rules.nolink.exec(a))){if(a=a.substring(l[0].length),n=(l[2]||l[1]).replace(/\s+/g," "),n=this.links[n.toLowerCase()],!n||!n.href){c+=l[0].charAt(0),a=l[0].substring(1)+a
continue}this.inLink=!0,c+=this.outputLink(l,n),this.inLink=!1}else if(l=this.rules.strong.exec(a))a=a.substring(l[0].length),c+=this.renderer.strong(this.output(l[4]||l[3]||l[2]||l[1]))
else if(l=this.rules.em.exec(a))a=a.substring(l[0].length),c+=this.renderer.em(this.output(l[6]||l[5]||l[4]||l[3]||l[2]||l[1]))
else if(l=this.rules.code.exec(a))a=a.substring(l[0].length),c+=this.renderer.codespan(s(l[2].trim(),!0))
else if(l=this.rules.br.exec(a))a=a.substring(l[0].length),c+=this.renderer.br()
else if(l=this.rules.del.exec(a))a=a.substring(l[0].length),c+=this.renderer.del(this.output(l[1]))
else if(l=this.rules.autolink.exec(a))a=a.substring(l[0].length),"@"===l[2]?(i=s(this.mangle(l[1])),r="mailto:"+i):(i=s(l[1]),r=i),c+=this.renderer.link(r,null,i)
else if(this.inLink||!(l=this.rules.url.exec(a))){if(l=this.rules.text.exec(a))a=a.substring(l[0].length),this.inRawBlock?c+=this.renderer.text(this.options.sanitize?this.options.sanitizer?this.options.sanitizer(l[0]):s(l[0]):l[0]):c+=this.renderer.text(s(this.smartypants(l[0])))
else if(a)throw new Error("Infinite loop on byte: "+a.charCodeAt(0))}else{if("@"===l[2])i=s(l[0]),r="mailto:"+i
else{do{u=l[0],l[0]=this.rules._backpedal.exec(l[0])[0]}while(u!==l[0])
i=s(l[0]),r="www."===l[1]?"http://"+i:i}a=a.substring(l[0].length),c+=this.renderer.link(r,null,i)}return c}static escapes(a){return a?a.replace(e.rules._escapes,"$1"):a}outputLink(e,a){const n=a.href,i=a.title?s(a.title):null
return"!"!==e[0].charAt(0)?this.renderer.link(n,i,this.output(e[1])):this.renderer.image(n,i,s(e[1]))}smartypants(e){return this.options.smartypants?e.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…"):e}mangle(e){if(!this.options.mangle)return e
const a=e.length
let n,i="",r=0
for(;r<a;r++)n=e.charCodeAt(r),Math.random()>.5&&(n="x"+n.toString(16)),i+="&#"+n+";"
return i}}},1740:(e,a,n)=>{const{defaults:i}=n(8597),{block:r}=n(9262),{rtrim:t,splitCells:o,escape:s}=n(9729)
e.exports=class e{constructor(e){this.tokens=[],this.tokens.links=Object.create(null),this.options=e||i,this.rules=r.normal,this.options.pedantic?this.rules=r.pedantic:this.options.gfm&&(this.rules=r.gfm)}static get rules(){return r}static lex(a,n){return new e(n).lex(a)}lex(e){return e=e.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    "),this.token(e,!0)}token(e,a){let n,i,l,u,c,d,h,p,m,f,v,g,k,y,b,S
for(e=e.replace(/^ +$/gm,"");e;)if((l=this.rules.newline.exec(e))&&(e=e.substring(l[0].length),l[0].length>1&&this.tokens.push({type:"space"})),l=this.rules.code.exec(e)){const a=this.tokens[this.tokens.length-1]
e=e.substring(l[0].length),a&&"paragraph"===a.type?a.text+="\n"+l[0].trimRight():(l=l[0].replace(/^ {4}/gm,""),this.tokens.push({type:"code",codeBlockStyle:"indented",text:this.options.pedantic?l:t(l,"\n")}))}else if(l=this.rules.fences.exec(e))e=e.substring(l[0].length),this.tokens.push({type:"code",lang:l[2]?l[2].trim():l[2],text:l[3]||""})
else if(l=this.rules.heading.exec(e))e=e.substring(l[0].length),this.tokens.push({type:"heading",depth:l[1].length,text:l[2]})
else if((l=this.rules.nptable.exec(e))&&(d={type:"table",header:o(l[1].replace(/^ *| *\| *$/g,"")),align:l[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:l[3]?l[3].replace(/\n$/,"").split("\n"):[]},d.header.length===d.align.length)){for(e=e.substring(l[0].length),v=0;v<d.align.length;v++)/^ *-+: *$/.test(d.align[v])?d.align[v]="right":/^ *:-+: *$/.test(d.align[v])?d.align[v]="center":/^ *:-+ *$/.test(d.align[v])?d.align[v]="left":d.align[v]=null
for(v=0;v<d.cells.length;v++)d.cells[v]=o(d.cells[v],d.header.length)
this.tokens.push(d)}else if(l=this.rules.hr.exec(e))e=e.substring(l[0].length),this.tokens.push({type:"hr"})
else if(l=this.rules.blockquote.exec(e))e=e.substring(l[0].length),this.tokens.push({type:"blockquote_start"}),l=l[0].replace(/^ *> ?/gm,""),this.token(l,a),this.tokens.push({type:"blockquote_end"})
else if(l=this.rules.list.exec(e)){for(e=e.substring(l[0].length),u=l[2],y=u.length>1,h={type:"list_start",ordered:y,start:y?+u:"",loose:!1},this.tokens.push(h),l=l[0].match(this.rules.item),p=[],n=!1,k=l.length,v=0;v<k;v++)d=l[v],f=d.length,d=d.replace(/^ *([*+-]|\d+\.) */,""),~d.indexOf("\n ")&&(f-=d.length,d=this.options.pedantic?d.replace(/^ {1,4}/gm,""):d.replace(new RegExp("^ {1,"+f+"}","gm"),"")),v!==k-1&&(c=r.bullet.exec(l[v+1])[0],(u.length>1?1===c.length:c.length>1||this.options.smartLists&&c!==u)&&(e=l.slice(v+1).join("\n")+e,v=k-1)),i=n||/\n\n(?!\s*$)/.test(d),v!==k-1&&(n="\n"===d.charAt(d.length-1),i||(i=n)),i&&(h.loose=!0),b=/^\[[ xX]\] /.test(d),S=void 0,b&&(S=" "!==d[1],d=d.replace(/^\[[ xX]\] +/,"")),m={type:"list_item_start",task:b,checked:S,loose:i},p.push(m),this.tokens.push(m),this.token(d,!1),this.tokens.push({type:"list_item_end"})
if(h.loose)for(k=p.length,v=0;v<k;v++)p[v].loose=!0
this.tokens.push({type:"list_end"})}else if(l=this.rules.html.exec(e))e=e.substring(l[0].length),this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&("pre"===l[1]||"script"===l[1]||"style"===l[1]),text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(l[0]):s(l[0]):l[0]})
else if(a&&(l=this.rules.def.exec(e)))e=e.substring(l[0].length),l[3]&&(l[3]=l[3].substring(1,l[3].length-1)),g=l[1].toLowerCase().replace(/\s+/g," "),this.tokens.links[g]||(this.tokens.links[g]={href:l[2],title:l[3]})
else if((l=this.rules.table.exec(e))&&(d={type:"table",header:o(l[1].replace(/^ *| *\| *$/g,"")),align:l[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:l[3]?l[3].replace(/\n$/,"").split("\n"):[]},d.header.length===d.align.length)){for(e=e.substring(l[0].length),v=0;v<d.align.length;v++)/^ *-+: *$/.test(d.align[v])?d.align[v]="right":/^ *:-+: *$/.test(d.align[v])?d.align[v]="center":/^ *:-+ *$/.test(d.align[v])?d.align[v]="left":d.align[v]=null
for(v=0;v<d.cells.length;v++)d.cells[v]=o(d.cells[v].replace(/^ *\| *| *\| *$/g,""),d.header.length)
this.tokens.push(d)}else if(l=this.rules.lheading.exec(e))e=e.substring(l[0].length),this.tokens.push({type:"heading",depth:"="===l[2].charAt(0)?1:2,text:l[1]})
else if(a&&(l=this.rules.paragraph.exec(e)))e=e.substring(l[0].length),this.tokens.push({type:"paragraph",text:"\n"===l[1].charAt(l[1].length-1)?l[1].slice(0,-1):l[1]})
else if(l=this.rules.text.exec(e))e=e.substring(l[0].length),this.tokens.push({type:"text",text:l[0]})
else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0))
return this.tokens}}},6951:(e,a,n)=>{const i=n(932),r=n(7134),t=n(3572),o=n(8241),{defaults:s}=n(8597),{merge:l,unescape:u}=n(9729)
e.exports=class e{constructor(e){this.tokens=[],this.token=null,this.options=e||s,this.options.renderer=this.options.renderer||new i,this.renderer=this.options.renderer,this.renderer.options=this.options,this.slugger=new r}static parse(a,n){return new e(n).parse(a)}parse(e){this.inline=new t(e.links,this.options),this.inlineText=new t(e.links,l({},this.options,{renderer:new o})),this.tokens=e.reverse()
let a=""
for(;this.next();)a+=this.tok()
return a}next(){return this.token=this.tokens.pop(),this.token}peek(){return this.tokens[this.tokens.length-1]||0}parseText(){let e=this.token.text
for(;"text"===this.peek().type;)e+="\n"+this.next().text
return this.inline.output(e)}tok(){let e=""
switch(this.token.type){case"space":return""
case"hr":return this.renderer.hr()
case"heading":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,u(this.inlineText.output(this.token.text)),this.slugger)
case"code":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped)
case"table":{let a,n,i,r,t=""
for(i="",a=0;a<this.token.header.length;a++)i+=this.renderer.tablecell(this.inline.output(this.token.header[a]),{header:!0,align:this.token.align[a]})
for(t+=this.renderer.tablerow(i),a=0;a<this.token.cells.length;a++){for(n=this.token.cells[a],i="",r=0;r<n.length;r++)i+=this.renderer.tablecell(this.inline.output(n[r]),{header:!1,align:this.token.align[r]})
e+=this.renderer.tablerow(i)}return this.renderer.table(t,e)}case"blockquote_start":for(e="";"blockquote_end"!==this.next().type;)e+=this.tok()
return this.renderer.blockquote(e)
case"list_start":{e=""
const a=this.token.ordered,n=this.token.start
for(;"list_end"!==this.next().type;)e+=this.tok()
return this.renderer.list(e,a,n)}case"list_item_start":{e=""
const a=this.token.loose,n=this.token.checked,i=this.token.task
if(this.token.task)if(a)if("text"===this.peek().type){const e=this.peek()
e.text=this.renderer.checkbox(n)+" "+e.text}else this.tokens.push({type:"text",text:this.renderer.checkbox(n)})
else e+=this.renderer.checkbox(n)
for(;"list_item_end"!==this.next().type;)e+=a||"text"!==this.token.type?this.tok():this.parseText()
return this.renderer.listitem(e,i,n)}case"html":return this.renderer.html(this.token.text)
case"paragraph":return this.renderer.paragraph(this.inline.output(this.token.text))
case"text":return this.renderer.paragraph(this.parseText())
default:{const e='Token with "'+this.token.type+'" type was not found.'
if(!this.options.silent)throw new Error(e)
console.log(e)}}}}},932:(e,a,n)=>{const{defaults:i}=n(8597),{cleanUrl:r,escape:t}=n(9729)
e.exports=class{constructor(e){this.options=e||i}code(e,a,n){const i=(a||"").match(/\S*/)[0]
if(this.options.highlight){const a=this.options.highlight(e,i)
null!=a&&a!==e&&(n=!0,e=a)}return i?'<pre><code class="'+this.options.langPrefix+t(i,!0)+'">'+(n?e:t(e,!0))+"</code></pre>\n":"<pre><code>"+(n?e:t(e,!0))+"</code></pre>"}blockquote(e){return"<blockquote>\n"+e+"</blockquote>\n"}html(e){return e}heading(e,a,n,i){return this.options.headerIds?"<h"+a+' id="'+this.options.headerPrefix+i.slug(n)+'">'+e+"</h"+a+">\n":"<h"+a+">"+e+"</h"+a+">\n"}hr(){return this.options.xhtml?"<hr/>\n":"<hr>\n"}list(e,a,n){const i=a?"ol":"ul"
return"<"+i+(a&&1!==n?' start="'+n+'"':"")+">\n"+e+"</"+i+">\n"}listitem(e){return"<li>"+e+"</li>\n"}checkbox(e){return"<input "+(e?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "}paragraph(e){return"<p>"+e+"</p>\n"}table(e,a){return a&&(a="<tbody>"+a+"</tbody>"),"<table>\n<thead>\n"+e+"</thead>\n"+a+"</table>\n"}tablerow(e){return"<tr>\n"+e+"</tr>\n"}tablecell(e,a){const n=a.header?"th":"td"
return(a.align?"<"+n+' align="'+a.align+'">':"<"+n+">")+e+"</"+n+">\n"}strong(e){return"<strong>"+e+"</strong>"}em(e){return"<em>"+e+"</em>"}codespan(e){return"<code>"+e+"</code>"}br(){return this.options.xhtml?"<br/>":"<br>"}del(e){return"<del>"+e+"</del>"}link(e,a,n){if(null===(e=r(this.options.sanitize,this.options.baseUrl,e)))return n
let i='<a href="'+t(e)+'"'
return a&&(i+=' title="'+a+'"'),i+=">"+n+"</a>",i}image(e,a,n){if(null===(e=r(this.options.sanitize,this.options.baseUrl,e)))return n
let i='<img src="'+e+'" alt="'+n+'"'
return a&&(i+=' title="'+a+'"'),i+=this.options.xhtml?"/>":">",i}text(e){return e}}},7134:e=>{e.exports=class{constructor(){this.seen={}}slug(e){let a=e.toLowerCase().trim().replace(/<[!\/a-z].*?>/gi,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")
if(this.seen.hasOwnProperty(a)){const e=a
do{this.seen[e]++,a=e+"-"+this.seen[e]}while(this.seen.hasOwnProperty(a))}return this.seen[a]=0,a}}},8241:e=>{e.exports=class{strong(e){return e}em(e){return e}codespan(e){return e}del(e){return e}html(e){return e}text(e){return e}link(e,a,n){return""+n}image(e,a,n){return""+n}br(){return""}}},8597:e=>{e.exports={defaults:{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,xhtml:!1},getDefaults:function(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,xhtml:!1}},changeDefaults:function(a){e.exports.defaults=a}}},9729:e=>{const a=/[&<>"']/,n=/[&<>"']/g,i=/[<>"']|&(?!#?\w+;)/,r=/[<>"']|&(?!#?\w+;)/g,t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},o=e=>t[e],s=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi
function l(e){return e.replace(s,((e,a)=>"colon"===(a=a.toLowerCase())?":":"#"===a.charAt(0)?"x"===a.charAt(1)?String.fromCharCode(parseInt(a.substring(2),16)):String.fromCharCode(+a.substring(1)):""))}const u=/(^|[^\[])\^/g,c=/[^\w:]/g,d=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i,h={},p=/^[^:]+:\/*[^/]*$/,m=/^([^:]+:)[\s\S]*$/,f=/^([^:]+:\/*[^/]*)[\s\S]*$/
function v(e,a){h[" "+e]||(p.test(e)?h[" "+e]=e+"/":h[" "+e]=g(e,"/",!0))
const n=-1===(e=h[" "+e]).indexOf(":")
return"//"===a.substring(0,2)?n?a:e.replace(m,"$1")+a:"/"===a.charAt(0)?n?a:e.replace(f,"$1")+a:e+a}function g(e,a,n){const i=e.length
if(0===i)return""
let r=0
for(;r<i;){const t=e.charAt(i-r-1)
if(t!==a||n){if(t===a||!n)break
r++}else r++}return e.substr(0,i-r)}e.exports={escape:function(e,t){if(t){if(a.test(e))return e.replace(n,o)}else if(i.test(e))return e.replace(r,o)
return e},unescape:l,edit:function(e,a){e=e.source||e,a=a||""
const n={replace:(a,i)=>(i=(i=i.source||i).replace(u,"$1"),e=e.replace(a,i),n),getRegex:()=>new RegExp(e,a)}
return n},cleanUrl:function(e,a,n){if(e){let a
try{a=decodeURIComponent(l(n)).replace(c,"").toLowerCase()}catch(e){return null}if(0===a.indexOf("javascript:")||0===a.indexOf("vbscript:")||0===a.indexOf("data:"))return null}a&&!d.test(n)&&(n=v(a,n))
try{n=encodeURI(n).replace(/%25/g,"%")}catch(e){return null}return n},resolveUrl:v,noopTest:{exec:function(){}},merge:function(e){let a,n,i=1
for(;i<arguments.length;i++)for(n in a=arguments[i],a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])
return e},splitCells:function(e,a){const n=e.replace(/\|/g,((e,a,n)=>{let i=!1,r=a
for(;--r>=0&&"\\"===n[r];)i=!i
return i?"|":" |"})).split(/ \|/)
let i=0
if(n.length>a)n.splice(a)
else for(;n.length<a;)n.push("")
for(;i<n.length;i++)n[i]=n[i].trim().replace(/\\\|/g,"|")
return n},rtrim:g,findClosingBracket:function(e,a){if(-1===e.indexOf(a[1]))return-1
const n=e.length
let i=0,r=0
for(;r<n;r++)if("\\"===e[r])r++
else if(e[r]===a[0])i++
else if(e[r]===a[1]&&(i--,i<0))return r
return-1},checkSanitizeDeprecation:function(e){e&&e.sanitize&&!e.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}}},7602:(e,a,n)=>{const i=n(1740),r=n(6951),t=n(932),o=n(8241),s=n(3572),l=n(7134),{merge:u,checkSanitizeDeprecation:c,escape:d}=n(9729),{getDefaults:h,changeDefaults:p,defaults:m}=n(8597)
function f(e,a,n){if(null==e)throw new Error("marked(): input parameter is undefined or null")
if("string"!=typeof e)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected")
if(n||"function"==typeof a){n||(n=a,a=null),a=u({},f.defaults,a||{}),c(a)
const t=a.highlight
let o,s,l=0
try{o=i.lex(e,a)}catch(e){return n(e)}s=o.length
const d=function(e){if(e)return a.highlight=t,n(e)
let i
try{i=r.parse(o,a)}catch(a){e=a}return a.highlight=t,e?n(e):n(null,i)}
if(!t||t.length<3)return d()
if(delete a.highlight,!s)return d()
for(;l<o.length;l++)!function(e){"code"!==e.type?--s||d():t(e.text,e.lang,(function(a,n){return a?d(a):null==n||n===e.text?--s||d():(e.text=n,e.escaped=!0,void(--s||d()))}))}(o[l])}else try{return a=u({},f.defaults,a||{}),c(a),r.parse(i.lex(e,a),a)}catch(e){if(e.message+="\nPlease report this to https://github.com/markedjs/marked.",(a||f.defaults).silent)return"<p>An error occurred:</p><pre>"+d(e.message+"",!0)+"</pre>"
throw e}}f.options=f.setOptions=function(e){return u(f.defaults,e),p(f.defaults),f},f.getDefaults=h,f.defaults=m,f.Parser=r,f.parser=r.parse,f.Renderer=t,f.TextRenderer=o,f.Lexer=i,f.lexer=i.lex,f.InlineLexer=s,f.inlineLexer=s.output,f.Slugger=l,f.parse=f,e.exports=f},9262:(e,a,n)=>{const{noopTest:i,edit:r,merge:t}=n(9729),o={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?:\n+|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6}) +([^\n]*?)(?: +#+)? *(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3})(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:"^ {0,3}(?:<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?\\?>\\n*|<![A-Z][\\s\\S]*?>\\n*|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\n*|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$)|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$))",def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,nptable:i,table:i,lheading:/^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\n]+)*)/,text:/^[^\n]+/,_label:/(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,_title:/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/}
o.def=r(o.def).replace("label",o._label).replace("title",o._title).getRegex(),o.bullet=/(?:[*+-]|\d{1,9}\.)/,o.item=/^( *)(bull) ?[^\n]*(?:\n(?!\1bull ?)[^\n]*)*/,o.item=r(o.item,"gm").replace(/bull/g,o.bullet).getRegex(),o.list=r(o.list).replace(/bull/g,o.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+o.def.source+")").getRegex(),o._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",o._comment=/<!--(?!-?>)[\s\S]*?-->/,o.html=r(o.html,"i").replace("comment",o._comment).replace("tag",o._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),o.paragraph=r(o._paragraph).replace("hr",o.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag",o._tag).getRegex(),o.blockquote=r(o.blockquote).replace("paragraph",o.paragraph).getRegex(),o.normal=t({},o),o.gfm=t({},o.normal,{nptable:"^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:(?!\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)",table:"^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n *((?:(?!\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),o.gfm.nptable=r(o.gfm.nptable).replace("hr",o.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag",o._tag).getRegex(),o.gfm.table=r(o.gfm.table).replace("hr",o.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag",o._tag).getRegex(),o.pedantic=t({},o.normal,{html:r("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",o._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,fences:i,paragraph:r(o.normal._paragraph).replace("hr",o.hr).replace("heading"," *#{1,6} *[^\n]").replace("lheading",o.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()})
const s={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:i,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,nolink:/^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,strong:/^__([^\s_])__(?!_)|^\*\*([^\s*])\*\*(?!\*)|^__([^\s][\s\S]*?[^\s])__(?!_)|^\*\*([^\s][\s\S]*?[^\s])\*\*(?!\*)/,em:/^_([^\s_])_(?!_)|^\*([^\s*<\[])\*(?!\*)|^_([^\s<][\s\S]*?[^\s_])_(?!_|[^\spunctuation])|^_([^\s_<][\s\S]*?[^\s])_(?!_|[^\spunctuation])|^\*([^\s<"][\s\S]*?[^\s\*])\*(?!\*|[^\spunctuation])|^\*([^\s*"<\[][\s\S]*?[^\s])\*(?!\*)/,code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:i,text:/^(`+|[^`])(?:[\s\S]*?(?:(?=[\\<!\[`*]|\b_|$)|[^ ](?= {2,}\n))|(?= {2,}\n))/,_punctuation:"!\"#$%&'()*+,\\-./:;<=>?@\\[^_{|}~"}
s.em=r(s.em).replace(/punctuation/g,s._punctuation).getRegex(),s._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,s._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,s._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,s.autolink=r(s.autolink).replace("scheme",s._scheme).replace("email",s._email).getRegex(),s._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,s.tag=r(s.tag).replace("comment",o._comment).replace("attribute",s._attribute).getRegex(),s._label=/(?:\[[^\[\]]*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,s._href=/<(?:\\[<>]?|[^\s<>\\])*>|[^\s\x00-\x1f]*/,s._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,s.link=r(s.link).replace("label",s._label).replace("href",s._href).replace("title",s._title).getRegex(),s.reflink=r(s.reflink).replace("label",s._label).getRegex(),s.normal=t({},s),s.pedantic=t({},s.normal,{strong:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/,link:r(/^!?\[(label)\]\((.*?)\)/).replace("label",s._label).getRegex(),reflink:r(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",s._label).getRegex()}),s.gfm=t({},s.normal,{escape:r(s.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~+(?=\S)([\s\S]*?\S)~+/,text:/^(`+|[^`])(?:[\s\S]*?(?:(?=[\\<!\[`*~]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))|(?= {2,}\n|[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))/}),s.gfm.url=r(s.gfm.url,"i").replace("email",s.gfm._extended_email).getRegex(),s.breaks=t({},s.gfm,{br:r(s.br).replace("{2,}","*").getRegex(),text:r(s.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()}),e.exports={block:o,inline:s}},3109:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{default:()=>_})
var i=n(4927),r=["input","select","textarea","a[href]","button","[tabindex]","audio[controls]","video[controls]",'[contenteditable]:not([contenteditable="false"])',"details>summary:first-of-type","details"],t=r.join(","),o="undefined"==typeof Element?function(){}:Element.prototype.matches||Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector,s=function(e){var a=parseInt(e.getAttribute("tabindex"),10)
return isNaN(a)?function(e){return"true"===e.contentEditable}(e)?0:"AUDIO"!==e.nodeName&&"VIDEO"!==e.nodeName&&"DETAILS"!==e.nodeName||null!==e.getAttribute("tabindex")?e.tabIndex:0:a},l=function(e,a){return e.tabIndex===a.tabIndex?e.documentOrder-a.documentOrder:e.tabIndex-a.tabIndex},u=function(e){return"INPUT"===e.tagName},c=function(e,a){return!(a.disabled||function(e){return u(e)&&"hidden"===e.type}(a)||function(e,a){if("hidden"===getComputedStyle(e).visibility)return!0
var n=o.call(e,"details>summary:first-of-type")?e.parentElement:e
if(o.call(n,"details:not([open]) *"))return!0
if(a&&"full"!==a){if("non-zero-area"===a){var i=e.getBoundingClientRect(),r=i.width,t=i.height
return 0===r&&0===t}}else for(;e;){if("none"===getComputedStyle(e).display)return!0
e=e.parentElement}return!1}(a,e.displayCheck)||function(e){return"DETAILS"===e.tagName&&Array.prototype.slice.apply(e.children).some((function(e){return"SUMMARY"===e.tagName}))}(a)||function(e){if(u(e)||"SELECT"===e.tagName||"TEXTAREA"===e.tagName||"BUTTON"===e.tagName)for(var a=e.parentElement;a;){if("FIELDSET"===a.tagName&&a.disabled){for(var n=0;n<a.children.length;n++){var i=a.children.item(n)
if("LEGEND"===i.tagName)return!i.contains(e)}return!0}a=a.parentElement}return!1}(a))},d=function(e,a){return!(!c(e,a)||function(e){return function(e){return u(e)&&"radio"===e.type}(e)&&!function(e){if(!e.name)return!0
var a,n=e.form||e.ownerDocument,i=function(e){return n.querySelectorAll('input[type="radio"][name="'+e+'"]')}
if("undefined"!=typeof window&&void 0!==window.CSS&&"function"==typeof window.CSS.escape)a=i(window.CSS.escape(e.name))
else try{a=i(e.name)}catch(e){return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s",e.message),!1}var r=function(e,a){for(var n=0;n<e.length;n++)if(e[n].checked&&e[n].form===a)return e[n]}(a,e.form)
return!r||r===e}(e)}(a)||s(a)<0)},h=function(e,a){if(a=a||{},!e)throw new Error("No node provided")
return!1!==o.call(e,t)&&d(a,e)},p=r.concat("iframe").join(","),m=function(e,a){if(a=a||{},!e)throw new Error("No node provided")
return!1!==o.call(e,p)&&c(a,e)}
function f(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function v(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}var g,k=(g=[],{activateTrap:function(e){if(g.length>0){var a=g[g.length-1]
a!==e&&a.pause()}var n=g.indexOf(e);-1===n||g.splice(n,1),g.push(e)},deactivateTrap:function(e){var a=g.indexOf(e);-1!==a&&g.splice(a,1),g.length>0&&g[g.length-1].unpause()}}),y=function(e){return setTimeout(e,0)},b=function(e,a){var n=-1
return e.every((function(e,i){return!a(e)||(n=i,!1)})),n},S=function(e){for(var a=arguments.length,n=new Array(a>1?a-1:0),i=1;i<a;i++)n[i-1]=arguments[i]
return"function"==typeof e?e.apply(void 0,n):e},A=function(e){return e.target.shadowRoot&&"function"==typeof e.composedPath?e.composedPath()[0]:e.target},M=function(e,a){var n,i=(null==a?void 0:a.document)||document,r=function(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?f(Object(n),!0).forEach((function(a){v(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):f(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}({returnFocusOnDeactivate:!0,escapeDeactivates:!0,delayInitialFocus:!0},a),u={containers:[],tabbableGroups:[],nodeFocusedBeforeActivation:null,mostRecentlyFocusedNode:null,active:!1,paused:!1,delayInitialFocusTimer:void 0},c=function(e,a,n){return e&&void 0!==e[a]?e[a]:r[n||a]},p=function(e){return!(!e||!u.containers.some((function(a){return a.contains(e)})))},g=function(e){var a=r[e]
if("function"==typeof a){for(var n=arguments.length,t=new Array(n>1?n-1:0),o=1;o<n;o++)t[o-1]=arguments[o]
a=a.apply(void 0,t)}if(!a){if(void 0===a||!1===a)return a
throw new Error("`".concat(e,"` was specified but was not a node, or did not return a node"))}var s=a
if("string"==typeof a&&!(s=i.querySelector(a)))throw new Error("`".concat(e,"` as selector refers to no known node"))
return s},M=function(){var e=g("initialFocus")
if(!1===e)return!1
if(void 0===e)if(p(i.activeElement))e=i.activeElement
else{var a=u.tabbableGroups[0]
e=a&&a.firstTabbableNode||g("fallbackFocus")}if(!e)throw new Error("Your focus-trap needs to have at least one focusable element")
return e},T=function(){if(u.tabbableGroups=u.containers.map((function(e){var a,n,i,r,u,c,h,p=(n=[],i=[],(r=e,u=(a=a||{}).includeContainer,c=d.bind(null,a),h=Array.prototype.slice.apply(r.querySelectorAll(t)),u&&o.call(r,t)&&h.unshift(r),h.filter(c)).forEach((function(e,a){var r=s(e)
0===r?n.push(e):i.push({documentOrder:a,tabIndex:r,node:e})})),i.sort(l).map((function(e){return e.node})).concat(n))
if(p.length>0)return{container:e,firstTabbableNode:p[0],lastTabbableNode:p[p.length-1]}})).filter((function(e){return!!e})),u.tabbableGroups.length<=0&&!g("fallbackFocus"))throw new Error("Your focus-trap must have at least one container with at least one tabbable node in it at all times")},_=function e(a){!1!==a&&a!==i.activeElement&&(a&&a.focus?(a.focus({preventScroll:!!r.preventScroll}),u.mostRecentlyFocusedNode=a,function(e){return e.tagName&&"input"===e.tagName.toLowerCase()&&"function"==typeof e.select}(a)&&a.select()):e(M()))},w=function(e){var a=g("setReturnFocus",e)
return a||!1!==a&&e},j=function(e){var a=A(e)
p(a)||(S(r.clickOutsideDeactivates,e)?n.deactivate({returnFocus:r.returnFocusOnDeactivate&&!m(a)}):S(r.allowOutsideClick,e)||e.preventDefault())},E=function(e){var a=A(e),n=p(a)
n||a instanceof Document?n&&(u.mostRecentlyFocusedNode=a):(e.stopImmediatePropagation(),_(u.mostRecentlyFocusedNode||M()))},N=function(e){if(function(e){return"Escape"===e.key||"Esc"===e.key||27===e.keyCode}(e)&&!1!==S(r.escapeDeactivates,e))return e.preventDefault(),void n.deactivate();(function(e){return"Tab"===e.key||9===e.keyCode})(e)&&function(e){var a=A(e)
T()
var n=null
if(u.tabbableGroups.length>0){var i=b(u.tabbableGroups,(function(e){return e.container.contains(a)}))
if(i<0)n=e.shiftKey?u.tabbableGroups[u.tabbableGroups.length-1].lastTabbableNode:u.tabbableGroups[0].firstTabbableNode
else if(e.shiftKey){var r=b(u.tabbableGroups,(function(e){var n=e.firstTabbableNode
return a===n}))
if(r<0&&(u.tabbableGroups[i].container===a||m(a)&&!h(a))&&(r=i),r>=0){var t=0===r?u.tabbableGroups.length-1:r-1
n=u.tabbableGroups[t].lastTabbableNode}}else{var o=b(u.tabbableGroups,(function(e){var n=e.lastTabbableNode
return a===n}))
if(o<0&&(u.tabbableGroups[i].container===a||m(a)&&!h(a))&&(o=i),o>=0){var s=o===u.tabbableGroups.length-1?0:o+1
n=u.tabbableGroups[s].firstTabbableNode}}}else n=g("fallbackFocus")
n&&(e.preventDefault(),_(n))}(e)},B=function(e){if(!S(r.clickOutsideDeactivates,e)){var a=A(e)
p(a)||S(r.allowOutsideClick,e)||(e.preventDefault(),e.stopImmediatePropagation())}},P=function(){if(u.active)return k.activateTrap(n),u.delayInitialFocusTimer=r.delayInitialFocus?y((function(){_(M())})):_(M()),i.addEventListener("focusin",E,!0),i.addEventListener("mousedown",j,{capture:!0,passive:!1}),i.addEventListener("touchstart",j,{capture:!0,passive:!1}),i.addEventListener("click",B,{capture:!0,passive:!1}),i.addEventListener("keydown",N,{capture:!0,passive:!1}),n},L=function(){if(u.active)return i.removeEventListener("focusin",E,!0),i.removeEventListener("mousedown",j,!0),i.removeEventListener("touchstart",j,!0),i.removeEventListener("click",B,!0),i.removeEventListener("keydown",N,!0),n}
return(n={activate:function(e){if(u.active)return this
var a=c(e,"onActivate"),n=c(e,"onPostActivate"),r=c(e,"checkCanFocusTrap")
r||T(),u.active=!0,u.paused=!1,u.nodeFocusedBeforeActivation=i.activeElement,a&&a()
var t=function(){r&&T(),P(),n&&n()}
return r?(r(u.containers.concat()).then(t,t),this):(t(),this)},deactivate:function(e){if(!u.active)return this
clearTimeout(u.delayInitialFocusTimer),u.delayInitialFocusTimer=void 0,L(),u.active=!1,u.paused=!1,k.deactivateTrap(n)
var a=c(e,"onDeactivate"),i=c(e,"onPostDeactivate"),r=c(e,"checkCanReturnFocus")
a&&a()
var t=c(e,"returnFocus","returnFocusOnDeactivate"),o=function(){y((function(){t&&_(w(u.nodeFocusedBeforeActivation)),i&&i()}))}
return t&&r?(r(w(u.nodeFocusedBeforeActivation)).then(o,o),this):(o(),this)},pause:function(){return u.paused||!u.active||(u.paused=!0,L()),this},unpause:function(){return u.paused&&u.active?(u.paused=!1,T(),P(),this):this},updateContainerElements:function(e){var a=[].concat(e).filter(Boolean)
return u.containers=a.map((function(e){return"string"==typeof e?i.querySelector(e):e})),u.active&&T(),this}}).updateContainerElements(e),n}
let T
try{T=(0,i.capabilities)("3.22")}catch{T=(0,i.capabilities)("3.13")}var _=(0,i.setModifierManager)((()=>({capabilities:T,createModifier:()=>({focusTrapOptions:void 0,isActive:!0,isPaused:!1,shouldSelfFocus:!1,focusTrap:void 0}),installModifier(e,a,n){let{named:{isActive:i,isPaused:r,shouldSelfFocus:t,focusTrapOptions:o,_createFocusTrap:s}}=n
e.focusTrapOptions={...o}||{},void 0!==i&&(e.isActive=i),void 0!==r&&(e.isPaused=r),e.focusTrapOptions&&void 0===e.focusTrapOptions.initialFocus&&t&&(e.focusTrapOptions.initialFocus=a)
let l=M
s&&(l=s),!1!==e.focusTrapOptions.returnFocusOnDeactivate&&(e.focusTrapOptions.returnFocusOnDeactivate=!0),e.focusTrap=l(a,e.focusTrapOptions),e.isActive&&e.focusTrap.activate(),e.isPaused&&e.focusTrap.pause()},updateModifier(e,a){let{named:n}=a
const i=n.focusTrapOptions||{}
if(e.isActive&&!n.isActive){const{returnFocusOnDeactivate:a}=i,n=void 0===a
e.focusTrap.deactivate({returnFocus:n})}else!e.isActive&&n.isActive&&e.focusTrap.activate()
e.isPaused&&!n.isPaused?e.focusTrap.unpause():!e.isPaused&&n.isPaused&&e.focusTrap.pause(),e.focusTrapOptions=i,void 0!==n.isActive&&(e.isActive=n.isActive),void 0!==n.isPaused&&(e.isPaused=n.isPaused)},destroyModifier(e){let{focusTrap:a}=e
a.deactivate()}})),class{})},4710:e=>{"use strict"
var a=Array.isArray,n=Object.keys,i=Object.prototype.hasOwnProperty
e.exports=function e(r,t){if(r===t)return!0
if(r&&t&&"object"==typeof r&&"object"==typeof t){var o,s,l,u=a(r),c=a(t)
if(u&&c){if((s=r.length)!=t.length)return!1
for(o=s;0!=o--;)if(!e(r[o],t[o]))return!1
return!0}if(u!=c)return!1
var d=r instanceof Date,h=t instanceof Date
if(d!=h)return!1
if(d&&h)return r.getTime()==t.getTime()
var p=r instanceof RegExp,m=t instanceof RegExp
if(p!=m)return!1
if(p&&m)return r.toString()==t.toString()
var f=n(r)
if((s=f.length)!==n(t).length)return!1
for(o=s;0!=o--;)if(!i.call(t,f[o]))return!1
for(o=s;0!=o--;)if(!e(r[l=f[o]],t[l]))return!1
return!0}return r!=r&&t!=t}},8471:(e,a,n)=>{"use strict"
function i(e,a,n,i){n&&Object.defineProperty(e,a,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function r(e,a,n,i,r){var t={}
return Object.keys(i).forEach((function(e){t[e]=i[e]})),t.enumerable=!!t.enumerable,t.configurable=!!t.configurable,("value"in t||t.initializer)&&(t.writable=!0),t=n.slice().reverse().reduce((function(n,i){return i(e,a,n)||n}),t),r&&void 0!==t.initializer&&(t.value=t.initializer?t.initializer.call(r):void 0,t.initializer=void 0),void 0===t.initializer&&(Object.defineProperty(e,a,t),t=null),t}function t(e,a){return function(e,a){return a.get?a.get.call(e):a.value}(e,s(e,a,"get"))}function o(e,a,n){return function(e,a,n){if(a.set)a.set.call(e,n)
else{if(!a.writable)throw new TypeError("attempted to set read only private field")
a.value=n}}(e,s(e,a,"set"),n),n}function s(e,a,n){if(!a.has(e))throw new TypeError("attempted to "+n+" private field on non-instance")
return a.get(e)}function l(e,a,n){!function(e,a){if(a.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,a),a.set(e,n)}n.d(a,{_:()=>r,a:()=>l,b:()=>t,c:()=>o,d:()=>i})},3625:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{default:()=>m})
var i,r,t=n(9266),o=n(8471),s=n(3574),l=n(7990),u=n.n(l),c=n(7219),d=n(7642),h=(0,t.createTemplateFactory)({id:"uDG3+Ezn",block:'[[[11,"input"],[24,4,"text"],[16,"readonly",[30,1]],[16,"placeholder",[30,2]],[16,"required",[30,3]],[16,"disabled",[30,4]],[16,"autocomplete",[30,5]],[17,6],[4,[38,0],[[30,7]],[["value","onSelect","setDefaultDate","defaultDate","onOpen","onDraw","onClose","format","minDate","maxDate","theme","yearRange","i18n","firstDay","container","bound"],[[30,0,["value"]],[30,0,["onSelect"]],true,[30,8],[30,9],[30,0,["onDraw"]],[30,0,["onClose"]],[30,0,["format"]],[30,10],[30,11],[30,12],[30,0,["yearRange"]],[30,0,["i18n"]],[30,0,["firstDay"]],[30,13],[30,14]]]],[4,[38,1],["change",[30,0,["didChange"]]],null],[12],[13]],["@readonly","@placeholder","@required","@disabled","@autocomplete","&attrs","@options","@defaultDate","@onOpen","@minDate","@maxDate","@theme","@container","@bound"],false,["pikaday","on"]]',moduleName:"(unknown template module)",isStrictMode:!1})
const p=(0,d.f)()
var m=(0,s.setComponentTemplate)(h,(r=new WeakMap,i=class extends(u()){constructor(e,a){super(e,a),(0,o.a)(this,r,{writable:!0,value:void 0})}get format(){return this.args.format||"DD.MM.YYYY"}get value(){let{value:e,useUTC:a}=this.args
if(a&&e){let a="YYYY-MM-DD"
e=p(p.utc(e).format(a),a).toDate()}return e}get yearRange(){const e=this.args.yearRange
if(!e)return 10
if(e.indexOf(",")>-1){const a=e.split(",")
return"currentYear"===a[1]&&(a[1]=(new Date).getFullYear()),a}return e}get i18n(){let e=this.args.i18n
if(e)return e.t?{previousMonth:e.t("previousMonth").toString(),nextMonth:e.t("nextMonth").toString(),months:e.t("months").toString().split(","),weekdays:e.t("weekdays").toString().split(","),weekdaysShort:e.t("weekdaysShort").toString().split(",")}:e}get firstDay(){return null==this.args.firstDay?1:parseInt(this.args.firstDay,10)}onClose(){this.isDestroying||((0,o.b)(this,r)||this.onSelect(null),this.args.onClose?.())}onDraw(){this.args.onDraw?.()}didChange(e){(0,o.c)(this,r,e.target.value)}onSelect(e){this.args.useUTC&&e&&(e=p.utc([e.getFullYear(),e.getMonth(),e.getDate()]).toDate()),this.args.onSelection?.(e)}},(0,o._)(i.prototype,"onClose",[c.action],Object.getOwnPropertyDescriptor(i.prototype,"onClose"),i.prototype),(0,o._)(i.prototype,"onDraw",[c.action],Object.getOwnPropertyDescriptor(i.prototype,"onDraw"),i.prototype),(0,o._)(i.prototype,"didChange",[c.action],Object.getOwnPropertyDescriptor(i.prototype,"didChange"),i.prototype),(0,o._)(i.prototype,"onSelect",[c.action],Object.getOwnPropertyDescriptor(i.prototype,"onSelect"),i.prototype),i))},9824:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{default:()=>p})
var i,r,t=n(9266),o=n(8471),s=n(3574),l=n(7990),u=n.n(l),c=n(5831),d=n(5521),h=(0,t.createTemplateFactory)({id:"zBGODeei",block:'[[[11,0],[17,1],[12],[1,"\\n"],[41,[30,0,["container"]],[[[1,"    "],[8,[39,1],[[24,0,"ember-pikaday-input"],[24,4,"hidden"]],[["@bound","@container","@defaultDate","@onSelection","@options","@maxDate","@minDate","@onOpen","@theme","@readonly","@placeholder","@required","@disabled","@autocomplete","@value","@format","@useUTC","@yearRange","@i18n","@firstDay","@onClose","@onDraw"],[false,[30,0,["container"]],[30,2],[30,3],[30,4],[30,5],[30,6],[30,7],[30,8],[30,9],[30,10],[30,11],[30,12],[30,13],[30,14],[30,15],[30,16],[30,17],[30,18],[30,19],[30,20],[30,21]]],null],[1,"\\n"]],[]],null],[1,"  "],[11,0],[24,0,"ember-pikaday-container"],[4,[30,0,["setContainer"]],null,null],[12],[13],[1,"\\n"],[13]],["&attrs","@defaultDate","@onSelection","@options","@maxDate","@minDate","@onOpen","@theme","@readonly","@placeholder","@required","@disabled","@autocomplete","@value","@format","@useUTC","@yearRange","@i18n","@firstDay","@onClose","@onDraw"],false,["if","pikaday-input"]]',moduleName:"(unknown template module)",isStrictMode:!1}),p=(0,s.setComponentTemplate)(h,(i=class extends(u()){constructor(e,a){super(e,a),(0,o.d)(this,"container",r,this),this.setContainer=(0,c.modifier)((e=>{this.container=e}))}},r=(0,o._)(i.prototype,"container",[d.tracked],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),i))},7642:(e,a,n)=>{"use strict"
function i(){}function r(){throw new Error("You're trying to use a feature of ember-pikaday that depends on moment or moment-timezone, but neither was found")}n.d(a,{f:()=>r,m:()=>i})},8626:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{default:()=>u})
var i=n(8471),r=n(5831),t=n.n(r)
const o=function(e){var a="function"==typeof e,n=!!window.addEventListener,i=window.document,r=window.setTimeout,t=function(e,a,i,r){n?e.addEventListener(a,i,!!r):e.attachEvent("on"+a,i)},o=function(e,a,i,r){n?e.removeEventListener(a,i,!!r):e.detachEvent("on"+a,i)},s=function(e,a){return-1!==(" "+e.className+" ").indexOf(" "+a+" ")},l=function(e,a){s(e,a)||(e.className=""===e.className?a:e.className+" "+a)},u=function(e,a){var n
e.className=(n=(" "+e.className+" ").replace(" "+a+" "," ")).trim?n.trim():n.replace(/^\s+|\s+$/g,"")},c=function(e){return/Array/.test(Object.prototype.toString.call(e))},d=function(e){return/Date/.test(Object.prototype.toString.call(e))&&!isNaN(e.getTime())},h=function(e){var a=e.getDay()
return 0===a||6===a},p=function(e){return e%4==0&&e%100!=0||e%400==0},m=function(e,a){return[31,p(e)?29:28,31,30,31,30,31,31,30,31,30,31][a]},f=function(e){d(e)&&e.setHours(0,0,0,0)},v=function(e,a){return e.getTime()===a.getTime()},g=function(e,a,n){var i,r
for(i in a)(r=void 0!==e[i])&&"object"==typeof a[i]&&null!==a[i]&&void 0===a[i].nodeName?d(a[i])?n&&(e[i]=new Date(a[i].getTime())):c(a[i])?n&&(e[i]=a[i].slice(0)):e[i]=g({},a[i],n):!n&&r||(e[i]=a[i])
return e},k=function(e,a,n){var r
i.createEvent?((r=i.createEvent("HTMLEvents")).initEvent(a,!0,!1),r=g(r,n),e.dispatchEvent(r)):i.createEventObject&&(r=i.createEventObject(),r=g(r,n),e.fireEvent("on"+a,r))},y=function(e){return e.month<0&&(e.year-=Math.ceil(Math.abs(e.month)/12),e.month+=12),e.month>11&&(e.year+=Math.floor(Math.abs(e.month)/12),e.month-=12),e},b={field:null,bound:void 0,ariaLabel:"Use the arrow keys to pick a date",position:"bottom left",reposition:!0,format:"YYYY-MM-DD",toString:null,parse:null,defaultDate:null,setDefaultDate:!1,firstDay:0,firstWeekOfYearMinDays:4,formatStrict:!1,minDate:null,maxDate:null,yearRange:10,showWeekNumber:!1,pickWholeWeek:!1,minYear:0,maxYear:9999,minMonth:void 0,maxMonth:void 0,startRange:null,endRange:null,isRTL:!1,yearSuffix:"",showMonthAfterYear:!1,showDaysInNextAndPreviousMonths:!1,enableSelectionDaysInNextAndPreviousMonths:!1,numberOfMonths:1,mainCalendar:"left",container:void 0,blurFieldOnSelect:!0,i18n:{previousMonth:"Previous Month",nextMonth:"Next Month",months:["January","February","March","April","May","June","July","August","September","October","November","December"],weekdays:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],weekdaysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]},theme:null,events:[],onSelect:null,onOpen:null,onClose:null,onDraw:null,keyboardInput:!0},S=function(e,a,n){for(a+=e.firstDay;a>=7;)a-=7
return n?e.i18n.weekdaysShort[a]:e.i18n.weekdays[a]},A=function(e){var a=[],n="false"
if(e.isEmpty){if(!e.showDaysInNextAndPreviousMonths)return'<td class="is-empty"></td>'
a.push("is-outside-current-month"),e.enableSelectionDaysInNextAndPreviousMonths||a.push("is-selection-disabled")}return e.isDisabled&&a.push("is-disabled"),e.isToday&&a.push("is-today"),e.isSelected&&(a.push("is-selected"),n="true"),e.hasEvent&&a.push("has-event"),e.isInRange&&a.push("is-inrange"),e.isStartRange&&a.push("is-startrange"),e.isEndRange&&a.push("is-endrange"),'<td data-day="'+e.day+'" class="'+a.join(" ")+'" aria-selected="'+n+'"><button class="pika-button pika-day" type="button" data-pika-year="'+e.year+'" data-pika-month="'+e.month+'" data-pika-day="'+e.day+'">'+e.day+"</button></td>"},M=function(e,a,n,i){return'<tr class="pika-row'+(n?" pick-whole-week":"")+(i?" is-selected":"")+'">'+(a?e.reverse():e).join("")+"</tr>"},T=function(e,a,n,i,r,t){var o,s,l,u,d,h=e._o,p=n===h.minYear,m=n===h.maxYear,f='<div id="'+t+'" class="pika-title" role="heading" aria-live="assertive">',v=!0,g=!0
for(l=[],o=0;o<12;o++)l.push('<option value="'+(n===r?o-a:12+o-a)+'"'+(o===i?' selected="selected"':"")+(p&&o<h.minMonth||m&&o>h.maxMonth?' disabled="disabled"':"")+">"+h.i18n.months[o]+"</option>")
for(u='<div class="pika-label">'+h.i18n.months[i]+'<select class="pika-select pika-select-month" tabindex="-1">'+l.join("")+"</select></div>",c(h.yearRange)?(o=h.yearRange[0],s=h.yearRange[1]+1):(o=n-h.yearRange,s=1+n+h.yearRange),l=[];o<s&&o<=h.maxYear;o++)o>=h.minYear&&l.push('<option value="'+o+'"'+(o===n?' selected="selected"':"")+">"+o+"</option>")
return d='<div class="pika-label">'+n+h.yearSuffix+'<select class="pika-select pika-select-year" tabindex="-1">'+l.join("")+"</select></div>",h.showMonthAfterYear?f+=d+u:f+=u+d,p&&(0===i||h.minMonth>=i)&&(v=!1),m&&(11===i||h.maxMonth<=i)&&(g=!1),0===a&&(f+='<button class="pika-prev'+(v?"":" is-disabled")+'" type="button">'+h.i18n.previousMonth+"</button>"),a===e._o.numberOfMonths-1&&(f+='<button class="pika-next'+(g?"":" is-disabled")+'" type="button">'+h.i18n.nextMonth+"</button>"),f+"</div>"},_=function(o){var l=this,u=l.config(o)
l._onMouseDown=function(e){if(l._v){var a=(e=e||window.event).target||e.srcElement
if(a)if(s(a,"is-disabled")||(!s(a,"pika-button")||s(a,"is-empty")||s(a.parentNode,"is-disabled")?s(a,"pika-prev")?l.prevMonth():s(a,"pika-next")&&l.nextMonth():(l.setDate(new Date(a.getAttribute("data-pika-year"),a.getAttribute("data-pika-month"),a.getAttribute("data-pika-day"))),u.bound&&r((function(){l.hide(),u.blurFieldOnSelect&&u.field&&u.field.blur()}),100))),s(a,"pika-select"))l._c=!0
else{if(!e.preventDefault)return e.returnValue=!1,!1
e.preventDefault()}}},l._onChange=function(e){var a=(e=e||window.event).target||e.srcElement
a&&(s(a,"pika-select-month")?l.gotoMonth(a.value):s(a,"pika-select-year")&&l.gotoYear(a.value))},l._onKeyChange=function(e){if(e=e||window.event,l.isVisible())switch(e.keyCode){case 13:case 27:u.field&&u.field.blur()
break
case 37:l.adjustDate("subtract",1)
break
case 38:l.adjustDate("subtract",7)
break
case 39:l.adjustDate("add",1)
break
case 40:l.adjustDate("add",7)
break
case 8:case 46:l.setDate(null)}},l._parseFieldValue=function(){if(u.parse)return u.parse(u.field.value,u.format)
if(a){var n=e(u.field.value,u.format,u.formatStrict)
return n&&n.isValid()?n.toDate():null}return new Date(Date.parse(u.field.value))},l._onInputChange=function(e){var a
e.firedBy!==l&&(a=l._parseFieldValue(),d(a)&&l.setDate(a),l._v||l.show())},l._onInputFocus=function(){l.show()},l._onInputClick=function(){l.show()},l._onInputBlur=function(){var e=i.activeElement
do{if(s(e,"pika-single"))return}while(e=e.parentNode)
l._c||(l._b=r((function(){l.hide()}),50)),l._c=!1},l._onClick=function(e){var a=(e=e||window.event).target||e.srcElement,i=a
if(a){!n&&s(a,"pika-select")&&(a.onchange||(a.setAttribute("onchange","return;"),t(a,"change",l._onChange)))
do{if(s(i,"pika-single")||i===u.trigger)return}while(i=i.parentNode)
l._v&&a!==u.trigger&&i!==u.trigger&&l.hide()}},l.el=i.createElement("div"),l.el.className="pika-single"+(u.isRTL?" is-rtl":"")+(u.theme?" "+u.theme:""),t(l.el,"mousedown",l._onMouseDown,!0),t(l.el,"touchend",l._onMouseDown,!0),t(l.el,"change",l._onChange),u.keyboardInput&&t(i,"keydown",l._onKeyChange),u.field&&(u.container?u.container.appendChild(l.el):u.bound?i.body.appendChild(l.el):u.field.parentNode.insertBefore(l.el,u.field.nextSibling),t(u.field,"change",l._onInputChange),u.defaultDate||(u.defaultDate=l._parseFieldValue(),u.setDefaultDate=!0))
var c=u.defaultDate
d(c)?u.setDefaultDate?l.setDate(c,!0):l.gotoDate(c):l.gotoDate(new Date),u.bound?(this.hide(),l.el.className+=" is-bound",t(u.trigger,"click",l._onInputClick),t(u.trigger,"focus",l._onInputFocus),t(u.trigger,"blur",l._onInputBlur)):this.show()}
return _.prototype={config:function(e){this._o||(this._o=g({},b,!0))
var a=g(this._o,e,!0)
a.isRTL=!!a.isRTL,a.field=a.field&&a.field.nodeName?a.field:null,a.theme="string"==typeof a.theme&&a.theme?a.theme:null,a.bound=!!(void 0!==a.bound?a.field&&a.bound:a.field),a.trigger=a.trigger&&a.trigger.nodeName?a.trigger:a.field,a.disableWeekends=!!a.disableWeekends,a.disableDayFn="function"==typeof a.disableDayFn?a.disableDayFn:null
var n=parseInt(a.numberOfMonths,10)||1
if(a.numberOfMonths=n>4?4:n,d(a.minDate)||(a.minDate=!1),d(a.maxDate)||(a.maxDate=!1),a.minDate&&a.maxDate&&a.maxDate<a.minDate&&(a.maxDate=a.minDate=!1),a.minDate&&this.setMinDate(a.minDate),a.maxDate&&this.setMaxDate(a.maxDate),c(a.yearRange)){var i=(new Date).getFullYear()-10
a.yearRange[0]=parseInt(a.yearRange[0],10)||i,a.yearRange[1]=parseInt(a.yearRange[1],10)||i}else a.yearRange=Math.abs(parseInt(a.yearRange,10))||b.yearRange,a.yearRange>100&&(a.yearRange=100)
return a},toString:function(n){return n=n||this._o.format,d(this._d)?this._o.toString?this._o.toString(this._d,n):a?e(this._d).format(n):this._d.toDateString():""},getMoment:function(){return a?e(this._d):null},setMoment:function(n,i){a&&e.isMoment(n)&&this.setDate(n.toDate(),i)},getDate:function(){return d(this._d)?new Date(this._d.getTime()):null},setDate:function(e,a){if(!e)return this._d=null,this._o.field&&(this._o.field.value="",k(this._o.field,"change",{firedBy:this})),this.draw()
if("string"==typeof e&&(e=new Date(Date.parse(e))),d(e)){var n=this._o.minDate,i=this._o.maxDate
d(n)&&e<n?e=n:d(i)&&e>i&&(e=i),this._d=new Date(e.getTime()),f(this._d),this.gotoDate(this._d),this._o.field&&(this._o.field.value=this.toString(),k(this._o.field,"change",{firedBy:this})),a||"function"!=typeof this._o.onSelect||this._o.onSelect.call(this,this.getDate())}},clear:function(){this.setDate(null)},gotoDate:function(e){var a=!0
if(d(e)){if(this.calendars){var n=new Date(this.calendars[0].year,this.calendars[0].month,1),i=new Date(this.calendars[this.calendars.length-1].year,this.calendars[this.calendars.length-1].month,1),r=e.getTime()
i.setMonth(i.getMonth()+1),i.setDate(i.getDate()-1),a=r<n.getTime()||i.getTime()<r}a&&(this.calendars=[{month:e.getMonth(),year:e.getFullYear()}],"right"===this._o.mainCalendar&&(this.calendars[0].month+=1-this._o.numberOfMonths)),this.adjustCalendars()}},adjustDate:function(e,a){var n,i=this.getDate()||new Date,r=24*parseInt(a)*60*60*1e3
"add"===e?n=new Date(i.valueOf()+r):"subtract"===e&&(n=new Date(i.valueOf()-r)),this.setDate(n)},adjustCalendars:function(){this.calendars[0]=y(this.calendars[0])
for(var e=1;e<this._o.numberOfMonths;e++)this.calendars[e]=y({month:this.calendars[0].month+e,year:this.calendars[0].year})
this.draw()},gotoToday:function(){this.gotoDate(new Date)},gotoMonth:function(e){isNaN(e)||(this.calendars[0].month=parseInt(e,10),this.adjustCalendars())},nextMonth:function(){this.calendars[0].month++,this.adjustCalendars()},prevMonth:function(){this.calendars[0].month--,this.adjustCalendars()},gotoYear:function(e){isNaN(e)||(this.calendars[0].year=parseInt(e,10),this.adjustCalendars())},setMinDate:function(e){e instanceof Date?(f(e),this._o.minDate=e,this._o.minYear=e.getFullYear(),this._o.minMonth=e.getMonth()):(this._o.minDate=b.minDate,this._o.minYear=b.minYear,this._o.minMonth=b.minMonth,this._o.startRange=b.startRange),this.draw()},setMaxDate:function(e){e instanceof Date?(f(e),this._o.maxDate=e,this._o.maxYear=e.getFullYear(),this._o.maxMonth=e.getMonth()):(this._o.maxDate=b.maxDate,this._o.maxYear=b.maxYear,this._o.maxMonth=b.maxMonth,this._o.endRange=b.endRange),this.draw()},setStartRange:function(e){this._o.startRange=e},setEndRange:function(e){this._o.endRange=e},draw:function(e){if(this._v||e){var a,n=this._o,i=n.minYear,t=n.maxYear,o=n.minMonth,s=n.maxMonth,l=""
this._y<=i&&(this._y=i,!isNaN(o)&&this._m<o&&(this._m=o)),this._y>=t&&(this._y=t,!isNaN(s)&&this._m>s&&(this._m=s))
for(var u=0;u<n.numberOfMonths;u++)a="pika-title-"+Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,2),l+='<div class="pika-lendar">'+T(this,u,this.calendars[u].year,this.calendars[u].month,this.calendars[0].year,a)+this.render(this.calendars[u].year,this.calendars[u].month,a)+"</div>"
this.el.innerHTML=l,n.bound&&"hidden"!==n.field.type&&r((function(){n.trigger.focus()}),1),"function"==typeof this._o.onDraw&&this._o.onDraw(this),n.bound&&n.field.setAttribute("aria-label",n.ariaLabel)}},adjustPosition:function(){var e,a,n,r,t,o,s,c,d,h,p,m
if(!this._o.container){if(this.el.style.position="absolute",a=e=this._o.trigger,n=this.el.offsetWidth,r=this.el.offsetHeight,t=window.innerWidth||i.documentElement.clientWidth,o=window.innerHeight||i.documentElement.clientHeight,s=window.pageYOffset||i.body.scrollTop||i.documentElement.scrollTop,p=!0,m=!0,"function"==typeof e.getBoundingClientRect)c=(h=e.getBoundingClientRect()).left+window.pageXOffset,d=h.bottom+window.pageYOffset
else for(c=a.offsetLeft,d=a.offsetTop+a.offsetHeight;a=a.offsetParent;)c+=a.offsetLeft,d+=a.offsetTop;(this._o.reposition&&c+n>t||this._o.position.indexOf("right")>-1&&c-n+e.offsetWidth>0)&&(c=c-n+e.offsetWidth,p=!1),(this._o.reposition&&d+r>o+s||this._o.position.indexOf("top")>-1&&d-r-e.offsetHeight>0)&&(d=d-r-e.offsetHeight,m=!1),c<0&&(c=0),d<0&&(d=0),this.el.style.left=c+"px",this.el.style.top=d+"px",l(this.el,p?"left-aligned":"right-aligned"),l(this.el,m?"bottom-aligned":"top-aligned"),u(this.el,p?"right-aligned":"left-aligned"),u(this.el,m?"top-aligned":"bottom-aligned")}},render:function(n,i,r){var t,o,s,l,u,c,p=this._o,g=new Date,k=m(n,i),y=new Date(n,i,1).getDay(),b=[],T=[]
f(g),p.firstDay>0&&(y-=p.firstDay)<0&&(y+=7)
for(var _=0===i?11:i-1,w=11===i?0:i+1,j=0===i?n-1:n,E=11===i?n+1:n,N=m(j,_),B=k+y,P=B;P>7;)P-=7
B+=7-P
for(var L=!1,D=0,x=0;D<B;D++){var C=new Date(n,i,D-y+1),K=!!d(this._d)&&v(C,this._d),R=v(C,g),z=-1!==p.events.indexOf(C.toDateString()),O=D<y||D>=k+y,I=D-y+1,V=i,G=n,H=p.startRange&&v(p.startRange,C),F=p.endRange&&v(p.endRange,C),J=p.startRange&&p.endRange&&p.startRange<C&&C<p.endRange
O&&(D<y?(I=N+I,V=_,G=j):(I-=k,V=w,G=E))
var U={day:I,month:V,year:G,hasEvent:z,isSelected:K,isToday:R,isDisabled:p.minDate&&C<p.minDate||p.maxDate&&C>p.maxDate||p.disableWeekends&&h(C)||p.disableDayFn&&p.disableDayFn(C),isEmpty:O,isStartRange:H,isEndRange:F,isInRange:J,showDaysInNextAndPreviousMonths:p.showDaysInNextAndPreviousMonths,enableSelectionDaysInNextAndPreviousMonths:p.enableSelectionDaysInNextAndPreviousMonths}
p.pickWholeWeek&&K&&(L=!0),T.push(A(U)),7==++x&&(p.showWeekNumber&&T.unshift((t=D-y,o=i,s=n,l=p.firstWeekOfYearMinDays,void 0,void 0,u=new Date(s,o,t),c=a?e(u).isoWeek():function(e,a){e.setHours(0,0,0,0)
var n=e.getDate(),i=e.getDay(),r=a,t=r-1,o=function(e){return(e+7-1)%7}
e.setDate(n+t-o(i))
var s=new Date(e.getFullYear(),0,r),l=(e.getTime()-s.getTime())/864e5
return 1+Math.round((l-t+o(s.getDay()))/7)}(u,l),'<td class="pika-week">'+c+"</td>")),b.push(M(T,p.isRTL,p.pickWholeWeek,L)),T=[],x=0,L=!1)}return function(e,a,n){return'<table cellpadding="0" cellspacing="0" class="pika-table" role="grid" aria-labelledby="'+n+'">'+function(e){var a,n=[]
for(e.showWeekNumber&&n.push("<th></th>"),a=0;a<7;a++)n.push('<th scope="col"><abbr title="'+S(e,a)+'">'+S(e,a,!0)+"</abbr></th>")
return"<thead><tr>"+(e.isRTL?n.reverse():n).join("")+"</tr></thead>"}(e)+"<tbody>"+a.join("")+"</tbody></table>"}(p,b,r)},isVisible:function(){return this._v},show:function(){this.isVisible()||(this._v=!0,this.draw(),u(this.el,"is-hidden"),this._o.bound&&(t(i,"click",this._onClick),this.adjustPosition()),"function"==typeof this._o.onOpen&&this._o.onOpen.call(this))},hide:function(){var e=this._v
!1!==e&&(this._o.bound&&o(i,"click",this._onClick),this._o.container||(this.el.style.position="static",this.el.style.left="auto",this.el.style.top="auto"),l(this.el,"is-hidden"),this._v=!1,void 0!==e&&"function"==typeof this._o.onClose&&this._o.onClose.call(this))},destroy:function(){var e=this._o
this.hide(),o(this.el,"mousedown",this._onMouseDown,!0),o(this.el,"touchend",this._onMouseDown,!0),o(this.el,"change",this._onChange),e.keyboardInput&&o(i,"keydown",this._onKeyChange),e.field&&(o(e.field,"change",this._onInputChange),e.bound&&(o(e.trigger,"click",this._onInputClick),o(e.trigger,"focus",this._onInputFocus),o(e.trigger,"blur",this._onInputBlur))),this.el.parentNode&&this.el.parentNode.removeChild(this.el)}},_}((0,n(7642).m)())
var s=new WeakMap,l=new WeakMap
class u extends(t()){constructor(){super(...arguments),(0,i.a)(this,s,{writable:!0,value:void 0}),(0,i.a)(this,l,{writable:!0,value:void 0})}get pikadayOptions(){let e={field:this.element,...this.args.named,...this.args.positional[0]}
return e.i18n||delete e.i18n,e}didInstall(){(0,i.c)(this,s,new o(this.pikadayOptions))
let{value:e}=this.args.named
e&&(0,i.b)(this,s).setDate(e,!0),this.syncDisabled(),(0,i.c)(this,l,new MutationObserver(this.syncDisabled.bind(this))),(0,i.b)(this,l).observe(this.element,{attributes:!0})}didUpdateArguments(){let{value:e,minDate:a,maxDate:n}=this.args.named,r=!1;(0,i.b)(this,s).setMinDate(c(a)),a&&e&&e<a&&(e=a,r=!0),(0,i.b)(this,s).setMaxDate(c(n)),n&&e&&e>n&&(e=n,r=!0),(0,i.b)(this,s).setDate(e,!r),(0,i.b)(this,s).config(this.pikadayOptions)}willDestroy(){(0,i.b)(this,s).destroy(),(0,i.b)(this,l).disconnect()}syncDisabled(){this.element.hasAttribute("disabled")&&(0,i.b)(this,s).hide()}}function c(e){return e?new Date(e.getTime()):e}},2410:e=>{"use strict"
e.exports=function(e,a){a||(a={}),"function"==typeof a&&(a={cmp:a})
var n,i="boolean"==typeof a.cycles&&a.cycles,r=a.cmp&&(n=a.cmp,function(e){return function(a,i){var r={key:a,value:e[a]},t={key:i,value:e[i]}
return n(r,t)}}),t=[]
return function e(a){if(a&&a.toJSON&&"function"==typeof a.toJSON&&(a=a.toJSON()),void 0!==a){if("number"==typeof a)return isFinite(a)?""+a:"null"
if("object"!=typeof a)return JSON.stringify(a)
var n,o
if(Array.isArray(a)){for(o="[",n=0;n<a.length;n++)n&&(o+=","),o+=e(a[n])||"null"
return o+"]"}if(null===a)return"null"
if(-1!==t.indexOf(a)){if(i)return JSON.stringify("__cycle__")
throw new TypeError("Converting circular structure to JSON")}var s=t.push(a)-1,l=Object.keys(a).sort(r&&r(a))
for(o="",n=0;n<l.length;n++){var u=l[n],c=e(a[u])
c&&(o&&(o+=","),o+=JSON.stringify(u)+":"+c)}return t.splice(s,1),"{"+o+"}"}}(e)}},3276:e=>{function a(e,a,n,i){var r,t=null==(r=i)||"number"==typeof r||"boolean"==typeof r?i:n(i),o=a.get(t)
return void 0===o&&(o=e.call(this,i),a.set(t,o)),o}function n(e,a,n){var i=Array.prototype.slice.call(arguments,3),r=n(i),t=a.get(r)
return void 0===t&&(t=e.apply(this,i),a.set(r,t)),t}function i(e,a,n,i,r){return n.bind(a,e,i,r)}function r(e,r){return i(e,this,1===e.length?a:n,r.cache.create(),r.serializer)}function t(){return JSON.stringify(arguments)}function o(){this.cache=Object.create(null)}o.prototype.has=function(e){return e in this.cache},o.prototype.get=function(e){return this.cache[e]},o.prototype.set=function(e,a){this.cache[e]=a}
var s={create:function(){return new o}}
e.exports=function(e,a){var n=a&&a.cache?a.cache:s,i=a&&a.serializer?a.serializer:t
return(a&&a.strategy?a.strategy:r)(e,{cache:n,serializer:i})},e.exports.strategies={variadic:function(e,a){return i(e,this,n,a.cache.create(),a.serializer)},monadic:function(e,n){return i(e,this,a,n.cache.create(),n.serializer)}}},508:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(724),t={name:"Date",description:"A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.",serialize:function(e){if(e instanceof Date){if((0,r.validateJSDate)(e))return(0,r.serializeDate)(e)
throw new TypeError("Date cannot represent an invalid Date instance")}if("string"==typeof e||e instanceof String){if((0,r.validateDate)(e))return e
throw new TypeError("Date cannot represent an invalid date-string "+e+".")}throw new TypeError("Date cannot represent a non string, or non Date type "+JSON.stringify(e))},parseValue:function(e){if(!("string"==typeof e||e instanceof String))throw new TypeError("Date cannot represent non string type "+JSON.stringify(e))
if((0,r.validateDate)(e))return(0,r.parseDate)(e)
throw new TypeError("Date cannot represent an invalid date-string "+e+".")},parseLiteral:function(e){if(e.kind!==i.Kind.STRING)throw new TypeError("Date cannot represent non string type "+String(null!=e.value?e.value:null))
var a=e.value
if((0,r.validateDate)(a))return(0,r.parseDate)(a)
throw new TypeError("Date cannot represent an invalid date-string "+String(a)+".")}}
a.default=new i.GraphQLScalarType(t)},5006:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(724),t={name:"DateTime",description:"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.",serialize:function(e){if(e instanceof Date){if((0,r.validateJSDate)(e))return(0,r.serializeDateTime)(e)
throw new TypeError("DateTime cannot represent an invalid Date instance")}if("string"==typeof e||e instanceof String){if((0,r.validateDateTime)(e))return(0,r.serializeDateTimeString)(e)
throw new TypeError("DateTime cannot represent an invalid date-time-string "+e+".")}if("number"==typeof e||e instanceof Number){if((0,r.validateUnixTimestamp)(e))return(0,r.serializeUnixTimestamp)(e)
throw new TypeError("DateTime cannot represent an invalid Unix timestamp "+e)}throw new TypeError("DateTime cannot be serialized from a non string, non numeric or non Date type "+JSON.stringify(e))},parseValue:function(e){if(!("string"==typeof e||e instanceof String))throw new TypeError("DateTime cannot represent non string type "+JSON.stringify(e))
if((0,r.validateDateTime)(e))return(0,r.parseDateTime)(e)
throw new TypeError("DateTime cannot represent an invalid date-time-string "+e+".")},parseLiteral:function(e){if(e.kind!==i.Kind.STRING)throw new TypeError("DateTime cannot represent non string type "+String(null!=e.value?e.value:null))
var a=e.value
if((0,r.validateDateTime)(a))return(0,r.parseDateTime)(a)
throw new TypeError("DateTime cannot represent an invalid date-time-string "+String(a)+".")}}
a.default=new i.GraphQLScalarType(t)},4229:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0})
var i=n(508)
Object.defineProperty(a,"GraphQLDate",{enumerable:!0,get:function(){return o(i).default}})
var r=n(3030)
Object.defineProperty(a,"GraphQLTime",{enumerable:!0,get:function(){return o(r).default}})
var t=n(5006)
function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(a,"GraphQLDateTime",{enumerable:!0,get:function(){return o(t).default}})},3030:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(724),t={name:"Time",description:"A time string at UTC, such as 10:15:30Z, compliant with the `full-time` format outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.",serialize:function(e){if(e instanceof Date){if((0,r.validateJSDate)(e))return(0,r.serializeTime)(e)
throw new TypeError("Time cannot represent an invalid Date instance")}if("string"==typeof e||e instanceof String){if((0,r.validateTime)(e))return(0,r.serializeTimeString)(e)
throw new TypeError("Time cannot represent an invalid time-string "+e+".")}throw new TypeError("Time cannot be serialized from a non string, or non Date type "+JSON.stringify(e))},parseValue:function(e){if(!("string"==typeof e||e instanceof String))throw new TypeError("Time cannot represent non string type "+JSON.stringify(e))
if((0,r.validateTime)(e))return(0,r.parseTime)(e)
throw new TypeError("Time cannot represent an invalid time-string "+e+".")},parseLiteral:function(e){if(e.kind!==i.Kind.STRING)throw new TypeError("Time cannot represent non string type "+String(null!=e.value?e.value:null))
var a=e.value
if((0,r.validateTime)(a))return(0,r.parseTime)(a)
throw new TypeError("Time cannot represent an invalid time-string "+String(a)+".")}}
a.default=new i.GraphQLScalarType(t)},6483:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0})
var n=a.parseTime=function(e){var a=(new Date).toISOString()
return new Date(a.substr(0,a.indexOf("T")+1)+e)},i=a.serializeTime=function(e){var a=e.toISOString()
return a.substr(a.indexOf("T")+1)}
a.serializeTimeString=function(e){if(-1!==e.indexOf("Z"))return e
var a=n(e),r=i(a),t=/\.\d{1,}/,o=e.match(t)
return null==o?r.replace(t,""):r.replace(t,o[0])},a.parseDate=function(e){return new Date(e)},a.serializeDate=function(e){return e.toISOString().split("T")[0]},a.parseDateTime=function(e){return new Date(e)},a.serializeDateTime=function(e){return e.toISOString()},a.serializeDateTimeString=function(e){if(-1!==e.indexOf("Z"))return e
var a=new Date(e).toISOString(),n=/\.\d{1,}/,i=e.match(n)
return null==i?a.replace(n,""):a.replace(n,i[0])},a.serializeUnixTimestamp=function(e){return new Date(1e3*e).toISOString()}},724:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0})
var i=n(6483)
Object.defineProperty(a,"serializeTime",{enumerable:!0,get:function(){return i.serializeTime}}),Object.defineProperty(a,"serializeTimeString",{enumerable:!0,get:function(){return i.serializeTimeString}}),Object.defineProperty(a,"serializeDate",{enumerable:!0,get:function(){return i.serializeDate}}),Object.defineProperty(a,"serializeDateTime",{enumerable:!0,get:function(){return i.serializeDateTime}}),Object.defineProperty(a,"serializeDateTimeString",{enumerable:!0,get:function(){return i.serializeDateTimeString}}),Object.defineProperty(a,"serializeUnixTimestamp",{enumerable:!0,get:function(){return i.serializeUnixTimestamp}}),Object.defineProperty(a,"parseTime",{enumerable:!0,get:function(){return i.parseTime}}),Object.defineProperty(a,"parseDate",{enumerable:!0,get:function(){return i.parseDate}}),Object.defineProperty(a,"parseDateTime",{enumerable:!0,get:function(){return i.parseDateTime}})
var r=n(7031)
Object.defineProperty(a,"validateTime",{enumerable:!0,get:function(){return r.validateTime}}),Object.defineProperty(a,"validateDate",{enumerable:!0,get:function(){return r.validateDate}}),Object.defineProperty(a,"validateDateTime",{enumerable:!0,get:function(){return r.validateDateTime}}),Object.defineProperty(a,"validateUnixTimestamp",{enumerable:!0,get:function(){return r.validateUnixTimestamp}}),Object.defineProperty(a,"validateJSDate",{enumerable:!0,get:function(){return r.validateJSDate}})},7031:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0})
var n=function(e){return e%4==0&&e%100!=0||e%400==0},i=a.validateTime=function(e){return/^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(\.\d{1,})?(([Z])|([+|-]([01][0-9]|2[0-3]):[0-5][0-9]))$/.test(e)},r=a.validateDate=function(e){if(!/^(\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]))$/.test(e))return!1
var a=Number(e.substr(0,4)),i=Number(e.substr(5,2)),r=Number(e.substr(8,2))
switch(i){case 2:return!(n(a)&&r>29||!n(a)&&r>28)
case 4:case 6:case 9:case 11:if(r>30)return!1}return!0}
a.validateDateTime=function(e){if(!/^(\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60))(\.\d{1,})?(([Z])|([+|-]([01][0-9]|2[0-3]):[0-5][0-9]))$/.test(e))return!1
var a=Date.parse(e)
if(a!=a)return!1
var n=e.indexOf("T"),t=e.substr(0,n),o=e.substr(n+1)
return r(t)&&i(o)},a.validateUnixTimestamp=function(e){return e==e&&e<=2147483647&&e>=-2147483648},a.validateJSDate=function(e){var a=e.getTime()
return a==a}},4809:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{gql:()=>d,resetCaches:()=>h,disableFragmentWarnings:()=>p,enableExperimentalFragmentVariables:()=>m,disableExperimentalFragmentVariables:()=>f,default:()=>A})
var i=n(2985),r=n(6795),t=new Map,o=new Map,s=!0,l=!1
function u(e){return e.replace(/[\s,]+/g," ").trim()}function c(e){var a,n,c,d=u(e)
if(!t.has(d)){var h=(0,r.Qc)(e,{experimentalFragmentVariables:l,allowLegacyFragmentVariables:l})
if(!h||"Document"!==h.kind)throw new Error("Not a valid GraphQL document.")
t.set(d,function(e){var a=new Set(e.definitions)
a.forEach((function(e){e.loc&&delete e.loc,Object.keys(e).forEach((function(n){var i=e[n]
i&&"object"==typeof i&&a.add(i)}))}))
var n=e.loc
return n&&(delete n.startToken,delete n.endToken),e}((a=h,n=new Set,c=[],a.definitions.forEach((function(e){if("FragmentDefinition"===e.kind){var a=e.name.value,i=u((t=e.loc).source.body.substring(t.start,t.end)),r=o.get(a)
r&&!r.has(i)?s&&console.warn("Warning: fragment with name "+a+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"):r||o.set(a,r=new Set),r.add(i),n.has(i)||(n.add(i),c.push(e))}else c.push(e)
var t})),(0,i.pi)((0,i.pi)({},a),{definitions:c}))))}return t.get(d)}function d(e){for(var a=[],n=1;n<arguments.length;n++)a[n-1]=arguments[n]
"string"==typeof e&&(e=[e])
var i=e[0]
return a.forEach((function(a,n){a&&"Document"===a.kind?i+=a.loc.source.body:i+=a,i+=e[n+1]})),c(i)}function h(){t.clear(),o.clear()}function p(){s=!1}function m(){l=!0}function f(){l=!1}var v,g=d,k=h,y=p,b=m,S=f;(v=d||(d={})).gql=g,v.resetCaches=k,v.disableFragmentWarnings=y,v.enableExperimentalFragmentVariables=b,v.disableExperimentalFragmentVariables=S,d.default=d
const A=d},5221:function(e,a){var n,i=this&&this.__extends||(n=function(e,a){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var n in a)a.hasOwnProperty(n)&&(e[n]=a[n])},n(e,a)},function(e,a){function i(){this.constructor=e}n(e,a),e.prototype=null===a?Object.create(a):(i.prototype=a.prototype,new i)})
Object.defineProperty(a,"__esModule",{value:!0})
var r=function(e){function a(a){var n=e.call(this,a)||this
return n.message=a,Error.captureStackTrace(n,n.constructor),n}return i(a,e),a}(Error)
a.default=r},5430:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(9357),r=n(4636),t=n(2215),o=n(9357),s=n(2234)
function l(e,a){Object.keys(a).forEach((function(n){e[n]=a[n]}))}a.default=function(e,a,n){e instanceof r.GraphQLSchema&&(console.warn("The addResolveFunctionsToSchema function takes named options now; see IAddResolveFunctionsToSchemaOptions"),e={schema:e,resolvers:a,resolverValidationOptions:n})
var u=e.schema,c=e.resolvers,d=e.resolverValidationOptions,h=void 0===d?{}:d,p=e.inheritResolversFromInterfaces,m=void 0!==p&&p,f=h.allowResolversNotInSchema,v=void 0!==f&&f,g=h.requireResolversForResolveType,k=m?o.extendResolversFromInterfaces(u,c):c,y=Object.create(null)
return Object.keys(k).forEach((function(e){var a=k[e],n=typeof a
if("object"!==n&&"function"!==n)throw new i.SchemaError('"'+e+'" defined in resolvers, but has invalid value "'+a+"\". A resolver's value must be of type object or function.")
var t=u.getType(e)
if(!t&&"__schema"!==e){if(v)return
throw new i.SchemaError('"'+e+'" defined in resolvers, but not in schema')}Object.keys(a).forEach((function(n){if(n.startsWith("__"))t[n.substring(2)]=a[n]
else if(t instanceof r.GraphQLScalarType)t[n]=a[n]
else{if(t instanceof r.GraphQLEnumType){if(!t.getValue(n)){if(v)return
throw new i.SchemaError(e+"."+n+" was defined in resolvers, but enum is not in schema")}return y[t.name]=y[t.name]||{},void(y[t.name][n]=a[n])}var o=function(e){return e instanceof r.GraphQLObjectType||e instanceof r.GraphQLInterfaceType?e.getFields():void 0}(t)
if(!o){if(v)return
throw new i.SchemaError(e+" was defined in resolvers, but it's not an object")}if(!o[n]){if(v)return
throw new i.SchemaError(e+"."+n+" defined in resolvers, but not in schema")}var s=o[n],u=a[n]
if("function"==typeof u)l(s,{resolve:u})
else{if("object"!=typeof u)throw new i.SchemaError("Resolver "+e+"."+n+" must be object or function")
l(s,u)}}}))})),o.checkForResolveTypeResolver(u,g),t.applySchemaTransforms(u,[new s.default(y)])}},3228:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636)
function r(e,a){return function(n,r,t,o){return Promise.resolve(a(n,r,t,o)).then((function(a){return e?e(a,r,t,o):i.defaultFieldResolver(a,r,t,o)}))}}a.default=function(e,a){[e.getQueryType(),e.getMutationType(),e.getSubscriptionType()].filter((function(e){return!!e})).forEach((function(n){var i=function(e){var a,n=Math.random()
return function(i,r,t,o){return o.operation.__runAtMostOnce||(o.operation.__runAtMostOnce={}),o.operation.__runAtMostOnce[n]||(o.operation.__runAtMostOnce[n]=!0,a=e(i,r,t,o)),a}}(a),t=n.getFields()
Object.keys(t).forEach((function(o){n===e.getSubscriptionType()?t[o].resolve=r(t[o].resolve,a):t[o].resolve=r(t[o].resolve,i)}))}))}},3490:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(9357)
function t(e,a,n){if(e.resolve){if("function"!=typeof e.resolve)throw new r.SchemaError('Resolver "'+a+"."+n+'" must be a function')}else console.warn('Resolve function missing for "'+a+"."+n+'". To disable this warning check https://github.com/apollostack/graphql-tools/issues/131')}a.default=function(e,a){void 0===a&&(a={})
var n=a.requireResolversForArgs,o=void 0!==n&&n,s=a.requireResolversForNonScalar,l=void 0!==s&&s,u=a.requireResolversForAllFields,c=void 0!==u&&u
if(c&&(o||l))throw new TypeError("requireResolversForAllFields takes precedence over the more specific assertions. Please configure either requireResolversForAllFields or requireResolversForArgs / requireResolversForNonScalar, but not a combination of them.")
r.forEachField(e,(function(e,a,n){c&&t(e,a,n),o&&e.args.length>0&&t(e,a,n),!l||i.getNamedType(e.type)instanceof i.GraphQLScalarType||t(e,a,n)}))}},3965:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(458),t=n(9357),o=r.deprecated({version:"0.7.0",url:"https://github.com/apollostack/graphql-tools/issues/140"},(function(e,a){if(!(e&&e instanceof i.GraphQLSchema))throw new Error("schema must be an instance of GraphQLSchema. This error could be caused by installing more than one version of GraphQL-JS")
if("object"!=typeof a)throw new Error("Expected connectors to be of type object, got "+typeof a)
if(0===Object.keys(a).length)throw new Error("Expected connectors to not be an empty object")
if(Array.isArray(a))throw new Error("Expected connectors to be of type object, got Array")
if(e._apolloConnectorsAttached)throw new Error("Connectors already attached to context, cannot attach more than once")
e._apolloConnectorsAttached=!0,t.addSchemaLevelResolveFunction(e,(function(e,n,i){if("object"!=typeof i)throw new Error("Cannot attach connector because context is not an object: "+typeof i)
return void 0===i.connectors&&(i.connectors={}),Object.keys(a).forEach((function(e){var n=a[e]
if(!n.prototype)throw new Error("Connector must be a function or an class")
i.connectors[e]=new n(i)})),e}))}))
a.default=o},3841:function(e,a,n){var i,r=this&&this.__extends||(i=function(e,a){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var n in a)a.hasOwnProperty(n)&&(e[n]=a[n])},i(e,a)},function(e,a){function n(){this.constructor=e}i(e,a),e.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}),t=this&&this.__awaiter||function(e,a,n,i){return new(n||(n=Promise))((function(r,t){function o(e){try{l(i.next(e))}catch(e){t(e)}}function s(e){try{l(i.throw(e))}catch(e){t(e)}}function l(e){var a
e.done?r(e.value):(a=e.value,a instanceof n?a:new n((function(e){e(a)}))).then(o,s)}l((i=i.apply(e,a||[])).next())}))},o=this&&this.__generator||function(e,a){var n,i,r,t,o={label:0,sent:function(){if(1&r[0])throw r[1]
return r[1]},trys:[],ops:[]}
return t={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t
function s(t){return function(s){return function(t){if(n)throw new TypeError("Generator is already executing.")
for(;o;)try{if(n=1,i&&(r=2&t[0]?i.return:t[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,t[1])).done)return r
switch(i=0,r&&(t=[2&t[0],r.value]),t[0]){case 0:case 1:r=t
break
case 4:return o.label++,{value:t[1],done:!1}
case 5:o.label++,i=t[1],t=[0]
continue
case 7:t=o.ops.pop(),o.trys.pop()
continue
default:if(!((r=(r=o.trys).length>0&&r[r.length-1])||6!==t[0]&&2!==t[0])){o=0
continue}if(3===t[0]&&(!r||t[1]>r[0]&&t[1]<r[3])){o.label=t[1]
break}if(6===t[0]&&o.label<r[1]){o.label=r[1],r=t
break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(t)
break}r[2]&&o.ops.pop(),o.trys.pop()
continue}t=a.call(e,o)}catch(e){t=[6,e],i=0}finally{n=r=0}if(5&t[0])throw t[1]
return{value:t[0]?t[1]:void 0,done:!0}}([t,s])}}}
Object.defineProperty(a,"__esModule",{value:!0})
var s=n(4636),l=n(6719)
a.default=function(e,a){if("object"!=typeof a)throw new Error("Expected directiveResolvers to be of type object, got "+typeof a)
if(Array.isArray(a))throw new Error("Expected directiveResolvers to be of type object, got Array")
var n=Object.create(null)
Object.keys(a).forEach((function(e){n[e]=function(n){function i(){return null!==n&&n.apply(this,arguments)||this}return r(i,n),i.prototype.visitFieldDefinition=function(n){var i=this,r=a[e],l=n.resolve||s.defaultFieldResolver,u=this.args
n.resolve=function(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a]
var s=e[0],c=e[2],d=e[3]
return r((function(){return t(i,void 0,void 0,(function(){return o(this,(function(a){return[2,l.apply(n,e)]}))}))}),s,u,c,d)}},i}(l.SchemaDirectiveVisitor)})),l.SchemaDirectiveVisitor.visitSchemaDirectives(e,n)}},3747:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(9357),t=n(8419)
a.default=function(e,a){var n,o=e
if(function(e){return void 0!==e.kind}(e))n=e
else if("string"!=typeof o){if(!Array.isArray(o)){var s=typeof o
throw new r.SchemaError("typeDefs must be a string, array or schema AST, got "+s)}o=r.concatenateTypeDefs(o)}"string"==typeof o&&(n=i.parse(o,a))
var l={commentDescriptions:!0},u=t.default(n),c=i.buildASTSchema(u,l),d=r.extractExtensionDefinitions(n)
return d.definitions.length>0&&(c=i.extendSchema(c,d,l)),c}},3853:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636)
a.chainResolvers=function(e){return function(a,n,r,t){return e.reduce((function(e,a){return a?a(e,n,r,t):i.defaultFieldResolver(e,n,r,t)}),a)}}},881:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(9357)
a.default=function(e,a){Object.keys(e.getTypeMap()).map((function(a){return e.getType(a)})).forEach((function(e){if((e instanceof i.GraphQLUnionType||e instanceof i.GraphQLInterfaceType)&&!e.resolveType){if(!1===a)return
if(!0===a)throw new r.SchemaError('Type "'+e.name+'" is missing a "resolveType" resolver')
console.warn('Type "'+e.name+'" is missing a "__resolveType" resolver. Pass false into "resolverValidationOptions.requireResolversForResolveType" to disable this warning.')}}))}},4764:function(e,a,n){var i=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
Object.defineProperty(a,"__esModule",{value:!0})
var r=n(4636),t=n(9357)
a.default=function e(a,n){void 0===n&&(n=[])
var o,s=[]
return a.forEach((function(a){if(void 0!==a.kind&&(a=r.print(a)),"function"==typeof a)-1===n.indexOf(a)&&(n.push(a),s=s.concat(e(a(),n)))
else{if("string"!=typeof a){var i=typeof a
throw new t.SchemaError("typeDef array must contain only strings and functions, got "+i)}s.push(a.trim())}})),(o=s.map((function(e){return e.trim()})),o.reduce((function(e,a){return-1===e.indexOf(a)?i(e,[a]):e}),[])).join("\n")}},2868:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636)
a.default=function(e,a,n){void 0===e&&(e=i.defaultFieldResolver)
var r=function(e){var i=new Error
i.stack=e.stack,n&&(i.originalMessage=e.message,i.message="Error in resolver "+n+"\n"+e.message),a.log(i)}
return function(a,n,i,t){try{var o=e(a,n,i,t)
return o&&"function"==typeof o.then&&"function"==typeof o.catch&&o.catch((function(e){var a=e instanceof Error?e:new Error(e)
return r(a),e})),o}catch(e){throw r(e),e}}}},6273:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)},r=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
Object.defineProperty(a,"__esModule",{value:!0})
var t=n(4636)
a.default=function(e,a){var n=Object.keys(i(i({},e.getTypeMap()),a)),o={}
return n.forEach((function(n){var i=a[n],s=e.getType(n)
if(s instanceof t.GraphQLObjectType){var l=s.getInterfaces().map((function(e){return a[e.name]}))
o[n]=Object.assign.apply(Object,r([{}],l,[i]))}else i&&(o[n]=i)})),o}},6292:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){var a=e.definitions.filter((function(e){return"ObjectTypeExtension"===e.kind||"InterfaceTypeExtension"===e.kind||"InputObjectTypeExtension"===e.kind||"UnionTypeExtension"===e.kind||"EnumTypeExtension"===e.kind}))
return Object.assign({},e,{definitions:a})}},8419:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)}
Object.defineProperty(a,"__esModule",{value:!0})
var r=n(4636)
a.default=function(e){var a=e.definitions.filter((function(e){return e.kind!==r.Kind.OBJECT_TYPE_EXTENSION&&e.kind!==r.Kind.INTERFACE_TYPE_EXTENSION&&e.kind!==r.Kind.INPUT_OBJECT_TYPE_EXTENSION&&e.kind!==r.Kind.UNION_TYPE_EXTENSION&&e.kind!==r.Kind.ENUM_TYPE_EXTENSION&&e.kind!==r.Kind.SCALAR_TYPE_EXTENSION&&e.kind!==r.Kind.SCHEMA_EXTENSION}))
return i(i({},e),{definitions:a})}},4172:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636)
a.default=function(e,a){var n=e.getTypeMap()
Object.keys(n).forEach((function(e){var r=n[e]
if(!i.getNamedType(r).name.startsWith("__")&&r instanceof i.GraphQLObjectType){var t=r.getFields()
Object.keys(t).forEach((function(n){var i=t[n]
a(i,e,n)}))}}))}},9357:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(5430)
a.addResolveFunctionsToSchema=i.default
var r=n(3228)
a.addSchemaLevelResolveFunction=r.default
var t=n(3490)
a.assertResolveFunctionsPresent=t.default
var o=n(3841)
a.attachDirectiveResolvers=o.default
var s=n(3965)
a.attachConnectorsToContext=s.default
var l=n(3747)
a.buildSchemaFromTypeDefinitions=l.default
var u=n(3853)
a.chainResolvers=u.chainResolvers
var c=n(881)
a.checkForResolveTypeResolver=c.default
var d=n(4764)
a.concatenateTypeDefs=d.default
var h=n(2868)
a.decorateWithLogger=h.default
var p=n(6273)
a.extendResolversFromInterfaces=p.default
var m=n(6292)
a.extractExtensionDefinitions=m.default
var f=n(4172)
a.forEachField=f.default
var v=n(5221)
a.SchemaError=v.default},3916:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636)
a.default=function(e,a,n){return a===n||!(!i.isCompositeType(a)||!i.isCompositeType(n))&&i.doTypesOverlap(e,a,n)}},1356:(e,a,n)=>{function i(e){for(var n in e)a.hasOwnProperty(n)||(a[n]=e[n])}Object.defineProperty(a,"__esModule",{value:!0}),i(n(1890)),i(n(4558)),i(n(4194)),i(n(9517))
var r=n(6719)
a.SchemaDirectiveVisitor=r.SchemaDirectiveVisitor},8771:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){if(!e)return!0
for(var a in e)if(Object.hasOwnProperty.call(e,a))return!1
return!0}},6463:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636)
a.specifiedScalarTypes=[i.GraphQLString,i.GraphQLInt,i.GraphQLFloat,i.GraphQLBoolean,i.GraphQLID],a.default=function(e){return i.isNamedType(e)&&(e.name===i.GraphQLString.name||e.name===i.GraphQLInt.name||e.name===i.GraphQLFloat.name||e.name===i.GraphQLBoolean.name||e.name===i.GraphQLID.name)}},1890:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(6719),t=n(3839),o=n(9357)
function s(e){o.forEachField(e,(function(e,a,n){var r,t,o=a+"."+n
e.resolve=(r=e.resolve,t=o,void 0===r&&(r=i.defaultFieldResolver),function(e,a,n,i){var o=r(e,a,n,i)
if(void 0===o)throw new Error('Resolve function for "'+t+'" returned undefined')
return o})}))}function l(e,a){if(!a)throw new Error("Must provide a logger")
if("function"!=typeof a.log)throw new Error("Logger.log must be a function")
o.forEachField(e,(function(e,n,i){var r=n+"."+i
e.resolve=o.decorateWithLogger(e.resolve,a,r)}))}a.makeExecutableSchema=function(e){var a=e.typeDefs,n=e.resolvers,i=void 0===n?{}:n,u=e.connectors,c=e.logger,d=e.allowUndefinedInResolve,h=void 0===d||d,p=e.resolverValidationOptions,m=void 0===p?{}:p,f=e.directiveResolvers,v=void 0===f?null:f,g=e.schemaDirectives,k=void 0===g?null:g,y=e.parseOptions,b=void 0===y?{}:y,S=e.inheritResolversFromInterfaces,A=void 0!==S&&S
if("object"!=typeof m)throw new o.SchemaError("Expected `resolverValidationOptions` to be an object")
if(!a)throw new o.SchemaError("Must provide typeDefs")
if(!i)throw new o.SchemaError("Must provide resolvers")
var M=Array.isArray(i)?i.filter((function(e){return"object"==typeof e})).reduce(t.default,{}):i,T=o.buildSchemaFromTypeDefinitions(a,b)
return T=o.addResolveFunctionsToSchema({schema:T,resolvers:M,resolverValidationOptions:m,inheritResolversFromInterfaces:A}),o.assertResolveFunctionsPresent(T,m),h||s(T),c&&l(T,c),"function"==typeof i.__schema&&o.addSchemaLevelResolveFunction(T,i.__schema),u&&o.attachConnectorsToContext(T,u),v&&o.attachDirectiveResolvers(T,v),k&&r.SchemaDirectiveVisitor.visitSchemaDirectives(T,k),T},a.addCatchUndefinedToSchema=s,a.addErrorLoggingToSchema=l,function(e){for(var n in e)a.hasOwnProperty(n)||(a[n]=e[n])}(n(9357))},3839:(e,a)=>{function n(e){return e&&"object"==typeof e&&!Array.isArray(e)}Object.defineProperty(a,"__esModule",{value:!0}),a.default=function e(a,i){var r=Object.assign({},a)
return n(a)&&n(i)&&Object.keys(i).forEach((function(t){var o,s
n(i[t])?t in a?r[t]=e(a[t],i[t]):Object.assign(r,((o={})[t]=i[t],o)):Object.assign(r,((s={})[t]=i[t],s))})),r}},4558:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(4386),t=n(1890)
a.mockServer=function(e,a,n){var r
return void 0===n&&(n=!1),s({schema:r=e instanceof i.GraphQLSchema?e:t.buildSchemaFromTypeDefinitions(e),mocks:a,preserveResolvers:n}),{query:function(e,a){return i.graphql(r,e,{},{},a)}}}
var o=new Map
function s(e){var a=e.schema,n=e.mocks,r=void 0===n?{}:n,s=e.preserveResolvers,p=void 0!==s&&s
if(!a)throw new Error("Must provide schema to mock")
if(!(a instanceof i.GraphQLSchema))throw new Error('Value at "schema" must be of type GraphQLSchema')
if(!l(r))throw new Error("mocks must be of type Object")
var m=new Map
Object.keys(r).forEach((function(e){m.set(e,r[e])})),m.forEach((function(e,a){if("function"!=typeof e)throw new Error("mockFunctionMap["+a+"] must be a function")}))
var f=function(e,n,r){return function(n,t,s,l){var c=i.getNullableType(e),p=i.getNamedType(c)
if(n&&void 0!==n[r]){var v=void 0
return"function"==typeof n[r]?(v=n[r](n,t,s,l))instanceof h&&(v=v.mock(n,t,s,l,c,f)):v=n[r],m.has(p.name)&&(v=d(m.get(p.name).bind(null,n,t,s,l),v)),v}if(c instanceof i.GraphQLList||c instanceof i.GraphQLNonNull)return[f(c.ofType)(n,t,s,l),f(c.ofType)(n,t,s,l)]
if(m.has(c.name)&&!(c instanceof i.GraphQLUnionType||c instanceof i.GraphQLInterfaceType))return m.get(c.name)(n,t,s,l)
if(c instanceof i.GraphQLObjectType)return{}
if(c instanceof i.GraphQLUnionType||c instanceof i.GraphQLInterfaceType){var g=void 0
if(m.has(c.name)){var k=m.get(c.name)(n,t,s,l)
if(!k||!k.__typename)return Error('Please return a __typename in "'+c.name+'"')
g=a.getType(k.__typename)}else g=u(a.getPossibleTypes(c))
return Object.assign({__typename:g},f(g)(n,t,s,l))}return c instanceof i.GraphQLEnumType?u(c.getValues()).value:o.has(c.name)?o.get(c.name)(n,t,s,l):Error('No mock defined for type "'+c.name+'"')}}
t.forEachField(a,(function(e,n,r){var t
!function(e,a){var n=i.getNullableType(e),r=i.getNamedType(n),t=function(e){return e instanceof i.GraphQLInterfaceType||e instanceof i.GraphQLUnionType?e.resolveType:void 0}(r)
a&&t&&t.length||(r instanceof i.GraphQLUnionType||r instanceof i.GraphQLInterfaceType)&&(r.resolveType=function(e,a,n){return n.schema.getType(e.__typename)})}(e.type,p)
var o=a.getQueryType()&&a.getQueryType().name===n,s=a.getMutationType()&&a.getMutationType().name===n
if((o||s)&&m.has(n)){var u=m.get(n)
"function"==typeof u(void 0,{},{},{})[r]&&(t=function(a,i,t,o){var s=a||{}
return s[r]=u(a,i,t,o)[r],f(e.type,n,r)(s,i,t,o)})}if(t||(t=f(e.type,n,r)),p&&e.resolve){var d=e.resolve
e.resolve=function(e,a,n,i){return Promise.all([t(e,a,n,i),d(e,a,n,i)]).then((function(e){var a=e[0],n=e[1]
if(a instanceof Error){if(void 0===n)throw a
return n}return n instanceof Date&&a instanceof Date?void 0!==n?n:a:l(a)&&l(n)?function(e){for(var a=[],n=1;n<arguments.length;n++)a[n-1]=arguments[n]
return a.forEach((function(a){for(var n=a;n;)c(e,n),n=Object.getPrototypeOf(n)})),e}(Object.create(Object.getPrototypeOf(n)),n,a):void 0!==n?n:a}))}}else e.resolve=t}))}function l(e){return e===Object(e)&&!Array.isArray(e)}function u(e){return e[Math.floor(Math.random()*e.length)]}function c(e,a){Object.getOwnPropertyNames(a).forEach((function(n){Object.getOwnPropertyDescriptor(e,n)||Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}function d(e,a){return Array.isArray(a)?a.map((function(a){return d(e,a)})):l(a)?(n=e(),i=a,Object.assign(n,i)):a
var n,i}o.set("Int",(function(){return Math.round(200*Math.random())-100})),o.set("Float",(function(){return 200*Math.random()-100})),o.set("String",(function(){return"Hello World"})),o.set("Boolean",(function(){return Math.random()>.5})),o.set("ID",(function(){return r.v4()})),a.addMockFunctionsToSchema=s
var h=function(){function e(e,a){if(this.len=e,void 0!==a){if("function"!=typeof a)throw new Error("Second argument to MockList must be a function or undefined")
this.wrappedFunction=a}}return e.prototype.mock=function(a,n,r,t,o,s){var l
l=Array.isArray(this.len)?new Array(this.randint(this.len[0],this.len[1])):new Array(this.len)
for(var u=0;u<l.length;u++)if("function"==typeof this.wrappedFunction){var c=this.wrappedFunction(a,n,r,t)
if(c instanceof e){var d=i.getNullableType(o.ofType)
l[u]=c.mock(a,n,r,t,d,s)}else l[u]=c}else l[u]=s(o.ofType)(a,n,r,t)
return l},e.prototype.randint=function(e,a){return Math.floor(Math.random()*(a-e+1)+e)},e}()
a.MockList=h},6719:function(e,a,n){var i,r=this&&this.__extends||(i=function(e,a){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var n in a)a.hasOwnProperty(n)&&(e[n]=a[n])},i(e,a)},function(e,a){function n(){this.constructor=e}i(e,a),e.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}),t=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
Object.defineProperty(a,"__esModule",{value:!0})
var o=n(4636),s=n(9288),l=Object.prototype.hasOwnProperty,u=function(){function e(){}return e.implementsVisitorMethod=function(a){if(!a.startsWith("visit"))return!1
var n=this.prototype[a]
return"function"==typeof n&&(this===e||n!==e.prototype[a])},e.prototype.visitSchema=function(e){},e.prototype.visitScalar=function(e){},e.prototype.visitObject=function(e){},e.prototype.visitFieldDefinition=function(e,a){},e.prototype.visitArgumentDefinition=function(e,a){},e.prototype.visitInterface=function(e){},e.prototype.visitUnion=function(e){},e.prototype.visitEnum=function(e){},e.prototype.visitEnumValue=function(e,a){},e.prototype.visitInputObject=function(e){},e.prototype.visitInputFieldDefinition=function(e,a){},e}()
function c(e,a){function n(e,n){for(var i=[],r=2;r<arguments.length;r++)i[r-2]=arguments[r]
return a(n,e).every((function(a){var r=a[e].apply(a,t([n],i))
if(void 0===r)return!0
if("visitSchema"===e||n instanceof o.GraphQLSchema)throw new Error("Method "+e+" cannot replace schema with "+r)
return null===r?(n=null,!1):(n=r,!0)})),n}function i(e){m(e.getFields(),(function(a){var i=n("visitFieldDefinition",a,{objectType:e})
return i&&i.args&&m(i.args,(function(a){return n("visitArgumentDefinition",a,{field:i,objectType:e})})),i}))}return function e(a){if(a instanceof o.GraphQLSchema)return n("visitSchema",a),m(a.getTypeMap(),(function(a,n){if(!n.startsWith("__"))return e(a)})),a
if(a instanceof o.GraphQLObjectType){var r=n("visitObject",a)
return r&&i(r),r}if(a instanceof o.GraphQLInterfaceType){var t=n("visitInterface",a)
return t&&i(t),t}if(a instanceof o.GraphQLInputObjectType){var s=n("visitInputObject",a)
return s&&m(s.getFields(),(function(e){return n("visitInputFieldDefinition",e,{objectType:s})})),s}if(a instanceof o.GraphQLScalarType)return n("visitScalar",a)
if(a instanceof o.GraphQLUnionType)return n("visitUnion",a)
if(a instanceof o.GraphQLEnumType){var l=n("visitEnum",a)
return l&&m(l.getValues(),(function(e){return n("visitEnumValue",e,{enumType:l})})),l}throw new Error("Unexpected schema type: "+a)}(e),e}function d(e){return function e(i){if(i instanceof o.GraphQLSchema){var r=i.getTypeMap(),t=Object.create(null)
p(r,(function(e,a){if(!a.startsWith("__")){var n=e.name
if(!n.startsWith("__")){if(l.call(t,n))throw new Error("Duplicate schema type name "+n)
t[n]=e}}})),p(t,(function(e,a){r[a]=e})),p(i.getDirectives(),(function(e){e.args&&p(e.args,(function(e){e.type=n(e.type)}))})),p(r,(function(a,n){n.startsWith("__")||e(a)})),m(r,(function(e,a){if(!a.startsWith("__")&&!l.call(t,a))return null}))}else if(i instanceof o.GraphQLObjectType)a(i),p(i.getInterfaces(),(function(a){return e(a)}))
else if(i instanceof o.GraphQLInterfaceType)a(i)
else if(i instanceof o.GraphQLInputObjectType)p(i.getFields(),(function(e){e.type=n(e.type)}))
else if(i instanceof o.GraphQLScalarType);else if(i instanceof o.GraphQLUnionType)m(i.getTypes(),(function(e){return n(e)}))
else if(!(i instanceof o.GraphQLEnumType))throw new Error("Unexpected schema type: "+i)}(e),e
function a(e){p(e.getFields(),(function(e){e.type=n(e.type),e.args&&p(e.args,(function(e){e.type=n(e.type)}))}))}function n(a){if(a instanceof o.GraphQLList)a=new o.GraphQLList(n(a.ofType))
else if(a instanceof o.GraphQLNonNull)a=new o.GraphQLNonNull(n(a.ofType))
else if(o.isNamedType(a)){var i=a,r=e.getType(i.name)
if(r&&i!==r)return r}return a}}a.SchemaVisitor=u,a.visitSchema=c,a.healSchema=d
var h=function(e){function a(a){var n=e.call(this)||this
return n.name=a.name,n.args=a.args,n.visitedType=a.visitedType,n.schema=a.schema,n.context=a.context,n}return r(a,e),a.getDirectiveDeclaration=function(e,a){return a.getDirective(e)},a.visitSchemaDirectives=function(e,a,n){void 0===n&&(n=Object.create(null))
var i=this.getDeclaredDirectives(e,a),r=Object.create(null)
return Object.keys(a).forEach((function(e){r[e]=[]})),c(e,(function(t,o){var u=[],c=t.astNode&&t.astNode.directives
return c?(c.forEach((function(r){var c=r.name.value
if(l.call(a,c)){var d=a[c]
if(d.implementsVisitorMethod(o)){var h,p=i[c]
p?h=s.getArgumentValues(p,r):(h=Object.create(null),r.arguments.forEach((function(e){h[e.name.value]=f(e.value)}))),u.push(new d({name:c,args:h,visitedType:t,schema:e,context:n}))}}})),u.length>0&&u.forEach((function(e){r[e.name].push(e)})),u):u})),d(e),r},a.getDeclaredDirectives=function(e,a){var n=Object.create(null)
return p(e.getDirectives(),(function(e){n[e.name]=e})),p(a,(function(a,i){var r=a.getDirectiveDeclaration(i,e)
r&&(n[i]=r)})),p(n,(function(e,n){if(l.call(a,n)){var i=a[n]
p(e.locations,(function(e){var a=function(e){return"visit"+e.replace(/([^_]*)_?/g,(function(e,a){return a.charAt(0).toUpperCase()+a.slice(1).toLowerCase()}))}(e)
if(u.implementsVisitorMethod(a)&&!i.implementsVisitorMethod(a))throw new Error("SchemaDirectiveVisitor for @"+n+" must implement "+a+" method")}))}})),n},a}(u)
function p(e,a){Object.keys(e).forEach((function(n){a(e[n],n)}))}function m(e,a){var n=0
Object.keys(e).forEach((function(i){var r=a(e[i],i)
if(void 0!==r)return null===r?(delete e[i],void n++):void(e[i]=r)})),n>0&&Array.isArray(e)&&e.splice(0).forEach((function(a){e.push(a)}))}function f(e){switch(e.kind){case o.Kind.NULL:return null
case o.Kind.INT:return parseInt(e.value,10)
case o.Kind.FLOAT:return parseFloat(e.value)
case o.Kind.STRING:case o.Kind.ENUM:case o.Kind.BOOLEAN:return e.value
case o.Kind.LIST:return e.values.map(f)
case o.Kind.OBJECT:var a=Object.create(null)
return e.fields.forEach((function(e){a[e.name.value]=f(e.value)})),a
default:throw new Error("Unexpected value kind: "+e.kind)}}a.SchemaDirectiveVisitor=h},6226:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(6059),t=n(3942),o=n(2526)
a.default=function(e,a,n,s){if(!e)return null
var l=o.getResponseKeyFromInfo(s),u=t.getErrorsFromParent(e,l)
if("OWN"===u.kind)throw r.locatedError(new Error(u.error.message),s.fieldNodes,i.responsePathAsArray(s.path))
var c=e[l]
return null==c&&(c=e[s.fieldName]),!c&&e.data&&e.data[l]&&(c=e.data[l]),u.errors&&(c=t.annotateWithChildrenErrors(c,u.errors)),c}},1152:function(e,a,n){var i=this&&this.__awaiter||function(e,a,n,i){return new(n||(n=Promise))((function(r,t){function o(e){try{l(i.next(e))}catch(e){t(e)}}function s(e){try{l(i.throw(e))}catch(e){t(e)}}function l(e){var a
e.done?r(e.value):(a=e.value,a instanceof n?a:new n((function(e){e(a)}))).then(o,s)}l((i=i.apply(e,a||[])).next())}))},r=this&&this.__generator||function(e,a){var n,i,r,t,o={label:0,sent:function(){if(1&r[0])throw r[1]
return r[1]},trys:[],ops:[]}
return t={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t
function s(t){return function(s){return function(t){if(n)throw new TypeError("Generator is already executing.")
for(;o;)try{if(n=1,i&&(r=2&t[0]?i.return:t[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,t[1])).done)return r
switch(i=0,r&&(t=[2&t[0],r.value]),t[0]){case 0:case 1:r=t
break
case 4:return o.label++,{value:t[1],done:!1}
case 5:o.label++,i=t[1],t=[0]
continue
case 7:t=o.ops.pop(),o.trys.pop()
continue
default:if(!((r=(r=o.trys).length>0&&r[r.length-1])||6!==t[0]&&2!==t[0])){o=0
continue}if(3===t[0]&&(!r||t[1]>r[0]&&t[1]<r[3])){o.label=t[1]
break}if(6===t[0]&&o.label<r[1]){o.label=r[1],r=t
break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(t)
break}r[2]&&o.ops.pop(),o.trys.pop()
continue}t=a.call(e,o)}catch(e){t=[6,e],i=0}finally{n=r=0}if(5&t[0])throw t[1]
return{value:t[0]?t[1]:void 0,done:!0}}([t,s])}}},t=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
Object.defineProperty(a,"__esModule",{value:!0})
var o=n(4636),s=n(2215),l=n(4807),u=n(8121),c=n(1029),d=n(7894),h=n(9621),p=n(6172),m=n(7495),f=n(4499)
function v(e){return i(this,void 0,void 0,(function(){var a,n,i,v,g,k,y,b,S,A,M
return r(this,(function(r){switch(r.label){case 0:if(a=e.info,n=e.args,i=void 0===n?{}:n,v=e.operation||a.operation.operation,g=function(e,a,n,i,r,s){var l=[],u=[]
n.forEach((function(e){var a=e.selectionSet?e.selectionSet.selections:[]
l=l.concat(a),u=u.concat(e.arguments||[])}))
var c=null
l.length>0&&(c={kind:o.Kind.SELECTION_SET,selections:l})
var d={kind:o.Kind.FIELD,alias:null,arguments:u,selectionSet:c,name:{kind:o.Kind.NAME,value:e}},h={kind:o.Kind.SELECTION_SET,selections:[d]},p={kind:o.Kind.OPERATION_DEFINITION,operation:a,variableDefinitions:r,selectionSet:h,name:s}
return{kind:o.Kind.DOCUMENT,definitions:t([p],i)}}(e.fieldName,v,a.fieldNodes,Object.keys(a.fragments).map((function(e){return a.fragments[e]})),a.operation.variableDefinitions,a.operation.name),k={document:g,variables:a.variableValues},y=t(e.transforms||[],[new p.default(a.schema,e.schema)]),a.mergeInfo&&a.mergeInfo.fragments&&y.push(new m.default(e.schema,a.mergeInfo.fragments)),y=y.concat([new l.default(e.schema,i),new u.default(e.schema),new c.default(e.schema),new d.default(a,e.fieldName)]),o.isEnumType(e.info.returnType)&&(y=y.concat(new f.default(e.info.returnType))),b=s.applyRequestTransforms(k,y),!e.skipValidation&&(S=o.validate(e.schema,b.document)).length>0)throw S
return"query"!==v&&"mutation"!==v?[3,2]:(A=s.applyResultTransforms,[4,o.execute(e.schema,b.document,a.rootValue,e.context,b.variables)])
case 1:return[2,A.apply(void 0,[r.sent(),y])]
case 2:return"subscription"!==v?[3,4]:[4,o.subscribe(e.schema,b.document,a.rootValue,e.context,b.variables)]
case 3:return M=r.sent(),[2,h.default(M,(function(e){var a,n=s.applyResultTransforms(e,y)
return(a={})[Object.keys(e.data)[0]]=n,a}))]
case 4:return[2]}}))}))}a.default=function(e){for(var a=[],n=1;n<arguments.length;n++)a[n-1]=arguments[n]
if(e instanceof o.GraphQLSchema)throw new Error("Passing positional arguments to delegateToSchema is a deprecated. Please pass named parameters instead.")
return v(e)}},3942:function(e,a,n){var i,r=this&&this.__extends||(i=function(e,a){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var n in a)a.hasOwnProperty(n)&&(e[n]=a[n])},i(e,a)},function(e,a){function n(){this.constructor=e}i(e,a),e.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}),t=this&&this.__assign||function(){return t=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},t.apply(this,arguments)}
Object.defineProperty(a,"__esModule",{value:!0})
var o=n(4636),s=n(6059),l=n(2526)
function u(e,n){var i
if(!n||0===n.length)return e
if(Array.isArray(e)){var r={}
return n.forEach((function(e){if(e.path){var a=e.path[1],n=r[a]||[]
n.push(t(t({},e),{path:e.path.slice(1)})),r[a]=n}})),e.map((function(e,a){return u(e,r[a])}))}return t(t({},e),((i={})[a.ERROR_SYMBOL]=n.map((function(e){return t(t({},e),e.path?{path:e.path.slice(1)}:{})})),i))}"undefined"!=typeof global&&"Symbol"in global||"undefined"!=typeof window&&"Symbol"in window?a.ERROR_SYMBOL=Symbol("subSchemaErrors"):a.ERROR_SYMBOL="@@__subSchemaErrors",a.annotateWithChildrenErrors=u,a.getErrorsFromParent=function(e,n){for(var i=[],r=0,t=e&&e[a.ERROR_SYMBOL]||[];r<t.length;r++){var o=t[r]
if(!o.path||1===o.path.length&&o.path[0]===n)return{kind:"OWN",error:o}
o.path[0]===n&&i.push(o)}return{kind:"CHILDREN",errors:i}}
var c=function(e){function a(a,n){var i=e.call(this,a)||this
return i.errors=n,i}return r(a,e),a}(Error)
a.checkResultAndHandleErrors=function(e,a,n){if(n||(n=l.getResponseKeyFromInfo(a)),e.errors&&(!e.data||null==e.data[n])){var i=1===e.errors.length&&((r=e.errors[0]).result||r.extensions||r.originalError&&r.originalError.result)?e.errors[0]:new c(e.errors.map((function(e){return e.message})).join("\n"),e.errors)
throw s.locatedError(i,a.fieldNodes,o.responsePathAsArray(a.path))}var r,t=e.data[n]
return e.errors&&(t=u(t,e.errors)),t}},2526:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.getResponseKeyFromInfo=function(e){return e.fieldNodes[0].alias?e.fieldNodes[0].alias.value:e.fieldName}},4194:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(6220)
a.makeRemoteExecutableSchema=i.default,a.defaultCreateRemoteResolver=i.createResolver
var r=n(9794)
a.introspectSchema=r.default
var t=n(3481)
a.mergeSchemas=t.default
var o=n(1152)
a.delegateToSchema=o.default
var s=n(6226)
a.defaultMergedResolver=s.default},9794:function(e,a,n){var i=this&&this.__awaiter||function(e,a,n,i){return new(n||(n=Promise))((function(r,t){function o(e){try{l(i.next(e))}catch(e){t(e)}}function s(e){try{l(i.throw(e))}catch(e){t(e)}}function l(e){var a
e.done?r(e.value):(a=e.value,a instanceof n?a:new n((function(e){e(a)}))).then(o,s)}l((i=i.apply(e,a||[])).next())}))},r=this&&this.__generator||function(e,a){var n,i,r,t,o={label:0,sent:function(){if(1&r[0])throw r[1]
return r[1]},trys:[],ops:[]}
return t={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t
function s(t){return function(s){return function(t){if(n)throw new TypeError("Generator is already executing.")
for(;o;)try{if(n=1,i&&(r=2&t[0]?i.return:t[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,t[1])).done)return r
switch(i=0,r&&(t=[2&t[0],r.value]),t[0]){case 0:case 1:r=t
break
case 4:return o.label++,{value:t[1],done:!1}
case 5:o.label++,i=t[1],t=[0]
continue
case 7:t=o.ops.pop(),o.trys.pop()
continue
default:if(!((r=(r=o.trys).length>0&&r[r.length-1])||6!==t[0]&&2!==t[0])){o=0
continue}if(3===t[0]&&(!r||t[1]>r[0]&&t[1]<r[3])){o.label=t[1]
break}if(6===t[0]&&o.label<r[1]){o.label=r[1],r=t
break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(t)
break}r[2]&&o.ops.pop(),o.trys.pop()
continue}t=a.call(e,o)}catch(e){t=[6,e],i=0}finally{n=r=0}if(5&t[0])throw t[1]
return{value:t[0]?t[1]:void 0,done:!0}}([t,s])}}}
Object.defineProperty(a,"__esModule",{value:!0})
var t=n(4636),o=n(8776),s=n(4819),l=t.parse(o.getIntrospectionQuery())
a.default=function(e,a){return i(this,void 0,void 0,(function(){var n
return r(this,(function(i){switch(i.label){case 0:return e.request&&(e=s.default(e)),[4,e({query:l,context:a})]
case 1:if((n=i.sent()).errors&&n.errors.length||!n.data.__schema)throw n.errors
return[2,t.buildClientSchema(n.data)]}}))}))}},4819:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4173),r=n(4173)
a.execute=r.execute,a.default=function(e){return function(a){return i.makePromise(i.execute(e,a))}}},6220:function(e,a,n){var i=this&&this.__awaiter||function(e,a,n,i){return new(n||(n=Promise))((function(r,t){function o(e){try{l(i.next(e))}catch(e){t(e)}}function s(e){try{l(i.throw(e))}catch(e){t(e)}}function l(e){var a
e.done?r(e.value):(a=e.value,a instanceof n?a:new n((function(e){e(a)}))).then(o,s)}l((i=i.apply(e,a||[])).next())}))},r=this&&this.__generator||function(e,a){var n,i,r,t,o={label:0,sent:function(){if(1&r[0])throw r[1]
return r[1]},trys:[],ops:[]}
return t={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t
function s(t){return function(s){return function(t){if(n)throw new TypeError("Generator is already executing.")
for(;o;)try{if(n=1,i&&(r=2&t[0]?i.return:t[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,t[1])).done)return r
switch(i=0,r&&(t=[2&t[0],r.value]),t[0]){case 0:case 1:r=t
break
case 4:return o.label++,{value:t[1],done:!1}
case 5:o.label++,i=t[1],t=[0]
continue
case 7:t=o.ops.pop(),o.trys.pop()
continue
default:if(!((r=(r=o.trys).length>0&&r[r.length-1])||6!==t[0]&&2!==t[0])){o=0
continue}if(3===t[0]&&(!r||t[1]>r[0]&&t[1]<r[3])){o.label=t[1]
break}if(6===t[0]&&o.label<r[1]){o.label=r[1],r=t
break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(t)
break}r[2]&&o.ops.pop(),o.trys.pop()
continue}t=a.call(e,o)}catch(e){t=[6,e],i=0}finally{n=r=0}if(5&t[0])throw t[1]
return{value:t[0]?t[1]:void 0,done:!0}}([t,s])}}},t=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
Object.defineProperty(a,"__esModule",{value:!0})
var o=n(4636),s=n(4819),l=n(8771),u=n(1890),c=n(5781),d=n(9248),h=n(6226),p=n(3942),m=n(2141)
function f(e){var a=this
return function(n,s,l,u){return i(a,void 0,void 0,(function(){var a,n,i
return r(this,(function(r){switch(r.label){case 0:return a=Object.keys(u.fragments).map((function(e){return u.fragments[e]})),n={kind:o.Kind.DOCUMENT,definitions:t([u.operation],a)},[4,e({query:n,variables:u.variableValues,context:{graphqlContext:l}})]
case 1:return i=r.sent(),[2,p.checkResultAndHandleErrors(i,u)]}}))}))}}function v(e,a){return function(e,n,i,r){var l=Object.keys(r.fragments).map((function(e){return r.fragments[e]})),u={query:{kind:o.Kind.DOCUMENT,definitions:t([r.operation],l)},variables:r.variableValues,context:{graphqlContext:i}},c=s.execute(a,u)
return m.observableToAsyncIterable(c)}}a.default=function(e){var a,n,i=e.schema,r=e.link,t=e.fetcher,p=e.createResolver,m=void 0===p?f:p,g=e.buildSchemaOptions,k=e.printSchemaOptions,y=void 0===k?{commentDescriptions:!0}:k
!t&&r&&(t=s.default(r)),"string"==typeof i?(n=i,i=o.buildSchema(n,g)):n=o.printSchema(i,y)
var b={},S=i.getQueryType(),A=S.getFields()
Object.keys(A).forEach((function(e){b[e]=m(t)}))
var M={},T=i.getMutationType()
if(T){var _=T.getFields()
Object.keys(_).forEach((function(e){M[e]=m(t)}))}var w={},j=i.getSubscriptionType()
if(j){var E=j.getFields()
Object.keys(E).forEach((function(e){w[e]={subscribe:v(0,r)}}))}var N=((a={})[S.name]=b,a)
l.default(M)||(N[T.name]=M),l.default(w)||(N[j.name]=w)
for(var B=i.getTypeMap(),P=function(e){if(e instanceof o.GraphQLInterfaceType||e instanceof o.GraphQLUnionType)N[e.name]={__resolveType:function(e,a,n){return d.default(e,n.schema)}}
else if(e instanceof o.GraphQLScalarType)e!==o.GraphQLID&&e!==o.GraphQLString&&e!==o.GraphQLFloat&&e!==o.GraphQLBoolean&&e!==o.GraphQLInt&&(N[e.name]=c.recreateType(e,(function(e){return null}),!1))
else if(e instanceof o.GraphQLObjectType&&"__"!==e.name.slice(0,2)&&e!==S&&e!==T&&e!==j){var a={}
Object.keys(e.getFields()).forEach((function(e){a[e]=h.default})),N[e.name]=a}},L=0,D=Object.keys(B).map((function(e){return B[e]}));L<D.length;L++)P(D[L])
return u.makeExecutableSchema({typeDefs:n,resolvers:N})},a.createResolver=f},9621:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(835)
function r(e,a){return new Promise((function(n){return n(a(e))}))}function t(e){return{value:e,done:!1}}a.default=function(e,a,n){var o,s,l,u
function c(e){return e.done?e:r(e.value,a).then(t,l)}if("function"==typeof e.return&&(s=e.return,l=function(a){var n=function(){return Promise.reject(a)}
return s.call(e).then(n,n)}),n){var d=n
u=function(e){return r(e,d).then(t,l)}}return(o={next:function(){return e.next().then(c,u)},return:function(){return s?s.call(e).then(c,u):Promise.resolve({value:void 0,done:!0})},throw:function(a){return"function"==typeof e.throw?e.throw(a).then(c,u):Promise.reject(a).catch(l)}})[i.$$asyncIterator]=function(){return this},o}},3481:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)},r=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
Object.defineProperty(a,"__esModule",{value:!0})
var t=n(4636),o=n(1890),s=n(5781),l=n(1152),u=n(5060),c=n(9517),d=n(3839),h=n(6719)
function p(e,a,n){e[a]||(e[a]=[]),e[a].push(n)}a.default=function(e){var a=e.schemas
return e.onTypeConflict,function(e){var a=e.schemas,n=e.resolvers,m=e.schemaDirectives,f=e.inheritResolversFromInterfaces,v=e.mergeDirectives,g=[],k={},y={},b=[],S=[],A=[],M=s.createResolveType((function(e){if(void 0===y[e])throw new Error("Can't find type "+e+".")
return y[e]}))
a.forEach((function(e){if(e instanceof t.GraphQLSchema){g.push(e)
var a=e.getQueryType(),n=e.getMutationType(),i=e.getSubscriptionType()
a&&p(k,"Query",{schema:e,type:a}),n&&p(k,"Mutation",{schema:e,type:n}),i&&p(k,"Subscription",{schema:e,type:i}),v&&e.getDirectives().forEach((function(e){S.push(e)}))
var r=e.getTypeMap()
Object.keys(r).forEach((function(o){var s=r[o]
t.isNamedType(s)&&"__"!==t.getNamedType(s).name.slice(0,2)&&s!==a&&s!==n&&s!==i&&p(k,s.name,{schema:e,type:s})}))}else if("string"==typeof e||e&&e.kind===t.Kind.DOCUMENT){var s="string"==typeof e?t.parse(e):e
s.definitions.forEach((function(e){var a=u.default(e)
a instanceof t.GraphQLDirective&&v?S.push(a):!a||a instanceof t.GraphQLDirective||p(k,a.name,{type:a})}))
var l=o.extractExtensionDefinitions(s)
l.definitions.length>0&&b.push(l)}else{if(!Array.isArray(e))throw new Error("Invalid schema passed")
e.forEach((function(e){p(k,e.name,{type:e})}))}}))
var T=function(e,a){return{delegate:function(n,i,t,o,s,u){console.warn("`mergeInfo.delegate` is deprecated. Use `mergeInfo.delegateToSchema and pass explicit schema instances.")
var d=function(e,a,n){for(var i=0,r=e;i<r.length;i++){var t=r[i],o=void 0
if((o="subscription"===a?t.getSubscriptionType():"mutation"===a?t.getMutationType():t.getQueryType())&&o.getFields()[n])return t}throw new Error("Could not find subschema with field `"+a+"."+n+"`")}(e,n,i),h=new c.ExpandAbstractTypes(s.schema,d),p=new c.ReplaceFieldWithFragment(d,a)
return l.default({schema:d,operation:n,fieldName:i,args:t,context:o,info:s,transforms:r(u||[],[h,p])})},delegateToSchema:function(e){return l.default(i(i({},e),{transforms:e.transforms}))},fragments:a}}(g,A)
n?"function"==typeof n?(console.warn("Passing functions as resolver parameter is deprecated. Use `info.mergeInfo` instead."),n=n(T)):Array.isArray(n)&&(n=n.reduce((function(e,a){return"function"==typeof a&&(console.warn("Passing functions as resolver parameter is deprecated. Use `info.mergeInfo` instead."),a=a(T)),d.default(e,a)}),{})):n={}
var _={}
Object.keys(k).forEach((function(e){var a=function(e,a,n){n||(n=function(e){return e[e.length-1]})
var r=s.createResolveType((function(e,a){return a}))
if("Query"===e||"Mutation"===e||"Subscription"===e){var o,l={}
switch(e){case"Query":o="query"
break
case"Mutation":o="mutation"
break
case"Subscription":o="subscription"}var u={},c="subscription"===o?"subscribe":"resolve"
return a.forEach((function(e){var a=e.type,n=e.schema,r=a.getFields()
l=i(i({},l),r),Object.keys(r).forEach((function(e){var a
u[e]=((a={})[c]=function(e,a,n){return function(i,r,t,o){return o.mergeInfo.delegateToSchema({schema:e,operation:a,fieldName:n,args:r,context:t,info:o})}}(n,o,e),a)}))})),{type:new t.GraphQLObjectType({name:e,fields:s.fieldMapToFieldConfigMap(l,r,!1)}),resolvers:u}}return n(a).type}(e,k[e])
if(null===a)y[e]=null
else{var n=void 0,r=void 0
if(t.isNamedType(a))n=a
else{if(!a.type)throw new Error("Invalid visitType result for type "+e)
n=a.type,r=a.resolvers}y[e]=s.recreateType(n,M,!1),r&&(_[e]=r)}}))
var w,j,E,N=new t.GraphQLSchema({query:y.Query,mutation:y.Mutation,subscription:y.Subscription,types:Object.keys(y).map((function(e){return y[e]})),directives:S.map((function(e){return s.recreateDirective(e,M)}))})
return b.forEach((function(e){N=t.extendSchema(N,e,{commentDescriptions:!0})})),n?Array.isArray(n)&&(n=n.reduce(d.default,{})):n={},Object.keys(n).forEach((function(e){var a=n[e]
a instanceof t.GraphQLScalarType||Object.keys(a).forEach((function(e){var n=a[e]
n.fragment&&A.push({field:e,fragment:n.fragment})}))})),w=N=o.addResolveFunctionsToSchema({schema:N,resolvers:d.default(_,n),inheritResolversFromInterfaces:f}),j=function(e){if(e.resolve){var a=e.resolve
e.resolve=function(e,n,r,t){var o=i(i({},t),{mergeInfo:T})
return a(e,n,r,o)}}if(e.subscribe){var n=e.subscribe
e.subscribe=function(e,a,r,t){var o=i(i({},t),{mergeInfo:T})
return n(e,a,r,o)}}},E=w.getTypeMap(),Object.keys(E).forEach((function(e){var a=E[e]
if(!t.getNamedType(a).name.startsWith("__")&&a instanceof t.GraphQLObjectType){var n=a.getFields()
Object.keys(n).forEach((function(e){var a=n[e]
j(a)}))}})),m&&h.SchemaDirectiveVisitor.visitSchemaDirectives(N,m),N}({schemas:a,resolvers:e.resolvers,schemaDirectives:e.schemaDirectives,inheritResolversFromInterfaces:e.inheritResolversFromInterfaces,mergeDirectives:e.mergeDirectives})}},2141:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)},r=this&&this.__awaiter||function(e,a,n,i){return new(n||(n=Promise))((function(r,t){function o(e){try{l(i.next(e))}catch(e){t(e)}}function s(e){try{l(i.throw(e))}catch(e){t(e)}}function l(e){var a
e.done?r(e.value):(a=e.value,a instanceof n?a:new n((function(e){e(a)}))).then(o,s)}l((i=i.apply(e,a||[])).next())}))},t=this&&this.__generator||function(e,a){var n,i,r,t,o={label:0,sent:function(){if(1&r[0])throw r[1]
return r[1]},trys:[],ops:[]}
return t={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t
function s(t){return function(s){return function(t){if(n)throw new TypeError("Generator is already executing.")
for(;o;)try{if(n=1,i&&(r=2&t[0]?i.return:t[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,t[1])).done)return r
switch(i=0,r&&(t=[2&t[0],r.value]),t[0]){case 0:case 1:r=t
break
case 4:return o.label++,{value:t[1],done:!1}
case 5:o.label++,i=t[1],t=[0]
continue
case 7:t=o.ops.pop(),o.trys.pop()
continue
default:if(!((r=(r=o.trys).length>0&&r[r.length-1])||6!==t[0]&&2!==t[0])){o=0
continue}if(3===t[0]&&(!r||t[1]>r[0]&&t[1]<r[3])){o.label=t[1]
break}if(6===t[0]&&o.label<r[1]){o.label=r[1],r=t
break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(t)
break}r[2]&&o.ops.pop(),o.trys.pop()
continue}t=a.call(e,o)}catch(e){t=[6,e],i=0}finally{n=r=0}if(5&t[0])throw t[1]
return{value:t[0]?t[1]:void 0,done:!0}}([t,s])}}}
Object.defineProperty(a,"__esModule",{value:!0})
var o=n(835)
a.observableToAsyncIterable=function(e){var a,n=[],s=[],l=!0,u=e.subscribe({next:function(e){!function(e){var a=e.data
0!==n.length?n.shift()({value:a,done:!1}):s.push({value:a})}(e)},error:function(e){var a
a=e,0!==n.length?n.shift()({value:{errors:[a]},done:!1}):s.push({value:{errors:[a]}})}}),c=function(){l&&(l=!1,u.unsubscribe(),n.forEach((function(e){return e({value:void 0,done:!0})})),n.length=0,s.length=0)}
return(a={next:function(){return r(this,void 0,void 0,(function(){return t(this,(function(e){return[2,l?new Promise((function(e){if(0!==s.length){var a=s.shift()
e(i(i({},a),{done:!1}))}else n.push(e)})):this.return()]}))}))},return:function(){return c(),Promise.resolve({value:void 0,done:!0})},throw:function(e){return c(),Promise.reject(e)}})[o.$$asyncIterator]=function(){return this},a}},9248:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636)
a.default=function(e,a){var n=e.__typename
if(!n)throw new Error("Did not fetch typename for object, unable to resolve interface.")
var r=a.getType(n)
if(!(r instanceof i.GraphQLObjectType))throw new Error("__typename did not match an object type: "+n)
return r}},4853:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(1152)
function r(e,a){var n={},i=e.getFields()
return Object.keys(i).forEach((function(e){n[e]={name:e,operation:a}})),n}a.generateProxyingResolvers=function(e,a,n){var r={}
return Object.keys(n).forEach((function(t){r[t]={}
var o=n[t]
Object.keys(o).forEach((function(n){var s,l=o[n],u="subscription"===l.operation?"subscribe":"resolve"
r[t][n]=((s={})[u]=function(e,a,n,r){return function(t,o,s,l){return i.default({schema:e,operation:a,fieldName:n,args:{},context:s,info:l,transforms:r})}}(e,l.operation,l.name,a),s)}))})),r},a.generateSimpleMapping=function(e){var a=e.getQueryType(),n=e.getMutationType(),i=e.getSubscriptionType(),t={}
return a&&(t[a.name]=r(a,"query")),n&&(t[n.name]=r(n,"mutation")),i&&(t[i.name]=r(i,"subscription")),t},a.generateMappingFromObjectType=r},5781:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(6463),t=n(9248),o=n(6226)
function s(e){switch(e.kind){case i.Kind.STRING:case i.Kind.BOOLEAN:return e.value
case i.Kind.INT:case i.Kind.FLOAT:return parseFloat(e.value)
case i.Kind.OBJECT:var a=Object.create(null)
return e.fields.forEach((function(e){a[e.name.value]=s(e.value)})),a
case i.Kind.LIST:return e.values.map(s)
default:return null}}function l(e,a,n){var i={}
return Object.keys(e).forEach((function(r){var t=e[r]
null!==a(t.type)&&(i[r]=u(e[r],a,n))})),i}function u(e,a,n){return{type:a(e.type),args:c(e.args,a),resolve:n?e.resolve:o.default,subscribe:n?e.subscribe:null,description:e.description,deprecationReason:e.deprecationReason,astNode:e.astNode}}function c(e,a){var n={}
return e.forEach((function(e){var i=d(e,a)
i&&(n[i[0]]=i[1])})),n}function d(e,a){var n=a(e.type)
return null===n?null:[e.name,{type:n,defaultValue:e.defaultValue,description:e.description}]}function h(e,a){var n={}
return Object.keys(e).forEach((function(i){var r=e[i]
null!==a(r.type)&&(n[i]=p(e[i],a))})),n}function p(e,a){return{type:a(e.type),defaultValue:e.defaultValue,description:e.description,astNode:e.astNode}}a.recreateType=function(e,a,n){if(e instanceof i.GraphQLObjectType){var o=e.getFields(),u=e.getInterfaces()
return new i.GraphQLObjectType({name:e.name,description:e.description,astNode:e.astNode,isTypeOf:n?e.isTypeOf:void 0,fields:function(){return l(o,a,n)},interfaces:function(){return u.map((function(e){return a(e)}))}})}if(e instanceof i.GraphQLInterfaceType){var c=e.getFields()
return new i.GraphQLInterfaceType({name:e.name,description:e.description,astNode:e.astNode,fields:function(){return l(c,a,n)},resolveType:n?e.resolveType:function(e,a,n){return t.default(e,n.schema)}})}if(e instanceof i.GraphQLUnionType)return new i.GraphQLUnionType({name:e.name,description:e.description,astNode:e.astNode,types:function(){return e.getTypes().map((function(e){return a(e)}))},resolveType:n?e.resolveType:function(e,a,n){return t.default(e,n.schema)}})
if(e instanceof i.GraphQLInputObjectType)return new i.GraphQLInputObjectType({name:e.name,description:e.description,astNode:e.astNode,fields:function(){return h(e.getFields(),a)}})
if(e instanceof i.GraphQLEnumType){var d=e.getValues(),p={}
return d.forEach((function(e){p[e.name]={value:e.value,deprecationReason:e.deprecationReason,description:e.description,astNode:e.astNode}})),new i.GraphQLEnumType({name:e.name,description:e.description,astNode:e.astNode,values:p})}if(e instanceof i.GraphQLScalarType)return n||r.default(e)?e:new i.GraphQLScalarType({name:e.name,description:e.description,astNode:e.astNode,serialize:function(e){return e},parseValue:function(e){return e},parseLiteral:function(e){return s(e)}})
throw new Error("Invalid type "+e)},a.recreateDirective=function(e,a){return new i.GraphQLDirective({name:e.name,description:e.description,locations:e.locations,args:c(e.args,a),astNode:e.astNode})},a.fieldMapToFieldConfigMap=l,a.createResolveType=function(e){var a=function(n){var r
if(n instanceof i.GraphQLList)return null===(r=a(n.ofType))?null:new i.GraphQLList(r)
if(n instanceof i.GraphQLNonNull)return null===(r=a(n.ofType))?null:new i.GraphQLNonNull(r)
if(!i.isNamedType(n))return n
var t=i.getNamedType(n).name
switch(t){case i.GraphQLInt.name:return i.GraphQLInt
case i.GraphQLFloat.name:return i.GraphQLFloat
case i.GraphQLString.name:return i.GraphQLString
case i.GraphQLBoolean.name:return i.GraphQLBoolean
case i.GraphQLID.name:return i.GraphQLID
default:return e(t,n)}}
return a},a.fieldToFieldConfig=u,a.argsToFieldConfigArgumentMap=c,a.argumentToArgumentConfig=d,a.inputFieldMapToFieldConfigMap=h,a.inputFieldToFieldConfig=p},5060:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(9248),t={commentDescriptions:!0}
function o(e){var a={}
return e.forEach((function(e){var n=e.directives.find((function(e){return e&&e.name&&"deprecated"===e.name.value})),r=n&&n.arguments&&n.arguments.find((function(e){return e&&e.name&&"reason"===e.name.value})),o=r&&r.value&&r.value.value
a[e.name.value]={type:l(e.type,"object"),args:s(e.arguments),description:i.getDescription(e,t),deprecationReason:o}})),a}function s(e){var a={}
return e.forEach((function(e){var n=l(e.type,"input")
a[e.name.value]={type:n,defaultValue:i.valueFromAST(e.defaultValue,n),description:i.getDescription(e,t)}})),a}function l(e,a){switch(e.kind){case i.Kind.LIST_TYPE:return new i.GraphQLList(l(e.type,a))
case i.Kind.NON_NULL_TYPE:return new i.GraphQLNonNull(l(e.type,a))
default:return u(e.name.value,a)}}function u(e,a){return new("object"===a?i.GraphQLObjectType:"interface"===a?i.GraphQLInterfaceType:i.GraphQLInputObjectType)({name:e,fields:{__fake:{type:i.GraphQLString}}})}a.default=function(e){switch(e.kind){case i.Kind.OBJECT_TYPE_DEFINITION:return function(e){return new i.GraphQLObjectType({name:e.name.value,fields:function(){return o(e.fields)},interfaces:function(){return e.interfaces.map((function(e){return u(e.name.value,"interface")}))},description:i.getDescription(e,t)})}(e)
case i.Kind.INTERFACE_TYPE_DEFINITION:return function(e){return new i.GraphQLInterfaceType({name:e.name.value,fields:function(){return o(e.fields)},description:i.getDescription(e,t),resolveType:function(e,a,n){return r.default(e,n.schema)}})}(e)
case i.Kind.ENUM_TYPE_DEFINITION:return function(e){var a={}
return e.values.forEach((function(e){a[e.name.value]={description:i.getDescription(e,t)}})),new i.GraphQLEnumType({name:e.name.value,values:a,description:i.getDescription(e,t)})}(e)
case i.Kind.UNION_TYPE_DEFINITION:return function(e){return new i.GraphQLUnionType({name:e.name.value,types:function(){return e.types.map((function(e){return l(e,"object")}))},description:i.getDescription(e,t),resolveType:function(e,a,n){return r.default(e,n.schema)}})}(e)
case i.Kind.SCALAR_TYPE_DEFINITION:return function(e){return new i.GraphQLScalarType({name:e.name.value,description:i.getDescription(e,t),serialize:function(){return null},parseValue:function(){return!1},parseLiteral:function(){return!1}})}(e)
case i.Kind.INPUT_OBJECT_TYPE_DEFINITION:return function(e){return new i.GraphQLInputObjectType({name:e.name.value,fields:function(){return s(e.fields)},description:i.getDescription(e,t)})}(e)
case i.Kind.DIRECTIVE_DEFINITION:return function(e){var a=[]
return e.locations.forEach((function(e){e.value in i.DirectiveLocation&&a.push(e.value)})),new i.GraphQLDirective({name:e.name.value,description:e.description?e.description.value:null,args:s(e.arguments),locations:a})}(e)
default:return null}}},4807:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)},r=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
Object.defineProperty(a,"__esModule",{value:!0})
var t=n(4636),o=function(){function e(e,a){this.schema=e,this.args=a}return e.prototype.transformRequest=function(e){var a=function(e,a,n){var o=a.definitions.filter((function(e){return e.kind===t.Kind.OPERATION_DEFINITION})),l=a.definitions.filter((function(e){return e.kind===t.Kind.FRAGMENT_DEFINITION})),u={},c=o.map((function(a){var r,o=a.variableDefinitions.map((function(e){return e.variable.name.value})),l=0,c={}
r="subscription"===a.operation?e.getSubscriptionType():"mutation"===a.operation?e.getMutationType():e.getQueryType()
var d=[]
return a.selectionSet.selections.forEach((function(e){if(e.kind===t.Kind.FIELD){var a={}
e.arguments.forEach((function(e){a[e.name.value]=e}))
var h=e.name.value
r.getFields()[h].args.forEach((function(e){if(e.name in n){var i=function(e){var a
do{a="_v"+l+"_"+e,l++}while(-1!==o.indexOf(a))
return a}(e.name)
u[e.name]=i,a[e.name]={kind:t.Kind.ARGUMENT,name:{kind:t.Kind.NAME,value:e.name},value:{kind:t.Kind.VARIABLE,name:{kind:t.Kind.NAME,value:i}}},o.push(i),c[i]={kind:t.Kind.VARIABLE_DEFINITION,variable:{kind:t.Kind.VARIABLE,name:{kind:t.Kind.NAME,value:i}},type:s(e.type)}}})),d.push(i(i({},e),{arguments:Object.keys(a).map((function(e){return a[e]}))}))}else d.push(e)})),i(i({},a),{variableDefinitions:a.variableDefinitions.concat(Object.keys(c).map((function(e){return c[e]}))),selectionSet:{kind:t.Kind.SELECTION_SET,selections:d}})})),d={}
return Object.keys(u).forEach((function(e){d[u[e]]=n[e]})),{document:i(i({},a),{definitions:r(c,l)}),newVariables:d}}(this.schema,e.document,this.args),n=a.document,o=a.newVariables
return{document:n,variables:i(i({},e.variables),o)}},e}()
function s(e){if(e instanceof t.GraphQLNonNull){var a=s(e.ofType)
if(a.kind===t.Kind.LIST_TYPE||a.kind===t.Kind.NAMED_TYPE)return{kind:t.Kind.NON_NULL_TYPE,type:a}
throw new Error("Incorrent inner non-null type")}return e instanceof t.GraphQLList?{kind:t.Kind.LIST_TYPE,type:s(e.ofType)}:{kind:t.Kind.NAMED_TYPE,name:{kind:t.Kind.NAME,value:e.toString()}}}a.default=o},1029:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)}
Object.defineProperty(a,"__esModule",{value:!0})
var r=n(4636),t=function(){function e(e){this.targetSchema=e}return e.prototype.transformRequest=function(e){var a=function(e,a){var n,t=new r.TypeInfo(e)
return r.visit(a,r.visitWithTypeInfo(t,((n={})[r.Kind.SELECTION_SET]=function(e){var a=t.getParentType(),n=e.selections
if(a&&(a instanceof r.GraphQLInterfaceType||a instanceof r.GraphQLUnionType)&&!n.find((function(e){return e.kind===r.Kind.FIELD&&"__typename"===e.name.value}))&&(n=n.concat({kind:r.Kind.FIELD,name:{kind:r.Kind.NAME,value:"__typename"}})),n!==e.selections)return i(i({},e),{selections:n})},n)))}(this.targetSchema,e.document)
return i(i({},e),{document:a})},e}()
a.default=t},7894:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(3942),r=function(){function e(e,a){this.info=e,this.fieldName=a}return e.prototype.transformResult=function(e){return i.checkResultAndHandleErrors(e,this.info,this.fieldName)},e}()
a.default=r},4499:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0})
var n=function(){function e(e){this.enumNode=e}return e.prototype.transformResult=function(e){var a=this.enumNode.getValue(e)
return a?a.value:e},e}()
a.default=n},2234:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(1662),t=function(){function e(e){this.enumValueMap=e}return e.prototype.transformSchema=function(e){var a,n=this.enumValueMap
return n&&0!==Object.keys(n).length?r.visitSchema(e,((a={})[r.VisitSchemaKind.ENUM_TYPE]=function(e){var a=n[e.name]
if(a){var r=e.getValues(),t={}
return r.forEach((function(e){var n=Object.keys(a).includes(e.name)?a[e.name]:e.name
t[e.name]={value:n,deprecationReason:e.deprecationReason,description:e.description,astNode:e.astNode}})),new i.GraphQLEnumType({name:e.name,description:e.description,astNode:e.astNode,values:t})}return e},a)):e},e}()
a.default=t},6172:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)},r=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
Object.defineProperty(a,"__esModule",{value:!0})
var t=n(4636),o=n(3916),s=function(){function e(e,a){var n,i
this.targetSchema=a,this.mapping=function(e,a){var n=e.getTypeMap(),i={}
return Object.keys(n).forEach((function(r){var o=n[r]
if(t.isAbstractType(o)){var s=a.getType(r)
if(!t.isAbstractType(s)){var l=e.getPossibleTypes(o)||[]
i[r]=l.filter((function(e){return a.getType(e.name)})).map((function(e){return e.name}))}}})),i}(e,a),this.reverseMapping=(n=this.mapping,i={},Object.keys(n).forEach((function(e){n[e].forEach((function(a){i[a]||(i[a]=[]),i[a].push(e)}))})),i)}return e.prototype.transformRequest=function(e){var a=function(e,a,n,s){var l,u=s.definitions.filter((function(e){return e.kind===t.Kind.OPERATION_DEFINITION})),c=s.definitions.filter((function(e){return e.kind===t.Kind.FRAGMENT_DEFINITION})),d=c.map((function(e){return e.name.value})),h=0,p=[],m={}
c.forEach((function(e){p.push(e)
var n=a[e.typeCondition.name.value]
n&&(m[e.name.value]=[],n.forEach((function(a){var n=function(e){var a
do{a="_"+e+"_Fragment"+h,h++}while(-1!==d.indexOf(a))
return a}(a)
d.push(n)
var i={kind:t.Kind.FRAGMENT_DEFINITION,name:{kind:t.Kind.NAME,value:n},typeCondition:{kind:t.Kind.NAMED_TYPE,name:{kind:t.Kind.NAME,value:a}},selectionSet:e.selectionSet}
p.push(i),m[e.name.value].push({fragmentName:n,typeName:a})})))}))
var f=i(i({},s),{definitions:r(u,p)}),v=new t.TypeInfo(e)
return t.visit(f,t.visitWithTypeInfo(v,((l={})[t.Kind.SELECTION_SET]=function(s){var l=r(s.selections),u=t.getNamedType(v.getParentType())
if(s.selections.forEach((function(n){if(n.kind===t.Kind.INLINE_FRAGMENT){var i=a[n.typeCondition.name.value]
i&&i.forEach((function(a){o.default(e,u,e.getType(a))&&l.push({kind:t.Kind.INLINE_FRAGMENT,typeCondition:{kind:t.Kind.NAMED_TYPE,name:{kind:t.Kind.NAME,value:a}},selectionSet:n.selectionSet})}))}else if(n.kind===t.Kind.FRAGMENT_SPREAD){var r=n.name.value,s=m[r]
s&&s.forEach((function(a){var n=a.typeName
o.default(e,u,e.getType(n))&&l.push({kind:t.Kind.FRAGMENT_SPREAD,name:{kind:t.Kind.NAME,value:a.fragmentName}})}))}})),u&&n[u.name]&&l.push({kind:t.Kind.FIELD,name:{kind:t.Kind.NAME,value:"__typename"}}),l.length!==s.selections.length)return i(i({},s),{selections:l})},l)))}(this.targetSchema,this.mapping,this.reverseMapping,e.document)
return i(i({},e),{document:a})},e}()
a.default=s},5403:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)}
Object.defineProperty(a,"__esModule",{value:!0})
var r=n(4636),t=function(){function e(e){var a=e.from,n=e.to
this.from=a,this.to=n}return e.prototype.transformRequest=function(e){var a,n,t,o=JSON.stringify(this.from),s=JSON.stringify(this.to),l=[]
r.visit(e.document,((a={})[r.Kind.FIELD]={enter:function(e){if(l.push(e.name.value),o===JSON.stringify(l))return t=e.selectionSet,r.BREAK},leave:function(e){l.pop()}},a)),l=[]
var u=r.visit(e.document,((n={})[r.Kind.FIELD]={enter:function(e){if(l.push(e.name.value),s===JSON.stringify(l)&&t)return i(i({},e),{selectionSet:t})},leave:function(e){l.pop()}},n))
return i(i({},e),{document:u})},e}()
a.default=t},7106:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(2008),r=function(){function e(e){this.transformer=new i.default((function(a,n,i){return e(a,n,i)?void 0:null}))}return e.prototype.transformSchema=function(e){return this.transformer.transformSchema(e)},e}()
a.default=r},8121:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)},r=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
Object.defineProperty(a,"__esModule",{value:!0})
var t=n(4636),o=n(3916),s=function(){function e(e){this.targetSchema=e}return e.prototype.transformRequest=function(e){var a=function(e,a){var n=a.definitions.filter((function(e){return e.kind===t.Kind.OPERATION_DEFINITION})),i=a.definitions.filter((function(e){return e.kind===t.Kind.FRAGMENT_DEFINITION})),o=[],s=[],u=[],d=i.filter((function(a){var n=a.typeCondition.name.value
return Boolean(e.getType(n))})),h={}
d.forEach((function(a){var n=a.typeCondition.name.value,i=e.getType(n)
h[a.name.value]=i}))
var p=Object.create(null)
return n.forEach((function(a){var n
n="subscription"===a.operation?e.getSubscriptionType():"mutation"===a.operation?e.getMutationType():e.getQueryType()
var i=l(e,n,h,a.selectionSet),r=i.selectionSet,m=i.usedFragments,f=i.usedVariables
o=c(o,m)
var v=function(e,a,n,i,r){for(var o=[],s=[],u=function(){var u=r.pop(),d=n.find((function(e){return e.name.value===u}))
if(d){var h=u,p=d.typeCondition.name.value,m=e.getType(p),f=l(e,m,i,d.selectionSet),v=f.selectionSet,g=f.usedFragments,k=f.usedVariables
r=c(r,g),o=c(o,k),a[h]||(a[h]=!0,s.push({kind:t.Kind.FRAGMENT_DEFINITION,name:{kind:t.Kind.NAME,value:h},typeCondition:d.typeCondition,selectionSet:v}))}};0!==r.length;)u()
return{usedVariables:o,newFragments:s,fragmentSet:a}}(e,p,d,h,o),g=v.usedVariables,k=v.newFragments,y=v.fragmentSet,b=c(f,g)
u=k,p=y
var S=a.variableDefinitions.filter((function(e){return-1!==b.indexOf(e.variable.name.value)}))
s.push({kind:t.Kind.OPERATION_DEFINITION,operation:a.operation,name:a.name,directives:a.directives,variableDefinitions:S,selectionSet:r})})),{kind:t.Kind.DOCUMENT,definitions:r(s,u)}}(this.targetSchema,e.document)
return i(i({},e),{document:a})},e}()
function l(e,a,n,r){var s,l=[],c=[],d=[a]
return{selectionSet:t.visit(r,((s={})[t.Kind.FIELD]={enter:function(e){var a=u(d[d.length-1])
if(a instanceof t.GraphQLObjectType||a instanceof t.GraphQLInterfaceType){var n=a.getFields(),r="__typename"===e.name.value?t.TypeNameMetaFieldDef:n[e.name.value]
if(!r)return null
d.push(r.type)
var o=(r.args||[]).map((function(e){return e.name}))
if(e.arguments){var s=e.arguments.filter((function(e){return-1!==o.indexOf(e.name.value)}))
if(s.length!==e.arguments.length)return i(i({},e),{arguments:s})}}else a instanceof t.GraphQLUnionType&&"__typename"===e.name.value&&d.push(t.TypeNameMetaFieldDef.type)},leave:function(e){var a,n=u(d.pop())
if(n instanceof t.GraphQLObjectType||n instanceof t.GraphQLInterfaceType){var i=e.selectionSet&&e.selectionSet.selections||null
if(!i||0===i.length)return t.visit(e,((a={})[t.Kind.VARIABLE]=function(e){var a=c.indexOf(e.name.value);-1!==a&&c.splice(a,1)},a)),null}}},s[t.Kind.FRAGMENT_SPREAD]=function(a){if(a.name.value in n){var i=u(d[d.length-1]),r=n[a.name.value]
return o.default(e,i,r)?void l.push(a.name.value):null}return null},s[t.Kind.INLINE_FRAGMENT]={enter:function(a){if(a.typeCondition){var n=e.getType(a.typeCondition.name.value),i=u(d[d.length-1])
if(!o.default(e,i,n))return null
d.push(n)}},leave:function(e){d.pop()}},s[t.Kind.VARIABLE]=function(e){c.push(e.name.value)},s)),usedFragments:l,usedVariables:c}}function u(e){for(var a=e;a instanceof t.GraphQLNonNull||a instanceof t.GraphQLList;)a=a.ofType
return a}function c(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a]
var n={},i=[]
return e.forEach((function(e){e.forEach((function(e){n[e]||(n[e]=!0,i.push(e))}))})),i}a.default=s},7259:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(1662),r=function(){function e(e){this.filter=e}return e.prototype.transformSchema=function(e){var a,n=this
return i.visitSchema(e,((a={})[i.VisitSchemaKind.TYPE]=function(e){return n.filter(e)?void 0:null},a))},e}()
a.default=r},3944:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(5781),r=n(2008),t=function(){function e(e){var a=i.createResolveType((function(e,a){return a}))
this.transformer=new r.default((function(n,r,t){return{name:e(n,r,t),field:i.fieldToFieldConfig(t,a,!0)}}))}return e.prototype.transformSchema=function(e){return this.transformer.transformSchema(e)},e}()
a.default=t},9643:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)}
Object.defineProperty(a,"__esModule",{value:!0})
var r=n(4636),t=n(6463),o=n(1662),s=function(){function e(e,a){this.renamer=e,this.reverseMap={}
var n=a||{},i=n.renameBuiltins,r=void 0!==i&&i,t=n.renameScalars,o=void 0===t||t
this.renameBuiltins=r,this.renameScalars=o}return e.prototype.transformSchema=function(e){var a,n=this
return o.visitSchema(e,((a={})[o.VisitSchemaKind.TYPE]=function(e){if((!t.default(e)||n.renameBuiltins)&&(!(e instanceof r.GraphQLScalarType)||n.renameScalars)){var a=n.renamer(e.name)
if(a&&a!==e.name){n.reverseMap[a]=e.name
var i=Object.assign(Object.create(e),e)
return i.name=a,i}}},a[o.VisitSchemaKind.ROOT_OBJECT]=function(e){},a))},e.prototype.transformRequest=function(e){var a,n=this
return{document:r.visit(e.document,((a={})[r.Kind.NAMED_TYPE]=function(e){var a=e.name.value
if(a in n.reverseMap)return i(i({},e),{name:{kind:r.Kind.NAME,value:n.reverseMap[a]}})},a)),variables:e.variables}},e.prototype.transformResult=function(e){if(e.data){var a=this.renameTypes(e.data,"data")
if(a!==e.data)return i(i({},e),{data:a})}return e},e.prototype.renameTypes=function(e,a){var n=this
if("__typename"===a)return this.renamer(e)
if(e&&"object"==typeof e){var i=Array.isArray(e)?[]:Object.create(Object.getPrototypeOf(e)),r=!1
if(Object.keys(e).forEach((function(a){var t=e[a],o=n.renameTypes(t,a)
i[a]=o,o!==t&&(r=!0)})),r)return i}return e},e}()
a.default=s},7495:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)}
Object.defineProperty(a,"__esModule",{value:!0})
var r=n(4636),t=function(){function e(e,a){this.targetSchema=e,this.mapping={}
for(var n=0,i=a;n<i.length;n++){var r=i[n],t=r.field,s=o(r.fragment),l=s.typeCondition.name.value
this.mapping[l]=this.mapping[l]||{},this.mapping[l][t]?this.mapping[l][t].push(s):this.mapping[l][t]=[s]}}return e.prototype.transformRequest=function(e){var a=function(e,a,n){var t,o=new r.TypeInfo(e)
return r.visit(a,r.visitWithTypeInfo(o,((t={})[r.Kind.SELECTION_SET]=function(e){var a=o.getParentType()
if(a){var t=a.name,l=e.selections
if(n[t]&&e.selections.forEach((function(e){if(e.kind===r.Kind.FIELD){var a=e.name.value,i=n[t][a]
if(i&&i.length>0){var o=s(t,i)
l=l.concat(o)}}})),l!==e.selections)return i(i({},e),{selections:l})}},t)))}(this.targetSchema,e.document,this.mapping)
return i(i({},e),{document:a})},e}()
function o(e){if(e.trim().startsWith("fragment"))for(var a=0,n=r.parse(e).definitions;a<n.length;a++){var i=n[a]
if(i.kind===r.Kind.FRAGMENT_DEFINITION)return{kind:r.Kind.INLINE_FRAGMENT,typeCondition:i.typeCondition,selectionSet:i.selectionSet}}for(var t=0,o=r.parse("{"+e+"}").definitions[0].selectionSet.selections;t<o.length;t++){var s=o[t]
if(s.kind===r.Kind.INLINE_FRAGMENT)return s}throw new Error("Could not parse fragment")}function s(e,a){var n,t=a.reduce((function(e,a){return e.concat(a.selectionSet.selections)}),[]),o=(n=t.reduce((function(e,a){var n,r,t
switch(a.kind){case"Field":return a.alias?e.hasOwnProperty(a.alias.value)?e:i(i({},e),((n={})[a.alias.value]=a,n)):e.hasOwnProperty(a.name.value)?e:i(i({},e),((r={})[a.name.value]=a,r))
case"FragmentSpread":return e.hasOwnProperty(a.name.value)?e:i(i({},e),((t={})[a.name.value]=a,t))
case"InlineFragment":if(e.__fragment){var o=e.__fragment
return i(i({},e),{__fragment:s(o.typeCondition.name.value,[o,a])})}return i(i({},e),{__fragment:a})
default:return e}}),{}),Object.keys(n).reduce((function(e,a){return e.concat(n[a])}),[]))
return{kind:r.Kind.INLINE_FRAGMENT,typeCondition:{kind:r.Kind.NAMED_TYPE,name:{kind:r.Kind.NAME,value:e}},selectionSet:{kind:r.Kind.SELECTION_SET,selections:o}}}a.default=t},2008:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(4636),r=n(8771),t=n(1662),o=n(5781),s=function(){function e(e){this.transform=e}return e.prototype.transformSchema=function(e){var a,n=this
return t.visitSchema(e,((a={})[t.VisitSchemaKind.QUERY]=function(e){return l(e,(function(e,a){return n.transform("Query",e,a)}))},a[t.VisitSchemaKind.MUTATION]=function(e){return l(e,(function(e,a){return n.transform("Mutation",e,a)}))},a[t.VisitSchemaKind.SUBSCRIPTION]=function(e){return l(e,(function(e,a){return n.transform("Subscription",e,a)}))},a))},e}()
function l(e,a){var n=o.createResolveType((function(e,a){return a})),t=e.getFields(),s={}
return Object.keys(t).forEach((function(e){var i=t[e],r=a(e,i)
void 0===r?s[e]=o.fieldToFieldConfig(i,n,!0):null!==r&&(r.name?s[r.name]=r.field:s[e]=r)})),r.default(s)?null:new i.GraphQLObjectType({name:e.name,description:e.description,astNode:e.astNode,fields:s})}a.default=s},9260:function(e,a,n){var i=this&&this.__assign||function(){return i=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},i.apply(this,arguments)},r=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
Object.defineProperty(a,"__esModule",{value:!0})
var t=n(4636),o=function(){function e(e,a,n){this.path=e,this.wrapper=a,this.extractor=n}return e.prototype.transformRequest=function(e){var a,n=this,r=e.document,o=[],s=JSON.stringify(this.path),l=t.visit(r,((a={})[t.Kind.FIELD]={enter:function(e){if(o.push(e.name.value),s===JSON.stringify(o)){var a=n.wrapper(e.selectionSet),r=a.kind===t.Kind.SELECTION_SET?a:{kind:t.Kind.SELECTION_SET,selections:[a]}
return i(i({},e),{selectionSet:r})}},leave:function(e){o.pop()}},a))
return i(i({},e),{document:l})},e.prototype.transformResult=function(e){var a=e.data
if(a){for(var n=a,i=r(this.path);i.length>1;){var t=i.shift()
n[t]&&(n=n[t])}n[i[0]]=this.extractor(n[i[0]])}return{data:a,errors:e.errors}},e}()
a.default=o},9517:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(292)
a.transformSchema=i.default
var r=n(4807)
a.AddArgumentsAsVariables=r.default
var t=n(7894)
a.CheckResultAndHandleErrors=t.default
var o=n(7495)
a.ReplaceFieldWithFragment=o.default
var s=n(1029)
a.AddTypenameToAbstract=s.default
var l=n(8121)
a.FilterToSchema=l.default
var u=n(9643)
a.RenameTypes=u.default
var c=n(7259)
a.FilterTypes=c.default
var d=n(2008)
a.TransformRootFields=d.default
var h=n(3944)
a.RenameRootFields=h.default
var p=n(7106)
a.FilterRootFields=p.default
var m=n(6172)
a.ExpandAbstractTypes=m.default
var f=n(5403)
a.ExtractField=f.default
var v=n(9260)
a.WrapQuery=v.default},292:(e,a,n)=>{Object.defineProperty(a,"__esModule",{value:!0})
var i=n(1890),r=n(1662),t=n(2215),o=n(4853)
a.default=function(e,a){var n=r.visitSchema(e,{},!0),s=o.generateSimpleMapping(e),l=o.generateProxyingResolvers(e,a,s)
return n=i.addResolveFunctionsToSchema({schema:n,resolvers:l,resolverValidationOptions:{allowResolversNotInSchema:!0}}),(n=t.applySchemaTransforms(n,a)).transforms=a,n}},2215:function(e,a){var n=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
function i(e,a){return a.reduce((function(e,a){return a.transformSchema?a.transformSchema(e):e}),e)}function r(e,a){return a.reduce((function(e,a){return a.transformRequest?a.transformRequest(e):e}),e)}function t(e,a){return a.reduce((function(e,a){return a.transformResult?a.transformResult(e):e}),e)}Object.defineProperty(a,"__esModule",{value:!0}),a.applySchemaTransforms=i,a.applyRequestTransforms=r,a.applyResultTransforms=t,a.composeTransforms=function(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a]
var o=n(e).reverse()
return{transformSchema:function(a){return i(a,e)},transformRequest:function(e){return r(e,o)},transformResult:function(e){return t(e,o)}}}},1662:function(e,a,n){var i=this&&this.__spreadArrays||function(){for(var e=0,a=0,n=arguments.length;a<n;a++)e+=arguments[a].length
var i=Array(e),r=0
for(a=0;a<n;a++)for(var t=arguments[a],o=0,s=t.length;o<s;o++,r++)i[r]=t[o]
return i}
Object.defineProperty(a,"__esModule",{value:!0})
var r,t=n(4636),o=n(5781)
!function(e){e.TYPE="VisitSchemaKind.TYPE",e.SCALAR_TYPE="VisitSchemaKind.SCALAR_TYPE",e.ENUM_TYPE="VisitSchemaKind.ENUM_TYPE",e.COMPOSITE_TYPE="VisitSchemaKind.COMPOSITE_TYPE",e.OBJECT_TYPE="VisitSchemaKind.OBJECT_TYPE",e.INPUT_OBJECT_TYPE="VisitSchemaKind.INPUT_OBJECT_TYPE",e.ABSTRACT_TYPE="VisitSchemaKind.ABSTRACT_TYPE",e.UNION_TYPE="VisitSchemaKind.UNION_TYPE",e.INTERFACE_TYPE="VisitSchemaKind.INTERFACE_TYPE",e.ROOT_OBJECT="VisitSchemaKind.ROOT_OBJECT",e.QUERY="VisitSchemaKind.QUERY",e.MUTATION="VisitSchemaKind.MUTATION",e.SUBSCRIPTION="VisitSchemaKind.SUBSCRIPTION"}(r=a.VisitSchemaKind||(a.VisitSchemaKind={})),a.visitSchema=function(e,a,n){var s={},l=o.createResolveType((function(e){if(void 0===s[e])throw new Error("Can't find type "+e+".")
return s[e]})),u=e.getQueryType(),c=e.getMutationType(),d=e.getSubscriptionType(),h=e.getTypeMap()
return Object.keys(h).map((function(u){var c=h[u]
if(t.isNamedType(c)&&"__"!==t.getNamedType(c).name.slice(0,2)){var d=function(e,a){var n=[r.TYPE]
if(e instanceof t.GraphQLObjectType){n.unshift(r.COMPOSITE_TYPE,r.OBJECT_TYPE)
var i=a.getQueryType(),o=a.getMutationType(),s=a.getSubscriptionType()
e===i?n.push(r.ROOT_OBJECT,r.QUERY):e===o?n.push(r.ROOT_OBJECT,r.MUTATION):e===s&&n.push(r.ROOT_OBJECT,r.SUBSCRIPTION)}else e instanceof t.GraphQLInputObjectType?n.push(r.INPUT_OBJECT_TYPE):e instanceof t.GraphQLInterfaceType?n.push(r.COMPOSITE_TYPE,r.ABSTRACT_TYPE,r.INTERFACE_TYPE):e instanceof t.GraphQLUnionType?n.push(r.COMPOSITE_TYPE,r.ABSTRACT_TYPE,r.UNION_TYPE):e instanceof t.GraphQLEnumType?n.push(r.ENUM_TYPE):e instanceof t.GraphQLScalarType&&n.push(r.SCALAR_TYPE)
return n}(c,e),p=function(e,a){for(var n=null,r=i(a);!n&&r.length>0;)n=e[r.pop()]
return n}(a,d)
if(p){var m=p(c,e)
s[u]=void 0===m?o.recreateType(c,l,!n):null===m?null:o.recreateType(m,l,!n)}else s[u]=o.recreateType(c,l,!n)}})),new t.GraphQLSchema({query:u?s[u.name]:null,mutation:c?s[c.name]:null,subscription:d?s[d.name]:null,types:Object.keys(s).map((function(e){return s[e]}))})}},4386:(e,a,n)=>{var i=n(5615),r=n(6490),t=r
t.v1=i,t.v4=r,e.exports=t},7445:e=>{for(var a=[],n=0;n<256;++n)a[n]=(n+256).toString(16).substr(1)
e.exports=function(e,n){var i=n||0,r=a
return[r[e[i++]],r[e[i++]],r[e[i++]],r[e[i++]],"-",r[e[i++]],r[e[i++]],"-",r[e[i++]],r[e[i++]],"-",r[e[i++]],r[e[i++]],"-",r[e[i++]],r[e[i++]],r[e[i++]],r[e[i++]],r[e[i++]],r[e[i++]]].join("")}},7314:e=>{var a="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)
if(a){var n=new Uint8Array(16)
e.exports=function(){return a(n),n}}else{var i=new Array(16)
e.exports=function(){for(var e,a=0;a<16;a++)0==(3&a)&&(e=4294967296*Math.random()),i[a]=e>>>((3&a)<<3)&255
return i}}},5615:(e,a,n)=>{var i,r,t=n(7314),o=n(7445),s=0,l=0
e.exports=function(e,a,n){var u=a&&n||0,c=a||[],d=(e=e||{}).node||i,h=void 0!==e.clockseq?e.clockseq:r
if(null==d||null==h){var p=t()
null==d&&(d=i=[1|p[0],p[1],p[2],p[3],p[4],p[5]]),null==h&&(h=r=16383&(p[6]<<8|p[7]))}var m=void 0!==e.msecs?e.msecs:(new Date).getTime(),f=void 0!==e.nsecs?e.nsecs:l+1,v=m-s+(f-l)/1e4
if(v<0&&void 0===e.clockseq&&(h=h+1&16383),(v<0||m>s)&&void 0===e.nsecs&&(f=0),f>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec")
s=m,l=f,r=h
var g=(1e4*(268435455&(m+=122192928e5))+f)%4294967296
c[u++]=g>>>24&255,c[u++]=g>>>16&255,c[u++]=g>>>8&255,c[u++]=255&g
var k=m/4294967296*1e4&268435455
c[u++]=k>>>8&255,c[u++]=255&k,c[u++]=k>>>24&15|16,c[u++]=k>>>16&255,c[u++]=h>>>8|128,c[u++]=255&h
for(var y=0;y<6;++y)c[u+y]=d[y]
return a||o(c)}},6490:(e,a,n)=>{var i=n(7314),r=n(7445)
e.exports=function(e,a,n){var t=a&&n||0
"string"==typeof e&&(a="binary"===e?new Array(16):null,e=null)
var o=(e=e||{}).random||(e.rng||i)()
if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,a)for(var s=0;s<16;++s)a[t+s]=o[s]
return a||r(o)}},9736:(e,a,n)=>{"use strict"
function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}Object.defineProperty(a,"__esModule",{value:!0}),a.printError=b,a.GraphQLError=void 0
var r,t=(r=n(2087))&&r.__esModule?r:{default:r},o=n(4053),s=n(2450),l=n(308)
function u(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function c(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function d(e,a){return!a||"object"!==i(a)&&"function"!=typeof a?h(e):a}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function p(e){var a="function"==typeof Map?new Map:void 0
return p=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e
var n
if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function")
if(void 0!==a){if(a.has(e))return a.get(e)
a.set(e,i)}function i(){return m(e,arguments,g(this).constructor)}return i.prototype=Object.create(e.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),v(i,e)},p(e)}function m(e,a,n){return m=f()?Reflect.construct:function(e,a,n){var i=[null]
i.push.apply(i,a)
var r=new(Function.bind.apply(e,i))
return n&&v(r,n.prototype),r},m.apply(null,arguments)}function f(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function v(e,a){return v=Object.setPrototypeOf||function(e,a){return e.__proto__=a,e},v(e,a)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var k=function(e){!function(e,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(a&&a.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),a&&v(e,a)}(p,e)
var a,n,i,r,l=(a=p,n=f(),function(){var e,i=g(a)
if(n){var r=g(this).constructor
e=Reflect.construct(i,arguments,r)}else e=i.apply(this,arguments)
return d(this,e)})
function p(e,a,n,i,r,o,m){var f,v,g,k
!function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,p),(k=l.call(this,e)).name="GraphQLError",k.originalError=null!=o?o:void 0,k.nodes=y(Array.isArray(a)?a:a?[a]:void 0)
for(var b=[],S=0,A=null!==(M=k.nodes)&&void 0!==M?M:[];S<A.length;S++){var M,T=A[S].loc
null!=T&&b.push(T)}b=y(b),k.source=null!=n?n:null===(f=b)||void 0===f?void 0:f[0].source,k.positions=null!=i?i:null===(v=b)||void 0===v?void 0:v.map((function(e){return e.start})),k.locations=i&&n?i.map((function(e){return(0,s.getLocation)(n,e)})):null===(g=b)||void 0===g?void 0:g.map((function(e){return(0,s.getLocation)(e.source,e.start)})),k.path=null!=r?r:void 0
var _=null==o?void 0:o.extensions
return null==m&&(0,t.default)(_)?k.extensions=function(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?u(Object(n),!0).forEach((function(a){c(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}({},_):k.extensions=null!=m?m:{},Object.defineProperties(h(k),{message:{enumerable:!0},locations:{enumerable:null!=k.locations},path:{enumerable:null!=k.path},extensions:{enumerable:null!=k.extensions&&Object.keys(k.extensions).length>0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),null!=o&&o.stack?(Object.defineProperty(h(k),"stack",{value:o.stack,writable:!0,configurable:!0}),d(k)):(Error.captureStackTrace?Error.captureStackTrace(h(k),p):Object.defineProperty(h(k),"stack",{value:Error().stack,writable:!0,configurable:!0}),k)}return i=p,(r=[{key:"toString",value:function(){return b(this)}},{key:o.SYMBOL_TO_STRING_TAG,get:function(){return"Object"}}])&&function(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}(i.prototype,r),p}(p(Error))
function y(e){return void 0===e||0===e.length?void 0:e}function b(e){var a=e.message
if(e.nodes)for(var n=0,i=e.nodes;n<i.length;n++){var r=i[n]
r.loc&&(a+="\n\n"+(0,l.printLocation)(r.loc))}else if(e.source&&e.locations)for(var t=0,o=e.locations;t<o.length;t++){var s=o[t]
a+="\n\n"+(0,l.printSourceLocation)(e.source,s)}return a}a.GraphQLError=k},6135:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.formatError=function(e){var a
e||(0,r.default)(0,"Received null or undefined error.")
var n=null!==(a=e.message)&&void 0!==a?a:"An unknown error occurred.",i=e.locations,t=e.path,o=e.extensions
return o&&Object.keys(o).length>0?{message:n,locations:i,path:t,extensions:o}:{message:n,locations:i,path:t}}
var i,r=(i=n(1789))&&i.__esModule?i:{default:i}},6059:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"GraphQLError",{enumerable:!0,get:function(){return i.GraphQLError}}),Object.defineProperty(a,"printError",{enumerable:!0,get:function(){return i.printError}}),Object.defineProperty(a,"syntaxError",{enumerable:!0,get:function(){return r.syntaxError}}),Object.defineProperty(a,"locatedError",{enumerable:!0,get:function(){return t.locatedError}}),Object.defineProperty(a,"formatError",{enumerable:!0,get:function(){return o.formatError}})
var i=n(9736),r=n(1978),t=n(4066),o=n(6135)},4066:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.locatedError=function(e,a,n){var i,o=e instanceof Error?e:new Error("Unexpected error value: "+(0,r.default)(e))
return Array.isArray(o.path)?o:new t.GraphQLError(o.message,null!==(i=o.nodes)&&void 0!==i?i:a,o.source,o.positions,n,o)}
var i,r=(i=n(5925))&&i.__esModule?i:{default:i},t=n(9736)},1978:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.syntaxError=function(e,a,n){return new i.GraphQLError("Syntax Error: ".concat(n),void 0,e,[a])}
var i=n(9736)},1266:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.execute=function(e,a,n,i,r,t,o,s){return T(1===arguments.length?e:{schema:e,document:a,rootValue:n,contextValue:i,variableValues:r,operationName:t,fieldResolver:o,typeResolver:s})},a.executeSync=function(e){var a=T(e)
if((0,s.default)(a))throw new Error("GraphQL execution failed to complete synchronously.")
return a},a.assertValidExecutionArguments=w,a.buildExecutionContext=j,a.collectFields=N,a.buildResolveInfo=D,a.getFieldDef=H,a.defaultFieldResolver=a.defaultTypeResolver=void 0
var i=M(n(5925)),r=M(n(8510)),t=M(n(8004)),o=M(n(1789)),s=M(n(2482)),l=M(n(2087)),u=M(n(2178)),c=M(n(6063)),d=M(n(4210)),h=n(9770),p=n(9736),m=n(4066),f=n(2734),v=n(1368),g=n(5251),k=n(5845),y=n(764),b=n(8802),S=n(307),A=n(9288)
function M(e){return e&&e.__esModule?e:{default:e}}function T(e){var a=e.schema,n=e.document,i=e.rootValue,r=e.contextValue,t=e.variableValues,o=e.operationName,l=e.fieldResolver,u=e.typeResolver
w(a,n,t)
var d=j(a,n,i,r,t,o,l,u)
if(Array.isArray(d))return{errors:d}
var p=function(e,a,n){var i=(0,S.getOperationRootType)(e.schema,a),r=N(e,i,a.selectionSet,Object.create(null),Object.create(null))
try{var t="mutation"===a.operation?function(e,a,n,i,r){return(0,c.default)(Object.keys(r),(function(i,t){var o=r[t],l=(0,h.addPath)(void 0,t,a.name),u=L(e,a,n,o,l)
return void 0===u?i:(0,s.default)(u)?u.then((function(e){return i[t]=e,i})):(i[t]=u,i)}),Object.create(null))}(e,i,n,0,r):E(e,i,n,void 0,r)
return(0,s.default)(t)?t.then(void 0,(function(a){return e.errors.push(a),Promise.resolve(null)})):t}catch(a){return e.errors.push(a),null}}(d,d.operation,i)
return _(d,p)}function _(e,a){return(0,s.default)(a)?a.then((function(a){return _(e,a)})):0===e.errors.length?{data:a}:{errors:e.errors,data:a}}function w(e,a,n){a||(0,o.default)(0,"Must provide document."),(0,v.assertValidSchema)(e),null==n||(0,l.default)(n)||(0,o.default)(0,"Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.")}function j(e,a,n,i,r,t,o,s){for(var l,u,c,d=Object.create(null),h=0,m=a.definitions;h<m.length;h++){var v=m[h]
switch(v.kind){case f.Kind.OPERATION_DEFINITION:if(null==t){if(void 0!==c)return[new p.GraphQLError("Must provide operation name if query contains multiple operations.")]
c=v}else(null===(l=v.name)||void 0===l?void 0:l.value)===t&&(c=v)
break
case f.Kind.FRAGMENT_DEFINITION:d[v.name.value]=v}}if(!c)return null!=t?[new p.GraphQLError('Unknown operation named "'.concat(t,'".'))]:[new p.GraphQLError("Must provide an operation.")]
var g=null!==(u=c.variableDefinitions)&&void 0!==u?u:[],k=(0,A.getVariableValues)(e,g,null!=r?r:{},{maxErrors:50})
return k.errors?k.errors:{schema:e,fragments:d,rootValue:n,contextValue:i,operation:c,variableValues:k.coerced,fieldResolver:null!=o?o:G,typeResolver:null!=s?s:V,errors:[]}}function E(e,a,n,i,r){for(var t=Object.create(null),o=!1,l=0,u=Object.keys(r);l<u.length;l++){var c=u[l],p=L(e,a,n,r[c],(0,h.addPath)(i,c,a.name))
void 0!==p&&(t[c]=p,(0,s.default)(p)&&(o=!0))}return o?(0,d.default)(t):t}function N(e,a,n,i,r){for(var t=0,o=n.selections;t<o.length;t++){var s=o[t]
switch(s.kind){case f.Kind.FIELD:if(!B(e,s))continue
var l=(d=s).alias?d.alias.value:d.name.value
i[l]||(i[l]=[]),i[l].push(s)
break
case f.Kind.INLINE_FRAGMENT:if(!B(e,s)||!P(e,s,a))continue
N(e,a,s.selectionSet,i,r)
break
case f.Kind.FRAGMENT_SPREAD:var u=s.name.value
if(r[u]||!B(e,s))continue
r[u]=!0
var c=e.fragments[u]
if(!c||!P(e,c,a))continue
N(e,a,c.selectionSet,i,r)}}var d
return i}function B(e,a){var n=(0,A.getDirectiveValues)(k.GraphQLSkipDirective,a,e.variableValues)
if(!0===(null==n?void 0:n.if))return!1
var i=(0,A.getDirectiveValues)(k.GraphQLIncludeDirective,a,e.variableValues)
return!1!==(null==i?void 0:i.if)}function P(e,a,n){var i=a.typeCondition
if(!i)return!0
var r=(0,b.typeFromAST)(e.schema,i)
return r===n||!!(0,y.isAbstractType)(r)&&e.schema.isSubType(r,n)}function L(e,a,n,i,r){var t,o=i[0].name.value,l=H(e.schema,a,o)
if(l){var u=l.type,c=null!==(t=l.resolve)&&void 0!==t?t:e.fieldResolver,d=D(e,l,i,a,r)
try{var p,f=c(n,(0,A.getArgumentValues)(l,i[0],e.variableValues),e.contextValue,d)
return p=(0,s.default)(f)?f.then((function(a){return C(e,u,i,d,r,a)})):C(e,u,i,d,r,f),(0,s.default)(p)?p.then(void 0,(function(a){return x((0,m.locatedError)(a,i,(0,h.pathToArray)(r)),u,e)})):p}catch(a){return x((0,m.locatedError)(a,i,(0,h.pathToArray)(r)),u,e)}}}function D(e,a,n,i,r){return{fieldName:a.name,fieldNodes:n,returnType:a.type,parentType:i,path:r,schema:e.schema,fragments:e.fragments,rootValue:e.rootValue,operation:e.operation,variableValues:e.variableValues}}function x(e,a,n){if((0,y.isNonNullType)(a))throw e
return n.errors.push(e),null}function C(e,a,n,r,o,l){if(l instanceof Error)throw l
if((0,y.isNonNullType)(a)){var c=C(e,a.ofType,n,r,o,l)
if(null===c)throw new Error("Cannot return null for non-nullable field ".concat(r.parentType.name,".").concat(r.fieldName,"."))
return c}return null==l?null:(0,y.isListType)(a)?function(e,a,n,i,r,t){var o=a.ofType,l=!1,c=(0,u.default)(t,(function(a,t){var u=(0,h.addPath)(r,t,void 0)
try{var c
return c=(0,s.default)(a)?a.then((function(a){return C(e,o,n,i,u,a)})):C(e,o,n,i,u,a),(0,s.default)(c)?(l=!0,c.then(void 0,(function(a){return x((0,m.locatedError)(a,n,(0,h.pathToArray)(u)),o,e)}))):c}catch(a){return x((0,m.locatedError)(a,n,(0,h.pathToArray)(u)),o,e)}}))
if(null==c)throw new p.GraphQLError('Expected Iterable, but did not find one for field "'.concat(i.parentType.name,".").concat(i.fieldName,'".'))
return l?Promise.all(c):c}(e,a,n,r,o,l):(0,y.isLeafType)(a)?function(e,a){var n=e.serialize(a)
if(void 0===n)throw new Error('Expected a value of type "'.concat((0,i.default)(e),'" but ')+"received: ".concat((0,i.default)(a)))
return n}(a,l):(0,y.isAbstractType)(a)?function(e,a,n,i,r,t){var o,l=null!==(o=a.resolveType)&&void 0!==o?o:e.typeResolver,u=e.contextValue,c=l(t,u,i,a)
return(0,s.default)(c)?c.then((function(o){return R(e,K(o,e,a,n,i,t),n,i,r,t)})):R(e,K(c,e,a,n,i,t),n,i,r,t)}(e,a,n,r,o,l):(0,y.isObjectType)(a)?R(e,a,n,r,o,l):void(0,t.default)(0,"Cannot complete value of unexpected output type: "+(0,i.default)(a))}function K(e,a,n,r,t,o){if(null==e)throw new p.GraphQLError('Abstract type "'.concat(n.name,'" must resolve to an Object type at runtime for field "').concat(t.parentType.name,".").concat(t.fieldName,'". Either the "').concat(n.name,'" type should provide a "resolveType" function or each possible type should provide an "isTypeOf" function.'),r)
var s=(0,y.isNamedType)(e)?e.name:e
if("string"!=typeof s)throw new p.GraphQLError('Abstract type "'.concat(n.name,'" must resolve to an Object type at runtime for field "').concat(t.parentType.name,".").concat(t.fieldName,'" with ')+"value ".concat((0,i.default)(o),', received "').concat((0,i.default)(e),'".'))
var l=a.schema.getType(s)
if(null==l)throw new p.GraphQLError('Abstract type "'.concat(n.name,'" was resolve to a type "').concat(s,'" that does not exist inside schema.'),r)
if(!(0,y.isObjectType)(l))throw new p.GraphQLError('Abstract type "'.concat(n.name,'" was resolve to a non-object type "').concat(s,'".'),r)
if(!a.schema.isSubType(n,l))throw new p.GraphQLError('Runtime Object type "'.concat(l.name,'" is not a possible type for "').concat(n.name,'".'),r)
return l}function R(e,a,n,i,r,t){if(a.isTypeOf){var o=a.isTypeOf(t,e.contextValue,i)
if((0,s.default)(o))return o.then((function(i){if(!i)throw z(a,t,n)
return O(e,a,n,r,t)}))
if(!o)throw z(a,t,n)}return O(e,a,n,r,t)}function z(e,a,n){return new p.GraphQLError('Expected value of type "'.concat(e.name,'" but got: ').concat((0,i.default)(a),"."),n)}function O(e,a,n,i,r){return E(e,a,r,i,I(e,a,n))}var I=(0,r.default)((function(e,a,n){for(var i=Object.create(null),r=Object.create(null),t=0;t<n.length;t++){var o=n[t]
o.selectionSet&&(i=N(e,a,o.selectionSet,i,r))}return i})),V=function(e,a,n,i){if((0,l.default)(e)&&"string"==typeof e.__typename)return e.__typename
for(var r=n.schema.getPossibleTypes(i),t=[],o=0;o<r.length;o++){var u=r[o]
if(u.isTypeOf){var c=u.isTypeOf(e,a,n)
if((0,s.default)(c))t[o]=c
else if(c)return u.name}}return t.length?Promise.all(t).then((function(e){for(var a=0;a<e.length;a++)if(e[a])return r[a].name})):void 0}
a.defaultTypeResolver=V
var G=function(e,a,n,i){if((0,l.default)(e)||"function"==typeof e){var r=e[i.fieldName]
return"function"==typeof r?e[i.fieldName](a,n,i):r}}
function H(e,a,n){return n===g.SchemaMetaFieldDef.name&&e.getQueryType()===a?g.SchemaMetaFieldDef:n===g.TypeMetaFieldDef.name&&e.getQueryType()===a?g.TypeMetaFieldDef:n===g.TypeNameMetaFieldDef.name?g.TypeNameMetaFieldDef:a.getFields()[n]}a.defaultFieldResolver=G},9288:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.getVariableValues=function(e,a,n,i){var r=[],l=null==i?void 0:i.maxErrors
try{var m=function(e,a,n,i){for(var r={},l=function(l){var m=a[l],f=m.variable.name.value,g=(0,d.typeFromAST)(e,m.type)
if(!(0,c.isInputType)(g)){var k=(0,u.print)(m.type)
return i(new s.GraphQLError('Variable "$'.concat(f,'" expected value of type "').concat(k,'" which cannot be used as an input type.'),m.type)),"continue"}if(!v(n,f)){if(m.defaultValue)r[f]=(0,h.valueFromAST)(m.defaultValue,g)
else if((0,c.isNonNullType)(g)){var y=(0,t.default)(g)
i(new s.GraphQLError('Variable "$'.concat(f,'" of required type "').concat(y,'" was not provided.'),m))}return"continue"}var b=n[f]
if(null===b&&(0,c.isNonNullType)(g)){var S=(0,t.default)(g)
return i(new s.GraphQLError('Variable "$'.concat(f,'" of non-null type "').concat(S,'" must not be null.'),m)),"continue"}r[f]=(0,p.coerceInputValue)(b,g,(function(e,a,n){var r='Variable "$'.concat(f,'" got invalid value ')+(0,t.default)(a)
e.length>0&&(r+=' at "'.concat(f).concat((0,o.default)(e),'"')),i(new s.GraphQLError(r+"; "+n.message,m,void 0,void 0,void 0,n.originalError))}))},m=0;m<a.length;m++)l(m)
return r}(e,a,n,(function(e){if(null!=l&&r.length>=l)throw new s.GraphQLError("Too many errors processing variables, error limit reached. Execution aborted.")
r.push(e)}))
if(0===r.length)return{coerced:m}}catch(e){r.push(e)}return{errors:r}},a.getArgumentValues=f,a.getDirectiveValues=function(e,a,n){var r=a.directives&&(0,i.default)(a.directives,(function(a){return a.name.value===e.name}))
if(r)return f(e,r,n)}
var i=m(n(80)),r=m(n(2944)),t=m(n(5925)),o=m(n(5681)),s=n(9736),l=n(2734),u=n(4723),c=n(764),d=n(8802),h=n(6177),p=n(825)
function m(e){return e&&e.__esModule?e:{default:e}}function f(e,a,n){for(var i,o={},d=null!==(i=a.arguments)&&void 0!==i?i:[],p=(0,r.default)(d,(function(e){return e.name.value})),m=0,f=e.args;m<f.length;m++){var g=f[m],k=g.name,y=g.type,b=p[k]
if(b){var S=b.value,A=S.kind===l.Kind.NULL
if(S.kind===l.Kind.VARIABLE){var M=S.name.value
if(null==n||!v(n,M)){if(void 0!==g.defaultValue)o[k]=g.defaultValue
else if((0,c.isNonNullType)(y))throw new s.GraphQLError('Argument "'.concat(k,'" of required type "').concat((0,t.default)(y),'" ')+'was provided the variable "$'.concat(M,'" which was not provided a runtime value.'),S)
continue}A=null==n[M]}if(A&&(0,c.isNonNullType)(y))throw new s.GraphQLError('Argument "'.concat(k,'" of non-null type "').concat((0,t.default)(y),'" ')+"must not be null.",S)
var T=(0,h.valueFromAST)(S,y,n)
if(void 0===T)throw new s.GraphQLError('Argument "'.concat(k,'" has invalid value ').concat((0,u.print)(S),"."),S)
o[k]=T}else if(void 0!==g.defaultValue)o[k]=g.defaultValue
else if((0,c.isNonNullType)(y))throw new s.GraphQLError('Argument "'.concat(k,'" of required type "').concat((0,t.default)(y),'" ')+"was not provided.",a)}return o}function v(e,a){return Object.prototype.hasOwnProperty.call(e,a)}},9770:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.addPath=function(e,a,n){return{prev:e,key:a,typename:n}},a.pathToArray=function(e){for(var a=[],n=e;n;)a.push(n.key),n=n.prev
return a.reverse()}},907:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){var a=e.prototype.toJSON
"function"==typeof a||(0,i.default)(0),e.prototype.inspect=a,r.default&&(e.prototype[r.default]=a)}
var i=t(n(8004)),r=t(n(2657))
function t(e){return e&&e.__esModule?e:{default:e}}},1789:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e,a){if(!Boolean(e))throw new Error(a)}},655:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e,a){var n="string"==typeof e?[e,a]:[void 0,e],i=n[0],r=" Did you mean "
i&&(r+=i+" ")
var t=n[1].map((function(e){return'"'.concat(e,'"')}))
switch(t.length){case 0:return""
case 1:return r+t[0]+"?"
case 2:return r+t[0]+" or "+t[1]+"?"}var o=t.slice(0,5),s=o.pop()
return r+o.join(", ")+", or "+s+"?"}},9681:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){return e}},5925:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){return o(e,[])}
var i,r=(i=n(2657))&&i.__esModule?i:{default:i}
function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function o(e,a){switch(t(e)){case"string":return JSON.stringify(e)
case"function":return e.name?"[function ".concat(e.name,"]"):"[function]"
case"object":return null===e?"null":function(e,a){if(-1!==a.indexOf(e))return"[Circular]"
var n=[].concat(a,[e]),i=function(e){var a=e[String(r.default)]
return"function"==typeof a?a:"function"==typeof e.inspect?e.inspect:void 0}(e)
if(void 0!==i){var t=i.call(e)
if(t!==e)return"string"==typeof t?t:o(t,n)}else if(Array.isArray(e))return function(e,a){if(0===e.length)return"[]"
if(a.length>2)return"[Array]"
for(var n=Math.min(10,e.length),i=e.length-n,r=[],t=0;t<n;++t)r.push(o(e[t],a))
return 1===i?r.push("... 1 more item"):i>1&&r.push("... ".concat(i," more items")),"["+r.join(", ")+"]"}(e,n)
return function(e,a){var n=Object.keys(e)
return 0===n.length?"{}":a.length>2?"["+function(e){var a=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"")
if("Object"===a&&"function"==typeof e.constructor){var n=e.constructor.name
if("string"==typeof n&&""!==n)return n}return a}(e)+"]":"{ "+n.map((function(n){return n+": "+o(e[n],a)})).join(", ")+" }"}(e,n)}(e,a)
default:return String(e)}}},9894:(e,a,n)=>{"use strict"
var i
Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0,(i=n(5925))&&i.__esModule,a.default=function(e,a){return e instanceof a}},8004:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e,a){if(!Boolean(e))throw new Error(null!=a?a:"Unexpected invariant triggered.")}},2087:(e,a)=>{"use strict"
function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){return"object"==n(e)&&null!==e}},2482:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){return"function"==typeof(null==e?void 0:e.then)}},2944:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e,a){return e.reduce((function(e,n){return e[a(n)]=n,e}),Object.create(null))}},8013:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e,a,n){return e.reduce((function(e,i){return e[a(i)]=n(i),e}),Object.create(null))}},5098:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e,a){for(var n=Object.create(null),i=0,t=(0,r.default)(e);i<t.length;i++){var o=t[i],s=o[0],l=o[1]
n[s]=a(l,s)}return n}
var i,r=(i=n(7365))&&i.__esModule?i:{default:i}},8510:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){var a
return function(n,i,r){a||(a=new WeakMap)
var t,o=a.get(n)
if(o){if(t=o.get(i)){var s=t.get(r)
if(void 0!==s)return s}}else o=new WeakMap,a.set(n,o)
t||(t=new WeakMap,o.set(i,t))
var l=e(n,i,r)
return t.set(r,l),l}}},2461:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e,a){for(var r=0,t=0;r<e.length&&t<a.length;){var o=e.charCodeAt(r),s=a.charCodeAt(t)
if(i(o)&&i(s)){var l=0
do{++r,l=10*l+o-n,o=e.charCodeAt(r)}while(i(o)&&l>0)
var u=0
do{++t,u=10*u+s-n,s=a.charCodeAt(t)}while(i(s)&&u>0)
if(l<u)return-1
if(l>u)return 1}else{if(o<s)return-1
if(o>s)return 1;++r,++t}}return e.length-a.length}
var n=48
function i(e){return!isNaN(e)&&n<=e&&e<=57}},2657:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0
var n="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):void 0
a.default=n},5681:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){return e.map((function(e){return"number"==typeof e?"["+e.toString()+"]":"."+e})).join("")}},4210:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){var a=Object.keys(e),n=a.map((function(a){return e[a]}))
return Promise.all(n).then((function(e){return e.reduce((function(e,n,i){return e[a[i]]=n,e}),Object.create(null))}))}},6063:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e,a,n){return e.reduce((function(e,n){return(0,r.default)(e)?e.then((function(e){return a(e,n)})):a(e,n)}),n)}
var i,r=(i=n(2482))&&i.__esModule?i:{default:i}},2178:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(e){return e}
if(null==e||"object"!==r(e))return null
if(Array.isArray(e))return e.map(a)
var n=e[i.SYMBOL_ITERATOR]
if("function"==typeof n){for(var t,o=n.call(e),s=[],l=0;!(t=o.next()).done;++l)s.push(a(t.value,l))
return s}var u=e.length
if("number"==typeof u&&u>=0&&u%1==0){for(var c=[],d=0;d<u;++d){if(!Object.prototype.hasOwnProperty.call(e,d))return null
c.push(a(e[String(d)],d))}return c}return null}
var i=n(4053)
function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}},8586:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e,a){for(var n=Object.create(null),i=new t(e),o=Math.floor(.4*e.length)+1,s=0;s<a.length;s++){var l=a[s],u=i.measure(l,o)
void 0!==u&&(n[l]=u)}return Object.keys(n).sort((function(e,a){var i=n[e]-n[a]
return 0!==i?i:(0,r.default)(e,a)}))}
var i,r=(i=n(2461))&&i.__esModule?i:{default:i},t=function(){function e(e){this._input=e,this._inputLowerCase=e.toLowerCase(),this._inputArray=o(this._inputLowerCase),this._rows=[new Array(e.length+1).fill(0),new Array(e.length+1).fill(0),new Array(e.length+1).fill(0)]}return e.prototype.measure=function(e,a){if(this._input===e)return 0
var n=e.toLowerCase()
if(this._inputLowerCase===n)return 1
var i=o(n),r=this._inputArray
if(i.length<r.length){var t=i
i=r,r=t}var s=i.length,l=r.length
if(!(s-l>a)){for(var u=this._rows,c=0;c<=l;c++)u[0][c]=c
for(var d=1;d<=s;d++){for(var h=u[(d-1)%3],p=u[d%3],m=p[0]=d,f=1;f<=l;f++){var v=i[d-1]===r[f-1]?0:1,g=Math.min(h[f]+1,p[f-1]+1,h[f-1]+v)
if(d>1&&f>1&&i[d-1]===r[f-2]&&i[d-2]===r[f-1]){var k=u[(d-2)%3][f-2]
g=Math.min(g,k+1)}g<m&&(m=g),p[f]=g}if(m>a)return}var y=u[s%3][l]
return y<=a?y:void 0}},e}()
function o(e){for(var a=e.length,n=new Array(a),i=0;i<a;++i)n[i]=e.charCodeAt(i)
return n}},6910:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){if(null===Object.getPrototypeOf(e))return e
for(var a=Object.create(null),n=0,i=(0,r.default)(e);n<i.length;n++){var t=i[n],o=t[0],s=t[1]
a[o]=s}return a}
var i,r=(i=n(7365))&&i.__esModule?i:{default:i}},5059:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.isNode=function(e){return null!=e&&"string"==typeof e.kind},a.Token=a.Location=void 0
var i,r=(i=n(907))&&i.__esModule?i:{default:i},t=function(){function e(e,a,n){this.start=e.start,this.end=a.end,this.startToken=e,this.endToken=a,this.source=n}return e.prototype.toJSON=function(){return{start:this.start,end:this.end}},e}()
a.Location=t,(0,r.default)(t)
var o=function(){function e(e,a,n,i,r,t,o){this.kind=e,this.start=a,this.end=n,this.line=i,this.column=r,this.value=o,this.prev=t,this.next=null}return e.prototype.toJSON=function(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}},e}()
a.Token=o,(0,r.default)(o)},3908:(e,a)=>{"use strict"
function n(e){for(var a=0;a<e.length;++a)if(" "!==e[a]&&"\t"!==e[a])return!1
return!0}function i(e){for(var a,n=!0,i=!0,r=0,t=null,o=0;o<e.length;++o)switch(e.charCodeAt(o)){case 13:10===e.charCodeAt(o+1)&&++o
case 10:n=!1,i=!0,r=0
break
case 9:case 32:++r
break
default:i&&!n&&(null===t||r<t)&&(t=r),i=!1}return null!==(a=t)&&void 0!==a?a:0}Object.defineProperty(a,"__esModule",{value:!0}),a.dedentBlockStringValue=function(e){var a=e.split(/\r\n|[\n\r]/g),r=i(e)
if(0!==r)for(var t=1;t<a.length;t++)a[t]=a[t].slice(r)
for(var o=0;o<a.length&&n(a[o]);)++o
for(var s=a.length;s>o&&n(a[s-1]);)--s
return a.slice(o,s).join("\n")},a.getBlockStringIndentation=i,a.printBlockString=function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=-1===e.indexOf("\n"),r=" "===e[0]||"\t"===e[0],t='"'===e[e.length-1],o="\\"===e[e.length-1],s=!i||t||o||n,l=""
return!s||i&&r||(l+="\n"+a),l+=a?e.replace(/\n/g,"\n"+a):e,s&&(l+="\n"),'"""'+l.replace(/"""/g,'\\"""')+'"""'}},4899:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.DirectiveLocation=void 0
var n=Object.freeze({QUERY:"QUERY",MUTATION:"MUTATION",SUBSCRIPTION:"SUBSCRIPTION",FIELD:"FIELD",FRAGMENT_DEFINITION:"FRAGMENT_DEFINITION",FRAGMENT_SPREAD:"FRAGMENT_SPREAD",INLINE_FRAGMENT:"INLINE_FRAGMENT",VARIABLE_DEFINITION:"VARIABLE_DEFINITION",SCHEMA:"SCHEMA",SCALAR:"SCALAR",OBJECT:"OBJECT",FIELD_DEFINITION:"FIELD_DEFINITION",ARGUMENT_DEFINITION:"ARGUMENT_DEFINITION",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",ENUM_VALUE:"ENUM_VALUE",INPUT_OBJECT:"INPUT_OBJECT",INPUT_FIELD_DEFINITION:"INPUT_FIELD_DEFINITION"})
a.DirectiveLocation=n},2734:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.Kind=void 0
var n=Object.freeze({NAME:"Name",DOCUMENT:"Document",OPERATION_DEFINITION:"OperationDefinition",VARIABLE_DEFINITION:"VariableDefinition",SELECTION_SET:"SelectionSet",FIELD:"Field",ARGUMENT:"Argument",FRAGMENT_SPREAD:"FragmentSpread",INLINE_FRAGMENT:"InlineFragment",FRAGMENT_DEFINITION:"FragmentDefinition",VARIABLE:"Variable",INT:"IntValue",FLOAT:"FloatValue",STRING:"StringValue",BOOLEAN:"BooleanValue",NULL:"NullValue",ENUM:"EnumValue",LIST:"ListValue",OBJECT:"ObjectValue",OBJECT_FIELD:"ObjectField",DIRECTIVE:"Directive",NAMED_TYPE:"NamedType",LIST_TYPE:"ListType",NON_NULL_TYPE:"NonNullType",SCHEMA_DEFINITION:"SchemaDefinition",OPERATION_TYPE_DEFINITION:"OperationTypeDefinition",SCALAR_TYPE_DEFINITION:"ScalarTypeDefinition",OBJECT_TYPE_DEFINITION:"ObjectTypeDefinition",FIELD_DEFINITION:"FieldDefinition",INPUT_VALUE_DEFINITION:"InputValueDefinition",INTERFACE_TYPE_DEFINITION:"InterfaceTypeDefinition",UNION_TYPE_DEFINITION:"UnionTypeDefinition",ENUM_TYPE_DEFINITION:"EnumTypeDefinition",ENUM_VALUE_DEFINITION:"EnumValueDefinition",INPUT_OBJECT_TYPE_DEFINITION:"InputObjectTypeDefinition",DIRECTIVE_DEFINITION:"DirectiveDefinition",SCHEMA_EXTENSION:"SchemaExtension",SCALAR_TYPE_EXTENSION:"ScalarTypeExtension",OBJECT_TYPE_EXTENSION:"ObjectTypeExtension",INTERFACE_TYPE_EXTENSION:"InterfaceTypeExtension",UNION_TYPE_EXTENSION:"UnionTypeExtension",ENUM_TYPE_EXTENSION:"EnumTypeExtension",INPUT_OBJECT_TYPE_EXTENSION:"InputObjectTypeExtension"})
a.Kind=n},2586:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.isPunctuatorTokenKind=function(e){return e===t.TokenKind.BANG||e===t.TokenKind.DOLLAR||e===t.TokenKind.AMP||e===t.TokenKind.PAREN_L||e===t.TokenKind.PAREN_R||e===t.TokenKind.SPREAD||e===t.TokenKind.COLON||e===t.TokenKind.EQUALS||e===t.TokenKind.AT||e===t.TokenKind.BRACKET_L||e===t.TokenKind.BRACKET_R||e===t.TokenKind.BRACE_L||e===t.TokenKind.PIPE||e===t.TokenKind.BRACE_R},a.Lexer=void 0
var i=n(1978),r=n(5059),t=n(2795),o=n(3908),s=function(){function e(e){var a=new r.Token(t.TokenKind.SOF,0,0,0,0,null)
this.source=e,this.lastToken=a,this.token=a,this.line=1,this.lineStart=0}var a=e.prototype
return a.advance=function(){return this.lastToken=this.token,this.token=this.lookahead()},a.lookahead=function(){var e=this.token
if(e.kind!==t.TokenKind.EOF)do{var a
e=null!==(a=e.next)&&void 0!==a?a:e.next=u(this,e)}while(e.kind===t.TokenKind.COMMENT)
return e},e}()
function l(e){return isNaN(e)?t.TokenKind.EOF:e<127?JSON.stringify(String.fromCharCode(e)):'"\\u'.concat(("00"+e.toString(16).toUpperCase()).slice(-4),'"')}function u(e,a){for(var n=e.source,o=n.body,s=o.length,l=a.end;l<s;){var u=o.charCodeAt(l),p=e.line,v=1+l-e.lineStart
switch(u){case 65279:case 9:case 32:case 44:++l
continue
case 10:++l,++e.line,e.lineStart=l
continue
case 13:10===o.charCodeAt(l+1)?l+=2:++l,++e.line,e.lineStart=l
continue
case 33:return new r.Token(t.TokenKind.BANG,l,l+1,p,v,a)
case 35:return d(n,l,p,v,a)
case 36:return new r.Token(t.TokenKind.DOLLAR,l,l+1,p,v,a)
case 38:return new r.Token(t.TokenKind.AMP,l,l+1,p,v,a)
case 40:return new r.Token(t.TokenKind.PAREN_L,l,l+1,p,v,a)
case 41:return new r.Token(t.TokenKind.PAREN_R,l,l+1,p,v,a)
case 46:if(46===o.charCodeAt(l+1)&&46===o.charCodeAt(l+2))return new r.Token(t.TokenKind.SPREAD,l,l+3,p,v,a)
break
case 58:return new r.Token(t.TokenKind.COLON,l,l+1,p,v,a)
case 61:return new r.Token(t.TokenKind.EQUALS,l,l+1,p,v,a)
case 64:return new r.Token(t.TokenKind.AT,l,l+1,p,v,a)
case 91:return new r.Token(t.TokenKind.BRACKET_L,l,l+1,p,v,a)
case 93:return new r.Token(t.TokenKind.BRACKET_R,l,l+1,p,v,a)
case 123:return new r.Token(t.TokenKind.BRACE_L,l,l+1,p,v,a)
case 124:return new r.Token(t.TokenKind.PIPE,l,l+1,p,v,a)
case 125:return new r.Token(t.TokenKind.BRACE_R,l,l+1,p,v,a)
case 34:return 34===o.charCodeAt(l+1)&&34===o.charCodeAt(l+2)?f(n,l,p,v,a,e):m(n,l,p,v,a)
case 45:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return h(n,l,u,p,v,a)
case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 82:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 95:case 97:case 98:case 99:case 100:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 108:case 109:case 110:case 111:case 112:case 113:case 114:case 115:case 116:case 117:case 118:case 119:case 120:case 121:case 122:return g(n,l,p,v,a)}throw(0,i.syntaxError)(n,l,c(u))}var k=e.line,y=1+l-e.lineStart
return new r.Token(t.TokenKind.EOF,s,s,k,y,a)}function c(e){return e<32&&9!==e&&10!==e&&13!==e?"Cannot contain the invalid character ".concat(l(e),"."):39===e?"Unexpected single quote character ('), did you mean to use a double quote (\")?":"Cannot parse the unexpected character ".concat(l(e),".")}function d(e,a,n,i,o){var s,l=e.body,u=a
do{s=l.charCodeAt(++u)}while(!isNaN(s)&&(s>31||9===s))
return new r.Token(t.TokenKind.COMMENT,a,u,n,i,o,l.slice(a+1,u))}function h(e,a,n,o,s,u){var c=e.body,d=n,h=a,m=!1
if(45===d&&(d=c.charCodeAt(++h)),48===d){if((d=c.charCodeAt(++h))>=48&&d<=57)throw(0,i.syntaxError)(e,h,"Invalid number, unexpected digit after 0: ".concat(l(d),"."))}else h=p(e,h,d),d=c.charCodeAt(h)
if(46===d&&(m=!0,d=c.charCodeAt(++h),h=p(e,h,d),d=c.charCodeAt(h)),69!==d&&101!==d||(m=!0,43!==(d=c.charCodeAt(++h))&&45!==d||(d=c.charCodeAt(++h)),h=p(e,h,d),d=c.charCodeAt(h)),46===d||function(e){return 95===e||e>=65&&e<=90||e>=97&&e<=122}(d))throw(0,i.syntaxError)(e,h,"Invalid number, expected digit but got: ".concat(l(d),"."))
return new r.Token(m?t.TokenKind.FLOAT:t.TokenKind.INT,a,h,o,s,u,c.slice(a,h))}function p(e,a,n){var r=e.body,t=a,o=n
if(o>=48&&o<=57){do{o=r.charCodeAt(++t)}while(o>=48&&o<=57)
return t}throw(0,i.syntaxError)(e,t,"Invalid number, expected digit but got: ".concat(l(o),"."))}function m(e,a,n,o,s){for(var u,c,d,h,p=e.body,m=a+1,f=m,g=0,k="";m<p.length&&!isNaN(g=p.charCodeAt(m))&&10!==g&&13!==g;){if(34===g)return k+=p.slice(f,m),new r.Token(t.TokenKind.STRING,a,m+1,n,o,s,k)
if(g<32&&9!==g)throw(0,i.syntaxError)(e,m,"Invalid character within String: ".concat(l(g),"."))
if(++m,92===g){switch(k+=p.slice(f,m-1),g=p.charCodeAt(m)){case 34:k+='"'
break
case 47:k+="/"
break
case 92:k+="\\"
break
case 98:k+="\b"
break
case 102:k+="\f"
break
case 110:k+="\n"
break
case 114:k+="\r"
break
case 116:k+="\t"
break
case 117:var y=(u=p.charCodeAt(m+1),c=p.charCodeAt(m+2),d=p.charCodeAt(m+3),h=p.charCodeAt(m+4),v(u)<<12|v(c)<<8|v(d)<<4|v(h))
if(y<0){var b=p.slice(m+1,m+5)
throw(0,i.syntaxError)(e,m,"Invalid character escape sequence: \\u".concat(b,"."))}k+=String.fromCharCode(y),m+=4
break
default:throw(0,i.syntaxError)(e,m,"Invalid character escape sequence: \\".concat(String.fromCharCode(g),"."))}f=++m}}throw(0,i.syntaxError)(e,m,"Unterminated string.")}function f(e,a,n,s,u,c){for(var d=e.body,h=a+3,p=h,m=0,f="";h<d.length&&!isNaN(m=d.charCodeAt(h));){if(34===m&&34===d.charCodeAt(h+1)&&34===d.charCodeAt(h+2))return f+=d.slice(p,h),new r.Token(t.TokenKind.BLOCK_STRING,a,h+3,n,s,u,(0,o.dedentBlockStringValue)(f))
if(m<32&&9!==m&&10!==m&&13!==m)throw(0,i.syntaxError)(e,h,"Invalid character within String: ".concat(l(m),"."))
10===m?(++h,++c.line,c.lineStart=h):13===m?(10===d.charCodeAt(h+1)?h+=2:++h,++c.line,c.lineStart=h):92===m&&34===d.charCodeAt(h+1)&&34===d.charCodeAt(h+2)&&34===d.charCodeAt(h+3)?(f+=d.slice(p,h)+'"""',p=h+=4):++h}throw(0,i.syntaxError)(e,h,"Unterminated string.")}function v(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function g(e,a,n,i,o){for(var s=e.body,l=s.length,u=a+1,c=0;u!==l&&!isNaN(c=s.charCodeAt(u))&&(95===c||c>=48&&c<=57||c>=65&&c<=90||c>=97&&c<=122);)++u
return new r.Token(t.TokenKind.NAME,a,u,n,i,o,s.slice(a,u))}a.Lexer=s},2450:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.getLocation=function(e,a){for(var n,i=/\r\n|[\n\r]/g,r=1,t=a+1;(n=i.exec(e.body))&&n.index<a;)r+=1,t=a+1-(n.index+n[0].length)
return{line:r,column:t}}},54:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.parse=function(e,a){return new c(e,a).parseDocument()},a.parseValue=function(e,a){var n=new c(e,a)
n.expectToken(o.TokenKind.SOF)
var i=n.parseValueLiteral(!1)
return n.expectToken(o.TokenKind.EOF),i},a.parseType=function(e,a){var n=new c(e,a)
n.expectToken(o.TokenKind.SOF)
var i=n.parseTypeReference()
return n.expectToken(o.TokenKind.EOF),i},a.Parser=void 0
var i=n(1978),r=n(2734),t=n(5059),o=n(2795),s=n(5786),l=n(4899),u=n(2586),c=function(){function e(e,a){var n=(0,s.isSource)(e)?e:new s.Source(e)
this._lexer=new u.Lexer(n),this._options=a}var a=e.prototype
return a.parseName=function(){var e=this.expectToken(o.TokenKind.NAME)
return{kind:r.Kind.NAME,value:e.value,loc:this.loc(e)}},a.parseDocument=function(){var e=this._lexer.token
return{kind:r.Kind.DOCUMENT,definitions:this.many(o.TokenKind.SOF,this.parseDefinition,o.TokenKind.EOF),loc:this.loc(e)}},a.parseDefinition=function(){if(this.peek(o.TokenKind.NAME))switch(this._lexer.token.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition()
case"fragment":return this.parseFragmentDefinition()
case"schema":case"scalar":case"type":case"interface":case"union":case"enum":case"input":case"directive":return this.parseTypeSystemDefinition()
case"extend":return this.parseTypeSystemExtension()}else{if(this.peek(o.TokenKind.BRACE_L))return this.parseOperationDefinition()
if(this.peekDescription())return this.parseTypeSystemDefinition()}throw this.unexpected()},a.parseOperationDefinition=function(){var e=this._lexer.token
if(this.peek(o.TokenKind.BRACE_L))return{kind:r.Kind.OPERATION_DEFINITION,operation:"query",name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet(),loc:this.loc(e)}
var a,n=this.parseOperationType()
return this.peek(o.TokenKind.NAME)&&(a=this.parseName()),{kind:r.Kind.OPERATION_DEFINITION,operation:n,name:a,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}},a.parseOperationType=function(){var e=this.expectToken(o.TokenKind.NAME)
switch(e.value){case"query":return"query"
case"mutation":return"mutation"
case"subscription":return"subscription"}throw this.unexpected(e)},a.parseVariableDefinitions=function(){return this.optionalMany(o.TokenKind.PAREN_L,this.parseVariableDefinition,o.TokenKind.PAREN_R)},a.parseVariableDefinition=function(){var e=this._lexer.token
return{kind:r.Kind.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(o.TokenKind.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(o.TokenKind.EQUALS)?this.parseValueLiteral(!0):void 0,directives:this.parseDirectives(!0),loc:this.loc(e)}},a.parseVariable=function(){var e=this._lexer.token
return this.expectToken(o.TokenKind.DOLLAR),{kind:r.Kind.VARIABLE,name:this.parseName(),loc:this.loc(e)}},a.parseSelectionSet=function(){var e=this._lexer.token
return{kind:r.Kind.SELECTION_SET,selections:this.many(o.TokenKind.BRACE_L,this.parseSelection,o.TokenKind.BRACE_R),loc:this.loc(e)}},a.parseSelection=function(){return this.peek(o.TokenKind.SPREAD)?this.parseFragment():this.parseField()},a.parseField=function(){var e,a,n=this._lexer.token,i=this.parseName()
return this.expectOptionalToken(o.TokenKind.COLON)?(e=i,a=this.parseName()):a=i,{kind:r.Kind.FIELD,alias:e,name:a,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(o.TokenKind.BRACE_L)?this.parseSelectionSet():void 0,loc:this.loc(n)}},a.parseArguments=function(e){var a=e?this.parseConstArgument:this.parseArgument
return this.optionalMany(o.TokenKind.PAREN_L,a,o.TokenKind.PAREN_R)},a.parseArgument=function(){var e=this._lexer.token,a=this.parseName()
return this.expectToken(o.TokenKind.COLON),{kind:r.Kind.ARGUMENT,name:a,value:this.parseValueLiteral(!1),loc:this.loc(e)}},a.parseConstArgument=function(){var e=this._lexer.token
return{kind:r.Kind.ARGUMENT,name:this.parseName(),value:(this.expectToken(o.TokenKind.COLON),this.parseValueLiteral(!0)),loc:this.loc(e)}},a.parseFragment=function(){var e=this._lexer.token
this.expectToken(o.TokenKind.SPREAD)
var a=this.expectOptionalKeyword("on")
return!a&&this.peek(o.TokenKind.NAME)?{kind:r.Kind.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1),loc:this.loc(e)}:{kind:r.Kind.INLINE_FRAGMENT,typeCondition:a?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}},a.parseFragmentDefinition=function(){var e,a=this._lexer.token
return this.expectKeyword("fragment"),!0===(null===(e=this._options)||void 0===e?void 0:e.experimentalFragmentVariables)?{kind:r.Kind.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(a)}:{kind:r.Kind.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(a)}},a.parseFragmentName=function(){if("on"===this._lexer.token.value)throw this.unexpected()
return this.parseName()},a.parseValueLiteral=function(e){var a=this._lexer.token
switch(a.kind){case o.TokenKind.BRACKET_L:return this.parseList(e)
case o.TokenKind.BRACE_L:return this.parseObject(e)
case o.TokenKind.INT:return this._lexer.advance(),{kind:r.Kind.INT,value:a.value,loc:this.loc(a)}
case o.TokenKind.FLOAT:return this._lexer.advance(),{kind:r.Kind.FLOAT,value:a.value,loc:this.loc(a)}
case o.TokenKind.STRING:case o.TokenKind.BLOCK_STRING:return this.parseStringLiteral()
case o.TokenKind.NAME:switch(this._lexer.advance(),a.value){case"true":return{kind:r.Kind.BOOLEAN,value:!0,loc:this.loc(a)}
case"false":return{kind:r.Kind.BOOLEAN,value:!1,loc:this.loc(a)}
case"null":return{kind:r.Kind.NULL,loc:this.loc(a)}
default:return{kind:r.Kind.ENUM,value:a.value,loc:this.loc(a)}}case o.TokenKind.DOLLAR:if(!e)return this.parseVariable()}throw this.unexpected()},a.parseStringLiteral=function(){var e=this._lexer.token
return this._lexer.advance(),{kind:r.Kind.STRING,value:e.value,block:e.kind===o.TokenKind.BLOCK_STRING,loc:this.loc(e)}},a.parseList=function(e){var a=this,n=this._lexer.token
return{kind:r.Kind.LIST,values:this.any(o.TokenKind.BRACKET_L,(function(){return a.parseValueLiteral(e)}),o.TokenKind.BRACKET_R),loc:this.loc(n)}},a.parseObject=function(e){var a=this,n=this._lexer.token
return{kind:r.Kind.OBJECT,fields:this.any(o.TokenKind.BRACE_L,(function(){return a.parseObjectField(e)}),o.TokenKind.BRACE_R),loc:this.loc(n)}},a.parseObjectField=function(e){var a=this._lexer.token,n=this.parseName()
return this.expectToken(o.TokenKind.COLON),{kind:r.Kind.OBJECT_FIELD,name:n,value:this.parseValueLiteral(e),loc:this.loc(a)}},a.parseDirectives=function(e){for(var a=[];this.peek(o.TokenKind.AT);)a.push(this.parseDirective(e))
return a},a.parseDirective=function(e){var a=this._lexer.token
return this.expectToken(o.TokenKind.AT),{kind:r.Kind.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(e),loc:this.loc(a)}},a.parseTypeReference=function(){var e,a=this._lexer.token
return this.expectOptionalToken(o.TokenKind.BRACKET_L)?(e=this.parseTypeReference(),this.expectToken(o.TokenKind.BRACKET_R),e={kind:r.Kind.LIST_TYPE,type:e,loc:this.loc(a)}):e=this.parseNamedType(),this.expectOptionalToken(o.TokenKind.BANG)?{kind:r.Kind.NON_NULL_TYPE,type:e,loc:this.loc(a)}:e},a.parseNamedType=function(){var e=this._lexer.token
return{kind:r.Kind.NAMED_TYPE,name:this.parseName(),loc:this.loc(e)}},a.parseTypeSystemDefinition=function(){var e=this.peekDescription()?this._lexer.lookahead():this._lexer.token
if(e.kind===o.TokenKind.NAME)switch(e.value){case"schema":return this.parseSchemaDefinition()
case"scalar":return this.parseScalarTypeDefinition()
case"type":return this.parseObjectTypeDefinition()
case"interface":return this.parseInterfaceTypeDefinition()
case"union":return this.parseUnionTypeDefinition()
case"enum":return this.parseEnumTypeDefinition()
case"input":return this.parseInputObjectTypeDefinition()
case"directive":return this.parseDirectiveDefinition()}throw this.unexpected(e)},a.peekDescription=function(){return this.peek(o.TokenKind.STRING)||this.peek(o.TokenKind.BLOCK_STRING)},a.parseDescription=function(){if(this.peekDescription())return this.parseStringLiteral()},a.parseSchemaDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("schema")
var n=this.parseDirectives(!0),i=this.many(o.TokenKind.BRACE_L,this.parseOperationTypeDefinition,o.TokenKind.BRACE_R)
return{kind:r.Kind.SCHEMA_DEFINITION,description:a,directives:n,operationTypes:i,loc:this.loc(e)}},a.parseOperationTypeDefinition=function(){var e=this._lexer.token,a=this.parseOperationType()
this.expectToken(o.TokenKind.COLON)
var n=this.parseNamedType()
return{kind:r.Kind.OPERATION_TYPE_DEFINITION,operation:a,type:n,loc:this.loc(e)}},a.parseScalarTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("scalar")
var n=this.parseName(),i=this.parseDirectives(!0)
return{kind:r.Kind.SCALAR_TYPE_DEFINITION,description:a,name:n,directives:i,loc:this.loc(e)}},a.parseObjectTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("type")
var n=this.parseName(),i=this.parseImplementsInterfaces(),t=this.parseDirectives(!0),o=this.parseFieldsDefinition()
return{kind:r.Kind.OBJECT_TYPE_DEFINITION,description:a,name:n,interfaces:i,directives:t,fields:o,loc:this.loc(e)}},a.parseImplementsInterfaces=function(){var e
if(!this.expectOptionalKeyword("implements"))return[]
if(!0===(null===(e=this._options)||void 0===e?void 0:e.allowLegacySDLImplementsInterfaces)){var a=[]
this.expectOptionalToken(o.TokenKind.AMP)
do{a.push(this.parseNamedType())}while(this.expectOptionalToken(o.TokenKind.AMP)||this.peek(o.TokenKind.NAME))
return a}return this.delimitedMany(o.TokenKind.AMP,this.parseNamedType)},a.parseFieldsDefinition=function(){var e
return!0===(null===(e=this._options)||void 0===e?void 0:e.allowLegacySDLEmptyFields)&&this.peek(o.TokenKind.BRACE_L)&&this._lexer.lookahead().kind===o.TokenKind.BRACE_R?(this._lexer.advance(),this._lexer.advance(),[]):this.optionalMany(o.TokenKind.BRACE_L,this.parseFieldDefinition,o.TokenKind.BRACE_R)},a.parseFieldDefinition=function(){var e=this._lexer.token,a=this.parseDescription(),n=this.parseName(),i=this.parseArgumentDefs()
this.expectToken(o.TokenKind.COLON)
var t=this.parseTypeReference(),s=this.parseDirectives(!0)
return{kind:r.Kind.FIELD_DEFINITION,description:a,name:n,arguments:i,type:t,directives:s,loc:this.loc(e)}},a.parseArgumentDefs=function(){return this.optionalMany(o.TokenKind.PAREN_L,this.parseInputValueDef,o.TokenKind.PAREN_R)},a.parseInputValueDef=function(){var e=this._lexer.token,a=this.parseDescription(),n=this.parseName()
this.expectToken(o.TokenKind.COLON)
var i,t=this.parseTypeReference()
this.expectOptionalToken(o.TokenKind.EQUALS)&&(i=this.parseValueLiteral(!0))
var s=this.parseDirectives(!0)
return{kind:r.Kind.INPUT_VALUE_DEFINITION,description:a,name:n,type:t,defaultValue:i,directives:s,loc:this.loc(e)}},a.parseInterfaceTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("interface")
var n=this.parseName(),i=this.parseImplementsInterfaces(),t=this.parseDirectives(!0),o=this.parseFieldsDefinition()
return{kind:r.Kind.INTERFACE_TYPE_DEFINITION,description:a,name:n,interfaces:i,directives:t,fields:o,loc:this.loc(e)}},a.parseUnionTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("union")
var n=this.parseName(),i=this.parseDirectives(!0),t=this.parseUnionMemberTypes()
return{kind:r.Kind.UNION_TYPE_DEFINITION,description:a,name:n,directives:i,types:t,loc:this.loc(e)}},a.parseUnionMemberTypes=function(){return this.expectOptionalToken(o.TokenKind.EQUALS)?this.delimitedMany(o.TokenKind.PIPE,this.parseNamedType):[]},a.parseEnumTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("enum")
var n=this.parseName(),i=this.parseDirectives(!0),t=this.parseEnumValuesDefinition()
return{kind:r.Kind.ENUM_TYPE_DEFINITION,description:a,name:n,directives:i,values:t,loc:this.loc(e)}},a.parseEnumValuesDefinition=function(){return this.optionalMany(o.TokenKind.BRACE_L,this.parseEnumValueDefinition,o.TokenKind.BRACE_R)},a.parseEnumValueDefinition=function(){var e=this._lexer.token,a=this.parseDescription(),n=this.parseName(),i=this.parseDirectives(!0)
return{kind:r.Kind.ENUM_VALUE_DEFINITION,description:a,name:n,directives:i,loc:this.loc(e)}},a.parseInputObjectTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("input")
var n=this.parseName(),i=this.parseDirectives(!0),t=this.parseInputFieldsDefinition()
return{kind:r.Kind.INPUT_OBJECT_TYPE_DEFINITION,description:a,name:n,directives:i,fields:t,loc:this.loc(e)}},a.parseInputFieldsDefinition=function(){return this.optionalMany(o.TokenKind.BRACE_L,this.parseInputValueDef,o.TokenKind.BRACE_R)},a.parseTypeSystemExtension=function(){var e=this._lexer.lookahead()
if(e.kind===o.TokenKind.NAME)switch(e.value){case"schema":return this.parseSchemaExtension()
case"scalar":return this.parseScalarTypeExtension()
case"type":return this.parseObjectTypeExtension()
case"interface":return this.parseInterfaceTypeExtension()
case"union":return this.parseUnionTypeExtension()
case"enum":return this.parseEnumTypeExtension()
case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(e)},a.parseSchemaExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("schema")
var a=this.parseDirectives(!0),n=this.optionalMany(o.TokenKind.BRACE_L,this.parseOperationTypeDefinition,o.TokenKind.BRACE_R)
if(0===a.length&&0===n.length)throw this.unexpected()
return{kind:r.Kind.SCHEMA_EXTENSION,directives:a,operationTypes:n,loc:this.loc(e)}},a.parseScalarTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("scalar")
var a=this.parseName(),n=this.parseDirectives(!0)
if(0===n.length)throw this.unexpected()
return{kind:r.Kind.SCALAR_TYPE_EXTENSION,name:a,directives:n,loc:this.loc(e)}},a.parseObjectTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("type")
var a=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseDirectives(!0),t=this.parseFieldsDefinition()
if(0===n.length&&0===i.length&&0===t.length)throw this.unexpected()
return{kind:r.Kind.OBJECT_TYPE_EXTENSION,name:a,interfaces:n,directives:i,fields:t,loc:this.loc(e)}},a.parseInterfaceTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("interface")
var a=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseDirectives(!0),t=this.parseFieldsDefinition()
if(0===n.length&&0===i.length&&0===t.length)throw this.unexpected()
return{kind:r.Kind.INTERFACE_TYPE_EXTENSION,name:a,interfaces:n,directives:i,fields:t,loc:this.loc(e)}},a.parseUnionTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("union")
var a=this.parseName(),n=this.parseDirectives(!0),i=this.parseUnionMemberTypes()
if(0===n.length&&0===i.length)throw this.unexpected()
return{kind:r.Kind.UNION_TYPE_EXTENSION,name:a,directives:n,types:i,loc:this.loc(e)}},a.parseEnumTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("enum")
var a=this.parseName(),n=this.parseDirectives(!0),i=this.parseEnumValuesDefinition()
if(0===n.length&&0===i.length)throw this.unexpected()
return{kind:r.Kind.ENUM_TYPE_EXTENSION,name:a,directives:n,values:i,loc:this.loc(e)}},a.parseInputObjectTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("input")
var a=this.parseName(),n=this.parseDirectives(!0),i=this.parseInputFieldsDefinition()
if(0===n.length&&0===i.length)throw this.unexpected()
return{kind:r.Kind.INPUT_OBJECT_TYPE_EXTENSION,name:a,directives:n,fields:i,loc:this.loc(e)}},a.parseDirectiveDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("directive"),this.expectToken(o.TokenKind.AT)
var n=this.parseName(),i=this.parseArgumentDefs(),t=this.expectOptionalKeyword("repeatable")
this.expectKeyword("on")
var s=this.parseDirectiveLocations()
return{kind:r.Kind.DIRECTIVE_DEFINITION,description:a,name:n,arguments:i,repeatable:t,locations:s,loc:this.loc(e)}},a.parseDirectiveLocations=function(){return this.delimitedMany(o.TokenKind.PIPE,this.parseDirectiveLocation)},a.parseDirectiveLocation=function(){var e=this._lexer.token,a=this.parseName()
if(void 0!==l.DirectiveLocation[a.value])return a
throw this.unexpected(e)},a.loc=function(e){var a
if(!0!==(null===(a=this._options)||void 0===a?void 0:a.noLocation))return new t.Location(e,this._lexer.lastToken,this._lexer.source)},a.peek=function(e){return this._lexer.token.kind===e},a.expectToken=function(e){var a=this._lexer.token
if(a.kind===e)return this._lexer.advance(),a
throw(0,i.syntaxError)(this._lexer.source,a.start,"Expected ".concat(h(e),", found ").concat(d(a),"."))},a.expectOptionalToken=function(e){var a=this._lexer.token
if(a.kind===e)return this._lexer.advance(),a},a.expectKeyword=function(e){var a=this._lexer.token
if(a.kind!==o.TokenKind.NAME||a.value!==e)throw(0,i.syntaxError)(this._lexer.source,a.start,'Expected "'.concat(e,'", found ').concat(d(a),"."))
this._lexer.advance()},a.expectOptionalKeyword=function(e){var a=this._lexer.token
return a.kind===o.TokenKind.NAME&&a.value===e&&(this._lexer.advance(),!0)},a.unexpected=function(e){var a=null!=e?e:this._lexer.token
return(0,i.syntaxError)(this._lexer.source,a.start,"Unexpected ".concat(d(a),"."))},a.any=function(e,a,n){this.expectToken(e)
for(var i=[];!this.expectOptionalToken(n);)i.push(a.call(this))
return i},a.optionalMany=function(e,a,n){if(this.expectOptionalToken(e)){var i=[]
do{i.push(a.call(this))}while(!this.expectOptionalToken(n))
return i}return[]},a.many=function(e,a,n){this.expectToken(e)
var i=[]
do{i.push(a.call(this))}while(!this.expectOptionalToken(n))
return i},a.delimitedMany=function(e,a){this.expectOptionalToken(e)
var n=[]
do{n.push(a.call(this))}while(this.expectOptionalToken(e))
return n},e}()
function d(e){var a=e.value
return h(e.kind)+(null!=a?' "'.concat(a,'"'):"")}function h(e){return(0,u.isPunctuatorTokenKind)(e)?'"'.concat(e,'"'):e}a.Parser=c},2093:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.isDefinitionNode=function(e){return r(e)||t(e)||s(e)},a.isExecutableDefinitionNode=r,a.isSelectionNode=function(e){return e.kind===i.Kind.FIELD||e.kind===i.Kind.FRAGMENT_SPREAD||e.kind===i.Kind.INLINE_FRAGMENT},a.isValueNode=function(e){return e.kind===i.Kind.VARIABLE||e.kind===i.Kind.INT||e.kind===i.Kind.FLOAT||e.kind===i.Kind.STRING||e.kind===i.Kind.BOOLEAN||e.kind===i.Kind.NULL||e.kind===i.Kind.ENUM||e.kind===i.Kind.LIST||e.kind===i.Kind.OBJECT},a.isTypeNode=function(e){return e.kind===i.Kind.NAMED_TYPE||e.kind===i.Kind.LIST_TYPE||e.kind===i.Kind.NON_NULL_TYPE},a.isTypeSystemDefinitionNode=t,a.isTypeDefinitionNode=o,a.isTypeSystemExtensionNode=s,a.isTypeExtensionNode=l
var i=n(2734)
function r(e){return e.kind===i.Kind.OPERATION_DEFINITION||e.kind===i.Kind.FRAGMENT_DEFINITION}function t(e){return e.kind===i.Kind.SCHEMA_DEFINITION||o(e)||e.kind===i.Kind.DIRECTIVE_DEFINITION}function o(e){return e.kind===i.Kind.SCALAR_TYPE_DEFINITION||e.kind===i.Kind.OBJECT_TYPE_DEFINITION||e.kind===i.Kind.INTERFACE_TYPE_DEFINITION||e.kind===i.Kind.UNION_TYPE_DEFINITION||e.kind===i.Kind.ENUM_TYPE_DEFINITION||e.kind===i.Kind.INPUT_OBJECT_TYPE_DEFINITION}function s(e){return e.kind===i.Kind.SCHEMA_EXTENSION||l(e)}function l(e){return e.kind===i.Kind.SCALAR_TYPE_EXTENSION||e.kind===i.Kind.OBJECT_TYPE_EXTENSION||e.kind===i.Kind.INTERFACE_TYPE_EXTENSION||e.kind===i.Kind.UNION_TYPE_EXTENSION||e.kind===i.Kind.ENUM_TYPE_EXTENSION||e.kind===i.Kind.INPUT_OBJECT_TYPE_EXTENSION}},308:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.printLocation=function(e){return r(e.source,(0,i.getLocation)(e.source,e.start))},a.printSourceLocation=r
var i=n(2450)
function r(e,a){var n=e.locationOffset.column-1,i=o(n)+e.body,r=a.line-1,s=e.locationOffset.line-1,l=a.line+s,u=1===a.line?n:0,c=a.column+u,d="".concat(e.name,":").concat(l,":").concat(c,"\n"),h=i.split(/\r\n|[\n\r]/g),p=h[r]
if(p.length>120){for(var m=Math.floor(c/80),f=c%80,v=[],g=0;g<p.length;g+=80)v.push(p.slice(g,g+80))
return d+t([["".concat(l),v[0]]].concat(v.slice(1,m+1).map((function(e){return["",e]})),[[" ",o(f-1)+"^"],["",v[m+1]]]))}return d+t([["".concat(l-1),h[r-1]],["".concat(l),p],["",o(c-1)+"^"],["".concat(l+1),h[r+1]]])}function t(e){var a=e.filter((function(e){return e[0],void 0!==e[1]})),n=Math.max.apply(Math,a.map((function(e){return e[0].length})))
return a.map((function(e){var a,i=e[0],r=e[1]
return o(n-(a=i).length)+a+(r?" | "+r:" |")})).join("\n")}function o(e){return Array(e+1).join(" ")}},4723:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.print=function(e){return(0,i.visit)(e,{leave:t})}
var i=n(7146),r=n(3908),t={Name:function(e){return e.value},Variable:function(e){return"$"+e.name},Document:function(e){return s(e.definitions,"\n\n")+"\n"},OperationDefinition:function(e){var a=e.operation,n=e.name,i=u("(",s(e.variableDefinitions,", "),")"),r=s(e.directives," "),t=e.selectionSet
return n||r||i||"query"!==a?s([a,s([n,i]),r,t]," "):t},VariableDefinition:function(e){var a=e.variable,n=e.type,i=e.defaultValue,r=e.directives
return a+": "+n+u(" = ",i)+u(" ",s(r," "))},SelectionSet:function(e){return l(e.selections)},Field:function(e){var a=e.alias,n=e.name,i=e.arguments,r=e.directives,t=e.selectionSet,o=u("",a,": ")+n,l=o+u("(",s(i,", "),")")
return l.length>80&&(l=o+u("(\n",c(s(i,"\n")),"\n)")),s([l,s(r," "),t]," ")},Argument:function(e){return e.name+": "+e.value},FragmentSpread:function(e){return"..."+e.name+u(" ",s(e.directives," "))},InlineFragment:function(e){var a=e.typeCondition,n=e.directives,i=e.selectionSet
return s(["...",u("on ",a),s(n," "),i]," ")},FragmentDefinition:function(e){var a=e.name,n=e.typeCondition,i=e.variableDefinitions,r=e.directives,t=e.selectionSet
return"fragment ".concat(a).concat(u("(",s(i,", "),")")," ")+"on ".concat(n," ").concat(u("",s(r," ")," "))+t},IntValue:function(e){return e.value},FloatValue:function(e){return e.value},StringValue:function(e,a){var n=e.value
return e.block?(0,r.printBlockString)(n,"description"===a?"":"  "):JSON.stringify(n)},BooleanValue:function(e){return e.value?"true":"false"},NullValue:function(){return"null"},EnumValue:function(e){return e.value},ListValue:function(e){return"["+s(e.values,", ")+"]"},ObjectValue:function(e){return"{"+s(e.fields,", ")+"}"},ObjectField:function(e){return e.name+": "+e.value},Directive:function(e){return"@"+e.name+u("(",s(e.arguments,", "),")")},NamedType:function(e){return e.name},ListType:function(e){return"["+e.type+"]"},NonNullType:function(e){return e.type+"!"},SchemaDefinition:o((function(e){var a=e.directives,n=e.operationTypes
return s(["schema",s(a," "),l(n)]," ")})),OperationTypeDefinition:function(e){return e.operation+": "+e.type},ScalarTypeDefinition:o((function(e){return s(["scalar",e.name,s(e.directives," ")]," ")})),ObjectTypeDefinition:o((function(e){var a=e.name,n=e.interfaces,i=e.directives,r=e.fields
return s(["type",a,u("implements ",s(n," & ")),s(i," "),l(r)]," ")})),FieldDefinition:o((function(e){var a=e.name,n=e.arguments,i=e.type,r=e.directives
return a+(h(n)?u("(\n",c(s(n,"\n")),"\n)"):u("(",s(n,", "),")"))+": "+i+u(" ",s(r," "))})),InputValueDefinition:o((function(e){var a=e.name,n=e.type,i=e.defaultValue,r=e.directives
return s([a+": "+n,u("= ",i),s(r," ")]," ")})),InterfaceTypeDefinition:o((function(e){var a=e.name,n=e.interfaces,i=e.directives,r=e.fields
return s(["interface",a,u("implements ",s(n," & ")),s(i," "),l(r)]," ")})),UnionTypeDefinition:o((function(e){var a=e.name,n=e.directives,i=e.types
return s(["union",a,s(n," "),i&&0!==i.length?"= "+s(i," | "):""]," ")})),EnumTypeDefinition:o((function(e){var a=e.name,n=e.directives,i=e.values
return s(["enum",a,s(n," "),l(i)]," ")})),EnumValueDefinition:o((function(e){return s([e.name,s(e.directives," ")]," ")})),InputObjectTypeDefinition:o((function(e){var a=e.name,n=e.directives,i=e.fields
return s(["input",a,s(n," "),l(i)]," ")})),DirectiveDefinition:o((function(e){var a=e.name,n=e.arguments,i=e.repeatable,r=e.locations
return"directive @"+a+(h(n)?u("(\n",c(s(n,"\n")),"\n)"):u("(",s(n,", "),")"))+(i?" repeatable":"")+" on "+s(r," | ")})),SchemaExtension:function(e){var a=e.directives,n=e.operationTypes
return s(["extend schema",s(a," "),l(n)]," ")},ScalarTypeExtension:function(e){return s(["extend scalar",e.name,s(e.directives," ")]," ")},ObjectTypeExtension:function(e){var a=e.name,n=e.interfaces,i=e.directives,r=e.fields
return s(["extend type",a,u("implements ",s(n," & ")),s(i," "),l(r)]," ")},InterfaceTypeExtension:function(e){var a=e.name,n=e.interfaces,i=e.directives,r=e.fields
return s(["extend interface",a,u("implements ",s(n," & ")),s(i," "),l(r)]," ")},UnionTypeExtension:function(e){var a=e.name,n=e.directives,i=e.types
return s(["extend union",a,s(n," "),i&&0!==i.length?"= "+s(i," | "):""]," ")},EnumTypeExtension:function(e){var a=e.name,n=e.directives,i=e.values
return s(["extend enum",a,s(n," "),l(i)]," ")},InputObjectTypeExtension:function(e){var a=e.name,n=e.directives,i=e.fields
return s(["extend input",a,s(n," "),l(i)]," ")}}
function o(e){return function(a){return s([a.description,e(a)],"\n")}}function s(e){var a,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:""
return null!==(a=null==e?void 0:e.filter((function(e){return e})).join(n))&&void 0!==a?a:""}function l(e){return u("{\n",c(s(e,"\n")),"\n}")}function u(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:""
return null!=a&&""!==a?e+a+n:""}function c(e){return u("  ",e.replace(/\n/g,"\n  "))}function d(e){return-1!==e.indexOf("\n")}function h(e){return null!=e&&e.some(d)}},5786:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.isSource=function(e){return(0,o.default)(e,l)},a.Source=void 0
var i=n(4053),r=s(n(5925)),t=s(n(1789)),o=s(n(9894))
function s(e){return e&&e.__esModule?e:{default:e}}var l=function(){function e(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GraphQL request",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{line:1,column:1}
"string"==typeof e||(0,t.default)(0,"Body must be a string. Received: ".concat((0,r.default)(e),".")),this.body=e,this.name=a,this.locationOffset=n,this.locationOffset.line>0||(0,t.default)(0,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||(0,t.default)(0,"column in locationOffset is 1-indexed and must be positive.")}var a,n
return a=e,(n=[{key:i.SYMBOL_TO_STRING_TAG,get:function(){return"Source"}}])&&function(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}(a.prototype,n),e}()
a.Source=l},2795:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.TokenKind=void 0
var n=Object.freeze({SOF:"<SOF>",EOF:"<EOF>",BANG:"!",DOLLAR:"$",AMP:"&",PAREN_L:"(",PAREN_R:")",SPREAD:"...",COLON:":",EQUALS:"=",AT:"@",BRACKET_L:"[",BRACKET_R:"]",BRACE_L:"{",PIPE:"|",BRACE_R:"}",NAME:"Name",INT:"Int",FLOAT:"Float",STRING:"String",BLOCK_STRING:"BlockString",COMMENT:"Comment"})
a.TokenKind=n},7146:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.visit=function(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o,i=void 0,u=Array.isArray(e),c=[e],d=-1,h=[],p=void 0,m=void 0,f=void 0,v=[],g=[],k=e
do{var y=++d===c.length,b=y&&0!==h.length
if(y){if(m=0===g.length?void 0:v[v.length-1],p=f,f=g.pop(),b){if(u)p=p.slice()
else{for(var S={},A=0,M=Object.keys(p);A<M.length;A++){var T=M[A]
S[T]=p[T]}p=S}for(var _=0,w=0;w<h.length;w++){var j=h[w][0],E=h[w][1]
u&&(j-=_),u&&null===E?(p.splice(j,1),_++):p[j]=E}}d=i.index,c=i.keys,h=i.edits,u=i.inArray,i=i.prev}else{if(m=f?u?d:c[d]:void 0,null==(p=f?f[m]:k))continue
f&&v.push(m)}var N,B=void 0
if(!Array.isArray(p)){if(!(0,t.isNode)(p))throw new Error("Invalid AST Node: ".concat((0,r.default)(p),"."))
var P=l(a,p.kind,y)
if(P){if((B=P.call(a,p,m,f,v,g))===s)break
if(!1===B){if(!y){v.pop()
continue}}else if(void 0!==B&&(h.push([m,B]),!y)){if(!(0,t.isNode)(B)){v.pop()
continue}p=B}}}void 0===B&&b&&h.push([m,p]),y?v.pop():(i={inArray:u,index:d,keys:c,edits:h,prev:i},c=(u=Array.isArray(p))?p:null!==(N=n[p.kind])&&void 0!==N?N:[],d=-1,h=[],f&&g.push(f),f=p)}while(void 0!==i)
return 0!==h.length&&(k=h[h.length-1][1]),k},a.visitInParallel=function(e){var a=new Array(e.length)
return{enter:function(n){for(var i=0;i<e.length;i++)if(null==a[i]){var r=l(e[i],n.kind,!1)
if(r){var t=r.apply(e[i],arguments)
if(!1===t)a[i]=n
else if(t===s)a[i]=s
else if(void 0!==t)return t}}},leave:function(n){for(var i=0;i<e.length;i++)if(null==a[i]){var r=l(e[i],n.kind,!0)
if(r){var t=r.apply(e[i],arguments)
if(t===s)a[i]=s
else if(void 0!==t&&!1!==t)return t}}else a[i]===n&&(a[i]=null)}}},a.getVisitFn=l,a.BREAK=a.QueryDocumentKeys=void 0
var i,r=(i=n(5925))&&i.__esModule?i:{default:i},t=n(5059),o={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]}
a.QueryDocumentKeys=o
var s=Object.freeze({})
function l(e,a,n){var i=e[a]
if(i){if(!n&&"function"==typeof i)return i
var r=n?i.leave:i.enter
if("function"==typeof r)return r}else{var t=n?e.leave:e.enter
if(t){if("function"==typeof t)return t
var o=t[a]
if("function"==typeof o)return o}}}a.BREAK=s},6122:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0
var i=n(4053),r=Array.from||function(e,a,n){if(null==e)throw new TypeError("Array.from requires an array-like object - not null or undefined")
var r=e[i.SYMBOL_ITERATOR]
if("function"==typeof r){for(var t,o=r.call(e),s=[],l=0;!(t=o.next()).done;++l)if(s.push(a.call(n,t.value,l)),l>9999999)throw new TypeError("Near-infinite iteration.")
return s}var u=e.length
if("number"==typeof u&&u>=0&&u%1==0){for(var c=[],d=0;d<u;++d)Object.prototype.hasOwnProperty.call(e,d)&&c.push(a.call(n,e[d],d))
return c}return[]}
a.default=r},80:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0
var n=Array.prototype.find?function(e,a){return Array.prototype.find.call(e,a)}:function(e,a){for(var n=0;n<e.length;n++){var i=e[n]
if(a(i))return i}}
a.default=n},9791:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0
var n=Number.isFinite||function(e){return"number"==typeof e&&isFinite(e)}
a.default=n},8078:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0
var n=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e}
a.default=n},7365:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0
var n=Object.entries||function(e){return Object.keys(e).map((function(a){return[a,e[a]]}))}
a.default=n},6158:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0
var n=Object.values||function(e){return Object.keys(e).map((function(a){return e[a]}))}
a.default=n},4053:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.SYMBOL_TO_STRING_TAG=a.SYMBOL_ASYNC_ITERATOR=a.SYMBOL_ITERATOR=void 0
var n="function"==typeof Symbol&&null!=Symbol.iterator?Symbol.iterator:"@@iterator"
a.SYMBOL_ITERATOR=n
var i="function"==typeof Symbol&&null!=Symbol.asyncIterator?Symbol.asyncIterator:"@@asyncIterator"
a.SYMBOL_ASYNC_ITERATOR=i
var r="function"==typeof Symbol&&null!=Symbol.toStringTag?Symbol.toStringTag:"@@toStringTag"
a.SYMBOL_TO_STRING_TAG=r},764:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.isType=T,a.assertType=_,a.isScalarType=w,a.assertScalarType=function(e){if(!w(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL Scalar type."))
return e},a.isObjectType=j,a.assertObjectType=function(e){if(!j(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL Object type."))
return e},a.isInterfaceType=E,a.assertInterfaceType=function(e){if(!E(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL Interface type."))
return e},a.isUnionType=N,a.assertUnionType=function(e){if(!N(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL Union type."))
return e},a.isEnumType=B,a.assertEnumType=function(e){if(!B(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL Enum type."))
return e},a.isInputObjectType=P,a.assertInputObjectType=function(e){if(!P(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL Input Object type."))
return e},a.isListType=L,a.assertListType=function(e){if(!L(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL List type."))
return e},a.isNonNullType=D,a.assertNonNullType=function(e){if(!D(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL Non-Null type."))
return e},a.isInputType=x,a.assertInputType=function(e){if(!x(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL input type."))
return e},a.isOutputType=C,a.assertOutputType=function(e){if(!C(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL output type."))
return e},a.isLeafType=K,a.assertLeafType=function(e){if(!K(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL leaf type."))
return e},a.isCompositeType=R,a.assertCompositeType=function(e){if(!R(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL composite type."))
return e},a.isAbstractType=z,a.assertAbstractType=function(e){if(!z(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL abstract type."))
return e},a.GraphQLList=O,a.GraphQLNonNull=I,a.isWrappingType=V,a.assertWrappingType=function(e){if(!V(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL wrapping type."))
return e},a.isNullableType=G,a.assertNullableType=H,a.getNullableType=function(e){if(e)return D(e)?e.ofType:e},a.isNamedType=F,a.assertNamedType=function(e){if(!F(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL named type."))
return e},a.getNamedType=function(e){if(e){for(var a=e;V(a);)a=a.ofType
return a}},a.argsToArgsConfig=X,a.isRequiredArgument=function(e){return D(e.type)&&void 0===e.defaultValue},a.isRequiredInputField=function(e){return D(e.type)&&void 0===e.defaultValue},a.GraphQLInputObjectType=a.GraphQLEnumType=a.GraphQLUnionType=a.GraphQLInterfaceType=a.GraphQLObjectType=a.GraphQLScalarType=void 0
var i=S(n(7365)),r=n(4053),t=S(n(5925)),o=S(n(2944)),s=S(n(5098)),l=S(n(6910)),u=S(n(1789)),c=S(n(8013)),d=S(n(9894)),h=S(n(655)),p=S(n(2087)),m=S(n(9681)),f=S(n(907)),v=S(n(8586)),g=n(9736),k=n(2734),y=n(4723),b=n(4080)
function S(e){return e&&e.__esModule?e:{default:e}}function A(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function M(e,a,n){return a&&A(e.prototype,a),n&&A(e,n),e}function T(e){return w(e)||j(e)||E(e)||N(e)||B(e)||P(e)||L(e)||D(e)}function _(e){if(!T(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL type."))
return e}function w(e){return(0,d.default)(e,W)}function j(e){return(0,d.default)(e,Z)}function E(e){return(0,d.default)(e,ee)}function N(e){return(0,d.default)(e,ae)}function B(e){return(0,d.default)(e,ie)}function P(e){return(0,d.default)(e,te)}function L(e){return(0,d.default)(e,O)}function D(e){return(0,d.default)(e,I)}function x(e){return w(e)||B(e)||P(e)||V(e)&&x(e.ofType)}function C(e){return w(e)||j(e)||E(e)||N(e)||B(e)||V(e)&&C(e.ofType)}function K(e){return w(e)||B(e)}function R(e){return j(e)||E(e)||N(e)}function z(e){return E(e)||N(e)}function O(e){if(!(this instanceof O))return new O(e)
this.ofType=_(e)}function I(e){if(!(this instanceof I))return new I(e)
this.ofType=H(e)}function V(e){return L(e)||D(e)}function G(e){return T(e)&&!D(e)}function H(e){if(!G(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL nullable type."))
return e}function F(e){return w(e)||j(e)||E(e)||N(e)||B(e)||P(e)}function J(e){return"function"==typeof e?e():e}function U(e){return e&&e.length>0?e:void 0}O.prototype.toString=function(){return"["+String(this.ofType)+"]"},O.prototype.toJSON=function(){return this.toString()},Object.defineProperty(O.prototype,r.SYMBOL_TO_STRING_TAG,{get:function(){return"GraphQLList"}}),(0,f.default)(O),I.prototype.toString=function(){return String(this.ofType)+"!"},I.prototype.toJSON=function(){return this.toString()},Object.defineProperty(I.prototype,r.SYMBOL_TO_STRING_TAG,{get:function(){return"GraphQLNonNull"}}),(0,f.default)(I)
var W=function(){function e(e){var a,n,i,r=null!==(a=e.parseValue)&&void 0!==a?a:m.default
this.name=e.name,this.description=e.description,this.specifiedByUrl=e.specifiedByUrl,this.serialize=null!==(n=e.serialize)&&void 0!==n?n:m.default,this.parseValue=r,this.parseLiteral=null!==(i=e.parseLiteral)&&void 0!==i?i:function(e,a){return r((0,b.valueFromASTUntyped)(e,a))},this.extensions=e.extensions&&(0,l.default)(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=U(e.extensionASTNodes),"string"==typeof e.name||(0,u.default)(0,"Must provide name."),null==e.specifiedByUrl||"string"==typeof e.specifiedByUrl||(0,u.default)(0,"".concat(this.name,' must provide "specifiedByUrl" as a string, ')+"but got: ".concat((0,t.default)(e.specifiedByUrl),".")),null==e.serialize||"function"==typeof e.serialize||(0,u.default)(0,"".concat(this.name,' must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.')),e.parseLiteral&&("function"==typeof e.parseValue&&"function"==typeof e.parseLiteral||(0,u.default)(0,"".concat(this.name,' must provide both "parseValue" and "parseLiteral" functions.')))}var a=e.prototype
return a.toConfig=function(){var e
return{name:this.name,description:this.description,specifiedByUrl:this.specifiedByUrl,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},M(e,[{key:r.SYMBOL_TO_STRING_TAG,get:function(){return"GraphQLScalarType"}}]),e}()
a.GraphQLScalarType=W,(0,f.default)(W)
var Z=function(){function e(e){this.name=e.name,this.description=e.description,this.isTypeOf=e.isTypeOf,this.extensions=e.extensions&&(0,l.default)(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=U(e.extensionASTNodes),this._fields=Q.bind(void 0,e),this._interfaces=q.bind(void 0,e),"string"==typeof e.name||(0,u.default)(0,"Must provide name."),null==e.isTypeOf||"function"==typeof e.isTypeOf||(0,u.default)(0,"".concat(this.name,' must provide "isTypeOf" as a function, ')+"but got: ".concat((0,t.default)(e.isTypeOf),"."))}var a=e.prototype
return a.getFields=function(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields},a.getInterfaces=function(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces},a.toConfig=function(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:$(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes||[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},M(e,[{key:r.SYMBOL_TO_STRING_TAG,get:function(){return"GraphQLObjectType"}}]),e}()
function q(e){var a,n=null!==(a=J(e.interfaces))&&void 0!==a?a:[]
return Array.isArray(n)||(0,u.default)(0,"".concat(e.name," interfaces must be an Array or a function which returns an Array.")),n}function Q(e){var a=J(e.fields)
return Y(a)||(0,u.default)(0,"".concat(e.name," fields must be an object with field names as keys or a function which returns such an object.")),(0,s.default)(a,(function(a,n){var r
Y(a)||(0,u.default)(0,"".concat(e.name,".").concat(n," field config must be an object.")),!("isDeprecated"in a)||(0,u.default)(0,"".concat(e.name,".").concat(n,' should provide "deprecationReason" instead of "isDeprecated".')),null==a.resolve||"function"==typeof a.resolve||(0,u.default)(0,"".concat(e.name,".").concat(n," field resolver must be a function if ")+"provided, but got: ".concat((0,t.default)(a.resolve),"."))
var o=null!==(r=a.args)&&void 0!==r?r:{}
Y(o)||(0,u.default)(0,"".concat(e.name,".").concat(n," args must be an object with argument names as keys."))
var s=(0,i.default)(o).map((function(e){var a=e[0],n=e[1]
return{name:a,description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:n.extensions&&(0,l.default)(n.extensions),astNode:n.astNode}}))
return{name:n,description:a.description,type:a.type,args:s,resolve:a.resolve,subscribe:a.subscribe,isDeprecated:null!=a.deprecationReason,deprecationReason:a.deprecationReason,extensions:a.extensions&&(0,l.default)(a.extensions),astNode:a.astNode}}))}function Y(e){return(0,p.default)(e)&&!Array.isArray(e)}function $(e){return(0,s.default)(e,(function(e){return{description:e.description,type:e.type,args:X(e.args),resolve:e.resolve,subscribe:e.subscribe,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode}}))}function X(e){return(0,c.default)(e,(function(e){return e.name}),(function(e){return{description:e.description,type:e.type,defaultValue:e.defaultValue,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode}}))}a.GraphQLObjectType=Z,(0,f.default)(Z)
var ee=function(){function e(e){this.name=e.name,this.description=e.description,this.resolveType=e.resolveType,this.extensions=e.extensions&&(0,l.default)(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=U(e.extensionASTNodes),this._fields=Q.bind(void 0,e),this._interfaces=q.bind(void 0,e),"string"==typeof e.name||(0,u.default)(0,"Must provide name."),null==e.resolveType||"function"==typeof e.resolveType||(0,u.default)(0,"".concat(this.name,' must provide "resolveType" as a function, ')+"but got: ".concat((0,t.default)(e.resolveType),"."))}var a=e.prototype
return a.getFields=function(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields},a.getInterfaces=function(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces},a.toConfig=function(){var e
return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:$(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},M(e,[{key:r.SYMBOL_TO_STRING_TAG,get:function(){return"GraphQLInterfaceType"}}]),e}()
a.GraphQLInterfaceType=ee,(0,f.default)(ee)
var ae=function(){function e(e){this.name=e.name,this.description=e.description,this.resolveType=e.resolveType,this.extensions=e.extensions&&(0,l.default)(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=U(e.extensionASTNodes),this._types=ne.bind(void 0,e),"string"==typeof e.name||(0,u.default)(0,"Must provide name."),null==e.resolveType||"function"==typeof e.resolveType||(0,u.default)(0,"".concat(this.name,' must provide "resolveType" as a function, ')+"but got: ".concat((0,t.default)(e.resolveType),"."))}var a=e.prototype
return a.getTypes=function(){return"function"==typeof this._types&&(this._types=this._types()),this._types},a.toConfig=function(){var e
return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},M(e,[{key:r.SYMBOL_TO_STRING_TAG,get:function(){return"GraphQLUnionType"}}]),e}()
function ne(e){var a=J(e.types)
return Array.isArray(a)||(0,u.default)(0,"Must provide Array of types or a function which returns such an array for Union ".concat(e.name,".")),a}a.GraphQLUnionType=ae,(0,f.default)(ae)
var ie=function(){function e(e){var a,n
this.name=e.name,this.description=e.description,this.extensions=e.extensions&&(0,l.default)(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=U(e.extensionASTNodes),this._values=(a=this.name,Y(n=e.values)||(0,u.default)(0,"".concat(a," values must be an object with value names as keys.")),(0,i.default)(n).map((function(e){var n=e[0],i=e[1]
return Y(i)||(0,u.default)(0,"".concat(a,".").concat(n,' must refer to an object with a "value" key ')+"representing an internal value but got: ".concat((0,t.default)(i),".")),!("isDeprecated"in i)||(0,u.default)(0,"".concat(a,".").concat(n,' should provide "deprecationReason" instead of "isDeprecated".')),{name:n,description:i.description,value:void 0!==i.value?i.value:n,isDeprecated:null!=i.deprecationReason,deprecationReason:i.deprecationReason,extensions:i.extensions&&(0,l.default)(i.extensions),astNode:i.astNode}}))),this._valueLookup=new Map(this._values.map((function(e){return[e.value,e]}))),this._nameLookup=(0,o.default)(this._values,(function(e){return e.name})),"string"==typeof e.name||(0,u.default)(0,"Must provide name.")}var a=e.prototype
return a.getValues=function(){return this._values},a.getValue=function(e){return this._nameLookup[e]},a.serialize=function(e){var a=this._valueLookup.get(e)
if(void 0===a)throw new g.GraphQLError('Enum "'.concat(this.name,'" cannot represent value: ').concat((0,t.default)(e)))
return a.name},a.parseValue=function(e){if("string"!=typeof e){var a=(0,t.default)(e)
throw new g.GraphQLError('Enum "'.concat(this.name,'" cannot represent non-string value: ').concat(a,".")+re(this,a))}var n=this.getValue(e)
if(null==n)throw new g.GraphQLError('Value "'.concat(e,'" does not exist in "').concat(this.name,'" enum.')+re(this,e))
return n.value},a.parseLiteral=function(e,a){if(e.kind!==k.Kind.ENUM){var n=(0,y.print)(e)
throw new g.GraphQLError('Enum "'.concat(this.name,'" cannot represent non-enum value: ').concat(n,".")+re(this,n),e)}var i=this.getValue(e.value)
if(null==i){var r=(0,y.print)(e)
throw new g.GraphQLError('Value "'.concat(r,'" does not exist in "').concat(this.name,'" enum.')+re(this,r),e)}return i.value},a.toConfig=function(){var e,a=(0,c.default)(this.getValues(),(function(e){return e.name}),(function(e){return{description:e.description,value:e.value,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode}}))
return{name:this.name,description:this.description,values:a,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},M(e,[{key:r.SYMBOL_TO_STRING_TAG,get:function(){return"GraphQLEnumType"}}]),e}()
function re(e,a){var n=e.getValues().map((function(e){return e.name})),i=(0,v.default)(a,n)
return(0,h.default)("the enum value",i)}a.GraphQLEnumType=ie,(0,f.default)(ie)
var te=function(){function e(e){this.name=e.name,this.description=e.description,this.extensions=e.extensions&&(0,l.default)(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=U(e.extensionASTNodes),this._fields=oe.bind(void 0,e),"string"==typeof e.name||(0,u.default)(0,"Must provide name.")}var a=e.prototype
return a.getFields=function(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields},a.toConfig=function(){var e,a=(0,s.default)(this.getFields(),(function(e){return{description:e.description,type:e.type,defaultValue:e.defaultValue,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode}}))
return{name:this.name,description:this.description,fields:a,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},M(e,[{key:r.SYMBOL_TO_STRING_TAG,get:function(){return"GraphQLInputObjectType"}}]),e}()
function oe(e){var a=J(e.fields)
return Y(a)||(0,u.default)(0,"".concat(e.name," fields must be an object with field names as keys or a function which returns such an object.")),(0,s.default)(a,(function(a,n){return!("resolve"in a)||(0,u.default)(0,"".concat(e.name,".").concat(n," field has a resolve property, but Input Types cannot define resolvers.")),{name:n,description:a.description,type:a.type,defaultValue:a.defaultValue,deprecationReason:a.deprecationReason,extensions:a.extensions&&(0,l.default)(a.extensions),astNode:a.astNode}}))}a.GraphQLInputObjectType=te,(0,f.default)(te)},5845:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.isDirective=f,a.assertDirective=function(e){if(!f(e))throw new Error("Expected ".concat((0,t.default)(e)," to be a GraphQL directive."))
return e},a.isSpecifiedDirective=function(e){return A.some((function(a){return a.name===e.name}))},a.specifiedDirectives=a.GraphQLSpecifiedByDirective=a.GraphQLDeprecatedDirective=a.DEFAULT_DEPRECATION_REASON=a.GraphQLSkipDirective=a.GraphQLIncludeDirective=a.GraphQLDirective=void 0
var i=m(n(7365)),r=n(4053),t=m(n(5925)),o=m(n(6910)),s=m(n(1789)),l=m(n(9894)),u=m(n(2087)),c=m(n(907)),d=n(4899),h=n(4538),p=n(764)
function m(e){return e&&e.__esModule?e:{default:e}}function f(e){return(0,l.default)(e,v)}var v=function(){function e(e){var a,n
this.name=e.name,this.description=e.description,this.locations=e.locations,this.isRepeatable=null!==(a=e.isRepeatable)&&void 0!==a&&a,this.extensions=e.extensions&&(0,o.default)(e.extensions),this.astNode=e.astNode,e.name||(0,s.default)(0,"Directive must be named."),Array.isArray(e.locations)||(0,s.default)(0,"@".concat(e.name," locations must be an Array."))
var r=null!==(n=e.args)&&void 0!==n?n:{};(0,u.default)(r)&&!Array.isArray(r)||(0,s.default)(0,"@".concat(e.name," args must be an object with argument names as keys.")),this.args=(0,i.default)(r).map((function(e){var a=e[0],n=e[1]
return{name:a,description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:n.extensions&&(0,o.default)(n.extensions),astNode:n.astNode}}))}var a,n,t=e.prototype
return t.toConfig=function(){return{name:this.name,description:this.description,locations:this.locations,args:(0,p.argsToArgsConfig)(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}},t.toString=function(){return"@"+this.name},t.toJSON=function(){return this.toString()},a=e,(n=[{key:r.SYMBOL_TO_STRING_TAG,get:function(){return"GraphQLDirective"}}])&&function(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}(a.prototype,n),e}()
a.GraphQLDirective=v,(0,c.default)(v)
var g=new v({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[d.DirectiveLocation.FIELD,d.DirectiveLocation.FRAGMENT_SPREAD,d.DirectiveLocation.INLINE_FRAGMENT],args:{if:{type:new p.GraphQLNonNull(h.GraphQLBoolean),description:"Included when true."}}})
a.GraphQLIncludeDirective=g
var k=new v({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[d.DirectiveLocation.FIELD,d.DirectiveLocation.FRAGMENT_SPREAD,d.DirectiveLocation.INLINE_FRAGMENT],args:{if:{type:new p.GraphQLNonNull(h.GraphQLBoolean),description:"Skipped when true."}}})
a.GraphQLSkipDirective=k
var y="No longer supported"
a.DEFAULT_DEPRECATION_REASON=y
var b=new v({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[d.DirectiveLocation.FIELD_DEFINITION,d.DirectiveLocation.ARGUMENT_DEFINITION,d.DirectiveLocation.INPUT_FIELD_DEFINITION,d.DirectiveLocation.ENUM_VALUE],args:{reason:{type:h.GraphQLString,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:y}}})
a.GraphQLDeprecatedDirective=b
var S=new v({name:"specifiedBy",description:"Exposes a URL that specifies the behaviour of this scalar.",locations:[d.DirectiveLocation.SCALAR],args:{url:{type:new p.GraphQLNonNull(h.GraphQLString),description:"The URL that specifies the behaviour of this scalar."}}})
a.GraphQLSpecifiedByDirective=S
var A=Object.freeze([g,k,b,S])
a.specifiedDirectives=A},5251:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.isIntrospectionType=function(e){return T.some((function(a){var n=a.name
return e.name===n}))},a.introspectionTypes=a.TypeNameMetaFieldDef=a.TypeMetaFieldDef=a.SchemaMetaFieldDef=a.__TypeKind=a.TypeKind=a.__EnumValue=a.__InputValue=a.__Field=a.__Type=a.__DirectiveLocation=a.__Directive=a.__Schema=void 0
var i=d(n(6158)),r=d(n(5925)),t=d(n(8004)),o=n(4723),s=n(4899),l=n(2310),u=n(4538),c=n(764)
function d(e){return e&&e.__esModule?e:{default:e}}var h=new c.GraphQLObjectType({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:function(){return{description:{type:u.GraphQLString,resolve:function(e){return e.description}},types:{description:"A list of all types supported by this server.",type:new c.GraphQLNonNull(new c.GraphQLList(new c.GraphQLNonNull(f))),resolve:function(e){return(0,i.default)(e.getTypeMap())}},queryType:{description:"The type that query operations will be rooted at.",type:new c.GraphQLNonNull(f),resolve:function(e){return e.getQueryType()}},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:f,resolve:function(e){return e.getMutationType()}},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:f,resolve:function(e){return e.getSubscriptionType()}},directives:{description:"A list of all directives supported by this server.",type:new c.GraphQLNonNull(new c.GraphQLList(new c.GraphQLNonNull(p))),resolve:function(e){return e.getDirectives()}}}}})
a.__Schema=h
var p=new c.GraphQLObjectType({name:"__Directive",description:"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",fields:function(){return{name:{type:new c.GraphQLNonNull(u.GraphQLString),resolve:function(e){return e.name}},description:{type:u.GraphQLString,resolve:function(e){return e.description}},isRepeatable:{type:new c.GraphQLNonNull(u.GraphQLBoolean),resolve:function(e){return e.isRepeatable}},locations:{type:new c.GraphQLNonNull(new c.GraphQLList(new c.GraphQLNonNull(m))),resolve:function(e){return e.locations}},args:{type:new c.GraphQLNonNull(new c.GraphQLList(new c.GraphQLNonNull(g))),args:{includeDeprecated:{type:u.GraphQLBoolean,defaultValue:!1}},resolve:function(e,a){return a.includeDeprecated?e.args:e.args.filter((function(e){return null==e.deprecationReason}))}}}}})
a.__Directive=p
var m=new c.GraphQLEnumType({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:s.DirectiveLocation.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:s.DirectiveLocation.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:s.DirectiveLocation.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:s.DirectiveLocation.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:s.DirectiveLocation.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:s.DirectiveLocation.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:s.DirectiveLocation.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:s.DirectiveLocation.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:s.DirectiveLocation.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:s.DirectiveLocation.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:s.DirectiveLocation.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:s.DirectiveLocation.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:s.DirectiveLocation.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:s.DirectiveLocation.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:s.DirectiveLocation.UNION,description:"Location adjacent to a union definition."},ENUM:{value:s.DirectiveLocation.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:s.DirectiveLocation.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:s.DirectiveLocation.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:s.DirectiveLocation.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}})
a.__DirectiveLocation=m
var f=new c.GraphQLObjectType({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:function(){return{kind:{type:new c.GraphQLNonNull(b),resolve:function(e){return(0,c.isScalarType)(e)?y.SCALAR:(0,c.isObjectType)(e)?y.OBJECT:(0,c.isInterfaceType)(e)?y.INTERFACE:(0,c.isUnionType)(e)?y.UNION:(0,c.isEnumType)(e)?y.ENUM:(0,c.isInputObjectType)(e)?y.INPUT_OBJECT:(0,c.isListType)(e)?y.LIST:(0,c.isNonNullType)(e)?y.NON_NULL:void(0,t.default)(0,'Unexpected type: "'.concat((0,r.default)(e),'".'))}},name:{type:u.GraphQLString,resolve:function(e){return void 0!==e.name?e.name:void 0}},description:{type:u.GraphQLString,resolve:function(e){return void 0!==e.description?e.description:void 0}},specifiedByUrl:{type:u.GraphQLString,resolve:function(e){return void 0!==e.specifiedByUrl?e.specifiedByUrl:void 0}},fields:{type:new c.GraphQLList(new c.GraphQLNonNull(v)),args:{includeDeprecated:{type:u.GraphQLBoolean,defaultValue:!1}},resolve:function(e,a){var n=a.includeDeprecated
if((0,c.isObjectType)(e)||(0,c.isInterfaceType)(e)){var r=(0,i.default)(e.getFields())
return n?r:r.filter((function(e){return null==e.deprecationReason}))}}},interfaces:{type:new c.GraphQLList(new c.GraphQLNonNull(f)),resolve:function(e){if((0,c.isObjectType)(e)||(0,c.isInterfaceType)(e))return e.getInterfaces()}},possibleTypes:{type:new c.GraphQLList(new c.GraphQLNonNull(f)),resolve:function(e,a,n,i){var r=i.schema
if((0,c.isAbstractType)(e))return r.getPossibleTypes(e)}},enumValues:{type:new c.GraphQLList(new c.GraphQLNonNull(k)),args:{includeDeprecated:{type:u.GraphQLBoolean,defaultValue:!1}},resolve:function(e,a){var n=a.includeDeprecated
if((0,c.isEnumType)(e)){var i=e.getValues()
return n?i:i.filter((function(e){return null==e.deprecationReason}))}}},inputFields:{type:new c.GraphQLList(new c.GraphQLNonNull(g)),args:{includeDeprecated:{type:u.GraphQLBoolean,defaultValue:!1}},resolve:function(e,a){var n=a.includeDeprecated
if((0,c.isInputObjectType)(e)){var r=(0,i.default)(e.getFields())
return n?r:r.filter((function(e){return null==e.deprecationReason}))}}},ofType:{type:f,resolve:function(e){return void 0!==e.ofType?e.ofType:void 0}}}}})
a.__Type=f
var v=new c.GraphQLObjectType({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:function(){return{name:{type:new c.GraphQLNonNull(u.GraphQLString),resolve:function(e){return e.name}},description:{type:u.GraphQLString,resolve:function(e){return e.description}},args:{type:new c.GraphQLNonNull(new c.GraphQLList(new c.GraphQLNonNull(g))),args:{includeDeprecated:{type:u.GraphQLBoolean,defaultValue:!1}},resolve:function(e,a){return a.includeDeprecated?e.args:e.args.filter((function(e){return null==e.deprecationReason}))}},type:{type:new c.GraphQLNonNull(f),resolve:function(e){return e.type}},isDeprecated:{type:new c.GraphQLNonNull(u.GraphQLBoolean),resolve:function(e){return null!=e.deprecationReason}},deprecationReason:{type:u.GraphQLString,resolve:function(e){return e.deprecationReason}}}}})
a.__Field=v
var g=new c.GraphQLObjectType({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:function(){return{name:{type:new c.GraphQLNonNull(u.GraphQLString),resolve:function(e){return e.name}},description:{type:u.GraphQLString,resolve:function(e){return e.description}},type:{type:new c.GraphQLNonNull(f),resolve:function(e){return e.type}},defaultValue:{type:u.GraphQLString,description:"A GraphQL-formatted string representing the default value for this input value.",resolve:function(e){var a=e.type,n=e.defaultValue,i=(0,l.astFromValue)(n,a)
return i?(0,o.print)(i):null}},isDeprecated:{type:new c.GraphQLNonNull(u.GraphQLBoolean),resolve:function(e){return null!=e.deprecationReason}},deprecationReason:{type:u.GraphQLString,resolve:function(e){return e.deprecationReason}}}}})
a.__InputValue=g
var k=new c.GraphQLObjectType({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:function(){return{name:{type:new c.GraphQLNonNull(u.GraphQLString),resolve:function(e){return e.name}},description:{type:u.GraphQLString,resolve:function(e){return e.description}},isDeprecated:{type:new c.GraphQLNonNull(u.GraphQLBoolean),resolve:function(e){return null!=e.deprecationReason}},deprecationReason:{type:u.GraphQLString,resolve:function(e){return e.deprecationReason}}}}})
a.__EnumValue=k
var y=Object.freeze({SCALAR:"SCALAR",OBJECT:"OBJECT",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",INPUT_OBJECT:"INPUT_OBJECT",LIST:"LIST",NON_NULL:"NON_NULL"})
a.TypeKind=y
var b=new c.GraphQLEnumType({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:y.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:y.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:y.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:y.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:y.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:y.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:y.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:y.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}})
a.__TypeKind=b
var S={name:"__schema",type:new c.GraphQLNonNull(h),description:"Access the current type schema of this server.",args:[],resolve:function(e,a,n,i){return i.schema},isDeprecated:!1,deprecationReason:void 0,extensions:void 0,astNode:void 0}
a.SchemaMetaFieldDef=S
var A={name:"__type",type:f,description:"Request the type information of a single type.",args:[{name:"name",description:void 0,type:new c.GraphQLNonNull(u.GraphQLString),defaultValue:void 0,deprecationReason:void 0,extensions:void 0,astNode:void 0}],resolve:function(e,a,n,i){var r=a.name
return i.schema.getType(r)},isDeprecated:!1,deprecationReason:void 0,extensions:void 0,astNode:void 0}
a.TypeMetaFieldDef=A
var M={name:"__typename",type:new c.GraphQLNonNull(u.GraphQLString),description:"The name of the current Object type at runtime.",args:[],resolve:function(e,a,n,i){return i.parentType.name},isDeprecated:!1,deprecationReason:void 0,extensions:void 0,astNode:void 0}
a.TypeNameMetaFieldDef=M
var T=Object.freeze([h,p,m,f,v,g,k,b])
a.introspectionTypes=T},4538:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.isSpecifiedScalarType=function(e){return b.some((function(a){var n=a.name
return e.name===n}))},a.specifiedScalarTypes=a.GraphQLID=a.GraphQLBoolean=a.GraphQLString=a.GraphQLFloat=a.GraphQLInt=void 0
var i=d(n(9791)),r=d(n(8078)),t=d(n(5925)),o=d(n(2087)),s=n(2734),l=n(4723),u=n(9736),c=n(764)
function d(e){return e&&e.__esModule?e:{default:e}}var h=2147483647,p=-2147483648,m=new c.GraphQLScalarType({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize:function(e){var a=v(e)
if("boolean"==typeof a)return a?1:0
var n=a
if("string"==typeof a&&""!==a&&(n=Number(a)),!(0,r.default)(n))throw new u.GraphQLError("Int cannot represent non-integer value: ".concat((0,t.default)(a)))
if(n>h||n<p)throw new u.GraphQLError("Int cannot represent non 32-bit signed integer value: "+(0,t.default)(a))
return n},parseValue:function(e){if(!(0,r.default)(e))throw new u.GraphQLError("Int cannot represent non-integer value: ".concat((0,t.default)(e)))
if(e>h||e<p)throw new u.GraphQLError("Int cannot represent non 32-bit signed integer value: ".concat(e))
return e},parseLiteral:function(e){if(e.kind!==s.Kind.INT)throw new u.GraphQLError("Int cannot represent non-integer value: ".concat((0,l.print)(e)),e)
var a=parseInt(e.value,10)
if(a>h||a<p)throw new u.GraphQLError("Int cannot represent non 32-bit signed integer value: ".concat(e.value),e)
return a}})
a.GraphQLInt=m
var f=new c.GraphQLScalarType({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize:function(e){var a=v(e)
if("boolean"==typeof a)return a?1:0
var n=a
if("string"==typeof a&&""!==a&&(n=Number(a)),!(0,i.default)(n))throw new u.GraphQLError("Float cannot represent non numeric value: ".concat((0,t.default)(a)))
return n},parseValue:function(e){if(!(0,i.default)(e))throw new u.GraphQLError("Float cannot represent non numeric value: ".concat((0,t.default)(e)))
return e},parseLiteral:function(e){if(e.kind!==s.Kind.FLOAT&&e.kind!==s.Kind.INT)throw new u.GraphQLError("Float cannot represent non numeric value: ".concat((0,l.print)(e)),e)
return parseFloat(e.value)}})
function v(e){if((0,o.default)(e)){if("function"==typeof e.valueOf){var a=e.valueOf()
if(!(0,o.default)(a))return a}if("function"==typeof e.toJSON)return e.toJSON()}return e}a.GraphQLFloat=f
var g=new c.GraphQLScalarType({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize:function(e){var a=v(e)
if("string"==typeof a)return a
if("boolean"==typeof a)return a?"true":"false"
if((0,i.default)(a))return a.toString()
throw new u.GraphQLError("String cannot represent value: ".concat((0,t.default)(e)))},parseValue:function(e){if("string"!=typeof e)throw new u.GraphQLError("String cannot represent a non string value: ".concat((0,t.default)(e)))
return e},parseLiteral:function(e){if(e.kind!==s.Kind.STRING)throw new u.GraphQLError("String cannot represent a non string value: ".concat((0,l.print)(e)),e)
return e.value}})
a.GraphQLString=g
var k=new c.GraphQLScalarType({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize:function(e){var a=v(e)
if("boolean"==typeof a)return a
if((0,i.default)(a))return 0!==a
throw new u.GraphQLError("Boolean cannot represent a non boolean value: ".concat((0,t.default)(a)))},parseValue:function(e){if("boolean"!=typeof e)throw new u.GraphQLError("Boolean cannot represent a non boolean value: ".concat((0,t.default)(e)))
return e},parseLiteral:function(e){if(e.kind!==s.Kind.BOOLEAN)throw new u.GraphQLError("Boolean cannot represent a non boolean value: ".concat((0,l.print)(e)),e)
return e.value}})
a.GraphQLBoolean=k
var y=new c.GraphQLScalarType({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize:function(e){var a=v(e)
if("string"==typeof a)return a
if((0,r.default)(a))return String(a)
throw new u.GraphQLError("ID cannot represent value: ".concat((0,t.default)(e)))},parseValue:function(e){if("string"==typeof e)return e
if((0,r.default)(e))return e.toString()
throw new u.GraphQLError("ID cannot represent value: ".concat((0,t.default)(e)))},parseLiteral:function(e){if(e.kind!==s.Kind.STRING&&e.kind!==s.Kind.INT)throw new u.GraphQLError("ID cannot represent a non-string and non-integer value: "+(0,l.print)(e),e)
return e.value}})
a.GraphQLID=y
var b=Object.freeze([g,m,f,k,y])
a.specifiedScalarTypes=b},217:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.isSchema=v,a.assertSchema=function(e){if(!v(e))throw new Error("Expected ".concat((0,s.default)(e)," to be a GraphQL schema."))
return e},a.GraphQLSchema=void 0
var i=f(n(80)),r=f(n(6122)),t=f(n(6158)),o=n(4053),s=f(n(5925)),l=f(n(6910)),u=f(n(1789)),c=f(n(9894)),d=f(n(2087)),h=n(5251),p=n(5845),m=n(764)
function f(e){return e&&e.__esModule?e:{default:e}}function v(e){return(0,c.default)(e,g)}var g=function(){function e(e){var a
this.__validationErrors=!0===e.assumeValid?[]:void 0,(0,d.default)(e)||(0,u.default)(0,"Must provide configuration object."),!e.types||Array.isArray(e.types)||(0,u.default)(0,'"types" must be Array if provided but got: '.concat((0,s.default)(e.types),".")),!e.directives||Array.isArray(e.directives)||(0,u.default)(0,'"directives" must be Array if provided but got: '+"".concat((0,s.default)(e.directives),".")),this.description=e.description,this.extensions=e.extensions&&(0,l.default)(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes,this._queryType=e.query,this._mutationType=e.mutation,this._subscriptionType=e.subscription,this._directives=null!==(a=e.directives)&&void 0!==a?a:p.specifiedDirectives
var n=new Set(e.types)
if(null!=e.types)for(var i=0,t=e.types;i<t.length;i++){var o=t[i]
n.delete(o),k(o,n)}null!=this._queryType&&k(this._queryType,n),null!=this._mutationType&&k(this._mutationType,n),null!=this._subscriptionType&&k(this._subscriptionType,n)
for(var c=0,f=this._directives;c<f.length;c++){var v=f[c]
if((0,p.isDirective)(v))for(var g=0,y=v.args;g<y.length;g++)k(y[g].type,n)}k(h.__Schema,n),this._typeMap=Object.create(null),this._subTypeMap=Object.create(null),this._implementationsMap=Object.create(null)
for(var b=0,S=(0,r.default)(n);b<S.length;b++){var A=S[b]
if(null!=A){var M=A.name
if(M||(0,u.default)(0,"One of the provided types for building the Schema is missing a name."),void 0!==this._typeMap[M])throw new Error('Schema must contain uniquely named types but contains multiple types named "'.concat(M,'".'))
if(this._typeMap[M]=A,(0,m.isInterfaceType)(A))for(var T=0,_=A.getInterfaces();T<_.length;T++){var w=_[T]
if((0,m.isInterfaceType)(w)){var j=this._implementationsMap[w.name]
void 0===j&&(j=this._implementationsMap[w.name]={objects:[],interfaces:[]}),j.interfaces.push(A)}}else if((0,m.isObjectType)(A))for(var E=0,N=A.getInterfaces();E<N.length;E++){var B=N[E]
if((0,m.isInterfaceType)(B)){var P=this._implementationsMap[B.name]
void 0===P&&(P=this._implementationsMap[B.name]={objects:[],interfaces:[]}),P.objects.push(A)}}}}}var a,n,c=e.prototype
return c.getQueryType=function(){return this._queryType},c.getMutationType=function(){return this._mutationType},c.getSubscriptionType=function(){return this._subscriptionType},c.getTypeMap=function(){return this._typeMap},c.getType=function(e){return this.getTypeMap()[e]},c.getPossibleTypes=function(e){return(0,m.isUnionType)(e)?e.getTypes():this.getImplementations(e).objects},c.getImplementations=function(e){var a=this._implementationsMap[e.name]
return null!=a?a:{objects:[],interfaces:[]}},c.isPossibleType=function(e,a){return this.isSubType(e,a)},c.isSubType=function(e,a){var n=this._subTypeMap[e.name]
if(void 0===n){if(n=Object.create(null),(0,m.isUnionType)(e))for(var i=0,r=e.getTypes();i<r.length;i++)n[r[i].name]=!0
else{for(var t=this.getImplementations(e),o=0,s=t.objects;o<s.length;o++)n[s[o].name]=!0
for(var l=0,u=t.interfaces;l<u.length;l++)n[u[l].name]=!0}this._subTypeMap[e.name]=n}return void 0!==n[a.name]},c.getDirectives=function(){return this._directives},c.getDirective=function(e){return(0,i.default)(this.getDirectives(),(function(a){return a.name===e}))},c.toConfig=function(){var e
return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:(0,t.default)(this.getTypeMap()),directives:this.getDirectives().slice(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[],assumeValid:void 0!==this.__validationErrors}},a=e,(n=[{key:o.SYMBOL_TO_STRING_TAG,get:function(){return"GraphQLSchema"}}])&&function(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}(a.prototype,n),e}()
function k(e,a){var n=(0,m.getNamedType)(e)
if(!a.has(n))if(a.add(n),(0,m.isUnionType)(n))for(var i=0,r=n.getTypes();i<r.length;i++)k(r[i],a)
else if((0,m.isObjectType)(n)||(0,m.isInterfaceType)(n)){for(var o=0,s=n.getInterfaces();o<s.length;o++)k(s[o],a)
for(var l=0,u=(0,t.default)(n.getFields());l<u.length;l++){var c=u[l]
k(c.type,a)
for(var d=0,h=c.args;d<h.length;d++)k(h[d].type,a)}}else if((0,m.isInputObjectType)(n))for(var p=0,f=(0,t.default)(n.getFields());p<f.length;p++)k(f[p].type,a)
return a}a.GraphQLSchema=g},1368:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.validateSchema=f,a.assertValidSchema=function(e){var a=f(e)
if(0!==a.length)throw new Error(a.map((function(e){return e.message})).join("\n\n"))}
var i=m(n(80)),r=m(n(6158)),t=m(n(5925)),o=n(9736),s=n(4066),l=n(2207),u=n(3529),c=n(217),d=n(5251),h=n(5845),p=n(764)
function m(e){return e&&e.__esModule?e:{default:e}}function f(e){if((0,c.assertSchema)(e),e.__validationErrors)return e.__validationErrors
var a=new v(e)
!function(e){var a,n=e.schema,i=n.getQueryType()
i?(0,p.isObjectType)(i)||e.reportError("Query root type must be Object type, it cannot be ".concat((0,t.default)(i),"."),null!==(a=g(n,"query"))&&void 0!==a?a:i.astNode):e.reportError("Query root type must be provided.",n.astNode)
var r,o=n.getMutationType()
o&&!(0,p.isObjectType)(o)&&e.reportError("Mutation root type must be Object type if provided, it cannot be "+"".concat((0,t.default)(o),"."),null!==(r=g(n,"mutation"))&&void 0!==r?r:o.astNode)
var s,l=n.getSubscriptionType()
l&&!(0,p.isObjectType)(l)&&e.reportError("Subscription root type must be Object type if provided, it cannot be "+"".concat((0,t.default)(l),"."),null!==(s=g(n,"subscription"))&&void 0!==s?s:l.astNode)}(a),function(e){for(var a=0,n=e.schema.getDirectives();a<n.length;a++){var i=n[a]
if((0,h.isDirective)(i)){k(e,i)
for(var r=0,o=i.args;r<o.length;r++){var s,l=o[r]
k(e,l),(0,p.isInputType)(l.type)||e.reportError("The type of @".concat(i.name,"(").concat(l.name,":) must be Input Type ")+"but got: ".concat((0,t.default)(l.type),"."),l.astNode),(0,p.isRequiredArgument)(l)&&null!=l.deprecationReason&&e.reportError("Required argument @".concat(i.name,"(").concat(l.name,":) cannot be deprecated."),[B(l.astNode),null===(s=l.astNode)||void 0===s?void 0:s.type])}}else e.reportError("Expected directive but got: ".concat((0,t.default)(i),"."),null==i?void 0:i.astNode)}}(a),function(e){for(var a=function(e){var a=Object.create(null),n=[],i=Object.create(null)
return function t(o){if(!a[o.name]){a[o.name]=!0,i[o.name]=n.length
for(var s=(0,r.default)(o.getFields()),l=0;l<s.length;l++){var u=s[l]
if((0,p.isNonNullType)(u.type)&&(0,p.isInputObjectType)(u.type.ofType)){var c=u.type.ofType,d=i[c.name]
if(n.push(u),void 0===d)t(c)
else{var h=n.slice(d),m=h.map((function(e){return e.name})).join(".")
e.reportError('Cannot reference Input Object "'.concat(c.name,'" within itself through a series of non-null fields: "').concat(m,'".'),h.map((function(e){return e.astNode})))}n.pop()}}i[o.name]=void 0}}}(e),n=e.schema.getTypeMap(),i=0,o=(0,r.default)(n);i<o.length;i++){var s=o[i];(0,p.isNamedType)(s)?((0,d.isIntrospectionType)(s)||k(e,s),(0,p.isObjectType)(s)||(0,p.isInterfaceType)(s)?(y(e,s),b(e,s)):(0,p.isUnionType)(s)?M(e,s):(0,p.isEnumType)(s)?T(e,s):(0,p.isInputObjectType)(s)&&(_(e,s),a(s))):e.reportError("Expected GraphQL named type but got: ".concat((0,t.default)(s),"."),s.astNode)}}(a)
var n=a.getErrors()
return e.__validationErrors=n,n}var v=function(){function e(e){this._errors=[],this.schema=e}var a=e.prototype
return a.reportError=function(e,a){var n=Array.isArray(a)?a.filter(Boolean):a
this.addError(new o.GraphQLError(e,n))},a.addError=function(e){this._errors.push(e)},a.getErrors=function(){return this._errors},e}()
function g(e,a){for(var n=j(e,(function(e){return e.operationTypes})),i=0;i<n.length;i++){var r=n[i]
if(r.operation===a)return r.type}}function k(e,a){var n=(0,l.isValidNameError)(a.name)
n&&e.addError((0,s.locatedError)(n,a.astNode))}function y(e,a){var n=(0,r.default)(a.getFields())
0===n.length&&e.reportError("Type ".concat(a.name," must define one or more fields."),w(a))
for(var i=0;i<n.length;i++){var o,s=n[i]
k(e,s),(0,p.isOutputType)(s.type)||e.reportError("The type of ".concat(a.name,".").concat(s.name," must be Output Type ")+"but got: ".concat((0,t.default)(s.type),"."),null===(o=s.astNode)||void 0===o?void 0:o.type)
for(var l=0,u=s.args;l<u.length;l++){var c,d,h=u[l],m=h.name
k(e,h),(0,p.isInputType)(h.type)||e.reportError("The type of ".concat(a.name,".").concat(s.name,"(").concat(m,":) must be Input ")+"Type but got: ".concat((0,t.default)(h.type),"."),null===(c=h.astNode)||void 0===c?void 0:c.type),(0,p.isRequiredArgument)(h)&&null!=h.deprecationReason&&e.reportError("Required argument ".concat(a.name,".").concat(s.name,"(").concat(m,":) cannot be deprecated."),[B(h.astNode),null===(d=h.astNode)||void 0===d?void 0:d.type])}}}function b(e,a){for(var n=Object.create(null),i=0,r=a.getInterfaces();i<r.length;i++){var o=r[i];(0,p.isInterfaceType)(o)?a!==o?n[o.name]?e.reportError("Type ".concat(a.name," can only implement ").concat(o.name," once."),E(a,o)):(n[o.name]=!0,A(e,a,o),S(e,a,o)):e.reportError("Type ".concat(a.name," cannot implement itself because it would create a circular reference."),E(a,o)):e.reportError("Type ".concat((0,t.default)(a)," must only implement Interface types, ")+"it cannot implement ".concat((0,t.default)(o),"."),E(a,o))}}function S(e,a,n){for(var o=a.getFields(),s=0,l=(0,r.default)(n.getFields());s<l.length;s++){var c=l[s],d=c.name,h=o[d]
if(h){var m,f;(0,u.isTypeSubTypeOf)(e.schema,h.type,c.type)||e.reportError("Interface field ".concat(n.name,".").concat(d," expects type ")+"".concat((0,t.default)(c.type)," but ").concat(a.name,".").concat(d," ")+"is type ".concat((0,t.default)(h.type),"."),[null===(m=c.astNode)||void 0===m?void 0:m.type,null===(f=h.astNode)||void 0===f?void 0:f.type])
for(var v=function(r,o){var s,l,c=o[r],p=c.name,m=(0,i.default)(h.args,(function(e){return e.name===p}))
if(!m)return e.reportError("Interface field argument ".concat(n.name,".").concat(d,"(").concat(p,":) expected but ").concat(a.name,".").concat(d," does not provide it."),[c.astNode,h.astNode]),"continue";(0,u.isEqualType)(c.type,m.type)||e.reportError("Interface field argument ".concat(n.name,".").concat(d,"(").concat(p,":) ")+"expects type ".concat((0,t.default)(c.type)," but ")+"".concat(a.name,".").concat(d,"(").concat(p,":) is type ")+"".concat((0,t.default)(m.type),"."),[null===(s=c.astNode)||void 0===s?void 0:s.type,null===(l=m.astNode)||void 0===l?void 0:l.type])},g=0,k=c.args;g<k.length;g++)v(g,k)
for(var y=function(r,t){var o=t[r],s=o.name
!(0,i.default)(c.args,(function(e){return e.name===s}))&&(0,p.isRequiredArgument)(o)&&e.reportError("Object field ".concat(a.name,".").concat(d," includes required argument ").concat(s," that is missing from the Interface field ").concat(n.name,".").concat(d,"."),[o.astNode,c.astNode])},b=0,S=h.args;b<S.length;b++)y(b,S)}else e.reportError("Interface field ".concat(n.name,".").concat(d," expected but ").concat(a.name," does not provide it."),[c.astNode].concat(w(a)))}}function A(e,a,n){for(var i=a.getInterfaces(),r=0,t=n.getInterfaces();r<t.length;r++){var o=t[r];-1===i.indexOf(o)&&e.reportError(o===a?"Type ".concat(a.name," cannot implement ").concat(n.name," because it would create a circular reference."):"Type ".concat(a.name," must implement ").concat(o.name," because it is implemented by ").concat(n.name,"."),[].concat(E(n,o),E(a,n)))}}function M(e,a){var n=a.getTypes()
0===n.length&&e.reportError("Union type ".concat(a.name," must define one or more member types."),w(a))
for(var i=Object.create(null),r=0;r<n.length;r++){var o=n[r]
i[o.name]?e.reportError("Union type ".concat(a.name," can only include type ").concat(o.name," once."),N(a,o.name)):(i[o.name]=!0,(0,p.isObjectType)(o)||e.reportError("Union type ".concat(a.name," can only include Object types, ")+"it cannot include ".concat((0,t.default)(o),"."),N(a,String(o))))}}function T(e,a){var n=a.getValues()
0===n.length&&e.reportError("Enum type ".concat(a.name," must define one or more values."),w(a))
for(var i=0;i<n.length;i++){var r=n[i],t=r.name
k(e,r),"true"!==t&&"false"!==t&&"null"!==t||e.reportError("Enum type ".concat(a.name," cannot include value: ").concat(t,"."),r.astNode)}}function _(e,a){var n=(0,r.default)(a.getFields())
0===n.length&&e.reportError("Input Object type ".concat(a.name," must define one or more fields."),w(a))
for(var i=0;i<n.length;i++){var o,s,l=n[i]
k(e,l),(0,p.isInputType)(l.type)||e.reportError("The type of ".concat(a.name,".").concat(l.name," must be Input Type ")+"but got: ".concat((0,t.default)(l.type),"."),null===(o=l.astNode)||void 0===o?void 0:o.type),(0,p.isRequiredInputField)(l)&&null!=l.deprecationReason&&e.reportError("Required input field ".concat(a.name,".").concat(l.name," cannot be deprecated."),[B(l.astNode),null===(s=l.astNode)||void 0===s?void 0:s.type])}}function w(e){var a=e.astNode,n=e.extensionASTNodes
return a?n?[a].concat(n):[a]:null!=n?n:[]}function j(e,a){for(var n=[],i=0,r=w(e);i<r.length;i++){var t,o=r[i]
n=n.concat(null!==(t=a(o))&&void 0!==t?t:[])}return n}function E(e,a){return j(e,(function(e){return e.interfaces})).filter((function(e){return e.name.value===a.name}))}function N(e,a){return j(e,(function(e){return e.types})).filter((function(e){return e.name.value===a}))}function B(e){var a
return null==e||null===(a=e.directives)||void 0===a?void 0:a.find((function(e){return e.name.value===h.GraphQLDeprecatedDirective.name}))}},11:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.visitWithTypeInfo=function(e,a){return{enter:function(n){e.enter(n)
var i=(0,s.getVisitFn)(a,n.kind,!1)
if(i){var r=i.apply(a,arguments)
return void 0!==r&&(e.leave(n),(0,o.isNode)(r)&&e.enter(r)),r}},leave:function(n){var i,r=(0,s.getVisitFn)(a,n.kind,!0)
return r&&(i=r.apply(a,arguments)),e.leave(n),i}}},a.TypeInfo=void 0
var i,r=(i=n(80))&&i.__esModule?i:{default:i},t=n(2734),o=n(5059),s=n(7146),l=n(764),u=n(5251),c=n(8802),d=function(){function e(e,a,n){this._schema=e,this._typeStack=[],this._parentTypeStack=[],this._inputTypeStack=[],this._fieldDefStack=[],this._defaultValueStack=[],this._directive=null,this._argument=null,this._enumValue=null,this._getFieldDef=null!=a?a:h,n&&((0,l.isInputType)(n)&&this._inputTypeStack.push(n),(0,l.isCompositeType)(n)&&this._parentTypeStack.push(n),(0,l.isOutputType)(n)&&this._typeStack.push(n))}var a=e.prototype
return a.getType=function(){if(this._typeStack.length>0)return this._typeStack[this._typeStack.length-1]},a.getParentType=function(){if(this._parentTypeStack.length>0)return this._parentTypeStack[this._parentTypeStack.length-1]},a.getInputType=function(){if(this._inputTypeStack.length>0)return this._inputTypeStack[this._inputTypeStack.length-1]},a.getParentInputType=function(){if(this._inputTypeStack.length>1)return this._inputTypeStack[this._inputTypeStack.length-2]},a.getFieldDef=function(){if(this._fieldDefStack.length>0)return this._fieldDefStack[this._fieldDefStack.length-1]},a.getDefaultValue=function(){if(this._defaultValueStack.length>0)return this._defaultValueStack[this._defaultValueStack.length-1]},a.getDirective=function(){return this._directive},a.getArgument=function(){return this._argument},a.getEnumValue=function(){return this._enumValue},a.enter=function(e){var a=this._schema
switch(e.kind){case t.Kind.SELECTION_SET:var n=(0,l.getNamedType)(this.getType())
this._parentTypeStack.push((0,l.isCompositeType)(n)?n:void 0)
break
case t.Kind.FIELD:var i,o,s=this.getParentType()
s&&(i=this._getFieldDef(a,s,e))&&(o=i.type),this._fieldDefStack.push(i),this._typeStack.push((0,l.isOutputType)(o)?o:void 0)
break
case t.Kind.DIRECTIVE:this._directive=a.getDirective(e.name.value)
break
case t.Kind.OPERATION_DEFINITION:var u
switch(e.operation){case"query":u=a.getQueryType()
break
case"mutation":u=a.getMutationType()
break
case"subscription":u=a.getSubscriptionType()}this._typeStack.push((0,l.isObjectType)(u)?u:void 0)
break
case t.Kind.INLINE_FRAGMENT:case t.Kind.FRAGMENT_DEFINITION:var d=e.typeCondition,h=d?(0,c.typeFromAST)(a,d):(0,l.getNamedType)(this.getType())
this._typeStack.push((0,l.isOutputType)(h)?h:void 0)
break
case t.Kind.VARIABLE_DEFINITION:var p=(0,c.typeFromAST)(a,e.type)
this._inputTypeStack.push((0,l.isInputType)(p)?p:void 0)
break
case t.Kind.ARGUMENT:var m,f,v,g=null!==(m=this.getDirective())&&void 0!==m?m:this.getFieldDef()
g&&(f=(0,r.default)(g.args,(function(a){return a.name===e.name.value})))&&(v=f.type),this._argument=f,this._defaultValueStack.push(f?f.defaultValue:void 0),this._inputTypeStack.push((0,l.isInputType)(v)?v:void 0)
break
case t.Kind.LIST:var k=(0,l.getNullableType)(this.getInputType()),y=(0,l.isListType)(k)?k.ofType:k
this._defaultValueStack.push(void 0),this._inputTypeStack.push((0,l.isInputType)(y)?y:void 0)
break
case t.Kind.OBJECT_FIELD:var b,S,A=(0,l.getNamedType)(this.getInputType());(0,l.isInputObjectType)(A)&&(S=A.getFields()[e.name.value])&&(b=S.type),this._defaultValueStack.push(S?S.defaultValue:void 0),this._inputTypeStack.push((0,l.isInputType)(b)?b:void 0)
break
case t.Kind.ENUM:var M,T=(0,l.getNamedType)(this.getInputType());(0,l.isEnumType)(T)&&(M=T.getValue(e.value)),this._enumValue=M}},a.leave=function(e){switch(e.kind){case t.Kind.SELECTION_SET:this._parentTypeStack.pop()
break
case t.Kind.FIELD:this._fieldDefStack.pop(),this._typeStack.pop()
break
case t.Kind.DIRECTIVE:this._directive=null
break
case t.Kind.OPERATION_DEFINITION:case t.Kind.INLINE_FRAGMENT:case t.Kind.FRAGMENT_DEFINITION:this._typeStack.pop()
break
case t.Kind.VARIABLE_DEFINITION:this._inputTypeStack.pop()
break
case t.Kind.ARGUMENT:this._argument=null,this._defaultValueStack.pop(),this._inputTypeStack.pop()
break
case t.Kind.LIST:case t.Kind.OBJECT_FIELD:this._defaultValueStack.pop(),this._inputTypeStack.pop()
break
case t.Kind.ENUM:this._enumValue=null}},e}()
function h(e,a,n){var i=n.name.value
return i===u.SchemaMetaFieldDef.name&&e.getQueryType()===a?u.SchemaMetaFieldDef:i===u.TypeMetaFieldDef.name&&e.getQueryType()===a?u.TypeMetaFieldDef:i===u.TypeNameMetaFieldDef.name&&(0,l.isCompositeType)(a)?u.TypeNameMetaFieldDef:(0,l.isObjectType)(a)||(0,l.isInterfaceType)(a)?a.getFields()[i]:void 0}a.TypeInfo=d},2207:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.assertValidName=function(e){var a=s(e)
if(a)throw a
return e},a.isValidNameError=s
var i,r=(i=n(1789))&&i.__esModule?i:{default:i},t=n(9736),o=/^[_a-zA-Z][_a-zA-Z0-9]*$/
function s(e){return"string"==typeof e||(0,r.default)(0,"Expected name to be a string."),e.length>1&&"_"===e[0]&&"_"===e[1]?new t.GraphQLError('Name "'.concat(e,'" must not begin with "__", which is reserved by GraphQL introspection.')):o.test(e)?void 0:new t.GraphQLError('Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but "'.concat(e,'" does not.'))}},2310:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.astFromValue=function e(a,n){if((0,d.isNonNullType)(n)){var h=e(a,n.ofType)
return(null==h?void 0:h.kind)===u.Kind.NULL?null:h}if(null===a)return{kind:u.Kind.NULL}
if(void 0===a)return null
if((0,d.isListType)(n)){var m=n.ofType,f=(0,l.default)(a)
if(null!=f){for(var v=[],g=0;g<f.length;g++){var k=e(f[g],m)
null!=k&&v.push(k)}return{kind:u.Kind.LIST,values:v}}return e(a,m)}if((0,d.isInputObjectType)(n)){if(!(0,s.default)(a))return null
for(var y=[],b=0,S=(0,r.default)(n.getFields());b<S.length;b++){var A=S[b],M=e(a[A.name],A.type)
M&&y.push({kind:u.Kind.OBJECT_FIELD,name:{kind:u.Kind.NAME,value:A.name},value:M})}return{kind:u.Kind.OBJECT,fields:y}}if((0,d.isLeafType)(n)){var T=n.serialize(a)
if(null==T)return null
if("boolean"==typeof T)return{kind:u.Kind.BOOLEAN,value:T}
if("number"==typeof T&&(0,i.default)(T)){var _=String(T)
return p.test(_)?{kind:u.Kind.INT,value:_}:{kind:u.Kind.FLOAT,value:_}}if("string"==typeof T)return(0,d.isEnumType)(n)?{kind:u.Kind.ENUM,value:T}:n===c.GraphQLID&&p.test(T)?{kind:u.Kind.INT,value:T}:{kind:u.Kind.STRING,value:T}
throw new TypeError("Cannot convert value to AST: ".concat((0,t.default)(T),"."))}(0,o.default)(0,"Unexpected input type: "+(0,t.default)(n))}
var i=h(n(9791)),r=h(n(6158)),t=h(n(5925)),o=h(n(8004)),s=h(n(2087)),l=h(n(2178)),u=n(2734),c=n(4538),d=n(764)
function h(e){return e&&e.__esModule?e:{default:e}}var p=/^-?(?:0|[1-9][0-9]*)$/},3285:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.buildASTSchema=d,a.buildSchema=function(e,a){return d((0,o.parse)(e,{noLocation:null==a?void 0:a.noLocation,allowLegacySDLEmptyFields:null==a?void 0:a.allowLegacySDLEmptyFields,allowLegacySDLImplementsInterfaces:null==a?void 0:a.allowLegacySDLImplementsInterfaces,experimentalFragmentVariables:null==a?void 0:a.experimentalFragmentVariables}),{commentDescriptions:null==a?void 0:a.commentDescriptions,assumeValidSDL:null==a?void 0:a.assumeValidSDL,assumeValid:null==a?void 0:a.assumeValid})}
var i,r=(i=n(1789))&&i.__esModule?i:{default:i},t=n(2734),o=n(54),s=n(8345),l=n(217),u=n(5845),c=n(5481)
function d(e,a){null!=e&&e.kind===t.Kind.DOCUMENT||(0,r.default)(0,"Must provide valid Document AST."),!0!==(null==a?void 0:a.assumeValid)&&!0!==(null==a?void 0:a.assumeValidSDL)&&(0,s.assertValidSDL)(e)
var n=(0,c.extendSchemaImpl)({description:void 0,types:[],directives:[],extensions:void 0,extensionASTNodes:[],assumeValid:!1},e,a)
if(null==n.astNode)for(var i=0,o=n.types;i<o.length;i++){var d=o[i]
switch(d.name){case"Query":n.query=d
break
case"Mutation":n.mutation=d
break
case"Subscription":n.subscription=d}}for(var h=n.directives,p=function(e){var a=u.specifiedDirectives[e]
h.every((function(e){return e.name!==a.name}))&&h.push(a)},m=0;m<u.specifiedDirectives.length;m++)p(m)
return new l.GraphQLSchema(n)}},6099:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.buildClientSchema=function(e,a){(0,s.default)(e)&&(0,s.default)(e.__schema)||(0,t.default)(0,'Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: '.concat((0,r.default)(e),"."))
for(var n=e.__schema,f=(0,o.default)(n.types,(function(e){return e.name}),(function(e){return function(e){if(null!=e&&null!=e.name&&null!=e.kind)switch(e.kind){case h.TypeKind.SCALAR:return i=e,new p.GraphQLScalarType({name:i.name,description:i.description,specifiedByUrl:i.specifiedByUrl})
case h.TypeKind.OBJECT:return n=e,new p.GraphQLObjectType({name:n.name,description:n.description,interfaces:function(){return j(n)},fields:function(){return E(n)}})
case h.TypeKind.INTERFACE:return a=e,new p.GraphQLInterfaceType({name:a.name,description:a.description,interfaces:function(){return j(a)},fields:function(){return E(a)}})
case h.TypeKind.UNION:return function(e){if(!e.possibleTypes){var a=(0,r.default)(e)
throw new Error("Introspection result missing possibleTypes: ".concat(a,"."))}return new p.GraphQLUnionType({name:e.name,description:e.description,types:function(){return e.possibleTypes.map(_)}})}(e)
case h.TypeKind.ENUM:return function(e){if(!e.enumValues){var a=(0,r.default)(e)
throw new Error("Introspection result missing enumValues: ".concat(a,"."))}return new p.GraphQLEnumType({name:e.name,description:e.description,values:(0,o.default)(e.enumValues,(function(e){return e.name}),(function(e){return{description:e.description,deprecationReason:e.deprecationReason}}))})}(e)
case h.TypeKind.INPUT_OBJECT:return function(e){if(!e.inputFields){var a=(0,r.default)(e)
throw new Error("Introspection result missing inputFields: ".concat(a,"."))}return new p.GraphQLInputObjectType({name:e.name,description:e.description,fields:function(){return B(e.inputFields)}})}(e)}var a,n,i,t=(0,r.default)(e)
throw new Error("Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ".concat(t,"."))}(e)})),v=0,g=[].concat(d.specifiedScalarTypes,h.introspectionTypes);v<g.length;v++){var k=g[v]
f[k.name]&&(f[k.name]=k)}var y=n.queryType?_(n.queryType):null,b=n.mutationType?_(n.mutationType):null,S=n.subscriptionType?_(n.subscriptionType):null,A=n.directives?n.directives.map((function(e){if(!e.args){var a=(0,r.default)(e)
throw new Error("Introspection result missing directive args: ".concat(a,"."))}if(!e.locations){var n=(0,r.default)(e)
throw new Error("Introspection result missing directive locations: ".concat(n,"."))}return new c.GraphQLDirective({name:e.name,description:e.description,isRepeatable:e.isRepeatable,locations:e.locations.slice(),args:B(e.args)})})):[]
return new u.GraphQLSchema({description:n.description,query:y,mutation:b,subscription:S,types:(0,i.default)(f),directives:A,assumeValid:null==a?void 0:a.assumeValid})
function M(e){if(e.kind===h.TypeKind.LIST){var a=e.ofType
if(!a)throw new Error("Decorated type deeper than introspection query.")
return new p.GraphQLList(M(a))}if(e.kind===h.TypeKind.NON_NULL){var n=e.ofType
if(!n)throw new Error("Decorated type deeper than introspection query.")
var i=M(n)
return new p.GraphQLNonNull((0,p.assertNullableType)(i))}return T(e)}function T(e){var a=e.name
if(!a)throw new Error("Unknown type reference: ".concat((0,r.default)(e),"."))
var n=f[a]
if(!n)throw new Error("Invalid or incomplete schema, unknown type: ".concat(a,". Ensure that a full introspection query is used in order to build a client schema."))
return n}function _(e){return(0,p.assertObjectType)(T(e))}function w(e){return(0,p.assertInterfaceType)(T(e))}function j(e){if(null===e.interfaces&&e.kind===h.TypeKind.INTERFACE)return[]
if(!e.interfaces){var a=(0,r.default)(e)
throw new Error("Introspection result missing interfaces: ".concat(a,"."))}return e.interfaces.map(w)}function E(e){if(!e.fields)throw new Error("Introspection result missing fields: ".concat((0,r.default)(e),"."))
return(0,o.default)(e.fields,(function(e){return e.name}),N)}function N(e){var a=M(e.type)
if(!(0,p.isOutputType)(a)){var n=(0,r.default)(a)
throw new Error("Introspection must provide output type for fields, but received: ".concat(n,"."))}if(!e.args){var i=(0,r.default)(e)
throw new Error("Introspection result missing field args: ".concat(i,"."))}return{description:e.description,deprecationReason:e.deprecationReason,type:a,args:B(e.args)}}function B(e){return(0,o.default)(e,(function(e){return e.name}),P)}function P(e){var a=M(e.type)
if(!(0,p.isInputType)(a)){var n=(0,r.default)(a)
throw new Error("Introspection must provide input type for arguments, but received: ".concat(n,"."))}var i=null!=e.defaultValue?(0,m.valueFromAST)((0,l.parseValue)(e.defaultValue),a):void 0
return{description:e.description,type:a,defaultValue:i,deprecationReason:e.deprecationReason}}}
var i=f(n(6158)),r=f(n(5925)),t=f(n(1789)),o=f(n(8013)),s=f(n(2087)),l=n(54),u=n(217),c=n(5845),d=n(4538),h=n(5251),p=n(764),m=n(6177)
function f(e){return e&&e.__esModule?e:{default:e}}},825:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.coerceInputValue=function(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:f
return v(e,a,n)}
var i=m(n(6158)),r=m(n(5925)),t=m(n(8004)),o=m(n(655)),s=m(n(2087)),l=m(n(2178)),u=m(n(8586)),c=m(n(5681)),d=n(9770),h=n(9736),p=n(764)
function m(e){return e&&e.__esModule?e:{default:e}}function f(e,a,n){var i="Invalid value "+(0,r.default)(a)
throw e.length>0&&(i+=' at "value'.concat((0,c.default)(e),'"')),n.message=i+": "+n.message,n}function v(e,a,n,c){if((0,p.isNonNullType)(a))return null!=e?v(e,a.ofType,n,c):void n((0,d.pathToArray)(c),e,new h.GraphQLError('Expected non-nullable type "'.concat((0,r.default)(a),'" not to be null.')))
if(null==e)return null
if((0,p.isListType)(a)){var m=a.ofType,f=(0,l.default)(e,(function(e,a){var i=(0,d.addPath)(c,a,void 0)
return v(e,m,n,i)}))
return null!=f?f:[v(e,m,n,c)]}if((0,p.isInputObjectType)(a)){if(!(0,s.default)(e))return void n((0,d.pathToArray)(c),e,new h.GraphQLError('Expected type "'.concat(a.name,'" to be an object.')))
for(var g={},k=a.getFields(),y=0,b=(0,i.default)(k);y<b.length;y++){var S=b[y],A=e[S.name]
if(void 0!==A)g[S.name]=v(A,S.type,n,(0,d.addPath)(c,S.name,a.name))
else if(void 0!==S.defaultValue)g[S.name]=S.defaultValue
else if((0,p.isNonNullType)(S.type)){var M=(0,r.default)(S.type)
n((0,d.pathToArray)(c),e,new h.GraphQLError('Field "'.concat(S.name,'" of required type "').concat(M,'" was not provided.')))}}for(var T=0,_=Object.keys(e);T<_.length;T++){var w=_[T]
if(!k[w]){var j=(0,u.default)(w,Object.keys(a.getFields()))
n((0,d.pathToArray)(c),e,new h.GraphQLError('Field "'.concat(w,'" is not defined by type "').concat(a.name,'".')+(0,o.default)(j)))}}return g}if((0,p.isLeafType)(a)){var E
try{E=a.parseValue(e)}catch(i){return void(i instanceof h.GraphQLError?n((0,d.pathToArray)(c),e,i):n((0,d.pathToArray)(c),e,new h.GraphQLError('Expected type "'.concat(a.name,'". ')+i.message,void 0,void 0,void 0,void 0,i)))}return void 0===E&&n((0,d.pathToArray)(c),e,new h.GraphQLError('Expected type "'.concat(a.name,'".'))),E}(0,t.default)(0,"Unexpected input type: "+(0,r.default)(a))}},3152:(e,a)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.concatAST=function(e){for(var a=[],n=0;n<e.length;n++){var i=e[n]
a=a.concat(i.definitions)}return{kind:"Document",definitions:a}}},5481:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.extendSchema=function(e,a,n){(0,f.assertSchema)(e),null!=a&&a.kind===u.Kind.DOCUMENT||(0,l.default)(0,"Must provide valid Document AST."),!0!==(null==n?void 0:n.assumeValid)&&!0!==(null==n?void 0:n.assumeValidSDL)&&(0,p.assertValidSDLExtension)(a,e)
var i=e.toConfig(),r=_(i,a,n)
return i===r?e:new f.GraphQLSchema(r)},a.extendSchemaImpl=_,a.getDescription=N
var i=S(n(6158)),r=S(n(2944)),t=S(n(5925)),o=S(n(5098)),s=S(n(8004)),l=S(n(1789)),u=n(2734),c=n(2795),d=n(3908),h=n(2093),p=n(8345),m=n(9288),f=n(217),v=n(4538),g=n(5251),k=n(5845),y=n(764),b=n(6177)
function S(e){return e&&e.__esModule?e:{default:e}}function A(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function M(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?A(Object(n),!0).forEach((function(a){T(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):A(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function T(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function _(e,a,n){for(var r,l,c,d,p,m=[],f=Object.create(null),S=[],A=[],T=0,_=a.definitions;T<_.length;T++){var B=_[T]
if(B.kind===u.Kind.SCHEMA_DEFINITION)p=B
else if(B.kind===u.Kind.SCHEMA_EXTENSION)A.push(B)
else if((0,h.isTypeDefinitionNode)(B))m.push(B)
else if((0,h.isTypeExtensionNode)(B)){var P=B.name.value,L=f[P]
f[P]=L?L.concat([B]):[B]}else B.kind===u.Kind.DIRECTIVE_DEFINITION&&S.push(B)}if(0===Object.keys(f).length&&0===m.length&&0===S.length&&0===A.length&&null==p)return e
for(var D=Object.create(null),x=0,C=e.types;x<C.length;x++){var K=C[x]
D[K.name]=(R=K,(0,g.isIntrospectionType)(R)||(0,v.isSpecifiedScalarType)(R)?R:(0,y.isScalarType)(R)?function(e){for(var a,n=e.toConfig(),i=null!==(a=f[n.name])&&void 0!==a?a:[],r=n.specifiedByUrl,t=0;t<i.length;t++){var o
r=null!==(o=E(i[t]))&&void 0!==o?o:r}return new y.GraphQLScalarType(M(M({},n),{},{specifiedByUrl:r,extensionASTNodes:n.extensionASTNodes.concat(i)}))}(R):(0,y.isObjectType)(R)?function(e){var a,n=e.toConfig(),i=null!==(a=f[n.name])&&void 0!==a?a:[]
return new y.GraphQLObjectType(M(M({},n),{},{interfaces:function(){return[].concat(e.getInterfaces().map(F),ee(i))},fields:function(){return M(M({},(0,o.default)(n.fields,J)),Q(i))},extensionASTNodes:n.extensionASTNodes.concat(i)}))}(R):(0,y.isInterfaceType)(R)?function(e){var a,n=e.toConfig(),i=null!==(a=f[n.name])&&void 0!==a?a:[]
return new y.GraphQLInterfaceType(M(M({},n),{},{interfaces:function(){return[].concat(e.getInterfaces().map(F),ee(i))},fields:function(){return M(M({},(0,o.default)(n.fields,J)),Q(i))},extensionASTNodes:n.extensionASTNodes.concat(i)}))}(R):(0,y.isUnionType)(R)?function(e){var a,n=e.toConfig(),i=null!==(a=f[n.name])&&void 0!==a?a:[]
return new y.GraphQLUnionType(M(M({},n),{},{types:function(){return[].concat(e.getTypes().map(F),ae(i))},extensionASTNodes:n.extensionASTNodes.concat(i)}))}(R):(0,y.isEnumType)(R)?function(e){var a,n=e.toConfig(),i=null!==(a=f[e.name])&&void 0!==a?a:[]
return new y.GraphQLEnumType(M(M({},n),{},{values:M(M({},n.values),X(i)),extensionASTNodes:n.extensionASTNodes.concat(i)}))}(R):(0,y.isInputObjectType)(R)?function(e){var a,n=e.toConfig(),i=null!==(a=f[n.name])&&void 0!==a?a:[]
return new y.GraphQLInputObjectType(M(M({},n),{},{fields:function(){return M(M({},(0,o.default)(n.fields,(function(e){return M(M({},e),{},{type:H(e.type)})}))),$(i))},extensionASTNodes:n.extensionASTNodes.concat(i)}))}(R):void(0,s.default)(0,"Unexpected type: "+(0,t.default)(R)))}for(var R,z=0;z<m.length;z++){var O,I=m[z],V=I.name.value
D[V]=null!==(O=w[V])&&void 0!==O?O:ne(I)}var G=M(M({query:e.query&&F(e.query),mutation:e.mutation&&F(e.mutation),subscription:e.subscription&&F(e.subscription)},p&&W([p])),W(A))
return M(M({description:null===(r=p)||void 0===r||null===(l=r.description)||void 0===l?void 0:l.value},G),{},{types:(0,i.default)(D),directives:[].concat(e.directives.map((function(e){var a=e.toConfig()
return new k.GraphQLDirective(M(M({},a),{},{args:(0,o.default)(a.args,U)}))})),S.map((function(e){var a=e.locations.map((function(e){return e.value}))
return new k.GraphQLDirective({name:e.name.value,description:N(e,n),locations:a,isRepeatable:e.repeatable,args:Y(e.arguments),astNode:e})}))),extensions:void 0,astNode:null!==(c=p)&&void 0!==c?c:e.astNode,extensionASTNodes:e.extensionASTNodes.concat(A),assumeValid:null!==(d=null==n?void 0:n.assumeValid)&&void 0!==d&&d})
function H(e){return(0,y.isListType)(e)?new y.GraphQLList(H(e.ofType)):(0,y.isNonNullType)(e)?new y.GraphQLNonNull(H(e.ofType)):F(e)}function F(e){return D[e.name]}function J(e){return M(M({},e),{},{type:H(e.type),args:(0,o.default)(e.args,U)})}function U(e){return M(M({},e),{},{type:H(e.type)})}function W(e){for(var a={},n=0;n<e.length;n++)for(var i,r=null!==(i=e[n].operationTypes)&&void 0!==i?i:[],t=0;t<r.length;t++){var o=r[t]
a[o.operation]=Z(o.type)}return a}function Z(e){var a,n=e.name.value,i=null!==(a=w[n])&&void 0!==a?a:D[n]
if(void 0===i)throw new Error('Unknown type: "'.concat(n,'".'))
return i}function q(e){return e.kind===u.Kind.LIST_TYPE?new y.GraphQLList(q(e.type)):e.kind===u.Kind.NON_NULL_TYPE?new y.GraphQLNonNull(q(e.type)):Z(e)}function Q(e){for(var a=Object.create(null),i=0;i<e.length;i++)for(var r,t=null!==(r=e[i].fields)&&void 0!==r?r:[],o=0;o<t.length;o++){var s=t[o]
a[s.name.value]={type:q(s.type),description:N(s,n),args:Y(s.arguments),deprecationReason:j(s),astNode:s}}return a}function Y(e){for(var a=null!=e?e:[],i=Object.create(null),r=0;r<a.length;r++){var t=a[r],o=q(t.type)
i[t.name.value]={type:o,description:N(t,n),defaultValue:(0,b.valueFromAST)(t.defaultValue,o),deprecationReason:j(t),astNode:t}}return i}function $(e){for(var a=Object.create(null),i=0;i<e.length;i++)for(var r,t=null!==(r=e[i].fields)&&void 0!==r?r:[],o=0;o<t.length;o++){var s=t[o],l=q(s.type)
a[s.name.value]={type:l,description:N(s,n),defaultValue:(0,b.valueFromAST)(s.defaultValue,l),deprecationReason:j(s),astNode:s}}return a}function X(e){for(var a=Object.create(null),i=0;i<e.length;i++)for(var r,t=null!==(r=e[i].values)&&void 0!==r?r:[],o=0;o<t.length;o++){var s=t[o]
a[s.name.value]={description:N(s,n),deprecationReason:j(s),astNode:s}}return a}function ee(e){for(var a=[],n=0;n<e.length;n++)for(var i,r=null!==(i=e[n].interfaces)&&void 0!==i?i:[],t=0;t<r.length;t++){var o=r[t]
a.push(Z(o))}return a}function ae(e){for(var a=[],n=0;n<e.length;n++)for(var i,r=null!==(i=e[n].types)&&void 0!==i?i:[],t=0;t<r.length;t++){var o=r[t]
a.push(Z(o))}return a}function ne(e){var a,i=e.name.value,r=N(e,n),o=null!==(a=f[i])&&void 0!==a?a:[]
switch(e.kind){case u.Kind.OBJECT_TYPE_DEFINITION:var l=o,c=[e].concat(l)
return new y.GraphQLObjectType({name:i,description:r,interfaces:function(){return ee(c)},fields:function(){return Q(c)},astNode:e,extensionASTNodes:l})
case u.Kind.INTERFACE_TYPE_DEFINITION:var d=o,h=[e].concat(d)
return new y.GraphQLInterfaceType({name:i,description:r,interfaces:function(){return ee(h)},fields:function(){return Q(h)},astNode:e,extensionASTNodes:d})
case u.Kind.ENUM_TYPE_DEFINITION:var p=o,m=[e].concat(p)
return new y.GraphQLEnumType({name:i,description:r,values:X(m),astNode:e,extensionASTNodes:p})
case u.Kind.UNION_TYPE_DEFINITION:var v=o,g=[e].concat(v)
return new y.GraphQLUnionType({name:i,description:r,types:function(){return ae(g)},astNode:e,extensionASTNodes:v})
case u.Kind.SCALAR_TYPE_DEFINITION:var k=o
return new y.GraphQLScalarType({name:i,description:r,specifiedByUrl:E(e),astNode:e,extensionASTNodes:k})
case u.Kind.INPUT_OBJECT_TYPE_DEFINITION:var b=o,S=[e].concat(b)
return new y.GraphQLInputObjectType({name:i,description:r,fields:function(){return $(S)},astNode:e,extensionASTNodes:b})}(0,s.default)(0,"Unexpected type definition node: "+(0,t.default)(e))}}var w=(0,r.default)(v.specifiedScalarTypes.concat(g.introspectionTypes),(function(e){return e.name}))
function j(e){var a=(0,m.getDirectiveValues)(k.GraphQLDeprecatedDirective,e)
return null==a?void 0:a.reason}function E(e){var a=(0,m.getDirectiveValues)(k.GraphQLSpecifiedByDirective,e)
return null==a?void 0:a.url}function N(e,a){if(e.description)return e.description.value
if(!0===(null==a?void 0:a.commentDescriptions)){var n=function(e){var a=e.loc
if(a){for(var n=[],i=a.startToken.prev;null!=i&&i.kind===c.TokenKind.COMMENT&&i.next&&i.prev&&i.line+1===i.next.line&&i.line!==i.prev.line;){var r=String(i.value)
n.push(r),i=i.prev}return n.length>0?n.reverse().join("\n"):void 0}}(e)
if(void 0!==n)return(0,d.dedentBlockStringValue)("\n"+n)}}},6550:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.findBreakingChanges=function(e,a){return y(e,a).filter((function(e){return e.type in g}))},a.findDangerousChanges=function(e,a){return y(e,a).filter((function(e){return e.type in k}))},a.DangerousChangeType=a.BreakingChangeType=void 0
var i=p(n(6158)),r=p(n(2944)),t=p(n(5925)),o=p(n(8004)),s=p(n(2461)),l=n(4723),u=n(7146),c=n(4538),d=n(764),h=n(2310)
function p(e){return e&&e.__esModule?e:{default:e}}function m(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function f(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?m(Object(n),!0).forEach((function(a){v(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function v(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}var g=Object.freeze({TYPE_REMOVED:"TYPE_REMOVED",TYPE_CHANGED_KIND:"TYPE_CHANGED_KIND",TYPE_REMOVED_FROM_UNION:"TYPE_REMOVED_FROM_UNION",VALUE_REMOVED_FROM_ENUM:"VALUE_REMOVED_FROM_ENUM",REQUIRED_INPUT_FIELD_ADDED:"REQUIRED_INPUT_FIELD_ADDED",IMPLEMENTED_INTERFACE_REMOVED:"IMPLEMENTED_INTERFACE_REMOVED",FIELD_REMOVED:"FIELD_REMOVED",FIELD_CHANGED_KIND:"FIELD_CHANGED_KIND",REQUIRED_ARG_ADDED:"REQUIRED_ARG_ADDED",ARG_REMOVED:"ARG_REMOVED",ARG_CHANGED_KIND:"ARG_CHANGED_KIND",DIRECTIVE_REMOVED:"DIRECTIVE_REMOVED",DIRECTIVE_ARG_REMOVED:"DIRECTIVE_ARG_REMOVED",REQUIRED_DIRECTIVE_ARG_ADDED:"REQUIRED_DIRECTIVE_ARG_ADDED",DIRECTIVE_REPEATABLE_REMOVED:"DIRECTIVE_REPEATABLE_REMOVED",DIRECTIVE_LOCATION_REMOVED:"DIRECTIVE_LOCATION_REMOVED"})
a.BreakingChangeType=g
var k=Object.freeze({VALUE_ADDED_TO_ENUM:"VALUE_ADDED_TO_ENUM",TYPE_ADDED_TO_UNION:"TYPE_ADDED_TO_UNION",OPTIONAL_INPUT_FIELD_ADDED:"OPTIONAL_INPUT_FIELD_ADDED",OPTIONAL_ARG_ADDED:"OPTIONAL_ARG_ADDED",IMPLEMENTED_INTERFACE_ADDED:"IMPLEMENTED_INTERFACE_ADDED",ARG_DEFAULT_VALUE_CHANGE:"ARG_DEFAULT_VALUE_CHANGE"})
function y(e,a){return[].concat(function(e,a){for(var n=[],r=B((0,i.default)(e.getTypeMap()),(0,i.default)(a.getTypeMap())),t=0,o=r.removed;t<o.length;t++){var s=o[t]
n.push({type:g.TYPE_REMOVED,description:(0,c.isSpecifiedScalarType)(s)?"Standard scalar ".concat(s.name," was removed because it is not referenced anymore."):"".concat(s.name," was removed.")})}for(var l=0,u=r.persisted;l<u.length;l++){var h=u[l],p=h[0],m=h[1];(0,d.isEnumType)(p)&&(0,d.isEnumType)(m)?n.push.apply(n,A(p,m)):(0,d.isUnionType)(p)&&(0,d.isUnionType)(m)?n.push.apply(n,S(p,m)):(0,d.isInputObjectType)(p)&&(0,d.isInputObjectType)(m)?n.push.apply(n,b(p,m)):(0,d.isObjectType)(p)&&(0,d.isObjectType)(m)||(0,d.isInterfaceType)(p)&&(0,d.isInterfaceType)(m)?n.push.apply(n,T(p,m).concat(M(p,m))):p.constructor!==m.constructor&&n.push({type:g.TYPE_CHANGED_KIND,description:"".concat(p.name," changed from ")+"".concat(E(p)," to ").concat(E(m),".")})}return n}(e,a),function(e,a){for(var n=[],i=B(e.getDirectives(),a.getDirectives()),r=0,t=i.removed;r<t.length;r++){var o=t[r]
n.push({type:g.DIRECTIVE_REMOVED,description:"".concat(o.name," was removed.")})}for(var s=0,l=i.persisted;s<l.length;s++){for(var u=l[s],c=u[0],h=u[1],p=B(c.args,h.args),m=0,f=p.added;m<f.length;m++){var v=f[m];(0,d.isRequiredArgument)(v)&&n.push({type:g.REQUIRED_DIRECTIVE_ARG_ADDED,description:"A required arg ".concat(v.name," on directive ").concat(c.name," was added.")})}for(var k=0,y=p.removed;k<y.length;k++){var b=y[k]
n.push({type:g.DIRECTIVE_ARG_REMOVED,description:"".concat(b.name," was removed from ").concat(c.name,".")})}c.isRepeatable&&!h.isRepeatable&&n.push({type:g.DIRECTIVE_REPEATABLE_REMOVED,description:"Repeatable flag was removed from ".concat(c.name,".")})
for(var S=0,A=c.locations;S<A.length;S++){var M=A[S];-1===h.locations.indexOf(M)&&n.push({type:g.DIRECTIVE_LOCATION_REMOVED,description:"".concat(M," was removed from ").concat(c.name,".")})}}return n}(e,a))}function b(e,a){for(var n=[],r=B((0,i.default)(e.getFields()),(0,i.default)(a.getFields())),t=0,o=r.added;t<o.length;t++){var s=o[t];(0,d.isRequiredInputField)(s)?n.push({type:g.REQUIRED_INPUT_FIELD_ADDED,description:"A required field ".concat(s.name," on input type ").concat(e.name," was added.")}):n.push({type:k.OPTIONAL_INPUT_FIELD_ADDED,description:"An optional field ".concat(s.name," on input type ").concat(e.name," was added.")})}for(var l=0,u=r.removed;l<u.length;l++){var c=u[l]
n.push({type:g.FIELD_REMOVED,description:"".concat(e.name,".").concat(c.name," was removed.")})}for(var h=0,p=r.persisted;h<p.length;h++){var m=p[h],f=m[0],v=m[1]
j(f.type,v.type)||n.push({type:g.FIELD_CHANGED_KIND,description:"".concat(e.name,".").concat(f.name," changed type from ")+"".concat(String(f.type)," to ").concat(String(v.type),".")})}return n}function S(e,a){for(var n=[],i=B(e.getTypes(),a.getTypes()),r=0,t=i.added;r<t.length;r++){var o=t[r]
n.push({type:k.TYPE_ADDED_TO_UNION,description:"".concat(o.name," was added to union type ").concat(e.name,".")})}for(var s=0,l=i.removed;s<l.length;s++){var u=l[s]
n.push({type:g.TYPE_REMOVED_FROM_UNION,description:"".concat(u.name," was removed from union type ").concat(e.name,".")})}return n}function A(e,a){for(var n=[],i=B(e.getValues(),a.getValues()),r=0,t=i.added;r<t.length;r++){var o=t[r]
n.push({type:k.VALUE_ADDED_TO_ENUM,description:"".concat(o.name," was added to enum type ").concat(e.name,".")})}for(var s=0,l=i.removed;s<l.length;s++){var u=l[s]
n.push({type:g.VALUE_REMOVED_FROM_ENUM,description:"".concat(u.name," was removed from enum type ").concat(e.name,".")})}return n}function M(e,a){for(var n=[],i=B(e.getInterfaces(),a.getInterfaces()),r=0,t=i.added;r<t.length;r++){var o=t[r]
n.push({type:k.IMPLEMENTED_INTERFACE_ADDED,description:"".concat(o.name," added to interfaces implemented by ").concat(e.name,".")})}for(var s=0,l=i.removed;s<l.length;s++){var u=l[s]
n.push({type:g.IMPLEMENTED_INTERFACE_REMOVED,description:"".concat(e.name," no longer implements interface ").concat(u.name,".")})}return n}function T(e,a){for(var n=[],r=B((0,i.default)(e.getFields()),(0,i.default)(a.getFields())),t=0,o=r.removed;t<o.length;t++){var s=o[t]
n.push({type:g.FIELD_REMOVED,description:"".concat(e.name,".").concat(s.name," was removed.")})}for(var l=0,u=r.persisted;l<u.length;l++){var c=u[l],d=c[0],h=c[1]
n.push.apply(n,_(e,d,h)),w(d.type,h.type)||n.push({type:g.FIELD_CHANGED_KIND,description:"".concat(e.name,".").concat(d.name," changed type from ")+"".concat(String(d.type)," to ").concat(String(h.type),".")})}return n}function _(e,a,n){for(var i=[],r=B(a.args,n.args),t=0,o=r.removed;t<o.length;t++){var s=o[t]
i.push({type:g.ARG_REMOVED,description:"".concat(e.name,".").concat(a.name," arg ").concat(s.name," was removed.")})}for(var l=0,u=r.persisted;l<u.length;l++){var c=u[l],h=c[0],p=c[1]
if(j(h.type,p.type)){if(void 0!==h.defaultValue)if(void 0===p.defaultValue)i.push({type:k.ARG_DEFAULT_VALUE_CHANGE,description:"".concat(e.name,".").concat(a.name," arg ").concat(h.name," defaultValue was removed.")})
else{var m=N(h.defaultValue,h.type),f=N(p.defaultValue,p.type)
m!==f&&i.push({type:k.ARG_DEFAULT_VALUE_CHANGE,description:"".concat(e.name,".").concat(a.name," arg ").concat(h.name," has changed defaultValue from ").concat(m," to ").concat(f,".")})}}else i.push({type:g.ARG_CHANGED_KIND,description:"".concat(e.name,".").concat(a.name," arg ").concat(h.name," has changed type from ")+"".concat(String(h.type)," to ").concat(String(p.type),".")})}for(var v=0,y=r.added;v<y.length;v++){var b=y[v];(0,d.isRequiredArgument)(b)?i.push({type:g.REQUIRED_ARG_ADDED,description:"A required arg ".concat(b.name," on ").concat(e.name,".").concat(a.name," was added.")}):i.push({type:k.OPTIONAL_ARG_ADDED,description:"An optional arg ".concat(b.name," on ").concat(e.name,".").concat(a.name," was added.")})}return i}function w(e,a){return(0,d.isListType)(e)?(0,d.isListType)(a)&&w(e.ofType,a.ofType)||(0,d.isNonNullType)(a)&&w(e,a.ofType):(0,d.isNonNullType)(e)?(0,d.isNonNullType)(a)&&w(e.ofType,a.ofType):(0,d.isNamedType)(a)&&e.name===a.name||(0,d.isNonNullType)(a)&&w(e,a.ofType)}function j(e,a){return(0,d.isListType)(e)?(0,d.isListType)(a)&&j(e.ofType,a.ofType):(0,d.isNonNullType)(e)?(0,d.isNonNullType)(a)&&j(e.ofType,a.ofType)||!(0,d.isNonNullType)(a)&&j(e.ofType,a):(0,d.isNamedType)(a)&&e.name===a.name}function E(e){return(0,d.isScalarType)(e)?"a Scalar type":(0,d.isObjectType)(e)?"an Object type":(0,d.isInterfaceType)(e)?"an Interface type":(0,d.isUnionType)(e)?"a Union type":(0,d.isEnumType)(e)?"an Enum type":(0,d.isInputObjectType)(e)?"an Input type":void(0,o.default)(0,"Unexpected type: "+(0,t.default)(e))}function N(e,a){var n=(0,h.astFromValue)(e,a)
null!=n||(0,o.default)(0)
var i=(0,u.visit)(n,{ObjectValue:function(e){var a=[].concat(e.fields)
return a.sort((function(e,a){return(0,s.default)(e.name.value,a.name.value)})),f(f({},e),{},{fields:a})}})
return(0,l.print)(i)}function B(e,a){for(var n=[],i=[],t=[],o=(0,r.default)(e,(function(e){return e.name})),s=(0,r.default)(a,(function(e){return e.name})),l=0;l<e.length;l++){var u=e[l],c=s[u.name]
void 0===c?i.push(u):t.push([u,c])}for(var d=0;d<a.length;d++){var h=a[d]
void 0===o[h.name]&&n.push(h)}return{added:n,persisted:t,removed:i}}a.DangerousChangeType=k},9174:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.findDeprecatedUsages=function(e,a){return(0,i.validate)(e,a,[r.NoDeprecatedCustomRule])}
var i=n(8345),r=n(9463)},4196:(e,a)=>{"use strict"
function n(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}Object.defineProperty(a,"__esModule",{value:!0}),a.getIntrospectionQuery=function(e){var a=function(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{}
a%2?n(Object(r),!0).forEach((function(a){i(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}({descriptions:!0,specifiedByUrl:!1,directiveIsRepeatable:!1,schemaDescription:!1,inputValueDeprecation:!1},e),r=a.descriptions?"description":"",t=a.specifiedByUrl?"specifiedByUrl":"",o=a.directiveIsRepeatable?"isRepeatable":"",s=a.schemaDescription?r:""
function l(e){return a.inputValueDeprecation?e:""}return"\n    query IntrospectionQuery {\n      __schema {\n        ".concat(s,"\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ").concat(r,"\n          ").concat(o,"\n          locations\n          args").concat(l("(includeDeprecated: true)")," {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ").concat(r,"\n      ").concat(t,"\n      fields(includeDeprecated: true) {\n        name\n        ").concat(r,"\n        args").concat(l("(includeDeprecated: true)")," {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields").concat(l("(includeDeprecated: true)")," {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ").concat(r,"\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ").concat(r,"\n      type { ...TypeRef }\n      defaultValue\n      ").concat(l("isDeprecated"),"\n      ").concat(l("deprecationReason"),"\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ")}},77:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.getOperationAST=function(e,a){for(var n=null,r=0,t=e.definitions;r<t.length;r++){var o,s=t[r]
if(s.kind===i.Kind.OPERATION_DEFINITION)if(null==a){if(n)return null
n=s}else if((null===(o=s.name)||void 0===o?void 0:o.value)===a)return s}return n}
var i=n(2734)},307:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.getOperationRootType=function(e,a){if("query"===a.operation){var n=e.getQueryType()
if(!n)throw new i.GraphQLError("Schema does not define the required query root type.",a)
return n}if("mutation"===a.operation){var r=e.getMutationType()
if(!r)throw new i.GraphQLError("Schema is not configured for mutations.",a)
return r}if("subscription"===a.operation){var t=e.getSubscriptionType()
if(!t)throw new i.GraphQLError("Schema is not configured for subscriptions.",a)
return t}throw new i.GraphQLError("Can only have query, mutation and subscription operations.",a)}
var i=n(9736)},8776:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"getIntrospectionQuery",{enumerable:!0,get:function(){return i.getIntrospectionQuery}}),Object.defineProperty(a,"getOperationAST",{enumerable:!0,get:function(){return r.getOperationAST}}),Object.defineProperty(a,"getOperationRootType",{enumerable:!0,get:function(){return t.getOperationRootType}}),Object.defineProperty(a,"introspectionFromSchema",{enumerable:!0,get:function(){return o.introspectionFromSchema}}),Object.defineProperty(a,"buildClientSchema",{enumerable:!0,get:function(){return s.buildClientSchema}}),Object.defineProperty(a,"buildASTSchema",{enumerable:!0,get:function(){return l.buildASTSchema}}),Object.defineProperty(a,"buildSchema",{enumerable:!0,get:function(){return l.buildSchema}}),Object.defineProperty(a,"extendSchema",{enumerable:!0,get:function(){return u.extendSchema}}),Object.defineProperty(a,"getDescription",{enumerable:!0,get:function(){return u.getDescription}}),Object.defineProperty(a,"lexicographicSortSchema",{enumerable:!0,get:function(){return c.lexicographicSortSchema}}),Object.defineProperty(a,"printSchema",{enumerable:!0,get:function(){return d.printSchema}}),Object.defineProperty(a,"printType",{enumerable:!0,get:function(){return d.printType}}),Object.defineProperty(a,"printIntrospectionSchema",{enumerable:!0,get:function(){return d.printIntrospectionSchema}}),Object.defineProperty(a,"typeFromAST",{enumerable:!0,get:function(){return h.typeFromAST}}),Object.defineProperty(a,"valueFromAST",{enumerable:!0,get:function(){return p.valueFromAST}}),Object.defineProperty(a,"valueFromASTUntyped",{enumerable:!0,get:function(){return m.valueFromASTUntyped}}),Object.defineProperty(a,"astFromValue",{enumerable:!0,get:function(){return f.astFromValue}}),Object.defineProperty(a,"TypeInfo",{enumerable:!0,get:function(){return v.TypeInfo}}),Object.defineProperty(a,"visitWithTypeInfo",{enumerable:!0,get:function(){return v.visitWithTypeInfo}}),Object.defineProperty(a,"coerceInputValue",{enumerable:!0,get:function(){return g.coerceInputValue}}),Object.defineProperty(a,"concatAST",{enumerable:!0,get:function(){return k.concatAST}}),Object.defineProperty(a,"separateOperations",{enumerable:!0,get:function(){return y.separateOperations}}),Object.defineProperty(a,"stripIgnoredCharacters",{enumerable:!0,get:function(){return b.stripIgnoredCharacters}}),Object.defineProperty(a,"isEqualType",{enumerable:!0,get:function(){return S.isEqualType}}),Object.defineProperty(a,"isTypeSubTypeOf",{enumerable:!0,get:function(){return S.isTypeSubTypeOf}}),Object.defineProperty(a,"doTypesOverlap",{enumerable:!0,get:function(){return S.doTypesOverlap}}),Object.defineProperty(a,"assertValidName",{enumerable:!0,get:function(){return A.assertValidName}}),Object.defineProperty(a,"isValidNameError",{enumerable:!0,get:function(){return A.isValidNameError}}),Object.defineProperty(a,"BreakingChangeType",{enumerable:!0,get:function(){return M.BreakingChangeType}}),Object.defineProperty(a,"DangerousChangeType",{enumerable:!0,get:function(){return M.DangerousChangeType}}),Object.defineProperty(a,"findBreakingChanges",{enumerable:!0,get:function(){return M.findBreakingChanges}}),Object.defineProperty(a,"findDangerousChanges",{enumerable:!0,get:function(){return M.findDangerousChanges}}),Object.defineProperty(a,"findDeprecatedUsages",{enumerable:!0,get:function(){return T.findDeprecatedUsages}})
var i=n(4196),r=n(77),t=n(307),o=n(6121),s=n(6099),l=n(3285),u=n(5481),c=n(2167),d=n(6629),h=n(8802),p=n(6177),m=n(4080),f=n(2310),v=n(11),g=n(825),k=n(3152),y=n(1043),b=n(9315),S=n(3529),A=n(2207),M=n(6550),T=n(9174)},6121:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.introspectionFromSchema=function(e,a){var n=function(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?l(Object(n),!0).forEach((function(a){u(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}({specifiedByUrl:!0,directiveIsRepeatable:!0,schemaDescription:!0,inputValueDeprecation:!0},a),i=(0,t.parse)((0,s.getIntrospectionQuery)(n)),c=(0,o.executeSync)({schema:e,document:i})
return!c.errors&&c.data||(0,r.default)(0),c.data}
var i,r=(i=n(8004))&&i.__esModule?i:{default:i},t=n(54),o=n(1266),s=n(4196)
function l(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function u(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}},2167:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.lexicographicSortSchema=function(e){var a=e.toConfig(),n=(0,o.default)(g(a.types),(function(e){return e.name}),(function(e){if((0,d.isScalarType)(e)||(0,c.isIntrospectionType)(e))return e
if((0,d.isObjectType)(e)){var a=e.toConfig()
return new d.GraphQLObjectType(m(m({},a),{},{interfaces:function(){return b(a.interfaces)},fields:function(){return y(a.fields)}}))}if((0,d.isInterfaceType)(e)){var n=e.toConfig()
return new d.GraphQLInterfaceType(m(m({},n),{},{interfaces:function(){return b(n.interfaces)},fields:function(){return y(n.fields)}}))}if((0,d.isUnionType)(e)){var i=e.toConfig()
return new d.GraphQLUnionType(m(m({},i),{},{types:function(){return b(i.types)}}))}if((0,d.isEnumType)(e)){var o=e.toConfig()
return new d.GraphQLEnumType(m(m({},o),{},{values:v(o.values)}))}if((0,d.isInputObjectType)(e)){var l=e.toConfig()
return new d.GraphQLInputObjectType(m(m({},l),{},{fields:function(){return v(l.fields,(function(e){return m(m({},e),{},{type:s(e.type)})}))}}))}(0,t.default)(0,"Unexpected type: "+(0,r.default)(e))}))
return new l.GraphQLSchema(m(m({},a),{},{types:(0,i.default)(n),directives:g(a.directives).map((function(e){var a=e.toConfig()
return new u.GraphQLDirective(m(m({},a),{},{locations:k(a.locations,(function(e){return e})),args:f(a.args)}))})),query:p(a.query),mutation:p(a.mutation),subscription:p(a.subscription)}))
function s(e){return(0,d.isListType)(e)?new d.GraphQLList(s(e.ofType)):(0,d.isNonNullType)(e)?new d.GraphQLNonNull(s(e.ofType)):h(e)}function h(e){return n[e.name]}function p(e){return e&&h(e)}function f(e){return v(e,(function(e){return m(m({},e),{},{type:s(e.type)})}))}function y(e){return v(e,(function(e){return m(m({},e),{},{type:s(e.type),args:f(e.args)})}))}function b(e){return g(e).map(h)}}
var i=h(n(6158)),r=h(n(5925)),t=h(n(8004)),o=h(n(8013)),s=h(n(2461)),l=n(217),u=n(5845),c=n(5251),d=n(764)
function h(e){return e&&e.__esModule?e:{default:e}}function p(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function m(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?p(Object(n),!0).forEach((function(a){f(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function f(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function v(e,a){for(var n=Object.create(null),i=k(Object.keys(e),(function(e){return e})),r=0;r<i.length;r++){var t=i[r],o=e[t]
n[t]=a?a(o):o}return n}function g(e){return k(e,(function(e){return e.name}))}function k(e,a){return e.slice().sort((function(e,n){var i=a(e),r=a(n)
return(0,s.default)(i,r)}))}},6629:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.printSchema=function(e,a){return f(e,(function(e){return!(0,c.isSpecifiedDirective)(e)}),m,a)},a.printIntrospectionSchema=function(e,a){return f(e,c.isSpecifiedDirective,l.isIntrospectionType,a)},a.printType=g
var i=p(n(6158)),r=p(n(5925)),t=p(n(8004)),o=n(4723),s=n(3908),l=n(5251),u=n(4538),c=n(5845),d=n(764),h=n(2310)
function p(e){return e&&e.__esModule?e:{default:e}}function m(e){return!(0,u.isSpecifiedScalarType)(e)&&!(0,l.isIntrospectionType)(e)}function f(e,a,n,r){var t=e.getDirectives().filter(a),o=(0,i.default)(e.getTypeMap()).filter(n)
return[v(e)].concat(t.map((function(e){return function(e,a){return T(a,e)+"directive @"+e.name+S(a,e.args)+(e.isRepeatable?" repeatable":"")+" on "+e.locations.join(" | ")}(e,r)})),o.map((function(e){return g(e,r)}))).filter(Boolean).join("\n\n")+"\n"}function v(e){if(null!=e.description||!function(e){var a=e.getQueryType()
if(a&&"Query"!==a.name)return!1
var n=e.getMutationType()
if(n&&"Mutation"!==n.name)return!1
var i=e.getSubscriptionType()
return!i||"Subscription"===i.name}(e)){var a=[],n=e.getQueryType()
n&&a.push("  query: ".concat(n.name))
var i=e.getMutationType()
i&&a.push("  mutation: ".concat(i.name))
var r=e.getSubscriptionType()
return r&&a.push("  subscription: ".concat(r.name)),T({},e)+"schema {\n".concat(a.join("\n"),"\n}")}}function g(e,a){return(0,d.isScalarType)(e)?function(e,a){return T(a,e)+"scalar ".concat(e.name)+function(e){if(null==e.specifiedByUrl)return""
var a=e.specifiedByUrl,n=(0,h.astFromValue)(a,u.GraphQLString)
return n||(0,t.default)(0,"Unexpected null value returned from `astFromValue` for specifiedByUrl")," @specifiedBy(url: "+(0,o.print)(n)+")"}(e)}(e,a):(0,d.isObjectType)(e)?function(e,a){return T(a,e)+"type ".concat(e.name)+k(e)+y(a,e)}(e,a):(0,d.isInterfaceType)(e)?function(e,a){return T(a,e)+"interface ".concat(e.name)+k(e)+y(a,e)}(e,a):(0,d.isUnionType)(e)?function(e,a){var n=e.getTypes(),i=n.length?" = "+n.join(" | "):""
return T(a,e)+"union "+e.name+i}(e,a):(0,d.isEnumType)(e)?function(e,a){var n=e.getValues().map((function(e,n){return T(a,e,"  ",!n)+"  "+e.name+M(e.deprecationReason)}))
return T(a,e)+"enum ".concat(e.name)+b(n)}(e,a):(0,d.isInputObjectType)(e)?function(e,a){var n=(0,i.default)(e.getFields()).map((function(e,n){return T(a,e,"  ",!n)+"  "+A(e)}))
return T(a,e)+"input ".concat(e.name)+b(n)}(e,a):void(0,t.default)(0,"Unexpected type: "+(0,r.default)(e))}function k(e){var a=e.getInterfaces()
return a.length?" implements "+a.map((function(e){return e.name})).join(" & "):""}function y(e,a){return b((0,i.default)(a.getFields()).map((function(a,n){return T(e,a,"  ",!n)+"  "+a.name+S(e,a.args,"  ")+": "+String(a.type)+M(a.deprecationReason)})))}function b(e){return 0!==e.length?" {\n"+e.join("\n")+"\n}":""}function S(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:""
return 0===a.length?"":a.every((function(e){return!e.description}))?"("+a.map(A).join(", ")+")":"(\n"+a.map((function(a,i){return T(e,a,"  "+n,!i)+"  "+n+A(a)})).join("\n")+"\n"+n+")"}function A(e){var a=(0,h.astFromValue)(e.defaultValue,e.type),n=e.name+": "+String(e.type)
return a&&(n+=" = ".concat((0,o.print)(a))),n+M(e.deprecationReason)}function M(e){if(null==e)return""
var a=(0,h.astFromValue)(e,u.GraphQLString)
return a&&e!==c.DEFAULT_DEPRECATION_REASON?" @deprecated(reason: "+(0,o.print)(a)+")":" @deprecated"}function T(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=a.description
if(null==r)return""
if(!0===(null==e?void 0:e.commentDescriptions))return _(r,n,i)
var t=r.length>70,o=(0,s.printBlockString)(r,"",t),l=n&&!i?"\n"+n:n
return l+o.replace(/\n/g,"\n"+n)+"\n"}function _(e,a,n){return(a&&!n?"\n":"")+e.split("\n").map((function(e){return a+(""!==e?"# "+e:"#")})).join("\n")+"\n"}},1043:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.separateOperations=function(e){for(var a=[],n=Object.create(null),r=0,s=e.definitions;r<s.length;r++){var l=s[r]
switch(l.kind){case i.Kind.OPERATION_DEFINITION:a.push(l)
break
case i.Kind.FRAGMENT_DEFINITION:n[l.name.value]=o(l.selectionSet)}}for(var u=Object.create(null),c=function(r){for(var s=a[r],l=new Set,c=0,d=o(s.selectionSet);c<d.length;c++){var h=d[c]
t(l,n,h)}var p=s.name?s.name.value:""
u[p]={kind:i.Kind.DOCUMENT,definitions:e.definitions.filter((function(e){return e===s||e.kind===i.Kind.FRAGMENT_DEFINITION&&l.has(e.name.value)}))}},d=0;d<a.length;d++)c(d)
return u}
var i=n(2734),r=n(7146)
function t(e,a,n){if(!e.has(n)){e.add(n)
var i=a[n]
if(void 0!==i)for(var r=0;r<i.length;r++)t(e,a,i[r])}}function o(e){var a=[]
return(0,r.visit)(e,{FragmentSpread:function(e){a.push(e.name.value)}}),a}},9315:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.stripIgnoredCharacters=function(e){for(var a=(0,i.isSource)(e)?e:new i.Source(e),n=a.body,o=new t.Lexer(a),l="",u=!1;o.advance().kind!==r.TokenKind.EOF;){var c=o.token,d=c.kind,h=!(0,t.isPunctuatorTokenKind)(c.kind)
u&&(h||c.kind===r.TokenKind.SPREAD)&&(l+=" ")
var p=n.slice(c.start,c.end)
d===r.TokenKind.BLOCK_STRING?l+=s(p):l+=p,u=h}return l}
var i=n(5786),r=n(2795),t=n(2586),o=n(3908)
function s(e){var a=e.slice(3,-3),n=(0,o.dedentBlockStringValue)(a);(0,o.getBlockStringIndentation)(n)>0&&(n="\n"+n)
var i=n[n.length-1]
return('"'===i&&'\\"""'!==n.slice(-4)||"\\"===i)&&(n+="\n"),'"""'+n+'"""'}},3529:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.isEqualType=function e(a,n){return a===n||((0,i.isNonNullType)(a)&&(0,i.isNonNullType)(n)||!(!(0,i.isListType)(a)||!(0,i.isListType)(n)))&&e(a.ofType,n.ofType)},a.isTypeSubTypeOf=function e(a,n,r){return n===r||((0,i.isNonNullType)(r)?!!(0,i.isNonNullType)(n)&&e(a,n.ofType,r.ofType):(0,i.isNonNullType)(n)?e(a,n.ofType,r):(0,i.isListType)(r)?!!(0,i.isListType)(n)&&e(a,n.ofType,r.ofType):!(0,i.isListType)(n)&&(0,i.isAbstractType)(r)&&((0,i.isInterfaceType)(n)||(0,i.isObjectType)(n))&&a.isSubType(r,n))},a.doTypesOverlap=function(e,a,n){return a===n||((0,i.isAbstractType)(a)?(0,i.isAbstractType)(n)?e.getPossibleTypes(a).some((function(a){return e.isSubType(n,a)})):e.isSubType(a,n):!!(0,i.isAbstractType)(n)&&e.isSubType(n,a))}
var i=n(764)},8802:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.typeFromAST=function e(a,n){var s
return n.kind===t.Kind.LIST_TYPE?(s=e(a,n.type))&&new o.GraphQLList(s):n.kind===t.Kind.NON_NULL_TYPE?(s=e(a,n.type))&&new o.GraphQLNonNull(s):n.kind===t.Kind.NAMED_TYPE?a.getType(n.name.value):void(0,r.default)(0,"Unexpected type node: "+(0,i.default)(n))}
var i=s(n(5925)),r=s(n(8004)),t=n(2734),o=n(764)
function s(e){return e&&e.__esModule?e:{default:e}}},6177:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.valueFromAST=function e(a,n,u){if(a){if(a.kind===s.Kind.VARIABLE){var d=a.name.value
if(null==u||void 0===u[d])return
var h=u[d]
if(null===h&&(0,l.isNonNullType)(n))return
return h}if((0,l.isNonNullType)(n)){if(a.kind===s.Kind.NULL)return
return e(a,n.ofType,u)}if(a.kind===s.Kind.NULL)return null
if((0,l.isListType)(n)){var p=n.ofType
if(a.kind===s.Kind.LIST){for(var m=[],f=0,v=a.values;f<v.length;f++){var g=v[f]
if(c(g,u)){if((0,l.isNonNullType)(p))return
m.push(null)}else{var k=e(g,p,u)
if(void 0===k)return
m.push(k)}}return m}var y=e(a,p,u)
if(void 0===y)return
return[y]}if((0,l.isInputObjectType)(n)){if(a.kind!==s.Kind.OBJECT)return
for(var b=Object.create(null),S=(0,r.default)(a.fields,(function(e){return e.name.value})),A=0,M=(0,i.default)(n.getFields());A<M.length;A++){var T=M[A],_=S[T.name]
if(_&&!c(_.value,u)){var w=e(_.value,T.type,u)
if(void 0===w)return
b[T.name]=w}else if(void 0!==T.defaultValue)b[T.name]=T.defaultValue
else if((0,l.isNonNullType)(T.type))return}return b}if((0,l.isLeafType)(n)){var j
try{j=n.parseLiteral(a,u)}catch(e){return}if(void 0===j)return
return j}(0,o.default)(0,"Unexpected input type: "+(0,t.default)(n))}}
var i=u(n(6158)),r=u(n(2944)),t=u(n(5925)),o=u(n(8004)),s=n(2734),l=n(764)
function u(e){return e&&e.__esModule?e:{default:e}}function c(e,a){return e.kind===s.Kind.VARIABLE&&(null==a||void 0===a[e.name.value])}},4080:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.valueFromASTUntyped=function e(a,n){switch(a.kind){case o.Kind.NULL:return null
case o.Kind.INT:return parseInt(a.value,10)
case o.Kind.FLOAT:return parseFloat(a.value)
case o.Kind.STRING:case o.Kind.ENUM:case o.Kind.BOOLEAN:return a.value
case o.Kind.LIST:return a.values.map((function(a){return e(a,n)}))
case o.Kind.OBJECT:return(0,t.default)(a.fields,(function(e){return e.name.value}),(function(a){return e(a.value,n)}))
case o.Kind.VARIABLE:return null==n?void 0:n[a.name.value]}(0,r.default)(0,"Unexpected value node: "+(0,i.default)(a))}
var i=s(n(5925)),r=s(n(8004)),t=s(n(8013)),o=n(2734)
function s(e){return e&&e.__esModule?e:{default:e}}},4241:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.ValidationContext=a.SDLValidationContext=a.ASTValidationContext=void 0
var i=n(2734),r=n(7146),t=n(11)
function o(e,a){e.prototype=Object.create(a.prototype),e.prototype.constructor=e,e.__proto__=a}var s=function(){function e(e,a){this._ast=e,this._fragments=void 0,this._fragmentSpreads=new Map,this._recursivelyReferencedFragments=new Map,this._onError=a}var a=e.prototype
return a.reportError=function(e){this._onError(e)},a.getDocument=function(){return this._ast},a.getFragment=function(e){var a=this._fragments
return a||(this._fragments=a=this.getDocument().definitions.reduce((function(e,a){return a.kind===i.Kind.FRAGMENT_DEFINITION&&(e[a.name.value]=a),e}),Object.create(null))),a[e]},a.getFragmentSpreads=function(e){var a=this._fragmentSpreads.get(e)
if(!a){a=[]
for(var n=[e];0!==n.length;)for(var r=0,t=n.pop().selections;r<t.length;r++){var o=t[r]
o.kind===i.Kind.FRAGMENT_SPREAD?a.push(o):o.selectionSet&&n.push(o.selectionSet)}this._fragmentSpreads.set(e,a)}return a},a.getRecursivelyReferencedFragments=function(e){var a=this._recursivelyReferencedFragments.get(e)
if(!a){a=[]
for(var n=Object.create(null),i=[e.selectionSet];0!==i.length;)for(var r=i.pop(),t=0,o=this.getFragmentSpreads(r);t<o.length;t++){var s=o[t].name.value
if(!0!==n[s]){n[s]=!0
var l=this.getFragment(s)
l&&(a.push(l),i.push(l.selectionSet))}}this._recursivelyReferencedFragments.set(e,a)}return a},e}()
a.ASTValidationContext=s
var l=function(e){function a(a,n,i){var r
return(r=e.call(this,a,i)||this)._schema=n,r}return o(a,e),a.prototype.getSchema=function(){return this._schema},a}(s)
a.SDLValidationContext=l
var u=function(e){function a(a,n,i,r){var t
return(t=e.call(this,n,r)||this)._schema=a,t._typeInfo=i,t._variableUsages=new Map,t._recursiveVariableUsages=new Map,t}o(a,e)
var n=a.prototype
return n.getSchema=function(){return this._schema},n.getVariableUsages=function(e){var a=this._variableUsages.get(e)
if(!a){var n=[],i=new t.TypeInfo(this._schema);(0,r.visit)(e,(0,t.visitWithTypeInfo)(i,{VariableDefinition:function(){return!1},Variable:function(e){n.push({node:e,type:i.getInputType(),defaultValue:i.getDefaultValue()})}})),a=n,this._variableUsages.set(e,a)}return a},n.getRecursiveVariableUsages=function(e){var a=this._recursiveVariableUsages.get(e)
if(!a){a=this.getVariableUsages(e)
for(var n=0,i=this.getRecursivelyReferencedFragments(e);n<i.length;n++){var r=i[n]
a=a.concat(this.getVariableUsages(r))}this._recursiveVariableUsages.set(e,a)}return a},n.getType=function(){return this._typeInfo.getType()},n.getParentType=function(){return this._typeInfo.getParentType()},n.getInputType=function(){return this._typeInfo.getInputType()},n.getParentInputType=function(){return this._typeInfo.getParentInputType()},n.getFieldDef=function(){return this._typeInfo.getFieldDef()},n.getDirective=function(){return this._typeInfo.getDirective()},n.getArgument=function(){return this._typeInfo.getArgument()},n.getEnumValue=function(){return this._typeInfo.getEnumValue()},a}(s)
a.ValidationContext=u},7078:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.ExecutableDefinitionsRule=function(e){return{Document:function(a){for(var n=0,o=a.definitions;n<o.length;n++){var s=o[n]
if(!(0,t.isExecutableDefinitionNode)(s)){var l=s.kind===r.Kind.SCHEMA_DEFINITION||s.kind===r.Kind.SCHEMA_EXTENSION?"schema":'"'+s.name.value+'"'
e.reportError(new i.GraphQLError("The ".concat(l," definition is not executable."),s))}}return!1}}}
var i=n(9736),r=n(2734),t=n(2093)},2397:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.FieldsOnCorrectTypeRule=function(e){return{Field:function(a){var n=e.getParentType()
if(n&&!e.getFieldDef()){var u=e.getSchema(),c=a.name.value,d=(0,r.default)("to use an inline fragment on",function(e,a,n){if(!(0,l.isAbstractType)(a))return[]
for(var r=new Set,t=Object.create(null),s=0,u=e.getPossibleTypes(a);s<u.length;s++){var c=u[s]
if(c.getFields()[n]){r.add(c),t[c.name]=1
for(var d=0,h=c.getInterfaces();d<h.length;d++){var p,m=h[d]
m.getFields()[n]&&(r.add(m),t[m.name]=(null!==(p=t[m.name])&&void 0!==p?p:0)+1)}}}return(0,i.default)(r).sort((function(a,n){var i=t[n.name]-t[a.name]
return 0!==i?i:(0,l.isInterfaceType)(a)&&e.isSubType(a,n)?-1:(0,l.isInterfaceType)(n)&&e.isSubType(n,a)?1:(0,o.default)(a.name,n.name)})).map((function(e){return e.name}))}(u,n,c))
""===d&&(d=(0,r.default)(function(e,a){if((0,l.isObjectType)(e)||(0,l.isInterfaceType)(e)){var n=Object.keys(e.getFields())
return(0,t.default)(a,n)}return[]}(n,c))),e.reportError(new s.GraphQLError('Cannot query field "'.concat(c,'" on type "').concat(n.name,'".')+d,a))}}}}
var i=u(n(6122)),r=u(n(655)),t=u(n(8586)),o=u(n(2461)),s=n(9736),l=n(764)
function u(e){return e&&e.__esModule?e:{default:e}}},4221:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.FragmentsOnCompositeTypesRule=function(e){return{InlineFragment:function(a){var n=a.typeCondition
if(n){var s=(0,o.typeFromAST)(e.getSchema(),n)
if(s&&!(0,t.isCompositeType)(s)){var l=(0,r.print)(n)
e.reportError(new i.GraphQLError('Fragment cannot condition on non composite type "'.concat(l,'".'),n))}}},FragmentDefinition:function(a){var n=(0,o.typeFromAST)(e.getSchema(),a.typeCondition)
if(n&&!(0,t.isCompositeType)(n)){var s=(0,r.print)(a.typeCondition)
e.reportError(new i.GraphQLError('Fragment "'.concat(a.name.value,'" cannot condition on non composite type "').concat(s,'".'),a.typeCondition))}}}}
var i=n(9736),r=n(4723),t=n(764),o=n(8802)},4592:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.KnownArgumentNamesRule=function(e){return c(c({},h(e)),{},{Argument:function(a){var n=e.getArgument(),o=e.getFieldDef(),s=e.getParentType()
if(!n&&o&&s){var l=a.name.value,u=o.args.map((function(e){return e.name})),c=(0,r.default)(l,u)
e.reportError(new t.GraphQLError('Unknown argument "'.concat(l,'" on field "').concat(s.name,".").concat(o.name,'".')+(0,i.default)(c),a))}}})},a.KnownArgumentNamesOnDirectivesRule=h
var i=l(n(655)),r=l(n(8586)),t=n(9736),o=n(2734),s=n(5845)
function l(e){return e&&e.__esModule?e:{default:e}}function u(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?u(Object(n),!0).forEach((function(a){d(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function d(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function h(e){for(var a=Object.create(null),n=e.getSchema(),l=n?n.getDirectives():s.specifiedDirectives,u=0;u<l.length;u++){var c=l[u]
a[c.name]=c.args.map((function(e){return e.name}))}for(var d=e.getDocument().definitions,h=0;h<d.length;h++){var p=d[h]
if(p.kind===o.Kind.DIRECTIVE_DEFINITION){var m,f=null!==(m=p.arguments)&&void 0!==m?m:[]
a[p.name.value]=f.map((function(e){return e.name.value}))}}return{Directive:function(n){var o=n.name.value,s=a[o]
if(n.arguments&&s)for(var l=0,u=n.arguments;l<u.length;l++){var c=u[l],d=c.name.value
if(-1===s.indexOf(d)){var h=(0,r.default)(d,s)
e.reportError(new t.GraphQLError('Unknown argument "'.concat(d,'" on directive "@').concat(o,'".')+(0,i.default)(h),c))}}return!1}}}},5473:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.KnownDirectivesRule=function(e){for(var a=Object.create(null),n=e.getSchema(),u=n?n.getDirectives():l.specifiedDirectives,c=0;c<u.length;c++){var d=u[c]
a[d.name]=d.locations}for(var h=e.getDocument().definitions,p=0;p<h.length;p++){var m=h[p]
m.kind===o.Kind.DIRECTIVE_DEFINITION&&(a[m.name.value]=m.locations.map((function(e){return e.value})))}return{Directive:function(n,l,u,c,d){var h=n.name.value,p=a[h]
if(p){var m=function(e){var a=e[e.length-1]
switch(!Array.isArray(a)||(0,r.default)(0),a.kind){case o.Kind.OPERATION_DEFINITION:return function(e){switch(e){case"query":return s.DirectiveLocation.QUERY
case"mutation":return s.DirectiveLocation.MUTATION
case"subscription":return s.DirectiveLocation.SUBSCRIPTION}(0,r.default)(0,"Unexpected operation: "+(0,i.default)(e))}(a.operation)
case o.Kind.FIELD:return s.DirectiveLocation.FIELD
case o.Kind.FRAGMENT_SPREAD:return s.DirectiveLocation.FRAGMENT_SPREAD
case o.Kind.INLINE_FRAGMENT:return s.DirectiveLocation.INLINE_FRAGMENT
case o.Kind.FRAGMENT_DEFINITION:return s.DirectiveLocation.FRAGMENT_DEFINITION
case o.Kind.VARIABLE_DEFINITION:return s.DirectiveLocation.VARIABLE_DEFINITION
case o.Kind.SCHEMA_DEFINITION:case o.Kind.SCHEMA_EXTENSION:return s.DirectiveLocation.SCHEMA
case o.Kind.SCALAR_TYPE_DEFINITION:case o.Kind.SCALAR_TYPE_EXTENSION:return s.DirectiveLocation.SCALAR
case o.Kind.OBJECT_TYPE_DEFINITION:case o.Kind.OBJECT_TYPE_EXTENSION:return s.DirectiveLocation.OBJECT
case o.Kind.FIELD_DEFINITION:return s.DirectiveLocation.FIELD_DEFINITION
case o.Kind.INTERFACE_TYPE_DEFINITION:case o.Kind.INTERFACE_TYPE_EXTENSION:return s.DirectiveLocation.INTERFACE
case o.Kind.UNION_TYPE_DEFINITION:case o.Kind.UNION_TYPE_EXTENSION:return s.DirectiveLocation.UNION
case o.Kind.ENUM_TYPE_DEFINITION:case o.Kind.ENUM_TYPE_EXTENSION:return s.DirectiveLocation.ENUM
case o.Kind.ENUM_VALUE_DEFINITION:return s.DirectiveLocation.ENUM_VALUE
case o.Kind.INPUT_OBJECT_TYPE_DEFINITION:case o.Kind.INPUT_OBJECT_TYPE_EXTENSION:return s.DirectiveLocation.INPUT_OBJECT
case o.Kind.INPUT_VALUE_DEFINITION:return e[e.length-3].kind===o.Kind.INPUT_OBJECT_TYPE_DEFINITION?s.DirectiveLocation.INPUT_FIELD_DEFINITION:s.DirectiveLocation.ARGUMENT_DEFINITION}}(d)
m&&-1===p.indexOf(m)&&e.reportError(new t.GraphQLError('Directive "@'.concat(h,'" may not be used on ').concat(m,"."),n))}else e.reportError(new t.GraphQLError('Unknown directive "@'.concat(h,'".'),n))}}}
var i=u(n(5925)),r=u(n(8004)),t=n(9736),o=n(2734),s=n(4899),l=n(5845)
function u(e){return e&&e.__esModule?e:{default:e}}},9214:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.KnownFragmentNamesRule=function(e){return{FragmentSpread:function(a){var n=a.name.value
e.getFragment(n)||e.reportError(new i.GraphQLError('Unknown fragment "'.concat(n,'".'),a.name))}}}
var i=n(9736)},7457:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.KnownTypeNamesRule=function(e){for(var a=e.getSchema(),n=a?a.getTypeMap():Object.create(null),s=Object.create(null),l=0,u=e.getDocument().definitions;l<u.length;l++){var d=u[l];(0,o.isTypeDefinitionNode)(d)&&(s[d.name.value]=!0)}var h=Object.keys(n).concat(Object.keys(s))
return{NamedType:function(a,l,u,d,p){var m,f=a.name.value
if(!n[f]&&!s[f]){var v,g=null!==(v=p[2])&&void 0!==v?v:u,k=null!=g&&(m=g,!Array.isArray(m)&&((0,o.isTypeSystemDefinitionNode)(m)||(0,o.isTypeSystemExtensionNode)(m)))
if(k&&function(e){return-1!==c.indexOf(e)}(f))return
var y=(0,r.default)(f,k?c.concat(h):h)
e.reportError(new t.GraphQLError('Unknown type "'.concat(f,'".')+(0,i.default)(y),a))}}}}
var i=u(n(655)),r=u(n(8586)),t=n(9736),o=n(2093),s=n(4538),l=n(5251)
function u(e){return e&&e.__esModule?e:{default:e}}var c=[].concat(s.specifiedScalarTypes,l.introspectionTypes).map((function(e){return e.name}))},2770:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.LoneAnonymousOperationRule=function(e){var a=0
return{Document:function(e){a=e.definitions.filter((function(e){return e.kind===r.Kind.OPERATION_DEFINITION})).length},OperationDefinition:function(n){!n.name&&a>1&&e.reportError(new i.GraphQLError("This anonymous operation must be the only defined operation.",n))}}}
var i=n(9736),r=n(2734)},3377:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.LoneSchemaDefinitionRule=function(e){var a,n,r,t=e.getSchema(),o=null!==(a=null!==(n=null!==(r=null==t?void 0:t.astNode)&&void 0!==r?r:null==t?void 0:t.getQueryType())&&void 0!==n?n:null==t?void 0:t.getMutationType())&&void 0!==a?a:null==t?void 0:t.getSubscriptionType(),s=0
return{SchemaDefinition:function(a){o?e.reportError(new i.GraphQLError("Cannot define a new schema within a schema extension.",a)):(s>0&&e.reportError(new i.GraphQLError("Must provide only one schema definition.",a)),++s)}}}
var i=n(9736)},5216:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.NoFragmentCyclesRule=function(e){var a=Object.create(null),n=[],r=Object.create(null)
return{OperationDefinition:function(){return!1},FragmentDefinition:function(e){return t(e),!1}}
function t(o){if(!a[o.name.value]){var s=o.name.value
a[s]=!0
var l=e.getFragmentSpreads(o.selectionSet)
if(0!==l.length){r[s]=n.length
for(var u=0;u<l.length;u++){var c=l[u],d=c.name.value,h=r[d]
if(n.push(c),void 0===h){var p=e.getFragment(d)
p&&t(p)}else{var m=n.slice(h),f=m.slice(0,-1).map((function(e){return'"'+e.name.value+'"'})).join(", ")
e.reportError(new i.GraphQLError('Cannot spread fragment "'.concat(d,'" within itself')+(""!==f?" via ".concat(f,"."):"."),m))}n.pop()}r[s]=void 0}}}}
var i=n(9736)},4447:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.NoUndefinedVariablesRule=function(e){var a=Object.create(null)
return{OperationDefinition:{enter:function(){a=Object.create(null)},leave:function(n){for(var r=e.getRecursiveVariableUsages(n),t=0;t<r.length;t++){var o=r[t].node,s=o.name.value
!0!==a[s]&&e.reportError(new i.GraphQLError(n.name?'Variable "$'.concat(s,'" is not defined by operation "').concat(n.name.value,'".'):'Variable "$'.concat(s,'" is not defined.'),[o,n]))}}},VariableDefinition:function(e){a[e.variable.name.value]=!0}}}
var i=n(9736)},7981:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.NoUnusedFragmentsRule=function(e){var a=[],n=[]
return{OperationDefinition:function(e){return a.push(e),!1},FragmentDefinition:function(e){return n.push(e),!1},Document:{leave:function(){for(var r=Object.create(null),t=0;t<a.length;t++)for(var o=a[t],s=0,l=e.getRecursivelyReferencedFragments(o);s<l.length;s++)r[l[s].name.value]=!0
for(var u=0;u<n.length;u++){var c=n[u],d=c.name.value
!0!==r[d]&&e.reportError(new i.GraphQLError('Fragment "'.concat(d,'" is never used.'),c))}}}}}
var i=n(9736)},5262:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.NoUnusedVariablesRule=function(e){var a=[]
return{OperationDefinition:{enter:function(){a=[]},leave:function(n){for(var r=Object.create(null),t=e.getRecursiveVariableUsages(n),o=0;o<t.length;o++)r[t[o].node.name.value]=!0
for(var s=0,l=a;s<l.length;s++){var u=l[s],c=u.variable.name.value
!0!==r[c]&&e.reportError(new i.GraphQLError(n.name?'Variable "$'.concat(c,'" is never used in operation "').concat(n.name.value,'".'):'Variable "$'.concat(c,'" is never used.'),u))}}},VariableDefinition:function(e){a.push(e)}}}
var i=n(9736)},2378:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.OverlappingFieldsCanBeMergedRule=function(e){var a=new S,n=new Map
return{SelectionSet:function(i){for(var t=function(e,a,n,i,t){var o=[],s=k(e,a,i,t),l=s[0],u=s[1]
if(function(e,a,n,i,t){for(var o=0,s=(0,r.default)(t);o<s.length;o++){var l=s[o],u=l[0],c=l[1]
if(c.length>1)for(var d=0;d<c.length;d++)for(var h=d+1;h<c.length;h++){var p=v(e,n,i,!1,u,c[d],c[h])
p&&a.push(p)}}}(e,o,a,n,l),0!==u.length)for(var c=0;c<u.length;c++){p(e,o,a,n,!1,l,u[c])
for(var d=c+1;d<u.length;d++)m(e,o,a,n,!1,u[c],u[d])}return o}(e,n,a,e.getParentType(),i),s=0;s<t.length;s++){var l=t[s],u=l[0],c=u[0],d=u[1],f=l[1],g=l[2],y=h(d)
e.reportError(new o.GraphQLError('Fields "'.concat(c,'" conflict because ').concat(y,". Use different aliases on the fields to fetch both if this was intentional."),f.concat(g)))}}}}
var i=d(n(80)),r=d(n(7365)),t=d(n(5925)),o=n(9736),s=n(2734),l=n(4723),u=n(764),c=n(8802)
function d(e){return e&&e.__esModule?e:{default:e}}function h(e){return Array.isArray(e)?e.map((function(e){var a=e[0],n=e[1]
return'subfields "'.concat(a,'" conflict because ')+h(n)})).join(" and "):e}function p(e,a,n,i,r,t,o){var s=e.getFragment(o)
if(s){var l=y(e,n,s),u=l[0],c=l[1]
if(t!==u){f(e,a,n,i,r,t,u)
for(var d=0;d<c.length;d++)p(e,a,n,i,r,t,c[d])}}}function m(e,a,n,i,r,t,o){if(t!==o&&!i.has(t,o,r)){i.add(t,o,r)
var s=e.getFragment(t),l=e.getFragment(o)
if(s&&l){var u=y(e,n,s),c=u[0],d=u[1],h=y(e,n,l),p=h[0],v=h[1]
f(e,a,n,i,r,c,p)
for(var g=0;g<v.length;g++)m(e,a,n,i,r,t,v[g])
for(var k=0;k<d.length;k++)m(e,a,n,i,r,d[k],o)}}}function f(e,a,n,i,r,t,o){for(var s=0,l=Object.keys(t);s<l.length;s++){var u=l[s],c=o[u]
if(c)for(var d=t[u],h=0;h<d.length;h++)for(var p=0;p<c.length;p++){var m=v(e,n,i,r,u,d[h],c[p])
m&&a.push(m)}}}function v(e,a,n,r,o,s,c){var d,h,v=s[0],y=s[1],b=s[2],S=c[0],A=c[1],M=c[2],T=r||v!==S&&(0,u.isObjectType)(v)&&(0,u.isObjectType)(S)
if(!T){var _,w,j=y.name.value,E=A.name.value
if(j!==E)return[[o,'"'.concat(j,'" and "').concat(E,'" are different fields')],[y],[A]]
if(d=null!==(_=y.arguments)&&void 0!==_?_:[],h=null!==(w=A.arguments)&&void 0!==w?w:[],d.length!==h.length||!d.every((function(e){var a,n,r=(0,i.default)(h,(function(a){return a.name.value===e.name.value}))
return!!r&&(a=e.value,n=r.value,(0,l.print)(a)===(0,l.print)(n))})))return[[o,"they have differing arguments"],[y],[A]]}var N=null==b?void 0:b.type,B=null==M?void 0:M.type
if(N&&B&&g(N,B))return[[o,'they return conflicting types "'.concat((0,t.default)(N),'" and "').concat((0,t.default)(B),'"')],[y],[A]]
var P=y.selectionSet,L=A.selectionSet
if(P&&L){var D=function(e,a,n,i,r,t,o,s){var l=[],u=k(e,a,r,t),c=u[0],d=u[1],h=k(e,a,o,s),v=h[0],g=h[1]
if(f(e,l,a,n,i,c,v),0!==g.length)for(var y=0;y<g.length;y++)p(e,l,a,n,i,c,g[y])
if(0!==d.length)for(var b=0;b<d.length;b++)p(e,l,a,n,i,v,d[b])
for(var S=0;S<d.length;S++)for(var A=0;A<g.length;A++)m(e,l,a,n,i,d[S],g[A])
return l}(e,a,n,T,(0,u.getNamedType)(N),P,(0,u.getNamedType)(B),L)
return function(e,a,n,i){if(e.length>0)return[[a,e.map((function(e){return e[0]}))],e.reduce((function(e,a){var n=a[1]
return e.concat(n)}),[n]),e.reduce((function(e,a){var n=a[2]
return e.concat(n)}),[i])]}(D,o,y,A)}}function g(e,a){return(0,u.isListType)(e)?!(0,u.isListType)(a)||g(e.ofType,a.ofType):!!(0,u.isListType)(a)||((0,u.isNonNullType)(e)?!(0,u.isNonNullType)(a)||g(e.ofType,a.ofType):!!(0,u.isNonNullType)(a)||!(!(0,u.isLeafType)(e)&&!(0,u.isLeafType)(a))&&e!==a)}function k(e,a,n,i){var r=a.get(i)
if(!r){var t=Object.create(null),o=Object.create(null)
b(e,n,i,t,o),r=[t,Object.keys(o)],a.set(i,r)}return r}function y(e,a,n){var i=a.get(n.selectionSet)
if(i)return i
var r=(0,c.typeFromAST)(e.getSchema(),n.typeCondition)
return k(e,a,r,n.selectionSet)}function b(e,a,n,i,r){for(var t=0,o=n.selections;t<o.length;t++){var l=o[t]
switch(l.kind){case s.Kind.FIELD:var d=l.name.value,h=void 0;((0,u.isObjectType)(a)||(0,u.isInterfaceType)(a))&&(h=a.getFields()[d])
var p=l.alias?l.alias.value:d
i[p]||(i[p]=[]),i[p].push([a,l,h])
break
case s.Kind.FRAGMENT_SPREAD:r[l.name.value]=!0
break
case s.Kind.INLINE_FRAGMENT:var m=l.typeCondition,f=m?(0,c.typeFromAST)(e.getSchema(),m):a
b(e,f,l.selectionSet,i,r)}}}var S=function(){function e(){this._data=Object.create(null)}var a=e.prototype
return a.has=function(e,a,n){var i=this._data[e],r=i&&i[a]
return void 0!==r&&(!1!==n||!1===r)},a.add=function(e,a,n){this._pairSetAdd(e,a,n),this._pairSetAdd(a,e,n)},a._pairSetAdd=function(e,a,n){var i=this._data[e]
i||(i=Object.create(null),this._data[e]=i),i[a]=n},e}()},2777:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.PossibleFragmentSpreadsRule=function(e){return{InlineFragment:function(a){var n=e.getType(),i=e.getParentType()
if((0,o.isCompositeType)(n)&&(0,o.isCompositeType)(i)&&!(0,l.doTypesOverlap)(e.getSchema(),n,i)){var s=(0,r.default)(i),u=(0,r.default)(n)
e.reportError(new t.GraphQLError('Fragment cannot be spread here as objects of type "'.concat(s,'" can never be of type "').concat(u,'".'),a))}},FragmentSpread:function(a){var n=a.name.value,i=function(e,a){var n=e.getFragment(a)
if(n){var i=(0,s.typeFromAST)(e.getSchema(),n.typeCondition)
if((0,o.isCompositeType)(i))return i}}(e,n),u=e.getParentType()
if(i&&u&&!(0,l.doTypesOverlap)(e.getSchema(),i,u)){var c=(0,r.default)(u),d=(0,r.default)(i)
e.reportError(new t.GraphQLError('Fragment "'.concat(n,'" cannot be spread here as objects of type "').concat(c,'" can never be of type "').concat(d,'".'),a))}}}}
var i,r=(i=n(5925))&&i.__esModule?i:{default:i},t=n(9736),o=n(764),s=n(8802),l=n(3529)},3050:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.PossibleTypeExtensionsRule=function(e){for(var a=e.getSchema(),n=Object.create(null),i=0,h=e.getDocument().definitions;i<h.length;i++){var p=h[i];(0,c.isTypeDefinitionNode)(p)&&(n[p.name.value]=p)}return{ScalarTypeExtension:f,ObjectTypeExtension:f,InterfaceTypeExtension:f,UnionTypeExtension:f,EnumTypeExtension:f,InputObjectTypeExtension:f}
function f(i){var c,h,p=i.name.value,f=n[p],v=null==a?void 0:a.getType(p)
if(f?c=m[f.kind]:v&&(h=v,c=(0,d.isScalarType)(h)?u.Kind.SCALAR_TYPE_EXTENSION:(0,d.isObjectType)(h)?u.Kind.OBJECT_TYPE_EXTENSION:(0,d.isInterfaceType)(h)?u.Kind.INTERFACE_TYPE_EXTENSION:(0,d.isUnionType)(h)?u.Kind.UNION_TYPE_EXTENSION:(0,d.isEnumType)(h)?u.Kind.ENUM_TYPE_EXTENSION:(0,d.isInputObjectType)(h)?u.Kind.INPUT_OBJECT_TYPE_EXTENSION:void(0,t.default)(0,"Unexpected type: "+(0,r.default)(h))),c){if(c!==i.kind){var g=function(e){switch(e){case u.Kind.SCALAR_TYPE_EXTENSION:return"scalar"
case u.Kind.OBJECT_TYPE_EXTENSION:return"object"
case u.Kind.INTERFACE_TYPE_EXTENSION:return"interface"
case u.Kind.UNION_TYPE_EXTENSION:return"union"
case u.Kind.ENUM_TYPE_EXTENSION:return"enum"
case u.Kind.INPUT_OBJECT_TYPE_EXTENSION:return"input object"}(0,t.default)(0,"Unexpected kind: "+(0,r.default)(e))}(i.kind)
e.reportError(new l.GraphQLError("Cannot extend non-".concat(g,' type "').concat(p,'".'),f?[f,i]:i))}}else{var k=Object.keys(n)
a&&(k=k.concat(Object.keys(a.getTypeMap())))
var y=(0,s.default)(p,k)
e.reportError(new l.GraphQLError('Cannot extend type "'.concat(p,'" because it is not defined.')+(0,o.default)(y),i.name))}}}
var i,r=h(n(5925)),t=h(n(8004)),o=h(n(655)),s=h(n(8586)),l=n(9736),u=n(2734),c=n(2093),d=n(764)
function h(e){return e&&e.__esModule?e:{default:e}}function p(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}var m=(p(i={},u.Kind.SCALAR_TYPE_DEFINITION,u.Kind.SCALAR_TYPE_EXTENSION),p(i,u.Kind.OBJECT_TYPE_DEFINITION,u.Kind.OBJECT_TYPE_EXTENSION),p(i,u.Kind.INTERFACE_TYPE_DEFINITION,u.Kind.INTERFACE_TYPE_EXTENSION),p(i,u.Kind.UNION_TYPE_DEFINITION,u.Kind.UNION_TYPE_EXTENSION),p(i,u.Kind.ENUM_TYPE_DEFINITION,u.Kind.ENUM_TYPE_EXTENSION),p(i,u.Kind.INPUT_OBJECT_TYPE_DEFINITION,u.Kind.INPUT_OBJECT_TYPE_EXTENSION),i)},9767:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.ProvidedRequiredArgumentsRule=function(e){return h(h({},m(e)),{},{Field:{leave:function(a){var n,o=e.getFieldDef()
if(!o)return!1
for(var s=null!==(n=a.arguments)&&void 0!==n?n:[],l=(0,r.default)(s,(function(e){return e.name.value})),c=0,d=o.args;c<d.length;c++){var h=d[c]
if(!l[h.name]&&(0,u.isRequiredArgument)(h)){var p=(0,i.default)(h.type)
e.reportError(new t.GraphQLError('Field "'.concat(o.name,'" argument "').concat(h.name,'" of type "').concat(p,'" is required, but it was not provided.'),a))}}}}})},a.ProvidedRequiredArgumentsOnDirectivesRule=m
var i=c(n(5925)),r=c(n(2944)),t=n(9736),o=n(2734),s=n(4723),l=n(5845),u=n(764)
function c(e){return e&&e.__esModule?e:{default:e}}function d(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function h(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?d(Object(n),!0).forEach((function(a){p(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function p(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function m(e){for(var a=Object.create(null),n=e.getSchema(),c=n?n.getDirectives():l.specifiedDirectives,d=0;d<c.length;d++){var h=c[d]
a[h.name]=(0,r.default)(h.args.filter(u.isRequiredArgument),(function(e){return e.name}))}for(var p=e.getDocument().definitions,m=0;m<p.length;m++){var v=p[m]
if(v.kind===o.Kind.DIRECTIVE_DEFINITION){var g,k=null!==(g=v.arguments)&&void 0!==g?g:[]
a[v.name.value]=(0,r.default)(k.filter(f),(function(e){return e.name.value}))}}return{Directive:{leave:function(n){var o=n.name.value,l=a[o]
if(l)for(var c,d=null!==(c=n.arguments)&&void 0!==c?c:[],h=(0,r.default)(d,(function(e){return e.name.value})),p=0,m=Object.keys(l);p<m.length;p++){var f=m[p]
if(!h[f]){var v=l[f].type,g=(0,u.isType)(v)?(0,i.default)(v):(0,s.print)(v)
e.reportError(new t.GraphQLError('Directive "@'.concat(o,'" argument "').concat(f,'" of type "').concat(g,'" is required, but it was not provided.'),n))}}}}}}function f(e){return e.type.kind===o.Kind.NON_NULL_TYPE&&null==e.defaultValue}},3301:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.ScalarLeafsRule=function(e){return{Field:function(a){var n=e.getType(),i=a.selectionSet
if(n)if((0,o.isLeafType)((0,o.getNamedType)(n))){if(i){var s=a.name.value,l=(0,r.default)(n)
e.reportError(new t.GraphQLError('Field "'.concat(s,'" must not have a selection since type "').concat(l,'" has no subfields.'),i))}}else if(!i){var u=a.name.value,c=(0,r.default)(n)
e.reportError(new t.GraphQLError('Field "'.concat(u,'" of type "').concat(c,'" must have a selection of subfields. Did you mean "').concat(u,' { ... }"?'),a))}}}}
var i,r=(i=n(5925))&&i.__esModule?i:{default:i},t=n(9736),o=n(764)},3812:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.SingleFieldSubscriptionsRule=function(e){return{OperationDefinition:function(a){"subscription"===a.operation&&1!==a.selectionSet.selections.length&&e.reportError(new i.GraphQLError(a.name?'Subscription "'.concat(a.name.value,'" must select only one top level field.'):"Anonymous Subscription must select only one top level field.",a.selectionSet.selections.slice(1)))}}}
var i=n(9736)},7405:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.UniqueArgumentNamesRule=function(e){var a=Object.create(null)
return{Field:function(){a=Object.create(null)},Directive:function(){a=Object.create(null)},Argument:function(n){var r=n.name.value
return a[r]?e.reportError(new i.GraphQLError('There can be only one argument named "'.concat(r,'".'),[a[r],n.name])):a[r]=n.name,!1}}}
var i=n(9736)},1837:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.UniqueDirectiveNamesRule=function(e){var a=Object.create(null),n=e.getSchema()
return{DirectiveDefinition:function(r){var t=r.name.value
if(null==n||!n.getDirective(t))return a[t]?e.reportError(new i.GraphQLError('There can be only one directive named "@'.concat(t,'".'),[a[t],r.name])):a[t]=r.name,!1
e.reportError(new i.GraphQLError('Directive "@'.concat(t,'" already exists in the schema. It cannot be redefined.'),r.name))}}}
var i=n(9736)},5369:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.UniqueDirectivesPerLocationRule=function(e){for(var a=Object.create(null),n=e.getSchema(),s=n?n.getDirectives():o.specifiedDirectives,l=0;l<s.length;l++){var u=s[l]
a[u.name]=!u.isRepeatable}for(var c=e.getDocument().definitions,d=0;d<c.length;d++){var h=c[d]
h.kind===r.Kind.DIRECTIVE_DEFINITION&&(a[h.name.value]=!h.repeatable)}var p=Object.create(null),m=Object.create(null)
return{enter:function(n){if(null!=n.directives){var o
if(n.kind===r.Kind.SCHEMA_DEFINITION||n.kind===r.Kind.SCHEMA_EXTENSION)o=p
else if((0,t.isTypeDefinitionNode)(n)||(0,t.isTypeExtensionNode)(n)){var s=n.name.value
void 0===(o=m[s])&&(m[s]=o=Object.create(null))}else o=Object.create(null)
for(var l=0,u=n.directives;l<u.length;l++){var c=u[l],d=c.name.value
a[d]&&(o[d]?e.reportError(new i.GraphQLError('The directive "@'.concat(d,'" can only be used once at this location.'),[o[d],c])):o[d]=c)}}}}}
var i=n(9736),r=n(2734),t=n(2093),o=n(5845)},5474:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.UniqueEnumValueNamesRule=function(e){var a=e.getSchema(),n=a?a.getTypeMap():Object.create(null),t=Object.create(null)
return{EnumTypeDefinition:o,EnumTypeExtension:o}
function o(a){var o,s=a.name.value
t[s]||(t[s]=Object.create(null))
for(var l=null!==(o=a.values)&&void 0!==o?o:[],u=t[s],c=0;c<l.length;c++){var d=l[c],h=d.name.value,p=n[s];(0,r.isEnumType)(p)&&p.getValue(h)?e.reportError(new i.GraphQLError('Enum value "'.concat(s,".").concat(h,'" already exists in the schema. It cannot also be defined in this type extension.'),d.name)):u[h]?e.reportError(new i.GraphQLError('Enum value "'.concat(s,".").concat(h,'" can only be defined once.'),[u[h],d.name])):u[h]=d.name}return!1}}
var i=n(9736),r=n(764)},7066:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.UniqueFieldDefinitionNamesRule=function(e){var a=e.getSchema(),n=a?a.getTypeMap():Object.create(null),r=Object.create(null)
return{InputObjectTypeDefinition:o,InputObjectTypeExtension:o,InterfaceTypeDefinition:o,InterfaceTypeExtension:o,ObjectTypeDefinition:o,ObjectTypeExtension:o}
function o(a){var o,s=a.name.value
r[s]||(r[s]=Object.create(null))
for(var l=null!==(o=a.fields)&&void 0!==o?o:[],u=r[s],c=0;c<l.length;c++){var d=l[c],h=d.name.value
t(n[s],h)?e.reportError(new i.GraphQLError('Field "'.concat(s,".").concat(h,'" already exists in the schema. It cannot also be defined in this type extension.'),d.name)):u[h]?e.reportError(new i.GraphQLError('Field "'.concat(s,".").concat(h,'" can only be defined once.'),[u[h],d.name])):u[h]=d.name}return!1}}
var i=n(9736),r=n(764)
function t(e,a){return!!((0,r.isObjectType)(e)||(0,r.isInterfaceType)(e)||(0,r.isInputObjectType)(e))&&null!=e.getFields()[a]}},52:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.UniqueFragmentNamesRule=function(e){var a=Object.create(null)
return{OperationDefinition:function(){return!1},FragmentDefinition:function(n){var r=n.name.value
return a[r]?e.reportError(new i.GraphQLError('There can be only one fragment named "'.concat(r,'".'),[a[r],n.name])):a[r]=n.name,!1}}}
var i=n(9736)},3850:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.UniqueInputFieldNamesRule=function(e){var a=[],n=Object.create(null)
return{ObjectValue:{enter:function(){a.push(n),n=Object.create(null)},leave:function(){n=a.pop()}},ObjectField:function(a){var r=a.name.value
n[r]?e.reportError(new i.GraphQLError('There can be only one input field named "'.concat(r,'".'),[n[r],a.name])):n[r]=a.name}}}
var i=n(9736)},3741:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.UniqueOperationNamesRule=function(e){var a=Object.create(null)
return{OperationDefinition:function(n){var r=n.name
return r&&(a[r.value]?e.reportError(new i.GraphQLError('There can be only one operation named "'.concat(r.value,'".'),[a[r.value],r])):a[r.value]=r),!1},FragmentDefinition:function(){return!1}}}
var i=n(9736)},9436:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.UniqueOperationTypesRule=function(e){var a=e.getSchema(),n=Object.create(null),r=a?{query:a.getQueryType(),mutation:a.getMutationType(),subscription:a.getSubscriptionType()}:{}
return{SchemaDefinition:t,SchemaExtension:t}
function t(a){for(var t,o=null!==(t=a.operationTypes)&&void 0!==t?t:[],s=0;s<o.length;s++){var l=o[s],u=l.operation,c=n[u]
r[u]?e.reportError(new i.GraphQLError("Type for ".concat(u," already defined in the schema. It cannot be redefined."),l)):c?e.reportError(new i.GraphQLError("There can be only one ".concat(u," type in schema."),[c,l])):n[u]=l}return!1}}
var i=n(9736)},6995:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.UniqueTypeNamesRule=function(e){var a=Object.create(null),n=e.getSchema()
return{ScalarTypeDefinition:r,ObjectTypeDefinition:r,InterfaceTypeDefinition:r,UnionTypeDefinition:r,EnumTypeDefinition:r,InputObjectTypeDefinition:r}
function r(r){var t=r.name.value
if(null==n||!n.getType(t))return a[t]?e.reportError(new i.GraphQLError('There can be only one type named "'.concat(t,'".'),[a[t],r.name])):a[t]=r.name,!1
e.reportError(new i.GraphQLError('Type "'.concat(t,'" already exists in the schema. It cannot also be defined in this type definition.'),r.name))}}
var i=n(9736)},8739:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.UniqueVariableNamesRule=function(e){var a=Object.create(null)
return{OperationDefinition:function(){a=Object.create(null)},VariableDefinition:function(n){var r=n.variable.name.value
a[r]?e.reportError(new i.GraphQLError('There can be only one variable named "$'.concat(r,'".'),[a[r],n.variable.name])):a[r]=n.variable.name}}}
var i=n(9736)},4900:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.ValuesOfCorrectTypeRule=function(e){return{ListValue:function(a){var n=(0,c.getNullableType)(e.getParentInputType())
if(!(0,c.isListType)(n))return h(e,a),!1},ObjectValue:function(a){var n=(0,c.getNamedType)(e.getInputType())
if(!(0,c.isInputObjectType)(n))return h(e,a),!1
for(var o=(0,r.default)(a.fields,(function(e){return e.name.value})),s=0,u=(0,i.default)(n.getFields());s<u.length;s++){var d=u[s]
if(!o[d.name]&&(0,c.isRequiredInputField)(d)){var p=(0,t.default)(d.type)
e.reportError(new l.GraphQLError('Field "'.concat(n.name,".").concat(d.name,'" of required type "').concat(p,'" was not provided.'),a))}}},ObjectField:function(a){var n=(0,c.getNamedType)(e.getParentInputType())
if(!e.getInputType()&&(0,c.isInputObjectType)(n)){var i=(0,s.default)(a.name.value,Object.keys(n.getFields()))
e.reportError(new l.GraphQLError('Field "'.concat(a.name.value,'" is not defined by type "').concat(n.name,'".')+(0,o.default)(i),a))}},NullValue:function(a){var n=e.getInputType();(0,c.isNonNullType)(n)&&e.reportError(new l.GraphQLError('Expected value of type "'.concat((0,t.default)(n),'", found ').concat((0,u.print)(a),"."),a))},EnumValue:function(a){return h(e,a)},IntValue:function(a){return h(e,a)},FloatValue:function(a){return h(e,a)},StringValue:function(a){return h(e,a)},BooleanValue:function(a){return h(e,a)}}}
var i=d(n(6158)),r=d(n(2944)),t=d(n(5925)),o=d(n(655)),s=d(n(8586)),l=n(9736),u=n(4723),c=n(764)
function d(e){return e&&e.__esModule?e:{default:e}}function h(e,a){var n=e.getInputType()
if(n){var i=(0,c.getNamedType)(n)
if((0,c.isLeafType)(i))try{if(void 0===i.parseLiteral(a,void 0)){var r=(0,t.default)(n)
e.reportError(new l.GraphQLError('Expected value of type "'.concat(r,'", found ').concat((0,u.print)(a),"."),a))}}catch(i){var o=(0,t.default)(n)
i instanceof l.GraphQLError?e.reportError(i):e.reportError(new l.GraphQLError('Expected value of type "'.concat(o,'", found ').concat((0,u.print)(a),"; ")+i.message,a,void 0,void 0,void 0,i))}else{var s=(0,t.default)(n)
e.reportError(new l.GraphQLError('Expected value of type "'.concat(s,'", found ').concat((0,u.print)(a),"."),a))}}}},5021:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.VariablesAreInputTypesRule=function(e){return{VariableDefinition:function(a){var n=(0,o.typeFromAST)(e.getSchema(),a.type)
if(n&&!(0,t.isInputType)(n)){var s=a.variable.name.value,l=(0,r.print)(a.type)
e.reportError(new i.GraphQLError('Variable "$'.concat(s,'" cannot be non-input type "').concat(l,'".'),a.type))}}}}
var i=n(9736),r=n(4723),t=n(764),o=n(8802)},9042:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.VariablesInAllowedPositionRule=function(e){var a=Object.create(null)
return{OperationDefinition:{enter:function(){a=Object.create(null)},leave:function(n){for(var i=e.getRecursiveVariableUsages(n),o=0;o<i.length;o++){var s=i[o],u=s.node,d=s.type,h=s.defaultValue,p=u.name.value,m=a[p]
if(m&&d){var f=e.getSchema(),v=(0,l.typeFromAST)(f,m.type)
if(v&&!c(f,v,m.defaultValue,d,h)){var g=(0,r.default)(v),k=(0,r.default)(d)
e.reportError(new t.GraphQLError('Variable "$'.concat(p,'" of type "').concat(g,'" used in position expecting type "').concat(k,'".'),[m,u]))}}}}},VariableDefinition:function(e){a[e.variable.name.value]=e}}}
var i,r=(i=n(5925))&&i.__esModule?i:{default:i},t=n(9736),o=n(2734),s=n(764),l=n(8802),u=n(3529)
function c(e,a,n,i,r){if((0,s.isNonNullType)(i)&&!(0,s.isNonNullType)(a)){if((null==n||n.kind===o.Kind.NULL)&&void 0===r)return!1
var t=i.ofType
return(0,u.isTypeSubTypeOf)(e,a,t)}return(0,u.isTypeSubTypeOf)(e,a,i)}},9463:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.NoDeprecatedCustomRule=function(e){return{Field:function(a){var n=e.getFieldDef(),i=null==n?void 0:n.deprecationReason
if(n&&null!=i){var o=e.getParentType()
null!=o||(0,r.default)(0),e.reportError(new t.GraphQLError("The field ".concat(o.name,".").concat(n.name," is deprecated. ").concat(i),a))}},Argument:function(a){var n=e.getArgument(),i=null==n?void 0:n.deprecationReason
if(n&&null!=i){var o=e.getDirective()
if(null!=o)e.reportError(new t.GraphQLError('Directive "@'.concat(o.name,'" argument "').concat(n.name,'" is deprecated. ').concat(i),a))
else{var s=e.getParentType(),l=e.getFieldDef()
null!=s&&null!=l||(0,r.default)(0),e.reportError(new t.GraphQLError('Field "'.concat(s.name,".").concat(l.name,'" argument "').concat(n.name,'" is deprecated. ').concat(i),a))}}},ObjectField:function(a){var n=(0,o.getNamedType)(e.getParentInputType())
if((0,o.isInputObjectType)(n)){var i=n.getFields()[a.name.value],r=null==i?void 0:i.deprecationReason
null!=r&&e.reportError(new t.GraphQLError("The input field ".concat(n.name,".").concat(i.name," is deprecated. ").concat(r),a))}},EnumValue:function(a){var n=e.getEnumValue(),i=null==n?void 0:n.deprecationReason
if(n&&null!=i){var s=(0,o.getNamedType)(e.getInputType())
null!=s||(0,r.default)(0),e.reportError(new t.GraphQLError('The enum value "'.concat(s.name,".").concat(n.name,'" is deprecated. ').concat(i),a))}}}}
var i,r=(i=n(8004))&&i.__esModule?i:{default:i},t=n(9736),o=n(764)},6183:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.specifiedSDLRules=a.specifiedRules=void 0
var i=n(7078),r=n(3741),t=n(2770),o=n(3812),s=n(7457),l=n(4221),u=n(5021),c=n(3301),d=n(2397),h=n(52),p=n(9214),m=n(7981),f=n(2777),v=n(5216),g=n(8739),k=n(4447),y=n(5262),b=n(5473),S=n(5369),A=n(4592),M=n(7405),T=n(4900),_=n(9767),w=n(9042),j=n(2378),E=n(3850),N=n(3377),B=n(9436),P=n(6995),L=n(5474),D=n(7066),x=n(1837),C=n(3050),K=Object.freeze([i.ExecutableDefinitionsRule,r.UniqueOperationNamesRule,t.LoneAnonymousOperationRule,o.SingleFieldSubscriptionsRule,s.KnownTypeNamesRule,l.FragmentsOnCompositeTypesRule,u.VariablesAreInputTypesRule,c.ScalarLeafsRule,d.FieldsOnCorrectTypeRule,h.UniqueFragmentNamesRule,p.KnownFragmentNamesRule,m.NoUnusedFragmentsRule,f.PossibleFragmentSpreadsRule,v.NoFragmentCyclesRule,g.UniqueVariableNamesRule,k.NoUndefinedVariablesRule,y.NoUnusedVariablesRule,b.KnownDirectivesRule,S.UniqueDirectivesPerLocationRule,A.KnownArgumentNamesRule,M.UniqueArgumentNamesRule,T.ValuesOfCorrectTypeRule,_.ProvidedRequiredArgumentsRule,w.VariablesInAllowedPositionRule,j.OverlappingFieldsCanBeMergedRule,E.UniqueInputFieldNamesRule])
a.specifiedRules=K
var R=Object.freeze([N.LoneSchemaDefinitionRule,B.UniqueOperationTypesRule,P.UniqueTypeNamesRule,L.UniqueEnumValueNamesRule,D.UniqueFieldDefinitionNamesRule,x.UniqueDirectiveNamesRule,s.KnownTypeNamesRule,b.KnownDirectivesRule,S.UniqueDirectivesPerLocationRule,C.PossibleTypeExtensionsRule,A.KnownArgumentNamesOnDirectivesRule,M.UniqueArgumentNamesRule,E.UniqueInputFieldNamesRule,_.ProvidedRequiredArgumentsOnDirectivesRule])
a.specifiedSDLRules=R},8345:(e,a,n)=>{"use strict"
Object.defineProperty(a,"__esModule",{value:!0}),a.validate=function(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:u.specifiedRules,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new l.TypeInfo(e),d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{maxErrors:void 0}
a||(0,r.default)(0,"Must provide document."),(0,s.assertValidSchema)(e)
var h=Object.freeze({}),p=[],m=new c.ValidationContext(e,a,i,(function(e){if(null!=d.maxErrors&&p.length>=d.maxErrors)throw p.push(new t.GraphQLError("Too many validation errors, error limit reached. Validation aborted.")),h
p.push(e)})),f=(0,o.visitInParallel)(n.map((function(e){return e(m)})))
try{(0,o.visit)(a,(0,l.visitWithTypeInfo)(i,f))}catch(e){if(e!==h)throw e}return p},a.validateSDL=d,a.assertValidSDL=function(e){var a=d(e)
if(0!==a.length)throw new Error(a.map((function(e){return e.message})).join("\n\n"))},a.assertValidSDLExtension=function(e,a){var n=d(e,a)
if(0!==n.length)throw new Error(n.map((function(e){return e.message})).join("\n\n"))}
var i,r=(i=n(1789))&&i.__esModule?i:{default:i},t=n(9736),o=n(7146),s=n(1368),l=n(11),u=n(6183),c=n(4241)
function d(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:u.specifiedSDLRules,i=[],r=new c.SDLValidationContext(e,a,(function(e){i.push(e)})),t=n.map((function(e){return e(r)}))
return(0,o.visit)(e,(0,o.visitInParallel)(t)),i}},7278:e=>{function a(e){return e instanceof Map?e.clear=e.delete=e.set=function(){throw new Error("map is read-only")}:e instanceof Set&&(e.add=e.clear=e.delete=function(){throw new Error("set is read-only")}),Object.freeze(e),Object.getOwnPropertyNames(e).forEach((function(n){var i=e[n]
"object"!=typeof i||Object.isFrozen(i)||a(i)})),e}var n=a,i=a
n.default=i
class r{constructor(e){void 0===e.data&&(e.data={}),this.data=e.data,this.isMatchIgnored=!1}ignoreMatch(){this.isMatchIgnored=!0}}function t(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")}function o(e){const a=Object.create(null)
for(const t in e)a[t]=e[t]
for(var n=arguments.length,i=new Array(n>1?n-1:0),r=1;r<n;r++)i[r-1]=arguments[r]
return i.forEach((function(e){for(const n in e)a[n]=e[n]})),a}const s=e=>!!e.kind
class l{constructor(e,a){this.buffer="",this.classPrefix=a.classPrefix,e.walk(this)}addText(e){this.buffer+=t(e)}openNode(e){if(!s(e))return
let a=e.kind
e.sublanguage||(a=`${this.classPrefix}${a}`),this.span(a)}closeNode(e){s(e)&&(this.buffer+="</span>")}value(){return this.buffer}span(e){this.buffer+=`<span class="${e}">`}}class u{constructor(){this.rootNode={children:[]},this.stack=[this.rootNode]}get top(){return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(e){this.top.children.push(e)}openNode(e){const a={kind:e,children:[]}
this.add(a),this.stack.push(a)}closeNode(){if(this.stack.length>1)return this.stack.pop()}closeAllNodes(){for(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)}walk(e){return this.constructor._walk(e,this.rootNode)}static _walk(e,a){return"string"==typeof a?e.addText(a):a.children&&(e.openNode(a),a.children.forEach((a=>this._walk(e,a))),e.closeNode(a)),e}static _collapse(e){"string"!=typeof e&&e.children&&(e.children.every((e=>"string"==typeof e))?e.children=[e.children.join("")]:e.children.forEach((e=>{u._collapse(e)})))}}class c extends u{constructor(e){super(),this.options=e}addKeyword(e,a){""!==e&&(this.openNode(a),this.addText(e),this.closeNode())}addText(e){""!==e&&this.add(e)}addSublanguage(e,a){const n=e.root
n.kind=a,n.sublanguage=!0,this.add(n)}toHTML(){return new l(this,this.options).value()}finalize(){return!0}}function d(e){return e?"string"==typeof e?e:e.source:null}function h(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
const i=a.map((e=>d(e))).join("")
return i}const p=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./,m="[a-zA-Z]\\w*",f="[a-zA-Z_]\\w*",v="\\b\\d+(\\.\\d+)?",g="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",k="\\b(0b[01]+)",y={begin:"\\\\[\\s\\S]",relevance:0},b={className:"string",begin:"'",end:"'",illegal:"\\n",contains:[y]},S={className:"string",begin:'"',end:'"',illegal:"\\n",contains:[y]},A={begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},M=function(e,a){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}
const i=o({className:"comment",begin:e,end:a,contains:[]},n)
return i.contains.push(A),i.contains.push({className:"doctag",begin:"(?:TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):",relevance:0}),i},T=M("//","$"),_=M("/\\*","\\*/"),w=M("#","$"),j={className:"number",begin:v,relevance:0},E={className:"number",begin:g,relevance:0},N={className:"number",begin:k,relevance:0},B={className:"number",begin:v+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",relevance:0},P={begin:/(?=\/[^/\n]*\/)/,contains:[{className:"regexp",begin:/\//,end:/\/[gimuy]*/,illegal:/\n/,contains:[y,{begin:/\[/,end:/\]/,relevance:0,contains:[y]}]}]},L={className:"title",begin:m,relevance:0},D={className:"title",begin:f,relevance:0}
var x=Object.freeze({__proto__:null,MATCH_NOTHING_RE:/\b\B/,IDENT_RE:m,UNDERSCORE_IDENT_RE:f,NUMBER_RE:v,C_NUMBER_RE:g,BINARY_NUMBER_RE:k,RE_STARTERS_RE:"!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",SHEBANG:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}
const a=/^#![ ]*\//
return e.binary&&(e.begin=h(a,/.*\b/,e.binary,/\b.*/)),o({className:"meta",begin:a,end:/$/,relevance:0,"on:begin":(e,a)=>{0!==e.index&&a.ignoreMatch()}},e)},BACKSLASH_ESCAPE:y,APOS_STRING_MODE:b,QUOTE_STRING_MODE:S,PHRASAL_WORDS_MODE:A,COMMENT:M,C_LINE_COMMENT_MODE:T,C_BLOCK_COMMENT_MODE:_,HASH_COMMENT_MODE:w,NUMBER_MODE:j,C_NUMBER_MODE:E,BINARY_NUMBER_MODE:N,CSS_NUMBER_MODE:B,REGEXP_MODE:P,TITLE_MODE:L,UNDERSCORE_TITLE_MODE:D,METHOD_GUARD:{begin:"\\.\\s*[a-zA-Z_]\\w*",relevance:0},END_SAME_AS_BEGIN:function(e){return Object.assign(e,{"on:begin":(e,a)=>{a.data._beginMatch=e[1]},"on:end":(e,a)=>{a.data._beginMatch!==e[1]&&a.ignoreMatch()}})}})
function C(e,a){"."===e.input[e.index-1]&&a.ignoreMatch()}function K(e,a){a&&e.beginKeywords&&(e.begin="\\b("+e.beginKeywords.split(" ").join("|")+")(?!\\.)(?=\\b|\\s)",e.__beforeBegin=C,e.keywords=e.keywords||e.beginKeywords,delete e.beginKeywords,void 0===e.relevance&&(e.relevance=0))}function R(e,a){Array.isArray(e.illegal)&&(e.illegal=function(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
return"("+a.map((e=>d(e))).join("|")+")"}(...e.illegal))}function z(e,a){if(e.match){if(e.begin||e.end)throw new Error("begin & end are not supported with match")
e.begin=e.match,delete e.match}}function O(e,a){void 0===e.relevance&&(e.relevance=1)}const I=["of","and","for","in","not","or","if","then","parent","list","value"],V="keyword"
function G(e,a){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:V
const i={}
return"string"==typeof e?r(n,e.split(" ")):Array.isArray(e)?r(n,e):Object.keys(e).forEach((function(n){Object.assign(i,G(e[n],a,n))})),i
function r(e,n){a&&(n=n.map((e=>e.toLowerCase()))),n.forEach((function(a){const n=a.split("|")
i[n[0]]=[e,H(n[0],n[1])]}))}}function H(e,a){return a?Number(a):function(e){return I.includes(e.toLowerCase())}(e)?0:1}function F(e,a){let{plugins:n}=a
function i(a,n){return new RegExp(d(a),"m"+(e.case_insensitive?"i":"")+(n?"g":""))}class r{constructor(){this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}addRule(e,a){a.position=this.position++,this.matchIndexes[this.matchAt]=a,this.regexes.push([a,e]),this.matchAt+=function(e){return new RegExp(e.toString()+"|").exec("").length-1}(e)+1}compile(){0===this.regexes.length&&(this.exec=()=>null)
const e=this.regexes.map((e=>e[1]))
this.matcherRe=i(function(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"|",n=0
return e.map((e=>{n+=1
const a=n
let i=d(e),r=""
for(;i.length>0;){const e=p.exec(i)
if(!e){r+=i
break}r+=i.substring(0,e.index),i=i.substring(e.index+e[0].length),"\\"===e[0][0]&&e[1]?r+="\\"+String(Number(e[1])+a):(r+=e[0],"("===e[0]&&n++)}return r})).map((e=>`(${e})`)).join(a)}(e),!0),this.lastIndex=0}exec(e){this.matcherRe.lastIndex=this.lastIndex
const a=this.matcherRe.exec(e)
if(!a)return null
const n=a.findIndex(((e,a)=>a>0&&void 0!==e)),i=this.matchIndexes[n]
return a.splice(0,n),Object.assign(a,i)}}class t{constructor(){this.rules=[],this.multiRegexes=[],this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(e){if(this.multiRegexes[e])return this.multiRegexes[e]
const a=new r
return this.rules.slice(e).forEach((e=>{let[n,i]=e
return a.addRule(n,i)})),a.compile(),this.multiRegexes[e]=a,a}resumingScanAtSamePosition(){return 0!==this.regexIndex}considerAll(){this.regexIndex=0}addRule(e,a){this.rules.push([e,a]),"begin"===a.type&&this.count++}exec(e){const a=this.getMatcher(this.regexIndex)
a.lastIndex=this.lastIndex
let n=a.exec(e)
if(this.resumingScanAtSamePosition())if(n&&n.index===this.lastIndex);else{const a=this.getMatcher(0)
a.lastIndex=this.lastIndex+1,n=a.exec(e)}return n&&(this.regexIndex+=n.position+1,this.regexIndex===this.count&&this.considerAll()),n}}if(e.compilerExtensions||(e.compilerExtensions=[]),e.contains&&e.contains.includes("self"))throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.")
return e.classNameAliases=o(e.classNameAliases||{}),function a(n,r){const s=n
if(n.isCompiled)return s;[z].forEach((e=>e(n,r))),e.compilerExtensions.forEach((e=>e(n,r))),n.__beforeBegin=null,[K,R,O].forEach((e=>e(n,r))),n.isCompiled=!0
let l=null
if("object"==typeof n.keywords&&(l=n.keywords.$pattern,delete n.keywords.$pattern),n.keywords&&(n.keywords=G(n.keywords,e.case_insensitive)),n.lexemes&&l)throw new Error("ERR: Prefer `keywords.$pattern` to `mode.lexemes`, BOTH are not allowed. (see mode reference) ")
return l=l||n.lexemes||/\w+/,s.keywordPatternRe=i(l,!0),r&&(n.begin||(n.begin=/\B|\b/),s.beginRe=i(n.begin),n.endSameAsBegin&&(n.end=n.begin),n.end||n.endsWithParent||(n.end=/\B|\b/),n.end&&(s.endRe=i(n.end)),s.terminatorEnd=d(n.end)||"",n.endsWithParent&&r.terminatorEnd&&(s.terminatorEnd+=(n.end?"|":"")+r.terminatorEnd)),n.illegal&&(s.illegalRe=i(n.illegal)),n.contains||(n.contains=[]),n.contains=[].concat(...n.contains.map((function(e){return function(e){return e.variants&&!e.cachedVariants&&(e.cachedVariants=e.variants.map((function(a){return o(e,{variants:null},a)}))),e.cachedVariants?e.cachedVariants:J(e)?o(e,{starts:e.starts?o(e.starts):null}):Object.isFrozen(e)?o(e):e}("self"===e?n:e)}))),n.contains.forEach((function(e){a(e,s)})),n.starts&&a(n.starts,r),s.matcher=function(e){const a=new t
return e.contains.forEach((e=>a.addRule(e.begin,{rule:e,type:"begin"}))),e.terminatorEnd&&a.addRule(e.terminatorEnd,{type:"end"}),e.illegal&&a.addRule(e.illegal,{type:"illegal"}),a}(s),s}(e)}function J(e){return!!e&&(e.endsWithParent||J(e.starts))}function U(e){const a={props:["language","code","autodetect"],data:function(){return{detectedLanguage:"",unknownLanguage:!1}},computed:{className(){return this.unknownLanguage?"":"hljs "+this.detectedLanguage},highlighted(){if(!this.autoDetect&&!e.getLanguage(this.language))return console.warn(`The language "${this.language}" you specified could not be found.`),this.unknownLanguage=!0,t(this.code)
let a={}
return this.autoDetect?(a=e.highlightAuto(this.code),this.detectedLanguage=a.language):(a=e.highlight(this.language,this.code,this.ignoreIllegals),this.detectedLanguage=this.language),a.value},autoDetect(){return!this.language||(e=this.autodetect,Boolean(e||""===e))
var e},ignoreIllegals:()=>!0},render(e){return e("pre",{},[e("code",{class:this.className,domProps:{innerHTML:this.highlighted}})])}}
return{Component:a,VuePlugin:{install(e){e.component("highlightjs",a)}}}}const W={"after:highlightElement":e=>{let{el:a,result:n,text:i}=e
const r=q(a)
if(!r.length)return
const o=document.createElement("div")
o.innerHTML=n.value,n.value=function(e,a,n){let i=0,r=""
const o=[]
function s(){return e.length&&a.length?e[0].offset!==a[0].offset?e[0].offset<a[0].offset?e:a:"start"===a[0].event?e:a:e.length?e:a}function l(e){r+="<"+Z(e)+[].map.call(e.attributes,(function(e){return" "+e.nodeName+'="'+t(e.value)+'"'})).join("")+">"}function u(e){r+="</"+Z(e)+">"}function c(e){("start"===e.event?l:u)(e.node)}for(;e.length||a.length;){let a=s()
if(r+=t(n.substring(i,a[0].offset)),i=a[0].offset,a===e){o.reverse().forEach(u)
do{c(a.splice(0,1)[0]),a=s()}while(a===e&&a.length&&a[0].offset===i)
o.reverse().forEach(l)}else"start"===a[0].event?o.push(a[0].node):o.pop(),c(a.splice(0,1)[0])}return r+t(n.substr(i))}(r,q(o),i)}}
function Z(e){return e.nodeName.toLowerCase()}function q(e){const a=[]
return function e(n,i){for(let r=n.firstChild;r;r=r.nextSibling)3===r.nodeType?i+=r.nodeValue.length:1===r.nodeType&&(a.push({event:"start",offset:i,node:r}),i=e(r,i),Z(r).match(/br|hr|img|input/)||a.push({event:"stop",offset:i,node:r}))
return i}(e,0),a}const Q={},Y=e=>{console.error(e)},$=function(e){for(var a=arguments.length,n=new Array(a>1?a-1:0),i=1;i<a;i++)n[i-1]=arguments[i]
console.log(`WARN: ${e}`,...n)},X=(e,a)=>{Q[`${e}/${a}`]||(console.log(`Deprecated as of ${e}. ${a}`),Q[`${e}/${a}`]=!0)},ee=t,ae=o,ne=Symbol("nomatch")
var ie=function(e){const a=Object.create(null),i=Object.create(null),t=[]
let o=!0
const s=/(^(<[^>]+>|\t|)+|\n)/gm,l="Could not find the language '{}', did you forget to load/include a language module?",u={disableAutodetect:!0,name:"Plain text",contains:[]}
let d={noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:"hljs-",tabReplace:null,useBR:!1,languages:null,__emitter:c}
function h(e){return d.noHighlightRe.test(e)}function p(e,a,n,i){let r="",t=""
"object"==typeof a?(r=e,n=a.ignoreIllegals,t=a.language,i=void 0):(X("10.7.0","highlight(lang, code, ...args) has been deprecated."),X("10.7.0","Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277"),t=e,r=a)
const o={code:r,language:t}
w("before:highlight",o)
const s=o.result?o.result:m(o.language,o.code,n,i)
return s.code=o.code,w("after:highlight",s),s}function m(e,n,i,s){function u(e,a){const n=y.case_insensitive?a[0].toLowerCase():a[0]
return Object.prototype.hasOwnProperty.call(e.keywords,n)&&e.keywords[n]}function c(){null!=A.subLanguage?function(){if(""===w)return
let e=null
if("string"==typeof A.subLanguage){if(!a[A.subLanguage])return void _.addText(w)
e=m(A.subLanguage,w,!0,T[A.subLanguage]),T[A.subLanguage]=e.top}else e=f(w,A.subLanguage.length?A.subLanguage:null)
A.relevance>0&&(j+=e.relevance),_.addSublanguage(e.emitter,e.language)}():function(){if(!A.keywords)return void _.addText(w)
let e=0
A.keywordPatternRe.lastIndex=0
let a=A.keywordPatternRe.exec(w),n=""
for(;a;){n+=w.substring(e,a.index)
const i=u(A,a)
if(i){const[e,r]=i
if(_.addText(n),n="",j+=r,e.startsWith("_"))n+=a[0]
else{const n=y.classNameAliases[e]||e
_.addKeyword(a[0],n)}}else n+=a[0]
e=A.keywordPatternRe.lastIndex,a=A.keywordPatternRe.exec(w)}n+=w.substr(e),_.addText(n)}(),w=""}function h(e){return e.className&&_.openNode(y.classNameAliases[e.className]||e.className),A=Object.create(e,{parent:{value:A}}),A}function p(e,a,n){let i=function(e,a){const n=e&&e.exec(a)
return n&&0===n.index}(e.endRe,n)
if(i){if(e["on:end"]){const n=new r(e)
e["on:end"](a,n),n.isMatchIgnored&&(i=!1)}if(i){for(;e.endsParent&&e.parent;)e=e.parent
return e}}if(e.endsWithParent)return p(e.parent,a,n)}function v(e){return 0===A.matcher.regexIndex?(w+=e[0],1):(B=!0,0)}let g={}
function k(a,t){const s=t&&t[0]
if(w+=a,null==s)return c(),0
if("begin"===g.type&&"end"===t.type&&g.index===t.index&&""===s){if(w+=n.slice(t.index,t.index+1),!o){const a=new Error("0 width match regex")
throw a.languageName=e,a.badRule=g.rule,a}return 1}if(g=t,"begin"===t.type)return function(e){const a=e[0],n=e.rule,i=new r(n),t=[n.__beforeBegin,n["on:begin"]]
for(const r of t)if(r&&(r(e,i),i.isMatchIgnored))return v(a)
return n&&n.endSameAsBegin&&(n.endRe=new RegExp(a.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"),"m")),n.skip?w+=a:(n.excludeBegin&&(w+=a),c(),n.returnBegin||n.excludeBegin||(w=a)),h(n),n.returnBegin?0:a.length}(t)
if("illegal"===t.type&&!i){const e=new Error('Illegal lexeme "'+s+'" for mode "'+(A.className||"<unnamed>")+'"')
throw e.mode=A,e}if("end"===t.type){const e=function(e){const a=e[0],i=n.substr(e.index),r=p(A,e,i)
if(!r)return ne
const t=A
t.skip?w+=a:(t.returnEnd||t.excludeEnd||(w+=a),c(),t.excludeEnd&&(w=a))
do{A.className&&_.closeNode(),A.skip||A.subLanguage||(j+=A.relevance),A=A.parent}while(A!==r.parent)
return r.starts&&(r.endSameAsBegin&&(r.starts.endRe=r.endRe),h(r.starts)),t.returnEnd?0:a.length}(t)
if(e!==ne)return e}if("illegal"===t.type&&""===s)return 1
if(N>1e5&&N>3*t.index)throw new Error("potential infinite loop, way more iterations than matches")
return w+=s,s.length}const y=M(e)
if(!y)throw Y(l.replace("{}",e)),new Error('Unknown language: "'+e+'"')
const b=F(y,{plugins:t})
let S="",A=s||b
const T={},_=new d.__emitter(d)
!function(){const e=[]
for(let a=A;a!==y;a=a.parent)a.className&&e.unshift(a.className)
e.forEach((e=>_.openNode(e)))}()
let w="",j=0,E=0,N=0,B=!1
try{for(A.matcher.considerAll();;){N++,B?B=!1:A.matcher.considerAll(),A.matcher.lastIndex=E
const e=A.matcher.exec(n)
if(!e)break
const a=k(n.substring(E,e.index),e)
E=e.index+a}return k(n.substr(E)),_.closeAllNodes(),_.finalize(),S=_.toHTML(),{relevance:Math.floor(j),value:S,language:e,illegal:!1,emitter:_,top:A}}catch(a){if(a.message&&a.message.includes("Illegal"))return{illegal:!0,illegalBy:{msg:a.message,context:n.slice(E-100,E+100),mode:a.mode},sofar:S,relevance:0,value:ee(n),emitter:_}
if(o)return{illegal:!1,relevance:0,value:ee(n),emitter:_,language:e,top:A,errorRaised:a}
throw a}}function f(e,n){n=n||d.languages||Object.keys(a)
const i=function(e){const a={relevance:0,emitter:new d.__emitter(d),value:ee(e),illegal:!1,top:u}
return a.emitter.addText(e),a}(e),r=n.filter(M).filter(_).map((a=>m(a,e,!1)))
r.unshift(i)
const t=r.sort(((e,a)=>{if(e.relevance!==a.relevance)return a.relevance-e.relevance
if(e.language&&a.language){if(M(e.language).supersetOf===a.language)return 1
if(M(a.language).supersetOf===e.language)return-1}return 0})),[o,s]=t,l=o
return l.second_best=s,l}const v={"before:highlightElement":e=>{let{el:a}=e
d.useBR&&(a.innerHTML=a.innerHTML.replace(/\n/g,"").replace(/<br[ /]*>/g,"\n"))},"after:highlightElement":e=>{let{result:a}=e
d.useBR&&(a.value=a.value.replace(/\n/g,"<br>"))}},g=/^(<[^>]+>|\t)+/gm,k={"after:highlightElement":e=>{let{result:a}=e
d.tabReplace&&(a.value=a.value.replace(g,(e=>e.replace(/\t/g,d.tabReplace))))}}
function y(e){let a=null
const n=function(e){let a=e.className+" "
a+=e.parentNode?e.parentNode.className:""
const n=d.languageDetectRe.exec(a)
if(n){const a=M(n[1])
return a||($(l.replace("{}",n[1])),$("Falling back to no-highlight mode for this block.",e)),a?n[1]:"no-highlight"}return a.split(/\s+/).find((e=>h(e)||M(e)))}(e)
if(h(n))return
w("before:highlightElement",{el:e,language:n}),a=e
const r=a.textContent,t=n?p(r,{language:n,ignoreIllegals:!0}):f(r)
w("after:highlightElement",{el:e,result:t,text:r}),e.innerHTML=t.value,function(e,a,n){const r=a?i[a]:n
e.classList.add("hljs"),r&&e.classList.add(r)}(e,n,t.language),e.result={language:t.language,re:t.relevance,relavance:t.relevance},t.second_best&&(e.second_best={language:t.second_best.language,re:t.second_best.relevance,relavance:t.second_best.relevance})}const b=()=>{b.called||(b.called=!0,X("10.6.0","initHighlighting() is deprecated.  Use highlightAll() instead."),document.querySelectorAll("pre code").forEach(y))}
let S=!1
function A(){"loading"!==document.readyState?document.querySelectorAll("pre code").forEach(y):S=!0}function M(e){return e=(e||"").toLowerCase(),a[e]||a[i[e]]}function T(e,a){let{languageName:n}=a
"string"==typeof e&&(e=[e]),e.forEach((e=>{i[e.toLowerCase()]=n}))}function _(e){const a=M(e)
return a&&!a.disableAutodetect}function w(e,a){const n=e
t.forEach((function(e){e[n]&&e[n](a)}))}"undefined"!=typeof window&&window.addEventListener&&window.addEventListener("DOMContentLoaded",(function(){S&&A()}),!1),Object.assign(e,{highlight:p,highlightAuto:f,highlightAll:A,fixMarkup:function(e){return X("10.2.0","fixMarkup will be removed entirely in v11.0"),X("10.2.0","Please see https://github.com/highlightjs/highlight.js/issues/2534"),a=e,d.tabReplace||d.useBR?a.replace(s,(e=>"\n"===e?d.useBR?"<br>":e:d.tabReplace?e.replace(/\t/g,d.tabReplace):e)):a
var a},highlightElement:y,highlightBlock:function(e){return X("10.7.0","highlightBlock will be removed entirely in v12.0"),X("10.7.0","Please use highlightElement now."),y(e)},configure:function(e){e.useBR&&(X("10.3.0","'useBR' will be removed entirely in v11.0"),X("10.3.0","Please see https://github.com/highlightjs/highlight.js/issues/2559")),d=ae(d,e)},initHighlighting:b,initHighlightingOnLoad:function(){X("10.6.0","initHighlightingOnLoad() is deprecated.  Use highlightAll() instead."),S=!0},registerLanguage:function(n,i){let r=null
try{r=i(e)}catch(e){if(Y("Language definition for '{}' could not be registered.".replace("{}",n)),!o)throw e
Y(e),r=u}r.name||(r.name=n),a[n]=r,r.rawDefinition=i.bind(null,e),r.aliases&&T(r.aliases,{languageName:n})},unregisterLanguage:function(e){delete a[e]
for(const a of Object.keys(i))i[a]===e&&delete i[a]},listLanguages:function(){return Object.keys(a)},getLanguage:M,registerAliases:T,requireLanguage:function(e){X("10.4.0","requireLanguage will be removed entirely in v11."),X("10.4.0","Please see https://github.com/highlightjs/highlight.js/pull/2844")
const a=M(e)
if(a)return a
throw new Error("The '{}' language is required, but not loaded.".replace("{}",e))},autoDetection:_,inherit:ae,addPlugin:function(e){!function(e){e["before:highlightBlock"]&&!e["before:highlightElement"]&&(e["before:highlightElement"]=a=>{e["before:highlightBlock"](Object.assign({block:a.el},a))}),e["after:highlightBlock"]&&!e["after:highlightElement"]&&(e["after:highlightElement"]=a=>{e["after:highlightBlock"](Object.assign({block:a.el},a))})}(e),t.push(e)},vuePlugin:U(e).VuePlugin}),e.debugMode=function(){o=!1},e.safeMode=function(){o=!0},e.versionString="10.7.3"
for(const r in x)"object"==typeof x[r]&&n(x[r])
return Object.assign(e,x),e.addPlugin(v),e.addPlugin(W),e.addPlugin(k),e}({})
e.exports=ie},591:e=>{const a=["a","abbr","address","article","aside","audio","b","blockquote","body","button","canvas","caption","cite","code","dd","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","html","i","iframe","img","input","ins","kbd","label","legend","li","main","mark","menu","nav","object","ol","p","q","quote","samp","section","span","strong","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","ul","var","video"],n=["any-hover","any-pointer","aspect-ratio","color","color-gamut","color-index","device-aspect-ratio","device-height","device-width","display-mode","forced-colors","grid","height","hover","inverted-colors","monochrome","orientation","overflow-block","overflow-inline","pointer","prefers-color-scheme","prefers-contrast","prefers-reduced-motion","prefers-reduced-transparency","resolution","scan","scripting","update","width","min-width","max-width","min-height","max-height"],i=["active","any-link","blank","checked","current","default","defined","dir","disabled","drop","empty","enabled","first","first-child","first-of-type","fullscreen","future","focus","focus-visible","focus-within","has","host","host-context","hover","indeterminate","in-range","invalid","is","lang","last-child","last-of-type","left","link","local-link","not","nth-child","nth-col","nth-last-child","nth-last-col","nth-last-of-type","nth-of-type","only-child","only-of-type","optional","out-of-range","past","placeholder-shown","read-only","read-write","required","right","root","scope","target","target-within","user-invalid","valid","visited","where"],r=["after","backdrop","before","cue","cue-region","first-letter","first-line","grammar-error","marker","part","placeholder","selection","slotted","spelling-error"],t=["align-content","align-items","align-self","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","auto","backface-visibility","background","background-attachment","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","border","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","clear","clip","clip-path","color","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","content","counter-increment","counter-reset","cursor","direction","display","empty-cells","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","font","font-display","font-family","font-feature-settings","font-kerning","font-language-override","font-size","font-size-adjust","font-smoothing","font-stretch","font-style","font-variant","font-variant-ligatures","font-variation-settings","font-weight","height","hyphens","icon","image-orientation","image-rendering","image-resolution","ime-mode","inherit","initial","justify-content","left","letter-spacing","line-height","list-style","list-style-image","list-style-position","list-style-type","margin","margin-bottom","margin-left","margin-right","margin-top","marks","mask","max-height","max-width","min-height","min-width","nav-down","nav-index","nav-left","nav-right","nav-up","none","normal","object-fit","object-position","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-wrap","overflow-x","overflow-y","padding","padding-bottom","padding-left","padding-right","padding-top","page-break-after","page-break-before","page-break-inside","perspective","perspective-origin","pointer-events","position","quotes","resize","right","src","tab-size","table-layout","text-align","text-align-last","text-decoration","text-decoration-color","text-decoration-line","text-decoration-style","text-indent","text-overflow","text-rendering","text-shadow","text-transform","text-underline-position","top","transform","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","white-space","widows","width","word-break","word-spacing","word-wrap","z-index"].reverse()
function o(e){return e?"string"==typeof e?e:e.source:null}e.exports=function(e){const s=(e=>({IMPORTANT:{className:"meta",begin:"!important"},HEXCOLOR:{className:"number",begin:"#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})"},ATTRIBUTE_SELECTOR_MODE:{className:"selector-attr",begin:/\[/,end:/\]/,illegal:"$",contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]}}))(e),l=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]
return{name:"CSS",case_insensitive:!0,illegal:/[=|'\$]/,keywords:{keyframePosition:"from to"},classNameAliases:{keyframePosition:"selector-tag"},contains:[e.C_BLOCK_COMMENT_MODE,{begin:/-(webkit|moz|ms|o)-(?=[a-z])/},e.CSS_NUMBER_MODE,{className:"selector-id",begin:/#[A-Za-z0-9_-]+/,relevance:0},{className:"selector-class",begin:"\\.[a-zA-Z-][a-zA-Z0-9_-]*",relevance:0},s.ATTRIBUTE_SELECTOR_MODE,{className:"selector-pseudo",variants:[{begin:":("+i.join("|")+")"},{begin:"::("+r.join("|")+")"}]},{className:"attribute",begin:"\\b("+t.join("|")+")\\b"},{begin:":",end:"[;}]",contains:[s.HEXCOLOR,s.IMPORTANT,e.CSS_NUMBER_MODE,...l,{begin:/(url|data-uri)\(/,end:/\)/,relevance:0,keywords:{built_in:"url data-uri"},contains:[{className:"string",begin:/[^)]/,endsWithParent:!0,excludeEnd:!0}]},{className:"built_in",begin:/[\w-]+(?=\()/}]},{begin:(u=/@/,function(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
return a.map((e=>o(e))).join("")}("(?=",u,")")),end:"[{;]",relevance:0,illegal:/:/,contains:[{className:"keyword",begin:/@-?\w[\w]*(-\w+)*/},{begin:/\s/,endsWithParent:!0,excludeEnd:!0,relevance:0,keywords:{$pattern:/[a-z-]+/,keyword:"and or not only",attribute:n.join(" ")},contains:[{begin:/[a-z-]+(?=:)/,className:"attribute"},...l,e.CSS_NUMBER_MODE]}]},{className:"selector-tag",begin:"\\b("+a.join("|")+")\\b"}]}
var u}},3877:e=>{e.exports=function(e){return{name:"Diff",aliases:["patch"],contains:[{className:"meta",relevance:10,variants:[{begin:/^@@ +-\d+,\d+ +\+\d+,\d+ +@@/},{begin:/^\*\*\* +\d+,\d+ +\*\*\*\*$/},{begin:/^--- +\d+,\d+ +----$/}]},{className:"comment",variants:[{begin:/Index: /,end:/$/},{begin:/^index/,end:/$/},{begin:/={3,}/,end:/$/},{begin:/^-{3}/,end:/$/},{begin:/^\*{3} /,end:/$/},{begin:/^\+{3}/,end:/$/},{begin:/^\*{15}$/},{begin:/^diff --git/,end:/$/}]},{className:"addition",begin:/^\+/,end:/$/},{className:"deletion",begin:/^-/,end:/$/},{className:"addition",begin:/^!/,end:/$/}]}}},2071:e=>{function a(e){return e?"string"==typeof e?e:e.source:null}function n(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i]
const r=n.map((e=>a(e))).join("")
return r}e.exports=function(e){const i={"builtin-name":["action","bindattr","collection","component","concat","debugger","each","each-in","get","hash","if","in","input","link-to","loc","log","lookup","mut","outlet","partial","query-params","render","template","textarea","unbound","unless","view","with","yield"]},r=/\[\]|\[[^\]]+\]/,t=/[^\s!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]+/,o=function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i]
return"("+n.map((e=>a(e))).join("|")+")"}(/""|"[^"]+"/,/''|'[^']+'/,r,t),s=n(n("(",/\.|\.\/|\//,")?"),o,(f=n(/(\.|\/)/,o),n("(",f,")*"))),l=n("(",r,"|",t,")(?==)"),u={begin:s,lexemes:/[\w.\/]+/},c=e.inherit(u,{keywords:{literal:["true","false","undefined","null"]}}),d={begin:/\(/,end:/\)/},h={className:"attr",begin:l,relevance:0,starts:{begin:/=/,end:/=/,starts:{contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,c,d]}}},p={contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{begin:/\w+/}]},h,c,d],returnEnd:!0},m=e.inherit(u,{className:"name",keywords:i,starts:e.inherit(p,{end:/\)/})})
var f
d.contains=[m]
const v=e.inherit(u,{keywords:i,className:"name",starts:e.inherit(p,{end:/\}\}/})}),g=e.inherit(u,{keywords:i,className:"name"}),k=e.inherit(u,{className:"name",keywords:i,starts:e.inherit(p,{end:/\}\}/})})
return{name:"Handlebars",aliases:["hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,subLanguage:"xml",contains:[{begin:/\\\{\{/,skip:!0},{begin:/\\\\(?=\{\{)/,skip:!0},e.COMMENT(/\{\{!--/,/--\}\}/),e.COMMENT(/\{\{!/,/\}\}/),{className:"template-tag",begin:/\{\{\{\{(?!\/)/,end:/\}\}\}\}/,contains:[v],starts:{end:/\{\{\{\{\//,returnEnd:!0,subLanguage:"xml"}},{className:"template-tag",begin:/\{\{\{\{\//,end:/\}\}\}\}/,contains:[g]},{className:"template-tag",begin:/\{\{#/,end:/\}\}/,contains:[v]},{className:"template-tag",begin:/\{\{(?=else\}\})/,end:/\}\}/,keywords:"else"},{className:"template-tag",begin:/\{\{(?=else if)/,end:/\}\}/,keywords:"else if"},{className:"template-tag",begin:/\{\{\//,end:/\}\}/,contains:[g]},{className:"template-variable",begin:/\{\{\{/,end:/\}\}\}/,contains:[k]},{className:"template-variable",begin:/\{\{/,end:/\}\}/,contains:[k]}]}}},9538:e=>{function a(e){return e?"string"==typeof e?e:e.source:null}function n(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i]
const r=n.map((e=>a(e))).join("")
return r}e.exports=function(e){const i=function(e){const i={"builtin-name":["action","bindattr","collection","component","concat","debugger","each","each-in","get","hash","if","in","input","link-to","loc","log","lookup","mut","outlet","partial","query-params","render","template","textarea","unbound","unless","view","with","yield"]},r=/\[\]|\[[^\]]+\]/,t=/[^\s!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]+/,o=function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i]
return"("+n.map((e=>a(e))).join("|")+")"}(/""|"[^"]+"/,/''|'[^']+'/,r,t),s=n(n("(",/\.|\.\/|\//,")?"),o,(l=n(/(\.|\/)/,o),n("(",l,")*")))
var l
const u=n("(",r,"|",t,")(?==)"),c={begin:s,lexemes:/[\w.\/]+/},d=e.inherit(c,{keywords:{literal:["true","false","undefined","null"]}}),h={begin:/\(/,end:/\)/},p={className:"attr",begin:u,relevance:0,starts:{begin:/=/,end:/=/,starts:{contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,d,h]}}},m={contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{begin:/\w+/}]},p,d,h],returnEnd:!0},f=e.inherit(c,{className:"name",keywords:i,starts:e.inherit(m,{end:/\)/})})
h.contains=[f]
const v=e.inherit(c,{keywords:i,className:"name",starts:e.inherit(m,{end:/\}\}/})}),g=e.inherit(c,{keywords:i,className:"name"}),k=e.inherit(c,{className:"name",keywords:i,starts:e.inherit(m,{end:/\}\}/})})
return{name:"Handlebars",aliases:["hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,subLanguage:"xml",contains:[{begin:/\\\{\{/,skip:!0},{begin:/\\\\(?=\{\{)/,skip:!0},e.COMMENT(/\{\{!--/,/--\}\}/),e.COMMENT(/\{\{!/,/\}\}/),{className:"template-tag",begin:/\{\{\{\{(?!\/)/,end:/\}\}\}\}/,contains:[v],starts:{end:/\{\{\{\{\//,returnEnd:!0,subLanguage:"xml"}},{className:"template-tag",begin:/\{\{\{\{\//,end:/\}\}\}\}/,contains:[g]},{className:"template-tag",begin:/\{\{#/,end:/\}\}/,contains:[v]},{className:"template-tag",begin:/\{\{(?=else\}\})/,end:/\}\}/,keywords:"else"},{className:"template-tag",begin:/\{\{(?=else if)/,end:/\}\}/,keywords:"else if"},{className:"template-tag",begin:/\{\{\//,end:/\}\}/,contains:[g]},{className:"template-variable",begin:/\{\{\{/,end:/\}\}\}/,contains:[k]},{className:"template-variable",begin:/\{\{/,end:/\}\}/,contains:[k]}]}}(e)
return i.name="HTMLbars",e.getLanguage("handlebars")&&(i.disableAutodetect=!0),i}},4517:e=>{const a="[A-Za-z$_][0-9A-Za-z$_]*",n=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"],i=["true","false","null","undefined","NaN","Infinity"],r=[].concat(["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"],["arguments","this","super","console","window","document","localStorage","module","global"],["Intl","DataView","Number","Math","Date","String","RegExp","Object","Function","Boolean","Error","Symbol","Set","Map","WeakSet","WeakMap","Proxy","Reflect","JSON","Promise","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Float32Array","Array","Uint8Array","Uint8ClampedArray","ArrayBuffer","BigInt64Array","BigUint64Array","BigInt"],["EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"])
function t(e){return e?"string"==typeof e?e:e.source:null}function o(e){return s("(?=",e,")")}function s(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
const i=a.map((e=>t(e))).join("")
return i}e.exports=function(e){const t=a,l={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:(e,a)=>{const n=e[0].length+e.index,i=e.input[n]
"<"!==i?">"===i&&(((e,a)=>{let{after:n}=a
const i="</"+e[0].slice(1)
return-1!==e.input.indexOf(i,n)})(e,{after:n})||a.ignoreMatch()):a.ignoreMatch()}},u={$pattern:a,keyword:n,literal:i,built_in:r},c="\\.([0-9](_?[0-9])*)",d="0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*",h={className:"number",variants:[{begin:`(\\b(${d})((${c})|\\.)?|(${c}))[eE][+-]?([0-9](_?[0-9])*)\\b`},{begin:`\\b(${d})\\b((${c})\\b|\\.)?|(${c})\\b`},{begin:"\\b(0|[1-9](_?[0-9])*)n\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"}],relevance:0},p={className:"subst",begin:"\\$\\{",end:"\\}",keywords:u,contains:[]},m={begin:"html`",end:"",starts:{end:"`",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,p],subLanguage:"xml"}},f={begin:"css`",end:"",starts:{end:"`",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,p],subLanguage:"css"}},v={className:"string",begin:"`",end:"`",contains:[e.BACKSLASH_ESCAPE,p]},g={className:"comment",variants:[e.COMMENT(/\/\*\*(?!\/)/,"\\*/",{relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+",contains:[{className:"type",begin:"\\{",end:"\\}",relevance:0},{className:"variable",begin:t+"(?=\\s*(-)|$)",endsParent:!0,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]}),e.C_BLOCK_COMMENT_MODE,e.C_LINE_COMMENT_MODE]},k=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,m,f,v,h,e.REGEXP_MODE]
p.contains=k.concat({begin:/\{/,end:/\}/,keywords:u,contains:["self"].concat(k)})
const y=[].concat(g,p.contains),b=y.concat([{begin:/\(/,end:/\)/,keywords:u,contains:["self"].concat(y)}]),S={className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:u,contains:b}
return{name:"Javascript",aliases:["js","jsx","mjs","cjs"],keywords:u,exports:{PARAMS_CONTAINS:b},illegal:/#(?![$_A-z])/,contains:[e.SHEBANG({label:"shebang",binary:"node",relevance:5}),{label:"use_strict",className:"meta",relevance:10,begin:/^\s*['"]use (strict|asm)['"]/},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,m,f,v,g,h,{begin:s(/[{,\n]\s*/,o(s(/(((\/\/.*$)|(\/\*(\*[^/]|[^*])*\*\/))\s*)*/,t+"\\s*:"))),relevance:0,contains:[{className:"attr",begin:t+o("\\s*:"),relevance:0}]},{begin:"("+e.RE_STARTERS_RE+"|\\b(case|return|throw)\\b)\\s*",keywords:"return throw case",contains:[g,e.REGEXP_MODE,{className:"function",begin:"(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|"+e.UNDERSCORE_IDENT_RE+")\\s*=>",returnBegin:!0,end:"\\s*=>",contains:[{className:"params",variants:[{begin:e.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:u,contains:b}]}]},{begin:/,/,relevance:0},{className:"",begin:/\s/,end:/\s*/,skip:!0},{variants:[{begin:"<>",end:"</>"},{begin:l.begin,"on:begin":l.isTrulyOpeningTag,end:l.end}],subLanguage:"xml",contains:[{begin:l.begin,end:l.end,skip:!0,contains:["self"]}]}],relevance:0},{className:"function",beginKeywords:"function",end:/[{;]/,excludeEnd:!0,keywords:u,contains:["self",e.inherit(e.TITLE_MODE,{begin:t}),S],illegal:/%/},{beginKeywords:"while if switch catch for"},{className:"function",begin:e.UNDERSCORE_IDENT_RE+"\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",returnBegin:!0,contains:[S,e.inherit(e.TITLE_MODE,{begin:t})]},{variants:[{begin:"\\."+t},{begin:"\\$"+t}],relevance:0},{className:"class",beginKeywords:"class",end:/[{;=]/,excludeEnd:!0,illegal:/[:"[\]]/,contains:[{beginKeywords:"extends"},e.UNDERSCORE_TITLE_MODE]},{begin:/\b(?=constructor)/,end:/[{;]/,excludeEnd:!0,contains:[e.inherit(e.TITLE_MODE,{begin:t}),"self",S]},{begin:"(get|set)\\s+(?="+t+"\\()",end:/\{/,keywords:"get set",contains:[e.inherit(e.TITLE_MODE,{begin:t}),{begin:/\(\)/},S]},{begin:/\$[(.]/}]}}},6818:e=>{e.exports=function(e){const a={literal:"true false null"},n=[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE],i=[e.QUOTE_STRING_MODE,e.C_NUMBER_MODE],r={end:",",endsWithParent:!0,excludeEnd:!0,contains:i,keywords:a},t={begin:/\{/,end:/\}/,contains:[{className:"attr",begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE],illegal:"\\n"},e.inherit(r,{begin:/:/})].concat(n),illegal:"\\S"},o={begin:"\\[",end:"\\]",contains:[e.inherit(r)],illegal:"\\S"}
return i.push(t,o),n.forEach((function(e){i.push(e)})),{name:"JSON",contains:i,keywords:a,illegal:"\\S"}}},3215:e=>{e.exports=function(e){return{name:"Shell Session",aliases:["console"],contains:[{className:"meta",begin:/^\s{0,3}[/~\w\d[\]()@-]*[>%$#]/,starts:{end:/[^\\](?=\s*$)/,subLanguage:"bash"}}]}}},426:e=>{const a="[A-Za-z$_][0-9A-Za-z$_]*",n=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"],i=["true","false","null","undefined","NaN","Infinity"],r=[].concat(["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"],["arguments","this","super","console","window","document","localStorage","module","global"],["Intl","DataView","Number","Math","Date","String","RegExp","Object","Function","Boolean","Error","Symbol","Set","Map","WeakSet","WeakMap","Proxy","Reflect","JSON","Promise","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Float32Array","Array","Uint8Array","Uint8ClampedArray","ArrayBuffer","BigInt64Array","BigUint64Array","BigInt"],["EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"])
function t(e){return e?"string"==typeof e?e:e.source:null}function o(e){return s("(?=",e,")")}function s(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
const i=a.map((e=>t(e))).join("")
return i}e.exports=function(e){const t={$pattern:a,keyword:n.concat(["type","namespace","typedef","interface","public","private","protected","implements","declare","abstract","readonly"]),literal:i,built_in:r.concat(["any","void","number","boolean","string","object","never","enum"])},l={className:"meta",begin:"@[A-Za-z$_][0-9A-Za-z$_]*"},u=(e,a,n)=>{const i=e.contains.findIndex((e=>e.label===a))
if(-1===i)throw new Error("can not find mode to replace")
e.contains.splice(i,1,n)},c=function(e){const t=a,l={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:(e,a)=>{const n=e[0].length+e.index,i=e.input[n]
"<"!==i?">"===i&&(((e,a)=>{let{after:n}=a
const i="</"+e[0].slice(1)
return-1!==e.input.indexOf(i,n)})(e,{after:n})||a.ignoreMatch()):a.ignoreMatch()}},u={$pattern:a,keyword:n,literal:i,built_in:r},c="\\.([0-9](_?[0-9])*)",d="0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*",h={className:"number",variants:[{begin:`(\\b(${d})((${c})|\\.)?|(${c}))[eE][+-]?([0-9](_?[0-9])*)\\b`},{begin:`\\b(${d})\\b((${c})\\b|\\.)?|(${c})\\b`},{begin:"\\b(0|[1-9](_?[0-9])*)n\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"}],relevance:0},p={className:"subst",begin:"\\$\\{",end:"\\}",keywords:u,contains:[]},m={begin:"html`",end:"",starts:{end:"`",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,p],subLanguage:"xml"}},f={begin:"css`",end:"",starts:{end:"`",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,p],subLanguage:"css"}},v={className:"string",begin:"`",end:"`",contains:[e.BACKSLASH_ESCAPE,p]},g={className:"comment",variants:[e.COMMENT(/\/\*\*(?!\/)/,"\\*/",{relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+",contains:[{className:"type",begin:"\\{",end:"\\}",relevance:0},{className:"variable",begin:t+"(?=\\s*(-)|$)",endsParent:!0,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]}),e.C_BLOCK_COMMENT_MODE,e.C_LINE_COMMENT_MODE]},k=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,m,f,v,h,e.REGEXP_MODE]
p.contains=k.concat({begin:/\{/,end:/\}/,keywords:u,contains:["self"].concat(k)})
const y=[].concat(g,p.contains),b=y.concat([{begin:/\(/,end:/\)/,keywords:u,contains:["self"].concat(y)}]),S={className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:u,contains:b}
return{name:"Javascript",aliases:["js","jsx","mjs","cjs"],keywords:u,exports:{PARAMS_CONTAINS:b},illegal:/#(?![$_A-z])/,contains:[e.SHEBANG({label:"shebang",binary:"node",relevance:5}),{label:"use_strict",className:"meta",relevance:10,begin:/^\s*['"]use (strict|asm)['"]/},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,m,f,v,g,h,{begin:s(/[{,\n]\s*/,o(s(/(((\/\/.*$)|(\/\*(\*[^/]|[^*])*\*\/))\s*)*/,t+"\\s*:"))),relevance:0,contains:[{className:"attr",begin:t+o("\\s*:"),relevance:0}]},{begin:"("+e.RE_STARTERS_RE+"|\\b(case|return|throw)\\b)\\s*",keywords:"return throw case",contains:[g,e.REGEXP_MODE,{className:"function",begin:"(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|"+e.UNDERSCORE_IDENT_RE+")\\s*=>",returnBegin:!0,end:"\\s*=>",contains:[{className:"params",variants:[{begin:e.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:u,contains:b}]}]},{begin:/,/,relevance:0},{className:"",begin:/\s/,end:/\s*/,skip:!0},{variants:[{begin:"<>",end:"</>"},{begin:l.begin,"on:begin":l.isTrulyOpeningTag,end:l.end}],subLanguage:"xml",contains:[{begin:l.begin,end:l.end,skip:!0,contains:["self"]}]}],relevance:0},{className:"function",beginKeywords:"function",end:/[{;]/,excludeEnd:!0,keywords:u,contains:["self",e.inherit(e.TITLE_MODE,{begin:t}),S],illegal:/%/},{beginKeywords:"while if switch catch for"},{className:"function",begin:e.UNDERSCORE_IDENT_RE+"\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",returnBegin:!0,contains:[S,e.inherit(e.TITLE_MODE,{begin:t})]},{variants:[{begin:"\\."+t},{begin:"\\$"+t}],relevance:0},{className:"class",beginKeywords:"class",end:/[{;=]/,excludeEnd:!0,illegal:/[:"[\]]/,contains:[{beginKeywords:"extends"},e.UNDERSCORE_TITLE_MODE]},{begin:/\b(?=constructor)/,end:/[{;]/,excludeEnd:!0,contains:[e.inherit(e.TITLE_MODE,{begin:t}),"self",S]},{begin:"(get|set)\\s+(?="+t+"\\()",end:/\{/,keywords:"get set",contains:[e.inherit(e.TITLE_MODE,{begin:t}),{begin:/\(\)/},S]},{begin:/\$[(.]/}]}}(e)
return Object.assign(c.keywords,t),c.exports.PARAMS_CONTAINS.push(l),c.contains=c.contains.concat([l,{beginKeywords:"namespace",end:/\{/,excludeEnd:!0},{beginKeywords:"interface",end:/\{/,excludeEnd:!0,keywords:"interface extends"}]),u(c,"shebang",e.SHEBANG()),u(c,"use_strict",{className:"meta",relevance:10,begin:/^\s*['"]use strict['"]/}),c.contains.find((e=>"function"===e.className)).relevance=0,Object.assign(c,{name:"TypeScript",aliases:["ts","tsx"]}),c}},5286:e=>{function a(e){return e?"string"==typeof e?e:e.source:null}function n(e){return i("(?=",e,")")}function i(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i]
const r=n.map((e=>a(e))).join("")
return r}function r(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i]
const r="("+n.map((e=>a(e))).join("|")+")"
return r}e.exports=function(e){const a=i(/[A-Z_]/,i("(",/[A-Z0-9_.-]*:/,")?"),/[A-Z0-9_.-]*/),t={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},o={begin:/\s/,contains:[{className:"meta-keyword",begin:/#?[a-z_][a-z1-9_-]+/,illegal:/\n/}]},s=e.inherit(o,{begin:/\(/,end:/\)/}),l=e.inherit(e.APOS_STRING_MODE,{className:"meta-string"}),u=e.inherit(e.QUOTE_STRING_MODE,{className:"meta-string"}),c={endsWithParent:!0,illegal:/</,relevance:0,contains:[{className:"attr",begin:/[A-Za-z0-9._:-]+/,relevance:0},{begin:/=\s*/,relevance:0,contains:[{className:"string",endsParent:!0,variants:[{begin:/"/,end:/"/,contains:[t]},{begin:/'/,end:/'/,contains:[t]},{begin:/[^\s"'=<>`]+/}]}]}]}
return{name:"HTML, XML",aliases:["html","xhtml","rss","atom","xjb","xsd","xsl","plist","wsf","svg"],case_insensitive:!0,contains:[{className:"meta",begin:/<![a-z]/,end:/>/,relevance:10,contains:[o,u,l,s,{begin:/\[/,end:/\]/,contains:[{className:"meta",begin:/<![a-z]/,end:/>/,contains:[o,s,u,l]}]}]},e.COMMENT(/<!--/,/-->/,{relevance:10}),{begin:/<!\[CDATA\[/,end:/\]\]>/,relevance:10},t,{className:"meta",begin:/<\?xml/,end:/\?>/,relevance:10},{className:"tag",begin:/<style(?=\s|>)/,end:/>/,keywords:{name:"style"},contains:[c],starts:{end:/<\/style>/,returnEnd:!0,subLanguage:["css","xml"]}},{className:"tag",begin:/<script(?=\s|>)/,end:/>/,keywords:{name:"script"},contains:[c],starts:{end:/<\/script>/,returnEnd:!0,subLanguage:["javascript","handlebars","xml"]}},{className:"tag",begin:/<>|<\/>/},{className:"tag",begin:i(/</,n(i(a,r(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[{className:"name",begin:a,relevance:0,starts:c}]},{className:"tag",begin:i(/<\//,n(i(a,/>/))),contains:[{className:"name",begin:a,relevance:0},{begin:/>/,relevance:0,endsParent:!0}]}]}}},7577:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{default:()=>c})
var i,r=function(){function e(){this.registry=new WeakMap}return e.prototype.elementExists=function(e){return this.registry.has(e)},e.prototype.getElement=function(e){return this.registry.get(e)},e.prototype.addElement=function(e,a){e&&this.registry.set(e,a||{})},e.prototype.removeElement=function(e){this.registry.delete(e)},e.prototype.destroyRegistry=function(){this.registry=new WeakMap},e}(),t=function(){}
!function(e){e.enter="enter",e.exit="exit"}(i||(i={}))
var o,s=function(){function e(){this.registry=new r}return e.prototype.addCallback=function(e,a,n){var r,t,o
e===i.enter?((r={})[i.enter]=n,o=r):((t={})[i.exit]=n,o=t),this.registry.addElement(a,Object.assign({},this.registry.getElement(a),o))},e.prototype.dispatchCallback=function(e,a,n){if(e===i.enter){var r=this.registry.getElement(a).enter;(void 0===r?t:r)(n)}else{var o=this.registry.getElement(a)
o&&o.exit&&o.exit(n)}},e}(),l=(o=function(e,a){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var n in a)a.hasOwnProperty(n)&&(e[n]=a[n])},o(e,a)},function(e,a){function n(){this.constructor=e}o(e,a),e.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}),u=function(){return u=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},u.apply(this,arguments)}
const c=function(e){function a(){var a=e.call(this)||this
return a.elementRegistry=new r,a}return l(a,e),a.prototype.observe=function(e,a){void 0===a&&(a={}),e&&(this.elementRegistry.addElement(e,u({},a)),this.setupObserver(e,u({},a)))},a.prototype.unobserve=function(e,a){var n=this.findMatchingRootEntry(a)
n&&n.intersectionObserver.unobserve(e)},a.prototype.addEnterCallback=function(e,a){this.addCallback(i.enter,e,a)},a.prototype.addExitCallback=function(e,a){this.addCallback(i.exit,e,a)},a.prototype.dispatchEnterCallback=function(e,a){this.dispatchCallback(i.enter,e,a)},a.prototype.dispatchExitCallback=function(e,a){this.dispatchCallback(i.exit,e,a)},a.prototype.destroy=function(){this.elementRegistry.destroyRegistry()},a.prototype.setupOnIntersection=function(e){var a=this
return function(n){return a.onIntersection(e,n)}},a.prototype.setupObserver=function(e,a){var n,i,r=a.root,t=void 0===r?window:r,o=this.findRootFromRegistry(t)
if(o&&(i=this.determineMatchingElements(a,o)),i){var s=i.elements,l=i.intersectionObserver
s.push(e),l&&l.observe(e)}else{var u={elements:[e],intersectionObserver:l=this.newObserver(e,a),options:a},c=this.stringifyOptions(a)
o?o[c]=u:this.elementRegistry.addElement(t,((n={})[c]=u,n))}},a.prototype.newObserver=function(e,a){var n=a.root,i=a.rootMargin,r=a.threshold,t=new IntersectionObserver(this.setupOnIntersection(a).bind(this),{root:n,rootMargin:i,threshold:r})
return t.observe(e),t},a.prototype.onIntersection=function(e,a){var n=this
a.forEach((function(a){var i=a.isIntersecting,r=a.intersectionRatio,t=e.threshold||0
Array.isArray(t)&&(t=t[t.length-1])
var o=n.findMatchingRootEntry(e)
i||r>t?o&&o.elements.some((function(e){return!(!e||e!==a.target||(n.dispatchEnterCallback(e,a),0))})):o&&o.elements.some((function(e){return!(!e||e!==a.target||(n.dispatchExitCallback(e,a),0))}))}))},a.prototype.findRootFromRegistry=function(e){if(this.elementRegistry)return this.elementRegistry.getElement(e)},a.prototype.findMatchingRootEntry=function(e){var a=e.root,n=void 0===a?window:a,i=this.findRootFromRegistry(n)
if(i)return i[this.stringifyOptions(e)]},a.prototype.determineMatchingElements=function(e,a){var n=this,i=Object.keys(a).filter((function(i){var r=a[i].options
return n.areOptionsSame(e,r)}))[0]
return a[i]},a.prototype.areOptionsSame=function(e,a){if(e===a)return!0
var n=Object.prototype.toString.call(e),i=Object.prototype.toString.call(a)
if(n!==i)return!1
if("[object Object]"!==n&&"[object Object]"!==i)return e===a
if(e&&a&&"object"==typeof e&&"object"==typeof a)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)&&!1===this.areOptionsSame(e[r],a[r]))return!1
return!0},a.prototype.stringifyOptions=function(e){var a=e.root
return JSON.stringify(e,(function(e,n){if("root"===e&&a){var i=Array.prototype.slice.call(a.classList).reduce((function(e,a){return e+a}),"")
return a.id+"-"+i}return n}))},a}(s)},5011:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{SKELETON_TYPE:()=>r,SyntaxError:()=>N,TYPE:()=>i,createLiteralElement:()=>g,createNumberElement:()=>k,isArgumentElement:()=>s,isDateElement:()=>u,isDateTimeSkeleton:()=>v,isLiteralElement:()=>o,isNumberElement:()=>l,isNumberSkeleton:()=>f,isPluralElement:()=>h,isPoundElement:()=>p,isSelectElement:()=>d,isTagElement:()=>m,isTimeElement:()=>c,parse:()=>D,pegParse:()=>B})
var i,r,t=n(2985)
function o(e){return e.type===i.literal}function s(e){return e.type===i.argument}function l(e){return e.type===i.number}function u(e){return e.type===i.date}function c(e){return e.type===i.time}function d(e){return e.type===i.select}function h(e){return e.type===i.plural}function p(e){return e.type===i.pound}function m(e){return e.type===i.tag}function f(e){return!(!e||"object"!=typeof e||e.type!==r.number)}function v(e){return!(!e||"object"!=typeof e||e.type!==r.dateTime)}function g(e){return{type:i.literal,value:e}}function k(e,a){return{type:i.number,value:e,style:a}}!function(e){e[e.literal=0]="literal",e[e.argument=1]="argument",e[e.number=2]="number",e[e.date=3]="date",e[e.time=4]="time",e[e.select=5]="select",e[e.plural=6]="plural",e[e.pound=7]="pound",e[e.tag=8]="tag"}(i||(i={})),function(e){e[e.number=0]="number",e[e.dateTime=1]="dateTime"}(r||(r={}))
var y=/(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g,b=/^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g,S=/^(@+)?(\+|#+)?$/g,A=/(\*)(0+)|(#+)(0+)|(0+)/g,M=/^(0+)$/
function T(e){var a={}
return e.replace(S,(function(e,n,i){return"string"!=typeof i?(a.minimumSignificantDigits=n.length,a.maximumSignificantDigits=n.length):"+"===i?a.minimumSignificantDigits=n.length:"#"===n[0]?a.maximumSignificantDigits=n.length:(a.minimumSignificantDigits=n.length,a.maximumSignificantDigits=n.length+("string"==typeof i?i.length:0)),""})),a}function _(e){switch(e){case"sign-auto":return{signDisplay:"auto"}
case"sign-accounting":case"()":return{currencySign:"accounting"}
case"sign-always":case"+!":return{signDisplay:"always"}
case"sign-accounting-always":case"()!":return{signDisplay:"always",currencySign:"accounting"}
case"sign-except-zero":case"+?":return{signDisplay:"exceptZero"}
case"sign-accounting-except-zero":case"()?":return{signDisplay:"exceptZero",currencySign:"accounting"}
case"sign-never":case"+_":return{signDisplay:"never"}}}function w(e){var a
if("E"===e[0]&&"E"===e[1]?(a={notation:"engineering"},e=e.slice(2)):"E"===e[0]&&(a={notation:"scientific"},e=e.slice(1)),a){var n=e.slice(0,2)
if("+!"===n?(a.signDisplay="always",e=e.slice(2)):"+?"===n&&(a.signDisplay="exceptZero",e=e.slice(2)),!M.test(e))throw new Error("Malformed concise eng/scientific notation")
a.minimumIntegerDigits=e.length}return a}function j(e){return _(e)||{}}function E(e){for(var a={},n=0,i=e;n<i.length;n++){var r=i[n]
switch(r.stem){case"percent":case"%":a.style="percent"
continue
case"%x100":a.style="percent",a.scale=100
continue
case"currency":a.style="currency",a.currency=r.options[0]
continue
case"group-off":case",_":a.useGrouping=!1
continue
case"precision-integer":case".":a.maximumFractionDigits=0
continue
case"measure-unit":case"unit":a.style="unit",a.unit=r.options[0].replace(/^(.*?)-/,"")
continue
case"compact-short":case"K":a.notation="compact",a.compactDisplay="short"
continue
case"compact-long":case"KK":a.notation="compact",a.compactDisplay="long"
continue
case"scientific":a=(0,t.pi)((0,t.pi)((0,t.pi)({},a),{notation:"scientific"}),r.options.reduce((function(e,a){return(0,t.pi)((0,t.pi)({},e),j(a))}),{}))
continue
case"engineering":a=(0,t.pi)((0,t.pi)((0,t.pi)({},a),{notation:"engineering"}),r.options.reduce((function(e,a){return(0,t.pi)((0,t.pi)({},e),j(a))}),{}))
continue
case"notation-simple":a.notation="standard"
continue
case"unit-width-narrow":a.currencyDisplay="narrowSymbol",a.unitDisplay="narrow"
continue
case"unit-width-short":a.currencyDisplay="code",a.unitDisplay="short"
continue
case"unit-width-full-name":a.currencyDisplay="name",a.unitDisplay="long"
continue
case"unit-width-iso-code":a.currencyDisplay="symbol"
continue
case"scale":a.scale=parseFloat(r.options[0])
continue
case"integer-width":if(r.options.length>1)throw new RangeError("integer-width stems only accept a single optional option")
r.options[0].replace(A,(function(e,n,i,r,t,o){if(n)a.minimumIntegerDigits=i.length
else{if(r&&t)throw new Error("We currently do not support maximum integer digits")
if(o)throw new Error("We currently do not support exact integer digits")}return""}))
continue}if(M.test(r.stem))a.minimumIntegerDigits=r.stem.length
else if(b.test(r.stem)){if(r.options.length>1)throw new RangeError("Fraction-precision stems only accept a single optional option")
r.stem.replace(b,(function(e,n,i,r,t,o){return"*"===i?a.minimumFractionDigits=n.length:r&&"#"===r[0]?a.maximumFractionDigits=r.length:t&&o?(a.minimumFractionDigits=t.length,a.maximumFractionDigits=t.length+o.length):(a.minimumFractionDigits=n.length,a.maximumFractionDigits=n.length),""})),r.options.length&&(a=(0,t.pi)((0,t.pi)({},a),T(r.options[0])))}else if(S.test(r.stem))a=(0,t.pi)((0,t.pi)({},a),T(r.stem))
else{var o=_(r.stem)
o&&(a=(0,t.pi)((0,t.pi)({},a),o))
var s=w(r.stem)
s&&(a=(0,t.pi)((0,t.pi)({},a),s))}}return a}var N=function(e){function a(n,i,r,t){var o=e.call(this)||this
return o.message=n,o.expected=i,o.found=r,o.location=t,o.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(o,a),o}return(0,t.ZT)(a,e),a.buildMessage=function(e,a){function n(e){return e.charCodeAt(0).toString(16).toUpperCase()}function i(e){return e.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(e){return"\\x0"+n(e)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(e){return"\\x"+n(e)}))}function r(e){return e.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(e){return"\\x0"+n(e)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(e){return"\\x"+n(e)}))}function t(e){switch(e.type){case"literal":return'"'+i(e.text)+'"'
case"class":var a=e.parts.map((function(e){return Array.isArray(e)?r(e[0])+"-"+r(e[1]):r(e)}))
return"["+(e.inverted?"^":"")+a+"]"
case"any":return"any character"
case"end":return"end of input"
case"other":return e.description}}return"Expected "+function(e){var a,n,i=e.map(t)
if(i.sort(),i.length>0){for(a=1,n=1;a<i.length;a++)i[a-1]!==i[a]&&(i[n]=i[a],n++)
i.length=n}switch(i.length){case 1:return i[0]
case 2:return i[0]+" or "+i[1]
default:return i.slice(0,-1).join(", ")+", or "+i[i.length-1]}}(e)+" but "+((o=a)?'"'+i(o)+'"':"end of input")+" found."
var o},a}(Error),B=function(e,a){a=void 0!==a?a:{}
var n,o={},s={start:Je},l=Je,u="<",c=Oe("<",!1),d=function(e){return e.join("")},h=Oe("#",!1),p=Ve("tagElement"),m=Oe("/>",!1),f=Oe(">",!1),v=Oe("</",!1),g=Ve("argumentElement"),k="{",b=Oe("{",!1),S="}",A=Oe("}",!1),M=Ve("numberSkeletonId"),T=/^['\/{}]/,_=Ie(["'","/","{","}"],!1,!1),w={type:"any"},j=Ve("numberSkeletonTokenOption"),B=Oe("/",!1),P=Ve("numberSkeletonToken"),L="::",D=Oe("::",!1),x=function(e){return ga.pop(),e.replace(/\s*$/,"")},C=",",K=Oe(",",!1),R="number",z=Oe("number",!1),O=function(e,a,n){return(0,t.pi)({type:"number"===a?i.number:"date"===a?i.date:i.time,style:n&&n[2],value:e},ya())},I="'",V=Oe("'",!1),G=/^[^']/,H=Ie(["'"],!0,!1),F=/^[^a-zA-Z'{}]/,J=Ie([["a","z"],["A","Z"],"'","{","}"],!0,!1),U=/^[a-zA-Z]/,W=Ie([["a","z"],["A","Z"]],!1,!1),Z="date",q=Oe("date",!1),Q="time",Y=Oe("time",!1),$="plural",X=Oe("plural",!1),ee="selectordinal",ae=Oe("selectordinal",!1),ne="offset:",ie=Oe("offset:",!1),re="select",te=Oe("select",!1),oe=Oe("=",!1),se=Ve("whitespace"),le=/^[\t-\r \x85\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/,ue=Ie([["\t","\r"]," ",""," "," ",[" "," "],"\u2028","\u2029"," "," ","　"],!1,!1),ce=Ve("syntax pattern"),de=/^[!-\/:-@[-\^`{-~\xA1-\xA7\xA9\xAB\xAC\xAE\xB0\xB1\xB6\xBB\xBF\xD7\xF7\u2010-\u2027\u2030-\u203E\u2041-\u2053\u2055-\u205E\u2190-\u245F\u2500-\u2775\u2794-\u2BFF\u2E00-\u2E7F\u3001-\u3003\u3008-\u3020\u3030\uFD3E\uFD3F\uFE45\uFE46]/,he=Ie([["!","/"],[":","@"],["[","^"],"`",["{","~"],["¡","§"],"©","«","¬","®","°","±","¶","»","¿","×","÷",["‐","‧"],["‰","‾"],["⁁","⁓"],["⁕","⁞"],["←","⑟"],["─","❵"],["➔","⯿"],["⸀","⹿"],["、","〃"],["〈","〠"],"〰","﴾","﴿","﹅","﹆"],!1,!1),pe=Ve("optional whitespace"),me=Ve("number"),fe=Oe("-",!1),ve=(Ve("apostrophe"),Ve("double apostrophes")),ge="''",ke=Oe("''",!1),ye=Oe("\n",!1),be=Ve("argNameOrNumber"),Se=Ve("validTag"),Ae=Ve("argNumber"),Me=Oe("0",!1),Te=/^[1-9]/,_e=Ie([["1","9"]],!1,!1),we=/^[0-9]/,je=Ie([["0","9"]],!1,!1),Ee=Ve("argName"),Ne=Ve("tagName"),Be=0,Pe=0,Le=[{line:1,column:1}],De=0,xe=[],Ce=0
if(void 0!==a.startRule){if(!(a.startRule in s))throw new Error("Can't start parsing from rule \""+a.startRule+'".')
l=s[a.startRule]}function Ke(){return e.substring(Pe,Be)}function Re(){return He(Pe,Be)}function ze(e,a){throw function(e,a){return new N(e,[],"",a)}(e,a=void 0!==a?a:He(Pe,Be))}function Oe(e,a){return{type:"literal",text:e,ignoreCase:a}}function Ie(e,a,n){return{type:"class",parts:e,inverted:a,ignoreCase:n}}function Ve(e){return{type:"other",description:e}}function Ge(a){var n,i=Le[a]
if(i)return i
for(n=a-1;!Le[n];)n--
for(i={line:(i=Le[n]).line,column:i.column};n<a;)10===e.charCodeAt(n)?(i.line++,i.column=1):i.column++,n++
return Le[a]=i,i}function He(e,a){var n=Ge(e),i=Ge(a)
return{start:{offset:e,line:n.line,column:n.column},end:{offset:a,line:i.line,column:i.column}}}function Fe(e){Be<De||(Be>De&&(De=Be,xe=[]),xe.push(e))}function Je(){return Ue()}function Ue(){var e,a
for(e=[],a=We();a!==o;)e.push(a),a=We()
return e}function We(){var a,n
return a=Be,Pe=Be,(Ma?o:void 0)!==o?(n=function(){var e,a,n,r,s,l,u
return Ce++,(e=Qe())===o&&(e=Be,(a=Ye())!==o&&(n=Ue())!==o&&(r=$e())!==o?(Pe=e,l=n,(s=a)!==(u=r)&&ze('Mismatch tag "'+s+'" !== "'+u+'"',Re()),e=a=(0,t.pi)({type:i.tag,value:s,children:l},ya())):(Be=e,e=o)),Ce--,e===o&&(a=o,0===Ce&&Fe(p)),e}(),n!==o?(Pe=a,a=n):(Be=a,a=o)):(Be=a,a=o),a===o&&(a=function(){var e,a,n
return e=Be,(a=Ze())!==o&&(Pe=e,n=a,a=(0,t.pi)({type:i.literal,value:n},ya())),a}())===o&&(a=function(){var a,n,r,s,l
return Ce++,a=Be,123===e.charCodeAt(Be)?(n=k,Be++):(n=o,0===Ce&&Fe(b)),n!==o&&la()!==o&&(r=pa())!==o&&la()!==o?(125===e.charCodeAt(Be)?(s=S,Be++):(s=o,0===Ce&&Fe(A)),s!==o?(Pe=a,l=r,a=n=(0,t.pi)({type:i.argument,value:l},ya())):(Be=a,a=o)):(Be=a,a=o),Ce--,a===o&&(n=o,0===Ce&&Fe(g)),a}())===o&&(a=function(){var a
return a=function(){var a,n,i,s,l,u,c,d,h
return a=Be,123===e.charCodeAt(Be)?(n=k,Be++):(n=o,0===Ce&&Fe(b)),n!==o&&la()!==o&&(i=pa())!==o&&la()!==o?(44===e.charCodeAt(Be)?(s=C,Be++):(s=o,0===Ce&&Fe(K)),s!==o&&la()!==o?(e.substr(Be,6)===R?(l=R,Be+=6):(l=o,0===Ce&&Fe(z)),l!==o&&la()!==o?(u=Be,44===e.charCodeAt(Be)?(c=C,Be++):(c=o,0===Ce&&Fe(K)),c!==o&&(d=la())!==o?(h=function(){var a,n,i
return a=Be,e.substr(Be,2)===L?(n=L,Be+=2):(n=o,0===Ce&&Fe(D)),n!==o?(i=function(){var e,a,n,i
if(e=Be,a=[],(n=aa())!==o)for(;n!==o;)a.push(n),n=aa()
else a=o
return a!==o&&(Pe=e,i=a,a=(0,t.pi)({type:r.number,tokens:i,parsedOptions:Ta?E(i):{}},ya())),a}(),i!==o?(Pe=a,a=n=i):(Be=a,a=o)):(Be=a,a=o),a===o&&(a=Be,Pe=Be,ga.push("numberArgStyle"),(n=(n=!0)?void 0:o)!==o&&(i=Ze())!==o?(Pe=a,a=n=x(i)):(Be=a,a=o)),a}(),h!==o?u=c=[c,d,h]:(Be=u,u=o)):(Be=u,u=o),u===o&&(u=null),u!==o&&(c=la())!==o?(125===e.charCodeAt(Be)?(d=S,Be++):(d=o,0===Ce&&Fe(A)),d!==o?(Pe=a,a=n=O(i,l,u)):(Be=a,a=o)):(Be=a,a=o)):(Be=a,a=o)):(Be=a,a=o)):(Be=a,a=o),a}(),a===o&&(a=function(){var a,n,i,s,l,u,c,d,h
return a=Be,123===e.charCodeAt(Be)?(n=k,Be++):(n=o,0===Ce&&Fe(b)),n!==o&&la()!==o&&(i=pa())!==o&&la()!==o?(44===e.charCodeAt(Be)?(s=C,Be++):(s=o,0===Ce&&Fe(K)),s!==o&&la()!==o?(e.substr(Be,4)===Z?(l=Z,Be+=4):(l=o,0===Ce&&Fe(q)),l===o&&(e.substr(Be,4)===Q?(l=Q,Be+=4):(l=o,0===Ce&&Fe(Y))),l!==o&&la()!==o?(u=Be,44===e.charCodeAt(Be)?(c=C,Be++):(c=o,0===Ce&&Fe(K)),c!==o&&(d=la())!==o?(h=function(){var a,n,i
return a=Be,e.substr(Be,2)===L?(n=L,Be+=2):(n=o,0===Ce&&Fe(D)),n!==o?(i=function(){var a,n,i,s,l,u,c
if(a=Be,n=Be,i=[],(s=na())===o&&(s=ia()),s!==o)for(;s!==o;)i.push(s),(s=na())===o&&(s=ia())
else i=o
return(n=i!==o?e.substring(n,Be):i)!==o&&(Pe=a,l=n,n=(0,t.pi)({type:r.dateTime,pattern:l,parsedOptions:Ta?(u=l,c={},u.replace(y,(function(e){var a=e.length
switch(e[0]){case"G":c.era=4===a?"long":5===a?"narrow":"short"
break
case"y":c.year=2===a?"2-digit":"numeric"
break
case"Y":case"u":case"U":case"r":throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead")
case"q":case"Q":throw new RangeError("`q/Q` (quarter) patterns are not supported")
case"M":case"L":c.month=["numeric","2-digit","short","long","narrow"][a-1]
break
case"w":case"W":throw new RangeError("`w/W` (week) patterns are not supported")
case"d":c.day=["numeric","2-digit"][a-1]
break
case"D":case"F":case"g":throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead")
case"E":c.weekday=4===a?"short":5===a?"narrow":"short"
break
case"e":if(a<4)throw new RangeError("`e..eee` (weekday) patterns are not supported")
c.weekday=["short","long","narrow","short"][a-4]
break
case"c":if(a<4)throw new RangeError("`c..ccc` (weekday) patterns are not supported")
c.weekday=["short","long","narrow","short"][a-4]
break
case"a":c.hour12=!0
break
case"b":case"B":throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead")
case"h":c.hourCycle="h12",c.hour=["numeric","2-digit"][a-1]
break
case"H":c.hourCycle="h23",c.hour=["numeric","2-digit"][a-1]
break
case"K":c.hourCycle="h11",c.hour=["numeric","2-digit"][a-1]
break
case"k":c.hourCycle="h24",c.hour=["numeric","2-digit"][a-1]
break
case"j":case"J":case"C":throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead")
case"m":c.minute=["numeric","2-digit"][a-1]
break
case"s":c.second=["numeric","2-digit"][a-1]
break
case"S":case"A":throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead")
case"z":c.timeZoneName=a<4?"short":"long"
break
case"Z":case"O":case"v":case"V":case"X":case"x":throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead")}return""})),c):{}},ya())),n}(),i!==o?(Pe=a,a=n=i):(Be=a,a=o)):(Be=a,a=o),a===o&&(a=Be,Pe=Be,ga.push("dateOrTimeArgStyle"),(n=(n=!0)?void 0:o)!==o&&(i=Ze())!==o?(Pe=a,a=n=x(i)):(Be=a,a=o)),a}(),h!==o?u=c=[c,d,h]:(Be=u,u=o)):(Be=u,u=o),u===o&&(u=null),u!==o&&(c=la())!==o?(125===e.charCodeAt(Be)?(d=S,Be++):(d=o,0===Ce&&Fe(A)),d!==o?(Pe=a,a=n=O(i,l,u)):(Be=a,a=o)):(Be=a,a=o)):(Be=a,a=o)):(Be=a,a=o)):(Be=a,a=o),a}()),a}(),a===o&&(a=function(){var a,n,r,s,l,u,c,d,h,p,m
if(a=Be,123===e.charCodeAt(Be)?(n=k,Be++):(n=o,0===Ce&&Fe(b)),n!==o)if(la()!==o)if((r=pa())!==o)if(la()!==o)if(44===e.charCodeAt(Be)?(s=C,Be++):(s=o,0===Ce&&Fe(K)),s!==o)if(la()!==o)if(e.substr(Be,6)===$?(l=$,Be+=6):(l=o,0===Ce&&Fe(X)),l===o&&(e.substr(Be,13)===ee?(l=ee,Be+=13):(l=o,0===Ce&&Fe(ae))),l!==o)if(la()!==o)if(44===e.charCodeAt(Be)?(u=C,Be++):(u=o,0===Ce&&Fe(K)),u!==o)if(la()!==o)if(c=Be,e.substr(Be,7)===ne?(d=ne,Be+=7):(d=o,0===Ce&&Fe(ie)),d!==o&&(h=la())!==o&&(p=ua())!==o?c=d=[d,h,p]:(Be=c,c=o),c===o&&(c=null),c!==o)if((d=la())!==o){if(h=[],(p=ta())!==o)for(;p!==o;)h.push(p),p=ta()
else h=o
h!==o&&(p=la())!==o?(125===e.charCodeAt(Be)?(m=S,Be++):(m=o,0===Ce&&Fe(A)),m!==o?(Pe=a,n=function(e,a,n,r){return(0,t.pi)({type:i.plural,pluralType:"plural"===a?"cardinal":"ordinal",value:e,offset:n?n[2]:0,options:r.reduce((function(e,a){var n=a.id,i=a.value,r=a.location
return n in e&&ze('Duplicate option "'+n+'" in plural element: "'+Ke()+'"',Re()),e[n]={value:i,location:r},e}),{})},ya())}(r,l,c,h),a=n):(Be=a,a=o)):(Be=a,a=o)}else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
return a}(),a===o&&(a=function(){var a,n,r,s,l,u,c,d,h
if(a=Be,123===e.charCodeAt(Be)?(n=k,Be++):(n=o,0===Ce&&Fe(b)),n!==o)if(la()!==o)if((r=pa())!==o)if(la()!==o)if(44===e.charCodeAt(Be)?(s=C,Be++):(s=o,0===Ce&&Fe(K)),s!==o)if(la()!==o)if(e.substr(Be,6)===re?(l=re,Be+=6):(l=o,0===Ce&&Fe(te)),l!==o)if(la()!==o)if(44===e.charCodeAt(Be)?(u=C,Be++):(u=o,0===Ce&&Fe(K)),u!==o)if(la()!==o){if(c=[],(d=ra())!==o)for(;d!==o;)c.push(d),d=ra()
else c=o
c!==o&&(d=la())!==o?(125===e.charCodeAt(Be)?(h=S,Be++):(h=o,0===Ce&&Fe(A)),h!==o?(Pe=a,n=function(e,a){return(0,t.pi)({type:i.select,value:e,options:a.reduce((function(e,a){var n=a.id,i=a.value,r=a.location
return n in e&&ze('Duplicate option "'+n+'" in select element: "'+Ke()+'"',Re()),e[n]={value:i,location:r},e}),{})},ya())}(r,c),a=n):(Be=a,a=o)):(Be=a,a=o)}else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
else Be=a,a=o
return a}(),a===o&&(a=function(){var a,n
return a=Be,35===e.charCodeAt(Be)?(n="#",Be++):(n=o,0===Ce&&Fe(h)),n!==o&&(Pe=a,n=(0,t.pi)({type:i.pound},ya())),n}())))),a}function Ze(){var a,n,i,r
if(a=Be,Pe=Be,(n=(n=Ma)?void 0:o)!==o){if(i=[],(r=ca())===o&&(r=da())===o&&(r=ha())===o&&(60===e.charCodeAt(Be)?(r=u,Be++):(r=o,0===Ce&&Fe(c))),r!==o)for(;r!==o;)i.push(r),(r=ca())===o&&(r=da())===o&&(r=ha())===o&&(60===e.charCodeAt(Be)?(r=u,Be++):(r=o,0===Ce&&Fe(c)))
else i=o
i!==o?(Pe=a,a=n=d(i)):(Be=a,a=o)}else Be=a,a=o
if(a===o){if(a=Be,n=[],(i=ca())===o&&(i=da())===o&&(i=ha())===o&&(i=qe()),i!==o)for(;i!==o;)n.push(i),(i=ca())===o&&(i=da())===o&&(i=ha())===o&&(i=qe())
else n=o
n!==o&&(Pe=a,n=d(n)),a=n}return a}function qe(){var a,n,i
return a=Be,n=Be,Ce++,(i=Ye())===o&&(i=$e())===o&&(i=Qe()),Ce--,i===o?n=void 0:(Be=n,n=o),n!==o?(60===e.charCodeAt(Be)?(i=u,Be++):(i=o,0===Ce&&Fe(c)),i!==o?(Pe=a,a=n="<"):(Be=a,a=o)):(Be=a,a=o),a}function Qe(){var a,n,r,s,l,d,h
return a=Be,n=Be,60===e.charCodeAt(Be)?(r=u,Be++):(r=o,0===Ce&&Fe(c)),r!==o&&(s=ma())!==o&&(l=la())!==o?("/>"===e.substr(Be,2)?(d="/>",Be+=2):(d=o,0===Ce&&Fe(m)),d!==o?n=r=[r,s,l,d]:(Be=n,n=o)):(Be=n,n=o),n!==o&&(Pe=a,h=n,n=(0,t.pi)({type:i.literal,value:h.join("")},ya())),n}function Ye(){var a,n,i,r
return a=Be,60===e.charCodeAt(Be)?(n=u,Be++):(n=o,0===Ce&&Fe(c)),n!==o&&(i=ma())!==o?(62===e.charCodeAt(Be)?(r=">",Be++):(r=o,0===Ce&&Fe(f)),r!==o?(Pe=a,a=n=i):(Be=a,a=o)):(Be=a,a=o),a}function $e(){var a,n,i,r
return a=Be,"</"===e.substr(Be,2)?(n="</",Be+=2):(n=o,0===Ce&&Fe(v)),n!==o&&(i=ma())!==o?(62===e.charCodeAt(Be)?(r=">",Be++):(r=o,0===Ce&&Fe(f)),r!==o?(Pe=a,a=n=i):(Be=a,a=o)):(Be=a,a=o),a}function Xe(){var a,n,i,r,t
if(Ce++,a=Be,n=[],i=Be,r=Be,Ce++,(t=oa())===o&&(T.test(e.charAt(Be))?(t=e.charAt(Be),Be++):(t=o,0===Ce&&Fe(_))),Ce--,t===o?r=void 0:(Be=r,r=o),r!==o?(e.length>Be?(t=e.charAt(Be),Be++):(t=o,0===Ce&&Fe(w)),t!==o?i=r=[r,t]:(Be=i,i=o)):(Be=i,i=o),i!==o)for(;i!==o;)n.push(i),i=Be,r=Be,Ce++,(t=oa())===o&&(T.test(e.charAt(Be))?(t=e.charAt(Be),Be++):(t=o,0===Ce&&Fe(_))),Ce--,t===o?r=void 0:(Be=r,r=o),r!==o?(e.length>Be?(t=e.charAt(Be),Be++):(t=o,0===Ce&&Fe(w)),t!==o?i=r=[r,t]:(Be=i,i=o)):(Be=i,i=o)
else n=o
return a=n!==o?e.substring(a,Be):n,Ce--,a===o&&(n=o,0===Ce&&Fe(M)),a}function ea(){var a,n,i
return Ce++,a=Be,47===e.charCodeAt(Be)?(n="/",Be++):(n=o,0===Ce&&Fe(B)),n!==o&&(i=Xe())!==o?(Pe=a,a=n=i):(Be=a,a=o),Ce--,a===o&&(n=o,0===Ce&&Fe(j)),a}function aa(){var e,a,n,i,r
if(Ce++,e=Be,(a=la())!==o)if((n=Xe())!==o){for(i=[],r=ea();r!==o;)i.push(r),r=ea()
i!==o?(Pe=e,a=function(e,a){return{stem:e,options:a}}(n,i),e=a):(Be=e,e=o)}else Be=e,e=o
else Be=e,e=o
return Ce--,e===o&&(a=o,0===Ce&&Fe(P)),e}function na(){var a,n,i,r
if(a=Be,39===e.charCodeAt(Be)?(n=I,Be++):(n=o,0===Ce&&Fe(V)),n!==o){if(i=[],(r=ca())===o&&(G.test(e.charAt(Be))?(r=e.charAt(Be),Be++):(r=o,0===Ce&&Fe(H))),r!==o)for(;r!==o;)i.push(r),(r=ca())===o&&(G.test(e.charAt(Be))?(r=e.charAt(Be),Be++):(r=o,0===Ce&&Fe(H)))
else i=o
i!==o?(39===e.charCodeAt(Be)?(r=I,Be++):(r=o,0===Ce&&Fe(V)),r!==o?a=n=[n,i,r]:(Be=a,a=o)):(Be=a,a=o)}else Be=a,a=o
if(a===o)if(a=[],(n=ca())===o&&(F.test(e.charAt(Be))?(n=e.charAt(Be),Be++):(n=o,0===Ce&&Fe(J))),n!==o)for(;n!==o;)a.push(n),(n=ca())===o&&(F.test(e.charAt(Be))?(n=e.charAt(Be),Be++):(n=o,0===Ce&&Fe(J)))
else a=o
return a}function ia(){var a,n
if(a=[],U.test(e.charAt(Be))?(n=e.charAt(Be),Be++):(n=o,0===Ce&&Fe(W)),n!==o)for(;n!==o;)a.push(n),U.test(e.charAt(Be))?(n=e.charAt(Be),Be++):(n=o,0===Ce&&Fe(W))
else a=o
return a}function ra(){var a,n,i,r,s,l,u
return a=Be,la()!==o&&(n=va())!==o&&la()!==o?(123===e.charCodeAt(Be)?(i=k,Be++):(i=o,0===Ce&&Fe(b)),i!==o?(Pe=Be,ga.push("select"),void 0!==o&&(r=Ue())!==o?(125===e.charCodeAt(Be)?(s=S,Be++):(s=o,0===Ce&&Fe(A)),s!==o?(Pe=a,l=n,u=r,ga.pop(),a=(0,t.pi)({id:l,value:u},ya())):(Be=a,a=o)):(Be=a,a=o)):(Be=a,a=o)):(Be=a,a=o),a}function ta(){var a,n,i,r,s,l,u
return a=Be,la()!==o?(n=function(){var a,n,i,r
return a=Be,n=Be,61===e.charCodeAt(Be)?(i="=",Be++):(i=o,0===Ce&&Fe(oe)),i!==o&&(r=ua())!==o?n=i=[i,r]:(Be=n,n=o),(a=n!==o?e.substring(a,Be):n)===o&&(a=va()),a}(),n!==o&&la()!==o?(123===e.charCodeAt(Be)?(i=k,Be++):(i=o,0===Ce&&Fe(b)),i!==o?(Pe=Be,ga.push("plural"),void 0!==o&&(r=Ue())!==o?(125===e.charCodeAt(Be)?(s=S,Be++):(s=o,0===Ce&&Fe(A)),s!==o?(Pe=a,l=n,u=r,ga.pop(),a=(0,t.pi)({id:l,value:u},ya())):(Be=a,a=o)):(Be=a,a=o)):(Be=a,a=o)):(Be=a,a=o)):(Be=a,a=o),a}function oa(){var a
return Ce++,le.test(e.charAt(Be))?(a=e.charAt(Be),Be++):(a=o,0===Ce&&Fe(ue)),Ce--,a===o&&0===Ce&&Fe(se),a}function sa(){var a
return Ce++,de.test(e.charAt(Be))?(a=e.charAt(Be),Be++):(a=o,0===Ce&&Fe(he)),Ce--,a===o&&0===Ce&&Fe(ce),a}function la(){var a,n,i
for(Ce++,a=Be,n=[],i=oa();i!==o;)n.push(i),i=oa()
return a=n!==o?e.substring(a,Be):n,Ce--,a===o&&(n=o,0===Ce&&Fe(pe)),a}function ua(){var a,n,i,r
return Ce++,a=Be,45===e.charCodeAt(Be)?(n="-",Be++):(n=o,0===Ce&&Fe(fe)),n===o&&(n=null),n!==o&&(i=fa())!==o?(Pe=a,a=n=(r=i)?n?-r:r:0):(Be=a,a=o),Ce--,a===o&&(n=o,0===Ce&&Fe(me)),a}function ca(){var a,n
return Ce++,a=Be,e.substr(Be,2)===ge?(n=ge,Be+=2):(n=o,0===Ce&&Fe(ke)),n!==o&&(Pe=a,n="'"),Ce--,(a=n)===o&&(n=o,0===Ce&&Fe(ve)),a}function da(){var a,n,i,r,t,s
if(a=Be,39===e.charCodeAt(Be)?(n=I,Be++):(n=o,0===Ce&&Fe(V)),n!==o)if(i=function(){var a,n,i,r,t
return a=Be,n=Be,e.length>Be?(i=e.charAt(Be),Be++):(i=o,0===Ce&&Fe(w)),i!==o?(Pe=Be,(r=(r="<"===(t=i)||">"===t||"{"===t||"}"===t||ka()&&"#"===t)?void 0:o)!==o?n=i=[i,r]:(Be=n,n=o)):(Be=n,n=o),n!==o?e.substring(a,Be):n}(),i!==o){for(r=Be,t=[],e.substr(Be,2)===ge?(s=ge,Be+=2):(s=o,0===Ce&&Fe(ke)),s===o&&(G.test(e.charAt(Be))?(s=e.charAt(Be),Be++):(s=o,0===Ce&&Fe(H)));s!==o;)t.push(s),e.substr(Be,2)===ge?(s=ge,Be+=2):(s=o,0===Ce&&Fe(ke)),s===o&&(G.test(e.charAt(Be))?(s=e.charAt(Be),Be++):(s=o,0===Ce&&Fe(H)));(r=t!==o?e.substring(r,Be):t)!==o?(39===e.charCodeAt(Be)?(t=I,Be++):(t=o,0===Ce&&Fe(V)),t===o&&(t=null),t!==o?(Pe=a,a=n=i+r.replace("''","'")):(Be=a,a=o)):(Be=a,a=o)}else Be=a,a=o
else Be=a,a=o
return a}function ha(){var a,n,i,r,t
return a=Be,n=Be,e.length>Be?(i=e.charAt(Be),Be++):(i=o,0===Ce&&Fe(w)),i!==o?(Pe=Be,(r=(r=!("<"===(t=i)||"{"===t||ka()&&"#"===t||ga.length>1&&"}"===t))?void 0:o)!==o?n=i=[i,r]:(Be=n,n=o)):(Be=n,n=o),n===o&&(10===e.charCodeAt(Be)?(n="\n",Be++):(n=o,0===Ce&&Fe(ye))),n!==o?e.substring(a,Be):n}function pa(){var a,n
return Ce++,a=Be,(n=fa())===o&&(n=va()),a=n!==o?e.substring(a,Be):n,Ce--,a===o&&(n=o,0===Ce&&Fe(be)),a}function ma(){var a,n
return Ce++,a=Be,(n=fa())===o&&(n=function(){var a,n,i,r,t
if(Ce++,a=Be,n=[],45===e.charCodeAt(Be)?(i="-",Be++):(i=o,0===Ce&&Fe(fe)),i===o&&(i=Be,r=Be,Ce++,(t=oa())===o&&(t=sa()),Ce--,t===o?r=void 0:(Be=r,r=o),r!==o?(e.length>Be?(t=e.charAt(Be),Be++):(t=o,0===Ce&&Fe(w)),t!==o?i=r=[r,t]:(Be=i,i=o)):(Be=i,i=o)),i!==o)for(;i!==o;)n.push(i),45===e.charCodeAt(Be)?(i="-",Be++):(i=o,0===Ce&&Fe(fe)),i===o&&(i=Be,r=Be,Ce++,(t=oa())===o&&(t=sa()),Ce--,t===o?r=void 0:(Be=r,r=o),r!==o?(e.length>Be?(t=e.charAt(Be),Be++):(t=o,0===Ce&&Fe(w)),t!==o?i=r=[r,t]:(Be=i,i=o)):(Be=i,i=o))
else n=o
return a=n!==o?e.substring(a,Be):n,Ce--,a===o&&(n=o,0===Ce&&Fe(Ne)),a}()),a=n!==o?e.substring(a,Be):n,Ce--,a===o&&(n=o,0===Ce&&Fe(Se)),a}function fa(){var a,n,i,r,t
if(Ce++,a=Be,48===e.charCodeAt(Be)?(n="0",Be++):(n=o,0===Ce&&Fe(Me)),n!==o&&(Pe=a,n=0),(a=n)===o){if(a=Be,n=Be,Te.test(e.charAt(Be))?(i=e.charAt(Be),Be++):(i=o,0===Ce&&Fe(_e)),i!==o){for(r=[],we.test(e.charAt(Be))?(t=e.charAt(Be),Be++):(t=o,0===Ce&&Fe(je));t!==o;)r.push(t),we.test(e.charAt(Be))?(t=e.charAt(Be),Be++):(t=o,0===Ce&&Fe(je))
r!==o?n=i=[i,r]:(Be=n,n=o)}else Be=n,n=o
n!==o&&(Pe=a,n=parseInt(n.join(""),10)),a=n}return Ce--,a===o&&(n=o,0===Ce&&Fe(Ae)),a}function va(){var a,n,i,r,t
if(Ce++,a=Be,n=[],i=Be,r=Be,Ce++,(t=oa())===o&&(t=sa()),Ce--,t===o?r=void 0:(Be=r,r=o),r!==o?(e.length>Be?(t=e.charAt(Be),Be++):(t=o,0===Ce&&Fe(w)),t!==o?i=r=[r,t]:(Be=i,i=o)):(Be=i,i=o),i!==o)for(;i!==o;)n.push(i),i=Be,r=Be,Ce++,(t=oa())===o&&(t=sa()),Ce--,t===o?r=void 0:(Be=r,r=o),r!==o?(e.length>Be?(t=e.charAt(Be),Be++):(t=o,0===Ce&&Fe(w)),t!==o?i=r=[r,t]:(Be=i,i=o)):(Be=i,i=o)
else n=o
return a=n!==o?e.substring(a,Be):n,Ce--,a===o&&(n=o,0===Ce&&Fe(Ee)),a}var ga=["root"]
function ka(){return"plural"===ga[ga.length-1]}function ya(){return a&&a.captureLocation?{location:Re()}:{}}var ba,Sa,Aa,Ma=a&&a.ignoreTag,Ta=a&&a.shouldParseSkeleton
if((n=l())!==o&&Be===e.length)return n
throw n!==o&&Be<e.length&&Fe({type:"end"}),ba=xe,Sa=De<e.length?e.charAt(De):null,Aa=De<e.length?He(De,De+1):He(De,De),new N(N.buildMessage(ba,Sa),ba,Sa,Aa)},P=/(^|[^\\])#/g
function L(e){e.forEach((function(e){(h(e)||d(e))&&Object.keys(e.options).forEach((function(a){for(var n,i=e.options[a],r=-1,s=void 0,l=0;l<i.value.length;l++){var u=i.value[l]
if(o(u)&&P.test(u.value)){r=l,s=u
break}}if(s){var c=s.value.replace(P,"$1{"+e.value+", number}"),d=B(c);(n=i.value).splice.apply(n,(0,t.ev)([r,1],d))}L(i.value)}))}))}function D(e,a){a=(0,t.pi)({normalizeHashtagInPlural:!0,shouldParseSkeleton:!0},a||{})
var n=B(e,a)
return a.normalizeHashtagInPlural&&L(n),n}},9370:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{ErrorCode:()=>de,FormatError:()=>fe,IntlMessageFormat:()=>Ae,InvalidValueError:()=>ve,InvalidValueTypeError:()=>ge,MissingValueError:()=>ke,PART_TYPE:()=>me,default:()=>Me,formatToParts:()=>be,isFormatXMLElementFn:()=>ye})
var i,r,t,o=n(2985)
function s(e){return e.type===r.literal}function l(e){return e.type===r.argument}function u(e){return e.type===r.number}function c(e){return e.type===r.date}function d(e){return e.type===r.time}function h(e){return e.type===r.select}function p(e){return e.type===r.plural}function m(e){return e.type===r.pound}function f(e){return e.type===r.tag}function v(e){return!(!e||"object"!=typeof e||e.type!==t.number)}function g(e){return!(!e||"object"!=typeof e||e.type!==t.dateTime)}!function(e){e[e.EXPECT_ARGUMENT_CLOSING_BRACE=1]="EXPECT_ARGUMENT_CLOSING_BRACE",e[e.EMPTY_ARGUMENT=2]="EMPTY_ARGUMENT",e[e.MALFORMED_ARGUMENT=3]="MALFORMED_ARGUMENT",e[e.EXPECT_ARGUMENT_TYPE=4]="EXPECT_ARGUMENT_TYPE",e[e.INVALID_ARGUMENT_TYPE=5]="INVALID_ARGUMENT_TYPE",e[e.EXPECT_ARGUMENT_STYLE=6]="EXPECT_ARGUMENT_STYLE",e[e.INVALID_NUMBER_SKELETON=7]="INVALID_NUMBER_SKELETON",e[e.INVALID_DATE_TIME_SKELETON=8]="INVALID_DATE_TIME_SKELETON",e[e.EXPECT_NUMBER_SKELETON=9]="EXPECT_NUMBER_SKELETON",e[e.EXPECT_DATE_TIME_SKELETON=10]="EXPECT_DATE_TIME_SKELETON",e[e.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE=11]="UNCLOSED_QUOTE_IN_ARGUMENT_STYLE",e[e.EXPECT_SELECT_ARGUMENT_OPTIONS=12]="EXPECT_SELECT_ARGUMENT_OPTIONS",e[e.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE=13]="EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE",e[e.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE=14]="INVALID_PLURAL_ARGUMENT_OFFSET_VALUE",e[e.EXPECT_SELECT_ARGUMENT_SELECTOR=15]="EXPECT_SELECT_ARGUMENT_SELECTOR",e[e.EXPECT_PLURAL_ARGUMENT_SELECTOR=16]="EXPECT_PLURAL_ARGUMENT_SELECTOR",e[e.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT=17]="EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT",e[e.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT=18]="EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT",e[e.INVALID_PLURAL_ARGUMENT_SELECTOR=19]="INVALID_PLURAL_ARGUMENT_SELECTOR",e[e.DUPLICATE_PLURAL_ARGUMENT_SELECTOR=20]="DUPLICATE_PLURAL_ARGUMENT_SELECTOR",e[e.DUPLICATE_SELECT_ARGUMENT_SELECTOR=21]="DUPLICATE_SELECT_ARGUMENT_SELECTOR",e[e.MISSING_OTHER_CLAUSE=22]="MISSING_OTHER_CLAUSE",e[e.INVALID_TAG=23]="INVALID_TAG",e[e.INVALID_TAG_NAME=25]="INVALID_TAG_NAME",e[e.UNMATCHED_CLOSING_TAG=26]="UNMATCHED_CLOSING_TAG",e[e.UNCLOSED_TAG=27]="UNCLOSED_TAG"}(i||(i={})),function(e){e[e.literal=0]="literal",e[e.argument=1]="argument",e[e.number=2]="number",e[e.date=3]="date",e[e.time=4]="time",e[e.select=5]="select",e[e.plural=6]="plural",e[e.pound=7]="pound",e[e.tag=8]="tag"}(r||(r={})),function(e){e[e.number=0]="number",e[e.dateTime=1]="dateTime"}(t||(t={}))
var k=/[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,y=/(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g
function b(e){var a={}
return e.replace(y,(function(e){var n=e.length
switch(e[0]){case"G":a.era=4===n?"long":5===n?"narrow":"short"
break
case"y":a.year=2===n?"2-digit":"numeric"
break
case"Y":case"u":case"U":case"r":throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead")
case"q":case"Q":throw new RangeError("`q/Q` (quarter) patterns are not supported")
case"M":case"L":a.month=["numeric","2-digit","short","long","narrow"][n-1]
break
case"w":case"W":throw new RangeError("`w/W` (week) patterns are not supported")
case"d":a.day=["numeric","2-digit"][n-1]
break
case"D":case"F":case"g":throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead")
case"E":a.weekday=4===n?"short":5===n?"narrow":"short"
break
case"e":if(n<4)throw new RangeError("`e..eee` (weekday) patterns are not supported")
a.weekday=["short","long","narrow","short"][n-4]
break
case"c":if(n<4)throw new RangeError("`c..ccc` (weekday) patterns are not supported")
a.weekday=["short","long","narrow","short"][n-4]
break
case"a":a.hour12=!0
break
case"b":case"B":throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead")
case"h":a.hourCycle="h12",a.hour=["numeric","2-digit"][n-1]
break
case"H":a.hourCycle="h23",a.hour=["numeric","2-digit"][n-1]
break
case"K":a.hourCycle="h11",a.hour=["numeric","2-digit"][n-1]
break
case"k":a.hourCycle="h24",a.hour=["numeric","2-digit"][n-1]
break
case"j":case"J":case"C":throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead")
case"m":a.minute=["numeric","2-digit"][n-1]
break
case"s":a.second=["numeric","2-digit"][n-1]
break
case"S":case"A":throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead")
case"z":a.timeZoneName=n<4?"short":"long"
break
case"Z":case"O":case"v":case"V":case"X":case"x":throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead")}return""})),a}var S,A=/[\t-\r \x85\u200E\u200F\u2028\u2029]/i,M=/^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g,T=/^(@+)?(\+|#+)?[rs]?$/g,_=/(\*)(0+)|(#+)(0+)|(0+)/g,w=/^(0+)$/
function j(e){var a={}
return"r"===e[e.length-1]?a.roundingPriority="morePrecision":"s"===e[e.length-1]&&(a.roundingPriority="lessPrecision"),e.replace(T,(function(e,n,i){return"string"!=typeof i?(a.minimumSignificantDigits=n.length,a.maximumSignificantDigits=n.length):"+"===i?a.minimumSignificantDigits=n.length:"#"===n[0]?a.maximumSignificantDigits=n.length:(a.minimumSignificantDigits=n.length,a.maximumSignificantDigits=n.length+("string"==typeof i?i.length:0)),""})),a}function E(e){switch(e){case"sign-auto":return{signDisplay:"auto"}
case"sign-accounting":case"()":return{currencySign:"accounting"}
case"sign-always":case"+!":return{signDisplay:"always"}
case"sign-accounting-always":case"()!":return{signDisplay:"always",currencySign:"accounting"}
case"sign-except-zero":case"+?":return{signDisplay:"exceptZero"}
case"sign-accounting-except-zero":case"()?":return{signDisplay:"exceptZero",currencySign:"accounting"}
case"sign-never":case"+_":return{signDisplay:"never"}}}function N(e){var a
if("E"===e[0]&&"E"===e[1]?(a={notation:"engineering"},e=e.slice(2)):"E"===e[0]&&(a={notation:"scientific"},e=e.slice(1)),a){var n=e.slice(0,2)
if("+!"===n?(a.signDisplay="always",e=e.slice(2)):"+?"===n&&(a.signDisplay="exceptZero",e=e.slice(2)),!w.test(e))throw new Error("Malformed concise eng/scientific notation")
a.minimumIntegerDigits=e.length}return a}function B(e){return E(e)||{}}function P(e){for(var a={},n=0,i=e;n<i.length;n++){var r=i[n]
switch(r.stem){case"percent":case"%":a.style="percent"
continue
case"%x100":a.style="percent",a.scale=100
continue
case"currency":a.style="currency",a.currency=r.options[0]
continue
case"group-off":case",_":a.useGrouping=!1
continue
case"precision-integer":case".":a.maximumFractionDigits=0
continue
case"measure-unit":case"unit":a.style="unit",a.unit=r.options[0].replace(/^(.*?)-/,"")
continue
case"compact-short":case"K":a.notation="compact",a.compactDisplay="short"
continue
case"compact-long":case"KK":a.notation="compact",a.compactDisplay="long"
continue
case"scientific":a=(0,o.pi)((0,o.pi)((0,o.pi)({},a),{notation:"scientific"}),r.options.reduce((function(e,a){return(0,o.pi)((0,o.pi)({},e),B(a))}),{}))
continue
case"engineering":a=(0,o.pi)((0,o.pi)((0,o.pi)({},a),{notation:"engineering"}),r.options.reduce((function(e,a){return(0,o.pi)((0,o.pi)({},e),B(a))}),{}))
continue
case"notation-simple":a.notation="standard"
continue
case"unit-width-narrow":a.currencyDisplay="narrowSymbol",a.unitDisplay="narrow"
continue
case"unit-width-short":a.currencyDisplay="code",a.unitDisplay="short"
continue
case"unit-width-full-name":a.currencyDisplay="name",a.unitDisplay="long"
continue
case"unit-width-iso-code":a.currencyDisplay="symbol"
continue
case"scale":a.scale=parseFloat(r.options[0])
continue
case"integer-width":if(r.options.length>1)throw new RangeError("integer-width stems only accept a single optional option")
r.options[0].replace(_,(function(e,n,i,r,t,o){if(n)a.minimumIntegerDigits=i.length
else{if(r&&t)throw new Error("We currently do not support maximum integer digits")
if(o)throw new Error("We currently do not support exact integer digits")}return""}))
continue}if(w.test(r.stem))a.minimumIntegerDigits=r.stem.length
else if(M.test(r.stem)){if(r.options.length>1)throw new RangeError("Fraction-precision stems only accept a single optional option")
r.stem.replace(M,(function(e,n,i,r,t,o){return"*"===i?a.minimumFractionDigits=n.length:r&&"#"===r[0]?a.maximumFractionDigits=r.length:t&&o?(a.minimumFractionDigits=t.length,a.maximumFractionDigits=t.length+o.length):(a.minimumFractionDigits=n.length,a.maximumFractionDigits=n.length),""}))
var t=r.options[0]
"w"===t?a=(0,o.pi)((0,o.pi)({},a),{trailingZeroDisplay:"stripIfInteger"}):t&&(a=(0,o.pi)((0,o.pi)({},a),j(t)))}else if(T.test(r.stem))a=(0,o.pi)((0,o.pi)({},a),j(r.stem))
else{var s=E(r.stem)
s&&(a=(0,o.pi)((0,o.pi)({},a),s))
var l=N(r.stem)
l&&(a=(0,o.pi)((0,o.pi)({},a),l))}}return a}var L=new RegExp("^".concat(k.source,"*")),D=new RegExp("".concat(k.source,"*$"))
function x(e,a){return{start:e,end:a}}var C=!!String.prototype.startsWith,K=!!String.fromCodePoint,R=!!Object.fromEntries,z=!!String.prototype.codePointAt,O=!!String.prototype.trimStart,I=!!String.prototype.trimEnd,V=Number.isSafeInteger?Number.isSafeInteger:function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e&&Math.abs(e)<=9007199254740991},G=!0
try{G="a"===(null===(S=Q("([^\\p{White_Space}\\p{Pattern_Syntax}]*)","yu").exec("a"))||void 0===S?void 0:S[0])}catch(e){G=!1}var H,F=C?function(e,a,n){return e.startsWith(a,n)}:function(e,a,n){return e.slice(n,n+a.length)===a},J=K?String.fromCodePoint:function(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a]
for(var n,i="",r=e.length,t=0;r>t;){if((n=e[t++])>1114111)throw RangeError(n+" is not a valid code point")
i+=n<65536?String.fromCharCode(n):String.fromCharCode(55296+((n-=65536)>>10),n%1024+56320)}return i},U=R?Object.fromEntries:function(e){for(var a={},n=0,i=e;n<i.length;n++){var r=i[n],t=r[0],o=r[1]
a[t]=o}return a},W=z?function(e,a){return e.codePointAt(a)}:function(e,a){var n=e.length
if(!(a<0||a>=n)){var i,r=e.charCodeAt(a)
return r<55296||r>56319||a+1===n||(i=e.charCodeAt(a+1))<56320||i>57343?r:i-56320+(r-55296<<10)+65536}},Z=O?function(e){return e.trimStart()}:function(e){return e.replace(L,"")},q=I?function(e){return e.trimEnd()}:function(e){return e.replace(D,"")}
function Q(e,a){return new RegExp(e,a)}if(G){var Y=Q("([^\\p{White_Space}\\p{Pattern_Syntax}]*)","yu")
H=function(e,a){var n
return Y.lastIndex=a,null!==(n=Y.exec(e)[1])&&void 0!==n?n:""}}else H=function(e,a){for(var n=[];;){var i=W(e,a)
if(void 0===i||ee(i)||ae(i))break
n.push(i),a+=i>=65536?2:1}return J.apply(void 0,n)}
var $=function(){function e(e,a){void 0===a&&(a={}),this.message=e,this.position={offset:0,line:1,column:1},this.ignoreTag=!!a.ignoreTag,this.requiresOtherClause=!!a.requiresOtherClause,this.shouldParseSkeletons=!!a.shouldParseSkeletons}return e.prototype.parse=function(){if(0!==this.offset())throw Error("parser can only be used once")
return this.parseMessage(0,"",!1)},e.prototype.parseMessage=function(e,a,n){for(var t=[];!this.isEOF();){var o=this.char()
if(123===o){if((s=this.parseArgument(e,n)).err)return s
t.push(s.val)}else{if(125===o&&e>0)break
if(35!==o||"plural"!==a&&"selectordinal"!==a){if(60===o&&!this.ignoreTag&&47===this.peek()){if(n)break
return this.error(i.UNMATCHED_CLOSING_TAG,x(this.clonePosition(),this.clonePosition()))}if(60===o&&!this.ignoreTag&&X(this.peek()||0)){if((s=this.parseTag(e,a)).err)return s
t.push(s.val)}else{var s
if((s=this.parseLiteral(e,a)).err)return s
t.push(s.val)}}else{var l=this.clonePosition()
this.bump(),t.push({type:r.pound,location:x(l,this.clonePosition())})}}}return{val:t,err:null}},e.prototype.parseTag=function(e,a){var n=this.clonePosition()
this.bump()
var t=this.parseTagName()
if(this.bumpSpace(),this.bumpIf("/>"))return{val:{type:r.literal,value:"<".concat(t,"/>"),location:x(n,this.clonePosition())},err:null}
if(this.bumpIf(">")){var o=this.parseMessage(e+1,a,!0)
if(o.err)return o
var s=o.val,l=this.clonePosition()
if(this.bumpIf("</")){if(this.isEOF()||!X(this.char()))return this.error(i.INVALID_TAG,x(l,this.clonePosition()))
var u=this.clonePosition()
return t!==this.parseTagName()?this.error(i.UNMATCHED_CLOSING_TAG,x(u,this.clonePosition())):(this.bumpSpace(),this.bumpIf(">")?{val:{type:r.tag,value:t,children:s,location:x(n,this.clonePosition())},err:null}:this.error(i.INVALID_TAG,x(l,this.clonePosition())))}return this.error(i.UNCLOSED_TAG,x(n,this.clonePosition()))}return this.error(i.INVALID_TAG,x(n,this.clonePosition()))},e.prototype.parseTagName=function(){var e,a=this.offset()
for(this.bump();!this.isEOF()&&(45===(e=this.char())||46===e||e>=48&&e<=57||95===e||e>=97&&e<=122||e>=65&&e<=90||183==e||e>=192&&e<=214||e>=216&&e<=246||e>=248&&e<=893||e>=895&&e<=8191||e>=8204&&e<=8205||e>=8255&&e<=8256||e>=8304&&e<=8591||e>=11264&&e<=12271||e>=12289&&e<=55295||e>=63744&&e<=64975||e>=65008&&e<=65533||e>=65536&&e<=983039);)this.bump()
return this.message.slice(a,this.offset())},e.prototype.parseLiteral=function(e,a){for(var n=this.clonePosition(),i="";;){var t=this.tryParseQuote(a)
if(t)i+=t
else{var o=this.tryParseUnquoted(e,a)
if(o)i+=o
else{var s=this.tryParseLeftAngleBracket()
if(!s)break
i+=s}}}var l=x(n,this.clonePosition())
return{val:{type:r.literal,value:i,location:l},err:null}},e.prototype.tryParseLeftAngleBracket=function(){return this.isEOF()||60!==this.char()||!this.ignoreTag&&(X(e=this.peek()||0)||47===e)?null:(this.bump(),"<")
var e},e.prototype.tryParseQuote=function(e){if(this.isEOF()||39!==this.char())return null
switch(this.peek()){case 39:return this.bump(),this.bump(),"'"
case 123:case 60:case 62:case 125:break
case 35:if("plural"===e||"selectordinal"===e)break
return null
default:return null}this.bump()
var a=[this.char()]
for(this.bump();!this.isEOF();){var n=this.char()
if(39===n){if(39!==this.peek()){this.bump()
break}a.push(39),this.bump()}else a.push(n)
this.bump()}return J.apply(void 0,a)},e.prototype.tryParseUnquoted=function(e,a){if(this.isEOF())return null
var n=this.char()
return 60===n||123===n||35===n&&("plural"===a||"selectordinal"===a)||125===n&&e>0?null:(this.bump(),J(n))},e.prototype.parseArgument=function(e,a){var n=this.clonePosition()
if(this.bump(),this.bumpSpace(),this.isEOF())return this.error(i.EXPECT_ARGUMENT_CLOSING_BRACE,x(n,this.clonePosition()))
if(125===this.char())return this.bump(),this.error(i.EMPTY_ARGUMENT,x(n,this.clonePosition()))
var t=this.parseIdentifierIfPossible().value
if(!t)return this.error(i.MALFORMED_ARGUMENT,x(n,this.clonePosition()))
if(this.bumpSpace(),this.isEOF())return this.error(i.EXPECT_ARGUMENT_CLOSING_BRACE,x(n,this.clonePosition()))
switch(this.char()){case 125:return this.bump(),{val:{type:r.argument,value:t,location:x(n,this.clonePosition())},err:null}
case 44:return this.bump(),this.bumpSpace(),this.isEOF()?this.error(i.EXPECT_ARGUMENT_CLOSING_BRACE,x(n,this.clonePosition())):this.parseArgumentOptions(e,a,t,n)
default:return this.error(i.MALFORMED_ARGUMENT,x(n,this.clonePosition()))}},e.prototype.parseIdentifierIfPossible=function(){var e=this.clonePosition(),a=this.offset(),n=H(this.message,a),i=a+n.length
return this.bumpTo(i),{value:n,location:x(e,this.clonePosition())}},e.prototype.parseArgumentOptions=function(e,a,n,s){var l,u=this.clonePosition(),c=this.parseIdentifierIfPossible().value,d=this.clonePosition()
switch(c){case"":return this.error(i.EXPECT_ARGUMENT_TYPE,x(u,d))
case"number":case"date":case"time":this.bumpSpace()
var h=null
if(this.bumpIf(",")){this.bumpSpace()
var p=this.clonePosition()
if((S=this.parseSimpleArgStyleIfPossible()).err)return S
if(0===(v=q(S.val)).length)return this.error(i.EXPECT_ARGUMENT_STYLE,x(this.clonePosition(),this.clonePosition()))
h={style:v,styleLocation:x(p,this.clonePosition())}}if((A=this.tryParseArgumentClose(s)).err)return A
var m=x(s,this.clonePosition())
if(h&&F(null==h?void 0:h.style,"::",0)){var f=Z(h.style.slice(2))
if("number"===c)return(S=this.parseNumberSkeletonFromString(f,h.styleLocation)).err?S:{val:{type:r.number,value:n,location:m,style:S.val},err:null}
if(0===f.length)return this.error(i.EXPECT_DATE_TIME_SKELETON,m)
var v={type:t.dateTime,pattern:f,location:h.styleLocation,parsedOptions:this.shouldParseSkeletons?b(f):{}}
return{val:{type:"date"===c?r.date:r.time,value:n,location:m,style:v},err:null}}return{val:{type:"number"===c?r.number:"date"===c?r.date:r.time,value:n,location:m,style:null!==(l=null==h?void 0:h.style)&&void 0!==l?l:null},err:null}
case"plural":case"selectordinal":case"select":var g=this.clonePosition()
if(this.bumpSpace(),!this.bumpIf(","))return this.error(i.EXPECT_SELECT_ARGUMENT_OPTIONS,x(g,(0,o.pi)({},g)))
this.bumpSpace()
var k=this.parseIdentifierIfPossible(),y=0
if("select"!==c&&"offset"===k.value){if(!this.bumpIf(":"))return this.error(i.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,x(this.clonePosition(),this.clonePosition()))
var S
if(this.bumpSpace(),(S=this.tryParseDecimalInteger(i.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,i.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE)).err)return S
this.bumpSpace(),k=this.parseIdentifierIfPossible(),y=S.val}var A,M=this.tryParsePluralOrSelectOptions(e,c,a,k)
if(M.err)return M
if((A=this.tryParseArgumentClose(s)).err)return A
var T=x(s,this.clonePosition())
return"select"===c?{val:{type:r.select,value:n,options:U(M.val),location:T},err:null}:{val:{type:r.plural,value:n,options:U(M.val),offset:y,pluralType:"plural"===c?"cardinal":"ordinal",location:T},err:null}
default:return this.error(i.INVALID_ARGUMENT_TYPE,x(u,d))}},e.prototype.tryParseArgumentClose=function(e){return this.isEOF()||125!==this.char()?this.error(i.EXPECT_ARGUMENT_CLOSING_BRACE,x(e,this.clonePosition())):(this.bump(),{val:!0,err:null})},e.prototype.parseSimpleArgStyleIfPossible=function(){for(var e=0,a=this.clonePosition();!this.isEOF();)switch(this.char()){case 39:this.bump()
var n=this.clonePosition()
if(!this.bumpUntil("'"))return this.error(i.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE,x(n,this.clonePosition()))
this.bump()
break
case 123:e+=1,this.bump()
break
case 125:if(!(e>0))return{val:this.message.slice(a.offset,this.offset()),err:null}
e-=1
break
default:this.bump()}return{val:this.message.slice(a.offset,this.offset()),err:null}},e.prototype.parseNumberSkeletonFromString=function(e,a){var n=[]
try{n=function(e){if(0===e.length)throw new Error("Number skeleton cannot be empty")
for(var a=[],n=0,i=e.split(A).filter((function(e){return e.length>0}));n<i.length;n++){var r=i[n].split("/")
if(0===r.length)throw new Error("Invalid number skeleton")
for(var t=r[0],o=r.slice(1),s=0,l=o;s<l.length;s++)if(0===l[s].length)throw new Error("Invalid number skeleton")
a.push({stem:t,options:o})}return a}(e)}catch(e){return this.error(i.INVALID_NUMBER_SKELETON,a)}return{val:{type:t.number,tokens:n,location:a,parsedOptions:this.shouldParseSkeletons?P(n):{}},err:null}},e.prototype.tryParsePluralOrSelectOptions=function(e,a,n,r){for(var t,o=!1,s=[],l=new Set,u=r.value,c=r.location;;){if(0===u.length){var d=this.clonePosition()
if("select"===a||!this.bumpIf("="))break
var h=this.tryParseDecimalInteger(i.EXPECT_PLURAL_ARGUMENT_SELECTOR,i.INVALID_PLURAL_ARGUMENT_SELECTOR)
if(h.err)return h
c=x(d,this.clonePosition()),u=this.message.slice(d.offset,this.offset())}if(l.has(u))return this.error("select"===a?i.DUPLICATE_SELECT_ARGUMENT_SELECTOR:i.DUPLICATE_PLURAL_ARGUMENT_SELECTOR,c)
"other"===u&&(o=!0),this.bumpSpace()
var p=this.clonePosition()
if(!this.bumpIf("{"))return this.error("select"===a?i.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT:i.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT,x(this.clonePosition(),this.clonePosition()))
var m=this.parseMessage(e+1,a,n)
if(m.err)return m
var f=this.tryParseArgumentClose(p)
if(f.err)return f
s.push([u,{value:m.val,location:x(p,this.clonePosition())}]),l.add(u),this.bumpSpace(),u=(t=this.parseIdentifierIfPossible()).value,c=t.location}return 0===s.length?this.error("select"===a?i.EXPECT_SELECT_ARGUMENT_SELECTOR:i.EXPECT_PLURAL_ARGUMENT_SELECTOR,x(this.clonePosition(),this.clonePosition())):this.requiresOtherClause&&!o?this.error(i.MISSING_OTHER_CLAUSE,x(this.clonePosition(),this.clonePosition())):{val:s,err:null}},e.prototype.tryParseDecimalInteger=function(e,a){var n=1,i=this.clonePosition()
this.bumpIf("+")||this.bumpIf("-")&&(n=-1)
for(var r=!1,t=0;!this.isEOF();){var o=this.char()
if(!(o>=48&&o<=57))break
r=!0,t=10*t+(o-48),this.bump()}var s=x(i,this.clonePosition())
return r?V(t*=n)?{val:t,err:null}:this.error(a,s):this.error(e,s)},e.prototype.offset=function(){return this.position.offset},e.prototype.isEOF=function(){return this.offset()===this.message.length},e.prototype.clonePosition=function(){return{offset:this.position.offset,line:this.position.line,column:this.position.column}},e.prototype.char=function(){var e=this.position.offset
if(e>=this.message.length)throw Error("out of bound")
var a=W(this.message,e)
if(void 0===a)throw Error("Offset ".concat(e," is at invalid UTF-16 code unit boundary"))
return a},e.prototype.error=function(e,a){return{val:null,err:{kind:e,message:this.message,location:a}}},e.prototype.bump=function(){if(!this.isEOF()){var e=this.char()
10===e?(this.position.line+=1,this.position.column=1,this.position.offset+=1):(this.position.column+=1,this.position.offset+=e<65536?1:2)}},e.prototype.bumpIf=function(e){if(F(this.message,e,this.offset())){for(var a=0;a<e.length;a++)this.bump()
return!0}return!1},e.prototype.bumpUntil=function(e){var a=this.offset(),n=this.message.indexOf(e,a)
return n>=0?(this.bumpTo(n),!0):(this.bumpTo(this.message.length),!1)},e.prototype.bumpTo=function(e){if(this.offset()>e)throw Error("targetOffset ".concat(e," must be greater than or equal to the current offset ").concat(this.offset()))
for(e=Math.min(e,this.message.length);;){var a=this.offset()
if(a===e)break
if(a>e)throw Error("targetOffset ".concat(e," is at invalid UTF-16 code unit boundary"))
if(this.bump(),this.isEOF())break}},e.prototype.bumpSpace=function(){for(;!this.isEOF()&&ee(this.char());)this.bump()},e.prototype.peek=function(){if(this.isEOF())return null
var e=this.char(),a=this.offset(),n=this.message.charCodeAt(a+(e>=65536?2:1))
return null!=n?n:null},e}()
function X(e){return e>=97&&e<=122||e>=65&&e<=90}function ee(e){return e>=9&&e<=13||32===e||133===e||e>=8206&&e<=8207||8232===e||8233===e}function ae(e){return e>=33&&e<=35||36===e||e>=37&&e<=39||40===e||41===e||42===e||43===e||44===e||45===e||e>=46&&e<=47||e>=58&&e<=59||e>=60&&e<=62||e>=63&&e<=64||91===e||92===e||93===e||94===e||96===e||123===e||124===e||125===e||126===e||161===e||e>=162&&e<=165||166===e||167===e||169===e||171===e||172===e||174===e||176===e||177===e||182===e||187===e||191===e||215===e||247===e||e>=8208&&e<=8213||e>=8214&&e<=8215||8216===e||8217===e||8218===e||e>=8219&&e<=8220||8221===e||8222===e||8223===e||e>=8224&&e<=8231||e>=8240&&e<=8248||8249===e||8250===e||e>=8251&&e<=8254||e>=8257&&e<=8259||8260===e||8261===e||8262===e||e>=8263&&e<=8273||8274===e||8275===e||e>=8277&&e<=8286||e>=8592&&e<=8596||e>=8597&&e<=8601||e>=8602&&e<=8603||e>=8604&&e<=8607||8608===e||e>=8609&&e<=8610||8611===e||e>=8612&&e<=8613||8614===e||e>=8615&&e<=8621||8622===e||e>=8623&&e<=8653||e>=8654&&e<=8655||e>=8656&&e<=8657||8658===e||8659===e||8660===e||e>=8661&&e<=8691||e>=8692&&e<=8959||e>=8960&&e<=8967||8968===e||8969===e||8970===e||8971===e||e>=8972&&e<=8991||e>=8992&&e<=8993||e>=8994&&e<=9e3||9001===e||9002===e||e>=9003&&e<=9083||9084===e||e>=9085&&e<=9114||e>=9115&&e<=9139||e>=9140&&e<=9179||e>=9180&&e<=9185||e>=9186&&e<=9254||e>=9255&&e<=9279||e>=9280&&e<=9290||e>=9291&&e<=9311||e>=9472&&e<=9654||9655===e||e>=9656&&e<=9664||9665===e||e>=9666&&e<=9719||e>=9720&&e<=9727||e>=9728&&e<=9838||9839===e||e>=9840&&e<=10087||10088===e||10089===e||10090===e||10091===e||10092===e||10093===e||10094===e||10095===e||10096===e||10097===e||10098===e||10099===e||10100===e||10101===e||e>=10132&&e<=10175||e>=10176&&e<=10180||10181===e||10182===e||e>=10183&&e<=10213||10214===e||10215===e||10216===e||10217===e||10218===e||10219===e||10220===e||10221===e||10222===e||10223===e||e>=10224&&e<=10239||e>=10240&&e<=10495||e>=10496&&e<=10626||10627===e||10628===e||10629===e||10630===e||10631===e||10632===e||10633===e||10634===e||10635===e||10636===e||10637===e||10638===e||10639===e||10640===e||10641===e||10642===e||10643===e||10644===e||10645===e||10646===e||10647===e||10648===e||e>=10649&&e<=10711||10712===e||10713===e||10714===e||10715===e||e>=10716&&e<=10747||10748===e||10749===e||e>=10750&&e<=11007||e>=11008&&e<=11055||e>=11056&&e<=11076||e>=11077&&e<=11078||e>=11079&&e<=11084||e>=11085&&e<=11123||e>=11124&&e<=11125||e>=11126&&e<=11157||11158===e||e>=11159&&e<=11263||e>=11776&&e<=11777||11778===e||11779===e||11780===e||11781===e||e>=11782&&e<=11784||11785===e||11786===e||11787===e||11788===e||11789===e||e>=11790&&e<=11798||11799===e||e>=11800&&e<=11801||11802===e||11803===e||11804===e||11805===e||e>=11806&&e<=11807||11808===e||11809===e||11810===e||11811===e||11812===e||11813===e||11814===e||11815===e||11816===e||11817===e||e>=11818&&e<=11822||11823===e||e>=11824&&e<=11833||e>=11834&&e<=11835||e>=11836&&e<=11839||11840===e||11841===e||11842===e||e>=11843&&e<=11855||e>=11856&&e<=11857||11858===e||e>=11859&&e<=11903||e>=12289&&e<=12291||12296===e||12297===e||12298===e||12299===e||12300===e||12301===e||12302===e||12303===e||12304===e||12305===e||e>=12306&&e<=12307||12308===e||12309===e||12310===e||12311===e||12312===e||12313===e||12314===e||12315===e||12316===e||12317===e||e>=12318&&e<=12319||12320===e||12336===e||64830===e||64831===e||e>=65093&&e<=65094}function ne(e){e.forEach((function(e){if(delete e.location,h(e)||p(e))for(var a in e.options)delete e.options[a].location,ne(e.options[a].value)
else u(e)&&v(e.style)||(c(e)||d(e))&&g(e.style)?delete e.style.location:f(e)&&ne(e.children)}))}function ie(e,a){void 0===a&&(a={}),a=(0,o.pi)({shouldParseSkeletons:!0,requiresOtherClause:!0},a)
var n=new $(e,a).parse()
if(n.err){var r=SyntaxError(i[n.err.kind])
throw r.location=n.err.location,r.originalMessage=n.err.message,r}return(null==a?void 0:a.captureLocation)||ne(n.val),n.val}function re(e,a){var n=a&&a.cache?a.cache:he,i=a&&a.serializer?a.serializer:ue
return(a&&a.strategy?a.strategy:le)(e,{cache:n,serializer:i})}function te(e,a,n,i){var r,t=null==(r=i)||"number"==typeof r||"boolean"==typeof r?i:n(i),o=a.get(t)
return void 0===o&&(o=e.call(this,i),a.set(t,o)),o}function oe(e,a,n){var i=Array.prototype.slice.call(arguments,3),r=n(i),t=a.get(r)
return void 0===t&&(t=e.apply(this,i),a.set(r,t)),t}function se(e,a,n,i,r){return n.bind(a,e,i,r)}function le(e,a){return se(e,this,1===e.length?te:oe,a.cache.create(),a.serializer)}var ue=function(){return JSON.stringify(arguments)}
function ce(){this.cache=Object.create(null)}ce.prototype.get=function(e){return this.cache[e]},ce.prototype.set=function(e,a){this.cache[e]=a}
var de,he={create:function(){return new ce}},pe={variadic:function(e,a){return se(e,this,oe,a.cache.create(),a.serializer)},monadic:function(e,a){return se(e,this,te,a.cache.create(),a.serializer)}}
!function(e){e.MISSING_VALUE="MISSING_VALUE",e.INVALID_VALUE="INVALID_VALUE",e.MISSING_INTL_API="MISSING_INTL_API"}(de||(de={}))
var me,fe=function(e){function a(a,n,i){var r=e.call(this,a)||this
return r.code=n,r.originalMessage=i,r}return(0,o.ZT)(a,e),a.prototype.toString=function(){return"[formatjs Error: ".concat(this.code,"] ").concat(this.message)},a}(Error),ve=function(e){function a(a,n,i,r){return e.call(this,'Invalid values for "'.concat(a,'": "').concat(n,'". Options are "').concat(Object.keys(i).join('", "'),'"'),de.INVALID_VALUE,r)||this}return(0,o.ZT)(a,e),a}(fe),ge=function(e){function a(a,n,i){return e.call(this,'Value for "'.concat(a,'" must be of type ').concat(n),de.INVALID_VALUE,i)||this}return(0,o.ZT)(a,e),a}(fe),ke=function(e){function a(a,n){return e.call(this,'The intl string context variable "'.concat(a,'" was not provided to the string "').concat(n,'"'),de.MISSING_VALUE,n)||this}return(0,o.ZT)(a,e),a}(fe)
function ye(e){return"function"==typeof e}function be(e,a,n,i,r,t,o){if(1===e.length&&s(e[0]))return[{type:me.literal,value:e[0].value}]
for(var k=[],y=0,b=e;y<b.length;y++){var S=b[y]
if(s(S))k.push({type:me.literal,value:S.value})
else if(m(S))"number"==typeof t&&k.push({type:me.literal,value:n.getNumberFormat(a).format(t)})
else{var A=S.value
if(!r||!(A in r))throw new ke(A,o)
var M=r[A]
if(l(S))M&&"string"!=typeof M&&"number"!=typeof M||(M="string"==typeof M||"number"==typeof M?String(M):""),k.push({type:"string"==typeof M?me.literal:me.object,value:M})
else if(c(S)){var T="string"==typeof S.style?i.date[S.style]:g(S.style)?S.style.parsedOptions:void 0
k.push({type:me.literal,value:n.getDateTimeFormat(a,T).format(M)})}else if(d(S))T="string"==typeof S.style?i.time[S.style]:g(S.style)?S.style.parsedOptions:void 0,k.push({type:me.literal,value:n.getDateTimeFormat(a,T).format(M)})
else if(u(S))(T="string"==typeof S.style?i.number[S.style]:v(S.style)?S.style.parsedOptions:void 0)&&T.scale&&(M*=T.scale||1),k.push({type:me.literal,value:n.getNumberFormat(a,T).format(M)})
else{if(f(S)){var _=S.children,w=S.value,j=r[w]
if(!ye(j))throw new ge(w,"function",o)
var E=j(be(_,a,n,i,r,t).map((function(e){return e.value})))
Array.isArray(E)||(E=[E]),k.push.apply(k,E.map((function(e){return{type:"string"==typeof e?me.literal:me.object,value:e}})))}if(h(S)){if(!(N=S.options[M]||S.options.other))throw new ve(S.value,M,Object.keys(S.options),o)
k.push.apply(k,be(N.value,a,n,i,r))}else if(p(S)){var N
if(!(N=S.options["=".concat(M)])){if(!Intl.PluralRules)throw new fe('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',de.MISSING_INTL_API,o)
var B=n.getPluralRules(a,{type:S.pluralType}).select(M-(S.offset||0))
N=S.options[B]||S.options.other}if(!N)throw new ve(S.value,M,Object.keys(S.options),o)
k.push.apply(k,be(N.value,a,n,i,r,M-(S.offset||0)))}}}}return(P=k).length<2?P:P.reduce((function(e,a){var n=e[e.length-1]
return n&&n.type===me.literal&&a.type===me.literal?n.value+=a.value:e.push(a),e}),[])
var P}function Se(e){return{create:function(){return{get:function(a){return e[a]},set:function(a,n){e[a]=n}}}}}!function(e){e[e.literal=0]="literal",e[e.object=1]="object"}(me||(me={}))
var Ae=function(){function e(a,n,i,r){var t,s,l,u=this
if(void 0===n&&(n=e.defaultLocale),this.formatterCache={number:{},dateTime:{},pluralRules:{}},this.format=function(e){var a=u.formatToParts(e)
if(1===a.length)return a[0].value
var n=a.reduce((function(e,a){return e.length&&a.type===me.literal&&"string"==typeof e[e.length-1]?e[e.length-1]+=a.value:e.push(a.value),e}),[])
return n.length<=1?n[0]||"":n},this.formatToParts=function(e){return be(u.ast,u.locales,u.formatters,u.formats,e,void 0,u.message)},this.resolvedOptions=function(){return{locale:Intl.NumberFormat.supportedLocalesOf(u.locales)[0]}},this.getAst=function(){return u.ast},"string"==typeof a){if(this.message=a,!e.__parse)throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`")
this.ast=e.__parse(a,{ignoreTag:null==r?void 0:r.ignoreTag})}else this.ast=a
if(!Array.isArray(this.ast))throw new TypeError("A message must be provided as a String or AST.")
this.formats=(s=e.formats,(l=i)?Object.keys(s).reduce((function(e,a){var n,i
return e[a]=(n=s[a],(i=l[a])?(0,o.pi)((0,o.pi)((0,o.pi)({},n||{}),i||{}),Object.keys(n).reduce((function(e,a){return e[a]=(0,o.pi)((0,o.pi)({},n[a]),i[a]||{}),e}),{})):n),e}),(0,o.pi)({},s)):s),this.locales=n,this.formatters=r&&r.formatters||(void 0===(t=this.formatterCache)&&(t={number:{},dateTime:{},pluralRules:{}}),{getNumberFormat:re((function(){for(var e,a=[],n=0;n<arguments.length;n++)a[n]=arguments[n]
return new((e=Intl.NumberFormat).bind.apply(e,(0,o.ev)([void 0],a,!1)))}),{cache:Se(t.number),strategy:pe.variadic}),getDateTimeFormat:re((function(){for(var e,a=[],n=0;n<arguments.length;n++)a[n]=arguments[n]
return new((e=Intl.DateTimeFormat).bind.apply(e,(0,o.ev)([void 0],a,!1)))}),{cache:Se(t.dateTime),strategy:pe.variadic}),getPluralRules:re((function(){for(var e,a=[],n=0;n<arguments.length;n++)a[n]=arguments[n]
return new((e=Intl.PluralRules).bind.apply(e,(0,o.ev)([void 0],a,!1)))}),{cache:Se(t.pluralRules),strategy:pe.variadic})})}return Object.defineProperty(e,"defaultLocale",{get:function(){return e.memoizedDefaultLocale||(e.memoizedDefaultLocale=(new Intl.NumberFormat).resolvedOptions().locale),e.memoizedDefaultLocale},enumerable:!1,configurable:!0}),e.memoizedDefaultLocale=null,e.__parse=ie,e.formats={number:{integer:{maximumFractionDigits:0},currency:{style:"currency"},percent:{style:"percent"}},date:{short:{month:"numeric",day:"numeric",year:"2-digit"},medium:{month:"short",day:"numeric",year:"numeric"},long:{month:"long",day:"numeric",year:"numeric"},full:{weekday:"long",month:"long",day:"numeric",year:"numeric"}},time:{short:{hour:"numeric",minute:"numeric"},medium:{hour:"numeric",minute:"numeric",second:"numeric"},long:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"},full:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"}}},e}()
const Me=Ae},2189:(e,a,n)=>{"use strict"
var i=n(4896),r=i(n(4115)),t=i(n(7392)),o=n(8413),s=n(1437),l=n(2091),u=n(3068),c=function(){function e(a,n){(0,r.default)(this,e),this._grammar=a,this._exprStr=n,this._ast=null}return(0,t.default)(e,[{key:"compile",value:function(){var e=new s(this._grammar),a=new l(this._grammar),n=e.tokenize(this._exprStr)
return a.addTokens(n),this._ast=a.complete(),this}},{key:"eval",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}
return this._eval(e,Promise)}},{key:"evalSync",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=this._eval(e,u)
if(a.error)throw a.error
return a.value}},{key:"_eval",value:function(e,a){var n=this
return a.resolve().then((function(){var i=n._getAst()
return new o(n._grammar,e,void 0,a).eval(i)}))}},{key:"_getAst",value:function(){return this._ast||this.compile(),this._ast}}]),e}()
e.exports=c},7720:(e,a,n)=>{"use strict"
var i=n(4896),r=i(n(8069)),t=i(n(4115)),o=i(n(7392)),s=n(2189),l=n(7632).getGrammar,u=function(){function e(){(0,t.default)(this,e),this.expr=this.expr.bind(this),this._grammar=l()}return(0,o.default)(e,[{key:"addBinaryOp",value:function(e,a,n,i){this._addGrammarElement(e,(0,r.default)({type:"binaryOp",precedence:a},i?"evalOnDemand":"eval",n))}},{key:"addFunction",value:function(e,a){this._grammar.functions[e]=a}},{key:"addFunctions",value:function(e){for(var a in e)this._grammar.functions[a]=e[a]}},{key:"addUnaryOp",value:function(e,a){this._addGrammarElement(e,{type:"unaryOp",weight:1/0,eval:a})}},{key:"addTransform",value:function(e,a){this._grammar.transforms[e]=a}},{key:"addTransforms",value:function(e){for(var a in e)this._grammar.transforms[a]=e[a]}},{key:"compile",value:function(e){return this.createExpression(e).compile()}},{key:"createExpression",value:function(e){return new s(this._grammar,e)}},{key:"getFunction",value:function(e){return this._grammar.functions[e]}},{key:"getTransform",value:function(e){return this._grammar.transforms[e]}},{key:"eval",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.createExpression(e)
return n.eval(a)}},{key:"evalSync",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.createExpression(e)
return n.evalSync(a)}},{key:"expr",value:function(e){for(var a=arguments.length,n=new Array(a>1?a-1:0),i=1;i<a;i++)n[i-1]=arguments[i]
var r=e.reduce((function(e,a,i){return e+(a+(i<n.length?n[i]:""))}),"")
return this.createExpression(r)}},{key:"removeOp",value:function(e){!this._grammar.elements[e]||"binaryOp"!==this._grammar.elements[e].type&&"unaryOp"!==this._grammar.elements[e].type||delete this._grammar.elements[e]}},{key:"_addGrammarElement",value:function(e,a){this._grammar.elements[e]=a}}]),e}()
e.exports=new u,e.exports.Jexl=u},1437:(e,a,n)=>{"use strict"
var i=n(4896),r=i(n(4115)),t=i(n(7392)),o=/^-?(?:(?:[0-9]*\.[0-9]+)|[0-9]+)$/,s=/^[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][a-zA-Zа-яА-Я0-9_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*$/,l=/\\\\/,u=/^\s*$/,c=["'(?:(?:\\\\')|[^'])*'",'"(?:(?:\\\\")|[^"])*"',"\\s+","\\btrue\\b","\\bfalse\\b"],d=["[a-zA-Zа-яА-Я_À-ÖØ-öø-ÿ\\$][a-zA-Z0-9а-яА-Я_À-ÖØ-öø-ÿ\\$]*","(?:(?:[0-9]*\\.[0-9]+)|[0-9]+)"],h=["binaryOp","unaryOp","openParen","openBracket","question","colon"],p=function(){function e(a){(0,r.default)(this,e),this._grammar=a}return(0,t.default)(e,[{key:"getElements",value:function(e){var a=this._getSplitRegex()
return e.split(a).filter((function(e){return e}))}},{key:"getTokens",value:function(e){for(var a=[],n=!1,i=0;i<e.length;i++)this._isWhitespace(e[i])?a.length&&(a[a.length-1].raw+=e[i]):"-"===e[i]&&this._isNegative(a)?n=!0:(n&&(e[i]="-"+e[i],n=!1),a.push(this._createToken(e[i])))
return n&&a.push(this._createToken("-")),a}},{key:"tokenize",value:function(e){var a=this.getElements(e)
return this.getTokens(a)}},{key:"_createToken",value:function(e){var a={type:"literal",value:e,raw:e}
if('"'===e[0]||"'"===e[0])a.value=this._unquote(e)
else if(e.match(o))a.value=parseFloat(e)
else if("true"===e||"false"===e)a.value="true"===e
else if(this._grammar.elements[e])a.type=this._grammar.elements[e].type
else{if(!e.match(s))throw new Error("Invalid expression token: ".concat(e))
a.type="identifier"}return a}},{key:"_escapeRegExp",value:function(e){return(e=e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")).match(s)&&(e="\\b"+e+"\\b"),e}},{key:"_getSplitRegex",value:function(){var e=this
if(!this._splitRegex){var a=Object.keys(this._grammar.elements).sort((function(e,a){return a.length-e.length})).map((function(a){return e._escapeRegExp(a)}),this)
this._splitRegex=new RegExp("("+[c.join("|"),a.join("|"),d.join("|")].join("|")+")")}return this._splitRegex}},{key:"_isNegative",value:function(e){return!e.length||h.some((function(a){return a===e[e.length-1].type}))}},{key:"_isWhitespace",value:function(e){return!!e.match(u)}},{key:"_unquote",value:function(e){var a=e[0],n=new RegExp("\\\\"+a,"g")
return e.substr(1,e.length-2).replace(n,a).replace(l,"\\")}}]),e}()
e.exports=p},3068:(e,a,n)=>{"use strict"
var i=n(4896),r=i(n(4115)),t=i(n(7392)),o=function(){function e(a){(0,r.default)(this,e),a(this._resolve.bind(this),this._reject.bind(this))}return(0,t.default)(e,[{key:"catch",value:function(e){if(this.error)try{this._resolve(e(this.error))}catch(e){this._reject(e)}return this}},{key:"then",value:function(e,a){if(!this.error)try{this._resolve(e(this.value))}catch(e){this._reject(e)}return a&&this.catch(a),this}},{key:"_reject",value:function(e){this.value=void 0,this.error=e}},{key:"_resolve",value:function(a){a instanceof e?a.error?this._reject(a.error):this._resolve(a.value):(this.value=a,this.error=void 0)}}]),e}()
o.all=function(e){return new o((function(a){a(e.map((function(e){for(;e instanceof o;){if(e.error)throw Error(e.error)
e=e.value}return e})))}))},o.resolve=function(e){return new o((function(a){return a(e)}))},o.reject=function(e){return new o((function(a,n){return n(e)}))},e.exports=o},8413:(e,a,n)=>{"use strict"
var i=n(4896),r=i(n(4115)),t=i(n(7392)),o=n(7237),s=function(){function e(a,n,i){var t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Promise;(0,r.default)(this,e),this._grammar=a,this._context=n||{},this._relContext=i||this._context,this.Promise=t}return(0,t.default)(e,[{key:"eval",value:function(e){var a=this
return this.Promise.resolve().then((function(){return o[e.type].call(a,e)}))}},{key:"evalArray",value:function(e){var a=this
return this.Promise.all(e.map((function(e){return a.eval(e)})))}},{key:"evalMap",value:function(e){var a=this,n=Object.keys(e),i={},r=n.map((function(n){return a.eval(e[n])}))
return this.Promise.all(r).then((function(e){return e.forEach((function(e,a){i[n[a]]=e})),i}))}},{key:"_filterRelative",value:function(a,n){var i=this,r=[]
return Array.isArray(a)||(a=void 0===a?[]:[a]),a.forEach((function(a){var t=new e(i._grammar,i._context,a,i.Promise)
r.push(t.eval(n))})),this.Promise.all(r).then((function(e){var n=[]
return e.forEach((function(e,i){e&&n.push(a[i])})),n}))}},{key:"_filterStatic",value:function(e,a){return this.eval(a).then((function(a){return"boolean"==typeof a?a?e:void 0:e[a]}))}}]),e}()
e.exports=s},7237:(e,a,n)=>{"use strict"
var i=n(4896)(n(5176)),r={functions:"Jexl Function",transforms:"Transform"}
a.ArrayLiteral=function(e){return this.evalArray(e.value)},a.BinaryExpression=function(e){var a=this,n=this._grammar.elements[e.operator]
if(n.evalOnDemand){var i=function(e){return{eval:function(){return a.eval(e)}}}
return n.evalOnDemand(i(e.left),i(e.right))}return this.Promise.all([this.eval(e.left),this.eval(e.right)]).then((function(e){return n.eval(e[0],e[1])}))},a.ConditionalExpression=function(e){var a=this
return this.eval(e.test).then((function(n){return n?e.consequent?a.eval(e.consequent):n:a.eval(e.alternate)}))},a.FilterExpression=function(e){var a=this
return this.eval(e.subject).then((function(n){return e.relative?a._filterRelative(n,e.expr):a._filterStatic(n,e.expr)}))},a.Identifier=function(e){return e.from?this.eval(e.from).then((function(a){if(null!=a)return Array.isArray(a)&&(a=a[0]),a[e.value]})):e.relative?this._relContext[e.value]:this._context[e.value]},a.Literal=function(e){return e.value},a.ObjectLiteral=function(e){return this.evalMap(e.value)},a.FunctionCall=function(e){var a=r[e.pool]
if(!a)throw new Error("Corrupt AST: Pool '".concat(e.pool,"' not found"))
var n=this._grammar[e.pool][e.name]
if(!n)throw new Error("".concat(a," ").concat(e.name," is not defined."))
return this.evalArray(e.args||[]).then((function(e){return n.apply(void 0,(0,i.default)(e))}))},a.UnaryExpression=function(e){var a=this
return this.eval(e.right).then((function(n){return a._grammar.elements[e.operator].eval(n)}))}},7632:(e,a)=>{"use strict"
a.getGrammar=function(){return{elements:{".":{type:"dot"},"[":{type:"openBracket"},"]":{type:"closeBracket"},"|":{type:"pipe"},"{":{type:"openCurl"},"}":{type:"closeCurl"},":":{type:"colon"},",":{type:"comma"},"(":{type:"openParen"},")":{type:"closeParen"},"?":{type:"question"},"+":{type:"binaryOp",precedence:30,eval:function(e,a){return e+a}},"-":{type:"binaryOp",precedence:30,eval:function(e,a){return e-a}},"*":{type:"binaryOp",precedence:40,eval:function(e,a){return e*a}},"/":{type:"binaryOp",precedence:40,eval:function(e,a){return e/a}},"//":{type:"binaryOp",precedence:40,eval:function(e,a){return Math.floor(e/a)}},"%":{type:"binaryOp",precedence:50,eval:function(e,a){return e%a}},"^":{type:"binaryOp",precedence:50,eval:function(e,a){return Math.pow(e,a)}},"==":{type:"binaryOp",precedence:20,eval:function(e,a){return e==a}},"!=":{type:"binaryOp",precedence:20,eval:function(e,a){return e!=a}},">":{type:"binaryOp",precedence:20,eval:function(e,a){return e>a}},">=":{type:"binaryOp",precedence:20,eval:function(e,a){return e>=a}},"<":{type:"binaryOp",precedence:20,eval:function(e,a){return e<a}},"<=":{type:"binaryOp",precedence:20,eval:function(e,a){return e<=a}},"&&":{type:"binaryOp",precedence:10,evalOnDemand:function(e,a){return e.eval().then((function(e){return e?a.eval():e}))}},"||":{type:"binaryOp",precedence:10,evalOnDemand:function(e,a){return e.eval().then((function(e){return e||a.eval()}))}},in:{type:"binaryOp",precedence:20,eval:function(e,a){return"string"==typeof a?-1!==a.indexOf(e):!!Array.isArray(a)&&a.some((function(a){return a===e}))}},"!":{type:"unaryOp",precedence:1/0,eval:function(e){return!e}}},functions:{},transforms:{}}}},2091:(e,a,n)=>{"use strict"
var i=n(4896),r=i(n(4115)),t=i(n(7392)),o=n(1104),s=n(1835).$,l=function(){function e(a,n,i){(0,r.default)(this,e),this._grammar=a,this._state="expectOperand",this._tree=null,this._exprStr=n||"",this._relative=!1,this._stopMap=i||{}}return(0,t.default)(e,[{key:"addToken",value:function(e){if("complete"===this._state)throw new Error("Cannot add a new token to a completed Parser")
var a=s[this._state],n=this._exprStr
if(this._exprStr+=e.raw,a.subHandler){this._subParser||this._startSubExpression(n)
var i=this._subParser.addToken(e)
if(i){if(this._endSubExpression(),this._parentStop)return i
this._state=i}}else{if(!a.tokenTypes[e.type]){if(this._stopMap[e.type])return this._stopMap[e.type]
throw new Error("Token ".concat(e.raw," (").concat(e.type,") unexpected in expression: ").concat(this._exprStr))}var r=a.tokenTypes[e.type],t=o[e.type]
r.handler&&(t=r.handler),t&&t.call(this,e),r.toState&&(this._state=r.toState)}return!1}},{key:"addTokens",value:function(e){e.forEach(this.addToken,this)}},{key:"complete",value:function(){if(this._cursor&&!s[this._state].completable)throw new Error("Unexpected end of expression: ".concat(this._exprStr))
return this._subParser&&this._endSubExpression(),this._state="complete",this._cursor?this._tree:null}},{key:"isRelative",value:function(){return this._relative}},{key:"_endSubExpression",value:function(){s[this._state].subHandler.call(this,this._subParser.complete()),this._subParser=null}},{key:"_placeAtCursor",value:function(e){this._cursor?(this._cursor.right=e,this._setParent(e,this._cursor)):this._tree=e,this._cursor=e}},{key:"_placeBeforeCursor",value:function(e){this._cursor=this._cursor._parent,this._placeAtCursor(e)}},{key:"_setParent",value:function(e,a){Object.defineProperty(e,"_parent",{value:a,writable:!0})}},{key:"_startSubExpression",value:function(a){var n=s[this._state].endStates
n||(this._parentStop=!0,n=this._stopMap),this._subParser=new e(this._grammar,a,n)}}]),e}()
e.exports=l},1104:(e,a)=>{"use strict"
a.argVal=function(e){e&&this._cursor.args.push(e)},a.arrayStart=function(){this._placeAtCursor({type:"ArrayLiteral",value:[]})},a.arrayVal=function(e){e&&this._cursor.value.push(e)},a.binaryOp=function(e){for(var a=this._grammar.elements[e.value].precedence||0,n=this._cursor._parent;n&&n.operator&&this._grammar.elements[n.operator].precedence>=a;)this._cursor=n,n=n._parent
var i={type:"BinaryExpression",operator:e.value,left:this._cursor}
this._setParent(this._cursor,i),this._cursor=n,this._placeAtCursor(i)},a.dot=function(){this._nextIdentEncapsulate=this._cursor&&"UnaryExpression"!==this._cursor.type&&("BinaryExpression"!==this._cursor.type||"BinaryExpression"===this._cursor.type&&this._cursor.right),this._nextIdentRelative=!this._cursor||this._cursor&&!this._nextIdentEncapsulate,this._nextIdentRelative&&(this._relative=!0)},a.filter=function(e){this._placeBeforeCursor({type:"FilterExpression",expr:e,relative:this._subParser.isRelative(),subject:this._cursor})},a.functionCall=function(){this._placeBeforeCursor({type:"FunctionCall",name:this._cursor.value,args:[],pool:"functions"})},a.identifier=function(e){var a={type:"Identifier",value:e.value}
this._nextIdentEncapsulate?(a.from=this._cursor,this._placeBeforeCursor(a),this._nextIdentEncapsulate=!1):(this._nextIdentRelative&&(a.relative=!0,this._nextIdentRelative=!1),this._placeAtCursor(a))},a.literal=function(e){this._placeAtCursor({type:"Literal",value:e.value})},a.objKey=function(e){this._curObjKey=e.value},a.objStart=function(){this._placeAtCursor({type:"ObjectLiteral",value:{}})},a.objVal=function(e){this._cursor.value[this._curObjKey]=e},a.subExpression=function(e){this._placeAtCursor(e)},a.ternaryEnd=function(e){this._cursor.alternate=e},a.ternaryMid=function(e){this._cursor.consequent=e},a.ternaryStart=function(){this._tree={type:"ConditionalExpression",test:this._tree},this._cursor=this._tree},a.transform=function(e){this._placeBeforeCursor({type:"FunctionCall",name:e.value,args:[this._cursor],pool:"transforms"})},a.unaryOp=function(e){this._placeAtCursor({type:"UnaryExpression",operator:e.value})}},1835:(e,a,n)=>{"use strict"
var i=n(1104)
a.$={expectOperand:{tokenTypes:{literal:{toState:"expectBinOp"},identifier:{toState:"identifier"},unaryOp:{},openParen:{toState:"subExpression"},openCurl:{toState:"expectObjKey",handler:i.objStart},dot:{toState:"traverse"},openBracket:{toState:"arrayVal",handler:i.arrayStart}}},expectBinOp:{tokenTypes:{binaryOp:{toState:"expectOperand"},pipe:{toState:"expectTransform"},dot:{toState:"traverse"},question:{toState:"ternaryMid",handler:i.ternaryStart}},completable:!0},expectTransform:{tokenTypes:{identifier:{toState:"postTransform",handler:i.transform}}},expectObjKey:{tokenTypes:{identifier:{toState:"expectKeyValSep",handler:i.objKey},closeCurl:{toState:"expectBinOp"}}},expectKeyValSep:{tokenTypes:{colon:{toState:"objVal"}}},postTransform:{tokenTypes:{openParen:{toState:"argVal"},binaryOp:{toState:"expectOperand"},dot:{toState:"traverse"},openBracket:{toState:"filter"},pipe:{toState:"expectTransform"}},completable:!0},postArgs:{tokenTypes:{binaryOp:{toState:"expectOperand"},dot:{toState:"traverse"},openBracket:{toState:"filter"},pipe:{toState:"expectTransform"}},completable:!0},identifier:{tokenTypes:{binaryOp:{toState:"expectOperand"},dot:{toState:"traverse"},openBracket:{toState:"filter"},openParen:{toState:"argVal",handler:i.functionCall},pipe:{toState:"expectTransform"},question:{toState:"ternaryMid",handler:i.ternaryStart}},completable:!0},traverse:{tokenTypes:{identifier:{toState:"identifier"}}},filter:{subHandler:i.filter,endStates:{closeBracket:"identifier"}},subExpression:{subHandler:i.subExpression,endStates:{closeParen:"expectBinOp"}},argVal:{subHandler:i.argVal,endStates:{comma:"argVal",closeParen:"postArgs"}},objVal:{subHandler:i.objVal,endStates:{comma:"expectObjKey",closeCurl:"expectBinOp"}},arrayVal:{subHandler:i.arrayVal,endStates:{comma:"arrayVal",closeBracket:"expectBinOp"}},ternaryMid:{subHandler:i.ternaryMid,endStates:{colon:"ternaryEnd"}},ternaryEnd:{subHandler:i.ternaryEnd,completable:!0}}},7542:e=>{var a=9007199254740991,n=/^(?:0|[1-9]\d*)$/
function i(e,a,n){switch(n.length){case 0:return e.call(a)
case 1:return e.call(a,n[0])
case 2:return e.call(a,n[0],n[1])
case 3:return e.call(a,n[0],n[1],n[2])}return e.apply(a,n)}var r,t,o=Object.prototype,s=o.hasOwnProperty,l=o.toString,u=o.propertyIsEnumerable,c=(r=Object.keys,t=Object,function(e){return r(t(e))}),d=Math.max,h=!u.call({valueOf:1},"valueOf")
function p(e,a,n){var i=e[a]
s.call(e,a)&&v(i,n)&&(void 0!==n||a in e)||(e[a]=n)}function m(e,i){return!!(i=null==i?a:i)&&("number"==typeof e||n.test(e))&&e>-1&&e%1==0&&e<i}function f(e){var a=e&&e.constructor
return e===("function"==typeof a&&a.prototype||o)}function v(e,a){return e===a||e!=e&&a!=a}var g=Array.isArray
function k(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=a}(e.length)&&!function(e){var a=y(e)?l.call(e):""
return"[object Function]"==a||"[object GeneratorFunction]"==a}(e)}function y(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}var b,S=(b=function(e,a){if(h||f(a)||k(a))!function(e,a,n,i){n||(n={})
for(var r=-1,t=a.length;++r<t;){var o=a[r]
p(n,o,e[o])}}(a,function(e){return k(e)?function(e,a){var n=g(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&k(e)}(e)&&s.call(e,"callee")&&(!u.call(e,"callee")||"[object Arguments]"==l.call(e))}(e)?function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}(e.length,String):[],i=n.length,r=!!i
for(var t in e)!s.call(e,t)||r&&("length"==t||m(t,i))||n.push(t)
return n}(e):function(e){if(!f(e))return c(e)
var a=[]
for(var n in Object(e))s.call(e,n)&&"constructor"!=n&&a.push(n)
return a}(e)}(a),e)
else for(var n in a)s.call(a,n)&&p(e,n,a[n])},function(e,a){return a=d(void 0===a?e.length-1:a,0),function(){for(var n=arguments,r=-1,t=d(n.length-a,0),o=Array(t);++r<t;)o[r]=n[a+r]
r=-1
for(var s=Array(a+1);++r<a;)s[r]=n[r]
return s[a]=o,i(e,this,s)}}((function(e,a){var n=-1,i=a.length,r=i>1?a[i-1]:void 0,t=i>2?a[2]:void 0
for(r=b.length>3&&"function"==typeof r?(i--,r):void 0,t&&function(e,a,n){if(!y(n))return!1
var i=typeof a
return!!("number"==i?k(n)&&m(a,n.length):"string"==i&&a in n)&&v(n[a],e)}(a[0],a[1],t)&&(r=i<3?void 0:r,i=1),e=Object(e);++n<i;){var o=a[n]
o&&b(e,o)}return e})))
e.exports=S},543:(e,a,n)=>{e=n.nmd(e)
var i="__lodash_hash_undefined__",r=9007199254740991,t="[object Arguments]",o="[object Boolean]",s="[object Date]",l="[object Function]",u="[object GeneratorFunction]",c="[object Map]",d="[object Number]",h="[object Object]",p="[object Promise]",m="[object RegExp]",f="[object Set]",v="[object String]",g="[object Symbol]",k="[object WeakMap]",y="[object ArrayBuffer]",b="[object DataView]",S="[object Float32Array]",A="[object Float64Array]",M="[object Int8Array]",T="[object Int16Array]",_="[object Int32Array]",w="[object Uint8Array]",j="[object Uint8ClampedArray]",E="[object Uint16Array]",N="[object Uint32Array]",B=/\w*$/,P=/^\[object .+?Constructor\]$/,L=/^(?:0|[1-9]\d*)$/,D={}
D[t]=D["[object Array]"]=D[y]=D[b]=D[o]=D[s]=D[S]=D[A]=D[M]=D[T]=D[_]=D[c]=D[d]=D[h]=D[m]=D[f]=D[v]=D[g]=D[w]=D[j]=D[E]=D[N]=!0,D["[object Error]"]=D[l]=D[k]=!1
var x="object"==typeof global&&global&&global.Object===Object&&global,C="object"==typeof self&&self&&self.Object===Object&&self,K=x||C||Function("return this")(),R=a&&!a.nodeType&&a,z=R&&e&&!e.nodeType&&e,O=z&&z.exports===R
function I(e,a){return e.set(a[0],a[1]),e}function V(e,a){return e.add(a),e}function G(e,a,n,i){var r=-1,t=e?e.length:0
for(i&&t&&(n=e[++r]);++r<t;)n=a(n,e[r],r,e)
return n}function H(e){var a=!1
if(null!=e&&"function"!=typeof e.toString)try{a=!!(e+"")}catch(e){}return a}function F(e){var a=-1,n=Array(e.size)
return e.forEach((function(e,i){n[++a]=[i,e]})),n}function J(e,a){return function(n){return e(a(n))}}function U(e){var a=-1,n=Array(e.size)
return e.forEach((function(e){n[++a]=e})),n}var W,Z=Array.prototype,q=Function.prototype,Q=Object.prototype,Y=K["__core-js_shared__"],$=(W=/[^.]+$/.exec(Y&&Y.keys&&Y.keys.IE_PROTO||""))?"Symbol(src)_1."+W:"",X=q.toString,ee=Q.hasOwnProperty,ae=Q.toString,ne=RegExp("^"+X.call(ee).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ie=O?K.Buffer:void 0,re=K.Symbol,te=K.Uint8Array,oe=J(Object.getPrototypeOf,Object),se=Object.create,le=Q.propertyIsEnumerable,ue=Z.splice,ce=Object.getOwnPropertySymbols,de=ie?ie.isBuffer:void 0,he=J(Object.keys,Object),pe=Ke(K,"DataView"),me=Ke(K,"Map"),fe=Ke(K,"Promise"),ve=Ke(K,"Set"),ge=Ke(K,"WeakMap"),ke=Ke(Object,"create"),ye=Ve(pe),be=Ve(me),Se=Ve(fe),Ae=Ve(ve),Me=Ve(ge),Te=re?re.prototype:void 0,_e=Te?Te.valueOf:void 0
function we(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function je(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Ee(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Ne(e){this.__data__=new je(e)}function Be(e,a,n){var i=e[a]
ee.call(e,a)&&Ge(i,n)&&(void 0!==n||a in e)||(e[a]=n)}function Pe(e,a){for(var n=e.length;n--;)if(Ge(e[n][0],a))return n
return-1}function Le(e,a,n,i,r,p,k){var P
if(i&&(P=p?i(e,r,p,k):i(e)),void 0!==P)return P
if(!We(e))return e
var L=He(e)
if(L){if(P=function(e){var a=e.length,n=e.constructor(a)
return a&&"string"==typeof e[0]&&ee.call(e,"index")&&(n.index=e.index,n.input=e.input),n}(e),!a)return function(e,a){var n=-1,i=e.length
for(a||(a=Array(i));++n<i;)a[n]=e[n]
return a}(e,P)}else{var x=ze(e),C=x==l||x==u
if(Je(e))return function(e,a){if(a)return e.slice()
var n=new e.constructor(e.length)
return e.copy(n),n}(e,a)
if(x==h||x==t||C&&!p){if(H(e))return p?e:{}
if(P=function(e){return"function"!=typeof e.constructor||Ie(e)?{}:We(a=oe(e))?se(a):{}
var a}(C?{}:e),!a)return function(e,a){return xe(e,Re(e),a)}(e,function(e,a){return e&&xe(a,Ze(a),e)}(P,e))}else{if(!D[x])return p?e:{}
P=function(e,a,n,i){var r,t=e.constructor
switch(a){case y:return De(e)
case o:case s:return new t(+e)
case b:return function(e,a){var n=a?De(e.buffer):e.buffer
return new e.constructor(n,e.byteOffset,e.byteLength)}(e,i)
case S:case A:case M:case T:case _:case w:case j:case E:case N:return function(e,a){var n=a?De(e.buffer):e.buffer
return new e.constructor(n,e.byteOffset,e.length)}(e,i)
case c:return function(e,a,n){return G(a?n(F(e),!0):F(e),I,new e.constructor)}(e,i,n)
case d:case v:return new t(e)
case m:return function(e){var a=new e.constructor(e.source,B.exec(e))
return a.lastIndex=e.lastIndex,a}(e)
case f:return function(e,a,n){return G(a?n(U(e),!0):U(e),V,new e.constructor)}(e,i,n)
case g:return r=e,_e?Object(_e.call(r)):{}}}(e,x,Le,a)}}k||(k=new Ne)
var K=k.get(e)
if(K)return K
if(k.set(e,P),!L)var R=n?function(e){return function(e,a,n){var i=a(e)
return He(e)?i:function(e,a){for(var n=-1,i=a.length,r=e.length;++n<i;)e[r+n]=a[n]
return e}(i,n(e))}(e,Ze,Re)}(e):Ze(e)
return function(e,a){for(var n=-1,i=e?e.length:0;++n<i&&!1!==a(e[n],n););}(R||e,(function(r,t){R&&(r=e[t=r]),Be(P,t,Le(r,a,n,i,t,e,k))})),P}function De(e){var a=new e.constructor(e.byteLength)
return new te(a).set(new te(e)),a}function xe(e,a,n,i){n||(n={})
for(var r=-1,t=a.length;++r<t;){var o=a[r],s=i?i(n[o],e[o],o,n,e):void 0
Be(n,o,void 0===s?e[o]:s)}return n}function Ce(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function Ke(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){return!(!We(e)||(a=e,$&&$ in a))&&(Ue(e)||H(e)?ne:P).test(Ve(e))
var a}(n)?n:void 0}we.prototype.clear=function(){this.__data__=ke?ke(null):{}},we.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},we.prototype.get=function(e){var a=this.__data__
if(ke){var n=a[e]
return n===i?void 0:n}return ee.call(a,e)?a[e]:void 0},we.prototype.has=function(e){var a=this.__data__
return ke?void 0!==a[e]:ee.call(a,e)},we.prototype.set=function(e,a){return this.__data__[e]=ke&&void 0===a?i:a,this},je.prototype.clear=function(){this.__data__=[]},je.prototype.delete=function(e){var a=this.__data__,n=Pe(a,e)
return!(n<0||(n==a.length-1?a.pop():ue.call(a,n,1),0))},je.prototype.get=function(e){var a=this.__data__,n=Pe(a,e)
return n<0?void 0:a[n][1]},je.prototype.has=function(e){return Pe(this.__data__,e)>-1},je.prototype.set=function(e,a){var n=this.__data__,i=Pe(n,e)
return i<0?n.push([e,a]):n[i][1]=a,this},Ee.prototype.clear=function(){this.__data__={hash:new we,map:new(me||je),string:new we}},Ee.prototype.delete=function(e){return Ce(this,e).delete(e)},Ee.prototype.get=function(e){return Ce(this,e).get(e)},Ee.prototype.has=function(e){return Ce(this,e).has(e)},Ee.prototype.set=function(e,a){return Ce(this,e).set(e,a),this},Ne.prototype.clear=function(){this.__data__=new je},Ne.prototype.delete=function(e){return this.__data__.delete(e)},Ne.prototype.get=function(e){return this.__data__.get(e)},Ne.prototype.has=function(e){return this.__data__.has(e)},Ne.prototype.set=function(e,a){var n=this.__data__
if(n instanceof je){var i=n.__data__
if(!me||i.length<199)return i.push([e,a]),this
n=this.__data__=new Ee(i)}return n.set(e,a),this}
var Re=ce?J(ce,Object):function(){return[]},ze=function(e){return ae.call(e)}
function Oe(e,a){return!!(a=null==a?r:a)&&("number"==typeof e||L.test(e))&&e>-1&&e%1==0&&e<a}function Ie(e){var a=e&&e.constructor
return e===("function"==typeof a&&a.prototype||Q)}function Ve(e){if(null!=e){try{return X.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Ge(e,a){return e===a||e!=e&&a!=a}(pe&&ze(new pe(new ArrayBuffer(1)))!=b||me&&ze(new me)!=c||fe&&ze(fe.resolve())!=p||ve&&ze(new ve)!=f||ge&&ze(new ge)!=k)&&(ze=function(e){var a=ae.call(e),n=a==h?e.constructor:void 0,i=n?Ve(n):void 0
if(i)switch(i){case ye:return b
case be:return c
case Se:return p
case Ae:return f
case Me:return k}return a})
var He=Array.isArray
function Fe(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=r}(e.length)&&!Ue(e)}var Je=de||function(){return!1}
function Ue(e){var a=We(e)?ae.call(e):""
return a==l||a==u}function We(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}function Ze(e){return Fe(e)?function(e,a){var n=He(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Fe(e)}(e)&&ee.call(e,"callee")&&(!le.call(e,"callee")||ae.call(e)==t)}(e)?function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}(e.length,String):[],i=n.length,r=!!i
for(var o in e)!ee.call(e,o)||r&&("length"==o||Oe(o,i))||n.push(o)
return n}(e):function(e){if(!Ie(e))return he(e)
var a=[]
for(var n in Object(e))ee.call(e,n)&&"constructor"!=n&&a.push(n)
return a}(e)}e.exports=function(e){return Le(e,!0,!0)}},1856:e=>{e.exports=function(e){for(var a=-1,n=e?e.length:0,i=0,r=[];++a<n;){var t=e[a]
t&&(r[i++]=t)}return r}},332:(e,a,n)=>{e=n.nmd(e)
var i="__lodash_hash_undefined__",r=9007199254740991,t="[object Arguments]",o="[object Array]",s="[object Boolean]",l="[object Date]",u="[object Error]",c="[object Function]",d="[object Map]",h="[object Number]",p="[object Object]",m="[object Promise]",f="[object RegExp]",v="[object Set]",g="[object String]",k="[object Symbol]",y="[object WeakMap]",b="[object ArrayBuffer]",S="[object DataView]",A=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,M=/^\w*$/,T=/^\./,_=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,w=/^\s+|\s+$/g,j=/\\(\\)?/g,E=/^[-+]0x[0-9a-f]+$/i,N=/^0b[01]+$/i,B=/^\[object .+?Constructor\]$/,P=/^0o[0-7]+$/i,L=/^(?:0|[1-9]\d*)$/,D={}
D["[object Float32Array]"]=D["[object Float64Array]"]=D["[object Int8Array]"]=D["[object Int16Array]"]=D["[object Int32Array]"]=D["[object Uint8Array]"]=D["[object Uint8ClampedArray]"]=D["[object Uint16Array]"]=D["[object Uint32Array]"]=!0,D[t]=D[o]=D[b]=D[s]=D[S]=D[l]=D[u]=D[c]=D[d]=D[h]=D[p]=D[f]=D[v]=D[g]=D[y]=!1
var x=parseInt,C="object"==typeof global&&global&&global.Object===Object&&global,K="object"==typeof self&&self&&self.Object===Object&&self,R=C||K||Function("return this")(),z=a&&!a.nodeType&&a,O=z&&e&&!e.nodeType&&e,I=O&&O.exports===z&&C.process,V=function(){try{return I&&I.binding("util")}catch(e){}}(),G=V&&V.isTypedArray
function H(e,a){for(var n=-1,i=e?e.length:0;++n<i;)if(a(e[n],n,e))return!0
return!1}function F(e){var a=!1
if(null!=e&&"function"!=typeof e.toString)try{a=!!(e+"")}catch(e){}return a}function J(e){var a=-1,n=Array(e.size)
return e.forEach((function(e,i){n[++a]=[i,e]})),n}function U(e){var a=-1,n=Array(e.size)
return e.forEach((function(e){n[++a]=e})),n}var W,Z,q,Q=Array.prototype,Y=Function.prototype,$=Object.prototype,X=R["__core-js_shared__"],ee=(W=/[^.]+$/.exec(X&&X.keys&&X.keys.IE_PROTO||""))?"Symbol(src)_1."+W:"",ae=Y.toString,ne=$.hasOwnProperty,ie=$.toString,re=RegExp("^"+ae.call(ne).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),te=R.Symbol,oe=R.Uint8Array,se=$.propertyIsEnumerable,le=Q.splice,ue=(Z=Object.keys,q=Object,function(e){return Z(q(e))}),ce=Math.max,de=ze(R,"DataView"),he=ze(R,"Map"),pe=ze(R,"Promise"),me=ze(R,"Set"),fe=ze(R,"WeakMap"),ve=ze(Object,"create"),ge=Ue(de),ke=Ue(he),ye=Ue(pe),be=Ue(me),Se=Ue(fe),Ae=te?te.prototype:void 0,Me=Ae?Ae.valueOf:void 0,Te=Ae?Ae.toString:void 0
function _e(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function we(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function je(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Ee(e){var a=-1,n=e?e.length:0
for(this.__data__=new je;++a<n;)this.add(e[a])}function Ne(e){this.__data__=new we(e)}function Be(e,a){for(var n=e.length;n--;)if(Qe(e[n][0],a))return n
return-1}function Pe(e,a){for(var n=0,i=(a=Ve(a,e)?[a]:Ce(a)).length;null!=e&&n<i;)e=e[Je(a[n++])]
return n&&n==i?e:void 0}function Le(e,a){return null!=e&&a in Object(e)}function De(e,a,n,i,r){return e===a||(null==e||null==a||!na(e)&&!ia(a)?e!=e&&a!=a:function(e,a,n,i,r,c){var m=$e(e),y=$e(a),A=o,M=o
m||(A=(A=Oe(e))==t?p:A),y||(M=(M=Oe(a))==t?p:M)
var T=A==p&&!F(e),_=M==p&&!F(a),w=A==M
if(w&&!T)return c||(c=new Ne),m||ta(e)?Ke(e,a,n,i,r,c):function(e,a,n,i,r,t,o){switch(n){case S:if(e.byteLength!=a.byteLength||e.byteOffset!=a.byteOffset)return!1
e=e.buffer,a=a.buffer
case b:return!(e.byteLength!=a.byteLength||!i(new oe(e),new oe(a)))
case s:case l:case h:return Qe(+e,+a)
case u:return e.name==a.name&&e.message==a.message
case f:case g:return e==a+""
case d:var c=J
case v:var p=2&t
if(c||(c=U),e.size!=a.size&&!p)return!1
var m=o.get(e)
if(m)return m==a
t|=1,o.set(e,a)
var y=Ke(c(e),c(a),i,r,t,o)
return o.delete(e),y
case k:if(Me)return Me.call(e)==Me.call(a)}return!1}(e,a,A,n,i,r,c)
if(!(2&r)){var j=T&&ne.call(e,"__wrapped__"),E=_&&ne.call(a,"__wrapped__")
if(j||E){var N=j?e.value():e,B=E?a.value():a
return c||(c=new Ne),n(N,B,i,r,c)}}return!!w&&(c||(c=new Ne),function(e,a,n,i,r,t){var o=2&r,s=oa(e),l=s.length
if(l!=oa(a).length&&!o)return!1
for(var u=l;u--;){var c=s[u]
if(!(o?c in a:ne.call(a,c)))return!1}var d=t.get(e)
if(d&&t.get(a))return d==a
var h=!0
t.set(e,a),t.set(a,e)
for(var p=o;++u<l;){var m=e[c=s[u]],f=a[c]
if(i)var v=o?i(f,m,c,a,e,t):i(m,f,c,e,a,t)
if(!(void 0===v?m===f||n(m,f,i,r,t):v)){h=!1
break}p||(p="constructor"==c)}if(h&&!p){var g=e.constructor,k=a.constructor
g==k||!("constructor"in e)||!("constructor"in a)||"function"==typeof g&&g instanceof g&&"function"==typeof k&&k instanceof k||(h=!1)}return t.delete(e),t.delete(a),h}(e,a,n,i,r,c))}(e,a,De,n,i,r))}function xe(e){return"function"==typeof e?e:null==e?sa:"object"==typeof e?$e(e)?function(e,a){return Ve(e)&&Ge(a)?He(Je(e),a):function(n){var i=function(e,a,n){var i=null==e?void 0:Pe(e,a)
return void 0===i?void 0:i}(n,e)
return void 0===i&&i===a?function(e,a){return null!=e&&function(e,a,n){for(var i,r=-1,t=(a=Ve(a,e)?[a]:Ce(a)).length;++r<t;){var o=Je(a[r])
if(!(i=null!=e&&n(e,o)))break
e=e[o]}return i||!!(t=e?e.length:0)&&aa(t)&&Ie(o,t)&&($e(e)||Ye(e))}(e,a,Le)}(n,e):De(a,i,void 0,3)}}(e[0],e[1]):(n=function(e){for(var a=oa(e),n=a.length;n--;){var i=a[n],r=e[i]
a[n]=[i,r,Ge(r)]}return a}(a=e),1==n.length&&n[0][2]?He(n[0][0],n[0][1]):function(e){return e===a||function(e,a,n,i){var r=n.length,t=r
if(null==e)return!t
for(e=Object(e);r--;){var o=n[r]
if(o[2]?o[1]!==e[o[0]]:!(o[0]in e))return!1}for(;++r<t;){var s=(o=n[r])[0],l=e[s],u=o[1]
if(o[2]){if(void 0===l&&!(s in e))return!1}else if(!De(u,l,undefined,3,new Ne))return!1}return!0}(e,0,n)}):Ve(i=e)?(r=Je(i),function(e){return null==e?void 0:e[r]}):function(e){return function(a){return Pe(a,e)}}(i)
var a,n,i,r}function Ce(e){return $e(e)?e:Fe(e)}function Ke(e,a,n,i,r,t){var o=2&r,s=e.length,l=a.length
if(s!=l&&!(o&&l>s))return!1
var u=t.get(e)
if(u&&t.get(a))return u==a
var c=-1,d=!0,h=1&r?new Ee:void 0
for(t.set(e,a),t.set(a,e);++c<s;){var p=e[c],m=a[c]
if(i)var f=o?i(m,p,c,a,e,t):i(p,m,c,e,a,t)
if(void 0!==f){if(f)continue
d=!1
break}if(h){if(!H(a,(function(e,a){if(!h.has(a)&&(p===e||n(p,e,i,r,t)))return h.add(a)}))){d=!1
break}}else if(p!==m&&!n(p,m,i,r,t)){d=!1
break}}return t.delete(e),t.delete(a),d}function Re(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function ze(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){return!(!na(e)||function(e){return!!ee&&ee in e}(e))&&(ea(e)||F(e)?re:B).test(Ue(e))}(n)?n:void 0}_e.prototype.clear=function(){this.__data__=ve?ve(null):{}},_e.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},_e.prototype.get=function(e){var a=this.__data__
if(ve){var n=a[e]
return n===i?void 0:n}return ne.call(a,e)?a[e]:void 0},_e.prototype.has=function(e){var a=this.__data__
return ve?void 0!==a[e]:ne.call(a,e)},_e.prototype.set=function(e,a){return this.__data__[e]=ve&&void 0===a?i:a,this},we.prototype.clear=function(){this.__data__=[]},we.prototype.delete=function(e){var a=this.__data__,n=Be(a,e)
return!(n<0||(n==a.length-1?a.pop():le.call(a,n,1),0))},we.prototype.get=function(e){var a=this.__data__,n=Be(a,e)
return n<0?void 0:a[n][1]},we.prototype.has=function(e){return Be(this.__data__,e)>-1},we.prototype.set=function(e,a){var n=this.__data__,i=Be(n,e)
return i<0?n.push([e,a]):n[i][1]=a,this},je.prototype.clear=function(){this.__data__={hash:new _e,map:new(he||we),string:new _e}},je.prototype.delete=function(e){return Re(this,e).delete(e)},je.prototype.get=function(e){return Re(this,e).get(e)},je.prototype.has=function(e){return Re(this,e).has(e)},je.prototype.set=function(e,a){return Re(this,e).set(e,a),this},Ee.prototype.add=Ee.prototype.push=function(e){return this.__data__.set(e,i),this},Ee.prototype.has=function(e){return this.__data__.has(e)},Ne.prototype.clear=function(){this.__data__=new we},Ne.prototype.delete=function(e){return this.__data__.delete(e)},Ne.prototype.get=function(e){return this.__data__.get(e)},Ne.prototype.has=function(e){return this.__data__.has(e)},Ne.prototype.set=function(e,a){var n=this.__data__
if(n instanceof we){var i=n.__data__
if(!he||i.length<199)return i.push([e,a]),this
n=this.__data__=new je(i)}return n.set(e,a),this}
var Oe=function(e){return ie.call(e)}
function Ie(e,a){return!!(a=null==a?r:a)&&("number"==typeof e||L.test(e))&&e>-1&&e%1==0&&e<a}function Ve(e,a){if($e(e))return!1
var n=typeof e
return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!ra(e))||M.test(e)||!A.test(e)||null!=a&&e in Object(a)}function Ge(e){return e==e&&!na(e)}function He(e,a){return function(n){return null!=n&&n[e]===a&&(void 0!==a||e in Object(n))}}(de&&Oe(new de(new ArrayBuffer(1)))!=S||he&&Oe(new he)!=d||pe&&Oe(pe.resolve())!=m||me&&Oe(new me)!=v||fe&&Oe(new fe)!=y)&&(Oe=function(e){var a=ie.call(e),n=a==p?e.constructor:void 0,i=n?Ue(n):void 0
if(i)switch(i){case ge:return S
case ke:return d
case ye:return m
case be:return v
case Se:return y}return a})
var Fe=qe((function(e){var a
e=null==(a=e)?"":function(e){if("string"==typeof e)return e
if(ra(e))return Te?Te.call(e):""
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}(a)
var n=[]
return T.test(e)&&n.push(""),e.replace(_,(function(e,a,i,r){n.push(i?r.replace(j,"$1"):a||e)})),n}))
function Je(e){if("string"==typeof e||ra(e))return e
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}function Ue(e){if(null!=e){try{return ae.call(e)}catch(e){}try{return e+""}catch(e){}}return""}var We,Ze=(We=function(e,a,n){var i=e?e.length:0
if(!i)return-1
var r,t,o,s=null==n?0:(t=(r=(o=n)?1/0===(o=function(e){if("number"==typeof e)return e
if(ra(e))return NaN
if(na(e)){var a="function"==typeof e.valueOf?e.valueOf():e
e=na(a)?a+"":a}if("string"!=typeof e)return 0===e?e:+e
e=e.replace(w,"")
var n=N.test(e)
return n||P.test(e)?x(e.slice(2),n?2:8):E.test(e)?NaN:+e}(o))||o===-1/0?17976931348623157e292*(o<0?-1:1):o==o?o:0:0===o?o:0)%1,r==r?t?r-t:r:0)
return s<0&&(s=ce(i+s,0)),function(e,a,n,i){for(var r=e.length,t=n+-1;++t<r;)if(a(e[t],t,e))return t
return-1}(e,xe(a),s)},function(e,a,n){var i=Object(e)
if(!Xe(e)){var r=xe(a)
e=oa(e),a=function(e){return r(i[e],e,i)}}var t=We(e,a,n)
return t>-1?i[r?e[t]:t]:void 0})
function qe(e,a){if("function"!=typeof e||a&&"function"!=typeof a)throw new TypeError("Expected a function")
var n=function(){var i=arguments,r=a?a.apply(this,i):i[0],t=n.cache
if(t.has(r))return t.get(r)
var o=e.apply(this,i)
return n.cache=t.set(r,o),o}
return n.cache=new(qe.Cache||je),n}function Qe(e,a){return e===a||e!=e&&a!=a}function Ye(e){return function(e){return ia(e)&&Xe(e)}(e)&&ne.call(e,"callee")&&(!se.call(e,"callee")||ie.call(e)==t)}qe.Cache=je
var $e=Array.isArray
function Xe(e){return null!=e&&aa(e.length)&&!ea(e)}function ea(e){var a=na(e)?ie.call(e):""
return a==c||"[object GeneratorFunction]"==a}function aa(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=r}function na(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}function ia(e){return!!e&&"object"==typeof e}function ra(e){return"symbol"==typeof e||ia(e)&&ie.call(e)==k}var ta=G?function(e){return function(a){return e(a)}}(G):function(e){return ia(e)&&aa(e.length)&&!!D[ie.call(e)]}
function oa(e){return Xe(e)?function(e,a){var n=$e(e)||Ye(e)?function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}(e.length,String):[],i=n.length,r=!!i
for(var t in e)!ne.call(e,t)||r&&("length"==t||Ie(t,i))||n.push(t)
return n}(e):function(e){if(n=(a=e)&&a.constructor,a!==("function"==typeof n&&n.prototype||$))return ue(e)
var a,n,i=[]
for(var r in Object(e))ne.call(e,r)&&"constructor"!=r&&i.push(r)
return i}(e)}function sa(e){return e}e.exports=Ze},7162:e=>{var a="object"==typeof global&&global&&global.Object===Object&&global,n="object"==typeof self&&self&&self.Object===Object&&self,i=a||n||Function("return this")()
function r(e,a){for(var n=-1,i=a.length,r=e.length;++n<i;)e[r+n]=a[n]
return e}var t=Object.prototype,o=t.hasOwnProperty,s=t.toString,l=i.Symbol,u=t.propertyIsEnumerable,c=l?l.isConcatSpreadable:void 0
function d(e,a,n,i,t){var o=-1,s=e.length
for(n||(n=h),t||(t=[]);++o<s;){var l=e[o]
a>0&&n(l)?a>1?d(l,a-1,n,i,t):r(t,l):i||(t[t.length]=l)}return t}function h(e){return p(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}(e.length)&&!function(e){var a=function(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}(e)?s.call(e):""
return"[object Function]"==a||"[object GeneratorFunction]"==a}(e)}(e)}(e)&&o.call(e,"callee")&&(!u.call(e,"callee")||"[object Arguments]"==s.call(e))}(e)||!!(c&&e&&e[c])}var p=Array.isArray
e.exports=function(e){return e&&e.length?d(e,1):[]}},5148:e=>{var a=9007199254740991,n=/^(?:0|[1-9]\d*)$/,i=Object.prototype,r=i.hasOwnProperty,t=i.toString,o=i.propertyIsEnumerable
function s(e,i){return!!(i=null==i?a:i)&&("number"==typeof e||n.test(e))&&e>-1&&e%1==0&&e<i}var l=Array.isArray
function u(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=a}(e.length)&&!function(e){var a=c(e)?t.call(e):""
return"[object Function]"==a||"[object GeneratorFunction]"==a}(e)}function c(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}function d(e){return u(e)?function(e,a){var n=l(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&u(e)}(e)&&r.call(e,"callee")&&(!o.call(e,"callee")||"[object Arguments]"==t.call(e))}(e)?function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}(e.length,String):[],i=n.length,c=!!i
for(var d in e)c&&("length"==d||s(d,i))||n.push(d)
return n}(e):function(e){if(!c(e))return function(e){var a=[]
if(null!=e)for(var n in Object(e))a.push(n)
return a}(e)
var a,n,t=(n=(a=e)&&a.constructor,a===("function"==typeof n&&n.prototype||i)),o=[]
for(var s in e)("constructor"!=s||!t&&r.call(e,s))&&o.push(s)
return o}(e)}function h(e){return e}e.exports=function(e,a){return null==e?e:function(e,a,n){for(var i=-1,r=Object(e),t=n(e),o=t.length;o--;){var s=t[++i]
if(!1===a(r[s],s,r))break}return e}(e,"function"==typeof a?a:h,d)}},291:e=>{var a,n="__lodash_hash_undefined__",i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,r=/^\w*$/,t=/^\./,o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,s=/\\(\\)?/g,l=/^\[object .+?Constructor\]$/,u="object"==typeof global&&global&&global.Object===Object&&global,c="object"==typeof self&&self&&self.Object===Object&&self,d=u||c||Function("return this")(),h=Array.prototype,p=Function.prototype,m=Object.prototype,f=d["__core-js_shared__"],v=(a=/[^.]+$/.exec(f&&f.keys&&f.keys.IE_PROTO||""))?"Symbol(src)_1."+a:"",g=p.toString,k=m.hasOwnProperty,y=m.toString,b=RegExp("^"+g.call(k).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),S=d.Symbol,A=h.splice,M=L(d,"Map"),T=L(Object,"create"),_=S?S.prototype:void 0,w=_?_.toString:void 0
function j(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function E(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function N(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function B(e,a){for(var n,i,r=e.length;r--;)if((n=e[r][0])===(i=a)||n!=n&&i!=i)return r
return-1}function P(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function L(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){if(!R(e)||v&&v in e)return!1
var a=function(e){var a=R(e)?y.call(e):""
return"[object Function]"==a||"[object GeneratorFunction]"==a}(e)||function(e){var a=!1
if(null!=e&&"function"!=typeof e.toString)try{a=!!(e+"")}catch(e){}return a}(e)?b:l
return a.test(function(e){if(null!=e){try{return g.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}(n)?n:void 0}j.prototype.clear=function(){this.__data__=T?T(null):{}},j.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},j.prototype.get=function(e){var a=this.__data__
if(T){var i=a[e]
return i===n?void 0:i}return k.call(a,e)?a[e]:void 0},j.prototype.has=function(e){var a=this.__data__
return T?void 0!==a[e]:k.call(a,e)},j.prototype.set=function(e,a){return this.__data__[e]=T&&void 0===a?n:a,this},E.prototype.clear=function(){this.__data__=[]},E.prototype.delete=function(e){var a=this.__data__,n=B(a,e)
return!(n<0||(n==a.length-1?a.pop():A.call(a,n,1),0))},E.prototype.get=function(e){var a=this.__data__,n=B(a,e)
return n<0?void 0:a[n][1]},E.prototype.has=function(e){return B(this.__data__,e)>-1},E.prototype.set=function(e,a){var n=this.__data__,i=B(n,e)
return i<0?n.push([e,a]):n[i][1]=a,this},N.prototype.clear=function(){this.__data__={hash:new j,map:new(M||E),string:new j}},N.prototype.delete=function(e){return P(this,e).delete(e)},N.prototype.get=function(e){return P(this,e).get(e)},N.prototype.has=function(e){return P(this,e).has(e)},N.prototype.set=function(e,a){return P(this,e).set(e,a),this}
var D=C((function(e){var a
e=null==(a=e)?"":function(e){if("string"==typeof e)return e
if(z(e))return w?w.call(e):""
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}(a)
var n=[]
return t.test(e)&&n.push(""),e.replace(o,(function(e,a,i,r){n.push(i?r.replace(s,"$1"):a||e)})),n}))
function x(e){if("string"==typeof e||z(e))return e
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}function C(e,a){if("function"!=typeof e||a&&"function"!=typeof a)throw new TypeError("Expected a function")
var n=function(){var i=arguments,r=a?a.apply(this,i):i[0],t=n.cache
if(t.has(r))return t.get(r)
var o=e.apply(this,i)
return n.cache=t.set(r,o),o}
return n.cache=new(C.Cache||N),n}C.Cache=N
var K=Array.isArray
function R(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}function z(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==y.call(e)}e.exports=function(e,a,n){var t=null==e?void 0:function(e,a){var n
a=function(e,a){if(K(e))return!1
var n=typeof e
return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!z(e))||r.test(e)||!i.test(e)||null!=a&&e in Object(a)}(a,e)?[a]:K(n=a)?n:D(n)
for(var t=0,o=a.length;null!=e&&t<o;)e=e[x(a[t++])]
return t&&t==o?e:void 0}(e,a)
return void 0===t?n:t}},4400:e=>{var a,n="__lodash_hash_undefined__",i=9007199254740991,r=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,t=/^\w*$/,o=/^\./,s=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,l=/\\(\\)?/g,u=/^\[object .+?Constructor\]$/,c=/^(?:0|[1-9]\d*)$/,d="object"==typeof global&&global&&global.Object===Object&&global,h="object"==typeof self&&self&&self.Object===Object&&self,p=d||h||Function("return this")(),m=Array.prototype,f=Function.prototype,v=Object.prototype,g=p["__core-js_shared__"],k=(a=/[^.]+$/.exec(g&&g.keys&&g.keys.IE_PROTO||""))?"Symbol(src)_1."+a:"",y=f.toString,b=v.hasOwnProperty,S=v.toString,A=RegExp("^"+y.call(b).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),M=p.Symbol,T=v.propertyIsEnumerable,_=m.splice,w=K(p,"Map"),j=K(Object,"create"),E=M?M.prototype:void 0,N=E?E.toString:void 0
function B(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function P(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function L(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function D(e,a){for(var n,i,r=e.length;r--;)if((n=e[r][0])===(i=a)||n!=n&&i!=i)return r
return-1}function x(e,a){return null!=e&&b.call(e,a)}function C(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function K(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){if(!H(e)||k&&k in e)return!1
var a=V(e)||function(e){var a=!1
if(null!=e&&"function"!=typeof e.toString)try{a=!!(e+"")}catch(e){}return a}(e)?A:u
return a.test(function(e){if(null!=e){try{return y.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}(n)?n:void 0}B.prototype.clear=function(){this.__data__=j?j(null):{}},B.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},B.prototype.get=function(e){var a=this.__data__
if(j){var i=a[e]
return i===n?void 0:i}return b.call(a,e)?a[e]:void 0},B.prototype.has=function(e){var a=this.__data__
return j?void 0!==a[e]:b.call(a,e)},B.prototype.set=function(e,a){return this.__data__[e]=j&&void 0===a?n:a,this},P.prototype.clear=function(){this.__data__=[]},P.prototype.delete=function(e){var a=this.__data__,n=D(a,e)
return!(n<0||(n==a.length-1?a.pop():_.call(a,n,1),0))},P.prototype.get=function(e){var a=this.__data__,n=D(a,e)
return n<0?void 0:a[n][1]},P.prototype.has=function(e){return D(this.__data__,e)>-1},P.prototype.set=function(e,a){var n=this.__data__,i=D(n,e)
return i<0?n.push([e,a]):n[i][1]=a,this},L.prototype.clear=function(){this.__data__={hash:new B,map:new(w||P),string:new B}},L.prototype.delete=function(e){return C(this,e).delete(e)},L.prototype.get=function(e){return C(this,e).get(e)},L.prototype.has=function(e){return C(this,e).has(e)},L.prototype.set=function(e,a){return C(this,e).set(e,a),this}
var R=O((function(e){var a
e=null==(a=e)?"":function(e){if("string"==typeof e)return e
if(J(e))return N?N.call(e):""
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}(a)
var n=[]
return o.test(e)&&n.push(""),e.replace(s,(function(e,a,i,r){n.push(i?r.replace(l,"$1"):a||e)})),n}))
function z(e){if("string"==typeof e||J(e))return e
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}function O(e,a){if("function"!=typeof e||a&&"function"!=typeof a)throw new TypeError("Expected a function")
var n=function(){var i=arguments,r=a?a.apply(this,i):i[0],t=n.cache
if(t.has(r))return t.get(r)
var o=e.apply(this,i)
return n.cache=t.set(r,o),o}
return n.cache=new(O.Cache||L),n}O.Cache=L
var I=Array.isArray
function V(e){var a=H(e)?S.call(e):""
return"[object Function]"==a||"[object GeneratorFunction]"==a}function G(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=i}function H(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}function F(e){return!!e&&"object"==typeof e}function J(e){return"symbol"==typeof e||F(e)&&"[object Symbol]"==S.call(e)}e.exports=function(e,a){return null!=e&&function(e,a,n){var o
a=function(e,a){if(I(e))return!1
var n=typeof e
return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!J(e))||t.test(e)||!r.test(e)||null!=a&&e in Object(a)}(a,e)?[a]:I(o=a)?o:R(o)
for(var s,l=-1,u=a.length;++l<u;){var d=z(a[l])
if(!(s=null!=e&&n(e,d)))break
e=e[d]}return s||!!(u=e?e.length:0)&&G(u)&&function(e,a){return!!(a=null==a?i:a)&&("number"==typeof e||c.test(e))&&e>-1&&e%1==0&&e<a}(d,u)&&(I(e)||function(e){return function(e){return F(e)&&function(e){return null!=e&&G(e.length)&&!V(e)}(e)}(e)&&b.call(e,"callee")&&(!T.call(e,"callee")||"[object Arguments]"==S.call(e))}(e))}(e,a,x)}},2004:e=>{var a="__lodash_hash_undefined__",n=9007199254740991,i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,r=/^\w*$/,t=/^\./,o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,s=/\\(\\)?/g,l=/^\[object .+?Constructor\]$/,u=/^(?:0|[1-9]\d*)$/,c="object"==typeof global&&global&&global.Object===Object&&global,d="object"==typeof self&&self&&self.Object===Object&&self,h=c||d||Function("return this")()
function p(e,a,n){switch(n.length){case 0:return e.call(a)
case 1:return e.call(a,n[0])
case 2:return e.call(a,n[0],n[1])
case 3:return e.call(a,n[0],n[1],n[2])}return e.apply(a,n)}var m,f,v,g=Array.prototype,k=Function.prototype,y=Object.prototype,b=h["__core-js_shared__"],S=(m=/[^.]+$/.exec(b&&b.keys&&b.keys.IE_PROTO||""))?"Symbol(src)_1."+m:"",A=k.toString,M=y.hasOwnProperty,T=y.toString,_=RegExp("^"+A.call(M).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),w=h.Symbol,j=y.propertyIsEnumerable,E=g.splice,N=(f=Object.keys,v=Object,function(e){return f(v(e))}),B=Math.max,P=F(h,"Map"),L=F(Object,"create"),D=w?w.prototype:void 0,x=D?D.toString:void 0
function C(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function K(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function R(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function z(e,a){for(var n,i,r=e.length;r--;)if((n=e[r][0])===(i=a)||n!=n&&i!=i)return r
return-1}C.prototype.clear=function(){this.__data__=L?L(null):{}},C.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},C.prototype.get=function(e){var n=this.__data__
if(L){var i=n[e]
return i===a?void 0:i}return M.call(n,e)?n[e]:void 0},C.prototype.has=function(e){var a=this.__data__
return L?void 0!==a[e]:M.call(a,e)},C.prototype.set=function(e,n){return this.__data__[e]=L&&void 0===n?a:n,this},K.prototype.clear=function(){this.__data__=[]},K.prototype.delete=function(e){var a=this.__data__,n=z(a,e)
return!(n<0||(n==a.length-1?a.pop():E.call(a,n,1),0))},K.prototype.get=function(e){var a=this.__data__,n=z(a,e)
return n<0?void 0:a[n][1]},K.prototype.has=function(e){return z(this.__data__,e)>-1},K.prototype.set=function(e,a){var n=this.__data__,i=z(n,e)
return i<0?n.push([e,a]):n[i][1]=a,this},R.prototype.clear=function(){this.__data__={hash:new C,map:new(P||K),string:new C}},R.prototype.delete=function(e){return H(this,e).delete(e)},R.prototype.get=function(e){return H(this,e).get(e)},R.prototype.has=function(e){return H(this,e).has(e)},R.prototype.set=function(e,a){return H(this,e).set(e,a),this}
var O,I=(O=function(e,a){return e&&V(e,a,ie)},function(e,a){if(null==e)return e
if(!$(e))return O(e,a)
for(var n=e.length,i=-1,r=Object(e);++i<n&&!1!==a(r[i],i,r););return e}),V=function(e,a,n){for(var i=-1,r=Object(e),t=n(e),o=t.length;o--;){var s=t[++i]
if(!1===a(r[s],s,r))break}return e}
function G(e){return Y(e)?e:W(e)}function H(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function F(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){if(!ee(e)||function(e){return!!S&&S in e}(e))return!1
var a=X(e)||function(e){var a=!1
if(null!=e&&"function"!=typeof e.toString)try{a=!!(e+"")}catch(e){}return a}(e)?_:l
return a.test(function(e){if(null!=e){try{return A.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}(n)?n:void 0}function J(e,a){return!!(a=null==a?n:a)&&("number"==typeof e||u.test(e))&&e>-1&&e%1==0&&e<a}function U(e,a){if(Y(e))return!1
var n=typeof e
return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!ne(e))||r.test(e)||!i.test(e)||null!=a&&e in Object(a)}var W=Q((function(e){var a
e=null==(a=e)?"":function(e){if("string"==typeof e)return e
if(ne(e))return x?x.call(e):""
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}(a)
var n=[]
return t.test(e)&&n.push(""),e.replace(o,(function(e,a,i,r){n.push(i?r.replace(s,"$1"):a||e)})),n}))
function Z(e){if("string"==typeof e||ne(e))return e
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}var q=function(e,a){return a=B(void 0===a?e.length-1:a,0),function(){for(var n=arguments,i=-1,r=B(n.length-a,0),t=Array(r);++i<r;)t[i]=n[a+i]
i=-1
for(var o=Array(a+1);++i<a;)o[i]=n[i]
return o[a]=t,p(e,this,o)}}((function(e,a,n){var i=-1,r="function"==typeof a,t=U(a),o=$(e)?Array(e.length):[]
return I(e,(function(e){var s=r?a:t&&null!=e?e[a]:void 0
o[++i]=s?p(s,e,n):function(e,a,n){var i,r
U(a,e)||(e=function(e,a){return 1==a.length?e:function(e,a){for(var n=0,i=(a=U(a,e)?[a]:G(a)).length;null!=e&&n<i;)e=e[Z(a[n++])]
return n&&n==i?e:void 0}(e,function(e,a,n){var i=-1,r=e.length
a<0&&(a=-a>r?0:r+a),(n=n>r?r:n)<0&&(n+=r),r=a>n?0:n-a>>>0,a>>>=0
for(var t=Array(r);++i<r;)t[i]=e[i+a]
return t}(a,0,-1))}(e,a=G(a)),a=(r=(i=a)?i.length:0)?i[r-1]:void 0)
var t=null==e?e:e[Z(a)]
return null==t?void 0:p(t,e,n)}(e,a,n)})),o}))
function Q(e,a){if("function"!=typeof e||a&&"function"!=typeof a)throw new TypeError("Expected a function")
var n=function(){var i=arguments,r=a?a.apply(this,i):i[0],t=n.cache
if(t.has(r))return t.get(r)
var o=e.apply(this,i)
return n.cache=t.set(r,o),o}
return n.cache=new(Q.Cache||R),n}Q.Cache=R
var Y=Array.isArray
function $(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=n}(e.length)&&!X(e)}function X(e){var a=ee(e)?T.call(e):""
return"[object Function]"==a||"[object GeneratorFunction]"==a}function ee(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}function ae(e){return!!e&&"object"==typeof e}function ne(e){return"symbol"==typeof e||ae(e)&&"[object Symbol]"==T.call(e)}function ie(e){return $(e)?function(e,a){var n=Y(e)||function(e){return function(e){return ae(e)&&$(e)}(e)&&M.call(e,"callee")&&(!j.call(e,"callee")||"[object Arguments]"==T.call(e))}(e)?function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}(e.length,String):[],i=n.length,r=!!i
for(var t in e)!M.call(e,t)||r&&("length"==t||J(t,i))||n.push(t)
return n}(e):function(e){if(n=(a=e)&&a.constructor,a!==("function"==typeof n&&n.prototype||y))return N(e)
var a,n,i=[]
for(var r in Object(e))M.call(e,r)&&"constructor"!=r&&i.push(r)
return i}(e)}e.exports=q},1821:(e,a,n)=>{e=n.nmd(e)
var i,r,t,o="[object Map]",s="[object Promise]",l="[object Set]",u="[object WeakMap]",c="[object DataView]",d=/^\[object .+?Constructor\]$/,h="object"==typeof global&&global&&global.Object===Object&&global,p="object"==typeof self&&self&&self.Object===Object&&self,m=h||p||Function("return this")(),f=a&&!a.nodeType&&a,v=f&&e&&!e.nodeType&&e,g=v&&v.exports===f,k=Function.prototype,y=Object.prototype,b=m["__core-js_shared__"],S=(i=/[^.]+$/.exec(b&&b.keys&&b.keys.IE_PROTO||""))?"Symbol(src)_1."+i:"",A=k.toString,M=y.hasOwnProperty,T=y.toString,_=RegExp("^"+A.call(M).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),w=g?m.Buffer:void 0,j=y.propertyIsEnumerable,E=w?w.isBuffer:void 0,N=(r=Object.keys,t=Object,function(e){return r(t(e))}),B=V(m,"DataView"),P=V(m,"Map"),L=V(m,"Promise"),D=V(m,"Set"),x=V(m,"WeakMap"),C=!j.call({valueOf:1},"valueOf"),K=H(B),R=H(P),z=H(L),O=H(D),I=H(x)
function V(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){if(!Z(e)||function(e){return!!S&&S in e}(e))return!1
var a=W(e)||function(e){var a=!1
if(null!=e&&"function"!=typeof e.toString)try{a=!!(e+"")}catch(e){}return a}(e)?_:d
return a.test(H(e))}(n)?n:void 0}var G=function(e){return T.call(e)}
function H(e){if(null!=e){try{return A.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(B&&G(new B(new ArrayBuffer(1)))!=c||P&&G(new P)!=o||L&&G(L.resolve())!=s||D&&G(new D)!=l||x&&G(new x)!=u)&&(G=function(e){var a=T.call(e),n="[object Object]"==a?e.constructor:void 0,i=n?H(n):void 0
if(i)switch(i){case K:return c
case R:return o
case z:return s
case O:return l
case I:return u}return a})
var F=Array.isArray
function J(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}(e.length)&&!W(e)}var U=E||function(){return!1}
function W(e){var a=Z(e)?T.call(e):""
return"[object Function]"==a||"[object GeneratorFunction]"==a}function Z(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}e.exports=function(e){if(J(e)&&(F(e)||"string"==typeof e||"function"==typeof e.splice||U(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&J(e)}(e)&&M.call(e,"callee")&&(!j.call(e,"callee")||"[object Arguments]"==T.call(e))}(e)))return!e.length
var a=G(e)
if(a==o||a==l)return!e.size
if(C||function(e){var a=e&&e.constructor
return e===("function"==typeof a&&a.prototype||y)}(e))return!N(e).length
for(var n in e)if(M.call(e,n))return!1
return!0}},3107:(e,a,n)=>{e=n.nmd(e)
var i="__lodash_hash_undefined__",r=9007199254740991,t="[object Arguments]",o="[object Array]",s="[object Boolean]",l="[object Date]",u="[object Error]",c="[object Function]",d="[object Map]",h="[object Number]",p="[object Object]",m="[object Promise]",f="[object RegExp]",v="[object Set]",g="[object String]",k="[object WeakMap]",y="[object ArrayBuffer]",b="[object DataView]",S=/^\[object .+?Constructor\]$/,A=/^(?:0|[1-9]\d*)$/,M={}
M["[object Float32Array]"]=M["[object Float64Array]"]=M["[object Int8Array]"]=M["[object Int16Array]"]=M["[object Int32Array]"]=M["[object Uint8Array]"]=M["[object Uint8ClampedArray]"]=M["[object Uint16Array]"]=M["[object Uint32Array]"]=!0,M[t]=M[o]=M[y]=M[s]=M[b]=M[l]=M[u]=M[c]=M[d]=M[h]=M[p]=M[f]=M[v]=M[g]=M[k]=!1
var T="object"==typeof global&&global&&global.Object===Object&&global,_="object"==typeof self&&self&&self.Object===Object&&self,w=T||_||Function("return this")(),j=a&&!a.nodeType&&a,E=j&&e&&!e.nodeType&&e,N=E&&E.exports===j,B=N&&T.process,P=function(){try{return B&&B.binding&&B.binding("util")}catch(e){}}(),L=P&&P.isTypedArray
function D(e,a){for(var n=-1,i=null==e?0:e.length;++n<i;)if(a(e[n],n,e))return!0
return!1}function x(e){var a=-1,n=Array(e.size)
return e.forEach((function(e,i){n[++a]=[i,e]})),n}function C(e){var a=-1,n=Array(e.size)
return e.forEach((function(e){n[++a]=e})),n}var K,R,z,O=Array.prototype,I=Function.prototype,V=Object.prototype,G=w["__core-js_shared__"],H=I.toString,F=V.hasOwnProperty,J=(K=/[^.]+$/.exec(G&&G.keys&&G.keys.IE_PROTO||""))?"Symbol(src)_1."+K:"",U=V.toString,W=RegExp("^"+H.call(F).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Z=N?w.Buffer:void 0,q=w.Symbol,Q=w.Uint8Array,Y=V.propertyIsEnumerable,$=O.splice,X=q?q.toStringTag:void 0,ee=Object.getOwnPropertySymbols,ae=Z?Z.isBuffer:void 0,ne=(R=Object.keys,z=Object,function(e){return R(z(e))}),ie=Ee(w,"DataView"),re=Ee(w,"Map"),te=Ee(w,"Promise"),oe=Ee(w,"Set"),se=Ee(w,"WeakMap"),le=Ee(Object,"create"),ue=Le(ie),ce=Le(re),de=Le(te),he=Le(oe),pe=Le(se),me=q?q.prototype:void 0,fe=me?me.valueOf:void 0
function ve(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function ge(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function ke(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function ye(e){var a=-1,n=null==e?0:e.length
for(this.__data__=new ke;++a<n;)this.add(e[a])}function be(e){var a=this.__data__=new ge(e)
this.size=a.size}function Se(e,a){for(var n=e.length;n--;)if(De(e[n][0],a))return n
return-1}function Ae(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":X&&X in Object(e)?function(e){var a=F.call(e,X),n=e[X]
try{e[X]=void 0
var i=!0}catch(e){}var r=U.call(e)
return i&&(a?e[X]=n:delete e[X]),r}(e):function(e){return U.call(e)}(e)}function Me(e){return Ie(e)&&Ae(e)==t}function Te(e,a,n,i,r){return e===a||(null==e||null==a||!Ie(e)&&!Ie(a)?e!=e&&a!=a:function(e,a,n,i,r,c){var m=Ce(e),k=Ce(a),S=m?o:Be(e),A=k?o:Be(a),M=(S=S==t?p:S)==p,T=(A=A==t?p:A)==p,_=S==A
if(_&&Ke(e)){if(!Ke(a))return!1
m=!0,M=!1}if(_&&!M)return c||(c=new be),m||Ve(e)?_e(e,a,n,i,r,c):function(e,a,n,i,r,t,o){switch(n){case b:if(e.byteLength!=a.byteLength||e.byteOffset!=a.byteOffset)return!1
e=e.buffer,a=a.buffer
case y:return!(e.byteLength!=a.byteLength||!t(new Q(e),new Q(a)))
case s:case l:case h:return De(+e,+a)
case u:return e.name==a.name&&e.message==a.message
case f:case g:return e==a+""
case d:var c=x
case v:var p=1&i
if(c||(c=C),e.size!=a.size&&!p)return!1
var m=o.get(e)
if(m)return m==a
i|=2,o.set(e,a)
var k=_e(c(e),c(a),i,r,t,o)
return o.delete(e),k
case"[object Symbol]":if(fe)return fe.call(e)==fe.call(a)}return!1}(e,a,S,n,i,r,c)
if(!(1&n)){var w=M&&F.call(e,"__wrapped__"),j=T&&F.call(a,"__wrapped__")
if(w||j){var E=w?e.value():e,N=j?a.value():a
return c||(c=new be),r(E,N,n,i,c)}}return!!_&&(c||(c=new be),function(e,a,n,i,r,t){var o=1&n,s=we(e),l=s.length
if(l!=we(a).length&&!o)return!1
for(var u=l;u--;){var c=s[u]
if(!(o?c in a:F.call(a,c)))return!1}var d=t.get(e)
if(d&&t.get(a))return d==a
var h=!0
t.set(e,a),t.set(a,e)
for(var p=o;++u<l;){var m=e[c=s[u]],f=a[c]
if(i)var v=o?i(f,m,c,a,e,t):i(m,f,c,e,a,t)
if(!(void 0===v?m===f||r(m,f,n,i,t):v)){h=!1
break}p||(p="constructor"==c)}if(h&&!p){var g=e.constructor,k=a.constructor
g==k||!("constructor"in e)||!("constructor"in a)||"function"==typeof g&&g instanceof g&&"function"==typeof k&&k instanceof k||(h=!1)}return t.delete(e),t.delete(a),h}(e,a,n,i,r,c))}(e,a,n,i,Te,r))}function _e(e,a,n,i,r,t){var o=1&n,s=e.length,l=a.length
if(s!=l&&!(o&&l>s))return!1
var u=t.get(e)
if(u&&t.get(a))return u==a
var c=-1,d=!0,h=2&n?new ye:void 0
for(t.set(e,a),t.set(a,e);++c<s;){var p=e[c],m=a[c]
if(i)var f=o?i(m,p,c,a,e,t):i(p,m,c,e,a,t)
if(void 0!==f){if(f)continue
d=!1
break}if(h){if(!D(a,(function(e,a){if(o=a,!h.has(o)&&(p===e||r(p,e,n,i,t)))return h.push(a)
var o}))){d=!1
break}}else if(p!==m&&!r(p,m,n,i,t)){d=!1
break}}return t.delete(e),t.delete(a),d}function we(e){return function(e,a,n){var i=a(e)
return Ce(e)?i:function(e,a){for(var n=-1,i=a.length,r=e.length;++n<i;)e[r+n]=a[n]
return e}(i,n(e))}(e,Ge,Ne)}function je(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function Ee(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){return!(!Oe(e)||function(e){return!!J&&J in e}(e))&&(Re(e)?W:S).test(Le(e))}(n)?n:void 0}ve.prototype.clear=function(){this.__data__=le?le(null):{},this.size=0},ve.prototype.delete=function(e){var a=this.has(e)&&delete this.__data__[e]
return this.size-=a?1:0,a},ve.prototype.get=function(e){var a=this.__data__
if(le){var n=a[e]
return n===i?void 0:n}return F.call(a,e)?a[e]:void 0},ve.prototype.has=function(e){var a=this.__data__
return le?void 0!==a[e]:F.call(a,e)},ve.prototype.set=function(e,a){var n=this.__data__
return this.size+=this.has(e)?0:1,n[e]=le&&void 0===a?i:a,this},ge.prototype.clear=function(){this.__data__=[],this.size=0},ge.prototype.delete=function(e){var a=this.__data__,n=Se(a,e)
return!(n<0||(n==a.length-1?a.pop():$.call(a,n,1),--this.size,0))},ge.prototype.get=function(e){var a=this.__data__,n=Se(a,e)
return n<0?void 0:a[n][1]},ge.prototype.has=function(e){return Se(this.__data__,e)>-1},ge.prototype.set=function(e,a){var n=this.__data__,i=Se(n,e)
return i<0?(++this.size,n.push([e,a])):n[i][1]=a,this},ke.prototype.clear=function(){this.size=0,this.__data__={hash:new ve,map:new(re||ge),string:new ve}},ke.prototype.delete=function(e){var a=je(this,e).delete(e)
return this.size-=a?1:0,a},ke.prototype.get=function(e){return je(this,e).get(e)},ke.prototype.has=function(e){return je(this,e).has(e)},ke.prototype.set=function(e,a){var n=je(this,e),i=n.size
return n.set(e,a),this.size+=n.size==i?0:1,this},ye.prototype.add=ye.prototype.push=function(e){return this.__data__.set(e,i),this},ye.prototype.has=function(e){return this.__data__.has(e)},be.prototype.clear=function(){this.__data__=new ge,this.size=0},be.prototype.delete=function(e){var a=this.__data__,n=a.delete(e)
return this.size=a.size,n},be.prototype.get=function(e){return this.__data__.get(e)},be.prototype.has=function(e){return this.__data__.has(e)},be.prototype.set=function(e,a){var n=this.__data__
if(n instanceof ge){var i=n.__data__
if(!re||i.length<199)return i.push([e,a]),this.size=++n.size,this
n=this.__data__=new ke(i)}return n.set(e,a),this.size=n.size,this}
var Ne=ee?function(e){return null==e?[]:(e=Object(e),function(a,n){for(var i=-1,r=null==a?0:a.length,t=0,o=[];++i<r;){var s=a[i]
l=s,Y.call(e,l)&&(o[t++]=s)}var l
return o}(ee(e)))}:function(){return[]},Be=Ae
function Pe(e,a){return!!(a=null==a?r:a)&&("number"==typeof e||A.test(e))&&e>-1&&e%1==0&&e<a}function Le(e){if(null!=e){try{return H.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function De(e,a){return e===a||e!=e&&a!=a}(ie&&Be(new ie(new ArrayBuffer(1)))!=b||re&&Be(new re)!=d||te&&Be(te.resolve())!=m||oe&&Be(new oe)!=v||se&&Be(new se)!=k)&&(Be=function(e){var a=Ae(e),n=a==p?e.constructor:void 0,i=n?Le(n):""
if(i)switch(i){case ue:return b
case ce:return d
case de:return m
case he:return v
case pe:return k}return a})
var xe=Me(function(){return arguments}())?Me:function(e){return Ie(e)&&F.call(e,"callee")&&!Y.call(e,"callee")},Ce=Array.isArray,Ke=ae||function(){return!1}
function Re(e){if(!Oe(e))return!1
var a=Ae(e)
return a==c||"[object GeneratorFunction]"==a||"[object AsyncFunction]"==a||"[object Proxy]"==a}function ze(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=r}function Oe(e){var a=typeof e
return null!=e&&("object"==a||"function"==a)}function Ie(e){return null!=e&&"object"==typeof e}var Ve=L?function(e){return function(a){return e(a)}}(L):function(e){return Ie(e)&&ze(e.length)&&!!M[Ae(e)]}
function Ge(e){return null!=(a=e)&&ze(a.length)&&!Re(a)?function(e,a){var n=Ce(e),i=!n&&xe(e),r=!n&&!i&&Ke(e),t=!n&&!i&&!r&&Ve(e),o=n||i||r||t,s=o?function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}(e.length,String):[],l=s.length
for(var u in e)!F.call(e,u)||o&&("length"==u||r&&("offset"==u||"parent"==u)||t&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||Pe(u,l))||s.push(u)
return s}(e):function(e){if(n=(a=e)&&a.constructor,a!==("function"==typeof n&&n.prototype||V))return ne(e)
var a,n,i=[]
for(var r in Object(e))F.call(e,r)&&"constructor"!=r&&i.push(r)
return i}(e)
var a}e.exports=function(e,a){return Te(e,a)}},3016:e=>{var a="object"==typeof global&&global&&global.Object===Object&&global,n="object"==typeof self&&self&&self.Object===Object&&self,i=a||n||Function("return this")(),r=Object.prototype,t=r.hasOwnProperty,o=r.toString,s=i.Symbol,l=s?s.toStringTag:void 0
e.exports=function(e){if(!function(e){var a=typeof e
return null!=e&&("object"==a||"function"==a)}(e))return!1
var a=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":l&&l in Object(e)?function(e){var a=t.call(e,l),n=e[l]
try{e[l]=void 0
var i=!0}catch(e){}var r=o.call(e)
return i&&(a?e[l]=n:delete e[l]),r}(e):function(e){return o.call(e)}(e)}(e)
return"[object Function]"==a||"[object GeneratorFunction]"==a||"[object AsyncFunction]"==a||"[object Proxy]"==a}},8317:e=>{var a=/^\s+|\s+$/g,n=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,r=/^0o[0-7]+$/i,t=parseInt,o=Object.prototype.toString
function s(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}e.exports=function(e){return"number"==typeof e&&e==function(e){var l=function(e){return e?1/0===(e=function(e){if("number"==typeof e)return e
if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==o.call(e)}(e))return NaN
if(s(e)){var l="function"==typeof e.valueOf?e.valueOf():e
e=s(l)?l+"":l}if("string"!=typeof e)return 0===e?e:+e
e=e.replace(a,"")
var u=i.test(e)
return u||r.test(e)?t(e.slice(2),u?2:8):n.test(e)?NaN:+e}(e))||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}(e),u=l%1
return l==l?u?l-u:l:0}(e)}},759:e=>{var a,n,i=Function.prototype,r=Object.prototype,t=i.toString,o=r.hasOwnProperty,s=t.call(Object),l=r.toString,u=(a=Object.getPrototypeOf,n=Object,function(e){return a(n(e))})
e.exports=function(e){if(!function(e){return!!e&&"object"==typeof e}(e)||"[object Object]"!=l.call(e)||function(e){var a=!1
if(null!=e&&"function"!=typeof e.toString)try{a=!!(e+"")}catch(e){}return a}(e))return!1
var a=u(e)
if(null===a)return!0
var n=o.call(a,"constructor")&&a.constructor
return"function"==typeof n&&n instanceof n&&t.call(n)==s}},2328:e=>{var a="[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]",n="\\ud83c[\\udffb-\\udfff]",i="[^\\ud800-\\udfff]",r="(?:\\ud83c[\\udde6-\\uddff]){2}",t="[\\ud800-\\udbff][\\udc00-\\udfff]",o="(?:"+a+"|"+n+")?",s="[\\ufe0e\\ufe0f]?",l=s+o+"(?:\\u200d(?:"+[i,r,t].join("|")+")"+s+o+")*",u="(?:"+[i+a+"?",a,r,t,"[\\ud800-\\udfff]"].join("|")+")",c=RegExp(n+"(?="+n+")|"+u+l,"g"),d=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"),h="object"==typeof global&&global&&global.Object===Object&&global,p="object"==typeof self&&self&&self.Object===Object&&self,m=h||p||Function("return this")()
function f(e){return d.test(e)}var v=Object.prototype.toString,g=m.Symbol,k=g?g.prototype:void 0,y=k?k.toString:void 0,b=function(e){var a,n,i,r,t=f(e=null==(a=e)?"":function(e){if("string"==typeof e)return e
if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==v.call(e)}(e))return y?y.call(e):""
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}(a))?function(e){return f(e)?function(e){return e.match(c)||[]}(e):function(e){return e.split("")}(e)}(e):void 0,o=t?t[0]:e.charAt(0),s=t?(n=t,1,r=n.length,i=void 0===i?r:i,function(e,a,n){var i=-1,r=e.length
a<0&&(a=-a>r?0:r+a),(n=n>r?r:n)<0&&(n+=r),r=a>n?0:n-a>>>0,a>>>=0
for(var t=Array(r);++i<r;)t[i]=e[i+a]
return t}(n,1,i)).join(""):e.slice(1)
return o.toLowerCase()+s}
e.exports=b},983:(e,a,n)=>{e=n.nmd(e)
var i="__lodash_hash_undefined__",r=9007199254740991,t="[object Arguments]",o="[object Array]",s="[object Boolean]",l="[object Date]",u="[object Error]",c="[object Function]",d="[object Map]",h="[object Number]",p="[object Object]",m="[object Promise]",f="[object RegExp]",v="[object Set]",g="[object String]",k="[object Symbol]",y="[object WeakMap]",b="[object ArrayBuffer]",S="[object DataView]",A=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,M=/^\w*$/,T=/^\./,_=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,w=/\\(\\)?/g,j=/^\[object .+?Constructor\]$/,E=/^(?:0|[1-9]\d*)$/,N={}
N["[object Float32Array]"]=N["[object Float64Array]"]=N["[object Int8Array]"]=N["[object Int16Array]"]=N["[object Int32Array]"]=N["[object Uint8Array]"]=N["[object Uint8ClampedArray]"]=N["[object Uint16Array]"]=N["[object Uint32Array]"]=!0,N[t]=N[o]=N[b]=N[s]=N[S]=N[l]=N[u]=N[c]=N[d]=N[h]=N[p]=N[f]=N[v]=N[g]=N[y]=!1
var B="object"==typeof global&&global&&global.Object===Object&&global,P="object"==typeof self&&self&&self.Object===Object&&self,L=B||P||Function("return this")(),D=a&&!a.nodeType&&a,x=D&&e&&!e.nodeType&&e,C=x&&x.exports===D&&B.process,K=function(){try{return C&&C.binding("util")}catch(e){}}(),R=K&&K.isTypedArray
function z(e,a){for(var n=-1,i=e?e.length:0,r=Array(i);++n<i;)r[n]=a(e[n],n,e)
return r}function O(e,a){for(var n=-1,i=e?e.length:0;++n<i;)if(a(e[n],n,e))return!0
return!1}function I(e){var a=!1
if(null!=e&&"function"!=typeof e.toString)try{a=!!(e+"")}catch(e){}return a}function V(e){var a=-1,n=Array(e.size)
return e.forEach((function(e,i){n[++a]=[i,e]})),n}function G(e){var a=-1,n=Array(e.size)
return e.forEach((function(e){n[++a]=e})),n}var H,F,J,U=Array.prototype,W=Function.prototype,Z=Object.prototype,q=L["__core-js_shared__"],Q=(H=/[^.]+$/.exec(q&&q.keys&&q.keys.IE_PROTO||""))?"Symbol(src)_1."+H:"",Y=W.toString,$=Z.hasOwnProperty,X=Z.toString,ee=RegExp("^"+Y.call($).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ae=L.Symbol,ne=L.Uint8Array,ie=Z.propertyIsEnumerable,re=U.splice,te=(F=Object.keys,J=Object,function(e){return F(J(e))}),oe=Ke(L,"DataView"),se=Ke(L,"Map"),le=Ke(L,"Promise"),ue=Ke(L,"Set"),ce=Ke(L,"WeakMap"),de=Ke(Object,"create"),he=Fe(oe),pe=Fe(se),me=Fe(le),fe=Fe(ue),ve=Fe(ce),ge=ae?ae.prototype:void 0,ke=ge?ge.valueOf:void 0,ye=ge?ge.toString:void 0
function be(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Se(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Ae(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Me(e){var a=-1,n=e?e.length:0
for(this.__data__=new Ae;++a<n;)this.add(e[a])}function Te(e){this.__data__=new Se(e)}function _e(e,a){for(var n=e.length;n--;)if(Ue(e[n][0],a))return n
return-1}be.prototype.clear=function(){this.__data__=de?de(null):{}},be.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},be.prototype.get=function(e){var a=this.__data__
if(de){var n=a[e]
return n===i?void 0:n}return $.call(a,e)?a[e]:void 0},be.prototype.has=function(e){var a=this.__data__
return de?void 0!==a[e]:$.call(a,e)},be.prototype.set=function(e,a){return this.__data__[e]=de&&void 0===a?i:a,this},Se.prototype.clear=function(){this.__data__=[]},Se.prototype.delete=function(e){var a=this.__data__,n=_e(a,e)
return!(n<0||(n==a.length-1?a.pop():re.call(a,n,1),0))},Se.prototype.get=function(e){var a=this.__data__,n=_e(a,e)
return n<0?void 0:a[n][1]},Se.prototype.has=function(e){return _e(this.__data__,e)>-1},Se.prototype.set=function(e,a){var n=this.__data__,i=_e(n,e)
return i<0?n.push([e,a]):n[i][1]=a,this},Ae.prototype.clear=function(){this.__data__={hash:new be,map:new(se||Se),string:new be}},Ae.prototype.delete=function(e){return Ce(this,e).delete(e)},Ae.prototype.get=function(e){return Ce(this,e).get(e)},Ae.prototype.has=function(e){return Ce(this,e).has(e)},Ae.prototype.set=function(e,a){return Ce(this,e).set(e,a),this},Me.prototype.add=Me.prototype.push=function(e){return this.__data__.set(e,i),this},Me.prototype.has=function(e){return this.__data__.has(e)},Te.prototype.clear=function(){this.__data__=new Se},Te.prototype.delete=function(e){return this.__data__.delete(e)},Te.prototype.get=function(e){return this.__data__.get(e)},Te.prototype.has=function(e){return this.__data__.has(e)},Te.prototype.set=function(e,a){var n=this.__data__
if(n instanceof Se){var i=n.__data__
if(!se||i.length<199)return i.push([e,a]),this
n=this.__data__=new Ae(i)}return n.set(e,a),this}
var we,je=(we=function(e,a){return e&&Ee(e,a,na)},function(e,a){if(null==e)return e
if(!qe(e))return we(e,a)
for(var n=e.length,i=-1,r=Object(e);++i<n&&!1!==a(r[i],i,r););return e}),Ee=function(e,a,n){for(var i=-1,r=Object(e),t=n(e),o=t.length;o--;){var s=t[++i]
if(!1===a(r[s],s,r))break}return e}
function Ne(e,a){for(var n=0,i=(a=Oe(a,e)?[a]:De(a)).length;null!=e&&n<i;)e=e[He(a[n++])]
return n&&n==i?e:void 0}function Be(e,a){return null!=e&&a in Object(e)}function Pe(e,a,n,i,r){return e===a||(null==e||null==a||!$e(e)&&!Xe(a)?e!=e&&a!=a:function(e,a,n,i,r,c){var m=Ze(e),y=Ze(a),A=o,M=o
m||(A=(A=Re(e))==t?p:A),y||(M=(M=Re(a))==t?p:M)
var T=A==p&&!I(e),_=M==p&&!I(a),w=A==M
if(w&&!T)return c||(c=new Te),m||aa(e)?xe(e,a,n,i,r,c):function(e,a,n,i,r,t,o){switch(n){case S:if(e.byteLength!=a.byteLength||e.byteOffset!=a.byteOffset)return!1
e=e.buffer,a=a.buffer
case b:return!(e.byteLength!=a.byteLength||!i(new ne(e),new ne(a)))
case s:case l:case h:return Ue(+e,+a)
case u:return e.name==a.name&&e.message==a.message
case f:case g:return e==a+""
case d:var c=V
case v:var p=2&t
if(c||(c=G),e.size!=a.size&&!p)return!1
var m=o.get(e)
if(m)return m==a
t|=1,o.set(e,a)
var y=xe(c(e),c(a),i,r,t,o)
return o.delete(e),y
case k:if(ke)return ke.call(e)==ke.call(a)}return!1}(e,a,A,n,i,r,c)
if(!(2&r)){var j=T&&$.call(e,"__wrapped__"),E=_&&$.call(a,"__wrapped__")
if(j||E){var N=j?e.value():e,B=E?a.value():a
return c||(c=new Te),n(N,B,i,r,c)}}return!!w&&(c||(c=new Te),function(e,a,n,i,r,t){var o=2&r,s=na(e),l=s.length
if(l!=na(a).length&&!o)return!1
for(var u=l;u--;){var c=s[u]
if(!(o?c in a:$.call(a,c)))return!1}var d=t.get(e)
if(d&&t.get(a))return d==a
var h=!0
t.set(e,a),t.set(a,e)
for(var p=o;++u<l;){var m=e[c=s[u]],f=a[c]
if(i)var v=o?i(f,m,c,a,e,t):i(m,f,c,e,a,t)
if(!(void 0===v?m===f||n(m,f,i,r,t):v)){h=!1
break}p||(p="constructor"==c)}if(h&&!p){var g=e.constructor,k=a.constructor
g==k||!("constructor"in e)||!("constructor"in a)||"function"==typeof g&&g instanceof g&&"function"==typeof k&&k instanceof k||(h=!1)}return t.delete(e),t.delete(a),h}(e,a,n,i,r,c))}(e,a,Pe,n,i,r))}function Le(e,a){var n=-1,i=qe(e)?Array(e.length):[]
return je(e,(function(e,r,t){i[++n]=a(e,r,t)})),i}function De(e){return Ze(e)?e:Ge(e)}function xe(e,a,n,i,r,t){var o=2&r,s=e.length,l=a.length
if(s!=l&&!(o&&l>s))return!1
var u=t.get(e)
if(u&&t.get(a))return u==a
var c=-1,d=!0,h=1&r?new Me:void 0
for(t.set(e,a),t.set(a,e);++c<s;){var p=e[c],m=a[c]
if(i)var f=o?i(m,p,c,a,e,t):i(p,m,c,e,a,t)
if(void 0!==f){if(f)continue
d=!1
break}if(h){if(!O(a,(function(e,a){if(!h.has(a)&&(p===e||n(p,e,i,r,t)))return h.add(a)}))){d=!1
break}}else if(p!==m&&!n(p,m,i,r,t)){d=!1
break}}return t.delete(e),t.delete(a),d}function Ce(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function Ke(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){return!(!$e(e)||function(e){return!!Q&&Q in e}(e))&&(Qe(e)||I(e)?ee:j).test(Fe(e))}(n)?n:void 0}var Re=function(e){return X.call(e)}
function ze(e,a){return!!(a=null==a?r:a)&&("number"==typeof e||E.test(e))&&e>-1&&e%1==0&&e<a}function Oe(e,a){if(Ze(e))return!1
var n=typeof e
return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!ea(e))||M.test(e)||!A.test(e)||null!=a&&e in Object(a)}function Ie(e){return e==e&&!$e(e)}function Ve(e,a){return function(n){return null!=n&&n[e]===a&&(void 0!==a||e in Object(n))}}(oe&&Re(new oe(new ArrayBuffer(1)))!=S||se&&Re(new se)!=d||le&&Re(le.resolve())!=m||ue&&Re(new ue)!=v||ce&&Re(new ce)!=y)&&(Re=function(e){var a=X.call(e),n=a==p?e.constructor:void 0,i=n?Fe(n):void 0
if(i)switch(i){case he:return S
case pe:return d
case me:return m
case fe:return v
case ve:return y}return a})
var Ge=Je((function(e){var a
e=null==(a=e)?"":function(e){if("string"==typeof e)return e
if(ea(e))return ye?ye.call(e):""
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}(a)
var n=[]
return T.test(e)&&n.push(""),e.replace(_,(function(e,a,i,r){n.push(i?r.replace(w,"$1"):a||e)})),n}))
function He(e){if("string"==typeof e||ea(e))return e
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}function Fe(e){if(null!=e){try{return Y.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Je(e,a){if("function"!=typeof e||a&&"function"!=typeof a)throw new TypeError("Expected a function")
var n=function(){var i=arguments,r=a?a.apply(this,i):i[0],t=n.cache
if(t.has(r))return t.get(r)
var o=e.apply(this,i)
return n.cache=t.set(r,o),o}
return n.cache=new(Je.Cache||Ae),n}function Ue(e,a){return e===a||e!=e&&a!=a}function We(e){return function(e){return Xe(e)&&qe(e)}(e)&&$.call(e,"callee")&&(!ie.call(e,"callee")||X.call(e)==t)}Je.Cache=Ae
var Ze=Array.isArray
function qe(e){return null!=e&&Ye(e.length)&&!Qe(e)}function Qe(e){var a=$e(e)?X.call(e):""
return a==c||"[object GeneratorFunction]"==a}function Ye(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=r}function $e(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}function Xe(e){return!!e&&"object"==typeof e}function ea(e){return"symbol"==typeof e||Xe(e)&&X.call(e)==k}var aa=R?function(e){return function(a){return e(a)}}(R):function(e){return Xe(e)&&Ye(e.length)&&!!N[X.call(e)]}
function na(e){return qe(e)?function(e,a){var n=Ze(e)||We(e)?function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}(e.length,String):[],i=n.length,r=!!i
for(var t in e)!$.call(e,t)||r&&("length"==t||ze(t,i))||n.push(t)
return n}(e):function(e){if(n=(a=e)&&a.constructor,a!==("function"==typeof n&&n.prototype||Z))return te(e)
var a,n,i=[]
for(var r in Object(e))$.call(e,r)&&"constructor"!=r&&i.push(r)
return i}(e)}function ia(e){return e}e.exports=function(e,a){return(Ze(e)?z:Le)(e,"function"==typeof(n=a)?n:null==n?ia:"object"==typeof n?Ze(n)?function(e,a){return Oe(e)&&Ie(a)?Ve(He(e),a):function(n){var i=function(e,a,n){var i=null==e?void 0:Ne(e,a)
return void 0===i?void 0:i}(n,e)
return void 0===i&&i===a?function(e,a){return null!=e&&function(e,a,n){for(var i,r=-1,t=(a=Oe(a,e)?[a]:De(a)).length;++r<t;){var o=He(a[r])
if(!(i=null!=e&&n(e,o)))break
e=e[o]}return i||!!(t=e?e.length:0)&&Ye(t)&&ze(o,t)&&(Ze(e)||We(e))}(e,a,Be)}(n,e):Pe(a,i,void 0,3)}}(n[0],n[1]):(r=function(e){for(var a=na(e),n=a.length;n--;){var i=a[n],r=e[i]
a[n]=[i,r,Ie(r)]}return a}(i=n),1==r.length&&r[0][2]?Ve(r[0][0],r[0][1]):function(e){return e===i||function(e,a,n,i){var r=n.length,t=r
if(null==e)return!t
for(e=Object(e);r--;){var o=n[r]
if(o[2]?o[1]!==e[o[0]]:!(o[0]in e))return!1}for(;++r<t;){var s=(o=n[r])[0],l=e[s],u=o[1]
if(o[2]){if(void 0===l&&!(s in e))return!1}else if(!Pe(u,l,undefined,3,new Te))return!1}return!0}(e,0,r)}):Oe(t=n)?(o=He(t),function(e){return null==e?void 0:e[o]}):function(e){return function(a){return Ne(a,e)}}(t))
var n,i,r,t,o}},3660:(e,a,n)=>{e=n.nmd(e)
var i="__lodash_hash_undefined__",r=9007199254740991,t="[object Arguments]",o="[object Array]",s="[object Boolean]",l="[object Date]",u="[object Error]",c="[object Function]",d="[object Map]",h="[object Number]",p="[object Object]",m="[object Promise]",f="[object RegExp]",v="[object Set]",g="[object String]",k="[object Symbol]",y="[object WeakMap]",b="[object ArrayBuffer]",S="[object DataView]",A=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,M=/^\w*$/,T=/^\./,_=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,w=/\\(\\)?/g,j=/^\[object .+?Constructor\]$/,E=/^(?:0|[1-9]\d*)$/,N={}
N["[object Float32Array]"]=N["[object Float64Array]"]=N["[object Int8Array]"]=N["[object Int16Array]"]=N["[object Int32Array]"]=N["[object Uint8Array]"]=N["[object Uint8ClampedArray]"]=N["[object Uint16Array]"]=N["[object Uint32Array]"]=!0,N[t]=N[o]=N[b]=N[s]=N[S]=N[l]=N[u]=N[c]=N[d]=N[h]=N[p]=N[f]=N[v]=N[g]=N[y]=!1
var B="object"==typeof global&&global&&global.Object===Object&&global,P="object"==typeof self&&self&&self.Object===Object&&self,L=B||P||Function("return this")(),D=a&&!a.nodeType&&a,x=D&&e&&!e.nodeType&&e,C=x&&x.exports===D&&B.process,K=function(){try{return C&&C.binding("util")}catch(e){}}(),R=K&&K.isTypedArray
function z(e,a){for(var n=-1,i=e?e.length:0;++n<i;)if(a(e[n],n,e))return!0
return!1}function O(e){var a=!1
if(null!=e&&"function"!=typeof e.toString)try{a=!!(e+"")}catch(e){}return a}function I(e){var a=-1,n=Array(e.size)
return e.forEach((function(e,i){n[++a]=[i,e]})),n}function V(e){var a=-1,n=Array(e.size)
return e.forEach((function(e){n[++a]=e})),n}var G,H,F,J=Array.prototype,U=Function.prototype,W=Object.prototype,Z=L["__core-js_shared__"],q=(G=/[^.]+$/.exec(Z&&Z.keys&&Z.keys.IE_PROTO||""))?"Symbol(src)_1."+G:"",Q=U.toString,Y=W.hasOwnProperty,$=W.toString,X=RegExp("^"+Q.call(Y).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ee=L.Symbol,ae=L.Uint8Array,ne=W.propertyIsEnumerable,ie=J.splice,re=(H=Object.keys,F=Object,function(e){return H(F(e))}),te=Pe(L,"DataView"),oe=Pe(L,"Map"),se=Pe(L,"Promise"),le=Pe(L,"Set"),ue=Pe(L,"WeakMap"),ce=Pe(Object,"create"),de=Oe(te),he=Oe(oe),pe=Oe(se),me=Oe(le),fe=Oe(ue),ve=ee?ee.prototype:void 0,ge=ve?ve.valueOf:void 0,ke=ve?ve.toString:void 0
function ye(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function be(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Se(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Ae(e){var a=-1,n=e?e.length:0
for(this.__data__=new Se;++a<n;)this.add(e[a])}function Me(e){this.__data__=new be(e)}function Te(e,a){for(var n=e.length;n--;)if(Ve(e[n][0],a))return n
return-1}function _e(e,a){for(var n=0,i=(a=xe(a,e)?[a]:Ee(a)).length;null!=e&&n<i;)e=e[ze(a[n++])]
return n&&n==i?e:void 0}function we(e,a){return null!=e&&a in Object(e)}function je(e,a,n,i,r){return e===a||(null==e||null==a||!We(e)&&!Ze(a)?e!=e&&a!=a:function(e,a,n,i,r,c){var m=He(e),y=He(a),A=o,M=o
m||(A=(A=Le(e))==t?p:A),y||(M=(M=Le(a))==t?p:M)
var T=A==p&&!O(e),_=M==p&&!O(a),w=A==M
if(w&&!T)return c||(c=new Me),m||Qe(e)?Ne(e,a,n,i,r,c):function(e,a,n,i,r,t,o){switch(n){case S:if(e.byteLength!=a.byteLength||e.byteOffset!=a.byteOffset)return!1
e=e.buffer,a=a.buffer
case b:return!(e.byteLength!=a.byteLength||!i(new ae(e),new ae(a)))
case s:case l:case h:return Ve(+e,+a)
case u:return e.name==a.name&&e.message==a.message
case f:case g:return e==a+""
case d:var c=I
case v:var p=2&t
if(c||(c=V),e.size!=a.size&&!p)return!1
var m=o.get(e)
if(m)return m==a
t|=1,o.set(e,a)
var y=Ne(c(e),c(a),i,r,t,o)
return o.delete(e),y
case k:if(ge)return ge.call(e)==ge.call(a)}return!1}(e,a,A,n,i,r,c)
if(!(2&r)){var j=T&&Y.call(e,"__wrapped__"),E=_&&Y.call(a,"__wrapped__")
if(j||E){var N=j?e.value():e,B=E?a.value():a
return c||(c=new Me),n(N,B,i,r,c)}}return!!w&&(c||(c=new Me),function(e,a,n,i,r,t){var o=2&r,s=Ye(e),l=s.length
if(l!=Ye(a).length&&!o)return!1
for(var u=l;u--;){var c=s[u]
if(!(o?c in a:Y.call(a,c)))return!1}var d=t.get(e)
if(d&&t.get(a))return d==a
var h=!0
t.set(e,a),t.set(a,e)
for(var p=o;++u<l;){var m=e[c=s[u]],f=a[c]
if(i)var v=o?i(f,m,c,a,e,t):i(m,f,c,e,a,t)
if(!(void 0===v?m===f||n(m,f,i,r,t):v)){h=!1
break}p||(p="constructor"==c)}if(h&&!p){var g=e.constructor,k=a.constructor
g==k||!("constructor"in e)||!("constructor"in a)||"function"==typeof g&&g instanceof g&&"function"==typeof k&&k instanceof k||(h=!1)}return t.delete(e),t.delete(a),h}(e,a,n,i,r,c))}(e,a,je,n,i,r))}function Ee(e){return He(e)?e:Re(e)}function Ne(e,a,n,i,r,t){var o=2&r,s=e.length,l=a.length
if(s!=l&&!(o&&l>s))return!1
var u=t.get(e)
if(u&&t.get(a))return u==a
var c=-1,d=!0,h=1&r?new Ae:void 0
for(t.set(e,a),t.set(a,e);++c<s;){var p=e[c],m=a[c]
if(i)var f=o?i(m,p,c,a,e,t):i(p,m,c,e,a,t)
if(void 0!==f){if(f)continue
d=!1
break}if(h){if(!z(a,(function(e,a){if(!h.has(a)&&(p===e||n(p,e,i,r,t)))return h.add(a)}))){d=!1
break}}else if(p!==m&&!n(p,m,i,r,t)){d=!1
break}}return t.delete(e),t.delete(a),d}function Be(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function Pe(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){return!(!We(e)||function(e){return!!q&&q in e}(e))&&(Je(e)||O(e)?X:j).test(Oe(e))}(n)?n:void 0}ye.prototype.clear=function(){this.__data__=ce?ce(null):{}},ye.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},ye.prototype.get=function(e){var a=this.__data__
if(ce){var n=a[e]
return n===i?void 0:n}return Y.call(a,e)?a[e]:void 0},ye.prototype.has=function(e){var a=this.__data__
return ce?void 0!==a[e]:Y.call(a,e)},ye.prototype.set=function(e,a){return this.__data__[e]=ce&&void 0===a?i:a,this},be.prototype.clear=function(){this.__data__=[]},be.prototype.delete=function(e){var a=this.__data__,n=Te(a,e)
return!(n<0||(n==a.length-1?a.pop():ie.call(a,n,1),0))},be.prototype.get=function(e){var a=this.__data__,n=Te(a,e)
return n<0?void 0:a[n][1]},be.prototype.has=function(e){return Te(this.__data__,e)>-1},be.prototype.set=function(e,a){var n=this.__data__,i=Te(n,e)
return i<0?n.push([e,a]):n[i][1]=a,this},Se.prototype.clear=function(){this.__data__={hash:new ye,map:new(oe||be),string:new ye}},Se.prototype.delete=function(e){return Be(this,e).delete(e)},Se.prototype.get=function(e){return Be(this,e).get(e)},Se.prototype.has=function(e){return Be(this,e).has(e)},Se.prototype.set=function(e,a){return Be(this,e).set(e,a),this},Ae.prototype.add=Ae.prototype.push=function(e){return this.__data__.set(e,i),this},Ae.prototype.has=function(e){return this.__data__.has(e)},Me.prototype.clear=function(){this.__data__=new be},Me.prototype.delete=function(e){return this.__data__.delete(e)},Me.prototype.get=function(e){return this.__data__.get(e)},Me.prototype.has=function(e){return this.__data__.has(e)},Me.prototype.set=function(e,a){var n=this.__data__
if(n instanceof be){var i=n.__data__
if(!oe||i.length<199)return i.push([e,a]),this
n=this.__data__=new Se(i)}return n.set(e,a),this}
var Le=function(e){return $.call(e)}
function De(e,a){return!!(a=null==a?r:a)&&("number"==typeof e||E.test(e))&&e>-1&&e%1==0&&e<a}function xe(e,a){if(He(e))return!1
var n=typeof e
return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!qe(e))||M.test(e)||!A.test(e)||null!=a&&e in Object(a)}function Ce(e){return e==e&&!We(e)}function Ke(e,a){return function(n){return null!=n&&n[e]===a&&(void 0!==a||e in Object(n))}}(te&&Le(new te(new ArrayBuffer(1)))!=S||oe&&Le(new oe)!=d||se&&Le(se.resolve())!=m||le&&Le(new le)!=v||ue&&Le(new ue)!=y)&&(Le=function(e){var a=$.call(e),n=a==p?e.constructor:void 0,i=n?Oe(n):void 0
if(i)switch(i){case de:return S
case he:return d
case pe:return m
case me:return v
case fe:return y}return a})
var Re=Ie((function(e){var a
e=null==(a=e)?"":function(e){if("string"==typeof e)return e
if(qe(e))return ke?ke.call(e):""
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}(a)
var n=[]
return T.test(e)&&n.push(""),e.replace(_,(function(e,a,i,r){n.push(i?r.replace(w,"$1"):a||e)})),n}))
function ze(e){if("string"==typeof e||qe(e))return e
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}function Oe(e){if(null!=e){try{return Q.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Ie(e,a){if("function"!=typeof e||a&&"function"!=typeof a)throw new TypeError("Expected a function")
var n=function(){var i=arguments,r=a?a.apply(this,i):i[0],t=n.cache
if(t.has(r))return t.get(r)
var o=e.apply(this,i)
return n.cache=t.set(r,o),o}
return n.cache=new(Ie.Cache||Se),n}function Ve(e,a){return e===a||e!=e&&a!=a}function Ge(e){return function(e){return Ze(e)&&Fe(e)}(e)&&Y.call(e,"callee")&&(!ne.call(e,"callee")||$.call(e)==t)}Ie.Cache=Se
var He=Array.isArray
function Fe(e){return null!=e&&Ue(e.length)&&!Je(e)}function Je(e){var a=We(e)?$.call(e):""
return a==c||"[object GeneratorFunction]"==a}function Ue(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=r}function We(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}function Ze(e){return!!e&&"object"==typeof e}function qe(e){return"symbol"==typeof e||Ze(e)&&$.call(e)==k}var Qe=R?function(e){return function(a){return e(a)}}(R):function(e){return Ze(e)&&Ue(e.length)&&!!N[$.call(e)]}
function Ye(e){return Fe(e)?function(e,a){var n=He(e)||Ge(e)?function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}(e.length,String):[],i=n.length,r=!!i
for(var t in e)!Y.call(e,t)||r&&("length"==t||De(t,i))||n.push(t)
return n}(e):function(e){if(n=(a=e)&&a.constructor,a!==("function"==typeof n&&n.prototype||W))return re(e)
var a,n,i=[]
for(var r in Object(e))Y.call(e,r)&&"constructor"!=r&&i.push(r)
return i}(e)}function $e(e){return e}e.exports=function(e,a){var n,i,r,t,o,s={}
return a="function"==typeof(n=a)?n:null==n?$e:"object"==typeof n?He(n)?function(e,a){return xe(e)&&Ce(a)?Ke(ze(e),a):function(n){var i=function(e,a,n){var i=null==e?void 0:_e(e,a)
return void 0===i?void 0:i}(n,e)
return void 0===i&&i===a?function(e,a){return null!=e&&function(e,a,n){for(var i,r=-1,t=(a=xe(a,e)?[a]:Ee(a)).length;++r<t;){var o=ze(a[r])
if(!(i=null!=e&&n(e,o)))break
e=e[o]}return i||!!(t=e?e.length:0)&&Ue(t)&&De(o,t)&&(He(e)||Ge(e))}(e,a,we)}(n,e):je(a,i,void 0,3)}}(n[0],n[1]):(r=function(e){for(var a=Ye(e),n=a.length;n--;){var i=a[n],r=e[i]
a[n]=[i,r,Ce(r)]}return a}(i=n),1==r.length&&r[0][2]?Ke(r[0][0],r[0][1]):function(e){return e===i||function(e,a,n,i){var r=n.length,t=r
if(null==e)return!t
for(e=Object(e);r--;){var o=n[r]
if(o[2]?o[1]!==e[o[0]]:!(o[0]in e))return!1}for(;++r<t;){var s=(o=n[r])[0],l=e[s],u=o[1]
if(o[2]){if(void 0===l&&!(s in e))return!1}else if(!je(u,l,undefined,3,new Me))return!1}return!0}(e,0,r)}):xe(t=n)?(o=ze(t),function(e){return null==e?void 0:e[o]}):function(e){return function(a){return _e(a,e)}}(t),function(e,a){e&&function(e,a,n){for(var i=-1,r=Object(e),t=n(e),o=t.length;o--;){var s=t[++i]
if(!1===a(r[s],s,r))break}}(e,a,Ye)}(e,(function(e,n,i){s[n]=a(e,n,i)})),s}},9202:(e,a,n)=>{e=n.nmd(e)
var i="__lodash_hash_undefined__",r=9007199254740991,t="[object Arguments]",o="[object Function]",s="[object Object]",l=/^\[object .+?Constructor\]$/,u=/^(?:0|[1-9]\d*)$/,c={}
c["[object Float32Array]"]=c["[object Float64Array]"]=c["[object Int8Array]"]=c["[object Int16Array]"]=c["[object Int32Array]"]=c["[object Uint8Array]"]=c["[object Uint8ClampedArray]"]=c["[object Uint16Array]"]=c["[object Uint32Array]"]=!0,c[t]=c["[object Array]"]=c["[object ArrayBuffer]"]=c["[object Boolean]"]=c["[object DataView]"]=c["[object Date]"]=c["[object Error]"]=c[o]=c["[object Map]"]=c["[object Number]"]=c[s]=c["[object RegExp]"]=c["[object Set]"]=c["[object String]"]=c["[object WeakMap]"]=!1
var d="object"==typeof global&&global&&global.Object===Object&&global,h="object"==typeof self&&self&&self.Object===Object&&self,p=d||h||Function("return this")(),m=a&&!a.nodeType&&a,f=m&&e&&!e.nodeType&&e,v=f&&f.exports===m,g=v&&d.process,k=function(){try{return f&&f.require&&f.require("util").types||g&&g.binding&&g.binding("util")}catch(e){}}(),y=k&&k.isTypedArray
function b(e,a,n){switch(n.length){case 0:return e.call(a)
case 1:return e.call(a,n[0])
case 2:return e.call(a,n[0],n[1])
case 3:return e.call(a,n[0],n[1],n[2])}return e.apply(a,n)}var S,A,M,T=Array.prototype,_=Function.prototype,w=Object.prototype,j=p["__core-js_shared__"],E=_.toString,N=w.hasOwnProperty,B=(S=/[^.]+$/.exec(j&&j.keys&&j.keys.IE_PROTO||""))?"Symbol(src)_1."+S:"",P=w.toString,L=E.call(Object),D=RegExp("^"+E.call(N).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),x=v?p.Buffer:void 0,C=p.Symbol,K=p.Uint8Array,R=(x&&x.allocUnsafe,A=Object.getPrototypeOf,M=Object,function(e){return A(M(e))}),z=Object.create,O=w.propertyIsEnumerable,I=T.splice,V=C?C.toStringTag:void 0,G=function(){try{var e=le(Object,"defineProperty")
return e({},"",{}),e}catch(e){}}(),H=x?x.isBuffer:void 0,F=Math.max,J=Date.now,U=le(p,"Map"),W=le(Object,"create"),Z=function(){function e(){}return function(a){if(!be(a))return{}
if(z)return z(a)
e.prototype=a
var n=new e
return e.prototype=void 0,n}}()
function q(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Q(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Y(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function $(e){var a=this.__data__=new Q(e)
this.size=a.size}function X(e,a,n){(void 0!==n&&!pe(e[a],n)||void 0===n&&!(a in e))&&ne(e,a,n)}function ee(e,a,n){var i=e[a]
N.call(e,a)&&pe(i,n)&&(void 0!==n||a in e)||ne(e,a,n)}function ae(e,a){for(var n=e.length;n--;)if(pe(e[n][0],a))return n
return-1}function ne(e,a,n){"__proto__"==a&&G?G(e,a,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[a]=n}function ie(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":V&&V in Object(e)?function(e){var a=N.call(e,V),n=e[V]
try{e[V]=void 0
var i=!0}catch(e){}var r=P.call(e)
return i&&(a?e[V]=n:delete e[V]),r}(e):function(e){return P.call(e)}(e)}function re(e){return Se(e)&&ie(e)==t}function te(e,a,n,i,r){e!==a&&function(e,a,n){for(var i=-1,r=Object(e),t=n(e),o=t.length;o--;){var s=t[++i]
if(!1===a(r[s],s))break}}(a,(function(t,o){if(r||(r=new $),be(t))!function(e,a,n,i,r,t,o){var l=de(e,n),u=de(a,n),c=o.get(u)
if(c)X(e,n,c)
else{var d,h,p,m,f,v=t?t(l,u,n+"",e,a,o):void 0,g=void 0===v
if(g){var k=fe(u),y=!k&&ge(u),b=!k&&!y&&Ae(u)
v=u,k||y||b?fe(l)?v=l:Se(f=l)&&ve(f)?v=function(e,a){var n=-1,i=e.length
for(a||(a=Array(i));++n<i;)a[n]=e[n]
return a}(l):y?(g=!1,v=function(e,a){return e.slice()}(u)):b?(g=!1,m=new(p=(d=u).buffer).constructor(p.byteLength),new K(m).set(new K(p)),h=m,v=new d.constructor(h,d.byteOffset,d.length)):v=[]:function(e){if(!Se(e)||ie(e)!=s)return!1
var a=R(e)
if(null===a)return!0
var n=N.call(a,"constructor")&&a.constructor
return"function"==typeof n&&n instanceof n&&E.call(n)==L}(u)||me(u)?(v=l,me(l)?v=function(e){return function(e,a,n,i){var r=!n
n||(n={})
for(var t=-1,o=a.length;++t<o;){var s=a[t],l=void 0
void 0===l&&(l=e[s]),r?ne(n,s,l):ee(n,s,l)}return n}(e,Me(e))}(l):be(l)&&!ke(l)||(v=function(e){return"function"!=typeof e.constructor||ce(e)?{}:Z(R(e))}(u))):g=!1}g&&(o.set(u,v),r(v,u,i,t,o),o.delete(u)),X(e,n,v)}}(e,a,o,n,te,i,r)
else{var l=i?i(de(e,o),t,o+"",e,a,r):void 0
void 0===l&&(l=t),X(e,o,l)}}),Me)}q.prototype.clear=function(){this.__data__=W?W(null):{},this.size=0},q.prototype.delete=function(e){var a=this.has(e)&&delete this.__data__[e]
return this.size-=a?1:0,a},q.prototype.get=function(e){var a=this.__data__
if(W){var n=a[e]
return n===i?void 0:n}return N.call(a,e)?a[e]:void 0},q.prototype.has=function(e){var a=this.__data__
return W?void 0!==a[e]:N.call(a,e)},q.prototype.set=function(e,a){var n=this.__data__
return this.size+=this.has(e)?0:1,n[e]=W&&void 0===a?i:a,this},Q.prototype.clear=function(){this.__data__=[],this.size=0},Q.prototype.delete=function(e){var a=this.__data__,n=ae(a,e)
return!(n<0||(n==a.length-1?a.pop():I.call(a,n,1),--this.size,0))},Q.prototype.get=function(e){var a=this.__data__,n=ae(a,e)
return n<0?void 0:a[n][1]},Q.prototype.has=function(e){return ae(this.__data__,e)>-1},Q.prototype.set=function(e,a){var n=this.__data__,i=ae(n,e)
return i<0?(++this.size,n.push([e,a])):n[i][1]=a,this},Y.prototype.clear=function(){this.size=0,this.__data__={hash:new q,map:new(U||Q),string:new q}},Y.prototype.delete=function(e){var a=se(this,e).delete(e)
return this.size-=a?1:0,a},Y.prototype.get=function(e){return se(this,e).get(e)},Y.prototype.has=function(e){return se(this,e).has(e)},Y.prototype.set=function(e,a){var n=se(this,e),i=n.size
return n.set(e,a),this.size+=n.size==i?0:1,this},$.prototype.clear=function(){this.__data__=new Q,this.size=0},$.prototype.delete=function(e){var a=this.__data__,n=a.delete(e)
return this.size=a.size,n},$.prototype.get=function(e){return this.__data__.get(e)},$.prototype.has=function(e){return this.__data__.has(e)},$.prototype.set=function(e,a){var n=this.__data__
if(n instanceof Q){var i=n.__data__
if(!U||i.length<199)return i.push([e,a]),this.size=++n.size,this
n=this.__data__=new Y(i)}return n.set(e,a),this.size=n.size,this}
var oe=G?function(e,a){return G(e,"toString",{configurable:!0,enumerable:!1,value:(n=a,function(){return n}),writable:!0})
var n}:we
function se(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function le(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){return!(!be(e)||function(e){return!!B&&B in e}(e))&&(ke(e)?D:l).test(function(e){if(null!=e){try{return E.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}(n)?n:void 0}function ue(e,a){var n=typeof e
return!!(a=null==a?r:a)&&("number"==n||"symbol"!=n&&u.test(e))&&e>-1&&e%1==0&&e<a}function ce(e){var a=e&&e.constructor
return e===("function"==typeof a&&a.prototype||w)}function de(e,a){if(("constructor"!==a||"function"!=typeof e[a])&&"__proto__"!=a)return e[a]}var he=function(e){var a=0,n=0
return function(){var i=J(),r=16-(i-n)
if(n=i,r>0){if(++a>=800)return arguments[0]}else a=0
return e.apply(void 0,arguments)}}(oe)
function pe(e,a){return e===a||e!=e&&a!=a}var me=re(function(){return arguments}())?re:function(e){return Se(e)&&N.call(e,"callee")&&!O.call(e,"callee")},fe=Array.isArray
function ve(e){return null!=e&&ye(e.length)&&!ke(e)}var ge=H||function(){return!1}
function ke(e){if(!be(e))return!1
var a=ie(e)
return a==o||"[object GeneratorFunction]"==a||"[object AsyncFunction]"==a||"[object Proxy]"==a}function ye(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=r}function be(e){var a=typeof e
return null!=e&&("object"==a||"function"==a)}function Se(e){return null!=e&&"object"==typeof e}var Ae=y?function(e){return function(a){return e(a)}}(y):function(e){return Se(e)&&ye(e.length)&&!!c[ie(e)]}
function Me(e){return ve(e)?function(e,a){var n=fe(e),i=!n&&me(e),r=!n&&!i&&ge(e),t=!n&&!i&&!r&&Ae(e),o=n||i||r||t,s=o?function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}(e.length,String):[],l=s.length
for(var u in e)o&&("length"==u||r&&("offset"==u||"parent"==u)||t&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||ue(u,l))||s.push(u)
return s}(e):function(e){if(!be(e))return function(e){var a=[]
if(null!=e)for(var n in Object(e))a.push(n)
return a}(e)
var a=ce(e),n=[]
for(var i in e)("constructor"!=i||!a&&N.call(e,i))&&n.push(i)
return n}(e)}var Te,_e=(Te=function(e,a,n){te(e,a,n)},function(e,a){return he(function(e,a,n){return a=F(void 0===a?e.length-1:a,0),function(){for(var i=arguments,r=-1,t=F(i.length-a,0),o=Array(t);++r<t;)o[r]=i[a+r]
r=-1
for(var s=Array(a+1);++r<a;)s[r]=i[r]
return s[a]=n(o),b(e,this,s)}}(e,void 0,we),e+"")}((function(e,a){var n=-1,i=a.length,r=i>1?a[i-1]:void 0,t=i>2?a[2]:void 0
for(r=Te.length>3&&"function"==typeof r?(i--,r):void 0,t&&function(e,a,n){if(!be(n))return!1
var i=typeof a
return!!("number"==i?ve(n)&&ue(a,n.length):"string"==i&&a in n)&&pe(n[a],e)}(a[0],a[1],t)&&(r=i<3?void 0:r,i=1),e=Object(e);++n<i;){var o=a[n]
o&&Te(e,o,n)}return e})))
function we(e){return e}e.exports=_e},3334:e=>{var a="object"==typeof global&&global&&global.Object===Object&&global,n="object"==typeof self&&self&&self.Object===Object&&self,i=a||n||Function("return this")()
function r(e,a,n){switch(n.length){case 0:return e.call(a)
case 1:return e.call(a,n[0])
case 2:return e.call(a,n[0],n[1])
case 3:return e.call(a,n[0],n[1],n[2])}return e.apply(a,n)}function t(e,a){for(var n=-1,i=a.length,r=e.length;++n<i;)e[r+n]=a[n]
return e}var o=Object.prototype,s=o.hasOwnProperty,l=o.toString,u=i.Symbol,c=o.propertyIsEnumerable,d=u?u.isConcatSpreadable:void 0,h=Math.max
function p(e,a,n,i,r){var o=-1,s=e.length
for(n||(n=m),r||(r=[]);++o<s;){var l=e[o]
a>0&&n(l)?a>1?p(l,a-1,n,i,r):t(r,l):i||(r[r.length]=l)}return r}function m(e){return v(e)||function(e){return function(e){return g(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}(e.length)&&!function(e){var a=function(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}(e)?l.call(e):""
return"[object Function]"==a||"[object GeneratorFunction]"==a}(e)}(e)}(e)&&s.call(e,"callee")&&(!c.call(e,"callee")||"[object Arguments]"==l.call(e))}(e)||!!(d&&e&&e[d])}function f(e){if("string"==typeof e||function(e){return"symbol"==typeof e||g(e)&&"[object Symbol]"==l.call(e)}(e))return e
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}var v=Array.isArray
function g(e){return!!e&&"object"==typeof e}var k,y,b=(k=function(e,a){return null==e?{}:function(e,a){return function(e,a,n){for(var i=-1,r=a.length,t={};++i<r;){var o=a[i],s=e[o]
n(0,o)&&(t[o]=s)}return t}(e=Object(e),a,(function(a,n){return n in e}))}(e,function(e,a){for(var n=-1,i=e?e.length:0,r=Array(i);++n<i;)r[n]=a(e[n],n,e)
return r}(p(a,1),f))},y=h(void 0===y?k.length-1:y,0),function(){for(var e=arguments,a=-1,n=h(e.length-y,0),i=Array(n);++a<n;)i[a]=e[y+a]
a=-1
for(var t=Array(y+1);++a<y;)t[a]=e[a]
return t[y]=i,r(k,this,t)})
e.exports=b},4976:e=>{var a="__lodash_hash_undefined__",n=/^\[object .+?Constructor\]$/,i="object"==typeof global&&global&&global.Object===Object&&global,r="object"==typeof self&&self&&self.Object===Object&&self,t=i||r||Function("return this")()
function o(e,a){return!(!e||!e.length)&&function(e,a,n){if(a!=a)return function(e,a,n,i){for(var r=e.length,t=-1;++t<r;)if(a(e[t],t,e))return t
return-1}(e,s)
for(var i=-1,r=e.length;++i<r;)if(e[i]===a)return i
return-1}(e,a)>-1}function s(e){return e!=e}function l(e,a){return e.has(a)}function u(e){var a=-1,n=Array(e.size)
return e.forEach((function(e){n[++a]=e})),n}var c,d=Array.prototype,h=Function.prototype,p=Object.prototype,m=t["__core-js_shared__"],f=(c=/[^.]+$/.exec(m&&m.keys&&m.keys.IE_PROTO||""))?"Symbol(src)_1."+c:"",v=h.toString,g=p.hasOwnProperty,k=p.toString,y=RegExp("^"+v.call(g).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),b=d.splice,S=P(t,"Map"),A=P(t,"Set"),M=P(Object,"create")
function T(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function _(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function w(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function j(e){var a=-1,n=e?e.length:0
for(this.__data__=new w;++a<n;)this.add(e[a])}function E(e,a){for(var n,i,r=e.length;r--;)if((n=e[r][0])===(i=a)||n!=n&&i!=i)return r
return-1}T.prototype.clear=function(){this.__data__=M?M(null):{}},T.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},T.prototype.get=function(e){var n=this.__data__
if(M){var i=n[e]
return i===a?void 0:i}return g.call(n,e)?n[e]:void 0},T.prototype.has=function(e){var a=this.__data__
return M?void 0!==a[e]:g.call(a,e)},T.prototype.set=function(e,n){return this.__data__[e]=M&&void 0===n?a:n,this},_.prototype.clear=function(){this.__data__=[]},_.prototype.delete=function(e){var a=this.__data__,n=E(a,e)
return!(n<0||(n==a.length-1?a.pop():b.call(a,n,1),0))},_.prototype.get=function(e){var a=this.__data__,n=E(a,e)
return n<0?void 0:a[n][1]},_.prototype.has=function(e){return E(this.__data__,e)>-1},_.prototype.set=function(e,a){var n=this.__data__,i=E(n,e)
return i<0?n.push([e,a]):n[i][1]=a,this},w.prototype.clear=function(){this.__data__={hash:new T,map:new(S||_),string:new T}},w.prototype.delete=function(e){return B(this,e).delete(e)},w.prototype.get=function(e){return B(this,e).get(e)},w.prototype.has=function(e){return B(this,e).has(e)},w.prototype.set=function(e,a){return B(this,e).set(e,a),this},j.prototype.add=j.prototype.push=function(e){return this.__data__.set(e,a),this},j.prototype.has=function(e){return this.__data__.has(e)}
var N=A&&1/u(new A([,-0]))[1]==1/0?function(e){return new A(e)}:function(){}
function B(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function P(e,a){var i=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){if(!L(e)||f&&f in e)return!1
var a=function(e){var a=L(e)?k.call(e):""
return"[object Function]"==a||"[object GeneratorFunction]"==a}(e)||function(e){var a=!1
if(null!=e&&"function"!=typeof e.toString)try{a=!!(e+"")}catch(e){}return a}(e)?y:n
return a.test(function(e){if(null!=e){try{return v.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}(i)?i:void 0}function L(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}e.exports=function(e){return e&&e.length?function(e,a,n){var i=-1,r=o,t=e.length,s=!0,c=[],d=c
if(t>=200){var h=N(e)
if(h)return u(h)
s=!1,r=l,d=new j}else d=c
e:for(;++i<t;){var p=e[i],m=p
if(p=0!==p?p:0,s&&m==m){for(var f=d.length;f--;)if(d[f]===m)continue e
c.push(p)}else r(d,m,undefined)||(d!==c&&d.push(m),c.push(p))}return c}(e):[]}},6510:(e,a,n)=>{e=n.nmd(e)
var i="__lodash_hash_undefined__",r=9007199254740991,t="[object Arguments]",o="[object Array]",s="[object Boolean]",l="[object Date]",u="[object Error]",c="[object Function]",d="[object Map]",h="[object Number]",p="[object Object]",m="[object Promise]",f="[object RegExp]",v="[object Set]",g="[object String]",k="[object Symbol]",y="[object WeakMap]",b="[object ArrayBuffer]",S="[object DataView]",A=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,M=/^\w*$/,T=/^\./,_=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,w=/\\(\\)?/g,j=/^\[object .+?Constructor\]$/,E=/^(?:0|[1-9]\d*)$/,N={}
N["[object Float32Array]"]=N["[object Float64Array]"]=N["[object Int8Array]"]=N["[object Int16Array]"]=N["[object Int32Array]"]=N["[object Uint8Array]"]=N["[object Uint8ClampedArray]"]=N["[object Uint16Array]"]=N["[object Uint32Array]"]=!0,N[t]=N[o]=N[b]=N[s]=N[S]=N[l]=N[u]=N[c]=N[d]=N[h]=N[p]=N[f]=N[v]=N[g]=N[y]=!1
var B="object"==typeof global&&global&&global.Object===Object&&global,P="object"==typeof self&&self&&self.Object===Object&&self,L=B||P||Function("return this")(),D=a&&!a.nodeType&&a,x=D&&e&&!e.nodeType&&e,C=x&&x.exports===D&&B.process,K=function(){try{return C&&C.binding("util")}catch(e){}}(),R=K&&K.isTypedArray
function z(e,a){return!(!e||!e.length)&&function(e,a,n){if(a!=a)return function(e,a,n,i){for(var r=e.length,t=-1;++t<r;)if(a(e[t],t,e))return t
return-1}(e,I)
for(var i=-1,r=e.length;++i<r;)if(e[i]===a)return i
return-1}(e,a)>-1}function O(e,a){for(var n=-1,i=e?e.length:0;++n<i;)if(a(e[n],n,e))return!0
return!1}function I(e){return e!=e}function V(e,a){return e.has(a)}function G(e){var a=!1
if(null!=e&&"function"!=typeof e.toString)try{a=!!(e+"")}catch(e){}return a}function H(e){var a=-1,n=Array(e.size)
return e.forEach((function(e,i){n[++a]=[i,e]})),n}function F(e){var a=-1,n=Array(e.size)
return e.forEach((function(e){n[++a]=e})),n}var J,U,W,Z=Array.prototype,q=Function.prototype,Q=Object.prototype,Y=L["__core-js_shared__"],$=(J=/[^.]+$/.exec(Y&&Y.keys&&Y.keys.IE_PROTO||""))?"Symbol(src)_1."+J:"",X=q.toString,ee=Q.hasOwnProperty,ae=Q.toString,ne=RegExp("^"+X.call(ee).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ie=L.Symbol,re=L.Uint8Array,te=Q.propertyIsEnumerable,oe=Z.splice,se=(U=Object.keys,W=Object,function(e){return U(W(e))}),le=Ce(L,"DataView"),ue=Ce(L,"Map"),ce=Ce(L,"Promise"),de=Ce(L,"Set"),he=Ce(L,"WeakMap"),pe=Ce(Object,"create"),me=He(le),fe=He(ue),ve=He(ce),ge=He(de),ke=He(he),ye=ie?ie.prototype:void 0,be=ye?ye.valueOf:void 0,Se=ye?ye.toString:void 0
function Ae(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Me(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Te(e){var a=-1,n=e?e.length:0
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function _e(e){var a=-1,n=e?e.length:0
for(this.__data__=new Te;++a<n;)this.add(e[a])}function we(e){this.__data__=new Me(e)}function je(e,a){for(var n=e.length;n--;)if(Je(e[n][0],a))return n
return-1}function Ee(e,a){for(var n=0,i=(a=ze(a,e)?[a]:Pe(a)).length;null!=e&&n<i;)e=e[Ge(a[n++])]
return n&&n==i?e:void 0}function Ne(e,a){return null!=e&&a in Object(e)}function Be(e,a,n,i,r){return e===a||(null==e||null==a||!Ye(e)&&!$e(a)?e!=e&&a!=a:function(e,a,n,i,r,c){var m=We(e),y=We(a),A=o,M=o
m||(A=(A=Ke(e))==t?p:A),y||(M=(M=Ke(a))==t?p:M)
var T=A==p&&!G(e),_=M==p&&!G(a),w=A==M
if(w&&!T)return c||(c=new we),m||ea(e)?De(e,a,n,i,r,c):function(e,a,n,i,r,t,o){switch(n){case S:if(e.byteLength!=a.byteLength||e.byteOffset!=a.byteOffset)return!1
e=e.buffer,a=a.buffer
case b:return!(e.byteLength!=a.byteLength||!i(new re(e),new re(a)))
case s:case l:case h:return Je(+e,+a)
case u:return e.name==a.name&&e.message==a.message
case f:case g:return e==a+""
case d:var c=H
case v:var p=2&t
if(c||(c=F),e.size!=a.size&&!p)return!1
var m=o.get(e)
if(m)return m==a
t|=1,o.set(e,a)
var y=De(c(e),c(a),i,r,t,o)
return o.delete(e),y
case k:if(be)return be.call(e)==be.call(a)}return!1}(e,a,A,n,i,r,c)
if(!(2&r)){var j=T&&ee.call(e,"__wrapped__"),E=_&&ee.call(a,"__wrapped__")
if(j||E){var N=j?e.value():e,B=E?a.value():a
return c||(c=new we),n(N,B,i,r,c)}}return!!w&&(c||(c=new we),function(e,a,n,i,r,t){var o=2&r,s=aa(e),l=s.length
if(l!=aa(a).length&&!o)return!1
for(var u=l;u--;){var c=s[u]
if(!(o?c in a:ee.call(a,c)))return!1}var d=t.get(e)
if(d&&t.get(a))return d==a
var h=!0
t.set(e,a),t.set(a,e)
for(var p=o;++u<l;){var m=e[c=s[u]],f=a[c]
if(i)var v=o?i(f,m,c,a,e,t):i(m,f,c,e,a,t)
if(!(void 0===v?m===f||n(m,f,i,r,t):v)){h=!1
break}p||(p="constructor"==c)}if(h&&!p){var g=e.constructor,k=a.constructor
g==k||!("constructor"in e)||!("constructor"in a)||"function"==typeof g&&g instanceof g&&"function"==typeof k&&k instanceof k||(h=!1)}return t.delete(e),t.delete(a),h}(e,a,n,i,r,c))}(e,a,Be,n,i,r))}function Pe(e){return We(e)?e:Ve(e)}Ae.prototype.clear=function(){this.__data__=pe?pe(null):{}},Ae.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Ae.prototype.get=function(e){var a=this.__data__
if(pe){var n=a[e]
return n===i?void 0:n}return ee.call(a,e)?a[e]:void 0},Ae.prototype.has=function(e){var a=this.__data__
return pe?void 0!==a[e]:ee.call(a,e)},Ae.prototype.set=function(e,a){return this.__data__[e]=pe&&void 0===a?i:a,this},Me.prototype.clear=function(){this.__data__=[]},Me.prototype.delete=function(e){var a=this.__data__,n=je(a,e)
return!(n<0||(n==a.length-1?a.pop():oe.call(a,n,1),0))},Me.prototype.get=function(e){var a=this.__data__,n=je(a,e)
return n<0?void 0:a[n][1]},Me.prototype.has=function(e){return je(this.__data__,e)>-1},Me.prototype.set=function(e,a){var n=this.__data__,i=je(n,e)
return i<0?n.push([e,a]):n[i][1]=a,this},Te.prototype.clear=function(){this.__data__={hash:new Ae,map:new(ue||Me),string:new Ae}},Te.prototype.delete=function(e){return xe(this,e).delete(e)},Te.prototype.get=function(e){return xe(this,e).get(e)},Te.prototype.has=function(e){return xe(this,e).has(e)},Te.prototype.set=function(e,a){return xe(this,e).set(e,a),this},_e.prototype.add=_e.prototype.push=function(e){return this.__data__.set(e,i),this},_e.prototype.has=function(e){return this.__data__.has(e)},we.prototype.clear=function(){this.__data__=new Me},we.prototype.delete=function(e){return this.__data__.delete(e)},we.prototype.get=function(e){return this.__data__.get(e)},we.prototype.has=function(e){return this.__data__.has(e)},we.prototype.set=function(e,a){var n=this.__data__
if(n instanceof Me){var i=n.__data__
if(!ue||i.length<199)return i.push([e,a]),this
n=this.__data__=new Te(i)}return n.set(e,a),this}
var Le=de&&1/F(new de([,-0]))[1]==1/0?function(e){return new de(e)}:function(){}
function De(e,a,n,i,r,t){var o=2&r,s=e.length,l=a.length
if(s!=l&&!(o&&l>s))return!1
var u=t.get(e)
if(u&&t.get(a))return u==a
var c=-1,d=!0,h=1&r?new _e:void 0
for(t.set(e,a),t.set(a,e);++c<s;){var p=e[c],m=a[c]
if(i)var f=o?i(m,p,c,a,e,t):i(p,m,c,e,a,t)
if(void 0!==f){if(f)continue
d=!1
break}if(h){if(!O(a,(function(e,a){if(!h.has(a)&&(p===e||n(p,e,i,r,t)))return h.add(a)}))){d=!1
break}}else if(p!==m&&!n(p,m,i,r,t)){d=!1
break}}return t.delete(e),t.delete(a),d}function xe(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function Ce(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return function(e){return!(!Ye(e)||function(e){return!!$&&$ in e}(e))&&(qe(e)||G(e)?ne:j).test(He(e))}(n)?n:void 0}var Ke=function(e){return ae.call(e)}
function Re(e,a){return!!(a=null==a?r:a)&&("number"==typeof e||E.test(e))&&e>-1&&e%1==0&&e<a}function ze(e,a){if(We(e))return!1
var n=typeof e
return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!Xe(e))||M.test(e)||!A.test(e)||null!=a&&e in Object(a)}function Oe(e){return e==e&&!Ye(e)}function Ie(e,a){return function(n){return null!=n&&n[e]===a&&(void 0!==a||e in Object(n))}}(le&&Ke(new le(new ArrayBuffer(1)))!=S||ue&&Ke(new ue)!=d||ce&&Ke(ce.resolve())!=m||de&&Ke(new de)!=v||he&&Ke(new he)!=y)&&(Ke=function(e){var a=ae.call(e),n=a==p?e.constructor:void 0,i=n?He(n):void 0
if(i)switch(i){case me:return S
case fe:return d
case ve:return m
case ge:return v
case ke:return y}return a})
var Ve=Fe((function(e){var a
e=null==(a=e)?"":function(e){if("string"==typeof e)return e
if(Xe(e))return Se?Se.call(e):""
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}(a)
var n=[]
return T.test(e)&&n.push(""),e.replace(_,(function(e,a,i,r){n.push(i?r.replace(w,"$1"):a||e)})),n}))
function Ge(e){if("string"==typeof e||Xe(e))return e
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}function He(e){if(null!=e){try{return X.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Fe(e,a){if("function"!=typeof e||a&&"function"!=typeof a)throw new TypeError("Expected a function")
var n=function(){var i=arguments,r=a?a.apply(this,i):i[0],t=n.cache
if(t.has(r))return t.get(r)
var o=e.apply(this,i)
return n.cache=t.set(r,o),o}
return n.cache=new(Fe.Cache||Te),n}function Je(e,a){return e===a||e!=e&&a!=a}function Ue(e){return function(e){return $e(e)&&Ze(e)}(e)&&ee.call(e,"callee")&&(!te.call(e,"callee")||ae.call(e)==t)}Fe.Cache=Te
var We=Array.isArray
function Ze(e){return null!=e&&Qe(e.length)&&!qe(e)}function qe(e){var a=Ye(e)?ae.call(e):""
return a==c||"[object GeneratorFunction]"==a}function Qe(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=r}function Ye(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}function $e(e){return!!e&&"object"==typeof e}function Xe(e){return"symbol"==typeof e||$e(e)&&ae.call(e)==k}var ea=R?function(e){return function(a){return e(a)}}(R):function(e){return $e(e)&&Qe(e.length)&&!!N[ae.call(e)]}
function aa(e){return Ze(e)?function(e,a){var n=We(e)||Ue(e)?function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}(e.length,String):[],i=n.length,r=!!i
for(var t in e)!ee.call(e,t)||r&&("length"==t||Re(t,i))||n.push(t)
return n}(e):function(e){if(n=(a=e)&&a.constructor,a!==("function"==typeof n&&n.prototype||Q))return se(e)
var a,n,i=[]
for(var r in Object(e))ee.call(e,r)&&"constructor"!=r&&i.push(r)
return i}(e)}function na(e){return e}e.exports=function(e,a){return e&&e.length?function(e,a,n){var i=-1,r=z,t=e.length,o=!0,s=[],l=s
if(t>=200){var u=a?null:Le(e)
if(u)return F(u)
o=!1,r=V,l=new _e}else l=a?[]:s
e:for(;++i<t;){var c=e[i],d=a?a(c):c
if(c=0!==c?c:0,o&&d==d){for(var h=l.length;h--;)if(l[h]===d)continue e
a&&l.push(d),s.push(c)}else r(l,d,undefined)||(l!==s&&l.push(d),s.push(c))}return s}(e,"function"==typeof(n=a)?n:null==n?na:"object"==typeof n?We(n)?function(e,a){return ze(e)&&Oe(a)?Ie(Ge(e),a):function(n){var i=function(e,a,n){var i=null==e?void 0:Ee(e,a)
return void 0===i?void 0:i}(n,e)
return void 0===i&&i===a?function(e,a){return null!=e&&function(e,a,n){for(var i,r=-1,t=(a=ze(a,e)?[a]:Pe(a)).length;++r<t;){var o=Ge(a[r])
if(!(i=null!=e&&n(e,o)))break
e=e[o]}return i||!!(t=e?e.length:0)&&Qe(t)&&Re(o,t)&&(We(e)||Ue(e))}(e,a,Ne)}(n,e):Be(a,i,void 0,3)}}(n[0],n[1]):(r=function(e){for(var a=aa(e),n=a.length;n--;){var i=a[n],r=e[i]
a[n]=[i,r,Oe(r)]}return a}(i=n),1==r.length&&r[0][2]?Ie(r[0][0],r[0][1]):function(e){return e===i||function(e,a,n,i){var r=n.length,t=r
if(null==e)return!t
for(e=Object(e);r--;){var o=n[r]
if(o[2]?o[1]!==e[o[0]]:!(o[0]in e))return!1}for(;++r<t;){var s=(o=n[r])[0],l=e[s],u=o[1]
if(o[2]){if(void 0===l&&!(s in e))return!1}else if(!Be(u,l,undefined,3,new we))return!1}return!0}(e,0,r)}):ze(t=n)?(o=Ge(t),function(e){return null==e?void 0:e[o]}):function(e){return function(a){return Ee(a,e)}}(t)):[]
var n,i,r,t,o}},3178:e=>{var a,n,i=9007199254740991,r=/^(?:0|[1-9]\d*)$/,t=Object.prototype,o=t.hasOwnProperty,s=t.toString,l=t.propertyIsEnumerable,u=(a=Object.keys,n=Object,function(e){return a(n(e))})
function c(e,a){return!!(a=null==a?i:a)&&("number"==typeof e||r.test(e))&&e>-1&&e%1==0&&e<a}var d=Array.isArray
function h(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=i}(e.length)&&!function(e){var a=function(e){var a=typeof e
return!!e&&("object"==a||"function"==a)}(e)?s.call(e):""
return"[object Function]"==a||"[object GeneratorFunction]"==a}(e)}e.exports=function(e){return e?function(e,a){return function(a,n){for(var i=-1,r=a?a.length:0,t=Array(r);++i<r;)t[i]=(o=a[i],e[o])
var o
return t}(a)}(e,function(e){return h(e)?function(e,a){var n=d(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&h(e)}(e)&&o.call(e,"callee")&&(!l.call(e,"callee")||"[object Arguments]"==s.call(e))}(e)?function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}(e.length,String):[],i=n.length,r=!!i
for(var t in e)!o.call(e,t)||r&&("length"==t||c(t,i))||n.push(t)
return n}(e):function(e){if(n=(a=e)&&a.constructor,a!==("function"==typeof n&&n.prototype||t))return u(e)
var a,n,i=[]
for(var r in Object(e))o.call(e,r)&&"constructor"!=r&&i.push(r)
return i}(e)}(e)):[]}},3153:function(e,a,n){var i
e=n.nmd(e),function(){var r,t="Expected a function",o="__lodash_hash_undefined__",s="__lodash_placeholder__",l=32,u=128,c=1/0,d=9007199254740991,h=NaN,p=4294967295,m=[["ary",u],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",l],["partialRight",64],["rearg",256]],f="[object Arguments]",v="[object Array]",g="[object Boolean]",k="[object Date]",y="[object Error]",b="[object Function]",S="[object GeneratorFunction]",A="[object Map]",M="[object Number]",T="[object Object]",_="[object Promise]",w="[object RegExp]",j="[object Set]",E="[object String]",N="[object Symbol]",B="[object WeakMap]",P="[object ArrayBuffer]",L="[object DataView]",D="[object Float32Array]",x="[object Float64Array]",C="[object Int8Array]",K="[object Int16Array]",R="[object Int32Array]",z="[object Uint8Array]",O="[object Uint8ClampedArray]",I="[object Uint16Array]",V="[object Uint32Array]",G=/\b__p \+= '';/g,H=/\b(__p \+=) '' \+/g,F=/(__e\(.*?\)|\b__t\)) \+\n'';/g,J=/&(?:amp|lt|gt|quot|#39);/g,U=/[&<>"']/g,W=RegExp(J.source),Z=RegExp(U.source),q=/<%-([\s\S]+?)%>/g,Q=/<%([\s\S]+?)%>/g,Y=/<%=([\s\S]+?)%>/g,$=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,X=/^\w*$/,ee=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,ae=/[\\^$.*+?()[\]{}|]/g,ne=RegExp(ae.source),ie=/^\s+/,re=/\s/,te=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,oe=/\{\n\/\* \[wrapped with (.+)\] \*/,se=/,? & /,le=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,ue=/[()=,{}\[\]\/\s]/,ce=/\\(\\)?/g,de=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,he=/\w*$/,pe=/^[-+]0x[0-9a-f]+$/i,me=/^0b[01]+$/i,fe=/^\[object .+?Constructor\]$/,ve=/^0o[0-7]+$/i,ge=/^(?:0|[1-9]\d*)$/,ke=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,ye=/($^)/,be=/['\n\r\u2028\u2029\\]/g,Se="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",Ae="a-z\\xdf-\\xf6\\xf8-\\xff",Me="A-Z\\xc0-\\xd6\\xd8-\\xde",Te="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",_e="["+Te+"]",we="["+Se+"]",je="\\d+",Ee="["+Ae+"]",Ne="[^\\ud800-\\udfff"+Te+je+"\\u2700-\\u27bf"+Ae+Me+"]",Be="\\ud83c[\\udffb-\\udfff]",Pe="[^\\ud800-\\udfff]",Le="(?:\\ud83c[\\udde6-\\uddff]){2}",De="[\\ud800-\\udbff][\\udc00-\\udfff]",xe="["+Me+"]",Ce="(?:"+Ee+"|"+Ne+")",Ke="(?:"+xe+"|"+Ne+")",Re="(?:['’](?:d|ll|m|re|s|t|ve))?",ze="(?:['’](?:D|LL|M|RE|S|T|VE))?",Oe="(?:"+we+"|"+Be+")?",Ie="[\\ufe0e\\ufe0f]?",Ve=Ie+Oe+"(?:\\u200d(?:"+[Pe,Le,De].join("|")+")"+Ie+Oe+")*",Ge="(?:"+["[\\u2700-\\u27bf]",Le,De].join("|")+")"+Ve,He="(?:"+[Pe+we+"?",we,Le,De,"[\\ud800-\\udfff]"].join("|")+")",Fe=RegExp("['’]","g"),Je=RegExp(we,"g"),Ue=RegExp(Be+"(?="+Be+")|"+He+Ve,"g"),We=RegExp([xe+"?"+Ee+"+"+Re+"(?="+[_e,xe,"$"].join("|")+")",Ke+"+"+ze+"(?="+[_e,xe+Ce,"$"].join("|")+")",xe+"?"+Ce+"+"+Re,xe+"+"+ze,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",je,Ge].join("|"),"g"),Ze=RegExp("[\\u200d\\ud800-\\udfff"+Se+"\\ufe0e\\ufe0f]"),qe=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Qe=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Ye=-1,$e={}
$e[D]=$e[x]=$e[C]=$e[K]=$e[R]=$e[z]=$e[O]=$e[I]=$e[V]=!0,$e[f]=$e[v]=$e[P]=$e[g]=$e[L]=$e[k]=$e[y]=$e[b]=$e[A]=$e[M]=$e[T]=$e[w]=$e[j]=$e[E]=$e[B]=!1
var Xe={}
Xe[f]=Xe[v]=Xe[P]=Xe[L]=Xe[g]=Xe[k]=Xe[D]=Xe[x]=Xe[C]=Xe[K]=Xe[R]=Xe[A]=Xe[M]=Xe[T]=Xe[w]=Xe[j]=Xe[E]=Xe[N]=Xe[z]=Xe[O]=Xe[I]=Xe[V]=!0,Xe[y]=Xe[b]=Xe[B]=!1
var ea={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},aa=parseFloat,na=parseInt,ia="object"==typeof global&&global&&global.Object===Object&&global,ra="object"==typeof self&&self&&self.Object===Object&&self,ta=ia||ra||Function("return this")(),oa=a&&!a.nodeType&&a,sa=oa&&e&&!e.nodeType&&e,la=sa&&sa.exports===oa,ua=la&&ia.process,ca=function(){try{return sa&&sa.require&&sa.require("util").types||ua&&ua.binding&&ua.binding("util")}catch(e){}}(),da=ca&&ca.isArrayBuffer,ha=ca&&ca.isDate,pa=ca&&ca.isMap,ma=ca&&ca.isRegExp,fa=ca&&ca.isSet,va=ca&&ca.isTypedArray
function ga(e,a,n){switch(n.length){case 0:return e.call(a)
case 1:return e.call(a,n[0])
case 2:return e.call(a,n[0],n[1])
case 3:return e.call(a,n[0],n[1],n[2])}return e.apply(a,n)}function ka(e,a,n,i){for(var r=-1,t=null==e?0:e.length;++r<t;){var o=e[r]
a(i,o,n(o),e)}return i}function ya(e,a){for(var n=-1,i=null==e?0:e.length;++n<i&&!1!==a(e[n],n,e););return e}function ba(e,a){for(var n=null==e?0:e.length;n--&&!1!==a(e[n],n,e););return e}function Sa(e,a){for(var n=-1,i=null==e?0:e.length;++n<i;)if(!a(e[n],n,e))return!1
return!0}function Aa(e,a){for(var n=-1,i=null==e?0:e.length,r=0,t=[];++n<i;){var o=e[n]
a(o,n,e)&&(t[r++]=o)}return t}function Ma(e,a){return!(null==e||!e.length)&&Da(e,a,0)>-1}function Ta(e,a,n){for(var i=-1,r=null==e?0:e.length;++i<r;)if(n(a,e[i]))return!0
return!1}function _a(e,a){for(var n=-1,i=null==e?0:e.length,r=Array(i);++n<i;)r[n]=a(e[n],n,e)
return r}function wa(e,a){for(var n=-1,i=a.length,r=e.length;++n<i;)e[r+n]=a[n]
return e}function ja(e,a,n,i){var r=-1,t=null==e?0:e.length
for(i&&t&&(n=e[++r]);++r<t;)n=a(n,e[r],r,e)
return n}function Ea(e,a,n,i){var r=null==e?0:e.length
for(i&&r&&(n=e[--r]);r--;)n=a(n,e[r],r,e)
return n}function Na(e,a){for(var n=-1,i=null==e?0:e.length;++n<i;)if(a(e[n],n,e))return!0
return!1}var Ba=Ra("length")
function Pa(e,a,n){var i
return n(e,(function(e,n,r){if(a(e,n,r))return i=n,!1})),i}function La(e,a,n,i){for(var r=e.length,t=n+(i?1:-1);i?t--:++t<r;)if(a(e[t],t,e))return t
return-1}function Da(e,a,n){return a==a?function(e,a,n){for(var i=n-1,r=e.length;++i<r;)if(e[i]===a)return i
return-1}(e,a,n):La(e,Ca,n)}function xa(e,a,n,i){for(var r=n-1,t=e.length;++r<t;)if(i(e[r],a))return r
return-1}function Ca(e){return e!=e}function Ka(e,a){var n=null==e?0:e.length
return n?Ia(e,a)/n:h}function Ra(e){return function(a){return null==a?r:a[e]}}function za(e){return function(a){return null==e?r:e[a]}}function Oa(e,a,n,i,r){return r(e,(function(e,r,t){n=i?(i=!1,e):a(n,e,r,t)})),n}function Ia(e,a){for(var n,i=-1,t=e.length;++i<t;){var o=a(e[i])
o!==r&&(n=n===r?o:n+o)}return n}function Va(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i}function Ga(e){return e?e.slice(0,on(e)+1).replace(ie,""):e}function Ha(e){return function(a){return e(a)}}function Fa(e,a){return _a(a,(function(a){return e[a]}))}function Ja(e,a){return e.has(a)}function Ua(e,a){for(var n=-1,i=e.length;++n<i&&Da(a,e[n],0)>-1;);return n}function Wa(e,a){for(var n=e.length;n--&&Da(a,e[n],0)>-1;);return n}function Za(e,a){for(var n=e.length,i=0;n--;)e[n]===a&&++i
return i}var qa=za({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),Qa=za({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"})
function Ya(e){return"\\"+ea[e]}function $a(e){return Ze.test(e)}function Xa(e){var a=-1,n=Array(e.size)
return e.forEach((function(e,i){n[++a]=[i,e]})),n}function en(e,a){return function(n){return e(a(n))}}function an(e,a){for(var n=-1,i=e.length,r=0,t=[];++n<i;){var o=e[n]
o!==a&&o!==s||(e[n]=s,t[r++]=n)}return t}function nn(e){var a=-1,n=Array(e.size)
return e.forEach((function(e){n[++a]=e})),n}function rn(e){return $a(e)?function(e){for(var a=Ue.lastIndex=0;Ue.test(e);)++a
return a}(e):Ba(e)}function tn(e){return $a(e)?function(e){return e.match(Ue)||[]}(e):function(e){return e.split("")}(e)}function on(e){for(var a=e.length;a--&&re.test(e.charAt(a)););return a}var sn=za({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"}),ln=function e(a){var n,i=(a=null==a?ta:ln.defaults(ta.Object(),a,ln.pick(ta,Qe))).Array,re=a.Date,Se=a.Error,Ae=a.Function,Me=a.Math,Te=a.Object,_e=a.RegExp,we=a.String,je=a.TypeError,Ee=i.prototype,Ne=Ae.prototype,Be=Te.prototype,Pe=a["__core-js_shared__"],Le=Ne.toString,De=Be.hasOwnProperty,xe=0,Ce=(n=/[^.]+$/.exec(Pe&&Pe.keys&&Pe.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"",Ke=Be.toString,Re=Le.call(Te),ze=ta._,Oe=_e("^"+Le.call(De).replace(ae,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Ie=la?a.Buffer:r,Ve=a.Symbol,Ge=a.Uint8Array,He=Ie?Ie.allocUnsafe:r,Ue=en(Te.getPrototypeOf,Te),Ze=Te.create,ea=Be.propertyIsEnumerable,ia=Ee.splice,ra=Ve?Ve.isConcatSpreadable:r,oa=Ve?Ve.iterator:r,sa=Ve?Ve.toStringTag:r,ua=function(){try{var e=lt(Te,"defineProperty")
return e({},"",{}),e}catch(e){}}(),ca=a.clearTimeout!==ta.clearTimeout&&a.clearTimeout,Ba=re&&re.now!==ta.Date.now&&re.now,za=a.setTimeout!==ta.setTimeout&&a.setTimeout,un=Me.ceil,cn=Me.floor,dn=Te.getOwnPropertySymbols,hn=Ie?Ie.isBuffer:r,pn=a.isFinite,mn=Ee.join,fn=en(Te.keys,Te),vn=Me.max,gn=Me.min,kn=re.now,yn=a.parseInt,bn=Me.random,Sn=Ee.reverse,An=lt(a,"DataView"),Mn=lt(a,"Map"),Tn=lt(a,"Promise"),_n=lt(a,"Set"),wn=lt(a,"WeakMap"),jn=lt(Te,"create"),En=wn&&new wn,Nn={},Bn=Rt(An),Pn=Rt(Mn),Ln=Rt(Tn),Dn=Rt(_n),xn=Rt(wn),Cn=Ve?Ve.prototype:r,Kn=Cn?Cn.valueOf:r,Rn=Cn?Cn.toString:r
function zn(e){if(as(e)&&!Fo(e)&&!(e instanceof Gn)){if(e instanceof Vn)return e
if(De.call(e,"__wrapped__"))return zt(e)}return new Vn(e)}var On=function(){function e(){}return function(a){if(!es(a))return{}
if(Ze)return Ze(a)
e.prototype=a
var n=new e
return e.prototype=r,n}}()
function In(){}function Vn(e,a){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!a,this.__index__=0,this.__values__=r}function Gn(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=p,this.__views__=[]}function Hn(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Fn(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Jn(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}function Un(e){var a=-1,n=null==e?0:e.length
for(this.__data__=new Jn;++a<n;)this.add(e[a])}function Wn(e){var a=this.__data__=new Fn(e)
this.size=a.size}function Zn(e,a){var n=Fo(e),i=!n&&Ho(e),r=!n&&!i&&Zo(e),t=!n&&!i&&!r&&us(e),o=n||i||r||t,s=o?Va(e.length,we):[],l=s.length
for(var u in e)!a&&!De.call(e,u)||o&&("length"==u||r&&("offset"==u||"parent"==u)||t&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||ft(u,l))||s.push(u)
return s}function qn(e){var a=e.length
return a?e[Ji(0,a-1)]:r}function Qn(e,a){return Lt(wr(e),ti(a,0,e.length))}function Yn(e){return Lt(wr(e))}function $n(e,a,n){(n!==r&&!Io(e[a],n)||n===r&&!(a in e))&&ii(e,a,n)}function Xn(e,a,n){var i=e[a]
De.call(e,a)&&Io(i,n)&&(n!==r||a in e)||ii(e,a,n)}function ei(e,a){for(var n=e.length;n--;)if(Io(e[n][0],a))return n
return-1}function ai(e,a,n,i){return ci(e,(function(e,r,t){a(i,e,n(e),t)})),i}function ni(e,a){return e&&jr(a,Ps(a),e)}function ii(e,a,n){"__proto__"==a&&ua?ua(e,a,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[a]=n}function ri(e,a){for(var n=-1,t=a.length,o=i(t),s=null==e;++n<t;)o[n]=s?r:ws(e,a[n])
return o}function ti(e,a,n){return e==e&&(n!==r&&(e=e<=n?e:n),a!==r&&(e=e>=a?e:a)),e}function oi(e,a,n,i,t,o){var s,l=1&a,u=2&a,c=4&a
if(n&&(s=t?n(e,i,t,o):n(e)),s!==r)return s
if(!es(e))return e
var d=Fo(e)
if(d){if(s=function(e){var a=e.length,n=new e.constructor(a)
return a&&"string"==typeof e[0]&&De.call(e,"index")&&(n.index=e.index,n.input=e.input),n}(e),!l)return wr(e,s)}else{var h=dt(e),p=h==b||h==S
if(Zo(e))return br(e,l)
if(h==T||h==f||p&&!t){if(s=u||p?{}:pt(e),!l)return u?function(e,a){return jr(e,ct(e),a)}(e,function(e,a){return e&&jr(a,Ls(a),e)}(s,e)):function(e,a){return jr(e,ut(e),a)}(e,ni(s,e))}else{if(!Xe[h])return t?e:{}
s=function(e,a,n){var i,r=e.constructor
switch(a){case P:return Sr(e)
case g:case k:return new r(+e)
case L:return function(e,a){var n=a?Sr(e.buffer):e.buffer
return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n)
case D:case x:case C:case K:case R:case z:case O:case I:case V:return Ar(e,n)
case A:return new r
case M:case E:return new r(e)
case w:return function(e){var a=new e.constructor(e.source,he.exec(e))
return a.lastIndex=e.lastIndex,a}(e)
case j:return new r
case N:return i=e,Kn?Te(Kn.call(i)):{}}}(e,h,l)}}o||(o=new Wn)
var m=o.get(e)
if(m)return m
o.set(e,s),os(e)?e.forEach((function(i){s.add(oi(i,a,n,i,e,o))})):ns(e)&&e.forEach((function(i,r){s.set(r,oi(i,a,n,r,e,o))}))
var v=d?r:(c?u?at:et:u?Ls:Ps)(e)
return ya(v||e,(function(i,r){v&&(i=e[r=i]),Xn(s,r,oi(i,a,n,r,e,o))})),s}function si(e,a,n){var i=n.length
if(null==e)return!i
for(e=Te(e);i--;){var t=n[i],o=a[t],s=e[t]
if(s===r&&!(t in e)||!o(s))return!1}return!0}function li(e,a,n){if("function"!=typeof e)throw new je(t)
return Et((function(){e.apply(r,n)}),a)}function ui(e,a,n,i){var r=-1,t=Ma,o=!0,s=e.length,l=[],u=a.length
if(!s)return l
n&&(a=_a(a,Ha(n))),i?(t=Ta,o=!1):a.length>=200&&(t=Ja,o=!1,a=new Un(a))
e:for(;++r<s;){var c=e[r],d=null==n?c:n(c)
if(c=i||0!==c?c:0,o&&d==d){for(var h=u;h--;)if(a[h]===d)continue e
l.push(c)}else t(a,d,i)||l.push(c)}return l}zn.templateSettings={escape:q,evaluate:Q,interpolate:Y,variable:"",imports:{_:zn}},zn.prototype=In.prototype,zn.prototype.constructor=zn,Vn.prototype=On(In.prototype),Vn.prototype.constructor=Vn,Gn.prototype=On(In.prototype),Gn.prototype.constructor=Gn,Hn.prototype.clear=function(){this.__data__=jn?jn(null):{},this.size=0},Hn.prototype.delete=function(e){var a=this.has(e)&&delete this.__data__[e]
return this.size-=a?1:0,a},Hn.prototype.get=function(e){var a=this.__data__
if(jn){var n=a[e]
return n===o?r:n}return De.call(a,e)?a[e]:r},Hn.prototype.has=function(e){var a=this.__data__
return jn?a[e]!==r:De.call(a,e)},Hn.prototype.set=function(e,a){var n=this.__data__
return this.size+=this.has(e)?0:1,n[e]=jn&&a===r?o:a,this},Fn.prototype.clear=function(){this.__data__=[],this.size=0},Fn.prototype.delete=function(e){var a=this.__data__,n=ei(a,e)
return!(n<0||(n==a.length-1?a.pop():ia.call(a,n,1),--this.size,0))},Fn.prototype.get=function(e){var a=this.__data__,n=ei(a,e)
return n<0?r:a[n][1]},Fn.prototype.has=function(e){return ei(this.__data__,e)>-1},Fn.prototype.set=function(e,a){var n=this.__data__,i=ei(n,e)
return i<0?(++this.size,n.push([e,a])):n[i][1]=a,this},Jn.prototype.clear=function(){this.size=0,this.__data__={hash:new Hn,map:new(Mn||Fn),string:new Hn}},Jn.prototype.delete=function(e){var a=ot(this,e).delete(e)
return this.size-=a?1:0,a},Jn.prototype.get=function(e){return ot(this,e).get(e)},Jn.prototype.has=function(e){return ot(this,e).has(e)},Jn.prototype.set=function(e,a){var n=ot(this,e),i=n.size
return n.set(e,a),this.size+=n.size==i?0:1,this},Un.prototype.add=Un.prototype.push=function(e){return this.__data__.set(e,o),this},Un.prototype.has=function(e){return this.__data__.has(e)},Wn.prototype.clear=function(){this.__data__=new Fn,this.size=0},Wn.prototype.delete=function(e){var a=this.__data__,n=a.delete(e)
return this.size=a.size,n},Wn.prototype.get=function(e){return this.__data__.get(e)},Wn.prototype.has=function(e){return this.__data__.has(e)},Wn.prototype.set=function(e,a){var n=this.__data__
if(n instanceof Fn){var i=n.__data__
if(!Mn||i.length<199)return i.push([e,a]),this.size=++n.size,this
n=this.__data__=new Jn(i)}return n.set(e,a),this.size=n.size,this}
var ci=Br(ki),di=Br(yi,!0)
function hi(e,a){var n=!0
return ci(e,(function(e,i,r){return n=!!a(e,i,r)})),n}function pi(e,a,n){for(var i=-1,t=e.length;++i<t;){var o=e[i],s=a(o)
if(null!=s&&(l===r?s==s&&!ls(s):n(s,l)))var l=s,u=o}return u}function mi(e,a){var n=[]
return ci(e,(function(e,i,r){a(e,i,r)&&n.push(e)})),n}function fi(e,a,n,i,r){var t=-1,o=e.length
for(n||(n=mt),r||(r=[]);++t<o;){var s=e[t]
a>0&&n(s)?a>1?fi(s,a-1,n,i,r):wa(r,s):i||(r[r.length]=s)}return r}var vi=Pr(),gi=Pr(!0)
function ki(e,a){return e&&vi(e,a,Ps)}function yi(e,a){return e&&gi(e,a,Ps)}function bi(e,a){return Aa(a,(function(a){return Yo(e[a])}))}function Si(e,a){for(var n=0,i=(a=vr(a,e)).length;null!=e&&n<i;)e=e[Kt(a[n++])]
return n&&n==i?e:r}function Ai(e,a,n){var i=a(e)
return Fo(e)?i:wa(i,n(e))}function Mi(e){return null==e?e===r?"[object Undefined]":"[object Null]":sa&&sa in Te(e)?function(e){var a=De.call(e,sa),n=e[sa]
try{e[sa]=r
var i=!0}catch(e){}var t=Ke.call(e)
return i&&(a?e[sa]=n:delete e[sa]),t}(e):function(e){return Ke.call(e)}(e)}function Ti(e,a){return e>a}function _i(e,a){return null!=e&&De.call(e,a)}function wi(e,a){return null!=e&&a in Te(e)}function ji(e,a,n){for(var t=n?Ta:Ma,o=e[0].length,s=e.length,l=s,u=i(s),c=1/0,d=[];l--;){var h=e[l]
l&&a&&(h=_a(h,Ha(a))),c=gn(h.length,c),u[l]=!n&&(a||o>=120&&h.length>=120)?new Un(l&&h):r}h=e[0]
var p=-1,m=u[0]
e:for(;++p<o&&d.length<c;){var f=h[p],v=a?a(f):f
if(f=n||0!==f?f:0,!(m?Ja(m,v):t(d,v,n))){for(l=s;--l;){var g=u[l]
if(!(g?Ja(g,v):t(e[l],v,n)))continue e}m&&m.push(v),d.push(f)}}return d}function Ei(e,a,n){var i=null==(e=Tt(e,a=vr(a,e)))?e:e[Kt(qt(a))]
return null==i?r:ga(i,e,n)}function Ni(e){return as(e)&&Mi(e)==f}function Bi(e,a,n,i,t){return e===a||(null==e||null==a||!as(e)&&!as(a)?e!=e&&a!=a:function(e,a,n,i,t,o){var s=Fo(e),l=Fo(a),u=s?v:dt(e),c=l?v:dt(a),d=(u=u==f?T:u)==T,h=(c=c==f?T:c)==T,p=u==c
if(p&&Zo(e)){if(!Zo(a))return!1
s=!0,d=!1}if(p&&!d)return o||(o=new Wn),s||us(e)?$r(e,a,n,i,t,o):function(e,a,n,i,r,t,o){switch(n){case L:if(e.byteLength!=a.byteLength||e.byteOffset!=a.byteOffset)return!1
e=e.buffer,a=a.buffer
case P:return!(e.byteLength!=a.byteLength||!t(new Ge(e),new Ge(a)))
case g:case k:case M:return Io(+e,+a)
case y:return e.name==a.name&&e.message==a.message
case w:case E:return e==a+""
case A:var s=Xa
case j:var l=1&i
if(s||(s=nn),e.size!=a.size&&!l)return!1
var u=o.get(e)
if(u)return u==a
i|=2,o.set(e,a)
var c=$r(s(e),s(a),i,r,t,o)
return o.delete(e),c
case N:if(Kn)return Kn.call(e)==Kn.call(a)}return!1}(e,a,u,n,i,t,o)
if(!(1&n)){var m=d&&De.call(e,"__wrapped__"),b=h&&De.call(a,"__wrapped__")
if(m||b){var S=m?e.value():e,_=b?a.value():a
return o||(o=new Wn),t(S,_,n,i,o)}}return!!p&&(o||(o=new Wn),function(e,a,n,i,t,o){var s=1&n,l=et(e),u=l.length
if(u!=et(a).length&&!s)return!1
for(var c=u;c--;){var d=l[c]
if(!(s?d in a:De.call(a,d)))return!1}var h=o.get(e),p=o.get(a)
if(h&&p)return h==a&&p==e
var m=!0
o.set(e,a),o.set(a,e)
for(var f=s;++c<u;){var v=e[d=l[c]],g=a[d]
if(i)var k=s?i(g,v,d,a,e,o):i(v,g,d,e,a,o)
if(!(k===r?v===g||t(v,g,n,i,o):k)){m=!1
break}f||(f="constructor"==d)}if(m&&!f){var y=e.constructor,b=a.constructor
y==b||!("constructor"in e)||!("constructor"in a)||"function"==typeof y&&y instanceof y&&"function"==typeof b&&b instanceof b||(m=!1)}return o.delete(e),o.delete(a),m}(e,a,n,i,t,o))}(e,a,n,i,Bi,t))}function Pi(e,a,n,i){var t=n.length,o=t,s=!i
if(null==e)return!o
for(e=Te(e);t--;){var l=n[t]
if(s&&l[2]?l[1]!==e[l[0]]:!(l[0]in e))return!1}for(;++t<o;){var u=(l=n[t])[0],c=e[u],d=l[1]
if(s&&l[2]){if(c===r&&!(u in e))return!1}else{var h=new Wn
if(i)var p=i(c,d,u,e,a,h)
if(!(p===r?Bi(d,c,3,i,h):p))return!1}}return!0}function Li(e){return!(!es(e)||(a=e,Ce&&Ce in a))&&(Yo(e)?Oe:fe).test(Rt(e))
var a}function Di(e){return"function"==typeof e?e:null==e?il:"object"==typeof e?Fo(e)?zi(e[0],e[1]):Ri(e):hl(e)}function xi(e){if(!bt(e))return fn(e)
var a=[]
for(var n in Te(e))De.call(e,n)&&"constructor"!=n&&a.push(n)
return a}function Ci(e,a){return e<a}function Ki(e,a){var n=-1,r=Uo(e)?i(e.length):[]
return ci(e,(function(e,i,t){r[++n]=a(e,i,t)})),r}function Ri(e){var a=st(e)
return 1==a.length&&a[0][2]?At(a[0][0],a[0][1]):function(n){return n===e||Pi(n,e,a)}}function zi(e,a){return gt(e)&&St(a)?At(Kt(e),a):function(n){var i=ws(n,e)
return i===r&&i===a?js(n,e):Bi(a,i,3)}}function Oi(e,a,n,i,t){e!==a&&vi(a,(function(o,s){if(t||(t=new Wn),es(o))!function(e,a,n,i,t,o,s){var l=wt(e,n),u=wt(a,n),c=s.get(u)
if(c)$n(e,n,c)
else{var d=o?o(l,u,n+"",e,a,s):r,h=d===r
if(h){var p=Fo(u),m=!p&&Zo(u),f=!p&&!m&&us(u)
d=u,p||m||f?Fo(l)?d=l:Wo(l)?d=wr(l):m?(h=!1,d=br(u,!0)):f?(h=!1,d=Ar(u,!0)):d=[]:rs(u)||Ho(u)?(d=l,Ho(l)?d=gs(l):es(l)&&!Yo(l)||(d=pt(u))):h=!1}h&&(s.set(u,d),t(d,u,i,o,s),s.delete(u)),$n(e,n,d)}}(e,a,s,n,Oi,i,t)
else{var l=i?i(wt(e,s),o,s+"",e,a,t):r
l===r&&(l=o),$n(e,s,l)}}),Ls)}function Ii(e,a){var n=e.length
if(n)return ft(a+=a<0?n:0,n)?e[a]:r}function Vi(e,a,n){a=a.length?_a(a,(function(e){return Fo(e)?function(a){return Si(a,1===e.length?e[0]:e)}:e})):[il]
var i=-1
a=_a(a,Ha(tt()))
var r=Ki(e,(function(e,n,r){var t=_a(a,(function(a){return a(e)}))
return{criteria:t,index:++i,value:e}}))
return function(e,a){var i=e.length
for(e.sort((function(e,a){return function(e,a,n){for(var i=-1,r=e.criteria,t=a.criteria,o=r.length,s=n.length;++i<o;){var l=Mr(r[i],t[i])
if(l)return i>=s?l:l*("desc"==n[i]?-1:1)}return e.index-a.index}(e,a,n)}));i--;)e[i]=e[i].value
return e}(r)}function Gi(e,a,n){for(var i=-1,r=a.length,t={};++i<r;){var o=a[i],s=Si(e,o)
n(s,o)&&Qi(t,vr(o,e),s)}return t}function Hi(e,a,n,i){var r=i?xa:Da,t=-1,o=a.length,s=e
for(e===a&&(a=wr(a)),n&&(s=_a(e,Ha(n)));++t<o;)for(var l=0,u=a[t],c=n?n(u):u;(l=r(s,c,l,i))>-1;)s!==e&&ia.call(s,l,1),ia.call(e,l,1)
return e}function Fi(e,a){for(var n=e?a.length:0,i=n-1;n--;){var r=a[n]
if(n==i||r!==t){var t=r
ft(r)?ia.call(e,r,1):lr(e,r)}}return e}function Ji(e,a){return e+cn(bn()*(a-e+1))}function Ui(e,a){var n=""
if(!e||a<1||a>d)return n
do{a%2&&(n+=e),(a=cn(a/2))&&(e+=e)}while(a)
return n}function Wi(e,a){return Nt(Mt(e,a,il),e+"")}function Zi(e){return qn(Is(e))}function qi(e,a){var n=Is(e)
return Lt(n,ti(a,0,n.length))}function Qi(e,a,n,i){if(!es(e))return e
for(var t=-1,o=(a=vr(a,e)).length,s=o-1,l=e;null!=l&&++t<o;){var u=Kt(a[t]),c=n
if("__proto__"===u||"constructor"===u||"prototype"===u)return e
if(t!=s){var d=l[u];(c=i?i(d,u,l):r)===r&&(c=es(d)?d:ft(a[t+1])?[]:{})}Xn(l,u,c),l=l[u]}return e}var Yi=En?function(e,a){return En.set(e,a),e}:il,$i=ua?function(e,a){return ua(e,"toString",{configurable:!0,enumerable:!1,value:el(a),writable:!0})}:il
function Xi(e){return Lt(Is(e))}function er(e,a,n){var r=-1,t=e.length
a<0&&(a=-a>t?0:t+a),(n=n>t?t:n)<0&&(n+=t),t=a>n?0:n-a>>>0,a>>>=0
for(var o=i(t);++r<t;)o[r]=e[r+a]
return o}function ar(e,a){var n
return ci(e,(function(e,i,r){return!(n=a(e,i,r))})),!!n}function nr(e,a,n){var i=0,r=null==e?i:e.length
if("number"==typeof a&&a==a&&r<=2147483647){for(;i<r;){var t=i+r>>>1,o=e[t]
null!==o&&!ls(o)&&(n?o<=a:o<a)?i=t+1:r=t}return r}return ir(e,a,il,n)}function ir(e,a,n,i){var t=0,o=null==e?0:e.length
if(0===o)return 0
for(var s=(a=n(a))!=a,l=null===a,u=ls(a),c=a===r;t<o;){var d=cn((t+o)/2),h=n(e[d]),p=h!==r,m=null===h,f=h==h,v=ls(h)
if(s)var g=i||f
else g=c?f&&(i||p):l?f&&p&&(i||!m):u?f&&p&&!m&&(i||!v):!m&&!v&&(i?h<=a:h<a)
g?t=d+1:o=d}return gn(o,4294967294)}function rr(e,a){for(var n=-1,i=e.length,r=0,t=[];++n<i;){var o=e[n],s=a?a(o):o
if(!n||!Io(s,l)){var l=s
t[r++]=0===o?0:o}}return t}function tr(e){return"number"==typeof e?e:ls(e)?h:+e}function or(e){if("string"==typeof e)return e
if(Fo(e))return _a(e,or)+""
if(ls(e))return Rn?Rn.call(e):""
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}function sr(e,a,n){var i=-1,r=Ma,t=e.length,o=!0,s=[],l=s
if(n)o=!1,r=Ta
else if(t>=200){var u=a?null:Ur(e)
if(u)return nn(u)
o=!1,r=Ja,l=new Un}else l=a?[]:s
e:for(;++i<t;){var c=e[i],d=a?a(c):c
if(c=n||0!==c?c:0,o&&d==d){for(var h=l.length;h--;)if(l[h]===d)continue e
a&&l.push(d),s.push(c)}else r(l,d,n)||(l!==s&&l.push(d),s.push(c))}return s}function lr(e,a){return null==(e=Tt(e,a=vr(a,e)))||delete e[Kt(qt(a))]}function ur(e,a,n,i){return Qi(e,a,n(Si(e,a)),i)}function cr(e,a,n,i){for(var r=e.length,t=i?r:-1;(i?t--:++t<r)&&a(e[t],t,e););return n?er(e,i?0:t,i?t+1:r):er(e,i?t+1:0,i?r:t)}function dr(e,a){var n=e
return n instanceof Gn&&(n=n.value()),ja(a,(function(e,a){return a.func.apply(a.thisArg,wa([e],a.args))}),n)}function hr(e,a,n){var r=e.length
if(r<2)return r?sr(e[0]):[]
for(var t=-1,o=i(r);++t<r;)for(var s=e[t],l=-1;++l<r;)l!=t&&(o[t]=ui(o[t]||s,e[l],a,n))
return sr(fi(o,1),a,n)}function pr(e,a,n){for(var i=-1,t=e.length,o=a.length,s={};++i<t;){var l=i<o?a[i]:r
n(s,e[i],l)}return s}function mr(e){return Wo(e)?e:[]}function fr(e){return"function"==typeof e?e:il}function vr(e,a){return Fo(e)?e:gt(e,a)?[e]:Ct(ks(e))}var gr=Wi
function kr(e,a,n){var i=e.length
return n=n===r?i:n,!a&&n>=i?e:er(e,a,n)}var yr=ca||function(e){return ta.clearTimeout(e)}
function br(e,a){if(a)return e.slice()
var n=e.length,i=He?He(n):new e.constructor(n)
return e.copy(i),i}function Sr(e){var a=new e.constructor(e.byteLength)
return new Ge(a).set(new Ge(e)),a}function Ar(e,a){var n=a?Sr(e.buffer):e.buffer
return new e.constructor(n,e.byteOffset,e.length)}function Mr(e,a){if(e!==a){var n=e!==r,i=null===e,t=e==e,o=ls(e),s=a!==r,l=null===a,u=a==a,c=ls(a)
if(!l&&!c&&!o&&e>a||o&&s&&u&&!l&&!c||i&&s&&u||!n&&u||!t)return 1
if(!i&&!o&&!c&&e<a||c&&n&&t&&!i&&!o||l&&n&&t||!s&&t||!u)return-1}return 0}function Tr(e,a,n,r){for(var t=-1,o=e.length,s=n.length,l=-1,u=a.length,c=vn(o-s,0),d=i(u+c),h=!r;++l<u;)d[l]=a[l]
for(;++t<s;)(h||t<o)&&(d[n[t]]=e[t])
for(;c--;)d[l++]=e[t++]
return d}function _r(e,a,n,r){for(var t=-1,o=e.length,s=-1,l=n.length,u=-1,c=a.length,d=vn(o-l,0),h=i(d+c),p=!r;++t<d;)h[t]=e[t]
for(var m=t;++u<c;)h[m+u]=a[u]
for(;++s<l;)(p||t<o)&&(h[m+n[s]]=e[t++])
return h}function wr(e,a){var n=-1,r=e.length
for(a||(a=i(r));++n<r;)a[n]=e[n]
return a}function jr(e,a,n,i){var t=!n
n||(n={})
for(var o=-1,s=a.length;++o<s;){var l=a[o],u=i?i(n[l],e[l],l,n,e):r
u===r&&(u=e[l]),t?ii(n,l,u):Xn(n,l,u)}return n}function Er(e,a){return function(n,i){var r=Fo(n)?ka:ai,t=a?a():{}
return r(n,e,tt(i,2),t)}}function Nr(e){return Wi((function(a,n){var i=-1,t=n.length,o=t>1?n[t-1]:r,s=t>2?n[2]:r
for(o=e.length>3&&"function"==typeof o?(t--,o):r,s&&vt(n[0],n[1],s)&&(o=t<3?r:o,t=1),a=Te(a);++i<t;){var l=n[i]
l&&e(a,l,i,o)}return a}))}function Br(e,a){return function(n,i){if(null==n)return n
if(!Uo(n))return e(n,i)
for(var r=n.length,t=a?r:-1,o=Te(n);(a?t--:++t<r)&&!1!==i(o[t],t,o););return n}}function Pr(e){return function(a,n,i){for(var r=-1,t=Te(a),o=i(a),s=o.length;s--;){var l=o[e?s:++r]
if(!1===n(t[l],l,t))break}return a}}function Lr(e){return function(a){var n=$a(a=ks(a))?tn(a):r,i=n?n[0]:a.charAt(0),t=n?kr(n,1).join(""):a.slice(1)
return i[e]()+t}}function Dr(e){return function(a){return ja(Ys(Hs(a).replace(Fe,"")),e,"")}}function xr(e){return function(){var a=arguments
switch(a.length){case 0:return new e
case 1:return new e(a[0])
case 2:return new e(a[0],a[1])
case 3:return new e(a[0],a[1],a[2])
case 4:return new e(a[0],a[1],a[2],a[3])
case 5:return new e(a[0],a[1],a[2],a[3],a[4])
case 6:return new e(a[0],a[1],a[2],a[3],a[4],a[5])
case 7:return new e(a[0],a[1],a[2],a[3],a[4],a[5],a[6])}var n=On(e.prototype),i=e.apply(n,a)
return es(i)?i:n}}function Cr(e){return function(a,n,i){var t=Te(a)
if(!Uo(a)){var o=tt(n,3)
a=Ps(a),n=function(e){return o(t[e],e,t)}}var s=e(a,n,i)
return s>-1?t[o?a[s]:s]:r}}function Kr(e){return Xr((function(a){var n=a.length,i=n,o=Vn.prototype.thru
for(e&&a.reverse();i--;){var s=a[i]
if("function"!=typeof s)throw new je(t)
if(o&&!l&&"wrapper"==it(s))var l=new Vn([],!0)}for(i=l?i:n;++i<n;){var u=it(s=a[i]),c="wrapper"==u?nt(s):r
l=c&&kt(c[0])&&424==c[1]&&!c[4].length&&1==c[9]?l[it(c[0])].apply(l,c[3]):1==s.length&&kt(s)?l[u]():l.thru(s)}return function(){var e=arguments,i=e[0]
if(l&&1==e.length&&Fo(i))return l.plant(i).value()
for(var r=0,t=n?a[r].apply(this,e):i;++r<n;)t=a[r].call(this,t)
return t}}))}function Rr(e,a,n,t,o,s,l,c,d,h){var p=a&u,m=1&a,f=2&a,v=24&a,g=512&a,k=f?r:xr(e)
return function r(){for(var u=arguments.length,y=i(u),b=u;b--;)y[b]=arguments[b]
if(v)var S=rt(r),A=Za(y,S)
if(t&&(y=Tr(y,t,o,v)),s&&(y=_r(y,s,l,v)),u-=A,v&&u<h){var M=an(y,S)
return Fr(e,a,Rr,r.placeholder,n,y,M,c,d,h-u)}var T=m?n:this,_=f?T[e]:e
return u=y.length,c?y=_t(y,c):g&&u>1&&y.reverse(),p&&d<u&&(y.length=d),this&&this!==ta&&this instanceof r&&(_=k||xr(_)),_.apply(T,y)}}function zr(e,a){return function(n,i){return function(e,a,n,i){return ki(e,(function(e,r,t){a(i,n(e),r,t)})),i}(n,e,a(i),{})}}function Or(e,a){return function(n,i){var t
if(n===r&&i===r)return a
if(n!==r&&(t=n),i!==r){if(t===r)return i
"string"==typeof n||"string"==typeof i?(n=or(n),i=or(i)):(n=tr(n),i=tr(i)),t=e(n,i)}return t}}function Ir(e){return Xr((function(a){return a=_a(a,Ha(tt())),Wi((function(n){var i=this
return e(a,(function(e){return ga(e,i,n)}))}))}))}function Vr(e,a){var n=(a=a===r?" ":or(a)).length
if(n<2)return n?Ui(a,e):a
var i=Ui(a,un(e/rn(a)))
return $a(a)?kr(tn(i),0,e).join(""):i.slice(0,e)}function Gr(e){return function(a,n,t){return t&&"number"!=typeof t&&vt(a,n,t)&&(n=t=r),a=ps(a),n===r?(n=a,a=0):n=ps(n),function(e,a,n,r){for(var t=-1,o=vn(un((a-e)/(n||1)),0),s=i(o);o--;)s[r?o:++t]=e,e+=n
return s}(a,n,t=t===r?a<n?1:-1:ps(t),e)}}function Hr(e){return function(a,n){return"string"==typeof a&&"string"==typeof n||(a=vs(a),n=vs(n)),e(a,n)}}function Fr(e,a,n,i,t,o,s,u,c,d){var h=8&a
a|=h?l:64,4&(a&=~(h?64:l))||(a&=-4)
var p=[e,a,t,h?o:r,h?s:r,h?r:o,h?r:s,u,c,d],m=n.apply(r,p)
return kt(e)&&jt(m,p),m.placeholder=i,Bt(m,e,a)}function Jr(e){var a=Me[e]
return function(e,n){if(e=vs(e),(n=null==n?0:gn(ms(n),292))&&pn(e)){var i=(ks(e)+"e").split("e")
return+((i=(ks(a(i[0]+"e"+(+i[1]+n)))+"e").split("e"))[0]+"e"+(+i[1]-n))}return a(e)}}var Ur=_n&&1/nn(new _n([,-0]))[1]==c?function(e){return new _n(e)}:ll
function Wr(e){return function(a){var n=dt(a)
return n==A?Xa(a):n==j?function(e){var a=-1,n=Array(e.size)
return e.forEach((function(e){n[++a]=[e,e]})),n}(a):function(e,a){return _a(a,(function(a){return[a,e[a]]}))}(a,e(a))}}function Zr(e,a,n,o,c,d,h,p){var m=2&a
if(!m&&"function"!=typeof e)throw new je(t)
var f=o?o.length:0
if(f||(a&=-97,o=c=r),h=h===r?h:vn(ms(h),0),p=p===r?p:ms(p),f-=c?c.length:0,64&a){var v=o,g=c
o=c=r}var k=m?r:nt(e),y=[e,a,n,o,c,v,g,d,h,p]
if(k&&function(e,a){var n=e[1],i=a[1],r=n|i,t=r<131,o=i==u&&8==n||i==u&&256==n&&e[7].length<=a[8]||384==i&&a[7].length<=a[8]&&8==n
if(!t&&!o)return e
1&i&&(e[2]=a[2],r|=1&n?0:4)
var l=a[3]
if(l){var c=e[3]
e[3]=c?Tr(c,l,a[4]):l,e[4]=c?an(e[3],s):a[4]}(l=a[5])&&(c=e[5],e[5]=c?_r(c,l,a[6]):l,e[6]=c?an(e[5],s):a[6]),(l=a[7])&&(e[7]=l),i&u&&(e[8]=null==e[8]?a[8]:gn(e[8],a[8])),null==e[9]&&(e[9]=a[9]),e[0]=a[0],e[1]=r}(y,k),e=y[0],a=y[1],n=y[2],o=y[3],c=y[4],!(p=y[9]=y[9]===r?m?0:e.length:vn(y[9]-f,0))&&24&a&&(a&=-25),a&&1!=a)b=8==a||16==a?function(e,a,n){var t=xr(e)
return function o(){for(var s=arguments.length,l=i(s),u=s,c=rt(o);u--;)l[u]=arguments[u]
var d=s<3&&l[0]!==c&&l[s-1]!==c?[]:an(l,c)
return(s-=d.length)<n?Fr(e,a,Rr,o.placeholder,r,l,d,r,r,n-s):ga(this&&this!==ta&&this instanceof o?t:e,this,l)}}(e,a,p):a!=l&&33!=a||c.length?Rr.apply(r,y):function(e,a,n,r){var t=1&a,o=xr(e)
return function a(){for(var s=-1,l=arguments.length,u=-1,c=r.length,d=i(c+l),h=this&&this!==ta&&this instanceof a?o:e;++u<c;)d[u]=r[u]
for(;l--;)d[u++]=arguments[++s]
return ga(h,t?n:this,d)}}(e,a,n,o)
else var b=function(e,a,n){var i=1&a,r=xr(e)
return function a(){return(this&&this!==ta&&this instanceof a?r:e).apply(i?n:this,arguments)}}(e,a,n)
return Bt((k?Yi:jt)(b,y),e,a)}function qr(e,a,n,i){return e===r||Io(e,Be[n])&&!De.call(i,n)?a:e}function Qr(e,a,n,i,t,o){return es(e)&&es(a)&&(o.set(a,e),Oi(e,a,r,Qr,o),o.delete(a)),e}function Yr(e){return rs(e)?r:e}function $r(e,a,n,i,t,o){var s=1&n,l=e.length,u=a.length
if(l!=u&&!(s&&u>l))return!1
var c=o.get(e),d=o.get(a)
if(c&&d)return c==a&&d==e
var h=-1,p=!0,m=2&n?new Un:r
for(o.set(e,a),o.set(a,e);++h<l;){var f=e[h],v=a[h]
if(i)var g=s?i(v,f,h,a,e,o):i(f,v,h,e,a,o)
if(g!==r){if(g)continue
p=!1
break}if(m){if(!Na(a,(function(e,a){if(!Ja(m,a)&&(f===e||t(f,e,n,i,o)))return m.push(a)}))){p=!1
break}}else if(f!==v&&!t(f,v,n,i,o)){p=!1
break}}return o.delete(e),o.delete(a),p}function Xr(e){return Nt(Mt(e,r,Ft),e+"")}function et(e){return Ai(e,Ps,ut)}function at(e){return Ai(e,Ls,ct)}var nt=En?function(e){return En.get(e)}:ll
function it(e){for(var a=e.name+"",n=Nn[a],i=De.call(Nn,a)?n.length:0;i--;){var r=n[i],t=r.func
if(null==t||t==e)return r.name}return a}function rt(e){return(De.call(zn,"placeholder")?zn:e).placeholder}function tt(){var e=zn.iteratee||rl
return e=e===rl?Di:e,arguments.length?e(arguments[0],arguments[1]):e}function ot(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}function st(e){for(var a=Ps(e),n=a.length;n--;){var i=a[n],r=e[i]
a[n]=[i,r,St(r)]}return a}function lt(e,a){var n=function(e,a){return null==e?r:e[a]}(e,a)
return Li(n)?n:r}var ut=dn?function(e){return null==e?[]:(e=Te(e),Aa(dn(e),(function(a){return ea.call(e,a)})))}:fl,ct=dn?function(e){for(var a=[];e;)wa(a,ut(e)),e=Ue(e)
return a}:fl,dt=Mi
function ht(e,a,n){for(var i=-1,r=(a=vr(a,e)).length,t=!1;++i<r;){var o=Kt(a[i])
if(!(t=null!=e&&n(e,o)))break
e=e[o]}return t||++i!=r?t:!!(r=null==e?0:e.length)&&Xo(r)&&ft(o,r)&&(Fo(e)||Ho(e))}function pt(e){return"function"!=typeof e.constructor||bt(e)?{}:On(Ue(e))}function mt(e){return Fo(e)||Ho(e)||!!(ra&&e&&e[ra])}function ft(e,a){var n=typeof e
return!!(a=null==a?d:a)&&("number"==n||"symbol"!=n&&ge.test(e))&&e>-1&&e%1==0&&e<a}function vt(e,a,n){if(!es(n))return!1
var i=typeof a
return!!("number"==i?Uo(n)&&ft(a,n.length):"string"==i&&a in n)&&Io(n[a],e)}function gt(e,a){if(Fo(e))return!1
var n=typeof e
return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!ls(e))||X.test(e)||!$.test(e)||null!=a&&e in Te(a)}function kt(e){var a=it(e),n=zn[a]
if("function"!=typeof n||!(a in Gn.prototype))return!1
if(e===n)return!0
var i=nt(n)
return!!i&&e===i[0]}(An&&dt(new An(new ArrayBuffer(1)))!=L||Mn&&dt(new Mn)!=A||Tn&&dt(Tn.resolve())!=_||_n&&dt(new _n)!=j||wn&&dt(new wn)!=B)&&(dt=function(e){var a=Mi(e),n=a==T?e.constructor:r,i=n?Rt(n):""
if(i)switch(i){case Bn:return L
case Pn:return A
case Ln:return _
case Dn:return j
case xn:return B}return a})
var yt=Pe?Yo:vl
function bt(e){var a=e&&e.constructor
return e===("function"==typeof a&&a.prototype||Be)}function St(e){return e==e&&!es(e)}function At(e,a){return function(n){return null!=n&&n[e]===a&&(a!==r||e in Te(n))}}function Mt(e,a,n){return a=vn(a===r?e.length-1:a,0),function(){for(var r=arguments,t=-1,o=vn(r.length-a,0),s=i(o);++t<o;)s[t]=r[a+t]
t=-1
for(var l=i(a+1);++t<a;)l[t]=r[t]
return l[a]=n(s),ga(e,this,l)}}function Tt(e,a){return a.length<2?e:Si(e,er(a,0,-1))}function _t(e,a){for(var n=e.length,i=gn(a.length,n),t=wr(e);i--;){var o=a[i]
e[i]=ft(o,n)?t[o]:r}return e}function wt(e,a){if(("constructor"!==a||"function"!=typeof e[a])&&"__proto__"!=a)return e[a]}var jt=Pt(Yi),Et=za||function(e,a){return ta.setTimeout(e,a)},Nt=Pt($i)
function Bt(e,a,n){var i=a+""
return Nt(e,function(e,a){var n=a.length
if(!n)return e
var i=n-1
return a[i]=(n>1?"& ":"")+a[i],a=a.join(n>2?", ":" "),e.replace(te,"{\n/* [wrapped with "+a+"] */\n")}(i,function(e,a){return ya(m,(function(n){var i="_."+n[0]
a&n[1]&&!Ma(e,i)&&e.push(i)})),e.sort()}(function(e){var a=e.match(oe)
return a?a[1].split(se):[]}(i),n)))}function Pt(e){var a=0,n=0
return function(){var i=kn(),t=16-(i-n)
if(n=i,t>0){if(++a>=800)return arguments[0]}else a=0
return e.apply(r,arguments)}}function Lt(e,a){var n=-1,i=e.length,t=i-1
for(a=a===r?i:a;++n<a;){var o=Ji(n,t),s=e[o]
e[o]=e[n],e[n]=s}return e.length=a,e}var Dt,xt,Ct=(Dt=xo((function(e){var a=[]
return 46===e.charCodeAt(0)&&a.push(""),e.replace(ee,(function(e,n,i,r){a.push(i?r.replace(ce,"$1"):n||e)})),a}),(function(e){return 500===xt.size&&xt.clear(),e})),xt=Dt.cache,Dt)
function Kt(e){if("string"==typeof e||ls(e))return e
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a}function Rt(e){if(null!=e){try{return Le.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function zt(e){if(e instanceof Gn)return e.clone()
var a=new Vn(e.__wrapped__,e.__chain__)
return a.__actions__=wr(e.__actions__),a.__index__=e.__index__,a.__values__=e.__values__,a}var Ot=Wi((function(e,a){return Wo(e)?ui(e,fi(a,1,Wo,!0)):[]})),It=Wi((function(e,a){var n=qt(a)
return Wo(n)&&(n=r),Wo(e)?ui(e,fi(a,1,Wo,!0),tt(n,2)):[]})),Vt=Wi((function(e,a){var n=qt(a)
return Wo(n)&&(n=r),Wo(e)?ui(e,fi(a,1,Wo,!0),r,n):[]}))
function Gt(e,a,n){var i=null==e?0:e.length
if(!i)return-1
var r=null==n?0:ms(n)
return r<0&&(r=vn(i+r,0)),La(e,tt(a,3),r)}function Ht(e,a,n){var i=null==e?0:e.length
if(!i)return-1
var t=i-1
return n!==r&&(t=ms(n),t=n<0?vn(i+t,0):gn(t,i-1)),La(e,tt(a,3),t,!0)}function Ft(e){return null!=e&&e.length?fi(e,1):[]}function Jt(e){return e&&e.length?e[0]:r}var Ut=Wi((function(e){var a=_a(e,mr)
return a.length&&a[0]===e[0]?ji(a):[]})),Wt=Wi((function(e){var a=qt(e),n=_a(e,mr)
return a===qt(n)?a=r:n.pop(),n.length&&n[0]===e[0]?ji(n,tt(a,2)):[]})),Zt=Wi((function(e){var a=qt(e),n=_a(e,mr)
return(a="function"==typeof a?a:r)&&n.pop(),n.length&&n[0]===e[0]?ji(n,r,a):[]}))
function qt(e){var a=null==e?0:e.length
return a?e[a-1]:r}var Qt=Wi(Yt)
function Yt(e,a){return e&&e.length&&a&&a.length?Hi(e,a):e}var $t=Xr((function(e,a){var n=null==e?0:e.length,i=ri(e,a)
return Fi(e,_a(a,(function(e){return ft(e,n)?+e:e})).sort(Mr)),i}))
function Xt(e){return null==e?e:Sn.call(e)}var eo=Wi((function(e){return sr(fi(e,1,Wo,!0))})),ao=Wi((function(e){var a=qt(e)
return Wo(a)&&(a=r),sr(fi(e,1,Wo,!0),tt(a,2))})),no=Wi((function(e){var a=qt(e)
return a="function"==typeof a?a:r,sr(fi(e,1,Wo,!0),r,a)}))
function io(e){if(!e||!e.length)return[]
var a=0
return e=Aa(e,(function(e){if(Wo(e))return a=vn(e.length,a),!0})),Va(a,(function(a){return _a(e,Ra(a))}))}function ro(e,a){if(!e||!e.length)return[]
var n=io(e)
return null==a?n:_a(n,(function(e){return ga(a,r,e)}))}var to=Wi((function(e,a){return Wo(e)?ui(e,a):[]})),oo=Wi((function(e){return hr(Aa(e,Wo))})),so=Wi((function(e){var a=qt(e)
return Wo(a)&&(a=r),hr(Aa(e,Wo),tt(a,2))})),lo=Wi((function(e){var a=qt(e)
return a="function"==typeof a?a:r,hr(Aa(e,Wo),r,a)})),uo=Wi(io),co=Wi((function(e){var a=e.length,n=a>1?e[a-1]:r
return n="function"==typeof n?(e.pop(),n):r,ro(e,n)}))
function ho(e){var a=zn(e)
return a.__chain__=!0,a}function po(e,a){return a(e)}var mo=Xr((function(e){var a=e.length,n=a?e[0]:0,i=this.__wrapped__,t=function(a){return ri(a,e)}
return!(a>1||this.__actions__.length)&&i instanceof Gn&&ft(n)?((i=i.slice(n,+n+(a?1:0))).__actions__.push({func:po,args:[t],thisArg:r}),new Vn(i,this.__chain__).thru((function(e){return a&&!e.length&&e.push(r),e}))):this.thru(t)})),fo=Er((function(e,a,n){De.call(e,n)?++e[n]:ii(e,n,1)})),vo=Cr(Gt),go=Cr(Ht)
function ko(e,a){return(Fo(e)?ya:ci)(e,tt(a,3))}function yo(e,a){return(Fo(e)?ba:di)(e,tt(a,3))}var bo=Er((function(e,a,n){De.call(e,n)?e[n].push(a):ii(e,n,[a])})),So=Wi((function(e,a,n){var r=-1,t="function"==typeof a,o=Uo(e)?i(e.length):[]
return ci(e,(function(e){o[++r]=t?ga(a,e,n):Ei(e,a,n)})),o})),Ao=Er((function(e,a,n){ii(e,n,a)}))
function Mo(e,a){return(Fo(e)?_a:Ki)(e,tt(a,3))}var To=Er((function(e,a,n){e[n?0:1].push(a)}),(function(){return[[],[]]})),_o=Wi((function(e,a){if(null==e)return[]
var n=a.length
return n>1&&vt(e,a[0],a[1])?a=[]:n>2&&vt(a[0],a[1],a[2])&&(a=[a[0]]),Vi(e,fi(a,1),[])})),wo=Ba||function(){return ta.Date.now()}
function jo(e,a,n){return a=n?r:a,a=e&&null==a?e.length:a,Zr(e,u,r,r,r,r,a)}function Eo(e,a){var n
if("function"!=typeof a)throw new je(t)
return e=ms(e),function(){return--e>0&&(n=a.apply(this,arguments)),e<=1&&(a=r),n}}var No=Wi((function(e,a,n){var i=1
if(n.length){var r=an(n,rt(No))
i|=l}return Zr(e,i,a,n,r)})),Bo=Wi((function(e,a,n){var i=3
if(n.length){var r=an(n,rt(Bo))
i|=l}return Zr(a,i,e,n,r)}))
function Po(e,a,n){var i,o,s,l,u,c,d=0,h=!1,p=!1,m=!0
if("function"!=typeof e)throw new je(t)
function f(a){var n=i,t=o
return i=o=r,d=a,l=e.apply(t,n)}function v(e){return d=e,u=Et(k,a),h?f(e):l}function g(e){var n=e-c
return c===r||n>=a||n<0||p&&e-d>=s}function k(){var e=wo()
if(g(e))return y(e)
u=Et(k,function(e){var n=a-(e-c)
return p?gn(n,s-(e-d)):n}(e))}function y(e){return u=r,m&&i?f(e):(i=o=r,l)}function b(){var e=wo(),n=g(e)
if(i=arguments,o=this,c=e,n){if(u===r)return v(c)
if(p)return yr(u),u=Et(k,a),f(c)}return u===r&&(u=Et(k,a)),l}return a=vs(a)||0,es(n)&&(h=!!n.leading,s=(p="maxWait"in n)?vn(vs(n.maxWait)||0,a):s,m="trailing"in n?!!n.trailing:m),b.cancel=function(){u!==r&&yr(u),d=0,i=c=o=u=r},b.flush=function(){return u===r?l:y(wo())},b}var Lo=Wi((function(e,a){return li(e,1,a)})),Do=Wi((function(e,a,n){return li(e,vs(a)||0,n)}))
function xo(e,a){if("function"!=typeof e||null!=a&&"function"!=typeof a)throw new je(t)
var n=function(){var i=arguments,r=a?a.apply(this,i):i[0],t=n.cache
if(t.has(r))return t.get(r)
var o=e.apply(this,i)
return n.cache=t.set(r,o)||t,o}
return n.cache=new(xo.Cache||Jn),n}function Co(e){if("function"!=typeof e)throw new je(t)
return function(){var a=arguments
switch(a.length){case 0:return!e.call(this)
case 1:return!e.call(this,a[0])
case 2:return!e.call(this,a[0],a[1])
case 3:return!e.call(this,a[0],a[1],a[2])}return!e.apply(this,a)}}xo.Cache=Jn
var Ko=gr((function(e,a){var n=(a=1==a.length&&Fo(a[0])?_a(a[0],Ha(tt())):_a(fi(a,1),Ha(tt()))).length
return Wi((function(i){for(var r=-1,t=gn(i.length,n);++r<t;)i[r]=a[r].call(this,i[r])
return ga(e,this,i)}))})),Ro=Wi((function(e,a){var n=an(a,rt(Ro))
return Zr(e,l,r,a,n)})),zo=Wi((function(e,a){var n=an(a,rt(zo))
return Zr(e,64,r,a,n)})),Oo=Xr((function(e,a){return Zr(e,256,r,r,r,a)}))
function Io(e,a){return e===a||e!=e&&a!=a}var Vo=Hr(Ti),Go=Hr((function(e,a){return e>=a})),Ho=Ni(function(){return arguments}())?Ni:function(e){return as(e)&&De.call(e,"callee")&&!ea.call(e,"callee")},Fo=i.isArray,Jo=da?Ha(da):function(e){return as(e)&&Mi(e)==P}
function Uo(e){return null!=e&&Xo(e.length)&&!Yo(e)}function Wo(e){return as(e)&&Uo(e)}var Zo=hn||vl,qo=ha?Ha(ha):function(e){return as(e)&&Mi(e)==k}
function Qo(e){if(!as(e))return!1
var a=Mi(e)
return a==y||"[object DOMException]"==a||"string"==typeof e.message&&"string"==typeof e.name&&!rs(e)}function Yo(e){if(!es(e))return!1
var a=Mi(e)
return a==b||a==S||"[object AsyncFunction]"==a||"[object Proxy]"==a}function $o(e){return"number"==typeof e&&e==ms(e)}function Xo(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=d}function es(e){var a=typeof e
return null!=e&&("object"==a||"function"==a)}function as(e){return null!=e&&"object"==typeof e}var ns=pa?Ha(pa):function(e){return as(e)&&dt(e)==A}
function is(e){return"number"==typeof e||as(e)&&Mi(e)==M}function rs(e){if(!as(e)||Mi(e)!=T)return!1
var a=Ue(e)
if(null===a)return!0
var n=De.call(a,"constructor")&&a.constructor
return"function"==typeof n&&n instanceof n&&Le.call(n)==Re}var ts=ma?Ha(ma):function(e){return as(e)&&Mi(e)==w},os=fa?Ha(fa):function(e){return as(e)&&dt(e)==j}
function ss(e){return"string"==typeof e||!Fo(e)&&as(e)&&Mi(e)==E}function ls(e){return"symbol"==typeof e||as(e)&&Mi(e)==N}var us=va?Ha(va):function(e){return as(e)&&Xo(e.length)&&!!$e[Mi(e)]},cs=Hr(Ci),ds=Hr((function(e,a){return e<=a}))
function hs(e){if(!e)return[]
if(Uo(e))return ss(e)?tn(e):wr(e)
if(oa&&e[oa])return function(e){for(var a,n=[];!(a=e.next()).done;)n.push(a.value)
return n}(e[oa]())
var a=dt(e)
return(a==A?Xa:a==j?nn:Is)(e)}function ps(e){return e?(e=vs(e))===c||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function ms(e){var a=ps(e),n=a%1
return a==a?n?a-n:a:0}function fs(e){return e?ti(ms(e),0,p):0}function vs(e){if("number"==typeof e)return e
if(ls(e))return h
if(es(e)){var a="function"==typeof e.valueOf?e.valueOf():e
e=es(a)?a+"":a}if("string"!=typeof e)return 0===e?e:+e
e=Ga(e)
var n=me.test(e)
return n||ve.test(e)?na(e.slice(2),n?2:8):pe.test(e)?h:+e}function gs(e){return jr(e,Ls(e))}function ks(e){return null==e?"":or(e)}var ys=Nr((function(e,a){if(bt(a)||Uo(a))jr(a,Ps(a),e)
else for(var n in a)De.call(a,n)&&Xn(e,n,a[n])})),bs=Nr((function(e,a){jr(a,Ls(a),e)})),Ss=Nr((function(e,a,n,i){jr(a,Ls(a),e,i)})),As=Nr((function(e,a,n,i){jr(a,Ps(a),e,i)})),Ms=Xr(ri),Ts=Wi((function(e,a){e=Te(e)
var n=-1,i=a.length,t=i>2?a[2]:r
for(t&&vt(a[0],a[1],t)&&(i=1);++n<i;)for(var o=a[n],s=Ls(o),l=-1,u=s.length;++l<u;){var c=s[l],d=e[c];(d===r||Io(d,Be[c])&&!De.call(e,c))&&(e[c]=o[c])}return e})),_s=Wi((function(e){return e.push(r,Qr),ga(xs,r,e)}))
function ws(e,a,n){var i=null==e?r:Si(e,a)
return i===r?n:i}function js(e,a){return null!=e&&ht(e,a,wi)}var Es=zr((function(e,a,n){null!=a&&"function"!=typeof a.toString&&(a=Ke.call(a)),e[a]=n}),el(il)),Ns=zr((function(e,a,n){null!=a&&"function"!=typeof a.toString&&(a=Ke.call(a)),De.call(e,a)?e[a].push(n):e[a]=[n]}),tt),Bs=Wi(Ei)
function Ps(e){return Uo(e)?Zn(e):xi(e)}function Ls(e){return Uo(e)?Zn(e,!0):function(e){if(!es(e))return function(e){var a=[]
if(null!=e)for(var n in Te(e))a.push(n)
return a}(e)
var a=bt(e),n=[]
for(var i in e)("constructor"!=i||!a&&De.call(e,i))&&n.push(i)
return n}(e)}var Ds=Nr((function(e,a,n){Oi(e,a,n)})),xs=Nr((function(e,a,n,i){Oi(e,a,n,i)})),Cs=Xr((function(e,a){var n={}
if(null==e)return n
var i=!1
a=_a(a,(function(a){return a=vr(a,e),i||(i=a.length>1),a})),jr(e,at(e),n),i&&(n=oi(n,7,Yr))
for(var r=a.length;r--;)lr(n,a[r])
return n})),Ks=Xr((function(e,a){return null==e?{}:function(e,a){return Gi(e,a,(function(a,n){return js(e,n)}))}(e,a)}))
function Rs(e,a){if(null==e)return{}
var n=_a(at(e),(function(e){return[e]}))
return a=tt(a),Gi(e,n,(function(e,n){return a(e,n[0])}))}var zs=Wr(Ps),Os=Wr(Ls)
function Is(e){return null==e?[]:Fa(e,Ps(e))}var Vs=Dr((function(e,a,n){return a=a.toLowerCase(),e+(n?Gs(a):a)}))
function Gs(e){return Qs(ks(e).toLowerCase())}function Hs(e){return(e=ks(e))&&e.replace(ke,qa).replace(Je,"")}var Fs=Dr((function(e,a,n){return e+(n?"-":"")+a.toLowerCase()})),Js=Dr((function(e,a,n){return e+(n?" ":"")+a.toLowerCase()})),Us=Lr("toLowerCase"),Ws=Dr((function(e,a,n){return e+(n?"_":"")+a.toLowerCase()})),Zs=Dr((function(e,a,n){return e+(n?" ":"")+Qs(a)})),qs=Dr((function(e,a,n){return e+(n?" ":"")+a.toUpperCase()})),Qs=Lr("toUpperCase")
function Ys(e,a,n){return e=ks(e),(a=n?r:a)===r?function(e){return qe.test(e)}(e)?function(e){return e.match(We)||[]}(e):function(e){return e.match(le)||[]}(e):e.match(a)||[]}var $s=Wi((function(e,a){try{return ga(e,r,a)}catch(e){return Qo(e)?e:new Se(e)}})),Xs=Xr((function(e,a){return ya(a,(function(a){a=Kt(a),ii(e,a,No(e[a],e))})),e}))
function el(e){return function(){return e}}var al=Kr(),nl=Kr(!0)
function il(e){return e}function rl(e){return Di("function"==typeof e?e:oi(e,1))}var tl=Wi((function(e,a){return function(n){return Ei(n,e,a)}})),ol=Wi((function(e,a){return function(n){return Ei(e,n,a)}}))
function sl(e,a,n){var i=Ps(a),r=bi(a,i)
null!=n||es(a)&&(r.length||!i.length)||(n=a,a=e,e=this,r=bi(a,Ps(a)))
var t=!(es(n)&&"chain"in n&&!n.chain),o=Yo(e)
return ya(r,(function(n){var i=a[n]
e[n]=i,o&&(e.prototype[n]=function(){var a=this.__chain__
if(t||a){var n=e(this.__wrapped__),r=n.__actions__=wr(this.__actions__)
return r.push({func:i,args:arguments,thisArg:e}),n.__chain__=a,n}return i.apply(e,wa([this.value()],arguments))})})),e}function ll(){}var ul=Ir(_a),cl=Ir(Sa),dl=Ir(Na)
function hl(e){return gt(e)?Ra(Kt(e)):function(e){return function(a){return Si(a,e)}}(e)}var pl=Gr(),ml=Gr(!0)
function fl(){return[]}function vl(){return!1}var gl,kl=Or((function(e,a){return e+a}),0),yl=Jr("ceil"),bl=Or((function(e,a){return e/a}),1),Sl=Jr("floor"),Al=Or((function(e,a){return e*a}),1),Ml=Jr("round"),Tl=Or((function(e,a){return e-a}),0)
return zn.after=function(e,a){if("function"!=typeof a)throw new je(t)
return e=ms(e),function(){if(--e<1)return a.apply(this,arguments)}},zn.ary=jo,zn.assign=ys,zn.assignIn=bs,zn.assignInWith=Ss,zn.assignWith=As,zn.at=Ms,zn.before=Eo,zn.bind=No,zn.bindAll=Xs,zn.bindKey=Bo,zn.castArray=function(){if(!arguments.length)return[]
var e=arguments[0]
return Fo(e)?e:[e]},zn.chain=ho,zn.chunk=function(e,a,n){a=(n?vt(e,a,n):a===r)?1:vn(ms(a),0)
var t=null==e?0:e.length
if(!t||a<1)return[]
for(var o=0,s=0,l=i(un(t/a));o<t;)l[s++]=er(e,o,o+=a)
return l},zn.compact=function(e){for(var a=-1,n=null==e?0:e.length,i=0,r=[];++a<n;){var t=e[a]
t&&(r[i++]=t)}return r},zn.concat=function(){var e=arguments.length
if(!e)return[]
for(var a=i(e-1),n=arguments[0],r=e;r--;)a[r-1]=arguments[r]
return wa(Fo(n)?wr(n):[n],fi(a,1))},zn.cond=function(e){var a=null==e?0:e.length,n=tt()
return e=a?_a(e,(function(e){if("function"!=typeof e[1])throw new je(t)
return[n(e[0]),e[1]]})):[],Wi((function(n){for(var i=-1;++i<a;){var r=e[i]
if(ga(r[0],this,n))return ga(r[1],this,n)}}))},zn.conforms=function(e){return function(e){var a=Ps(e)
return function(n){return si(n,e,a)}}(oi(e,1))},zn.constant=el,zn.countBy=fo,zn.create=function(e,a){var n=On(e)
return null==a?n:ni(n,a)},zn.curry=function e(a,n,i){var t=Zr(a,8,r,r,r,r,r,n=i?r:n)
return t.placeholder=e.placeholder,t},zn.curryRight=function e(a,n,i){var t=Zr(a,16,r,r,r,r,r,n=i?r:n)
return t.placeholder=e.placeholder,t},zn.debounce=Po,zn.defaults=Ts,zn.defaultsDeep=_s,zn.defer=Lo,zn.delay=Do,zn.difference=Ot,zn.differenceBy=It,zn.differenceWith=Vt,zn.drop=function(e,a,n){var i=null==e?0:e.length
return i?er(e,(a=n||a===r?1:ms(a))<0?0:a,i):[]},zn.dropRight=function(e,a,n){var i=null==e?0:e.length
return i?er(e,0,(a=i-(a=n||a===r?1:ms(a)))<0?0:a):[]},zn.dropRightWhile=function(e,a){return e&&e.length?cr(e,tt(a,3),!0,!0):[]},zn.dropWhile=function(e,a){return e&&e.length?cr(e,tt(a,3),!0):[]},zn.fill=function(e,a,n,i){var t=null==e?0:e.length
return t?(n&&"number"!=typeof n&&vt(e,a,n)&&(n=0,i=t),function(e,a,n,i){var t=e.length
for((n=ms(n))<0&&(n=-n>t?0:t+n),(i=i===r||i>t?t:ms(i))<0&&(i+=t),i=n>i?0:fs(i);n<i;)e[n++]=a
return e}(e,a,n,i)):[]},zn.filter=function(e,a){return(Fo(e)?Aa:mi)(e,tt(a,3))},zn.flatMap=function(e,a){return fi(Mo(e,a),1)},zn.flatMapDeep=function(e,a){return fi(Mo(e,a),c)},zn.flatMapDepth=function(e,a,n){return n=n===r?1:ms(n),fi(Mo(e,a),n)},zn.flatten=Ft,zn.flattenDeep=function(e){return null!=e&&e.length?fi(e,c):[]},zn.flattenDepth=function(e,a){return null!=e&&e.length?fi(e,a=a===r?1:ms(a)):[]},zn.flip=function(e){return Zr(e,512)},zn.flow=al,zn.flowRight=nl,zn.fromPairs=function(e){for(var a=-1,n=null==e?0:e.length,i={};++a<n;){var r=e[a]
i[r[0]]=r[1]}return i},zn.functions=function(e){return null==e?[]:bi(e,Ps(e))},zn.functionsIn=function(e){return null==e?[]:bi(e,Ls(e))},zn.groupBy=bo,zn.initial=function(e){return null!=e&&e.length?er(e,0,-1):[]},zn.intersection=Ut,zn.intersectionBy=Wt,zn.intersectionWith=Zt,zn.invert=Es,zn.invertBy=Ns,zn.invokeMap=So,zn.iteratee=rl,zn.keyBy=Ao,zn.keys=Ps,zn.keysIn=Ls,zn.map=Mo,zn.mapKeys=function(e,a){var n={}
return a=tt(a,3),ki(e,(function(e,i,r){ii(n,a(e,i,r),e)})),n},zn.mapValues=function(e,a){var n={}
return a=tt(a,3),ki(e,(function(e,i,r){ii(n,i,a(e,i,r))})),n},zn.matches=function(e){return Ri(oi(e,1))},zn.matchesProperty=function(e,a){return zi(e,oi(a,1))},zn.memoize=xo,zn.merge=Ds,zn.mergeWith=xs,zn.method=tl,zn.methodOf=ol,zn.mixin=sl,zn.negate=Co,zn.nthArg=function(e){return e=ms(e),Wi((function(a){return Ii(a,e)}))},zn.omit=Cs,zn.omitBy=function(e,a){return Rs(e,Co(tt(a)))},zn.once=function(e){return Eo(2,e)},zn.orderBy=function(e,a,n,i){return null==e?[]:(Fo(a)||(a=null==a?[]:[a]),Fo(n=i?r:n)||(n=null==n?[]:[n]),Vi(e,a,n))},zn.over=ul,zn.overArgs=Ko,zn.overEvery=cl,zn.overSome=dl,zn.partial=Ro,zn.partialRight=zo,zn.partition=To,zn.pick=Ks,zn.pickBy=Rs,zn.property=hl,zn.propertyOf=function(e){return function(a){return null==e?r:Si(e,a)}},zn.pull=Qt,zn.pullAll=Yt,zn.pullAllBy=function(e,a,n){return e&&e.length&&a&&a.length?Hi(e,a,tt(n,2)):e},zn.pullAllWith=function(e,a,n){return e&&e.length&&a&&a.length?Hi(e,a,r,n):e},zn.pullAt=$t,zn.range=pl,zn.rangeRight=ml,zn.rearg=Oo,zn.reject=function(e,a){return(Fo(e)?Aa:mi)(e,Co(tt(a,3)))},zn.remove=function(e,a){var n=[]
if(!e||!e.length)return n
var i=-1,r=[],t=e.length
for(a=tt(a,3);++i<t;){var o=e[i]
a(o,i,e)&&(n.push(o),r.push(i))}return Fi(e,r),n},zn.rest=function(e,a){if("function"!=typeof e)throw new je(t)
return Wi(e,a=a===r?a:ms(a))},zn.reverse=Xt,zn.sampleSize=function(e,a,n){return a=(n?vt(e,a,n):a===r)?1:ms(a),(Fo(e)?Qn:qi)(e,a)},zn.set=function(e,a,n){return null==e?e:Qi(e,a,n)},zn.setWith=function(e,a,n,i){return i="function"==typeof i?i:r,null==e?e:Qi(e,a,n,i)},zn.shuffle=function(e){return(Fo(e)?Yn:Xi)(e)},zn.slice=function(e,a,n){var i=null==e?0:e.length
return i?(n&&"number"!=typeof n&&vt(e,a,n)?(a=0,n=i):(a=null==a?0:ms(a),n=n===r?i:ms(n)),er(e,a,n)):[]},zn.sortBy=_o,zn.sortedUniq=function(e){return e&&e.length?rr(e):[]},zn.sortedUniqBy=function(e,a){return e&&e.length?rr(e,tt(a,2)):[]},zn.split=function(e,a,n){return n&&"number"!=typeof n&&vt(e,a,n)&&(a=n=r),(n=n===r?p:n>>>0)?(e=ks(e))&&("string"==typeof a||null!=a&&!ts(a))&&!(a=or(a))&&$a(e)?kr(tn(e),0,n):e.split(a,n):[]},zn.spread=function(e,a){if("function"!=typeof e)throw new je(t)
return a=null==a?0:vn(ms(a),0),Wi((function(n){var i=n[a],r=kr(n,0,a)
return i&&wa(r,i),ga(e,this,r)}))},zn.tail=function(e){var a=null==e?0:e.length
return a?er(e,1,a):[]},zn.take=function(e,a,n){return e&&e.length?er(e,0,(a=n||a===r?1:ms(a))<0?0:a):[]},zn.takeRight=function(e,a,n){var i=null==e?0:e.length
return i?er(e,(a=i-(a=n||a===r?1:ms(a)))<0?0:a,i):[]},zn.takeRightWhile=function(e,a){return e&&e.length?cr(e,tt(a,3),!1,!0):[]},zn.takeWhile=function(e,a){return e&&e.length?cr(e,tt(a,3)):[]},zn.tap=function(e,a){return a(e),e},zn.throttle=function(e,a,n){var i=!0,r=!0
if("function"!=typeof e)throw new je(t)
return es(n)&&(i="leading"in n?!!n.leading:i,r="trailing"in n?!!n.trailing:r),Po(e,a,{leading:i,maxWait:a,trailing:r})},zn.thru=po,zn.toArray=hs,zn.toPairs=zs,zn.toPairsIn=Os,zn.toPath=function(e){return Fo(e)?_a(e,Kt):ls(e)?[e]:wr(Ct(ks(e)))},zn.toPlainObject=gs,zn.transform=function(e,a,n){var i=Fo(e),r=i||Zo(e)||us(e)
if(a=tt(a,4),null==n){var t=e&&e.constructor
n=r?i?new t:[]:es(e)&&Yo(t)?On(Ue(e)):{}}return(r?ya:ki)(e,(function(e,i,r){return a(n,e,i,r)})),n},zn.unary=function(e){return jo(e,1)},zn.union=eo,zn.unionBy=ao,zn.unionWith=no,zn.uniq=function(e){return e&&e.length?sr(e):[]},zn.uniqBy=function(e,a){return e&&e.length?sr(e,tt(a,2)):[]},zn.uniqWith=function(e,a){return a="function"==typeof a?a:r,e&&e.length?sr(e,r,a):[]},zn.unset=function(e,a){return null==e||lr(e,a)},zn.unzip=io,zn.unzipWith=ro,zn.update=function(e,a,n){return null==e?e:ur(e,a,fr(n))},zn.updateWith=function(e,a,n,i){return i="function"==typeof i?i:r,null==e?e:ur(e,a,fr(n),i)},zn.values=Is,zn.valuesIn=function(e){return null==e?[]:Fa(e,Ls(e))},zn.without=to,zn.words=Ys,zn.wrap=function(e,a){return Ro(fr(a),e)},zn.xor=oo,zn.xorBy=so,zn.xorWith=lo,zn.zip=uo,zn.zipObject=function(e,a){return pr(e||[],a||[],Xn)},zn.zipObjectDeep=function(e,a){return pr(e||[],a||[],Qi)},zn.zipWith=co,zn.entries=zs,zn.entriesIn=Os,zn.extend=bs,zn.extendWith=Ss,sl(zn,zn),zn.add=kl,zn.attempt=$s,zn.camelCase=Vs,zn.capitalize=Gs,zn.ceil=yl,zn.clamp=function(e,a,n){return n===r&&(n=a,a=r),n!==r&&(n=(n=vs(n))==n?n:0),a!==r&&(a=(a=vs(a))==a?a:0),ti(vs(e),a,n)},zn.clone=function(e){return oi(e,4)},zn.cloneDeep=function(e){return oi(e,5)},zn.cloneDeepWith=function(e,a){return oi(e,5,a="function"==typeof a?a:r)},zn.cloneWith=function(e,a){return oi(e,4,a="function"==typeof a?a:r)},zn.conformsTo=function(e,a){return null==a||si(e,a,Ps(a))},zn.deburr=Hs,zn.defaultTo=function(e,a){return null==e||e!=e?a:e},zn.divide=bl,zn.endsWith=function(e,a,n){e=ks(e),a=or(a)
var i=e.length,t=n=n===r?i:ti(ms(n),0,i)
return(n-=a.length)>=0&&e.slice(n,t)==a},zn.eq=Io,zn.escape=function(e){return(e=ks(e))&&Z.test(e)?e.replace(U,Qa):e},zn.escapeRegExp=function(e){return(e=ks(e))&&ne.test(e)?e.replace(ae,"\\$&"):e},zn.every=function(e,a,n){var i=Fo(e)?Sa:hi
return n&&vt(e,a,n)&&(a=r),i(e,tt(a,3))},zn.find=vo,zn.findIndex=Gt,zn.findKey=function(e,a){return Pa(e,tt(a,3),ki)},zn.findLast=go,zn.findLastIndex=Ht,zn.findLastKey=function(e,a){return Pa(e,tt(a,3),yi)},zn.floor=Sl,zn.forEach=ko,zn.forEachRight=yo,zn.forIn=function(e,a){return null==e?e:vi(e,tt(a,3),Ls)},zn.forInRight=function(e,a){return null==e?e:gi(e,tt(a,3),Ls)},zn.forOwn=function(e,a){return e&&ki(e,tt(a,3))},zn.forOwnRight=function(e,a){return e&&yi(e,tt(a,3))},zn.get=ws,zn.gt=Vo,zn.gte=Go,zn.has=function(e,a){return null!=e&&ht(e,a,_i)},zn.hasIn=js,zn.head=Jt,zn.identity=il,zn.includes=function(e,a,n,i){e=Uo(e)?e:Is(e),n=n&&!i?ms(n):0
var r=e.length
return n<0&&(n=vn(r+n,0)),ss(e)?n<=r&&e.indexOf(a,n)>-1:!!r&&Da(e,a,n)>-1},zn.indexOf=function(e,a,n){var i=null==e?0:e.length
if(!i)return-1
var r=null==n?0:ms(n)
return r<0&&(r=vn(i+r,0)),Da(e,a,r)},zn.inRange=function(e,a,n){return a=ps(a),n===r?(n=a,a=0):n=ps(n),function(e,a,n){return e>=gn(a,n)&&e<vn(a,n)}(e=vs(e),a,n)},zn.invoke=Bs,zn.isArguments=Ho,zn.isArray=Fo,zn.isArrayBuffer=Jo,zn.isArrayLike=Uo,zn.isArrayLikeObject=Wo,zn.isBoolean=function(e){return!0===e||!1===e||as(e)&&Mi(e)==g},zn.isBuffer=Zo,zn.isDate=qo,zn.isElement=function(e){return as(e)&&1===e.nodeType&&!rs(e)},zn.isEmpty=function(e){if(null==e)return!0
if(Uo(e)&&(Fo(e)||"string"==typeof e||"function"==typeof e.splice||Zo(e)||us(e)||Ho(e)))return!e.length
var a=dt(e)
if(a==A||a==j)return!e.size
if(bt(e))return!xi(e).length
for(var n in e)if(De.call(e,n))return!1
return!0},zn.isEqual=function(e,a){return Bi(e,a)},zn.isEqualWith=function(e,a,n){var i=(n="function"==typeof n?n:r)?n(e,a):r
return i===r?Bi(e,a,r,n):!!i},zn.isError=Qo,zn.isFinite=function(e){return"number"==typeof e&&pn(e)},zn.isFunction=Yo,zn.isInteger=$o,zn.isLength=Xo,zn.isMap=ns,zn.isMatch=function(e,a){return e===a||Pi(e,a,st(a))},zn.isMatchWith=function(e,a,n){return n="function"==typeof n?n:r,Pi(e,a,st(a),n)},zn.isNaN=function(e){return is(e)&&e!=+e},zn.isNative=function(e){if(yt(e))throw new Se("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.")
return Li(e)},zn.isNil=function(e){return null==e},zn.isNull=function(e){return null===e},zn.isNumber=is,zn.isObject=es,zn.isObjectLike=as,zn.isPlainObject=rs,zn.isRegExp=ts,zn.isSafeInteger=function(e){return $o(e)&&e>=-9007199254740991&&e<=d},zn.isSet=os,zn.isString=ss,zn.isSymbol=ls,zn.isTypedArray=us,zn.isUndefined=function(e){return e===r},zn.isWeakMap=function(e){return as(e)&&dt(e)==B},zn.isWeakSet=function(e){return as(e)&&"[object WeakSet]"==Mi(e)},zn.join=function(e,a){return null==e?"":mn.call(e,a)},zn.kebabCase=Fs,zn.last=qt,zn.lastIndexOf=function(e,a,n){var i=null==e?0:e.length
if(!i)return-1
var t=i
return n!==r&&(t=(t=ms(n))<0?vn(i+t,0):gn(t,i-1)),a==a?function(e,a,n){for(var i=n+1;i--;)if(e[i]===a)return i
return i}(e,a,t):La(e,Ca,t,!0)},zn.lowerCase=Js,zn.lowerFirst=Us,zn.lt=cs,zn.lte=ds,zn.max=function(e){return e&&e.length?pi(e,il,Ti):r},zn.maxBy=function(e,a){return e&&e.length?pi(e,tt(a,2),Ti):r},zn.mean=function(e){return Ka(e,il)},zn.meanBy=function(e,a){return Ka(e,tt(a,2))},zn.min=function(e){return e&&e.length?pi(e,il,Ci):r},zn.minBy=function(e,a){return e&&e.length?pi(e,tt(a,2),Ci):r},zn.stubArray=fl,zn.stubFalse=vl,zn.stubObject=function(){return{}},zn.stubString=function(){return""},zn.stubTrue=function(){return!0},zn.multiply=Al,zn.nth=function(e,a){return e&&e.length?Ii(e,ms(a)):r},zn.noConflict=function(){return ta._===this&&(ta._=ze),this},zn.noop=ll,zn.now=wo,zn.pad=function(e,a,n){e=ks(e)
var i=(a=ms(a))?rn(e):0
if(!a||i>=a)return e
var r=(a-i)/2
return Vr(cn(r),n)+e+Vr(un(r),n)},zn.padEnd=function(e,a,n){e=ks(e)
var i=(a=ms(a))?rn(e):0
return a&&i<a?e+Vr(a-i,n):e},zn.padStart=function(e,a,n){e=ks(e)
var i=(a=ms(a))?rn(e):0
return a&&i<a?Vr(a-i,n)+e:e},zn.parseInt=function(e,a,n){return n||null==a?a=0:a&&(a=+a),yn(ks(e).replace(ie,""),a||0)},zn.random=function(e,a,n){if(n&&"boolean"!=typeof n&&vt(e,a,n)&&(a=n=r),n===r&&("boolean"==typeof a?(n=a,a=r):"boolean"==typeof e&&(n=e,e=r)),e===r&&a===r?(e=0,a=1):(e=ps(e),a===r?(a=e,e=0):a=ps(a)),e>a){var i=e
e=a,a=i}if(n||e%1||a%1){var t=bn()
return gn(e+t*(a-e+aa("1e-"+((t+"").length-1))),a)}return Ji(e,a)},zn.reduce=function(e,a,n){var i=Fo(e)?ja:Oa,r=arguments.length<3
return i(e,tt(a,4),n,r,ci)},zn.reduceRight=function(e,a,n){var i=Fo(e)?Ea:Oa,r=arguments.length<3
return i(e,tt(a,4),n,r,di)},zn.repeat=function(e,a,n){return a=(n?vt(e,a,n):a===r)?1:ms(a),Ui(ks(e),a)},zn.replace=function(){var e=arguments,a=ks(e[0])
return e.length<3?a:a.replace(e[1],e[2])},zn.result=function(e,a,n){var i=-1,t=(a=vr(a,e)).length
for(t||(t=1,e=r);++i<t;){var o=null==e?r:e[Kt(a[i])]
o===r&&(i=t,o=n),e=Yo(o)?o.call(e):o}return e},zn.round=Ml,zn.runInContext=e,zn.sample=function(e){return(Fo(e)?qn:Zi)(e)},zn.size=function(e){if(null==e)return 0
if(Uo(e))return ss(e)?rn(e):e.length
var a=dt(e)
return a==A||a==j?e.size:xi(e).length},zn.snakeCase=Ws,zn.some=function(e,a,n){var i=Fo(e)?Na:ar
return n&&vt(e,a,n)&&(a=r),i(e,tt(a,3))},zn.sortedIndex=function(e,a){return nr(e,a)},zn.sortedIndexBy=function(e,a,n){return ir(e,a,tt(n,2))},zn.sortedIndexOf=function(e,a){var n=null==e?0:e.length
if(n){var i=nr(e,a)
if(i<n&&Io(e[i],a))return i}return-1},zn.sortedLastIndex=function(e,a){return nr(e,a,!0)},zn.sortedLastIndexBy=function(e,a,n){return ir(e,a,tt(n,2),!0)},zn.sortedLastIndexOf=function(e,a){if(null!=e&&e.length){var n=nr(e,a,!0)-1
if(Io(e[n],a))return n}return-1},zn.startCase=Zs,zn.startsWith=function(e,a,n){return e=ks(e),n=null==n?0:ti(ms(n),0,e.length),a=or(a),e.slice(n,n+a.length)==a},zn.subtract=Tl,zn.sum=function(e){return e&&e.length?Ia(e,il):0},zn.sumBy=function(e,a){return e&&e.length?Ia(e,tt(a,2)):0},zn.template=function(e,a,n){var i=zn.templateSettings
n&&vt(e,a,n)&&(a=r),e=ks(e),a=Ss({},a,i,qr)
var t,o,s=Ss({},a.imports,i.imports,qr),l=Ps(s),u=Fa(s,l),c=0,d=a.interpolate||ye,h="__p += '",p=_e((a.escape||ye).source+"|"+d.source+"|"+(d===Y?de:ye).source+"|"+(a.evaluate||ye).source+"|$","g"),m="//# sourceURL="+(De.call(a,"sourceURL")?(a.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++Ye+"]")+"\n"
e.replace(p,(function(a,n,i,r,s,l){return i||(i=r),h+=e.slice(c,l).replace(be,Ya),n&&(t=!0,h+="' +\n__e("+n+") +\n'"),s&&(o=!0,h+="';\n"+s+";\n__p += '"),i&&(h+="' +\n((__t = ("+i+")) == null ? '' : __t) +\n'"),c=l+a.length,a})),h+="';\n"
var f=De.call(a,"variable")&&a.variable
if(f){if(ue.test(f))throw new Se("Invalid `variable` option passed into `_.template`")}else h="with (obj) {\n"+h+"\n}\n"
h=(o?h.replace(G,""):h).replace(H,"$1").replace(F,"$1;"),h="function("+(f||"obj")+") {\n"+(f?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(t?", __e = _.escape":"")+(o?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+h+"return __p\n}"
var v=$s((function(){return Ae(l,m+"return "+h).apply(r,u)}))
if(v.source=h,Qo(v))throw v
return v},zn.times=function(e,a){if((e=ms(e))<1||e>d)return[]
var n=p,i=gn(e,p)
a=tt(a),e-=p
for(var r=Va(i,a);++n<e;)a(n)
return r},zn.toFinite=ps,zn.toInteger=ms,zn.toLength=fs,zn.toLower=function(e){return ks(e).toLowerCase()},zn.toNumber=vs,zn.toSafeInteger=function(e){return e?ti(ms(e),-9007199254740991,d):0===e?e:0},zn.toString=ks,zn.toUpper=function(e){return ks(e).toUpperCase()},zn.trim=function(e,a,n){if((e=ks(e))&&(n||a===r))return Ga(e)
if(!e||!(a=or(a)))return e
var i=tn(e),t=tn(a)
return kr(i,Ua(i,t),Wa(i,t)+1).join("")},zn.trimEnd=function(e,a,n){if((e=ks(e))&&(n||a===r))return e.slice(0,on(e)+1)
if(!e||!(a=or(a)))return e
var i=tn(e)
return kr(i,0,Wa(i,tn(a))+1).join("")},zn.trimStart=function(e,a,n){if((e=ks(e))&&(n||a===r))return e.replace(ie,"")
if(!e||!(a=or(a)))return e
var i=tn(e)
return kr(i,Ua(i,tn(a))).join("")},zn.truncate=function(e,a){var n=30,i="..."
if(es(a)){var t="separator"in a?a.separator:t
n="length"in a?ms(a.length):n,i="omission"in a?or(a.omission):i}var o=(e=ks(e)).length
if($a(e)){var s=tn(e)
o=s.length}if(n>=o)return e
var l=n-rn(i)
if(l<1)return i
var u=s?kr(s,0,l).join(""):e.slice(0,l)
if(t===r)return u+i
if(s&&(l+=u.length-l),ts(t)){if(e.slice(l).search(t)){var c,d=u
for(t.global||(t=_e(t.source,ks(he.exec(t))+"g")),t.lastIndex=0;c=t.exec(d);)var h=c.index
u=u.slice(0,h===r?l:h)}}else if(e.indexOf(or(t),l)!=l){var p=u.lastIndexOf(t)
p>-1&&(u=u.slice(0,p))}return u+i},zn.unescape=function(e){return(e=ks(e))&&W.test(e)?e.replace(J,sn):e},zn.uniqueId=function(e){var a=++xe
return ks(e)+a},zn.upperCase=qs,zn.upperFirst=Qs,zn.each=ko,zn.eachRight=yo,zn.first=Jt,sl(zn,(gl={},ki(zn,(function(e,a){De.call(zn.prototype,a)||(gl[a]=e)})),gl),{chain:!1}),zn.VERSION="4.17.21",ya(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){zn[e].placeholder=zn})),ya(["drop","take"],(function(e,a){Gn.prototype[e]=function(n){n=n===r?1:vn(ms(n),0)
var i=this.__filtered__&&!a?new Gn(this):this.clone()
return i.__filtered__?i.__takeCount__=gn(n,i.__takeCount__):i.__views__.push({size:gn(n,p),type:e+(i.__dir__<0?"Right":"")}),i},Gn.prototype[e+"Right"]=function(a){return this.reverse()[e](a).reverse()}})),ya(["filter","map","takeWhile"],(function(e,a){var n=a+1,i=1==n||3==n
Gn.prototype[e]=function(e){var a=this.clone()
return a.__iteratees__.push({iteratee:tt(e,3),type:n}),a.__filtered__=a.__filtered__||i,a}})),ya(["head","last"],(function(e,a){var n="take"+(a?"Right":"")
Gn.prototype[e]=function(){return this[n](1).value()[0]}})),ya(["initial","tail"],(function(e,a){var n="drop"+(a?"":"Right")
Gn.prototype[e]=function(){return this.__filtered__?new Gn(this):this[n](1)}})),Gn.prototype.compact=function(){return this.filter(il)},Gn.prototype.find=function(e){return this.filter(e).head()},Gn.prototype.findLast=function(e){return this.reverse().find(e)},Gn.prototype.invokeMap=Wi((function(e,a){return"function"==typeof e?new Gn(this):this.map((function(n){return Ei(n,e,a)}))})),Gn.prototype.reject=function(e){return this.filter(Co(tt(e)))},Gn.prototype.slice=function(e,a){e=ms(e)
var n=this
return n.__filtered__&&(e>0||a<0)?new Gn(n):(e<0?n=n.takeRight(-e):e&&(n=n.drop(e)),a!==r&&(n=(a=ms(a))<0?n.dropRight(-a):n.take(a-e)),n)},Gn.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},Gn.prototype.toArray=function(){return this.take(p)},ki(Gn.prototype,(function(e,a){var n=/^(?:filter|find|map|reject)|While$/.test(a),i=/^(?:head|last)$/.test(a),t=zn[i?"take"+("last"==a?"Right":""):a],o=i||/^find/.test(a)
t&&(zn.prototype[a]=function(){var a=this.__wrapped__,s=i?[1]:arguments,l=a instanceof Gn,u=s[0],c=l||Fo(a),d=function(e){var a=t.apply(zn,wa([e],s))
return i&&h?a[0]:a}
c&&n&&"function"==typeof u&&1!=u.length&&(l=c=!1)
var h=this.__chain__,p=!!this.__actions__.length,m=o&&!h,f=l&&!p
if(!o&&c){a=f?a:new Gn(this)
var v=e.apply(a,s)
return v.__actions__.push({func:po,args:[d],thisArg:r}),new Vn(v,h)}return m&&f?e.apply(this,s):(v=this.thru(d),m?i?v.value()[0]:v.value():v)})})),ya(["pop","push","shift","sort","splice","unshift"],(function(e){var a=Ee[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",i=/^(?:pop|shift)$/.test(e)
zn.prototype[e]=function(){var e=arguments
if(i&&!this.__chain__){var r=this.value()
return a.apply(Fo(r)?r:[],e)}return this[n]((function(n){return a.apply(Fo(n)?n:[],e)}))}})),ki(Gn.prototype,(function(e,a){var n=zn[a]
if(n){var i=n.name+""
De.call(Nn,i)||(Nn[i]=[]),Nn[i].push({name:a,func:n})}})),Nn[Rr(r,2).name]=[{name:"wrapper",func:r}],Gn.prototype.clone=function(){var e=new Gn(this.__wrapped__)
return e.__actions__=wr(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=wr(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=wr(this.__views__),e},Gn.prototype.reverse=function(){if(this.__filtered__){var e=new Gn(this)
e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1
return e},Gn.prototype.value=function(){var e=this.__wrapped__.value(),a=this.__dir__,n=Fo(e),i=a<0,r=n?e.length:0,t=function(e,a,n){for(var i=-1,r=n.length;++i<r;){var t=n[i],o=t.size
switch(t.type){case"drop":e+=o
break
case"dropRight":a-=o
break
case"take":a=gn(a,e+o)
break
case"takeRight":e=vn(e,a-o)}}return{start:e,end:a}}(0,r,this.__views__),o=t.start,s=t.end,l=s-o,u=i?s:o-1,c=this.__iteratees__,d=c.length,h=0,p=gn(l,this.__takeCount__)
if(!n||!i&&r==l&&p==l)return dr(e,this.__actions__)
var m=[]
e:for(;l--&&h<p;){for(var f=-1,v=e[u+=a];++f<d;){var g=c[f],k=g.iteratee,y=g.type,b=k(v)
if(2==y)v=b
else if(!b){if(1==y)continue e
break e}}m[h++]=v}return m},zn.prototype.at=mo,zn.prototype.chain=function(){return ho(this)},zn.prototype.commit=function(){return new Vn(this.value(),this.__chain__)},zn.prototype.next=function(){this.__values__===r&&(this.__values__=hs(this.value()))
var e=this.__index__>=this.__values__.length
return{done:e,value:e?r:this.__values__[this.__index__++]}},zn.prototype.plant=function(e){for(var a,n=this;n instanceof In;){var i=zt(n)
i.__index__=0,i.__values__=r,a?t.__wrapped__=i:a=i
var t=i
n=n.__wrapped__}return t.__wrapped__=e,a},zn.prototype.reverse=function(){var e=this.__wrapped__
if(e instanceof Gn){var a=e
return this.__actions__.length&&(a=new Gn(this)),(a=a.reverse()).__actions__.push({func:po,args:[Xt],thisArg:r}),new Vn(a,this.__chain__)}return this.thru(Xt)},zn.prototype.toJSON=zn.prototype.valueOf=zn.prototype.value=function(){return dr(this.__wrapped__,this.__actions__)},zn.prototype.first=zn.prototype.head,oa&&(zn.prototype[oa]=function(){return this}),zn}()
ta._=ln,(i=function(){return ln}.call(a,n,a,e))===r||(e.exports=i)}.call(this)},3321:(e,a,n)=>{var i,r
!function(){var t,o,s,l,u,c,d,h,p,m,f,v,g,k,y,b,S,A,M,T,_,w,j,E,N,B=function(e){var a=new B.Builder
return a.pipeline.add(B.trimmer,B.stopWordFilter,B.stemmer),a.searchPipeline.add(B.stemmer),e.call(a,a),a.build()}
B.version="2.3.9",B.utils={},B.utils.warn=function(e){return function(a){e.console&&console.warn&&console.warn(a)}}(this),B.utils.asString=function(e){return null==e?"":e.toString()},B.utils.clone=function(e){if(null==e)return e
for(var a=Object.create(null),n=Object.keys(e),i=0;i<n.length;i++){var r=n[i],t=e[r]
if(Array.isArray(t))a[r]=t.slice()
else{if("string"!=typeof t&&"number"!=typeof t&&"boolean"!=typeof t)throw new TypeError("clone is not deep and does not support nested objects")
a[r]=t}}return a},B.FieldRef=function(e,a,n){this.docRef=e,this.fieldName=a,this._stringValue=n},B.FieldRef.joiner="/",B.FieldRef.fromString=function(e){var a=e.indexOf(B.FieldRef.joiner)
if(-1===a)throw"malformed field ref string"
var n=e.slice(0,a),i=e.slice(a+1)
return new B.FieldRef(i,n,e)},B.FieldRef.prototype.toString=function(){return null==this._stringValue&&(this._stringValue=this.fieldName+B.FieldRef.joiner+this.docRef),this._stringValue},B.Set=function(e){if(this.elements=Object.create(null),e){this.length=e.length
for(var a=0;a<this.length;a++)this.elements[e[a]]=!0}else this.length=0},B.Set.complete={intersect:function(e){return e},union:function(){return this},contains:function(){return!0}},B.Set.empty={intersect:function(){return this},union:function(e){return e},contains:function(){return!1}},B.Set.prototype.contains=function(e){return!!this.elements[e]},B.Set.prototype.intersect=function(e){var a,n,i,r=[]
if(e===B.Set.complete)return this
if(e===B.Set.empty)return e
this.length<e.length?(a=this,n=e):(a=e,n=this),i=Object.keys(a.elements)
for(var t=0;t<i.length;t++){var o=i[t]
o in n.elements&&r.push(o)}return new B.Set(r)},B.Set.prototype.union=function(e){return e===B.Set.complete?B.Set.complete:e===B.Set.empty?this:new B.Set(Object.keys(this.elements).concat(Object.keys(e.elements)))},B.idf=function(e,a){var n=0
for(var i in e)"_index"!=i&&(n+=Object.keys(e[i]).length)
var r=(a-n+.5)/(n+.5)
return Math.log(1+Math.abs(r))},B.Token=function(e,a){this.str=e||"",this.metadata=a||{}},B.Token.prototype.toString=function(){return this.str},B.Token.prototype.update=function(e){return this.str=e(this.str,this.metadata),this},B.Token.prototype.clone=function(e){return e=e||function(e){return e},new B.Token(e(this.str,this.metadata),this.metadata)},B.tokenizer=function(e,a){if(null==e||null==e)return[]
if(Array.isArray(e))return e.map((function(e){return new B.Token(B.utils.asString(e).toLowerCase(),B.utils.clone(a))}))
for(var n=e.toString().toLowerCase(),i=n.length,r=[],t=0,o=0;t<=i;t++){var s=t-o
if(n.charAt(t).match(B.tokenizer.separator)||t==i){if(s>0){var l=B.utils.clone(a)||{}
l.position=[o,s],l.index=r.length,r.push(new B.Token(n.slice(o,t),l))}o=t+1}}return r},B.tokenizer.separator=/[\s\-]+/,B.Pipeline=function(){this._stack=[]},B.Pipeline.registeredFunctions=Object.create(null),B.Pipeline.registerFunction=function(e,a){a in this.registeredFunctions&&B.utils.warn("Overwriting existing registered function: "+a),e.label=a,B.Pipeline.registeredFunctions[e.label]=e},B.Pipeline.warnIfFunctionNotRegistered=function(e){e.label&&e.label in this.registeredFunctions||B.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},B.Pipeline.load=function(e){var a=new B.Pipeline
return e.forEach((function(e){var n=B.Pipeline.registeredFunctions[e]
if(!n)throw new Error("Cannot load unregistered function: "+e)
a.add(n)})),a},B.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments)
e.forEach((function(e){B.Pipeline.warnIfFunctionNotRegistered(e),this._stack.push(e)}),this)},B.Pipeline.prototype.after=function(e,a){B.Pipeline.warnIfFunctionNotRegistered(a)
var n=this._stack.indexOf(e)
if(-1==n)throw new Error("Cannot find existingFn")
n+=1,this._stack.splice(n,0,a)},B.Pipeline.prototype.before=function(e,a){B.Pipeline.warnIfFunctionNotRegistered(a)
var n=this._stack.indexOf(e)
if(-1==n)throw new Error("Cannot find existingFn")
this._stack.splice(n,0,a)},B.Pipeline.prototype.remove=function(e){var a=this._stack.indexOf(e);-1!=a&&this._stack.splice(a,1)},B.Pipeline.prototype.run=function(e){for(var a=this._stack.length,n=0;n<a;n++){for(var i=this._stack[n],r=[],t=0;t<e.length;t++){var o=i(e[t],t,e)
if(null!=o&&""!==o)if(Array.isArray(o))for(var s=0;s<o.length;s++)r.push(o[s])
else r.push(o)}e=r}return e},B.Pipeline.prototype.runString=function(e,a){var n=new B.Token(e,a)
return this.run([n]).map((function(e){return e.toString()}))},B.Pipeline.prototype.reset=function(){this._stack=[]},B.Pipeline.prototype.toJSON=function(){return this._stack.map((function(e){return B.Pipeline.warnIfFunctionNotRegistered(e),e.label}))},B.Vector=function(e){this._magnitude=0,this.elements=e||[]},B.Vector.prototype.positionForIndex=function(e){if(0==this.elements.length)return 0
for(var a=0,n=this.elements.length/2,i=n-a,r=Math.floor(i/2),t=this.elements[2*r];i>1&&(t<e&&(a=r),t>e&&(n=r),t!=e);)i=n-a,r=a+Math.floor(i/2),t=this.elements[2*r]
return t==e||t>e?2*r:t<e?2*(r+1):void 0},B.Vector.prototype.insert=function(e,a){this.upsert(e,a,(function(){throw"duplicate index"}))},B.Vector.prototype.upsert=function(e,a,n){this._magnitude=0
var i=this.positionForIndex(e)
this.elements[i]==e?this.elements[i+1]=n(this.elements[i+1],a):this.elements.splice(i,0,e,a)},B.Vector.prototype.magnitude=function(){if(this._magnitude)return this._magnitude
for(var e=0,a=this.elements.length,n=1;n<a;n+=2){var i=this.elements[n]
e+=i*i}return this._magnitude=Math.sqrt(e)},B.Vector.prototype.dot=function(e){for(var a=0,n=this.elements,i=e.elements,r=n.length,t=i.length,o=0,s=0,l=0,u=0;l<r&&u<t;)(o=n[l])<(s=i[u])?l+=2:o>s?u+=2:o==s&&(a+=n[l+1]*i[u+1],l+=2,u+=2)
return a},B.Vector.prototype.similarity=function(e){return this.dot(e)/this.magnitude()||0},B.Vector.prototype.toArray=function(){for(var e=new Array(this.elements.length/2),a=1,n=0;a<this.elements.length;a+=2,n++)e[n]=this.elements[a]
return e},B.Vector.prototype.toJSON=function(){return this.elements},B.stemmer=(t={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},o={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},s="[aeiouy]",l="[^aeiou][^aeiouy]*",u=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*"),c=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*[aeiouy][aeiou]*[^aeiou][^aeiouy]*"),d=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*([aeiouy][aeiou]*)?$"),h=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy]"),p=/^(.+?)(ss|i)es$/,m=/^(.+?)([^s])s$/,f=/^(.+?)eed$/,v=/^(.+?)(ed|ing)$/,g=/.$/,k=/(at|bl|iz)$/,y=new RegExp("([^aeiouylsz])\\1$"),b=new RegExp("^"+l+s+"[^aeiouwxy]$"),S=/^(.+?[^aeiou])y$/,A=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,M=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,T=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,_=/^(.+?)(s|t)(ion)$/,w=/^(.+?)e$/,j=/ll$/,E=new RegExp("^"+l+s+"[^aeiouwxy]$"),N=function(e){var a,n,i,r,s,l,N
if(e.length<3)return e
if("y"==(i=e.substr(0,1))&&(e=i.toUpperCase()+e.substr(1)),s=m,(r=p).test(e)?e=e.replace(r,"$1$2"):s.test(e)&&(e=e.replace(s,"$1$2")),s=v,(r=f).test(e)){var B=r.exec(e);(r=u).test(B[1])&&(r=g,e=e.replace(r,""))}else s.test(e)&&(a=(B=s.exec(e))[1],(s=h).test(a)&&(l=y,N=b,(s=k).test(e=a)?e+="e":l.test(e)?(r=g,e=e.replace(r,"")):N.test(e)&&(e+="e")))
return(r=S).test(e)&&(e=(a=(B=r.exec(e))[1])+"i"),(r=A).test(e)&&(a=(B=r.exec(e))[1],n=B[2],(r=u).test(a)&&(e=a+t[n])),(r=M).test(e)&&(a=(B=r.exec(e))[1],n=B[2],(r=u).test(a)&&(e=a+o[n])),s=_,(r=T).test(e)?(a=(B=r.exec(e))[1],(r=c).test(a)&&(e=a)):s.test(e)&&(a=(B=s.exec(e))[1]+B[2],(s=c).test(a)&&(e=a)),(r=w).test(e)&&(a=(B=r.exec(e))[1],s=d,l=E,((r=c).test(a)||s.test(a)&&!l.test(a))&&(e=a)),s=c,(r=j).test(e)&&s.test(e)&&(r=g,e=e.replace(r,"")),"y"==i&&(e=i.toLowerCase()+e.substr(1)),e},function(e){return e.update(N)}),B.Pipeline.registerFunction(B.stemmer,"stemmer"),B.generateStopWordFilter=function(e){var a=e.reduce((function(e,a){return e[a]=a,e}),{})
return function(e){if(e&&a[e.toString()]!==e.toString())return e}},B.stopWordFilter=B.generateStopWordFilter(["a","able","about","across","after","all","almost","also","am","among","an","and","any","are","as","at","be","because","been","but","by","can","cannot","could","dear","did","do","does","either","else","ever","every","for","from","get","got","had","has","have","he","her","hers","him","his","how","however","i","if","in","into","is","it","its","just","least","let","like","likely","may","me","might","most","must","my","neither","no","nor","not","of","off","often","on","only","or","other","our","own","rather","said","say","says","she","should","since","so","some","than","that","the","their","them","then","there","these","they","this","tis","to","too","twas","us","wants","was","we","were","what","when","where","which","while","who","whom","why","will","with","would","yet","you","your"]),B.Pipeline.registerFunction(B.stopWordFilter,"stopWordFilter"),B.trimmer=function(e){return e.update((function(e){return e.replace(/^\W+/,"").replace(/\W+$/,"")}))},B.Pipeline.registerFunction(B.trimmer,"trimmer"),B.TokenSet=function(){this.final=!1,this.edges={},this.id=B.TokenSet._nextId,B.TokenSet._nextId+=1},B.TokenSet._nextId=1,B.TokenSet.fromArray=function(e){for(var a=new B.TokenSet.Builder,n=0,i=e.length;n<i;n++)a.insert(e[n])
return a.finish(),a.root},B.TokenSet.fromClause=function(e){return"editDistance"in e?B.TokenSet.fromFuzzyString(e.term,e.editDistance):B.TokenSet.fromString(e.term)},B.TokenSet.fromFuzzyString=function(e,a){for(var n=new B.TokenSet,i=[{node:n,editsRemaining:a,str:e}];i.length;){var r=i.pop()
if(r.str.length>0){var t,o=r.str.charAt(0)
o in r.node.edges?t=r.node.edges[o]:(t=new B.TokenSet,r.node.edges[o]=t),1==r.str.length&&(t.final=!0),i.push({node:t,editsRemaining:r.editsRemaining,str:r.str.slice(1)})}if(0!=r.editsRemaining){if("*"in r.node.edges)var s=r.node.edges["*"]
else s=new B.TokenSet,r.node.edges["*"]=s
if(0==r.str.length&&(s.final=!0),i.push({node:s,editsRemaining:r.editsRemaining-1,str:r.str}),r.str.length>1&&i.push({node:r.node,editsRemaining:r.editsRemaining-1,str:r.str.slice(1)}),1==r.str.length&&(r.node.final=!0),r.str.length>=1){if("*"in r.node.edges)var l=r.node.edges["*"]
else l=new B.TokenSet,r.node.edges["*"]=l
1==r.str.length&&(l.final=!0),i.push({node:l,editsRemaining:r.editsRemaining-1,str:r.str.slice(1)})}if(r.str.length>1){var u,c=r.str.charAt(0),d=r.str.charAt(1)
d in r.node.edges?u=r.node.edges[d]:(u=new B.TokenSet,r.node.edges[d]=u),1==r.str.length&&(u.final=!0),i.push({node:u,editsRemaining:r.editsRemaining-1,str:c+r.str.slice(2)})}}}return n},B.TokenSet.fromString=function(e){for(var a=new B.TokenSet,n=a,i=0,r=e.length;i<r;i++){var t=e[i],o=i==r-1
if("*"==t)a.edges[t]=a,a.final=o
else{var s=new B.TokenSet
s.final=o,a.edges[t]=s,a=s}}return n},B.TokenSet.prototype.toArray=function(){for(var e=[],a=[{prefix:"",node:this}];a.length;){var n=a.pop(),i=Object.keys(n.node.edges),r=i.length
n.node.final&&(n.prefix.charAt(0),e.push(n.prefix))
for(var t=0;t<r;t++){var o=i[t]
a.push({prefix:n.prefix.concat(o),node:n.node.edges[o]})}}return e},B.TokenSet.prototype.toString=function(){if(this._str)return this._str
for(var e=this.final?"1":"0",a=Object.keys(this.edges).sort(),n=a.length,i=0;i<n;i++){var r=a[i]
e=e+r+this.edges[r].id}return e},B.TokenSet.prototype.intersect=function(e){for(var a=new B.TokenSet,n=void 0,i=[{qNode:e,output:a,node:this}];i.length;){n=i.pop()
for(var r=Object.keys(n.qNode.edges),t=r.length,o=Object.keys(n.node.edges),s=o.length,l=0;l<t;l++)for(var u=r[l],c=0;c<s;c++){var d=o[c]
if(d==u||"*"==u){var h=n.node.edges[d],p=n.qNode.edges[u],m=h.final&&p.final,f=void 0
d in n.output.edges?(f=n.output.edges[d]).final=f.final||m:((f=new B.TokenSet).final=m,n.output.edges[d]=f),i.push({qNode:p,output:f,node:h})}}}return a},B.TokenSet.Builder=function(){this.previousWord="",this.root=new B.TokenSet,this.uncheckedNodes=[],this.minimizedNodes={}},B.TokenSet.Builder.prototype.insert=function(e){var a,n=0
if(e<this.previousWord)throw new Error("Out of order word insertion")
for(var i=0;i<e.length&&i<this.previousWord.length&&e[i]==this.previousWord[i];i++)n++
for(this.minimize(n),a=0==this.uncheckedNodes.length?this.root:this.uncheckedNodes[this.uncheckedNodes.length-1].child,i=n;i<e.length;i++){var r=new B.TokenSet,t=e[i]
a.edges[t]=r,this.uncheckedNodes.push({parent:a,char:t,child:r}),a=r}a.final=!0,this.previousWord=e},B.TokenSet.Builder.prototype.finish=function(){this.minimize(0)},B.TokenSet.Builder.prototype.minimize=function(e){for(var a=this.uncheckedNodes.length-1;a>=e;a--){var n=this.uncheckedNodes[a],i=n.child.toString()
i in this.minimizedNodes?n.parent.edges[n.char]=this.minimizedNodes[i]:(n.child._str=i,this.minimizedNodes[i]=n.child),this.uncheckedNodes.pop()}},B.Index=function(e){this.invertedIndex=e.invertedIndex,this.fieldVectors=e.fieldVectors,this.tokenSet=e.tokenSet,this.fields=e.fields,this.pipeline=e.pipeline},B.Index.prototype.search=function(e){return this.query((function(a){new B.QueryParser(e,a).parse()}))},B.Index.prototype.query=function(e){for(var a=new B.Query(this.fields),n=Object.create(null),i=Object.create(null),r=Object.create(null),t=Object.create(null),o=Object.create(null),s=0;s<this.fields.length;s++)i[this.fields[s]]=new B.Vector
for(e.call(a,a),s=0;s<a.clauses.length;s++){var l,u=a.clauses[s],c=B.Set.empty
l=u.usePipeline?this.pipeline.runString(u.term,{fields:u.fields}):[u.term]
for(var d=0;d<l.length;d++){var h=l[d]
u.term=h
var p=B.TokenSet.fromClause(u),m=this.tokenSet.intersect(p).toArray()
if(0===m.length&&u.presence===B.Query.presence.REQUIRED){for(var f=0;f<u.fields.length;f++)t[L=u.fields[f]]=B.Set.empty
break}for(var v=0;v<m.length;v++){var g=m[v],k=this.invertedIndex[g],y=k._index
for(f=0;f<u.fields.length;f++){var b=k[L=u.fields[f]],S=Object.keys(b),A=g+"/"+L,M=new B.Set(S)
if(u.presence==B.Query.presence.REQUIRED&&(c=c.union(M),void 0===t[L]&&(t[L]=B.Set.complete)),u.presence!=B.Query.presence.PROHIBITED){if(i[L].upsert(y,u.boost,(function(e,a){return e+a})),!r[A]){for(var T=0;T<S.length;T++){var _,w=S[T],j=new B.FieldRef(w,L),E=b[w]
void 0===(_=n[j])?n[j]=new B.MatchData(g,L,E):_.add(g,L,E)}r[A]=!0}}else void 0===o[L]&&(o[L]=B.Set.empty),o[L]=o[L].union(M)}}}if(u.presence===B.Query.presence.REQUIRED)for(f=0;f<u.fields.length;f++)t[L=u.fields[f]]=t[L].intersect(c)}var N=B.Set.complete,P=B.Set.empty
for(s=0;s<this.fields.length;s++){var L
t[L=this.fields[s]]&&(N=N.intersect(t[L])),o[L]&&(P=P.union(o[L]))}var D=Object.keys(n),x=[],C=Object.create(null)
if(a.isNegated())for(D=Object.keys(this.fieldVectors),s=0;s<D.length;s++){j=D[s]
var K=B.FieldRef.fromString(j)
n[j]=new B.MatchData}for(s=0;s<D.length;s++){var R=(K=B.FieldRef.fromString(D[s])).docRef
if(N.contains(R)&&!P.contains(R)){var z,O=this.fieldVectors[K],I=i[K.fieldName].similarity(O)
if(void 0!==(z=C[R]))z.score+=I,z.matchData.combine(n[K])
else{var V={ref:R,score:I,matchData:n[K]}
C[R]=V,x.push(V)}}}return x.sort((function(e,a){return a.score-e.score}))},B.Index.prototype.toJSON=function(){var e=Object.keys(this.invertedIndex).sort().map((function(e){return[e,this.invertedIndex[e]]}),this),a=Object.keys(this.fieldVectors).map((function(e){return[e,this.fieldVectors[e].toJSON()]}),this)
return{version:B.version,fields:this.fields,fieldVectors:a,invertedIndex:e,pipeline:this.pipeline.toJSON()}},B.Index.load=function(e){var a={},n={},i=e.fieldVectors,r=Object.create(null),t=e.invertedIndex,o=new B.TokenSet.Builder,s=B.Pipeline.load(e.pipeline)
e.version!=B.version&&B.utils.warn("Version mismatch when loading serialised index. Current version of lunr '"+B.version+"' does not match serialized index '"+e.version+"'")
for(var l=0;l<i.length;l++){var u=(d=i[l])[0],c=d[1]
n[u]=new B.Vector(c)}for(l=0;l<t.length;l++){var d,h=(d=t[l])[0],p=d[1]
o.insert(h),r[h]=p}return o.finish(),a.fields=e.fields,a.fieldVectors=n,a.invertedIndex=r,a.tokenSet=o.root,a.pipeline=s,new B.Index(a)},B.Builder=function(){this._ref="id",this._fields=Object.create(null),this._documents=Object.create(null),this.invertedIndex=Object.create(null),this.fieldTermFrequencies={},this.fieldLengths={},this.tokenizer=B.tokenizer,this.pipeline=new B.Pipeline,this.searchPipeline=new B.Pipeline,this.documentCount=0,this._b=.75,this._k1=1.2,this.termIndex=0,this.metadataWhitelist=[]},B.Builder.prototype.ref=function(e){this._ref=e},B.Builder.prototype.field=function(e,a){if(/\//.test(e))throw new RangeError("Field '"+e+"' contains illegal character '/'")
this._fields[e]=a||{}},B.Builder.prototype.b=function(e){this._b=e<0?0:e>1?1:e},B.Builder.prototype.k1=function(e){this._k1=e},B.Builder.prototype.add=function(e,a){var n=e[this._ref],i=Object.keys(this._fields)
this._documents[n]=a||{},this.documentCount+=1
for(var r=0;r<i.length;r++){var t=i[r],o=this._fields[t].extractor,s=o?o(e):e[t],l=this.tokenizer(s,{fields:[t]}),u=this.pipeline.run(l),c=new B.FieldRef(n,t),d=Object.create(null)
this.fieldTermFrequencies[c]=d,this.fieldLengths[c]=0,this.fieldLengths[c]+=u.length
for(var h=0;h<u.length;h++){var p=u[h]
if(null==d[p]&&(d[p]=0),d[p]+=1,null==this.invertedIndex[p]){var m=Object.create(null)
m._index=this.termIndex,this.termIndex+=1
for(var f=0;f<i.length;f++)m[i[f]]=Object.create(null)
this.invertedIndex[p]=m}null==this.invertedIndex[p][t][n]&&(this.invertedIndex[p][t][n]=Object.create(null))
for(var v=0;v<this.metadataWhitelist.length;v++){var g=this.metadataWhitelist[v],k=p.metadata[g]
null==this.invertedIndex[p][t][n][g]&&(this.invertedIndex[p][t][n][g]=[]),this.invertedIndex[p][t][n][g].push(k)}}}},B.Builder.prototype.calculateAverageFieldLengths=function(){for(var e=Object.keys(this.fieldLengths),a=e.length,n={},i={},r=0;r<a;r++){var t=B.FieldRef.fromString(e[r]),o=t.fieldName
i[o]||(i[o]=0),i[o]+=1,n[o]||(n[o]=0),n[o]+=this.fieldLengths[t]}var s=Object.keys(this._fields)
for(r=0;r<s.length;r++){var l=s[r]
n[l]=n[l]/i[l]}this.averageFieldLength=n},B.Builder.prototype.createFieldVectors=function(){for(var e={},a=Object.keys(this.fieldTermFrequencies),n=a.length,i=Object.create(null),r=0;r<n;r++){for(var t=B.FieldRef.fromString(a[r]),o=t.fieldName,s=this.fieldLengths[t],l=new B.Vector,u=this.fieldTermFrequencies[t],c=Object.keys(u),d=c.length,h=this._fields[o].boost||1,p=this._documents[t.docRef].boost||1,m=0;m<d;m++){var f,v,g,k=c[m],y=u[k],b=this.invertedIndex[k]._index
void 0===i[k]?(f=B.idf(this.invertedIndex[k],this.documentCount),i[k]=f):f=i[k],v=f*((this._k1+1)*y)/(this._k1*(1-this._b+this._b*(s/this.averageFieldLength[o]))+y),v*=h,v*=p,g=Math.round(1e3*v)/1e3,l.insert(b,g)}e[t]=l}this.fieldVectors=e},B.Builder.prototype.createTokenSet=function(){this.tokenSet=B.TokenSet.fromArray(Object.keys(this.invertedIndex).sort())},B.Builder.prototype.build=function(){return this.calculateAverageFieldLengths(),this.createFieldVectors(),this.createTokenSet(),new B.Index({invertedIndex:this.invertedIndex,fieldVectors:this.fieldVectors,tokenSet:this.tokenSet,fields:Object.keys(this._fields),pipeline:this.searchPipeline})},B.Builder.prototype.use=function(e){var a=Array.prototype.slice.call(arguments,1)
a.unshift(this),e.apply(this,a)},B.MatchData=function(e,a,n){for(var i=Object.create(null),r=Object.keys(n||{}),t=0;t<r.length;t++){var o=r[t]
i[o]=n[o].slice()}this.metadata=Object.create(null),void 0!==e&&(this.metadata[e]=Object.create(null),this.metadata[e][a]=i)},B.MatchData.prototype.combine=function(e){for(var a=Object.keys(e.metadata),n=0;n<a.length;n++){var i=a[n],r=Object.keys(e.metadata[i])
null==this.metadata[i]&&(this.metadata[i]=Object.create(null))
for(var t=0;t<r.length;t++){var o=r[t],s=Object.keys(e.metadata[i][o])
null==this.metadata[i][o]&&(this.metadata[i][o]=Object.create(null))
for(var l=0;l<s.length;l++){var u=s[l]
null==this.metadata[i][o][u]?this.metadata[i][o][u]=e.metadata[i][o][u]:this.metadata[i][o][u]=this.metadata[i][o][u].concat(e.metadata[i][o][u])}}}},B.MatchData.prototype.add=function(e,a,n){if(!(e in this.metadata))return this.metadata[e]=Object.create(null),void(this.metadata[e][a]=n)
if(a in this.metadata[e])for(var i=Object.keys(n),r=0;r<i.length;r++){var t=i[r]
t in this.metadata[e][a]?this.metadata[e][a][t]=this.metadata[e][a][t].concat(n[t]):this.metadata[e][a][t]=n[t]}else this.metadata[e][a]=n},B.Query=function(e){this.clauses=[],this.allFields=e},B.Query.wildcard=new String("*"),B.Query.wildcard.NONE=0,B.Query.wildcard.LEADING=1,B.Query.wildcard.TRAILING=2,B.Query.presence={OPTIONAL:1,REQUIRED:2,PROHIBITED:3},B.Query.prototype.clause=function(e){return"fields"in e||(e.fields=this.allFields),"boost"in e||(e.boost=1),"usePipeline"in e||(e.usePipeline=!0),"wildcard"in e||(e.wildcard=B.Query.wildcard.NONE),e.wildcard&B.Query.wildcard.LEADING&&e.term.charAt(0)!=B.Query.wildcard&&(e.term="*"+e.term),e.wildcard&B.Query.wildcard.TRAILING&&e.term.slice(-1)!=B.Query.wildcard&&(e.term=e.term+"*"),"presence"in e||(e.presence=B.Query.presence.OPTIONAL),this.clauses.push(e),this},B.Query.prototype.isNegated=function(){for(var e=0;e<this.clauses.length;e++)if(this.clauses[e].presence!=B.Query.presence.PROHIBITED)return!1
return!0},B.Query.prototype.term=function(e,a){if(Array.isArray(e))return e.forEach((function(e){this.term(e,B.utils.clone(a))}),this),this
var n=a||{}
return n.term=e.toString(),this.clause(n),this},B.QueryParseError=function(e,a,n){this.name="QueryParseError",this.message=e,this.start=a,this.end=n},B.QueryParseError.prototype=new Error,B.QueryLexer=function(e){this.lexemes=[],this.str=e,this.length=e.length,this.pos=0,this.start=0,this.escapeCharPositions=[]},B.QueryLexer.prototype.run=function(){for(var e=B.QueryLexer.lexText;e;)e=e(this)},B.QueryLexer.prototype.sliceString=function(){for(var e=[],a=this.start,n=this.pos,i=0;i<this.escapeCharPositions.length;i++)n=this.escapeCharPositions[i],e.push(this.str.slice(a,n)),a=n+1
return e.push(this.str.slice(a,this.pos)),this.escapeCharPositions.length=0,e.join("")},B.QueryLexer.prototype.emit=function(e){this.lexemes.push({type:e,str:this.sliceString(),start:this.start,end:this.pos}),this.start=this.pos},B.QueryLexer.prototype.escapeCharacter=function(){this.escapeCharPositions.push(this.pos-1),this.pos+=1},B.QueryLexer.prototype.next=function(){if(this.pos>=this.length)return B.QueryLexer.EOS
var e=this.str.charAt(this.pos)
return this.pos+=1,e},B.QueryLexer.prototype.width=function(){return this.pos-this.start},B.QueryLexer.prototype.ignore=function(){this.start==this.pos&&(this.pos+=1),this.start=this.pos},B.QueryLexer.prototype.backup=function(){this.pos-=1},B.QueryLexer.prototype.acceptDigitRun=function(){var e,a
do{a=(e=this.next()).charCodeAt(0)}while(a>47&&a<58)
e!=B.QueryLexer.EOS&&this.backup()},B.QueryLexer.prototype.more=function(){return this.pos<this.length},B.QueryLexer.EOS="EOS",B.QueryLexer.FIELD="FIELD",B.QueryLexer.TERM="TERM",B.QueryLexer.EDIT_DISTANCE="EDIT_DISTANCE",B.QueryLexer.BOOST="BOOST",B.QueryLexer.PRESENCE="PRESENCE",B.QueryLexer.lexField=function(e){return e.backup(),e.emit(B.QueryLexer.FIELD),e.ignore(),B.QueryLexer.lexText},B.QueryLexer.lexTerm=function(e){if(e.width()>1&&(e.backup(),e.emit(B.QueryLexer.TERM)),e.ignore(),e.more())return B.QueryLexer.lexText},B.QueryLexer.lexEditDistance=function(e){return e.ignore(),e.acceptDigitRun(),e.emit(B.QueryLexer.EDIT_DISTANCE),B.QueryLexer.lexText},B.QueryLexer.lexBoost=function(e){return e.ignore(),e.acceptDigitRun(),e.emit(B.QueryLexer.BOOST),B.QueryLexer.lexText},B.QueryLexer.lexEOS=function(e){e.width()>0&&e.emit(B.QueryLexer.TERM)},B.QueryLexer.termSeparator=B.tokenizer.separator,B.QueryLexer.lexText=function(e){for(;;){var a=e.next()
if(a==B.QueryLexer.EOS)return B.QueryLexer.lexEOS
if(92!=a.charCodeAt(0)){if(":"==a)return B.QueryLexer.lexField
if("~"==a)return e.backup(),e.width()>0&&e.emit(B.QueryLexer.TERM),B.QueryLexer.lexEditDistance
if("^"==a)return e.backup(),e.width()>0&&e.emit(B.QueryLexer.TERM),B.QueryLexer.lexBoost
if("+"==a&&1===e.width())return e.emit(B.QueryLexer.PRESENCE),B.QueryLexer.lexText
if("-"==a&&1===e.width())return e.emit(B.QueryLexer.PRESENCE),B.QueryLexer.lexText
if(a.match(B.QueryLexer.termSeparator))return B.QueryLexer.lexTerm}else e.escapeCharacter()}},B.QueryParser=function(e,a){this.lexer=new B.QueryLexer(e),this.query=a,this.currentClause={},this.lexemeIdx=0},B.QueryParser.prototype.parse=function(){this.lexer.run(),this.lexemes=this.lexer.lexemes
for(var e=B.QueryParser.parseClause;e;)e=e(this)
return this.query},B.QueryParser.prototype.peekLexeme=function(){return this.lexemes[this.lexemeIdx]},B.QueryParser.prototype.consumeLexeme=function(){var e=this.peekLexeme()
return this.lexemeIdx+=1,e},B.QueryParser.prototype.nextClause=function(){var e=this.currentClause
this.query.clause(e),this.currentClause={}},B.QueryParser.parseClause=function(e){var a=e.peekLexeme()
if(null!=a)switch(a.type){case B.QueryLexer.PRESENCE:return B.QueryParser.parsePresence
case B.QueryLexer.FIELD:return B.QueryParser.parseField
case B.QueryLexer.TERM:return B.QueryParser.parseTerm
default:var n="expected either a field or a term, found "+a.type
throw a.str.length>=1&&(n+=" with value '"+a.str+"'"),new B.QueryParseError(n,a.start,a.end)}},B.QueryParser.parsePresence=function(e){var a=e.consumeLexeme()
if(null!=a){switch(a.str){case"-":e.currentClause.presence=B.Query.presence.PROHIBITED
break
case"+":e.currentClause.presence=B.Query.presence.REQUIRED
break
default:var n="unrecognised presence operator'"+a.str+"'"
throw new B.QueryParseError(n,a.start,a.end)}var i=e.peekLexeme()
if(null==i)throw n="expecting term or field, found nothing",new B.QueryParseError(n,a.start,a.end)
switch(i.type){case B.QueryLexer.FIELD:return B.QueryParser.parseField
case B.QueryLexer.TERM:return B.QueryParser.parseTerm
default:throw n="expecting term or field, found '"+i.type+"'",new B.QueryParseError(n,i.start,i.end)}}},B.QueryParser.parseField=function(e){var a=e.consumeLexeme()
if(null!=a){if(-1==e.query.allFields.indexOf(a.str)){var n=e.query.allFields.map((function(e){return"'"+e+"'"})).join(", "),i="unrecognised field '"+a.str+"', possible fields: "+n
throw new B.QueryParseError(i,a.start,a.end)}e.currentClause.fields=[a.str]
var r=e.peekLexeme()
if(null==r)throw i="expecting term, found nothing",new B.QueryParseError(i,a.start,a.end)
if(r.type===B.QueryLexer.TERM)return B.QueryParser.parseTerm
throw i="expecting term, found '"+r.type+"'",new B.QueryParseError(i,r.start,r.end)}},B.QueryParser.parseTerm=function(e){var a=e.consumeLexeme()
if(null!=a){e.currentClause.term=a.str.toLowerCase(),-1!=a.str.indexOf("*")&&(e.currentClause.usePipeline=!1)
var n=e.peekLexeme()
if(null!=n)switch(n.type){case B.QueryLexer.TERM:return e.nextClause(),B.QueryParser.parseTerm
case B.QueryLexer.FIELD:return e.nextClause(),B.QueryParser.parseField
case B.QueryLexer.EDIT_DISTANCE:return B.QueryParser.parseEditDistance
case B.QueryLexer.BOOST:return B.QueryParser.parseBoost
case B.QueryLexer.PRESENCE:return e.nextClause(),B.QueryParser.parsePresence
default:var i="Unexpected lexeme type '"+n.type+"'"
throw new B.QueryParseError(i,n.start,n.end)}else e.nextClause()}},B.QueryParser.parseEditDistance=function(e){var a=e.consumeLexeme()
if(null!=a){var n=parseInt(a.str,10)
if(isNaN(n)){var i="edit distance must be numeric"
throw new B.QueryParseError(i,a.start,a.end)}e.currentClause.editDistance=n
var r=e.peekLexeme()
if(null!=r)switch(r.type){case B.QueryLexer.TERM:return e.nextClause(),B.QueryParser.parseTerm
case B.QueryLexer.FIELD:return e.nextClause(),B.QueryParser.parseField
case B.QueryLexer.EDIT_DISTANCE:return B.QueryParser.parseEditDistance
case B.QueryLexer.BOOST:return B.QueryParser.parseBoost
case B.QueryLexer.PRESENCE:return e.nextClause(),B.QueryParser.parsePresence
default:throw i="Unexpected lexeme type '"+r.type+"'",new B.QueryParseError(i,r.start,r.end)}else e.nextClause()}},B.QueryParser.parseBoost=function(e){var a=e.consumeLexeme()
if(null!=a){var n=parseInt(a.str,10)
if(isNaN(n)){var i="boost must be numeric"
throw new B.QueryParseError(i,a.start,a.end)}e.currentClause.boost=n
var r=e.peekLexeme()
if(null!=r)switch(r.type){case B.QueryLexer.TERM:return e.nextClause(),B.QueryParser.parseTerm
case B.QueryLexer.FIELD:return e.nextClause(),B.QueryParser.parseField
case B.QueryLexer.EDIT_DISTANCE:return B.QueryParser.parseEditDistance
case B.QueryLexer.BOOST:return B.QueryParser.parseBoost
case B.QueryLexer.PRESENCE:return e.nextClause(),B.QueryParser.parsePresence
default:throw i="Unexpected lexeme type '"+r.type+"'",new B.QueryParseError(i,r.start,r.end)}else e.nextClause()}},void 0===(r="function"==typeof(i=function(){return B})?i.call(a,n,a,e):i)||(e.exports=r)}()},8102:(e,a)=>{"use strict"
function n(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function i(e,a,i){return a&&n(e.prototype,a),i&&n(e,i),e}function r(){return r=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a]
for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},r.apply(this,arguments)}function t(e,a){e.prototype=Object.create(a.prototype),e.prototype.constructor=e,s(e,a)}function o(e){return o=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},o(e)}function s(e,a){return s=Object.setPrototypeOf||function(e,a){return e.__proto__=a,e},s(e,a)}function l(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function u(e,a,n){return u=l()?Reflect.construct:function(e,a,n){var i=[null]
i.push.apply(i,a)
var r=new(Function.bind.apply(e,i))
return n&&s(r,n.prototype),r},u.apply(null,arguments)}function c(e){var a="function"==typeof Map?new Map:void 0
return c=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e
var n
if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function")
if(void 0!==a){if(a.has(e))return a.get(e)
a.set(e,i)}function i(){return u(e,arguments,o(this).constructor)}return i.prototype=Object.create(e.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),s(i,e)},c(e)}function d(e,a){if(null==e)return{}
var n,i,r={},t=Object.keys(e)
for(i=0;i<t.length;i++)n=t[i],a.indexOf(n)>=0||(r[n]=e[n])
return r}function h(e,a){(null==a||a>e.length)&&(a=e.length)
for(var n=0,i=new Array(a);n<a;n++)i[n]=e[n]
return i}function p(e,a){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]
if(n)return(n=n.call(e)).next.bind(n)
if(Array.isArray(e)||(n=function(e,a){if(e){if("string"==typeof e)return h(e,a)
var n=Object.prototype.toString.call(e).slice(8,-1)
return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?h(e,a):void 0}}(e))||a&&e&&"number"==typeof e.length){n&&(e=n)
var i=0
return function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}Object.defineProperty(a,"__esModule",{value:!0})
var m=function(e){function a(){return e.apply(this,arguments)||this}return t(a,e),a}(c(Error)),f=function(e){function a(a){return e.call(this,"Invalid DateTime: "+a.toMessage())||this}return t(a,e),a}(m),v=function(e){function a(a){return e.call(this,"Invalid Interval: "+a.toMessage())||this}return t(a,e),a}(m),g=function(e){function a(a){return e.call(this,"Invalid Duration: "+a.toMessage())||this}return t(a,e),a}(m),k=function(e){function a(){return e.apply(this,arguments)||this}return t(a,e),a}(m),y=function(e){function a(a){return e.call(this,"Invalid unit "+a)||this}return t(a,e),a}(m),b=function(e){function a(){return e.apply(this,arguments)||this}return t(a,e),a}(m),S=function(e){function a(){return e.call(this,"Zone is an abstract class")||this}return t(a,e),a}(m),A="numeric",M="short",T="long",_={year:A,month:A,day:A},w={year:A,month:M,day:A},j={year:A,month:M,day:A,weekday:M},E={year:A,month:T,day:A},N={year:A,month:T,day:A,weekday:T},B={hour:A,minute:A},P={hour:A,minute:A,second:A},L={hour:A,minute:A,second:A,timeZoneName:M},D={hour:A,minute:A,second:A,timeZoneName:T},x={hour:A,minute:A,hourCycle:"h23"},C={hour:A,minute:A,second:A,hourCycle:"h23"},K={hour:A,minute:A,second:A,hourCycle:"h23",timeZoneName:M},R={hour:A,minute:A,second:A,hourCycle:"h23",timeZoneName:T},z={year:A,month:A,day:A,hour:A,minute:A},O={year:A,month:A,day:A,hour:A,minute:A,second:A},I={year:A,month:M,day:A,hour:A,minute:A},V={year:A,month:M,day:A,hour:A,minute:A,second:A},G={year:A,month:M,day:A,weekday:M,hour:A,minute:A},H={year:A,month:T,day:A,hour:A,minute:A,timeZoneName:M},F={year:A,month:T,day:A,hour:A,minute:A,second:A,timeZoneName:M},J={year:A,month:T,day:A,weekday:T,hour:A,minute:A,timeZoneName:T},U={year:A,month:T,day:A,weekday:T,hour:A,minute:A,second:A,timeZoneName:T}
function W(e){return void 0===e}function Z(e){return"number"==typeof e}function q(e){return"number"==typeof e&&e%1==0}function Q(){try{return"undefined"!=typeof Intl&&!!Intl.RelativeTimeFormat}catch(e){return!1}}function Y(e,a,n){if(0!==e.length)return e.reduce((function(e,i){var r=[a(i),i]
return e&&n(e[0],r[0])===e[0]?e:r}),null)[1]}function $(e,a){return Object.prototype.hasOwnProperty.call(e,a)}function X(e,a,n){return q(e)&&e>=a&&e<=n}function ee(e,a){return void 0===a&&(a=2),e<0?"-"+(""+-e).padStart(a,"0"):(""+e).padStart(a,"0")}function ae(e){return W(e)||null===e||""===e?void 0:parseInt(e,10)}function ne(e){return W(e)||null===e||""===e?void 0:parseFloat(e)}function ie(e){if(!W(e)&&null!==e&&""!==e){var a=1e3*parseFloat("0."+e)
return Math.floor(a)}}function re(e,a,n){void 0===n&&(n=!1)
var i=Math.pow(10,a)
return(n?Math.trunc:Math.round)(e*i)/i}function te(e){return e%4==0&&(e%100!=0||e%400==0)}function oe(e){return te(e)?366:365}function se(e,a){var n,i=(n=a-1)-12*Math.floor(n/12)+1
return 2===i?te(e+(a-i)/12)?29:28:[31,null,31,30,31,30,31,31,30,31,30,31][i-1]}function le(e){var a=Date.UTC(e.year,e.month-1,e.day,e.hour,e.minute,e.second,e.millisecond)
return e.year<100&&e.year>=0&&(a=new Date(a)).setUTCFullYear(a.getUTCFullYear()-1900),+a}function ue(e){var a=(e+Math.floor(e/4)-Math.floor(e/100)+Math.floor(e/400))%7,n=e-1,i=(n+Math.floor(n/4)-Math.floor(n/100)+Math.floor(n/400))%7
return 4===a||3===i?53:52}function ce(e){return e>99?e:e>60?1900+e:2e3+e}function de(e,a,n,i){void 0===i&&(i=null)
var t=new Date(e),o={hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"}
i&&(o.timeZone=i)
var s=r({timeZoneName:a},o),l=new Intl.DateTimeFormat(n,s).formatToParts(t).find((function(e){return"timezonename"===e.type.toLowerCase()}))
return l?l.value:null}function he(e,a){var n=parseInt(e,10)
Number.isNaN(n)&&(n=0)
var i=parseInt(a,10)||0
return 60*n+(n<0||Object.is(n,-0)?-i:i)}function pe(e){var a=Number(e)
if("boolean"==typeof e||""===e||Number.isNaN(a))throw new b("Invalid unit value "+e)
return a}function me(e,a){var n={}
for(var i in e)if($(e,i)){var r=e[i]
if(null==r)continue
n[a(i)]=pe(r)}return n}function fe(e,a){var n=Math.trunc(Math.abs(e/60)),i=Math.trunc(Math.abs(e%60)),r=e>=0?"+":"-"
switch(a){case"short":return""+r+ee(n,2)+":"+ee(i,2)
case"narrow":return""+r+n+(i>0?":"+i:"")
case"techie":return""+r+ee(n,2)+ee(i,2)
default:throw new RangeError("Value format "+a+" is out of range for property format")}}function ve(e){return function(e,a){return["hour","minute","second","millisecond"].reduce((function(a,n){return a[n]=e[n],a}),{})}(e)}var ge=/[A-Za-z_+-]{1,256}(:?\/[A-Za-z0-9_+-]{1,256}(\/[A-Za-z0-9_+-]{1,256})?)?/,ke=["January","February","March","April","May","June","July","August","September","October","November","December"],ye=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],be=["J","F","M","A","M","J","J","A","S","O","N","D"]
function Se(e){switch(e){case"narrow":return[].concat(be)
case"short":return[].concat(ye)
case"long":return[].concat(ke)
case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"]
case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"]
default:return null}}var Ae=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],Me=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],Te=["M","T","W","T","F","S","S"]
function _e(e){switch(e){case"narrow":return[].concat(Te)
case"short":return[].concat(Me)
case"long":return[].concat(Ae)
case"numeric":return["1","2","3","4","5","6","7"]
default:return null}}var we=["AM","PM"],je=["Before Christ","Anno Domini"],Ee=["BC","AD"],Ne=["B","A"]
function Be(e){switch(e){case"narrow":return[].concat(Ne)
case"short":return[].concat(Ee)
case"long":return[].concat(je)
default:return null}}function Pe(e,a){for(var n,i="",r=p(e);!(n=r()).done;){var t=n.value
t.literal?i+=t.val:i+=a(t.val)}return i}var Le={D:_,DD:w,DDD:E,DDDD:N,t:B,tt:P,ttt:L,tttt:D,T:x,TT:C,TTT:K,TTTT:R,f:z,ff:I,fff:H,ffff:J,F:O,FF:V,FFF:F,FFFF:U},De=function(){function e(e,a){this.opts=a,this.loc=e,this.systemLoc=null}e.create=function(a,n){return void 0===n&&(n={}),new e(a,n)},e.parseFormat=function(e){for(var a=null,n="",i=!1,r=[],t=0;t<e.length;t++){var o=e.charAt(t)
"'"===o?(n.length>0&&r.push({literal:i,val:n}),a=null,n="",i=!i):i||o===a?n+=o:(n.length>0&&r.push({literal:!1,val:n}),n=o,a=o)}return n.length>0&&r.push({literal:i,val:n}),r},e.macroTokenToFormatOpts=function(e){return Le[e]}
var a=e.prototype
return a.formatWithSystemDefault=function(e,a){return null===this.systemLoc&&(this.systemLoc=this.loc.redefaultToSystem()),this.systemLoc.dtFormatter(e,r({},this.opts,a)).format()},a.formatDateTime=function(e,a){return void 0===a&&(a={}),this.loc.dtFormatter(e,r({},this.opts,a)).format()},a.formatDateTimeParts=function(e,a){return void 0===a&&(a={}),this.loc.dtFormatter(e,r({},this.opts,a)).formatToParts()},a.resolvedOptions=function(e,a){return void 0===a&&(a={}),this.loc.dtFormatter(e,r({},this.opts,a)).resolvedOptions()},a.num=function(e,a){if(void 0===a&&(a=0),this.opts.forceSimple)return ee(e,a)
var n=r({},this.opts)
return a>0&&(n.padTo=a),this.loc.numberFormatter(n).format(e)},a.formatDateTimeFromString=function(a,n){var i=this,r="en"===this.loc.listingMode(),t=this.loc.outputCalendar&&"gregory"!==this.loc.outputCalendar,o=function(e,n){return i.loc.extract(a,e,n)},s=function(e){return a.isOffsetFixed&&0===a.offset&&e.allowZ?"Z":a.isValid?a.zone.formatOffset(a.ts,e.format):""},l=function(e,n){return r?function(e,a){return Se(a)[e.month-1]}(a,e):o(n?{month:e}:{month:e,day:"numeric"},"month")},u=function(e,n){return r?function(e,a){return _e(a)[e.weekday-1]}(a,e):o(n?{weekday:e}:{weekday:e,month:"long",day:"numeric"},"weekday")},c=function(e){return r?function(e,a){return Be(a)[e.year<0?0:1]}(a,e):o({era:e},"era")}
return Pe(e.parseFormat(n),(function(n){switch(n){case"S":return i.num(a.millisecond)
case"u":case"SSS":return i.num(a.millisecond,3)
case"s":return i.num(a.second)
case"ss":return i.num(a.second,2)
case"uu":return i.num(Math.floor(a.millisecond/10),2)
case"uuu":return i.num(Math.floor(a.millisecond/100))
case"m":return i.num(a.minute)
case"mm":return i.num(a.minute,2)
case"h":return i.num(a.hour%12==0?12:a.hour%12)
case"hh":return i.num(a.hour%12==0?12:a.hour%12,2)
case"H":return i.num(a.hour)
case"HH":return i.num(a.hour,2)
case"Z":return s({format:"narrow",allowZ:i.opts.allowZ})
case"ZZ":return s({format:"short",allowZ:i.opts.allowZ})
case"ZZZ":return s({format:"techie",allowZ:i.opts.allowZ})
case"ZZZZ":return a.zone.offsetName(a.ts,{format:"short",locale:i.loc.locale})
case"ZZZZZ":return a.zone.offsetName(a.ts,{format:"long",locale:i.loc.locale})
case"z":return a.zoneName
case"a":return r?function(e){return we[e.hour<12?0:1]}(a):o({hour:"numeric",hourCycle:"h12"},"dayperiod")
case"d":return t?o({day:"numeric"},"day"):i.num(a.day)
case"dd":return t?o({day:"2-digit"},"day"):i.num(a.day,2)
case"c":case"E":return i.num(a.weekday)
case"ccc":return u("short",!0)
case"cccc":return u("long",!0)
case"ccccc":return u("narrow",!0)
case"EEE":return u("short",!1)
case"EEEE":return u("long",!1)
case"EEEEE":return u("narrow",!1)
case"L":return t?o({month:"numeric",day:"numeric"},"month"):i.num(a.month)
case"LL":return t?o({month:"2-digit",day:"numeric"},"month"):i.num(a.month,2)
case"LLL":return l("short",!0)
case"LLLL":return l("long",!0)
case"LLLLL":return l("narrow",!0)
case"M":return t?o({month:"numeric"},"month"):i.num(a.month)
case"MM":return t?o({month:"2-digit"},"month"):i.num(a.month,2)
case"MMM":return l("short",!1)
case"MMMM":return l("long",!1)
case"MMMMM":return l("narrow",!1)
case"y":return t?o({year:"numeric"},"year"):i.num(a.year)
case"yy":return t?o({year:"2-digit"},"year"):i.num(a.year.toString().slice(-2),2)
case"yyyy":return t?o({year:"numeric"},"year"):i.num(a.year,4)
case"yyyyyy":return t?o({year:"numeric"},"year"):i.num(a.year,6)
case"G":return c("short")
case"GG":return c("long")
case"GGGGG":return c("narrow")
case"kk":return i.num(a.weekYear.toString().slice(-2),2)
case"kkkk":return i.num(a.weekYear,4)
case"W":return i.num(a.weekNumber)
case"WW":return i.num(a.weekNumber,2)
case"o":return i.num(a.ordinal)
case"ooo":return i.num(a.ordinal,3)
case"q":return i.num(a.quarter)
case"qq":return i.num(a.quarter,2)
case"X":return i.num(Math.floor(a.ts/1e3))
case"x":return i.num(a.ts)
default:return function(n){var r=e.macroTokenToFormatOpts(n)
return r?i.formatWithSystemDefault(a,r):n}(n)}}))},a.formatDurationFromString=function(a,n){var i,r=this,t=function(e){switch(e[0]){case"S":return"millisecond"
case"s":return"second"
case"m":return"minute"
case"h":return"hour"
case"d":return"day"
case"M":return"month"
case"y":return"year"
default:return null}},o=e.parseFormat(n),s=o.reduce((function(e,a){var n=a.literal,i=a.val
return n?e:e.concat(i)}),[]),l=a.shiftTo.apply(a,s.map(t).filter((function(e){return e})))
return Pe(o,(i=l,function(e){var a=t(e)
return a?r.num(i.get(a),e.length):e}))},e}(),xe=function(){function e(e,a){this.reason=e,this.explanation=a}return e.prototype.toMessage=function(){return this.explanation?this.reason+": "+this.explanation:this.reason},e}(),Ce=function(){function e(){}var a=e.prototype
return a.offsetName=function(e,a){throw new S},a.formatOffset=function(e,a){throw new S},a.offset=function(e){throw new S},a.equals=function(e){throw new S},i(e,[{key:"type",get:function(){throw new S}},{key:"name",get:function(){throw new S}},{key:"isUniversal",get:function(){throw new S}},{key:"isValid",get:function(){throw new S}}]),e}(),Ke=null,Re=function(e){function a(){return e.apply(this,arguments)||this}t(a,e)
var n=a.prototype
return n.offsetName=function(e,a){return de(e,a.format,a.locale)},n.formatOffset=function(e,a){return fe(this.offset(e),a)},n.offset=function(e){return-new Date(e).getTimezoneOffset()},n.equals=function(e){return"system"===e.type},i(a,[{key:"type",get:function(){return"system"}},{key:"name",get:function(){return(new Intl.DateTimeFormat).resolvedOptions().timeZone}},{key:"isUniversal",get:function(){return!1}},{key:"isValid",get:function(){return!0}}],[{key:"instance",get:function(){return null===Ke&&(Ke=new a),Ke}}]),a}(Ce),ze=RegExp("^"+ge.source+"$"),Oe={},Ie={year:0,month:1,day:2,hour:3,minute:4,second:5},Ve={},Ge=function(e){function a(n){var i
return(i=e.call(this)||this).zoneName=n,i.valid=a.isValidZone(n),i}t(a,e),a.create=function(e){return Ve[e]||(Ve[e]=new a(e)),Ve[e]},a.resetCache=function(){Ve={},Oe={}},a.isValidSpecifier=function(e){return!(!e||!e.match(ze))},a.isValidZone=function(e){if(!e)return!1
try{return new Intl.DateTimeFormat("en-US",{timeZone:e}).format(),!0}catch(e){return!1}}
var n=a.prototype
return n.offsetName=function(e,a){return de(e,a.format,a.locale,this.name)},n.formatOffset=function(e,a){return fe(this.offset(e),a)},n.offset=function(e){var a=new Date(e)
if(isNaN(a))return NaN
var n,i=(n=this.name,Oe[n]||(Oe[n]=new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:n,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"})),Oe[n]),r=i.formatToParts?function(e,a){for(var n=e.formatToParts(a),i=[],r=0;r<n.length;r++){var t=n[r],o=t.type,s=t.value,l=Ie[o]
W(l)||(i[l]=parseInt(s,10))}return i}(i,a):function(e,a){var n=e.format(a).replace(/\u200E/g,""),i=/(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(n),r=i[1],t=i[2]
return[i[3],r,t,i[4],i[5],i[6]]}(i,a),t=r[0],o=r[1],s=r[2],l=r[3],u=+a,c=u%1e3
return(le({year:t,month:o,day:s,hour:24===l?0:l,minute:r[4],second:r[5],millisecond:0})-(u-=c>=0?c:1e3+c))/6e4},n.equals=function(e){return"iana"===e.type&&e.name===this.name},i(a,[{key:"type",get:function(){return"iana"}},{key:"name",get:function(){return this.zoneName}},{key:"isUniversal",get:function(){return!1}},{key:"isValid",get:function(){return this.valid}}]),a}(Ce),He=null,Fe=function(e){function a(a){var n
return(n=e.call(this)||this).fixed=a,n}t(a,e),a.instance=function(e){return 0===e?a.utcInstance:new a(e)},a.parseSpecifier=function(e){if(e){var n=e.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i)
if(n)return new a(he(n[1],n[2]))}return null}
var n=a.prototype
return n.offsetName=function(){return this.name},n.formatOffset=function(e,a){return fe(this.fixed,a)},n.offset=function(){return this.fixed},n.equals=function(e){return"fixed"===e.type&&e.fixed===this.fixed},i(a,[{key:"type",get:function(){return"fixed"}},{key:"name",get:function(){return 0===this.fixed?"UTC":"UTC"+fe(this.fixed,"narrow")}},{key:"isUniversal",get:function(){return!0}},{key:"isValid",get:function(){return!0}}],[{key:"utcInstance",get:function(){return null===He&&(He=new a(0)),He}}]),a}(Ce),Je=function(e){function a(a){var n
return(n=e.call(this)||this).zoneName=a,n}t(a,e)
var n=a.prototype
return n.offsetName=function(){return null},n.formatOffset=function(){return""},n.offset=function(){return NaN},n.equals=function(){return!1},i(a,[{key:"type",get:function(){return"invalid"}},{key:"name",get:function(){return this.zoneName}},{key:"isUniversal",get:function(){return!1}},{key:"isValid",get:function(){return!1}}]),a}(Ce)
function Ue(e,a){if(W(e)||null===e)return a
if(e instanceof Ce)return e
if("string"==typeof e){var n=e.toLowerCase()
return"local"===n||"system"===n?a:"utc"===n||"gmt"===n?Fe.utcInstance:Ge.isValidSpecifier(n)?Ge.create(e):Fe.parseSpecifier(n)||new Je(e)}return Z(e)?Fe.instance(e):"object"==typeof e&&e.offset&&"number"==typeof e.offset?e:new Je(e)}var We,Ze=function(){return Date.now()},qe="system",Qe=null,Ye=null,$e=null,Xe=function(){function e(){}return e.resetCaches=function(){ha.resetCache(),Ge.resetCache()},i(e,null,[{key:"now",get:function(){return Ze},set:function(e){Ze=e}},{key:"defaultZone",get:function(){return Ue(qe,Re.instance)},set:function(e){qe=e}},{key:"defaultLocale",get:function(){return Qe},set:function(e){Qe=e}},{key:"defaultNumberingSystem",get:function(){return Ye},set:function(e){Ye=e}},{key:"defaultOutputCalendar",get:function(){return $e},set:function(e){$e=e}},{key:"throwOnInvalid",get:function(){return We},set:function(e){We=e}}]),e}(),ea=["base"],aa=["padTo","floor"],na={},ia={}
function ra(e,a){void 0===a&&(a={})
var n=JSON.stringify([e,a]),i=ia[n]
return i||(i=new Intl.DateTimeFormat(e,a),ia[n]=i),i}var ta={},oa={},sa=null
function la(e,a,n,i,r){var t=e.listingMode(n)
return"error"===t?null:"en"===t?i(a):r(a)}var ua=function(){function e(e,a,n){this.padTo=n.padTo||0,this.floor=n.floor||!1,n.padTo,n.floor
var i=d(n,aa)
if(!a||Object.keys(i).length>0){var t=r({useGrouping:!1},n)
n.padTo>0&&(t.minimumIntegerDigits=n.padTo),this.inf=function(e,a){void 0===a&&(a={})
var n=JSON.stringify([e,a]),i=ta[n]
return i||(i=new Intl.NumberFormat(e,a),ta[n]=i),i}(e,t)}}return e.prototype.format=function(e){if(this.inf){var a=this.floor?Math.floor(e):e
return this.inf.format(a)}return ee(this.floor?Math.floor(e):re(e,3),this.padTo)},e}(),ca=function(){function e(e,a,n){var i
if(this.opts=n,e.zone.isUniversal){var t=e.offset/60*-1,o=t>=0?"Etc/GMT+"+t:"Etc/GMT"+t
0!==e.offset&&Ge.create(o).valid?(i=o,this.dt=e):(i="UTC",n.timeZoneName?this.dt=e:this.dt=0===e.offset?e:ci.fromMillis(e.ts+60*e.offset*1e3))}else"system"===e.zone.type?this.dt=e:(this.dt=e,i=e.zone.name)
var s=r({},this.opts)
i&&(s.timeZone=i),this.dtf=ra(a,s)}var a=e.prototype
return a.format=function(){return this.dtf.format(this.dt.toJSDate())},a.formatToParts=function(){return this.dtf.formatToParts(this.dt.toJSDate())},a.resolvedOptions=function(){return this.dtf.resolvedOptions()},e}(),da=function(){function e(e,a,n){this.opts=r({style:"long"},n),!a&&Q()&&(this.rtf=function(e,a){void 0===a&&(a={})
var n=a
n.base
var i=d(n,ea),r=JSON.stringify([e,i]),t=oa[r]
return t||(t=new Intl.RelativeTimeFormat(e,a),oa[r]=t),t}(e,n))}var a=e.prototype
return a.format=function(e,a){return this.rtf?this.rtf.format(e,a):function(e,a,n,i){void 0===n&&(n="always"),void 0===i&&(i=!1)
var r={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."]},t=-1===["hours","minutes","seconds"].indexOf(e)
if("auto"===n&&t){var o="days"===e
switch(a){case 1:return o?"tomorrow":"next "+r[e][0]
case-1:return o?"yesterday":"last "+r[e][0]
case 0:return o?"today":"this "+r[e][0]}}var s=Object.is(a,-0)||a<0,l=Math.abs(a),u=1===l,c=r[e],d=i?u?c[1]:c[2]||c[1]:u?r[e][0]:e
return s?l+" "+d+" ago":"in "+l+" "+d}(a,e,this.opts.numeric,"long"!==this.opts.style)},a.formatToParts=function(e,a){return this.rtf?this.rtf.formatToParts(e,a):[]},e}(),ha=function(){function e(e,a,n,i){var r=function(e){var a=e.indexOf("-u-")
if(-1===a)return[e]
var n,i=e.substring(0,a)
try{n=ra(e).resolvedOptions()}catch(e){n=ra(i).resolvedOptions()}var r=n
return[i,r.numberingSystem,r.calendar]}(e),t=r[0],o=r[1],s=r[2]
this.locale=t,this.numberingSystem=a||o||null,this.outputCalendar=n||s||null,this.intl=function(e,a,n){return n||a?(e+="-u",n&&(e+="-ca-"+n),a&&(e+="-nu-"+a),e):e}(this.locale,this.numberingSystem,this.outputCalendar),this.weekdaysCache={format:{},standalone:{}},this.monthsCache={format:{},standalone:{}},this.meridiemCache=null,this.eraCache={},this.specifiedLocale=i,this.fastNumbersCached=null}e.fromOpts=function(a){return e.create(a.locale,a.numberingSystem,a.outputCalendar,a.defaultToEN)},e.create=function(a,n,i,r){void 0===r&&(r=!1)
var t=a||Xe.defaultLocale
return new e(t||(r?"en-US":sa||(sa=(new Intl.DateTimeFormat).resolvedOptions().locale)),n||Xe.defaultNumberingSystem,i||Xe.defaultOutputCalendar,t)},e.resetCache=function(){sa=null,ia={},ta={},oa={}},e.fromObject=function(a){var n=void 0===a?{}:a,i=n.locale,r=n.numberingSystem,t=n.outputCalendar
return e.create(i,r,t)}
var a=e.prototype
return a.listingMode=function(){var e=this.isEnglish(),a=!(null!==this.numberingSystem&&"latn"!==this.numberingSystem||null!==this.outputCalendar&&"gregory"!==this.outputCalendar)
return e&&a?"en":"intl"},a.clone=function(a){return a&&0!==Object.getOwnPropertyNames(a).length?e.create(a.locale||this.specifiedLocale,a.numberingSystem||this.numberingSystem,a.outputCalendar||this.outputCalendar,a.defaultToEN||!1):this},a.redefaultToEN=function(e){return void 0===e&&(e={}),this.clone(r({},e,{defaultToEN:!0}))},a.redefaultToSystem=function(e){return void 0===e&&(e={}),this.clone(r({},e,{defaultToEN:!1}))},a.months=function(e,a,n){var i=this
return void 0===a&&(a=!1),void 0===n&&(n=!0),la(this,e,n,Se,(function(){var n=a?{month:e,day:"numeric"}:{month:e},r=a?"format":"standalone"
return i.monthsCache[r][e]||(i.monthsCache[r][e]=function(e){for(var a=[],n=1;n<=12;n++){var i=ci.utc(2016,n,1)
a.push(e(i))}return a}((function(e){return i.extract(e,n,"month")}))),i.monthsCache[r][e]}))},a.weekdays=function(e,a,n){var i=this
return void 0===a&&(a=!1),void 0===n&&(n=!0),la(this,e,n,_e,(function(){var n=a?{weekday:e,year:"numeric",month:"long",day:"numeric"}:{weekday:e},r=a?"format":"standalone"
return i.weekdaysCache[r][e]||(i.weekdaysCache[r][e]=function(e){for(var a=[],n=1;n<=7;n++){var i=ci.utc(2016,11,13+n)
a.push(e(i))}return a}((function(e){return i.extract(e,n,"weekday")}))),i.weekdaysCache[r][e]}))},a.meridiems=function(e){var a=this
return void 0===e&&(e=!0),la(this,void 0,e,(function(){return we}),(function(){if(!a.meridiemCache){var e={hour:"numeric",hourCycle:"h12"}
a.meridiemCache=[ci.utc(2016,11,13,9),ci.utc(2016,11,13,19)].map((function(n){return a.extract(n,e,"dayperiod")}))}return a.meridiemCache}))},a.eras=function(e,a){var n=this
return void 0===a&&(a=!0),la(this,e,a,Be,(function(){var a={era:e}
return n.eraCache[e]||(n.eraCache[e]=[ci.utc(-40,1,1),ci.utc(2017,1,1)].map((function(e){return n.extract(e,a,"era")}))),n.eraCache[e]}))},a.extract=function(e,a,n){var i=this.dtFormatter(e,a).formatToParts().find((function(e){return e.type.toLowerCase()===n}))
return i?i.value:null},a.numberFormatter=function(e){return void 0===e&&(e={}),new ua(this.intl,e.forceSimple||this.fastNumbers,e)},a.dtFormatter=function(e,a){return void 0===a&&(a={}),new ca(e,this.intl,a)},a.relFormatter=function(e){return void 0===e&&(e={}),new da(this.intl,this.isEnglish(),e)},a.listFormatter=function(e){return void 0===e&&(e={}),function(e,a){void 0===a&&(a={})
var n=JSON.stringify([e,a]),i=na[n]
return i||(i=new Intl.ListFormat(e,a),na[n]=i),i}(this.intl,e)},a.isEnglish=function(){return"en"===this.locale||"en-us"===this.locale.toLowerCase()||new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us")},a.equals=function(e){return this.locale===e.locale&&this.numberingSystem===e.numberingSystem&&this.outputCalendar===e.outputCalendar},i(e,[{key:"fastNumbers",get:function(){var e
return null==this.fastNumbersCached&&(this.fastNumbersCached=(!(e=this).numberingSystem||"latn"===e.numberingSystem)&&("latn"===e.numberingSystem||!e.locale||e.locale.startsWith("en")||"latn"===new Intl.DateTimeFormat(e.intl).resolvedOptions().numberingSystem)),this.fastNumbersCached}}]),e}()
function pa(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
var i=a.reduce((function(e,a){return e+a.source}),"")
return RegExp("^"+i+"$")}function ma(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
return function(e){return a.reduce((function(a,n){var i=a[0],t=a[1],o=a[2],s=n(e,o),l=s[0],u=s[1],c=s[2]
return[r({},i,l),t||u,c]}),[{},null,1]).slice(0,2)}}function fa(e){if(null==e)return[null,null]
for(var a=arguments.length,n=new Array(a>1?a-1:0),i=1;i<a;i++)n[i-1]=arguments[i]
for(var r=0,t=n;r<t.length;r++){var o=t[r],s=o[0],l=o[1],u=s.exec(e)
if(u)return l(u)}return[null,null]}function va(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
return function(e,n){var i,r={}
for(i=0;i<a.length;i++)r[a[i]]=ae(e[n+i])
return[r,null,n+i]}}var ga=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,ka=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,ya=RegExp(""+ka.source+ga.source+"?"),ba=RegExp("(?:T"+ya.source+")?"),Sa=va("weekYear","weekNumber","weekDay"),Aa=va("year","ordinal"),Ma=RegExp(ka.source+" ?(?:"+ga.source+"|("+ge.source+"))?"),Ta=RegExp("(?: "+Ma.source+")?")
function _a(e,a,n){var i=e[a]
return W(i)?n:ae(i)}function wa(e,a){return[{year:_a(e,a),month:_a(e,a+1,1),day:_a(e,a+2,1)},null,a+3]}function ja(e,a){return[{hours:_a(e,a,0),minutes:_a(e,a+1,0),seconds:_a(e,a+2,0),milliseconds:ie(e[a+3])},null,a+4]}function Ea(e,a){var n=!e[a]&&!e[a+1],i=he(e[a+1],e[a+2])
return[{},n?null:Fe.instance(i),a+3]}function Na(e,a){return[{},e[a]?Ge.create(e[a]):null,a+1]}var Ba=RegExp("^T?"+ka.source+"$"),Pa=/^-?P(?:(?:(-?\d{1,9}(?:\.\d{1,9})?)Y)?(?:(-?\d{1,9}(?:\.\d{1,9})?)M)?(?:(-?\d{1,9}(?:\.\d{1,9})?)W)?(?:(-?\d{1,9}(?:\.\d{1,9})?)D)?(?:T(?:(-?\d{1,9}(?:\.\d{1,9})?)H)?(?:(-?\d{1,9}(?:\.\d{1,9})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,9}))?S)?)?)$/
function La(e){var a=e[0],n=e[1],i=e[2],r=e[3],t=e[4],o=e[5],s=e[6],l=e[7],u=e[8],c="-"===a[0],d=l&&"-"===l[0],h=function(e,a){return void 0===a&&(a=!1),void 0!==e&&(a||e&&c)?-e:e}
return[{years:h(ne(n)),months:h(ne(i)),weeks:h(ne(r)),days:h(ne(t)),hours:h(ne(o)),minutes:h(ne(s)),seconds:h(ne(l),"-0"===l),milliseconds:h(ie(u),d)}]}var Da={GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480}
function xa(e,a,n,i,r,t,o){var s={year:2===a.length?ce(ae(a)):ae(a),month:ye.indexOf(n)+1,day:ae(i),hour:ae(r),minute:ae(t)}
return o&&(s.second=ae(o)),e&&(s.weekday=e.length>3?Ae.indexOf(e)+1:Me.indexOf(e)+1),s}var Ca=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/
function Ka(e){var a,n=e[1],i=e[2],r=e[3],t=e[4],o=e[5],s=e[6],l=e[7],u=e[8],c=e[9],d=e[10],h=e[11],p=xa(n,t,r,i,o,s,l)
return a=u?Da[u]:c?0:he(d,h),[p,new Fe(a)]}var Ra=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,za=/^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,Oa=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/
function Ia(e){var a=e[1],n=e[2],i=e[3]
return[xa(a,e[4],i,n,e[5],e[6],e[7]),Fe.utcInstance]}function Va(e){var a=e[1],n=e[2],i=e[3],r=e[4],t=e[5],o=e[6]
return[xa(a,e[7],n,i,r,t,o),Fe.utcInstance]}var Ga=pa(/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,ba),Ha=pa(/(\d{4})-?W(\d\d)(?:-?(\d))?/,ba),Fa=pa(/(\d{4})-?(\d{3})/,ba),Ja=pa(ya),Ua=ma(wa,ja,Ea),Wa=ma(Sa,ja,Ea),Za=ma(Aa,ja,Ea),qa=ma(ja,Ea),Qa=ma(ja),Ya=pa(/(\d{4})-(\d\d)-(\d\d)/,Ta),$a=pa(Ma),Xa=ma(wa,ja,Ea,Na),en=ma(ja,Ea,Na),an={weeks:{days:7,hours:168,minutes:10080,seconds:604800,milliseconds:6048e5},days:{hours:24,minutes:1440,seconds:86400,milliseconds:864e5},hours:{minutes:60,seconds:3600,milliseconds:36e5},minutes:{seconds:60,milliseconds:6e4},seconds:{milliseconds:1e3}},nn=r({years:{quarters:4,months:12,weeks:52,days:365,hours:8760,minutes:525600,seconds:31536e3,milliseconds:31536e6},quarters:{months:3,weeks:13,days:91,hours:2184,minutes:131040,seconds:7862400,milliseconds:78624e5},months:{weeks:4,days:30,hours:720,minutes:43200,seconds:2592e3,milliseconds:2592e6}},an),rn=r({years:{quarters:4,months:12,weeks:52.1775,days:365.2425,hours:8765.82,minutes:525949.2,seconds:525949.2*60,milliseconds:525949.2*60*1e3},quarters:{months:3,weeks:13.044375,days:91.310625,hours:2191.455,minutes:131487.3,seconds:525949.2*60/4,milliseconds:7889237999.999999},months:{weeks:4.3481250000000005,days:30.436875,hours:730.485,minutes:43829.1,seconds:2629746,milliseconds:2629746e3}},an),tn=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds"],on=tn.slice(0).reverse()
function sn(e,a,n){void 0===n&&(n=!1)
var i={values:n?a.values:r({},e.values,a.values||{}),loc:e.loc.clone(a.loc),conversionAccuracy:a.conversionAccuracy||e.conversionAccuracy}
return new un(i)}function ln(e,a,n,i,r){var t=e[r][n],o=a[n]/t,s=Math.sign(o)!==Math.sign(i[r])&&0!==i[r]&&Math.abs(o)<=1?function(e){return e<0?Math.floor(e):Math.ceil(e)}(o):Math.trunc(o)
i[r]+=s,a[n]-=s*t}var un=function(){function e(e){var a="longterm"===e.conversionAccuracy||!1
this.values=e.values,this.loc=e.loc||ha.create(),this.conversionAccuracy=a?"longterm":"casual",this.invalid=e.invalid||null,this.matrix=a?rn:nn,this.isLuxonDuration=!0}e.fromMillis=function(a,n){return e.fromObject({milliseconds:a},n)},e.fromObject=function(a,n){if(void 0===n&&(n={}),null==a||"object"!=typeof a)throw new b("Duration.fromObject: argument expected to be an object, got "+(null===a?"null":typeof a))
return new e({values:me(a,e.normalizeUnit),loc:ha.fromObject(n),conversionAccuracy:n.conversionAccuracy})},e.fromDurationLike=function(a){if(Z(a))return e.fromMillis(a)
if(e.isDuration(a))return a
if("object"==typeof a)return e.fromObject(a)
throw new b("Unknown duration argument "+a+" of type "+typeof a)},e.fromISO=function(a,n){var i=function(e){return fa(e,[Pa,La])}(a),r=i[0]
return r?e.fromObject(r,n):e.invalid("unparsable",'the input "'+a+"\" can't be parsed as ISO 8601")},e.fromISOTime=function(a,n){var i=function(e){return fa(e,[Ba,Qa])}(a),r=i[0]
return r?e.fromObject(r,n):e.invalid("unparsable",'the input "'+a+"\" can't be parsed as ISO 8601")},e.invalid=function(a,n){if(void 0===n&&(n=null),!a)throw new b("need to specify a reason the Duration is invalid")
var i=a instanceof xe?a:new xe(a,n)
if(Xe.throwOnInvalid)throw new g(i)
return new e({invalid:i})},e.normalizeUnit=function(e){var a={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds"}[e?e.toLowerCase():e]
if(!a)throw new y(e)
return a},e.isDuration=function(e){return e&&e.isLuxonDuration||!1}
var a=e.prototype
return a.toFormat=function(e,a){void 0===a&&(a={})
var n=r({},a,{floor:!1!==a.round&&!1!==a.floor})
return this.isValid?De.create(this.loc,n).formatDurationFromString(this,e):"Invalid Duration"},a.toHuman=function(e){var a=this
void 0===e&&(e={})
var n=tn.map((function(n){var i=a.values[n]
return W(i)?null:a.loc.numberFormatter(r({style:"unit",unitDisplay:"long"},e,{unit:n.slice(0,-1)})).format(i)})).filter((function(e){return e}))
return this.loc.listFormatter(r({type:"conjunction",style:e.listStyle||"narrow"},e)).format(n)},a.toObject=function(){return this.isValid?r({},this.values):{}},a.toISO=function(){if(!this.isValid)return null
var e="P"
return 0!==this.years&&(e+=this.years+"Y"),0===this.months&&0===this.quarters||(e+=this.months+3*this.quarters+"M"),0!==this.weeks&&(e+=this.weeks+"W"),0!==this.days&&(e+=this.days+"D"),0===this.hours&&0===this.minutes&&0===this.seconds&&0===this.milliseconds||(e+="T"),0!==this.hours&&(e+=this.hours+"H"),0!==this.minutes&&(e+=this.minutes+"M"),0===this.seconds&&0===this.milliseconds||(e+=re(this.seconds+this.milliseconds/1e3,3)+"S"),"P"===e&&(e+="T0S"),e},a.toISOTime=function(e){if(void 0===e&&(e={}),!this.isValid)return null
var a=this.toMillis()
if(a<0||a>=864e5)return null
e=r({suppressMilliseconds:!1,suppressSeconds:!1,includePrefix:!1,format:"extended"},e)
var n=this.shiftTo("hours","minutes","seconds","milliseconds"),i="basic"===e.format?"hhmm":"hh:mm"
e.suppressSeconds&&0===n.seconds&&0===n.milliseconds||(i+="basic"===e.format?"ss":":ss",e.suppressMilliseconds&&0===n.milliseconds||(i+=".SSS"))
var t=n.toFormat(i)
return e.includePrefix&&(t="T"+t),t},a.toJSON=function(){return this.toISO()},a.toString=function(){return this.toISO()},a.toMillis=function(){return this.as("milliseconds")},a.valueOf=function(){return this.toMillis()},a.plus=function(a){if(!this.isValid)return this
for(var n,i=e.fromDurationLike(a),r={},t=p(tn);!(n=t()).done;){var o=n.value;($(i.values,o)||$(this.values,o))&&(r[o]=i.get(o)+this.get(o))}return sn(this,{values:r},!0)},a.minus=function(a){if(!this.isValid)return this
var n=e.fromDurationLike(a)
return this.plus(n.negate())},a.mapUnits=function(e){if(!this.isValid)return this
for(var a={},n=0,i=Object.keys(this.values);n<i.length;n++){var r=i[n]
a[r]=pe(e(this.values[r],r))}return sn(this,{values:a},!0)},a.get=function(a){return this[e.normalizeUnit(a)]},a.set=function(a){return this.isValid?sn(this,{values:r({},this.values,me(a,e.normalizeUnit))}):this},a.reconfigure=function(e){var a=void 0===e?{}:e,n=a.locale,i=a.numberingSystem,r=a.conversionAccuracy,t={loc:this.loc.clone({locale:n,numberingSystem:i})}
return r&&(t.conversionAccuracy=r),sn(this,t)},a.as=function(e){return this.isValid?this.shiftTo(e).get(e):NaN},a.normalize=function(){if(!this.isValid)return this
var e=this.toObject()
return function(e,a){on.reduce((function(n,i){return W(a[i])?n:(n&&ln(e,a,n,a,i),i)}),null)}(this.matrix,e),sn(this,{values:e},!0)},a.shiftTo=function(){for(var a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
if(!this.isValid)return this
if(0===n.length)return this
n=n.map((function(a){return e.normalizeUnit(a)}))
for(var r,t,o={},s={},l=this.toObject(),u=p(tn);!(t=u()).done;){var c=t.value
if(n.indexOf(c)>=0){r=c
var d=0
for(var h in s)d+=this.matrix[h][c]*s[h],s[h]=0
Z(l[c])&&(d+=l[c])
var m=Math.trunc(d)
for(var f in o[c]=m,s[c]=(1e3*d-1e3*m)/1e3,l)tn.indexOf(f)>tn.indexOf(c)&&ln(this.matrix,l,f,o,c)}else Z(l[c])&&(s[c]=l[c])}for(var v in s)0!==s[v]&&(o[r]+=v===r?s[v]:s[v]/this.matrix[r][v])
return sn(this,{values:o},!0).normalize()},a.negate=function(){if(!this.isValid)return this
for(var e={},a=0,n=Object.keys(this.values);a<n.length;a++){var i=n[a]
e[i]=-this.values[i]}return sn(this,{values:e},!0)},a.equals=function(e){if(!this.isValid||!e.isValid)return!1
if(!this.loc.equals(e.loc))return!1
for(var a,n=p(tn);!(a=n()).done;){var i=a.value
if(r=this.values[i],t=e.values[i],!(void 0===r||0===r?void 0===t||0===t:r===t))return!1}var r,t
return!0},i(e,[{key:"locale",get:function(){return this.isValid?this.loc.locale:null}},{key:"numberingSystem",get:function(){return this.isValid?this.loc.numberingSystem:null}},{key:"years",get:function(){return this.isValid?this.values.years||0:NaN}},{key:"quarters",get:function(){return this.isValid?this.values.quarters||0:NaN}},{key:"months",get:function(){return this.isValid?this.values.months||0:NaN}},{key:"weeks",get:function(){return this.isValid?this.values.weeks||0:NaN}},{key:"days",get:function(){return this.isValid?this.values.days||0:NaN}},{key:"hours",get:function(){return this.isValid?this.values.hours||0:NaN}},{key:"minutes",get:function(){return this.isValid?this.values.minutes||0:NaN}},{key:"seconds",get:function(){return this.isValid?this.values.seconds||0:NaN}},{key:"milliseconds",get:function(){return this.isValid?this.values.milliseconds||0:NaN}},{key:"isValid",get:function(){return null===this.invalid}},{key:"invalidReason",get:function(){return this.invalid?this.invalid.reason:null}},{key:"invalidExplanation",get:function(){return this.invalid?this.invalid.explanation:null}}]),e}(),cn="Invalid Interval"
var dn=function(){function e(e){this.s=e.start,this.e=e.end,this.invalid=e.invalid||null,this.isLuxonInterval=!0}e.invalid=function(a,n){if(void 0===n&&(n=null),!a)throw new b("need to specify a reason the Interval is invalid")
var i=a instanceof xe?a:new xe(a,n)
if(Xe.throwOnInvalid)throw new v(i)
return new e({invalid:i})},e.fromDateTimes=function(a,n){var i=di(a),r=di(n),t=function(e,a){return e&&e.isValid?a&&a.isValid?a<e?dn.invalid("end before start","The end of an interval must be after its start, but you had start="+e.toISO()+" and end="+a.toISO()):null:dn.invalid("missing or invalid end"):dn.invalid("missing or invalid start")}(i,r)
return null==t?new e({start:i,end:r}):t},e.after=function(a,n){var i=un.fromDurationLike(n),r=di(a)
return e.fromDateTimes(r,r.plus(i))},e.before=function(a,n){var i=un.fromDurationLike(n),r=di(a)
return e.fromDateTimes(r.minus(i),r)},e.fromISO=function(a,n){var i=(a||"").split("/",2),r=i[0],t=i[1]
if(r&&t){var o,s,l,u
try{s=(o=ci.fromISO(r,n)).isValid}catch(t){s=!1}try{u=(l=ci.fromISO(t,n)).isValid}catch(t){u=!1}if(s&&u)return e.fromDateTimes(o,l)
if(s){var c=un.fromISO(t,n)
if(c.isValid)return e.after(o,c)}else if(u){var d=un.fromISO(r,n)
if(d.isValid)return e.before(l,d)}}return e.invalid("unparsable",'the input "'+a+"\" can't be parsed as ISO 8601")},e.isInterval=function(e){return e&&e.isLuxonInterval||!1}
var a=e.prototype
return a.length=function(e){return void 0===e&&(e="milliseconds"),this.isValid?this.toDuration.apply(this,[e]).get(e):NaN},a.count=function(e){if(void 0===e&&(e="milliseconds"),!this.isValid)return NaN
var a=this.start.startOf(e),n=this.end.startOf(e)
return Math.floor(n.diff(a,e).get(e))+1},a.hasSame=function(e){return!!this.isValid&&(this.isEmpty()||this.e.minus(1).hasSame(this.s,e))},a.isEmpty=function(){return this.s.valueOf()===this.e.valueOf()},a.isAfter=function(e){return!!this.isValid&&this.s>e},a.isBefore=function(e){return!!this.isValid&&this.e<=e},a.contains=function(e){return!!this.isValid&&this.s<=e&&this.e>e},a.set=function(a){var n=void 0===a?{}:a,i=n.start,r=n.end
return this.isValid?e.fromDateTimes(i||this.s,r||this.e):this},a.splitAt=function(){var a=this
if(!this.isValid)return[]
for(var n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r]
for(var t=i.map(di).filter((function(e){return a.contains(e)})).sort(),o=[],s=this.s,l=0;s<this.e;){var u=t[l]||this.e,c=+u>+this.e?this.e:u
o.push(e.fromDateTimes(s,c)),s=c,l+=1}return o},a.splitBy=function(a){var n=un.fromDurationLike(a)
if(!this.isValid||!n.isValid||0===n.as("milliseconds"))return[]
for(var i,r=this.s,t=1,o=[];r<this.e;){var s=this.start.plus(n.mapUnits((function(e){return e*t})))
i=+s>+this.e?this.e:s,o.push(e.fromDateTimes(r,i)),r=i,t+=1}return o},a.divideEqually=function(e){return this.isValid?this.splitBy(this.length()/e).slice(0,e):[]},a.overlaps=function(e){return this.e>e.s&&this.s<e.e},a.abutsStart=function(e){return!!this.isValid&&+this.e==+e.s},a.abutsEnd=function(e){return!!this.isValid&&+e.e==+this.s},a.engulfs=function(e){return!!this.isValid&&this.s<=e.s&&this.e>=e.e},a.equals=function(e){return!(!this.isValid||!e.isValid)&&this.s.equals(e.s)&&this.e.equals(e.e)},a.intersection=function(a){if(!this.isValid)return this
var n=this.s>a.s?this.s:a.s,i=this.e<a.e?this.e:a.e
return n>=i?null:e.fromDateTimes(n,i)},a.union=function(a){if(!this.isValid)return this
var n=this.s<a.s?this.s:a.s,i=this.e>a.e?this.e:a.e
return e.fromDateTimes(n,i)},e.merge=function(e){var a=e.sort((function(e,a){return e.s-a.s})).reduce((function(e,a){var n=e[0],i=e[1]
return i?i.overlaps(a)||i.abutsStart(a)?[n,i.union(a)]:[n.concat([i]),a]:[n,a]}),[[],null]),n=a[0],i=a[1]
return i&&n.push(i),n},e.xor=function(a){for(var n,i,r=null,t=0,o=[],s=a.map((function(e){return[{time:e.s,type:"s"},{time:e.e,type:"e"}]})),l=p((n=Array.prototype).concat.apply(n,s).sort((function(e,a){return e.time-a.time})));!(i=l()).done;){var u=i.value
1===(t+="s"===u.type?1:-1)?r=u.time:(r&&+r!=+u.time&&o.push(e.fromDateTimes(r,u.time)),r=null)}return e.merge(o)},a.difference=function(){for(var a=this,n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r]
return e.xor([this].concat(i)).map((function(e){return a.intersection(e)})).filter((function(e){return e&&!e.isEmpty()}))},a.toString=function(){return this.isValid?"["+this.s.toISO()+" – "+this.e.toISO()+")":cn},a.toISO=function(e){return this.isValid?this.s.toISO(e)+"/"+this.e.toISO(e):cn},a.toISODate=function(){return this.isValid?this.s.toISODate()+"/"+this.e.toISODate():cn},a.toISOTime=function(e){return this.isValid?this.s.toISOTime(e)+"/"+this.e.toISOTime(e):cn},a.toFormat=function(e,a){var n=(void 0===a?{}:a).separator,i=void 0===n?" – ":n
return this.isValid?""+this.s.toFormat(e)+i+this.e.toFormat(e):cn},a.toDuration=function(e,a){return this.isValid?this.e.diff(this.s,e,a):un.invalid(this.invalidReason)},a.mapEndpoints=function(a){return e.fromDateTimes(a(this.s),a(this.e))},i(e,[{key:"start",get:function(){return this.isValid?this.s:null}},{key:"end",get:function(){return this.isValid?this.e:null}},{key:"isValid",get:function(){return null===this.invalidReason}},{key:"invalidReason",get:function(){return this.invalid?this.invalid.reason:null}},{key:"invalidExplanation",get:function(){return this.invalid?this.invalid.explanation:null}}]),e}(),hn=function(){function e(){}return e.hasDST=function(e){void 0===e&&(e=Xe.defaultZone)
var a=ci.now().setZone(e).set({month:12})
return!e.isUniversal&&a.offset!==a.set({month:6}).offset},e.isValidIANAZone=function(e){return Ge.isValidSpecifier(e)&&Ge.isValidZone(e)},e.normalizeZone=function(e){return Ue(e,Xe.defaultZone)},e.months=function(e,a){void 0===e&&(e="long")
var n=void 0===a?{}:a,i=n.locale,r=void 0===i?null:i,t=n.numberingSystem,o=void 0===t?null:t,s=n.locObj,l=void 0===s?null:s,u=n.outputCalendar,c=void 0===u?"gregory":u
return(l||ha.create(r,o,c)).months(e)},e.monthsFormat=function(e,a){void 0===e&&(e="long")
var n=void 0===a?{}:a,i=n.locale,r=void 0===i?null:i,t=n.numberingSystem,o=void 0===t?null:t,s=n.locObj,l=void 0===s?null:s,u=n.outputCalendar,c=void 0===u?"gregory":u
return(l||ha.create(r,o,c)).months(e,!0)},e.weekdays=function(e,a){void 0===e&&(e="long")
var n=void 0===a?{}:a,i=n.locale,r=void 0===i?null:i,t=n.numberingSystem,o=void 0===t?null:t,s=n.locObj
return((void 0===s?null:s)||ha.create(r,o,null)).weekdays(e)},e.weekdaysFormat=function(e,a){void 0===e&&(e="long")
var n=void 0===a?{}:a,i=n.locale,r=void 0===i?null:i,t=n.numberingSystem,o=void 0===t?null:t,s=n.locObj
return((void 0===s?null:s)||ha.create(r,o,null)).weekdays(e,!0)},e.meridiems=function(e){var a=(void 0===e?{}:e).locale,n=void 0===a?null:a
return ha.create(n).meridiems()},e.eras=function(e,a){void 0===e&&(e="short")
var n=(void 0===a?{}:a).locale,i=void 0===n?null:n
return ha.create(i,null,"gregory").eras(e)},e.features=function(){return{relative:Q()}},e}()
function pn(e,a){var n=function(e){return e.toUTC(0,{keepLocalTime:!0}).startOf("day").valueOf()},i=n(a)-n(e)
return Math.floor(un.fromMillis(i).as("days"))}var mn={arab:"[٠-٩]",arabext:"[۰-۹]",bali:"[᭐-᭙]",beng:"[০-৯]",deva:"[०-९]",fullwide:"[０-９]",gujr:"[૦-૯]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[០-៩]",knda:"[೦-೯]",laoo:"[໐-໙]",limb:"[᥆-᥏]",mlym:"[൦-൯]",mong:"[᠐-᠙]",mymr:"[၀-၉]",orya:"[୦-୯]",tamldec:"[௦-௯]",telu:"[౦-౯]",thai:"[๐-๙]",tibt:"[༠-༩]",latn:"\\d"},fn={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]},vn=mn.hanidec.replace(/[\[|\]]/g,"").split("")
function gn(e,a){var n=e.numberingSystem
return void 0===a&&(a=""),new RegExp(""+mn[n||"latn"]+a)}function kn(e,a){return void 0===a&&(a=function(e){return e}),{regex:e,deser:function(e){var n=e[0]
return a(function(e){var a=parseInt(e,10)
if(isNaN(a)){a=""
for(var n=0;n<e.length;n++){var i=e.charCodeAt(n)
if(-1!==e[n].search(mn.hanidec))a+=vn.indexOf(e[n])
else for(var r in fn){var t=fn[r],o=t[0],s=t[1]
i>=o&&i<=s&&(a+=i-o)}}return parseInt(a,10)}return a}(n))}}}var yn="( |"+String.fromCharCode(160)+")",bn=new RegExp(yn,"g")
function Sn(e){return e.replace(/\./g,"\\.?").replace(bn,yn)}function An(e){return e.replace(/\./g,"").replace(bn," ").toLowerCase()}function Mn(e,a){return null===e?null:{regex:RegExp(e.map(Sn).join("|")),deser:function(n){var i=n[0]
return e.findIndex((function(e){return An(i)===An(e)}))+a}}}function Tn(e,a){return{regex:e,deser:function(e){return he(e[1],e[2])},groups:a}}function _n(e){return{regex:e,deser:function(e){return e[0]}}}var wn={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayperiod:"a",dayPeriod:"a",hour:{numeric:"h","2-digit":"hh"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"}},jn=null
function En(e,a,n){var i=function(e,a){var n
return(n=Array.prototype).concat.apply(n,e.map((function(e){return function(e,a){if(e.literal)return e
var n=De.macroTokenToFormatOpts(e.val)
if(!n)return e
var i=De.create(a,n).formatDateTimeParts((jn||(jn=ci.fromMillis(1555555555555)),jn)).map((function(e){return function(e,a,n){var i=e.type,r=e.value
if("literal"===i)return{literal:!0,val:r}
var t=n[i],o=wn[i]
return"object"==typeof o&&(o=o[t]),o?{literal:!1,val:o}:void 0}(e,0,n)}))
return i.includes(void 0)?e:i}(e,a)})))}(De.parseFormat(n),e),r=i.map((function(a){return n=a,r=gn(i=e),t=gn(i,"{2}"),o=gn(i,"{3}"),s=gn(i,"{4}"),l=gn(i,"{6}"),u=gn(i,"{1,2}"),c=gn(i,"{1,3}"),d=gn(i,"{1,6}"),h=gn(i,"{1,9}"),p=gn(i,"{2,4}"),m=gn(i,"{4,6}"),f=function(e){return{regex:RegExp((a=e.val,a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"))),deser:function(e){return e[0]},literal:!0}
var a},v=function(e){if(n.literal)return f(e)
switch(e.val){case"G":return Mn(i.eras("short",!1),0)
case"GG":return Mn(i.eras("long",!1),0)
case"y":return kn(d)
case"yy":case"kk":return kn(p,ce)
case"yyyy":case"kkkk":return kn(s)
case"yyyyy":return kn(m)
case"yyyyyy":return kn(l)
case"M":case"L":case"d":case"H":case"h":case"m":case"q":case"s":case"W":return kn(u)
case"MM":case"LL":case"dd":case"HH":case"hh":case"mm":case"qq":case"ss":case"WW":return kn(t)
case"MMM":return Mn(i.months("short",!0,!1),1)
case"MMMM":return Mn(i.months("long",!0,!1),1)
case"LLL":return Mn(i.months("short",!1,!1),1)
case"LLLL":return Mn(i.months("long",!1,!1),1)
case"o":case"S":return kn(c)
case"ooo":case"SSS":return kn(o)
case"u":return _n(h)
case"uu":return _n(u)
case"uuu":case"E":case"c":return kn(r)
case"a":return Mn(i.meridiems(),0)
case"EEE":return Mn(i.weekdays("short",!1,!1),1)
case"EEEE":return Mn(i.weekdays("long",!1,!1),1)
case"ccc":return Mn(i.weekdays("short",!0,!1),1)
case"cccc":return Mn(i.weekdays("long",!0,!1),1)
case"Z":case"ZZ":return Tn(new RegExp("([+-]"+u.source+")(?::("+t.source+"))?"),2)
case"ZZZ":return Tn(new RegExp("([+-]"+u.source+")("+t.source+")?"),2)
case"z":return _n(/[a-z_+-/]{1,256}?/i)
default:return f(e)}}(n)||{invalidReason:"missing Intl.DateTimeFormat.formatToParts support"},v.token=n,v
var n,i,r,t,o,s,l,u,c,d,h,p,m,f,v})),t=r.find((function(e){return e.invalidReason}))
if(t)return{input:a,tokens:i,invalidReason:t.invalidReason}
var o=function(e){return["^"+e.map((function(e){return e.regex})).reduce((function(e,a){return e+"("+a.source+")"}),"")+"$",e]}(r),s=o[0],l=o[1],u=RegExp(s,"i"),c=function(e,a,n){var i=e.match(a)
if(i){var r={},t=1
for(var o in n)if($(n,o)){var s=n[o],l=s.groups?s.groups+1:1
!s.literal&&s.token&&(r[s.token.val[0]]=s.deser(i.slice(t,t+l))),t+=l}return[i,r]}return[i,{}]}(a,u,l),d=c[0],h=c[1],p=h?function(e){var a,n=null
return W(e.z)||(n=Ge.create(e.z)),W(e.Z)||(n||(n=new Fe(e.Z)),a=e.Z),W(e.q)||(e.M=3*(e.q-1)+1),W(e.h)||(e.h<12&&1===e.a?e.h+=12:12===e.h&&0===e.a&&(e.h=0)),0===e.G&&e.y&&(e.y=-e.y),W(e.u)||(e.S=ie(e.u)),[Object.keys(e).reduce((function(a,n){var i=function(e){switch(e){case"S":return"millisecond"
case"s":return"second"
case"m":return"minute"
case"h":case"H":return"hour"
case"d":return"day"
case"o":return"ordinal"
case"L":case"M":return"month"
case"y":return"year"
case"E":case"c":return"weekday"
case"W":return"weekNumber"
case"k":return"weekYear"
case"q":return"quarter"
default:return null}}(n)
return i&&(a[i]=e[n]),a}),{}),n,a]}(h):[null,null,void 0],m=p[0],f=p[1],v=p[2]
if($(h,"a")&&$(h,"H"))throw new k("Can't include meridiem when specifying 24-hour format")
return{input:a,tokens:i,regex:u,rawMatches:d,matches:h,result:m,zone:f,specificOffset:v}}var Nn=[0,31,59,90,120,151,181,212,243,273,304,334],Bn=[0,31,60,91,121,152,182,213,244,274,305,335]
function Pn(e,a){return new xe("unit out of range","you specified "+a+" (of type "+typeof a+") as a "+e+", which is invalid")}function Ln(e,a,n){var i=new Date(Date.UTC(e,a-1,n)).getUTCDay()
return 0===i?7:i}function Dn(e,a,n){return n+(te(e)?Bn:Nn)[a-1]}function xn(e,a){var n=te(e)?Bn:Nn,i=n.findIndex((function(e){return e<a}))
return{month:i+1,day:a-n[i]}}function Cn(e){var a,n=e.year,i=e.month,t=e.day,o=Dn(n,i,t),s=Ln(n,i,t),l=Math.floor((o-s+10)/7)
return l<1?l=ue(a=n-1):l>ue(n)?(a=n+1,l=1):a=n,r({weekYear:a,weekNumber:l,weekday:s},ve(e))}function Kn(e){var a,n=e.weekYear,i=e.weekNumber,t=e.weekday,o=Ln(n,1,4),s=oe(n),l=7*i+t-o-3
l<1?l+=oe(a=n-1):l>s?(a=n+1,l-=oe(n)):a=n
var u=xn(a,l)
return r({year:a,month:u.month,day:u.day},ve(e))}function Rn(e){var a=e.year
return r({year:a,ordinal:Dn(a,e.month,e.day)},ve(e))}function zn(e){var a=e.year,n=xn(a,e.ordinal)
return r({year:a,month:n.month,day:n.day},ve(e))}function On(e){var a=q(e.year),n=X(e.month,1,12),i=X(e.day,1,se(e.year,e.month))
return a?n?!i&&Pn("day",e.day):Pn("month",e.month):Pn("year",e.year)}function In(e){var a=e.hour,n=e.minute,i=e.second,r=e.millisecond,t=X(a,0,23)||24===a&&0===n&&0===i&&0===r,o=X(n,0,59),s=X(i,0,59),l=X(r,0,999)
return t?o?s?!l&&Pn("millisecond",r):Pn("second",i):Pn("minute",n):Pn("hour",a)}var Vn="Invalid DateTime",Gn=864e13
function Hn(e){return new xe("unsupported zone",'the zone "'+e.name+'" is not supported')}function Fn(e){return null===e.weekData&&(e.weekData=Cn(e.c)),e.weekData}function Jn(e,a){var n={ts:e.ts,zone:e.zone,c:e.c,o:e.o,loc:e.loc,invalid:e.invalid}
return new ci(r({},n,a,{old:n}))}function Un(e,a,n){var i=e-60*a*1e3,r=n.offset(i)
if(a===r)return[i,a]
i-=60*(r-a)*1e3
var t=n.offset(i)
return r===t?[i,r]:[e-60*Math.min(r,t)*1e3,Math.max(r,t)]}function Wn(e,a){var n=new Date(e+=60*a*1e3)
return{year:n.getUTCFullYear(),month:n.getUTCMonth()+1,day:n.getUTCDate(),hour:n.getUTCHours(),minute:n.getUTCMinutes(),second:n.getUTCSeconds(),millisecond:n.getUTCMilliseconds()}}function Zn(e,a,n){return Un(le(e),a,n)}function qn(e,a){var n=e.o,i=e.c.year+Math.trunc(a.years),t=e.c.month+Math.trunc(a.months)+3*Math.trunc(a.quarters),o=r({},e.c,{year:i,month:t,day:Math.min(e.c.day,se(i,t))+Math.trunc(a.days)+7*Math.trunc(a.weeks)}),s=un.fromObject({years:a.years-Math.trunc(a.years),quarters:a.quarters-Math.trunc(a.quarters),months:a.months-Math.trunc(a.months),weeks:a.weeks-Math.trunc(a.weeks),days:a.days-Math.trunc(a.days),hours:a.hours,minutes:a.minutes,seconds:a.seconds,milliseconds:a.milliseconds}).as("milliseconds"),l=Un(le(o),n,e.zone),u=l[0],c=l[1]
return 0!==s&&(u+=s,c=e.zone.offset(u)),{ts:u,o:c}}function Qn(e,a,n,i,t,o){var s=n.setZone,l=n.zone
if(e&&0!==Object.keys(e).length){var u=a||l,c=ci.fromObject(e,r({},n,{zone:u,specificOffset:o}))
return s?c:c.setZone(l)}return ci.invalid(new xe("unparsable",'the input "'+t+"\" can't be parsed as "+i))}function Yn(e,a,n){return void 0===n&&(n=!0),e.isValid?De.create(ha.create("en-US"),{allowZ:n,forceSimple:!0}).formatDateTimeFromString(e,a):null}function $n(e,a){var n=e.c.year>9999||e.c.year<0,i=""
return n&&e.c.year>=0&&(i+="+"),i+=ee(e.c.year,n?6:4),a?(i+="-",i+=ee(e.c.month),i+="-",i+=ee(e.c.day)):(i+=ee(e.c.month),i+=ee(e.c.day)),i}function Xn(e,a,n,i,r){var t=ee(e.c.hour)
return a?(t+=":",t+=ee(e.c.minute),0===e.c.second&&n||(t+=":")):t+=ee(e.c.minute),0===e.c.second&&n||(t+=ee(e.c.second),0===e.c.millisecond&&i||(t+=".",t+=ee(e.c.millisecond,3))),r&&(e.isOffsetFixed&&0===e.offset?t+="Z":e.o<0?(t+="-",t+=ee(Math.trunc(-e.o/60)),t+=":",t+=ee(Math.trunc(-e.o%60))):(t+="+",t+=ee(Math.trunc(e.o/60)),t+=":",t+=ee(Math.trunc(e.o%60)))),t}var ei={month:1,day:1,hour:0,minute:0,second:0,millisecond:0},ai={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},ni={ordinal:1,hour:0,minute:0,second:0,millisecond:0},ii=["year","month","day","hour","minute","second","millisecond"],ri=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],ti=["year","ordinal","hour","minute","second","millisecond"]
function oi(e){var a={year:"year",years:"year",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",quarter:"quarter",quarters:"quarter",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"}[e.toLowerCase()]
if(!a)throw new y(e)
return a}function si(e,a){var n,i,r=Ue(a.zone,Xe.defaultZone),t=ha.fromObject(a),o=Xe.now()
if(W(e.year))n=o
else{for(var s,l=p(ii);!(s=l()).done;){var u=s.value
W(e[u])&&(e[u]=ei[u])}var c=On(e)||In(e)
if(c)return ci.invalid(c)
var d=Zn(e,r.offset(o),r)
n=d[0],i=d[1]}return new ci({ts:n,zone:r,loc:t,o:i})}function li(e,a,n){var i=!!W(n.round)||n.round,r=function(e,r){return e=re(e,i||n.calendary?0:2,!0),a.loc.clone(n).relFormatter(n).format(e,r)},t=function(i){return n.calendary?a.hasSame(e,i)?0:a.startOf(i).diff(e.startOf(i),i).get(i):a.diff(e,i).get(i)}
if(n.unit)return r(t(n.unit),n.unit)
for(var o,s=p(n.units);!(o=s()).done;){var l=o.value,u=t(l)
if(Math.abs(u)>=1)return r(u,l)}return r(e>a?-0:0,n.units[n.units.length-1])}function ui(e){var a,n={}
return e.length>0&&"object"==typeof e[e.length-1]?(n=e[e.length-1],a=Array.from(e).slice(0,e.length-1)):a=Array.from(e),[n,a]}var ci=function(){function e(e){var a=e.zone||Xe.defaultZone,n=e.invalid||(Number.isNaN(e.ts)?new xe("invalid input"):null)||(a.isValid?null:Hn(a))
this.ts=W(e.ts)?Xe.now():e.ts
var i=null,r=null
if(!n)if(e.old&&e.old.ts===this.ts&&e.old.zone.equals(a)){var t=[e.old.c,e.old.o]
i=t[0],r=t[1]}else{var o=a.offset(this.ts)
i=Wn(this.ts,o),i=(n=Number.isNaN(i.year)?new xe("invalid input"):null)?null:i,r=n?null:o}this._zone=a,this.loc=e.loc||ha.create(),this.invalid=n,this.weekData=null,this.c=i,this.o=r,this.isLuxonDateTime=!0}e.now=function(){return new e({})},e.local=function(){var e=ui(arguments),a=e[0],n=e[1],i=n[0],r=n[1],t=n[2],o=n[3],s=n[4],l=n[5],u=n[6]
return si({year:i,month:r,day:t,hour:o,minute:s,second:l,millisecond:u},a)},e.utc=function(){var e=ui(arguments),a=e[0],n=e[1],i=n[0],r=n[1],t=n[2],o=n[3],s=n[4],l=n[5],u=n[6]
return a.zone=Fe.utcInstance,si({year:i,month:r,day:t,hour:o,minute:s,second:l,millisecond:u},a)},e.fromJSDate=function(a,n){void 0===n&&(n={})
var i,r=(i=a,"[object Date]"===Object.prototype.toString.call(i)?a.valueOf():NaN)
if(Number.isNaN(r))return e.invalid("invalid input")
var t=Ue(n.zone,Xe.defaultZone)
return t.isValid?new e({ts:r,zone:t,loc:ha.fromObject(n)}):e.invalid(Hn(t))},e.fromMillis=function(a,n){if(void 0===n&&(n={}),Z(a))return a<-Gn||a>Gn?e.invalid("Timestamp out of range"):new e({ts:a,zone:Ue(n.zone,Xe.defaultZone),loc:ha.fromObject(n)})
throw new b("fromMillis requires a numerical input, but received a "+typeof a+" with value "+a)},e.fromSeconds=function(a,n){if(void 0===n&&(n={}),Z(a))return new e({ts:1e3*a,zone:Ue(n.zone,Xe.defaultZone),loc:ha.fromObject(n)})
throw new b("fromSeconds requires a numerical input")},e.fromObject=function(a,n){void 0===n&&(n={}),a=a||{}
var i=Ue(n.zone,Xe.defaultZone)
if(!i.isValid)return e.invalid(Hn(i))
var r=Xe.now(),t=W(n.specificOffset)?i.offset(r):n.specificOffset,o=me(a,oi),s=!W(o.ordinal),l=!W(o.year),u=!W(o.month)||!W(o.day),c=l||u,d=o.weekYear||o.weekNumber,h=ha.fromObject(n)
if((c||s)&&d)throw new k("Can't mix weekYear/weekNumber units with year/month/day or ordinals")
if(u&&s)throw new k("Can't mix ordinal dates with month/day")
var m,f,v=d||o.weekday&&!c,g=Wn(r,t)
v?(m=ri,f=ai,g=Cn(g)):s?(m=ti,f=ni,g=Rn(g)):(m=ii,f=ei)
for(var y,b=!1,S=p(m);!(y=S()).done;){var A=y.value
W(o[A])?o[A]=b?f[A]:g[A]:b=!0}var M=v?function(e){var a=q(e.weekYear),n=X(e.weekNumber,1,ue(e.weekYear)),i=X(e.weekday,1,7)
return a?n?!i&&Pn("weekday",e.weekday):Pn("week",e.week):Pn("weekYear",e.weekYear)}(o):s?function(e){var a=q(e.year),n=X(e.ordinal,1,oe(e.year))
return a?!n&&Pn("ordinal",e.ordinal):Pn("year",e.year)}(o):On(o),T=M||In(o)
if(T)return e.invalid(T)
var _=Zn(v?Kn(o):s?zn(o):o,t,i),w=new e({ts:_[0],zone:i,o:_[1],loc:h})
return o.weekday&&c&&a.weekday!==w.weekday?e.invalid("mismatched weekday","you can't specify both a weekday of "+o.weekday+" and a date of "+w.toISO()):w},e.fromISO=function(e,a){void 0===a&&(a={})
var n=function(e){return fa(e,[Ga,Ua],[Ha,Wa],[Fa,Za],[Ja,qa])}(e)
return Qn(n[0],n[1],a,"ISO 8601",e)},e.fromRFC2822=function(e,a){void 0===a&&(a={})
var n=function(e){return fa(function(e){return e.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim()}(e),[Ca,Ka])}(e)
return Qn(n[0],n[1],a,"RFC 2822",e)},e.fromHTTP=function(e,a){void 0===a&&(a={})
var n=function(e){return fa(e,[Ra,Ia],[za,Ia],[Oa,Va])}(e)
return Qn(n[0],n[1],a,"HTTP",a)},e.fromFormat=function(a,n,i){if(void 0===i&&(i={}),W(a)||W(n))throw new b("fromFormat requires an input string and a format")
var r=i,t=r.locale,o=void 0===t?null:t,s=r.numberingSystem,l=void 0===s?null:s,u=function(e,a,n){var i=En(e,a,n)
return[i.result,i.zone,i.specificOffset,i.invalidReason]}(ha.fromOpts({locale:o,numberingSystem:l,defaultToEN:!0}),a,n),c=u[0],d=u[1],h=u[2],p=u[3]
return p?e.invalid(p):Qn(c,d,i,"format "+n,a,h)},e.fromString=function(a,n,i){return void 0===i&&(i={}),e.fromFormat(a,n,i)},e.fromSQL=function(e,a){void 0===a&&(a={})
var n=function(e){return fa(e,[Ya,Xa],[$a,en])}(e)
return Qn(n[0],n[1],a,"SQL",e)},e.invalid=function(a,n){if(void 0===n&&(n=null),!a)throw new b("need to specify a reason the DateTime is invalid")
var i=a instanceof xe?a:new xe(a,n)
if(Xe.throwOnInvalid)throw new f(i)
return new e({invalid:i})},e.isDateTime=function(e){return e&&e.isLuxonDateTime||!1}
var a=e.prototype
return a.get=function(e){return this[e]},a.resolvedLocaleOptions=function(e){void 0===e&&(e={})
var a=De.create(this.loc.clone(e),e).resolvedOptions(this)
return{locale:a.locale,numberingSystem:a.numberingSystem,outputCalendar:a.calendar}},a.toUTC=function(e,a){return void 0===e&&(e=0),void 0===a&&(a={}),this.setZone(Fe.instance(e),a)},a.toLocal=function(){return this.setZone(Xe.defaultZone)},a.setZone=function(a,n){var i=void 0===n?{}:n,r=i.keepLocalTime,t=void 0!==r&&r,o=i.keepCalendarTime,s=void 0!==o&&o
if((a=Ue(a,Xe.defaultZone)).equals(this.zone))return this
if(a.isValid){var l=this.ts
if(t||s){var u=a.offset(this.ts)
l=Zn(this.toObject(),u,a)[0]}return Jn(this,{ts:l,zone:a})}return e.invalid(Hn(a))},a.reconfigure=function(e){var a=void 0===e?{}:e,n=a.locale,i=a.numberingSystem,r=a.outputCalendar
return Jn(this,{loc:this.loc.clone({locale:n,numberingSystem:i,outputCalendar:r})})},a.setLocale=function(e){return this.reconfigure({locale:e})},a.set=function(e){if(!this.isValid)return this
var a,n=me(e,oi),i=!W(n.weekYear)||!W(n.weekNumber)||!W(n.weekday),t=!W(n.ordinal),o=!W(n.year),s=!W(n.month)||!W(n.day),l=o||s,u=n.weekYear||n.weekNumber
if((l||t)&&u)throw new k("Can't mix weekYear/weekNumber units with year/month/day or ordinals")
if(s&&t)throw new k("Can't mix ordinal dates with month/day")
i?a=Kn(r({},Cn(this.c),n)):W(n.ordinal)?(a=r({},this.toObject(),n),W(n.day)&&(a.day=Math.min(se(a.year,a.month),a.day))):a=zn(r({},Rn(this.c),n))
var c=Zn(a,this.o,this.zone)
return Jn(this,{ts:c[0],o:c[1]})},a.plus=function(e){return this.isValid?Jn(this,qn(this,un.fromDurationLike(e))):this},a.minus=function(e){return this.isValid?Jn(this,qn(this,un.fromDurationLike(e).negate())):this},a.startOf=function(e){if(!this.isValid)return this
var a={},n=un.normalizeUnit(e)
switch(n){case"years":a.month=1
case"quarters":case"months":a.day=1
case"weeks":case"days":a.hour=0
case"hours":a.minute=0
case"minutes":a.second=0
case"seconds":a.millisecond=0}if("weeks"===n&&(a.weekday=1),"quarters"===n){var i=Math.ceil(this.month/3)
a.month=3*(i-1)+1}return this.set(a)},a.endOf=function(e){var a
return this.isValid?this.plus((a={},a[e]=1,a)).startOf(e).minus(1):this},a.toFormat=function(e,a){return void 0===a&&(a={}),this.isValid?De.create(this.loc.redefaultToEN(a)).formatDateTimeFromString(this,e):Vn},a.toLocaleString=function(e,a){return void 0===e&&(e=_),void 0===a&&(a={}),this.isValid?De.create(this.loc.clone(a),e).formatDateTime(this):Vn},a.toLocaleParts=function(e){return void 0===e&&(e={}),this.isValid?De.create(this.loc.clone(e),e).formatDateTimeParts(this):[]},a.toISO=function(e){var a=void 0===e?{}:e,n=a.format,i=void 0===n?"extended":n,r=a.suppressSeconds,t=void 0!==r&&r,o=a.suppressMilliseconds,s=void 0!==o&&o,l=a.includeOffset,u=void 0===l||l
if(!this.isValid)return null
var c="extended"===i,d=$n(this,c)
return(d+="T")+Xn(this,c,t,s,u)},a.toISODate=function(e){var a=(void 0===e?{}:e).format,n=void 0===a?"extended":a
return this.isValid?$n(this,"extended"===n):null},a.toISOWeekDate=function(){return Yn(this,"kkkk-'W'WW-c")},a.toISOTime=function(e){var a=void 0===e?{}:e,n=a.suppressMilliseconds,i=void 0!==n&&n,r=a.suppressSeconds,t=void 0!==r&&r,o=a.includeOffset,s=void 0===o||o,l=a.includePrefix,u=void 0!==l&&l,c=a.format,d=void 0===c?"extended":c
return this.isValid?(u?"T":"")+Xn(this,"extended"===d,t,i,s):null},a.toRFC2822=function(){return Yn(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",!1)},a.toHTTP=function(){return Yn(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'")},a.toSQLDate=function(){return this.isValid?$n(this,!0):null},a.toSQLTime=function(e){var a=void 0===e?{}:e,n=a.includeOffset,i=void 0===n||n,r=a.includeZone,t=void 0!==r&&r,o="HH:mm:ss.SSS"
return(t||i)&&(o+=" ",t?o+="z":i&&(o+="ZZ")),Yn(this,o,!0)},a.toSQL=function(e){return void 0===e&&(e={}),this.isValid?this.toSQLDate()+" "+this.toSQLTime(e):null},a.toString=function(){return this.isValid?this.toISO():Vn},a.valueOf=function(){return this.toMillis()},a.toMillis=function(){return this.isValid?this.ts:NaN},a.toSeconds=function(){return this.isValid?this.ts/1e3:NaN},a.toJSON=function(){return this.toISO()},a.toBSON=function(){return this.toJSDate()},a.toObject=function(e){if(void 0===e&&(e={}),!this.isValid)return{}
var a=r({},this.c)
return e.includeConfig&&(a.outputCalendar=this.outputCalendar,a.numberingSystem=this.loc.numberingSystem,a.locale=this.loc.locale),a},a.toJSDate=function(){return new Date(this.isValid?this.ts:NaN)},a.diff=function(e,a,n){if(void 0===a&&(a="milliseconds"),void 0===n&&(n={}),!this.isValid||!e.isValid)return un.invalid("created by diffing an invalid DateTime")
var i,t=r({locale:this.locale,numberingSystem:this.numberingSystem},n),o=(i=a,Array.isArray(i)?i:[i]).map(un.normalizeUnit),s=e.valueOf()>this.valueOf(),l=function(e,a,n,i){var r,t=function(e,a,n){for(var i,r,t={},o=0,s=[["years",function(e,a){return a.year-e.year}],["quarters",function(e,a){return a.quarter-e.quarter}],["months",function(e,a){return a.month-e.month+12*(a.year-e.year)}],["weeks",function(e,a){var n=pn(e,a)
return(n-n%7)/7}],["days",pn]];o<s.length;o++){var l=s[o],u=l[0],c=l[1]
if(n.indexOf(u)>=0){var d
i=u
var h,p=c(e,a);(r=e.plus(((d={})[u]=p,d)))>a?(e=e.plus(((h={})[u]=p-1,h)),p-=1):e=r,t[u]=p}}return[e,t,r,i]}(e,a,n),o=t[0],s=t[1],l=t[2],u=t[3],c=a-o,d=n.filter((function(e){return["hours","minutes","seconds","milliseconds"].indexOf(e)>=0}))
0===d.length&&(l<a&&(l=o.plus(((r={})[u]=1,r))),l!==o&&(s[u]=(s[u]||0)+c/(l-o)))
var h,p=un.fromObject(s,i)
return d.length>0?(h=un.fromMillis(c,i)).shiftTo.apply(h,d).plus(p):p}(s?this:e,s?e:this,o,t)
return s?l.negate():l},a.diffNow=function(a,n){return void 0===a&&(a="milliseconds"),void 0===n&&(n={}),this.diff(e.now(),a,n)},a.until=function(e){return this.isValid?dn.fromDateTimes(this,e):this},a.hasSame=function(e,a){if(!this.isValid)return!1
var n=e.valueOf(),i=this.setZone(e.zone,{keepLocalTime:!0})
return i.startOf(a)<=n&&n<=i.endOf(a)},a.equals=function(e){return this.isValid&&e.isValid&&this.valueOf()===e.valueOf()&&this.zone.equals(e.zone)&&this.loc.equals(e.loc)},a.toRelative=function(a){if(void 0===a&&(a={}),!this.isValid)return null
var n=a.base||e.fromObject({},{zone:this.zone}),i=a.padding?this<n?-a.padding:a.padding:0,t=["years","months","days","hours","minutes","seconds"],o=a.unit
return Array.isArray(a.unit)&&(t=a.unit,o=void 0),li(n,this.plus(i),r({},a,{numeric:"always",units:t,unit:o}))},a.toRelativeCalendar=function(a){return void 0===a&&(a={}),this.isValid?li(a.base||e.fromObject({},{zone:this.zone}),this,r({},a,{numeric:"auto",units:["years","months","days"],calendary:!0})):null},e.min=function(){for(var a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
if(!n.every(e.isDateTime))throw new b("min requires all arguments be DateTimes")
return Y(n,(function(e){return e.valueOf()}),Math.min)},e.max=function(){for(var a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
if(!n.every(e.isDateTime))throw new b("max requires all arguments be DateTimes")
return Y(n,(function(e){return e.valueOf()}),Math.max)},e.fromFormatExplain=function(e,a,n){void 0===n&&(n={})
var i=n,r=i.locale,t=void 0===r?null:r,o=i.numberingSystem,s=void 0===o?null:o
return En(ha.fromOpts({locale:t,numberingSystem:s,defaultToEN:!0}),e,a)},e.fromStringExplain=function(a,n,i){return void 0===i&&(i={}),e.fromFormatExplain(a,n,i)},i(e,[{key:"isValid",get:function(){return null===this.invalid}},{key:"invalidReason",get:function(){return this.invalid?this.invalid.reason:null}},{key:"invalidExplanation",get:function(){return this.invalid?this.invalid.explanation:null}},{key:"locale",get:function(){return this.isValid?this.loc.locale:null}},{key:"numberingSystem",get:function(){return this.isValid?this.loc.numberingSystem:null}},{key:"outputCalendar",get:function(){return this.isValid?this.loc.outputCalendar:null}},{key:"zone",get:function(){return this._zone}},{key:"zoneName",get:function(){return this.isValid?this.zone.name:null}},{key:"year",get:function(){return this.isValid?this.c.year:NaN}},{key:"quarter",get:function(){return this.isValid?Math.ceil(this.c.month/3):NaN}},{key:"month",get:function(){return this.isValid?this.c.month:NaN}},{key:"day",get:function(){return this.isValid?this.c.day:NaN}},{key:"hour",get:function(){return this.isValid?this.c.hour:NaN}},{key:"minute",get:function(){return this.isValid?this.c.minute:NaN}},{key:"second",get:function(){return this.isValid?this.c.second:NaN}},{key:"millisecond",get:function(){return this.isValid?this.c.millisecond:NaN}},{key:"weekYear",get:function(){return this.isValid?Fn(this).weekYear:NaN}},{key:"weekNumber",get:function(){return this.isValid?Fn(this).weekNumber:NaN}},{key:"weekday",get:function(){return this.isValid?Fn(this).weekday:NaN}},{key:"ordinal",get:function(){return this.isValid?Rn(this.c).ordinal:NaN}},{key:"monthShort",get:function(){return this.isValid?hn.months("short",{locObj:this.loc})[this.month-1]:null}},{key:"monthLong",get:function(){return this.isValid?hn.months("long",{locObj:this.loc})[this.month-1]:null}},{key:"weekdayShort",get:function(){return this.isValid?hn.weekdays("short",{locObj:this.loc})[this.weekday-1]:null}},{key:"weekdayLong",get:function(){return this.isValid?hn.weekdays("long",{locObj:this.loc})[this.weekday-1]:null}},{key:"offset",get:function(){return this.isValid?+this.o:NaN}},{key:"offsetNameShort",get:function(){return this.isValid?this.zone.offsetName(this.ts,{format:"short",locale:this.locale}):null}},{key:"offsetNameLong",get:function(){return this.isValid?this.zone.offsetName(this.ts,{format:"long",locale:this.locale}):null}},{key:"isOffsetFixed",get:function(){return this.isValid?this.zone.isUniversal:null}},{key:"isInDST",get:function(){return!this.isOffsetFixed&&(this.offset>this.set({month:1}).offset||this.offset>this.set({month:5}).offset)}},{key:"isInLeapYear",get:function(){return te(this.year)}},{key:"daysInMonth",get:function(){return se(this.year,this.month)}},{key:"daysInYear",get:function(){return this.isValid?oe(this.year):NaN}},{key:"weeksInWeekYear",get:function(){return this.isValid?ue(this.weekYear):NaN}}],[{key:"DATE_SHORT",get:function(){return _}},{key:"DATE_MED",get:function(){return w}},{key:"DATE_MED_WITH_WEEKDAY",get:function(){return j}},{key:"DATE_FULL",get:function(){return E}},{key:"DATE_HUGE",get:function(){return N}},{key:"TIME_SIMPLE",get:function(){return B}},{key:"TIME_WITH_SECONDS",get:function(){return P}},{key:"TIME_WITH_SHORT_OFFSET",get:function(){return L}},{key:"TIME_WITH_LONG_OFFSET",get:function(){return D}},{key:"TIME_24_SIMPLE",get:function(){return x}},{key:"TIME_24_WITH_SECONDS",get:function(){return C}},{key:"TIME_24_WITH_SHORT_OFFSET",get:function(){return K}},{key:"TIME_24_WITH_LONG_OFFSET",get:function(){return R}},{key:"DATETIME_SHORT",get:function(){return z}},{key:"DATETIME_SHORT_WITH_SECONDS",get:function(){return O}},{key:"DATETIME_MED",get:function(){return I}},{key:"DATETIME_MED_WITH_SECONDS",get:function(){return V}},{key:"DATETIME_MED_WITH_WEEKDAY",get:function(){return G}},{key:"DATETIME_FULL",get:function(){return H}},{key:"DATETIME_FULL_WITH_SECONDS",get:function(){return F}},{key:"DATETIME_HUGE",get:function(){return J}},{key:"DATETIME_HUGE_WITH_SECONDS",get:function(){return U}}]),e}()
function di(e){if(ci.isDateTime(e))return e
if(e&&e.valueOf&&Z(e.valueOf()))return ci.fromJSDate(e)
if(e&&"object"==typeof e)return ci.fromObject(e)
throw new b("Unknown datetime argument: "+e+", of type "+typeof e)}a.DateTime=ci,a.Duration=un,a.FixedOffsetZone=Fe,a.IANAZone=Ge,a.Info=hn,a.Interval=dn,a.InvalidZone=Je,a.Settings=Xe,a.SystemZone=Re,a.VERSION="2.3.0",a.Zone=Ce},5174:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{ActiveModelSerializer:()=>yi,Collection:()=>Kn,Factory:()=>hn,IdentityManager:()=>pn,JSONAPISerializer:()=>ai,Model:()=>Xn,Response:()=>gn,RestSerializer:()=>bi,Serializer:()=>ei,Server:()=>ki,_Db:()=>Cn,_DbCollection:()=>xn,_RouteHandler:()=>Yn,_SerializerRegistry:()=>ni,_assert:()=>En,_ormAssociationsAssociation:()=>Bn,_ormAssociationsBelongsTo:()=>Ln,_ormAssociationsHasMany:()=>On,_ormPolymorphicCollection:()=>Rn,_ormSchema:()=>oi,_routeHandlersBase:()=>Vn,_routeHandlersFunction:()=>Gn,_routeHandlersObject:()=>Hn,_routeHandlersShorthandsBase:()=>Fn,_routeHandlersShorthandsDelete:()=>Zn,_routeHandlersShorthandsGet:()=>Jn,_routeHandlersShorthandsHead:()=>qn,_routeHandlersShorthandsPost:()=>Un,_routeHandlersShorthandsPut:()=>Wn,_utilsExtend:()=>$n,_utilsInflectorCamelize:()=>An,_utilsInflectorCapitalize:()=>_n,_utilsInflectorDasherize:()=>Mn,_utilsInflectorUnderscore:()=>Tn,_utilsIsAssociation:()=>wn,_utilsReferenceSort:()=>dn,_utilsUuid:()=>Si,association:()=>mn,belongsTo:()=>Mi,createServer:()=>gi,default:()=>Ti,defaultPassthroughs:()=>fi,hasMany:()=>Ai,trait:()=>fn})
var i=n(759),r=n.n(i),t=n(3016),o=n.n(t),s=n(3660),l=n.n(s),u=n(4976),c=n.n(u),d=n(7162),h=n.n(d),p=(n(3509),Object.create)
function m(){var e=p(null)
return e.__=void 0,delete e.__,e}var f=function(e,a,n){this.path=e,this.matcher=a,this.delegate=n}
f.prototype.to=function(e,a){var n=this.delegate
if(n&&n.willAddRoute&&(e=n.willAddRoute(this.matcher.target,e)),this.matcher.add(this.path,e),a){if(0===a.length)throw new Error("You must have an argument in the function passed to `to`")
this.matcher.addChild(this.path,e,a,this.delegate)}}
var v=function(e){this.routes=m(),this.children=m(),this.target=e}
function g(e,a,n){return function(i,r){var t=e+i
if(!r)return new f(t,a,n)
r(g(t,a,n))}}function k(e,a,n){for(var i=0,r=0;r<e.length;r++)i+=e[r].path.length
var t={path:a=a.substr(i),handler:n}
e.push(t)}function y(e,a,n,i){for(var r=a.routes,t=Object.keys(r),o=0;o<t.length;o++){var s=t[o],l=e.slice()
k(l,s,r[s])
var u=a.children[s]
u?y(l,u,n,i):n.call(i,l)}}function b(e){return e.split("/").map(A).join("/")}v.prototype.add=function(e,a){this.routes[e]=a},v.prototype.addChild=function(e,a,n,i){var r=new v(a)
this.children[e]=r
var t=g(e,r,i)
i&&i.contextEntered&&i.contextEntered(a,t),n(t)}
var S=/%|\//g
function A(e){return e.length<3||-1===e.indexOf("%")?e:decodeURIComponent(e).replace(S,encodeURIComponent)}var M=/%(?:2(?:4|6|B|C)|3(?:B|D|A)|40)/g
function T(e){return encodeURIComponent(e).replace(M,decodeURIComponent)}var _=/(\/|\.|\*|\+|\?|\||\(|\)|\[|\]|\{|\}|\\)/g,w=Array.isArray,j=Object.prototype.hasOwnProperty
function E(e,a){if("object"!=typeof e||null===e)throw new Error("You must pass an object as the second argument to `generate`.")
if(!j.call(e,a))throw new Error("You must provide param `"+a+"` to `generate`.")
var n=e[a],i="string"==typeof n?n:""+n
if(0===i.length)throw new Error("You must provide a param `"+a+"`.")
return i}var N=[]
N[0]=function(e,a){for(var n=a,i=e.value,r=0;r<i.length;r++){var t=i.charCodeAt(r)
n=n.put(t,!1,!1)}return n},N[1]=function(e,a){return a.put(47,!0,!0)},N[2]=function(e,a){return a.put(-1,!1,!0)},N[4]=function(e,a){return a}
var B=[]
B[0]=function(e){return e.value.replace(_,"\\$1")},B[1]=function(){return"([^/]+)"},B[2]=function(){return"(.+)"},B[4]=function(){return""}
var P=[]
P[0]=function(e){return e.value},P[1]=function(e,a){var n=E(a,e.value)
return V.ENCODE_AND_DECODE_PATH_SEGMENTS?T(n):n},P[2]=function(e,a){return E(a,e.value)},P[4]=function(){return""}
var L=Object.freeze({}),D=Object.freeze([])
function x(e,a,n){a.length>0&&47===a.charCodeAt(0)&&(a=a.substr(1))
for(var i=a.split("/"),r=void 0,t=void 0,o=0;o<i.length;o++){var s,l,u=i[o]
12&(s=2<<(l=""===u?4:58===u.charCodeAt(0)?1:42===u.charCodeAt(0)?2:0))&&(u=u.slice(1),(r=r||[]).push(u),(t=t||[]).push(0!=(4&s))),14&s&&n[l]++,e.push({type:l,value:A(u)})}return{names:r||D,shouldDecodes:t||D}}function C(e,a,n){return e.char===a&&e.negate===n}var K=function(e,a,n,i,r){this.states=e,this.id=a,this.char=n,this.negate=i,this.nextStates=r?a:null,this.pattern="",this._regex=void 0,this.handlers=void 0,this.types=void 0}
function R(e,a){return e.negate?e.char!==a&&-1!==e.char:e.char===a||-1===e.char}function z(e,a){for(var n=[],i=0,r=e.length;i<r;i++){var t=e[i]
n=n.concat(t.match(a))}return n}K.prototype.regex=function(){return this._regex||(this._regex=new RegExp(this.pattern)),this._regex},K.prototype.get=function(e,a){var n=this.nextStates
if(null!==n)if(w(n))for(var i=0;i<n.length;i++){var r=this.states[n[i]]
if(C(r,e,a))return r}else{var t=this.states[n]
if(C(t,e,a))return t}},K.prototype.put=function(e,a,n){var i
if(i=this.get(e,a))return i
var r=this.states
return i=new K(r,r.length,e,a,n),r[r.length]=i,null==this.nextStates?this.nextStates=i.id:w(this.nextStates)?this.nextStates.push(i.id):this.nextStates=[this.nextStates,i.id],i},K.prototype.match=function(e){var a=this.nextStates
if(!a)return[]
var n=[]
if(w(a))for(var i=0;i<a.length;i++){var r=this.states[a[i]]
R(r,e)&&n.push(r)}else{var t=this.states[a]
R(t,e)&&n.push(t)}return n}
var O=function(e){this.length=0,this.queryParams=e||{}}
function I(e){var a
e=e.replace(/\+/gm,"%20")
try{a=decodeURIComponent(e)}catch(e){a=""}return a}O.prototype.splice=Array.prototype.splice,O.prototype.slice=Array.prototype.slice,O.prototype.push=Array.prototype.push
var V=function(){this.names=m()
var e=[],a=new K(e,0,-1,!0,!1)
e[0]=a,this.states=e,this.rootState=a}
V.prototype.add=function(e,a){for(var n,i=this.rootState,r="^",t=[0,0,0],o=new Array(e.length),s=[],l=!0,u=0,c=0;c<e.length;c++){for(var d=e[c],h=x(s,d.path,t),p=h.names,m=h.shouldDecodes;u<s.length;u++){var f=s[u]
4!==f.type&&(l=!1,i=i.put(47,!1,!1),r+="/",i=N[f.type](f,i),r+=B[f.type](f))}o[c]={handler:d.handler,names:p,shouldDecodes:m}}l&&(i=i.put(47,!1,!1),r+="/"),i.handlers=o,i.pattern=r+"$",i.types=t,"object"==typeof a&&null!==a&&a.as&&(n=a.as),n&&(this.names[n]={segments:s,handlers:o})},V.prototype.handlersFor=function(e){var a=this.names[e]
if(!a)throw new Error("There is no route named "+e)
for(var n=new Array(a.handlers.length),i=0;i<a.handlers.length;i++){var r=a.handlers[i]
n[i]=r}return n},V.prototype.hasRoute=function(e){return!!this.names[e]},V.prototype.generate=function(e,a){var n=this.names[e],i=""
if(!n)throw new Error("There is no route named "+e)
for(var r=n.segments,t=0;t<r.length;t++){var o=r[t]
4!==o.type&&(i+="/",i+=P[o.type](o,a))}return"/"!==i.charAt(0)&&(i="/"+i),a&&a.queryParams&&(i+=this.generateQueryString(a.queryParams)),i},V.prototype.generateQueryString=function(e){var a=[],n=Object.keys(e)
n.sort()
for(var i=0;i<n.length;i++){var r=n[i],t=e[r]
if(null!=t){var o=encodeURIComponent(r)
if(w(t))for(var s=0;s<t.length;s++){var l=r+"[]="+encodeURIComponent(t[s])
a.push(l)}else o+="="+encodeURIComponent(t),a.push(o)}}return 0===a.length?"":"?"+a.join("&")},V.prototype.parseQueryString=function(e){for(var a=e.split("&"),n={},i=0;i<a.length;i++){var r=a[i].split("="),t=I(r[0]),o=t.length,s=!1,l=void 0
1===r.length?l="true":(o>2&&"[]"===t.slice(o-2)&&(s=!0,n[t=t.slice(0,o-2)]||(n[t]=[])),l=r[1]?I(r[1]):""),s?n[t].push(l):n[t]=l}return n},V.prototype.recognize=function(e){var a,n=[this.rootState],i={},r=!1,t=e.indexOf("#");-1!==t&&(e=e.substr(0,t))
var o=e.indexOf("?")
if(-1!==o){var s=e.substr(o+1,e.length)
e=e.substr(0,o),i=this.parseQueryString(s)}"/"!==e.charAt(0)&&(e="/"+e)
var l=e
V.ENCODE_AND_DECODE_PATH_SEGMENTS?e=b(e):(e=decodeURI(e),l=decodeURI(l))
var u=e.length
u>1&&"/"===e.charAt(u-1)&&(e=e.substr(0,u-1),l=l.substr(0,l.length-1),r=!0)
for(var c=0;c<e.length&&(n=z(n,e.charCodeAt(c))).length;c++);for(var d=[],h=0;h<n.length;h++)n[h].handlers&&d.push(n[h])
n=function(e){return e.sort((function(e,a){var n=e.types||[0,0,0],i=n[0],r=n[1],t=n[2],o=a.types||[0,0,0],s=o[0],l=o[1],u=o[2]
if(t!==u)return t-u
if(t){if(i!==s)return s-i
if(r!==l)return l-r}return r!==l?r-l:i!==s?s-i:0}))}(d)
var p=d[0]
return p&&p.handlers&&(r&&p.pattern&&"(.+)$"===p.pattern.slice(-5)&&(l+="/"),a=function(e,a,n){var i=e.handlers,r=e.regex()
if(!r||!i)throw new Error("state not initialized")
var t=a.match(r),o=1,s=new O(n)
s.length=i.length
for(var l=0;l<i.length;l++){var u=i[l],c=u.names,d=u.shouldDecodes,h=L,p=!1
if(c!==D&&d!==D)for(var m=0;m<c.length;m++){p=!0
var f=c[m],v=t&&t[o++]
h===L&&(h={}),V.ENCODE_AND_DECODE_PATH_SEGMENTS&&d[m]?h[f]=v&&decodeURIComponent(v):h[f]=v}s[l]={handler:u.handler,params:h,isDynamic:p}}return s}(p,l,i)),a},V.VERSION="0.3.4",V.ENCODE_AND_DECODE_PATH_SEGMENTS=!0,V.Normalizer={normalizeSegment:A,normalizePath:b,encodePathSegment:T},V.prototype.map=function(e,a){var n=new v
e(g("",n,this.delegate)),y([],n,(function(e){a?a(this,e):this.add(e)}),this)}
const G=V
var H=function(e,a,n,i){this.type=e,this.bubbles=a,this.cancelable=n,this.target=i}
H.prototype={stopPropagation:function(){},preventDefault:function(){this.defaultPrevented=!0}}
var F={100:"Continue",101:"Switching Protocols",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",300:"Multiple Choice",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Request Entity Too Large",414:"Request-URI Too Long",415:"Unsupported Media Type",416:"Requested Range Not Satisfiable",417:"Expectation Failed",422:"Unprocessable Entity",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported"},J={"Accept-Charset":!0,"Accept-Encoding":!0,Connection:!0,"Content-Length":!0,Cookie:!0,Cookie2:!0,"Content-Transfer-Encoding":!0,Date:!0,Expect:!0,Host:!0,"Keep-Alive":!0,Referer:!0,TE:!0,Trailer:!0,"Transfer-Encoding":!0,Upgrade:!0,"User-Agent":!0,Via:!0}
function U(e,a){a.addEventListener(e,(function(n){var i=a["on"+e]
i&&"function"==typeof i&&i.call(n.target,n)}))}function W(){this._eventListeners={}
for(var e=["loadstart","progress","load","abort","loadend"],a=e.length-1;a>=0;a--)U(e[a],this)}function Z(){W.call(this),this.readyState=Z.UNSENT,this.requestHeaders={},this.requestBody=null,this.status=0,this.statusText="",this.upload=new W,this.onabort=null,this.onerror=null,this.onload=null,this.onloadend=null,this.onloadstart=null,this.onprogress=null,this.onreadystatechange=null,this.ontimeout=null}W.prototype={addEventListener:function(e,a){this._eventListeners[e]=this._eventListeners[e]||[],this._eventListeners[e].push(a)},removeEventListener:function(e,a){for(var n=this._eventListeners[e]||[],i=0,r=n.length;i<r;++i)if(n[i]==a)return n.splice(i,1)},dispatchEvent:function(e){for(var a=e.type,n=this._eventListeners[a]||[],i=0;i<n.length;i++)"function"==typeof n[i]?n[i].call(this,e):n[i].handleEvent(e)
return!!e.defaultPrevented},_progress:function(e,a,n){var i=new H("progress")
i.target=this,i.lengthComputable=e,i.loaded=a,i.total=n,this.dispatchEvent(i)}},Z.prototype=new W,Z.UNSENT=0,Z.OPENED=1,Z.HEADERS_RECEIVED=2,Z.LOADING=3,Z.DONE=4
var q={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4,async:!0,withCredentials:!1,open:function(e,a,n,i,r){this.method=e,this.url=a,this.async="boolean"!=typeof n||n,this.username=i,this.password=r,this.responseText=null,this.response=this.responseText,this.responseXML=null,this.responseURL=a,this.requestHeaders={},this.sendFlag=!1,this._readyStateChange(Z.OPENED)},setRequestHeader:function(e,a){if(Y(this),J[e]||/^(Sec-|Proxy-)/.test(e))throw new Error('Refused to set unsafe header "'+e+'"')
this.requestHeaders[e]?this.requestHeaders[e]+=","+a:this.requestHeaders[e]=a},send:function(e){if(Y(this),!/^(get|head)$/i.test(this.method)){var a=!1
Object.keys(this.requestHeaders).forEach((function(e){"content-type"===e.toLowerCase()&&(a=!0)})),a||(e||"").toString().match("FormData")||(this.requestHeaders["Content-Type"]="text/plain;charset=UTF-8"),this.requestBody=e}this.errorFlag=!1,this.sendFlag=this.async,this._readyStateChange(Z.OPENED),"function"==typeof this.onSend&&this.onSend(this),this.dispatchEvent(new H("loadstart",!1,!1,this))},abort:function(){this.aborted=!0,this.responseText=null,this.response=this.responseText,this.errorFlag=!0,this.requestHeaders={},this.dispatchEvent(new H("abort",!1,!1,this)),this.readyState>Z.UNSENT&&this.sendFlag&&(this._readyStateChange(Z.UNSENT),this.sendFlag=!1),"function"==typeof this.onerror&&this.onerror()},getResponseHeader:function(e){if(this.readyState<Z.HEADERS_RECEIVED)return null
if(/^Set-Cookie2?$/i.test(e))return null
for(var a in e=e.toLowerCase(),this.responseHeaders)if(a.toLowerCase()==e)return this.responseHeaders[a]
return null},getAllResponseHeaders:function(){if(this.readyState<Z.HEADERS_RECEIVED)return""
var e=""
for(var a in this.responseHeaders)this.responseHeaders.hasOwnProperty(a)&&!/^Set-Cookie2?$/i.test(a)&&(e+=a+": "+this.responseHeaders[a]+"\r\n")
return e},overrideMimeType:function(e){"string"==typeof e&&(this.forceMimeType=e.toLowerCase())},_readyStateChange:function(e){this.readyState=e,"function"==typeof this.onreadystatechange&&this.onreadystatechange(new H("readystatechange")),this.dispatchEvent(new H("readystatechange")),this.readyState==Z.DONE&&this.dispatchEvent(new H("load",!1,!1,this)),this.readyState!=Z.UNSENT&&this.readyState!=Z.DONE||this.dispatchEvent(new H("loadend",!1,!1,this))},_setResponseHeaders:function(e){for(var a in this.responseHeaders={},e)e.hasOwnProperty(a)&&(this.responseHeaders[a]=e[a])
this.forceMimeType&&(this.responseHeaders["Content-Type"]=this.forceMimeType),this.async?this._readyStateChange(Z.HEADERS_RECEIVED):this.readyState=Z.HEADERS_RECEIVED},_setResponseBody:function(e){!function(e){if(e.readyState==Z.DONE)throw new Error("Request done")}(this),function(e){if(e.async&&e.readyState!=Z.HEADERS_RECEIVED)throw new Error("No headers received")}(this),function(e){if("string"!=typeof e){var a=new Error("Attempted to respond to fake XMLHttpRequest with "+e+", which is not a string.")
throw a.name="InvalidBodyException",a}}(e)
var a=this.chunkSize||10,n=0
this.responseText="",this.response=this.responseText
do{this.async&&this._readyStateChange(Z.LOADING),this.responseText+=e.substring(n,n+a),this.response=this.responseText,n+=a}while(n<e.length)
var i,r,t=this.getResponseHeader("Content-Type")
if(this.responseText&&(!t||/(text\/xml)|(application\/xml)|(\+xml)/.test(t)))try{this.responseXML=(i=this.responseText,"undefined"!=typeof DOMParser?r=(new DOMParser).parseFromString(i,"text/xml"):((r=new ActiveXObject("Microsoft.XMLDOM")).async="false",r.loadXML(i)),r)}catch(e){}this.async?this._readyStateChange(Z.DONE):this.readyState=Z.DONE},respond:function(e,a,n){this._setResponseHeaders(a||{}),this.status="number"==typeof e?e:200,this.statusText=F[this.status],this._setResponseBody(n||"")}}
for(var Q in q)Z.prototype[Q]=q[Q]
function Y(e){if(e.readyState!==Z.OPENED)throw new Error("INVALID_STATE_ERR")
if(e.sendFlag)throw new Error("INVALID_STATE_ERR")}const $=Z
var X="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},ee=function(e,a){if(a=a.split(":")[0],!(e=+e))return!1
switch(a){case"http":case"ws":return 80!==e
case"https":case"wss":return 443!==e
case"ftp":return 21!==e
case"gopher":return 70!==e
case"file":return!1}return 0!==e},ae=Object.prototype.hasOwnProperty
function ne(e){try{return decodeURIComponent(e.replace(/\+/g," "))}catch(e){return null}}var ie={stringify:function(e,a){a=a||""
var n,i,r=[]
for(i in"string"!=typeof a&&(a="?"),e)if(ae.call(e,i)){if((n=e[i])||null!=n&&!isNaN(n)||(n=""),i=encodeURIComponent(i),n=encodeURIComponent(n),null===i||null===n)continue
r.push(i+"="+n)}return r.length?a+r.join("&"):""},parse:function(e){for(var a,n=/([^=?&]+)=?([^&]*)/g,i={};a=n.exec(e);){var r=ne(a[1]),t=ne(a[2])
null===r||null===t||r in i||(i[r]=t)}return i}},re=/^[A-Za-z][A-Za-z0-9+-.]*:\/\//,te=/^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i,oe=/^[a-zA-Z]:/,se=new RegExp("^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+")
function le(e){return(e||"").toString().replace(se,"")}var ue=[["#","hash"],["?","query"],function(e,a){return he(a.protocol)?e.replace(/\\/g,"/"):e},["/","pathname"],["@","auth",1],[NaN,"host",void 0,1,1],[/:(\d+)$/,"port",void 0,1],[NaN,"hostname",void 0,1,1]],ce={hash:1,query:1}
function de(e){var a,n=("undefined"!=typeof window?window:void 0!==X?X:"undefined"!=typeof self?self:{}).location||{},i={},r=typeof(e=e||n)
if("blob:"===e.protocol)i=new me(unescape(e.pathname),{})
else if("string"===r)for(a in i=new me(e,{}),ce)delete i[a]
else if("object"===r){for(a in e)a in ce||(i[a]=e[a])
void 0===i.slashes&&(i.slashes=re.test(e.href))}return i}function he(e){return"file:"===e||"ftp:"===e||"http:"===e||"https:"===e||"ws:"===e||"wss:"===e}function pe(e,a){e=le(e),a=a||{}
var n,i=te.exec(e),r=i[1]?i[1].toLowerCase():"",t=!!i[2],o=!!i[3],s=0
return t?o?(n=i[2]+i[3]+i[4],s=i[2].length+i[3].length):(n=i[2]+i[4],s=i[2].length):o?(n=i[3]+i[4],s=i[3].length):n=i[4],"file:"===r?s>=2&&(n=n.slice(2)):he(r)?n=i[4]:r?t&&(n=n.slice(2)):s>=2&&he(a.protocol)&&(n=i[4]),{protocol:r,slashes:t||he(r),slashesCount:s,rest:n}}function me(e,a,n){if(e=le(e),!(this instanceof me))return new me(e,a,n)
var i,r,t,o,s,l,u=ue.slice(),c=typeof a,d=this,h=0
for("object"!==c&&"string"!==c&&(n=a,a=null),n&&"function"!=typeof n&&(n=ie.parse),i=!(r=pe(e||"",a=de(a))).protocol&&!r.slashes,d.slashes=r.slashes||i&&a.slashes,d.protocol=r.protocol||a.protocol||"",e=r.rest,("file:"===r.protocol&&(2!==r.slashesCount||oe.test(e))||!r.slashes&&(r.protocol||r.slashesCount<2||!he(d.protocol)))&&(u[3]=[/(.*)/,"pathname"]);h<u.length;h++)"function"!=typeof(o=u[h])?(t=o[0],l=o[1],t!=t?d[l]=e:"string"==typeof t?~(s=e.indexOf(t))&&("number"==typeof o[2]?(d[l]=e.slice(0,s),e=e.slice(s+o[2])):(d[l]=e.slice(s),e=e.slice(0,s))):(s=t.exec(e))&&(d[l]=s[1],e=e.slice(0,s.index)),d[l]=d[l]||i&&o[3]&&a[l]||"",o[4]&&(d[l]=d[l].toLowerCase())):e=o(e,d)
n&&(d.query=n(d.query)),i&&a.slashes&&"/"!==d.pathname.charAt(0)&&(""!==d.pathname||""!==a.pathname)&&(d.pathname=function(e,a){if(""===e)return a
for(var n=(a||"/").split("/").slice(0,-1).concat(e.split("/")),i=n.length,r=n[i-1],t=!1,o=0;i--;)"."===n[i]?n.splice(i,1):".."===n[i]?(n.splice(i,1),o++):o&&(0===i&&(t=!0),n.splice(i,1),o--)
return t&&n.unshift(""),"."!==r&&".."!==r||n.push(""),n.join("/")}(d.pathname,a.pathname)),"/"!==d.pathname.charAt(0)&&he(d.protocol)&&(d.pathname="/"+d.pathname),ee(d.port,d.protocol)||(d.host=d.hostname,d.port=""),d.username=d.password="",d.auth&&(o=d.auth.split(":"),d.username=o[0]||"",d.password=o[1]||""),d.origin="file:"!==d.protocol&&he(d.protocol)&&d.host?d.protocol+"//"+d.host:"null",d.href=d.toString()}me.prototype={set:function(e,a,n){var i=this
switch(e){case"query":"string"==typeof a&&a.length&&(a=(n||ie.parse)(a)),i[e]=a
break
case"port":i[e]=a,ee(a,i.protocol)?a&&(i.host=i.hostname+":"+a):(i.host=i.hostname,i[e]="")
break
case"hostname":i[e]=a,i.port&&(a+=":"+i.port),i.host=a
break
case"host":i[e]=a,/:\d+$/.test(a)?(a=a.split(":"),i.port=a.pop(),i.hostname=a.join(":")):(i.hostname=a,i.port="")
break
case"protocol":i.protocol=a.toLowerCase(),i.slashes=!n
break
case"pathname":case"hash":if(a){var r="pathname"===e?"/":"#"
i[e]=a.charAt(0)!==r?r+a:a}else i[e]=a
break
default:i[e]=a}for(var t=0;t<ue.length;t++){var o=ue[t]
o[4]&&(i[o[1]]=i[o[1]].toLowerCase())}return i.origin="file:"!==i.protocol&&he(i.protocol)&&i.host?i.protocol+"//"+i.host:"null",i.href=i.toString(),i},toString:function(e){e&&"function"==typeof e||(e=ie.stringify)
var a,n=this,i=n.protocol
i&&":"!==i.charAt(i.length-1)&&(i+=":")
var r=i+(n.slashes||he(n.protocol)?"//":"")
return n.username&&(r+=n.username,n.password&&(r+=":"+n.password),r+="@"),r+=n.host+n.pathname,(a="object"==typeof n.query?e(n.query):n.query)&&(r+="?"!==a.charAt(0)?"?"+a:a),n.hash&&(r+=n.hash),r}},me.extractProtocol=pe,me.location=de,me.trimLeft=le,me.qs=ie
var fe=me
function ve(e){var a=new fe(e)
a.host||(a.href=a.href)
var n=a.pathname
"/"!==n.charAt(0)&&(n="/"+n)
var i=a.host
return"80"!==a.port&&"443"!==a.port||(i=a.hostname),{host:i,protocol:a.protocol,search:a.query,hash:a.hash,href:a.href,pathname:n,fullpath:n+(a.query||"")+(a.hash||"")}}var ge=function(){this.verbs={GET:new G,PUT:new G,POST:new G,DELETE:new G,PATCH:new G,HEAD:new G,OPTIONS:new G}},ke=function(){function e(){this.registries={}}return e.prototype.forURL=function(e){var a=ve(e).host,n=this.registries[a]
return void 0===n&&(n=this.registries[a]=new ge),n.verbs},e}(),ye="undefined"!=typeof globalThis&&globalThis||"undefined"!=typeof self&&self||void 0!==ye&&ye,be="URLSearchParams"in ye,Se="Symbol"in ye&&"iterator"in Symbol,Ae="FileReader"in ye&&"Blob"in ye&&function(){try{return new Blob,!0}catch(e){return!1}}(),Me="FormData"in ye,Te="ArrayBuffer"in ye
if(Te)var _e=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],we=ArrayBuffer.isView||function(e){return e&&_e.indexOf(Object.prototype.toString.call(e))>-1}
function je(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(e)||""===e)throw new TypeError('Invalid character in header field name: "'+e+'"')
return e.toLowerCase()}function Ee(e){return"string"!=typeof e&&(e=String(e)),e}function Ne(e){var a={next:function(){var a=e.shift()
return{done:void 0===a,value:a}}}
return Se&&(a[Symbol.iterator]=function(){return a}),a}function Be(e){this.map={},e instanceof Be?e.forEach((function(e,a){this.append(a,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(a){this.append(a,e[a])}),this)}function Pe(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"))
e.bodyUsed=!0}function Le(e){return new Promise((function(a,n){e.onload=function(){a(e.result)},e.onerror=function(){n(e.error)}}))}function De(e){var a=new FileReader,n=Le(a)
return a.readAsArrayBuffer(e),n}function xe(e){if(e.slice)return e.slice(0)
var a=new Uint8Array(e.byteLength)
return a.set(new Uint8Array(e)),a.buffer}function Ce(){return this.bodyUsed=!1,this._initBody=function(e){var a
this.bodyUsed=this.bodyUsed,this._bodyInit=e,e?"string"==typeof e?this._bodyText=e:Ae&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:Me&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:be&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():Te&&Ae&&(a=e)&&DataView.prototype.isPrototypeOf(a)?(this._bodyArrayBuffer=xe(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):Te&&(ArrayBuffer.prototype.isPrototypeOf(e)||we(e))?this._bodyArrayBuffer=xe(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):be&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},Ae&&(this.blob=function(){var e=Pe(this)
if(e)return e
if(this._bodyBlob)return Promise.resolve(this._bodyBlob)
if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]))
if(this._bodyFormData)throw new Error("could not read FormData body as blob")
return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?Pe(this)||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer)):this.blob().then(De)}),this.text=function(){var e,a,n,i=Pe(this)
if(i)return i
if(this._bodyBlob)return e=this._bodyBlob,n=Le(a=new FileReader),a.readAsText(e),n
if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var a=new Uint8Array(e),n=new Array(a.length),i=0;i<a.length;i++)n[i]=String.fromCharCode(a[i])
return n.join("")}(this._bodyArrayBuffer))
if(this._bodyFormData)throw new Error("could not read FormData body as text")
return Promise.resolve(this._bodyText)},Me&&(this.formData=function(){return this.text().then(ze)}),this.json=function(){return this.text().then(JSON.parse)},this}Be.prototype.append=function(e,a){e=je(e),a=Ee(a)
var n=this.map[e]
this.map[e]=n?n+", "+a:a},Be.prototype.delete=function(e){delete this.map[je(e)]},Be.prototype.get=function(e){return e=je(e),this.has(e)?this.map[e]:null},Be.prototype.has=function(e){return this.map.hasOwnProperty(je(e))},Be.prototype.set=function(e,a){this.map[je(e)]=Ee(a)},Be.prototype.forEach=function(e,a){for(var n in this.map)this.map.hasOwnProperty(n)&&e.call(a,this.map[n],n,this)},Be.prototype.keys=function(){var e=[]
return this.forEach((function(a,n){e.push(n)})),Ne(e)},Be.prototype.values=function(){var e=[]
return this.forEach((function(a){e.push(a)})),Ne(e)},Be.prototype.entries=function(){var e=[]
return this.forEach((function(a,n){e.push([n,a])})),Ne(e)},Se&&(Be.prototype[Symbol.iterator]=Be.prototype.entries)
var Ke=["DELETE","GET","HEAD","OPTIONS","POST","PUT"]
function Re(e,a){if(!(this instanceof Re))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
var n,i,r=(a=a||{}).body
if(e instanceof Re){if(e.bodyUsed)throw new TypeError("Already read")
this.url=e.url,this.credentials=e.credentials,a.headers||(this.headers=new Be(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,r||null==e._bodyInit||(r=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e)
if(this.credentials=a.credentials||this.credentials||"same-origin",!a.headers&&this.headers||(this.headers=new Be(a.headers)),this.method=(i=(n=a.method||this.method||"GET").toUpperCase(),Ke.indexOf(i)>-1?i:n),this.mode=a.mode||this.mode||null,this.signal=a.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&r)throw new TypeError("Body not allowed for GET or HEAD requests")
if(this._initBody(r),!("GET"!==this.method&&"HEAD"!==this.method||"no-store"!==a.cache&&"no-cache"!==a.cache)){var t=/([?&])_=[^&]*/
t.test(this.url)?this.url=this.url.replace(t,"$1_="+(new Date).getTime()):this.url+=(/\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}function ze(e){var a=new FormData
return e.trim().split("&").forEach((function(e){if(e){var n=e.split("="),i=n.shift().replace(/\+/g," "),r=n.join("=").replace(/\+/g," ")
a.append(decodeURIComponent(i),decodeURIComponent(r))}})),a}function Oe(e,a){if(!(this instanceof Oe))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
a||(a={}),this.type="default",this.status=void 0===a.status?200:a.status,this.ok=this.status>=200&&this.status<300,this.statusText=void 0===a.statusText?"":""+a.statusText,this.headers=new Be(a.headers),this.url=a.url||"",this._initBody(e)}Re.prototype.clone=function(){return new Re(this,{body:this._bodyInit})},Ce.call(Re.prototype),Ce.call(Oe.prototype),Oe.prototype.clone=function(){return new Oe(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new Be(this.headers),url:this.url})},Oe.error=function(){var e=new Oe(null,{status:0,statusText:""})
return e.type="error",e}
var Ie=[301,302,303,307,308]
Oe.redirect=function(e,a){if(-1===Ie.indexOf(a))throw new RangeError("Invalid status code")
return new Oe(null,{status:a,headers:{location:e}})}
var Ve=ye.DOMException
try{new Ve}catch(e){(Ve=function(e,a){this.message=e,this.name=a
var n=Error(e)
this.stack=n.stack}).prototype=Object.create(Error.prototype),Ve.prototype.constructor=Ve}function Ge(e,a){return new Promise((function(n,i){var r=new Re(e,a)
if(r.signal&&r.signal.aborted)return i(new Ve("Aborted","AbortError"))
var t=new XMLHttpRequest
function o(){t.abort()}t.onload=function(){var e,a,i={status:t.status,statusText:t.statusText,headers:(e=t.getAllResponseHeaders()||"",a=new Be,e.replace(/\r?\n[\t ]+/g," ").split("\r").map((function(e){return 0===e.indexOf("\n")?e.substr(1,e.length):e})).forEach((function(e){var n=e.split(":"),i=n.shift().trim()
if(i){var r=n.join(":").trim()
a.append(i,r)}})),a)}
i.url="responseURL"in t?t.responseURL:i.headers.get("X-Request-URL")
var r="response"in t?t.response:t.responseText
setTimeout((function(){n(new Oe(r,i))}),0)},t.onerror=function(){setTimeout((function(){i(new TypeError("Network request failed"))}),0)},t.ontimeout=function(){setTimeout((function(){i(new TypeError("Network request failed"))}),0)},t.onabort=function(){setTimeout((function(){i(new Ve("Aborted","AbortError"))}),0)},t.open(r.method,function(e){try{return""===e&&ye.location.href?ye.location.href:e}catch(a){return e}}(r.url),!0),"include"===r.credentials?t.withCredentials=!0:"omit"===r.credentials&&(t.withCredentials=!1),"responseType"in t&&(Ae?t.responseType="blob":Te&&r.headers.get("Content-Type")&&-1!==r.headers.get("Content-Type").indexOf("application/octet-stream")&&(t.responseType="arraybuffer")),!a||"object"!=typeof a.headers||a.headers instanceof Be?r.headers.forEach((function(e,a){t.setRequestHeader(a,e)})):Object.getOwnPropertyNames(a.headers).forEach((function(e){t.setRequestHeader(e,Ee(a.headers[e]))})),r.signal&&(r.signal.addEventListener("abort",o),t.onreadystatechange=function(){4===t.readyState&&r.signal.removeEventListener("abort",o)}),t.send(void 0===r._bodyInit?null:r._bodyInit)}))}Ge.polyfill=!0,ye.fetch||(ye.fetch=Ge,ye.Headers=Be,ye.Request=Re,ye.Response=Oe)
var He=Object.freeze({__proto__:null,Headers:Be,Request:Re,Response:Oe,get DOMException(){return Ve},fetch:Ge})
function Fe(e){function a(){$.call(this)}return a.prototype=Object.create($.prototype),a.prototype.constructor=a,a.prototype.send=function(){if(this.sendArguments=arguments,!e.pretender.running)throw new Error("You shut down a Pretender instance while there was a pending request. That request just tried to complete. Check to see if you accidentally shut down a pretender earlier than you intended to")
$.prototype.send.apply(this,arguments),e.pretender.checkPassthrough(this)?this.passthrough():e.pretender.handleRequest(this)},a.prototype.passthrough=function(){if(!this.sendArguments)throw new Error("You attempted to passthrough a FakeRequest that was never sent. Call `.send()` on the original request first")
var a=function(e,a){var n,i=["error","timeout","abort","readystatechange"],r=[],t=["readyState","responseText","response","responseXML","responseURL","status","statusText"],o=e._passthroughRequest=new a
function s(e,a,n){e.dispatchEvent(n),e["on"+a]&&e["on"+a](n)}function l(a){o["on"+a]=function(n){!function(e,a,n){for(var i=0;i<e.length;i++){var r=e[i]
r in a&&(n[r]=a[r])}}(t,o,e),s(e,a,n)}}function u(a){o.upload&&e.upload&&e.upload["on"+a]&&(o.upload["on"+a]=function(n){s(e.upload,a,n)})}o.open(e.method,e.url,e.async,e.username,e.password),"arraybuffer"===e.responseType&&(t=["readyState","response","status","statusText"],o.responseType=e.responseType),"onload"in o&&i.push("load"),e.async&&"arraybuffer"!==e.responseType&&(i.push("progress"),r.push("progress"))
for(n=0;n<i.length;n++)l(i[n])
for(n=0;n<r.length;n++)u(r[n])
for(var c in e.async&&(o.timeout=e.timeout,o.withCredentials=e.withCredentials),o.timeout||0===o.timeout||(o.timeout=0),e.requestHeaders)o.setRequestHeader(c,e.requestHeaders[c])
return o}(this,e.pretender._nativeXMLHttpRequest)
return a.send.apply(a,this.sendArguments),a},a.prototype._passthroughCheck=function(e,a){return this._passthroughRequest?this._passthroughRequest[e].apply(this._passthroughRequest,a):$.prototype[e].apply(this,a)},a.prototype.abort=function(){return this._passthroughCheck("abort",arguments)},a.prototype.getResponseHeader=function(){return this._passthroughCheck("getResponseHeader",arguments)},a.prototype.getAllResponseHeaders=function(){return this._passthroughCheck("getAllResponseHeaders",arguments)},e.pretender._nativeXMLHttpRequest.prototype._passthroughCheck&&console.warn("You created a second Pretender instance while there was already one running. Running two Pretender servers at once will lead to unexpected results and will be removed entirely in a future major version.Please call .shutdown() on your instances when you no longer need them to respond."),a}var Je=function(){function e(){this.length=0}return e.prototype.push=function(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a]
return 0},e}()
function Ue(e,a,n){var i=0,r=e.requestBody
r&&(r instanceof FormData?r.forEach((function(e){e instanceof File?i+=e.size:i+=e.length})):i=r.byteLength||r.size||r.length||0),setTimeout((function(){if(e.aborted||e.status)e.status&&(e.upload._progress(!0,i,i),e._progress(!0,i,i))
else{var r=(new Date).getTime()-a.getTime(),t=n<=0?0:r/n*i
e.upload._progress(!0,t,i),e._progress(!0,t,i),Ue(e,a,n)}}),50)}var We={}
function Ze(e){return function(a,n,i){return this.register(e,a,n,i)}}var qe=function(){function e(){var e=this
this.hosts=new ke,this.handlers=[],this.get=Ze("GET"),this.post=Ze("POST"),this.put=Ze("PUT"),this.delete=Ze("DELETE"),this.patch=Ze("PATCH"),this.head=Ze("HEAD"),this.options=Ze("OPTIONS"),this.passthrough=We
var a=arguments[arguments.length-1],n="object"==typeof a?a:null,i=n&&!1===n.trackRequests
this.handledRequests=i?new Je:[],this.passthroughRequests=i?new Je:[],this.unhandledRequests=i?new Je:[],this.requestReferences=[],this.forcePassthrough=n&&!0===n.forcePassthrough,this.disableUnhandled=n&&!0===n.disableUnhandled,this._nativeXMLHttpRequest=self.XMLHttpRequest,this.running=!1
var r={pretender:this}
this.ctx=r,self.XMLHttpRequest=Fe(r),this._fetchProps=He?["fetch","Headers","Request","Response"]:[],this._fetchProps.forEach((function(a){e["_native"+a]=self[a],self[a]=He[a]}),this),this.running=!0
for(var t=n?arguments.length-1:arguments.length,o=0;o<t;o++)this.map(arguments[o])}return e.prototype.map=function(e){e.call(this)},e.prototype.register=function(e,a,n,i){if(!n)throw new Error("The function you tried passing to Pretender to handle "+e+" "+a+" is undefined or missing.")
var r=n
return r.numberOfCalls=0,r.async=i,this.handlers.push(r),this.hosts.forURL(a)[e].add([{path:ve(a).fullpath,handler:r}]),r},e.prototype.checkPassthrough=function(e){var a=e.method.toUpperCase(),n=ve(e.url).fullpath,i=this.hosts.forURL(e.url)[a].recognize(n),r=i&&i[0]
return!!(r&&r.handler===We||this.forcePassthrough)&&(this.passthroughRequests.push(e),this.passthroughRequest(a,n,e),!0)},e.prototype.handleRequest=function(e){var a=e.method.toUpperCase(),n=e.url,i=this._handlerFor(a,n,e)
if(i){i.handler.numberOfCalls++
var r=i.handler.async
this.handledRequests.push(e)
var t=this,o=function(i){if(o=i,"[object Array]"!==Object.prototype.toString.call(o))throw new Error("Nothing returned by handler for "+n+". Remember to `return [status, headers, body];` in your route handler.")
var o,s=i[0],l=t.prepareHeaders(i[1]),u=t.prepareBody(i[2],l)
t.handleResponse(e,r,(function(){e.respond(s,l,u),t.handledRequest(a,n,e)}))}
try{var s=i.handler(e)
s&&"function"==typeof s.then?s.then((function(e){o(e)})):o(s)}catch(i){this.erroredRequest(a,n,e,i),this.resolve(e)}}else this.disableUnhandled||(this.unhandledRequests.push(e),this.unhandledRequest(a,n,e))},e.prototype.handleResponse=function(e,a,n){var i="function"==typeof a?a():a
if(!1===(i="boolean"==typeof i||"number"==typeof i?i:0))n()
else{var r=this
r.requestReferences.push({request:e,callback:n}),!0!==i&&(Ue(e,new Date,i),setTimeout((function(){r.resolve(e)}),i))}},e.prototype.resolve=function(e){for(var a=0,n=this.requestReferences.length;a<n;a++){var i=this.requestReferences[a]
if(i.request===e){i.callback(),this.requestReferences.splice(a,1)
break}}},e.prototype.requiresManualResolution=function(e,a){var n=this._handlerFor(e.toUpperCase(),a,{})
if(!n)return!1
var i=n.handler.async
return"function"==typeof i?!0===i():!0===i},e.prototype.prepareBody=function(e,a){return e},e.prototype.prepareHeaders=function(e){return e},e.prototype.handledRequest=function(e,a,n){},e.prototype.passthroughRequest=function(e,a,n){},e.prototype.unhandledRequest=function(e,a,n){throw new Error("Pretender intercepted "+e+" "+a+" but no handler was defined for this type of request")},e.prototype.erroredRequest=function(e,a,n,i){throw i.message="Pretender intercepted "+e+" "+a+" but encountered an error: "+i.message,i},e.prototype.shutdown=function(){var e=this
self.XMLHttpRequest=this._nativeXMLHttpRequest,this._fetchProps.forEach((function(a){self[a]=e["_native"+a]}),this),this.ctx.pretender=void 0,this.running=!1},e.prototype._handlerFor=function(e,a,n){var i=this.hosts.forURL(a)[e].recognize(ve(a).fullpath),r=i?i[0]:null
return r&&(n.params=r.params,n.queryParams=i.queryParams),r},e.parseURL=ve,e.Hosts=ke,e.Registry=ge,e}()
qe.parseURL=ve,qe.Hosts=ke,qe.Registry=ge
const Qe=qe
n(8679)
var Ye=Object.prototype.toString,$e=function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")},Xe=function(){function e(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(a,n,i){return n&&e(a.prototype,n),i&&e(a,i),a}}()
function ea(e){return e.split("").map((function(e){return"(?:"+e.toUpperCase()+"|"+e.toLowerCase()+")"})).join("")}function aa(e,a){for(var n=e.length-1;n>=0;n--)e[n]===a&&Array.prototype.splice.call(e,n,1)}function na(e,a){return Object.prototype.hasOwnProperty.call(e,a)}var ia={},ra=function(){function e(){$e(this,e),this.plurals=[],this.singulars=[],this.uncountables=[],this.humans=[],this.acronyms={},this.acronymRegex=/(?=a)b/}return Xe(e,null,[{key:"getInstance",value:function(a){return ia[a]=ia[a]||new e,ia[a]}}]),Xe(e,[{key:"acronym",value:function(e){this.acronyms[e.toLowerCase()]=e
var a=[]
for(var n in this.acronyms)na(this.acronyms,n)&&a.push(this.acronyms[n])
this.acronymRegex=new RegExp(a.join("|"))}},{key:"plural",value:function(e,a){"string"==typeof e&&aa(this.uncountables,e),aa(this.uncountables,a),this.plurals.unshift([e,a])}},{key:"singular",value:function(e,a){"string"==typeof e&&aa(this.uncountables,e),aa(this.uncountables,a),this.singulars.unshift([e,a])}},{key:"irregular",value:function(e,a){aa(this.uncountables,e),aa(this.uncountables,a)
var n=e[0],i=e.substr(1),r=a[0],t=a.substr(1)
if(n.toUpperCase()===r.toUpperCase())this.plural(new RegExp("("+n+")"+i+"$","i"),"$1"+t),this.plural(new RegExp("("+r+")"+t+"$","i"),"$1"+t),this.singular(new RegExp("("+n+")"+i+"$","i"),"$1"+i),this.singular(new RegExp("("+r+")"+t+"$","i"),"$1"+i)
else{var o=ea(i),s=ea(t)
this.plural(new RegExp(n.toUpperCase()+o+"$"),r.toUpperCase()+t),this.plural(new RegExp(n.toLowerCase()+o+"$"),r.toLowerCase()+t),this.plural(new RegExp(r.toUpperCase()+s+"$"),r.toUpperCase()+t),this.plural(new RegExp(r.toLowerCase()+s+"$"),r.toLowerCase()+t),this.singular(new RegExp(n.toUpperCase()+o+"$"),n.toUpperCase()+i),this.singular(new RegExp(n.toLowerCase()+o+"$"),n.toLowerCase()+i),this.singular(new RegExp(r.toUpperCase()+s+"$"),n.toUpperCase()+i),this.singular(new RegExp(r.toLowerCase()+s+"$"),n.toLowerCase()+i)}}},{key:"uncountable",value:function(){for(var e=arguments.length,a=Array(e),n=0;n<e;n++)a[n]=arguments[n]
this.uncountables=this.uncountables.concat(a)}},{key:"human",value:function(e,a){this.humans.unshift([e,a])}},{key:"clear",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"all"
"all"===e?(this.plurals=[],this.singulars=[],this.uncountables=[],this.humans=[]):this[e]=[]}}]),e}(),ta={en:function(e){e.plural(/$/,"s"),e.plural(/s$/i,"s"),e.plural(/^(ax|test)is$/i,"$1es"),e.plural(/(octop|vir)us$/i,"$1i"),e.plural(/(octop|vir)i$/i,"$1i"),e.plural(/(alias|status)$/i,"$1es"),e.plural(/(bu)s$/i,"$1ses"),e.plural(/(buffal|tomat)o$/i,"$1oes"),e.plural(/([ti])um$/i,"$1a"),e.plural(/([ti])a$/i,"$1a"),e.plural(/sis$/i,"ses"),e.plural(/(?:([^f])fe|([lr])f)$/i,"$1$2ves"),e.plural(/(hive)$/i,"$1s"),e.plural(/([^aeiouy]|qu)y$/i,"$1ies"),e.plural(/(x|ch|ss|sh)$/i,"$1es"),e.plural(/(matr|vert|ind)(?:ix|ex)$/i,"$1ices"),e.plural(/^(m|l)ouse$/i,"$1ice"),e.plural(/^(m|l)ice$/i,"$1ice"),e.plural(/^(ox)$/i,"$1en"),e.plural(/^(oxen)$/i,"$1"),e.plural(/(quiz)$/i,"$1zes"),e.singular(/s$/i,""),e.singular(/(ss)$/i,"$1"),e.singular(/(n)ews$/i,"$1ews"),e.singular(/([ti])a$/i,"$1um"),e.singular(/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)(sis|ses)$/i,"$1sis"),e.singular(/(^analy)(sis|ses)$/i,"$1sis"),e.singular(/([^f])ves$/i,"$1fe"),e.singular(/(hive)s$/i,"$1"),e.singular(/(tive)s$/i,"$1"),e.singular(/([lr])ves$/i,"$1f"),e.singular(/([^aeiouy]|qu)ies$/i,"$1y"),e.singular(/(s)eries$/i,"$1eries"),e.singular(/(m)ovies$/i,"$1ovie"),e.singular(/(x|ch|ss|sh)es$/i,"$1"),e.singular(/^(m|l)ice$/i,"$1ouse"),e.singular(/(bus)(es)?$/i,"$1"),e.singular(/(o)es$/i,"$1"),e.singular(/(shoe)s$/i,"$1"),e.singular(/(cris|test)(is|es)$/i,"$1is"),e.singular(/^(a)x[ie]s$/i,"$1xis"),e.singular(/(octop|vir)(us|i)$/i,"$1us"),e.singular(/(alias|status)(es)?$/i,"$1"),e.singular(/^(ox)en/i,"$1"),e.singular(/(vert|ind)ices$/i,"$1ex"),e.singular(/(matr)ices$/i,"$1ix"),e.singular(/(quiz)zes$/i,"$1"),e.singular(/(database)s$/i,"$1"),e.irregular("person","people"),e.irregular("man","men"),e.irregular("child","children"),e.irregular("sex","sexes"),e.irregular("move","moves"),e.irregular("zombie","zombies"),e.uncountable("equipment","information","rice","money","species","series","fish","sheep","jeans","police")}}
function oa(e,a){if(n=e,"[object Function]"===Ye.call(n)&&(a=e,e=null),e=e||"en",!a)return ra.getInstance(e)
var n
a(ra.getInstance(e))}for(var sa in ta)oa(sa,ta[sa])
function la(e,a){var n,i,r,t=""+e
if(0===t.length)return t
var o=t.toLowerCase().match(/\b\w+$/)
if(o&&oa().uncountables.indexOf(o[0])>-1)return t
for(var s=0,l=a.length;s<l;s++)if(i=(n=a[s])[0],r=n[1],t.match(i)){t=t.replace(i,r)
break}return t}function ua(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"en"
return la(e,oa(a).plurals)}function ca(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"en"
return la(e,oa(a).singulars)}function da(e){var a=null==e?"":String(e)
return a.charAt(0).toUpperCase()+a.slice(1)}var ha={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","Æ":"AE","Ç":"C","È":"E","É":"E","Ê":"E","Ë":"E","Ì":"I","Í":"I","Î":"I","Ï":"I","Ð":"D","Ñ":"N","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","×":"x","Ø":"O","Ù":"U","Ú":"U","Û":"U","Ü":"U","Ý":"Y","Þ":"Th","ß":"ss","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","æ":"ae","ç":"c","è":"e","é":"e","ê":"e","ë":"e","ì":"i","í":"i","î":"i","ï":"i","ð":"d","ñ":"n","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","ù":"u","ú":"u","û":"u","ü":"u","ý":"y","þ":"th","ÿ":"y","Ā":"A","ā":"a","Ă":"A","ă":"a","Ą":"A","ą":"a","Ć":"C","ć":"c","Ĉ":"C","ĉ":"c","Ċ":"C","ċ":"c","Č":"C","č":"c","Ď":"D","ď":"d","Đ":"D","đ":"d","Ē":"E","ē":"e","Ĕ":"E","ĕ":"e","Ė":"E","ė":"e","Ę":"E","ę":"e","Ě":"E","ě":"e","Ĝ":"G","ĝ":"g","Ğ":"G","ğ":"g","Ġ":"G","ġ":"g","Ģ":"G","ģ":"g","Ĥ":"H","ĥ":"h","Ħ":"H","ħ":"h","Ĩ":"I","ĩ":"i","Ī":"I","ī":"i","Ĭ":"I","ĭ":"i","Į":"I","į":"i","İ":"I","ı":"i","Ĳ":"IJ","ĳ":"ij","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","ĺ":"l","Ļ":"L","ļ":"l","Ľ":"L","ľ":"l","Ŀ":"L","ŀ":"l","Ł":"L","ł":"l","Ń":"N","ń":"n","Ņ":"N","ņ":"n","Ň":"N","ň":"n","ŉ":"'n","Ŋ":"NG","ŋ":"ng","Ō":"O","ō":"o","Ŏ":"O","ŏ":"o","Ő":"O","ő":"o","Œ":"OE","œ":"oe","Ŕ":"R","ŕ":"r","Ŗ":"R","ŗ":"r","Ř":"R","ř":"r","Ś":"S","ś":"s","Ŝ":"S","ŝ":"s","Ş":"S","ş":"s","Š":"S","š":"s","Ţ":"T","ţ":"t","Ť":"T","ť":"t","Ŧ":"T","ŧ":"t","Ũ":"U","ũ":"u","Ū":"U","ū":"u","Ŭ":"U","ŭ":"u","Ů":"U","ů":"u","Ű":"U","ű":"u","Ų":"U","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","ź":"z","Ż":"Z","ż":"z","Ž":"Z","ž":"z","А":"A","Б":"B","В":"V","Г":"G","Д":"D","Е":"E","Ё":"E","Ж":"ZH","З":"Z","И":"I","Й":"J","К":"K","Л":"L","М":"M","Н":"N","О":"O","П":"P","Р":"R","С":"S","Т":"T","У":"U","Ф":"F","Х":"KH","Ц":"C","Ч":"CH","Ш":"SH","Щ":"SHCH","Ъ":"","Ы":"Y","Ь":"","Э":"E","Ю":"YU","Я":"YA","а":"a","б":"b","в":"v","г":"g","д":"d","е":"e","ё":"e","ж":"zh","з":"z","и":"i","й":"j","к":"k","л":"l","м":"m","н":"n","о":"o","п":"p","р":"r","с":"s","т":"t","у":"u","ф":"f","х":"kh","ц":"c","ч":"ch","ш":"sh","щ":"shch","ъ":"","ы":"y","ь":"","э":"e","ю":"yu","я":"ya"},pa={}
!function(){function e(){for(var a in $e(this,e),this.approximations={},ha)this.approximate(a,ha[a])}Xe(e,null,[{key:"getInstance",value:function(a){return pa[a]=pa[a]||new e,pa[a]}}]),Xe(e,[{key:"approximate",value:function(e,a){this.approximations[e]=a}},{key:"transliterate",value:function(e,a){var n=this
return e.replace(/[^\u0000-\u007f]/g,(function(e){return n.approximations[e]||a||"?"}))}}])}()
var ma=n(2328),fa=n.n(ma),va=n(3107),ga=n.n(va),ka=n(983),ya=n.n(ka),ba=n(543),Sa=n.n(ba),Aa=n(2004),Ma=n.n(Aa),Ta=n(1856),_a=n.n(Ta),wa=n(4400),ja=n.n(wa),Ea=n(3178),Na=n.n(Ea),Ba=n(1821),Pa=n.n(Ba),La=n(291),Da=n.n(La),xa=n(6510),Ca=n.n(xa),Ka=n(5148),Ra=n.n(Ka),za=n(3334),Oa=n.n(za),Ia=n(7542),Va=n.n(Ia),Ga=n(332),Ha=n.n(Ga),Fa=n(8317),Ja=n.n(Fa)
function Ua(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function Wa(e){return Wa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Wa(e)}function Za(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}function qa(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function Qa(e,a,n){return a&&qa(e.prototype,a),n&&qa(e,n),e}function Ya(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function $a(e,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(a&&a.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),a&&en(e,a)}function Xa(e){return Xa=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},Xa(e)}function en(e,a){return en=Object.setPrototypeOf||function(e,a){return e.__proto__=a,e},en(e,a)}function an(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function nn(e,a,n){return nn=an()?Reflect.construct:function(e,a,n){var i=[null]
i.push.apply(i,a)
var r=new(Function.bind.apply(e,i))
return n&&en(r,n.prototype),r},nn.apply(null,arguments)}function rn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function tn(e,a){if(a&&("object"==typeof a||"function"==typeof a))return a
if(void 0!==a)throw new TypeError("Derived constructors may only return object or undefined")
return rn(e)}function on(e){var a=an()
return function(){var n,i=Xa(e)
if(a){var r=Xa(this).constructor
n=Reflect.construct(i,arguments,r)}else n=i.apply(this,arguments)
return tn(this,n)}}function sn(e,a){return function(e){if(Array.isArray(e))return e}(e)||function(e,a){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]
if(null!=n){var i,r,t=[],o=!0,s=!1
try{for(n=n.call(e);!(o=(i=n.next()).done)&&(t.push(i.value),!a||t.length!==a);o=!0);}catch(e){s=!0,r=e}finally{try{o||null==n.return||n.return()}finally{if(s)throw r}}return t}}(e,a)||un(e,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ln(e){return function(e){if(Array.isArray(e))return cn(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||un(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function un(e,a){if(e){if("string"==typeof e)return cn(e,a)
var n=Object.prototype.toString.call(e).slice(8,-1)
return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?cn(e,a):void 0}}function cn(e,a){(null==a||a>e.length)&&(a=e.length)
for(var n=0,i=new Array(a);n<a;n++)i[n]=e[n]
return i}function dn(e){for(var a=c()(h()(e)),n=a.length,i=new Array(n),r={},t=n,o=function t(o,s,l){if(l.indexOf(o)>=0)throw new Error("Cyclic dependency in properties ".concat(JSON.stringify(l)))
if(!r[s]){r[s]=!0
var u=e.filter((function(e){return e&&e[0]===o}))
if(s=u.length){var c=l.concat(o)
do{var d=u[--s][1]
d&&t(d,a.indexOf(d),c)}while(s)}i[--n]=o}};t--;)r[t]||o(a[t],t,[])
return i.reverse()}var hn=function e(){this.build=function(a){var n=this,i={},t=Object.assign({},this.attrs)
delete t.afterCreate,Object.keys(t).forEach((function(a){e.isTrait.call(n,a)&&delete t[a]}))
var s=function(e,a){var n,i=new function(){},r=[]
return Object.keys(e).forEach((function(e){var a
Object.defineProperty(i.constructor.prototype,e,{get:function(){return r.push([n,e]),a},set:function(e){a=e},enumerable:!1,configurable:!0})})),Object.keys(e).forEach((function(a){var n=e[a]
"function"!=typeof n&&(i[a]=n)})),Object.keys(e).forEach((function(t){var o=e[t]
n=t,"function"==typeof o&&(i[t]=o.call(i,a)),r.push([t])})),dn(r)}(t,a)
return s.forEach((function(e){var n,s
n=function(e){return l()(e,s)},s=function(e){return Array.isArray(e)?e.map(s):r()(e)?n(e):o()(e)?e.call(t,a):e}
var u=t[e]
o()(u)?i[e]=u.call(i,a):i[e]=s(u)})),i}}
hn.extend=function(e){var a=Object.assign({},this.attrs,e),n=function(){this.attrs=a,hn.call(this)}
return n.extend=hn.extend,n.extractAfterCreateCallbacks=hn.extractAfterCreateCallbacks,n.isTrait=hn.isTrait,n.attrs=a,n},hn.extractAfterCreateCallbacks=function(){var e=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=a.traits,i=[],r=this.attrs||{}
return r.afterCreate&&i.push(r.afterCreate),(Array.isArray(n)?n:Object.keys(r)).filter((function(a){return e.isTrait(a)&&r[a].extension.afterCreate})).forEach((function(e){i.push(r[e].extension.afterCreate)})),i},hn.isTrait=function(e){var a=this.attrs
return r()(a[e])&&!0===a[e].__isTrait__}
var pn=function(){function e(){Za(this,e),this._nextId=1,this._ids={}}return Qa(e,[{key:"get",value:function(){return this._nextId}},{key:"set",value:function(e){if(this._ids[e])throw new Error("Attempting to use the ID ".concat(e,", but it's already been used"))
var a;(+(a=e)).toString()===a.toString()&&+e>=this._nextId&&(this._nextId=+e+1),this._ids[e]=!0}},{key:"inc",value:function(){var e=this.get()+1
return this._nextId=e,e}},{key:"fetch",value:function(){var e=this.get()
return this._ids[e]=!0,this.inc(),e.toString()}},{key:"reset",value:function(){this._nextId=1,this._ids={}}}]),e}(),mn=function(){for(var e=!0,a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
return{__isAssociation__:e,traitsAndOverrides:n}},fn=function(e){return{extension:e,__isTrait__:!0}},vn=console.warn,gn=function(){function e(a){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2?arguments[2]:void 0
Za(this,e),this.code=a,this.headers=n,204===a?void 0!==i&&""!==i?vn("Mirage: One of your route handlers is returning a custom\n          204 Response that has data, but this is a violation of the HTTP spec\n          and could lead to unexpected behavior. 204 responses should have no\n          content (an empty string) as their body."):this.data="":void 0!==i&&""!==i||Object.prototype.hasOwnProperty.call(this.headers,"Content-Type")?this.data=i:this.data={},204===a||Object.prototype.hasOwnProperty.call(this.headers,"Content-Type")||(this.headers["Content-Type"]="application/json")}return Qa(e,[{key:"toRackResponse",value:function(){return[this.code,this.headers,this.data]}}]),e}(),kn={},yn={},bn={},Sn={}
function An(e){if("string"!=typeof kn[e]){var a=function(e,a){null==a&&(a=!0)
var n=""+e
return(n=a?n.replace(/^[a-z\d]*/,(function(e){return oa().acronyms[e]||da(e)})):n.replace(new RegExp("^(?:"+oa().acronymRegex.source+"(?=\\b|[A-Z_])|\\w)"),(function(e){return e.toLowerCase()}))).replace(/(?:_|(\/))([a-z\d]*)/gi,(function(e,a,n,i,r){return a||(a=""),""+a+(oa().acronyms[n]||da(n))}))}(Tn(e),!1).split("/").map(fa()).join("/")
kn[e]=a}return kn[e]}function Mn(e){if("string"!=typeof yn[e]){var a=Tn(e).replace(/_/g,"-")
yn[e]=a}return yn[e]}function Tn(e){if("string"!=typeof bn[e]){var a=(""+e).replace(new RegExp("(?:([A-Za-z\\d])|^)("+oa().acronymRegex.source+")(?=\\b|[^a-z])","g"),(function(e,a,n){return(a||"")+(a?"_":"")+n.toLowerCase()})).replace(/([A-Z\d]+)([A-Z][a-z])/g,"$1_$2").replace(/([a-z\d])([A-Z])/g,"$1_$2").replace(/-/g,"_").toLowerCase()
bn[e]=a}return bn[e]}function _n(e){if("string"!=typeof Sn[e]){var a=da(e)
Sn[e]=a}return Sn[e]}function wn(e){return r()(e)&&!0===e.__isAssociation__}var jn=["description","fileName","lineNumber","message","name","number","stack"]
function En(e,a){if("string"==typeof e&&!a)throw new Nn(e)
if(!e)throw new Nn(a.replace(/^ +/gm,"")||"Assertion failed")}function Nn(e,a){var n=Error(e)
a&&(n.stack=a)
for(var i=0;i<jn.length;i++){var r=jn[i];["description","message","stack"].indexOf(r)>-1?this[r]="Mirage: ".concat(n[r]):this[r]=n[r]}}Nn.prototype=Object.create(Error.prototype)
var Bn=function(){function e(a,n){Za(this,e),this.modelName=void 0,"object"===Wa(a)?(this.modelName=void 0,this.opts=a):(this.modelName=a?Mn(a):"",this.opts=n||{}),this.name="",this.ownerModelName=""}return Qa(e,[{key:"setSchema",value:function(e){this.schema=e}},{key:"isReflexive",value:function(){var e=!(this.modelName!==this.ownerModelName||!this.opts.inverse),a=!(void 0!==this.opts.inverse||this.ownerModelName!==this.modelName)
return e||a}},{key:"isPolymorphic",get:function(){return this.opts.polymorphic}},{key:"type",get:function(){throw new Error("Subclasses of Association must implement a getter for type")}},{key:"foreignKey",get:function(){return this.getForeignKey()}},{key:"identifier",get:function(){throw new Error("Subclasses of Association must implement a getter for identifier")}}]),e}(),Pn={},Ln=function(e){$a(n,e)
var a=on(n)
function n(){return Za(this,n),a.apply(this,arguments)}return Qa(n,[{key:"identifier",get:function(){if("string"!=typeof Pn[this.name]){var e="".concat(An(this.name),"Id")
Pn[this.name]=e}return Pn[this.name]}},{key:"type",get:function(){return"belongsTo"}},{key:"getForeignKeyArray",value:function(){return[An(this.ownerModelName),this.getForeignKey()]}},{key:"getForeignKey",value:function(){if("string"!=typeof Pn[this.name]){var e="".concat(An(this.name),"Id")
Pn[this.name]=e}return Pn[this.name]}},{key:"addMethodsToModelClass",value:function(e,a){var n=e.prototype,i=this,r=this.getForeignKey(),t=Ya({},a,this)
n.belongsToAssociations=Object.assign(n.belongsToAssociations,t),Object.keys(n.belongsToAssociations).forEach((function(e){var a=n.belongsToAssociations[e]
n.belongsToAssociationFks[a.getForeignKey()]=a})),this.schema.addDependentAssociation(this,this.modelName),n.associationKeys.add(a),n.associationIdKeys.add(r),Object.defineProperty(n,r,{get:function(){this._tempAssociations=this._tempAssociations||{}
var e=this._tempAssociations[a]
return null===e?null:i.isPolymorphic?e?{id:e.id,type:e.modelName}:this.attrs[r]:e?e.id:this.attrs[r]},set:function(e){var n
null===e?n=null:void 0!==e&&(i.isPolymorphic?(En("object"===Wa(e),"You're setting an ID on the polymorphic association '".concat(i.name,"' but you didn't pass in an object. Polymorphic IDs need to be in the form { type, id }.")),n=i.schema[i.schema.toCollectionName(e.type)].find(e.id)):En(n=i.schema[i.schema.toCollectionName(i.modelName)].find(e),"Couldn't find ".concat(i.modelName," with id = ").concat(e))),this[a]=n}}),Object.defineProperty(n,a,{get:function(){this._tempAssociations=this._tempAssociations||{}
var e=this._tempAssociations[a],n=this[r],t=null
return e?t=e:null!==n&&(t=i.isPolymorphic?i.schema[i.schema.toCollectionName(n.type)].find(n.id):i.schema[i.schema.toCollectionName(i.modelName)].find(n)),t},set:function(e){if(this._tempAssociations=this._tempAssociations||{},this._tempAssociations[a]=e,e&&e.hasInverseFor(i)){var n=e.inverseFor(i)
e.associate(this,n)}}}),n["new".concat(_n(a))]=function(){var e,n
i.isPolymorphic?(e=arguments.length<=0?void 0:arguments[0],n=arguments.length<=1?void 0:arguments[1]):(e=i.modelName,n=arguments.length<=0?void 0:arguments[0])
var r=i.schema[i.schema.toCollectionName(e)].new(n)
return this[a]=r,r},n["create".concat(_n(a))]=function(){var e,n
i.isPolymorphic?(e=arguments.length<=0?void 0:arguments[0],n=arguments.length<=1?void 0:arguments[1]):(e=i.modelName,n=arguments.length<=0?void 0:arguments[0])
var r=i.schema[i.schema.toCollectionName(e)].create(n)
return this[a]=r,this.save(),r.reload()}}},{key:"disassociateAllDependentsFromTarget",value:function(e){var a,n=this,i=this.ownerModelName
a=this.isPolymorphic?{type:e.modelName,id:e.id}:e.id,this.schema[this.schema.toCollectionName(i)].where((function(e){var i=e[n.getForeignKey()]
return!!i&&("object"===Wa(i)?i.type===a.type&&i.id===a.id:i===a)})).models.forEach((function(a){a.disassociate(e,n),a.save()}))}}]),n}(Bn)
function Dn(e){return Array.isArray(e)?e.map(Dn):Object.assign({},e)}var xn=function(){function e(a,n,i){Za(this,e),this.name=a,this._records=[],this.identityManager=new i,n&&this.insert(n)}return Qa(e,[{key:"all",value:function(){return Dn(this._records)}},{key:"insert",value:function(e){var a=this
return Array.isArray(e)?ya()(e,(function(e){return a._insertRecord(e)})):this._insertRecord(e)}},{key:"find",value:function(e){if(Array.isArray(e))return this._findRecords(e).filter(Boolean).map(Dn)
var a=this._findRecord(e)
return a?Dn(a):null}},{key:"findBy",value:function(e){var a=this._findRecordBy(e)
return a?Dn(a):null}},{key:"where",value:function(e){return this._findRecordsWhere(e).map(Dn)}},{key:"firstOrCreate",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.where(e),i=sn(n,1),r=i[0]
if(r)return r
var t=Object.assign(a,e),o=this.insert(t)
return o}},{key:"update",value:function(e,a){var n,i=this
if(void 0===a){a=e
var r=[]
return this._records.forEach((function(e){var n=Object.assign({},e)
i._updateRecord(e,a),ga()(n,e)||r.push(e)})),r}if("number"==typeof e||"string"==typeof e){var t=e,o=this._findRecord(t)
return this._updateRecord(o,a),o}if(Array.isArray(e)){var s=e
return(n=this._findRecords(s)).forEach((function(e){i._updateRecord(e,a)})),n}if("object"===Wa(e)){var l=e
return(n=this._findRecordsWhere(l)).forEach((function(e){i._updateRecord(e,a)})),n}}},{key:"remove",value:function(e){var a=this
if(void 0===e)this._records=[],this.identityManager.reset()
else if("number"==typeof e||"string"==typeof e){var n=this._findRecord(e),i=this._records.indexOf(n)
this._records.splice(i,1)}else Array.isArray(e)?this._findRecords(e).forEach((function(e){var n=a._records.indexOf(e)
a._records.splice(n,1)})):"object"===Wa(e)&&this._findRecordsWhere(e).forEach((function(e){var n=a._records.indexOf(e)
a._records.splice(n,1)}))}},{key:"_findRecord",value:function(e){return e=e.toString(),this._records.find((function(a){return a.id===e}))}},{key:"_findRecordBy",value:function(e){return this._findRecordsWhere(e)[0]}},{key:"_findRecords",value:function(e){return e.map(this._findRecord,this)}},{key:"_findRecordsWhere",value:function(e){var a=this._records,n="object"===Wa(e)?function(a){return Object.keys(e).every((function(n){return String(a[n])===String(e[n])}))}:e
return a.filter(n)}},{key:"_insertRecord",value:function(e){var a=Dn(e)
return!a||void 0!==a.id&&null!==a.id?(a.id=a.id.toString(),this.identityManager.set(a.id)):a.id=this.identityManager.fetch(a),this._records.push(a),Dn(a)}},{key:"_updateRecord",value:function(e,a){var n=a&&Object.prototype.hasOwnProperty.call(a,"id")?a.id.toString():null,i=e.id
if(n&&i!==n)throw new Error("Updating the ID of a record is not permitted")
for(var r in a)"id"!==r&&(e[r]=a[r])}}]),e}(),Cn=function(){function e(a,n){Za(this,e),this._collections=[],this.registerIdentityManagers(n),a&&this.loadData(a)}return Qa(e,[{key:"loadData",value:function(e){for(var a in e)this.createCollection(a,Sa()(e[a]))}},{key:"dump",value:function(){return this._collections.reduce((function(e,a){return e[a.name]=a.all(),e}),{})}},{key:"createCollection",value:function(e,a){if(this[e])a&&this[e].insert(a)
else{var n=this.identityManagerFor(e),i=new xn(e,a,n)
Object.defineProperty(this,e,{get:function(){var e=i.all()
return["insert","find","findBy","where","update","remove","firstOrCreate"].forEach((function(a){e[a]=function(){return i[a].apply(i,arguments)}})),e}}),Object.defineProperty(this,"_".concat(e),{get:function(){var e=[]
return["insert","find","findBy","where","update","remove","firstOrCreate"].forEach((function(a){e[a]=function(){return i[a].apply(i,arguments)}})),e}}),this._collections.push(i)}return this}},{key:"createCollections",value:function(){for(var e=this,a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
n.forEach((function(a){return e.createCollection(a)}))}},{key:"emptyData",value:function(){this._collections.forEach((function(e){return e.remove()}))}},{key:"identityManagerFor",value:function(e){return this._identityManagers[this._container.inflector.singularize(e)]||this._identityManagers.application||pn}},{key:"registerIdentityManagers",value:function(e){this._identityManagers=e||{}}}]),e}(),Kn=function(){function e(a){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[]
Za(this,e),En(a&&"string"==typeof a,"You must pass a `modelName` into a Collection"),this.modelName=a,this.models=n}return Qa(e,[{key:"length",get:function(){return this.models.length}},{key:"update",value:function(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
return Ma().apply(void 0,[this.models,"update"].concat(a)),this}},{key:"save",value:function(){return Ma()(this.models,"save"),this}},{key:"reload",value:function(){return Ma()(this.models,"reload"),this}},{key:"destroy",value:function(){return Ma()(this.models,"destroy"),this}},{key:"add",value:function(e){return this.models.push(e),this}},{key:"remove",value:function(e){var a=this.models.find((function(a){return a.toString()===e.toString()}))
if(a){var n=this.models.indexOf(a)
this.models.splice(n,1)}return this}},{key:"includes",value:function(e){return this.models.some((function(a){return a.toString()===e.toString()}))}},{key:"filter",value:function(a){var n=this.models.filter(a)
return new e(this.modelName,n)}},{key:"sort",value:function(a){var n=this.models.concat().sort(a)
return new e(this.modelName,n)}},{key:"slice",value:function(){var a,n=(a=this.models).slice.apply(a,arguments)
return new e(this.modelName,n)}},{key:"mergeCollection",value:function(e){return this.models=this.models.concat(e.models),this}},{key:"toString",value:function(){return"collection:".concat(this.modelName,"(").concat(this.models.map((function(e){return e.id})).join(","),")")}}]),e}(),Rn=function(){function e(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]
Za(this,e),this.models=a}return Qa(e,[{key:"length",get:function(){return this.models.length}},{key:"update",value:function(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
return Ma().apply(void 0,[this.models,"update"].concat(a)),this}},{key:"destroy",value:function(){return Ma()(this.models,"destroy"),this}},{key:"save",value:function(){return Ma()(this.models,"save"),this}},{key:"reload",value:function(){return Ma()(this.models,"reload"),this}},{key:"add",value:function(e){return this.models.push(e),this}},{key:"remove",value:function(e){var a=this.models.find((function(a){return ga()(a.attrs,e.attrs)}))
if(a){var n=this.models.indexOf(a)
this.models.splice(n,1)}return this}},{key:"includes",value:function(e){return this.models.some((function(a){return ga()(a.attrs,e.attrs)}))}},{key:"filter",value:function(a){return new e(this.models.filter(a))}},{key:"sort",value:function(a){return new e(this.models.concat().sort(a))}},{key:"slice",value:function(){var a,n=(a=this.models).slice.apply(a,arguments)
return new e(n)}},{key:"mergeCollection",value:function(e){return this.models=this.models.concat(e.models),this}},{key:"toString",value:function(){return"collection:".concat(this.modelName,"(").concat(this.models.map((function(e){return e.id})).join(","),")")}}]),e}(),zn={},On=function(e){$a(n,e)
var a=on(n)
function n(){return Za(this,n),a.apply(this,arguments)}return Qa(n,[{key:"identifier",get:function(){if("string"!=typeof zn[this.name]){var e="".concat(An(this._container.inflector.singularize(this.name)),"Ids")
zn[this.name]=e}return zn[this.name]}},{key:"type",get:function(){return"hasMany"}},{key:"getForeignKeyArray",value:function(){return[An(this.ownerModelName),this.getForeignKey()]}},{key:"getForeignKey",value:function(){if("string"!=typeof zn[this.name]){var e="".concat(this._container.inflector.singularize(An(this.name)),"Ids")
zn[this.name]=e}return zn[this.name]}},{key:"addMethodsToModelClass",value:function(e,a){var n=e.prototype,i=this,r=this.getForeignKey(),t=Ya({},a,this)
n.hasManyAssociations=Object.assign(n.hasManyAssociations,t),Object.keys(n.hasManyAssociations).forEach((function(e){var a=n.hasManyAssociations[e]
n.hasManyAssociationFks[a.getForeignKey()]=a})),this.schema.addDependentAssociation(this,this.modelName),n.associationKeys.add(a),n.associationIdKeys.add(r),Object.defineProperty(n,r,{get:function(){this._tempAssociations=this._tempAssociations||{}
var e=this._tempAssociations[a]
return e?i.isPolymorphic?e.models.map((function(e){return{type:e.modelName,id:e.id}})):e.models.map((function(e){return e.id})):this.attrs[r]||[]},set:function(e){var n
if(null===e)n=[]
else if(void 0!==e)if(En(Array.isArray(e),"You must pass an array in when setting ".concat(r," on ").concat(this)),i.isPolymorphic){En(e.every((function(e){return"object"===Wa(e)&&void 0!==Wa(e.type)&&void 0!==Wa(e.id)})),"You must pass in an array of polymorphic identifiers (objects of shape { type, id }) when setting ".concat(r," on ").concat(this))
var t=e.map((function(e){var a=e.type,n=e.id
return i.schema[i.schema.toCollectionName(a)].find(n)}))
n=new Rn(t)}else n=i.schema[i.schema.toCollectionName(i.modelName)].find(e)
this[a]=n}}),Object.defineProperty(n,a,{get:function(){this._tempAssociations=this._tempAssociations||{}
var e=null
if(this._tempAssociations[a])e=this._tempAssociations[a]
else{if(i.isPolymorphic)if(this[r]){var n=this[r].map((function(e){var a=e.type,n=e.id
return i.schema[i.schema.toCollectionName(a)].find(n)}))
e=new Rn(n)}else e=new Rn(i.modelName)
else e=this[r]?i.schema[i.schema.toCollectionName(i.modelName)].find(this[r]):new Kn(i.modelName)
this._tempAssociations[a]=e}return e},set:function(e){var n,r=this;(e instanceof Kn||e instanceof Rn)&&(e=e.models),e=e?_a()(e):[],this._tempAssociations=this._tempAssociations||{},n=i.isPolymorphic?new Rn(e):new Kn(i.modelName,e),this._tempAssociations[a]=n,e.forEach((function(e){if(e.hasInverseFor(i)){var a=e.inverseFor(i)
e.associate(r,a)}}))}}),n["new".concat(_n(An(this._container.inflector.singularize(i.name))))]=function(){var e,n
i.isPolymorphic?(e=arguments.length<=0?void 0:arguments[0],n=arguments.length<=1?void 0:arguments[1]):(e=i.modelName,n=arguments.length<=0?void 0:arguments[0])
var r=i.schema[i.schema.toCollectionName(e)].new(n),t=this[a].models
return t.push(r),this[a]=t,r},n["create".concat(_n(An(this._container.inflector.singularize(i.name))))]=function(){var e,n
i.isPolymorphic?(e=arguments.length<=0?void 0:arguments[0],n=arguments.length<=1?void 0:arguments[1]):(e=i.modelName,n=arguments.length<=0?void 0:arguments[0])
var r=i.schema[i.schema.toCollectionName(e)].create(n),t=this[a].models
return t.push(r),this[a]=t,this.save(),r.reload()}}},{key:"disassociateAllDependentsFromTarget",value:function(e){var a,n=this,i=this.ownerModelName
a=this.isPolymorphic?{type:e.modelName,id:e.id}:e.id,this.schema[this.schema.toCollectionName(i)].where((function(e){var i=e[n.getForeignKey()]
return i&&i.find((function(e){return"object"===Wa(e)?e.type===a.type&&e.id===a.id:e===a}))})).models.forEach((function(a){a.disassociate(e,n),a.save()}))}}]),n}(Bn),In={},Vn=function(){function e(){Za(this,e)}return Qa(e,[{key:"getModelClassFromPath",value:function(e){if(e){if("string"!=typeof In[e]){for(var a,n=e.split("/"),i=n.length-1;i>=0;i--){var r=n[i]
if(r.length&&":"!==r[0]){a=r
break}}In[e]=Mn(An(this._container.inflector.singularize(a)))}return In[e]}}},{key:"_getIdForRequest",value:function(e,a){var n
return e&&e.params&&e.params.id?n=e.params.id:a&&a.data&&a.data.id&&(n=a.data.id),n}},{key:"_getJsonApiDocForRequest",value:function(e,a){var n
return e&&e.requestBody&&(n=JSON.parse(e.requestBody)),this.serializerOrRegistry.normalize(n,a)}},{key:"_getAttrsForRequest",value:function(e,a){var n=this,i=this._getJsonApiDocForRequest(e,a),r=this._getIdForRequest(e,i),t={}
return En(i.data&&(i.data.attributes||i.data.type||i.data.relationships),"You're using a shorthand or #normalizedRequestAttrs, but your serializer's normalize function did not return a valid JSON:API document. Consult the docs for the normalize hook on the Serializer class."),i.data.attributes&&(t=Object.keys(i.data.attributes).reduce((function(e,a){return e[An(a)]=i.data.attributes[a],e}),{})),i.data.relationships&&Object.keys(i.data.relationships).forEach((function(r){var o,s=i.data.relationships[r],l=n.schema.modelClassFor(a).associationFor(An(r))
En(l,"You're passing the relationship '".concat(r,"' to the '").concat(a,"' model via a ").concat(e.method," to '").concat(e.url,"', but you did not define the '").concat(r,"' association on the '").concat(a,"' model.")),o=l.isPolymorphic?s.data:l instanceof On?s.data&&s.data.map((function(e){return e.id})):s.data&&s.data.id,t[l.identifier]=o}),{}),r&&(t.id=r),t}},{key:"_getAttrsForFormRequest",value:function(e){var a=e.requestBody
return En(a&&"string"==typeof a,"You're using the helper method #normalizedFormData, but the request body is empty or not a valid url encoded string."),a.split("&").reduce((function(e,a){var n=sn(a.split("="),2),i=n[0],r=n[1]
return e[i]=decodeURIComponent(r.replace(/\+/g," ")),e}),{})}}]),e}(),Gn=function(e){$a(n,e)
var a=on(n)
function n(e,i,r,t,o){var s
return Za(this,n),(s=a.call(this,o)).schema=e,s.serializerOrRegistry=i,s.userFunction=r,s.path=t,s}return Qa(n,[{key:"handle",value:function(e){return this.userFunction(this.schema,e)}},{key:"setRequest",value:function(e){this.request=e}},{key:"serialize",value:function(e,a){return(a?this.serializerOrRegistry.serializerFor(a,{explicit:!0}):this.serializerOrRegistry).serialize(e,this.request)}},{key:"normalizedRequestAttrs",value:function(){var e,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=this.path,i=this.request,r=this.request.requestHeaders,t={}
for(var o in r)t[o.toLowerCase()]=r[o]
return/x-www-form-urlencoded/.test(t["content-type"])?e=this._getAttrsForFormRequest(i):(a?En(Mn(a)===a,"You called normalizedRequestAttrs('".concat(a,"'), but normalizedRequestAttrs was intended to be used with the dasherized version of the model type. Please change this to normalizedRequestAttrs('").concat(Mn(a),"').")):a=this.getModelClassFromPath(n),En(this.schema.hasModelForModelName(a),"You're using a shorthand or the #normalizedRequestAttrs helper but the detected model of '".concat(a,"' does not exist. You might need to pass in the correct modelName as the first argument to #normalizedRequestAttrs.")),e=this._getAttrsForRequest(i,a)),e}}]),n}(Vn),Hn=function(){function e(a,n,i){Za(this,e),this.schema=a,this.serializerOrRegistry=n,this.object=i}return Qa(e,[{key:"handle",value:function(){return this.object}}]),e}(),Fn=function(e){$a(n,e)
var a=on(n)
function n(e,i,r,t){var o,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{}
Za(this,n),o=a.call(this),r=r||o.getModelClassFromPath(t),o.schema=e,o.serializerOrRegistry=i,o.shorthand=r,o.options=s
var l=Array.isArray(r)?"array":Wa(r)
if("string"===l){var u=o.schema[o.schema.toCollectionName(r)]
o.handle=function(e){return o.handleStringShorthand(e,u)}}else if("array"===l){var c=r.map((function(e){return o.schema[o.schema.toCollectionName(e)]}))
o.handle=function(e){return o.handleArrayShorthand(e,c)}}return o}return n}(Vn),Jn=function(e){$a(n,e)
var a=on(n)
function n(){return Za(this,n),a.apply(this,arguments)}return Qa(n,[{key:"handleStringShorthand",value:function(e,a){var n=An(this.shorthand)
En(a,"The route handler for ".concat(e.url," is trying to access the ").concat(n," model, but that model doesn't exist."))
var i=this._getIdForRequest(e)
if(i)return a.find(i)||new gn(404)
if(this.options.coalesce){var r=this.serializerOrRegistry.getCoalescedIds(e,n)
if(r)return a.find(r)}return a.all()}},{key:"handleArrayShorthand",value:function(e,a){var n=this.shorthand
return En(!this._getIdForRequest(e)||this._container.inflector.singularize(n[0])!==n[0],"It looks like you're using the \"Single record with\n      related records\" version of the array shorthand, in addition to opting\n      in to the model layer. This shorthand was made when there was no\n      serializer layer. Now that you're using models, please ensure your\n      relationships are defined, and create a serializer for the parent\n      model, adding the relationships there."),a.map((function(e){return e.all()}))}}]),n}(Fn),Un=function(e){$a(n,e)
var a=on(n)
function n(){return Za(this,n),a.apply(this,arguments)}return Qa(n,[{key:"handleStringShorthand",value:function(e,a){var n=An(this.shorthand)
En(a,"The route handler for ".concat(e.url," is trying to access the ").concat(n," model, but that model doesn't exist."))
var i=this._getAttrsForRequest(e,a.camelizedModelName)
return a.create(i)}}]),n}(Fn),Wn=function(e){$a(n,e)
var a=on(n)
function n(){return Za(this,n),a.apply(this,arguments)}return Qa(n,[{key:"handleStringShorthand",value:function(e,a){var n=An(this.shorthand)
En(a,"The route handler for ".concat(e.url," is trying to access the ").concat(n," model, but that model doesn't exist."))
var i=this._getIdForRequest(e),r=a.find(i)
if(!r)return new gn(404)
var t=this._getAttrsForRequest(e,a.camelizedModelName)
return r.update(t)}}]),n}(Fn),Zn=function(e){$a(n,e)
var a=on(n)
function n(){return Za(this,n),a.apply(this,arguments)}return Qa(n,[{key:"handleStringShorthand",value:function(e,a){var n=An(this.shorthand)
En(a,"The route handler for ".concat(e.url," is trying to access the ").concat(n," model, but that model doesn't exist."))
var i=this._getIdForRequest(e),r=a.find(i)
if(!r)return new gn(404)
r.destroy()}},{key:"handleArrayShorthand",value:function(e,a){var n=this,i=this._getIdForRequest(e),r=a[0].find(i)
a.slice(1).map((function(e){return n._container.inflector.pluralize(e.camelizedModelName)})).forEach((function(e){return r[e].destroy()})),r.destroy()}}]),n}(Fn),qn=function(e){$a(n,e)
var a=on(n)
function n(){return Za(this,n),a.apply(this,arguments)}return Qa(n,[{key:"handleStringShorthand",value:function(e,a){var n=An(this.shorthand)
En(a,"The route handler for ".concat(e.url," is trying to access the ").concat(n," model, but that model doesn't exist."))
var i=this._getIdForRequest(e)
if(i){var r=a.find(i)
return new gn(r?204:404)}if(this.options.coalesce&&e.queryParams&&e.queryParams.ids){var t=a.find(e.queryParams.ids)
return new gn(t?204:404)}return new gn(204)}}]),n}(Fn),Qn={get:200,put:204,post:201,delete:204},Yn=function(){function e(a){var n=a.schema,i=a.verb,r=a.rawHandler,t=a.customizedCode,o=a.options,s=a.path,l=a.serializerOrRegistry
Za(this,e),this.verb=i,this.customizedCode=t,this.serializerOrRegistry=l,this.handler=function(e){var a,n=e.verb,i=e.rawHandler,r=[e.schema,e.serializerOrRegistry,i,e.path,e.options],t=Wa(i)
return"function"===t?a=nn(Gn,r):"object"===t&&i?a=nn(Hn,r):"get"===n?a=nn(Jn,r):"post"===n?a=nn(Un,r):"put"===n||"patch"===n?a=nn(Wn,r):"delete"===n?a=nn(Zn,r):"head"===n&&(a=nn(qn,r)),a}({verb:i,schema:n,path:s,serializerOrRegistry:l,rawHandler:r,options:o})}return Qa(e,[{key:"handle",value:function(e){var a=this
return this._getMirageResponseForRequest(e).then((function(n){return a.serialize(n,e)})).then((function(e){return e.toRackResponse()}))}},{key:"_getMirageResponseForRequest",value:function(e){var a
try{this.handler instanceof Gn&&this.handler.setRequest(e),a=this.handler.handle(e)}catch(i){if(i instanceof Nn)a=new gn(500,{},i)
else{var n=i.message||i
a=new gn(500,{},{message:n,stack:"Mirage: Your ".concat(e.method," handler for the url ").concat(e.url," threw an error:\n\n").concat(i.stack||i)})}}return this._toMirageResponse(a)}},{key:"_toMirageResponse",value:function(e){var a,n=this
return new Promise((function(i,r){Promise.resolve(e).then((function(r){if(r instanceof gn)a=e
else{var t=n._getCodeForResponse(r)
a=new gn(t,{},r)}i(a)})).catch(r)}))}},{key:"_getCodeForResponse",value:function(e){var a
return this.customizedCode?a=this.customizedCode:204===(a=Qn[this.verb])&&void 0!==e&&""!==e&&(a=200),a}},{key:"serialize",value:function(e,a){return e.data=this.serializerOrRegistry.serialize(e.data,a),e}}]),e}()
function $n(e,a){var n=function(a){$a(i,a)
var n=on(i)
function i(){var a,r
Za(this,i)
for(var t=arguments.length,o=new Array(t),s=0;s<t;s++)o[s]=arguments[s]
return a=n.call.apply(n,[this].concat(o)),e&&ja()(e,"constructor")&&(r=e.constructor).call.apply(r,[rn(a)].concat(o)),a}return i}(this)
return Object.assign(n,this,a),e&&Object.assign(n.prototype,e),n}var Xn=function(){function e(a,n,i,r){var t=this
return Za(this,e),En(a,"A model requires a schema"),En(n,"A model requires a modelName"),this._schema=a,this.modelName=n,this.fks=r||[],this.attrs={},i=i||{},this.fks.forEach((function(e){t.attrs[e]=void 0!==i[e]?i[e]:null})),Object.keys(i).forEach((function(e){var a=i[e]
t._validateAttr(e,a),t._setupAttr(e,a),t._setupRelationship(e,a)})),this}return Qa(e,[{key:"save",value:function(){var e=this._schema.toInternalCollectionName(this.modelName)
return this.isNew()?(this.attrs=this._schema.db[e].insert(this.attrs),this._definePlainAttribute("id")):(this._schema.isSaving[this.toString()]=!0,this._schema.db[e].update(this.attrs.id,this.attrs)),this._saveAssociations(),this._schema.isSaving[this.toString()]=!1,this}},{key:"update",value:function(e,a){var n
return null==e||("object"===Wa(e)?n=e:(n={})[e]=a,Object.keys(n).forEach((function(e){this.associationKeys.has(e)||this.associationIdKeys.has(e)||this._definePlainAttribute(e),this[e]=n[e]}),this),this.save()),this}},{key:"destroy",value:function(){if(this.isSaved()){this._disassociateFromDependents()
var e=this._schema.toInternalCollectionName(this.modelName)
this._schema.db[e].remove(this.attrs.id)}}},{key:"isNew",value:function(){var e=!1
if(void 0!==this.attrs.id&&null!==this.attrs.id){var a=this._schema.toInternalCollectionName(this.modelName)
this._schema.db[a].find(this.attrs.id)&&(e=!0)}return!e}},{key:"isSaved",value:function(){return!this.isNew()}},{key:"reload",value:function(){if(this.id){var e=this._schema.toInternalCollectionName(this.modelName),a=this._schema.db[e].find(this.id)
Object.keys(a).filter((function(e){return"id"!==e})).forEach((function(e){this.attrs[e]=a[e]}),this)}return this._tempAssociations={},this}},{key:"toJSON",value:function(){return function(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?Ua(Object(n),!0).forEach((function(a){Ya(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ua(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}({},this.attrs)}},{key:"associations",get:function(){return this._schema.associationsFor(this.modelName)}},{key:"associationFor",value:function(e){return this.associations[e]}},{key:"inverseFor",value:function(e){return this._explicitInverseFor(e)||this._implicitInverseFor(e)}},{key:"_explicitInverseFor",value:function(e){this._checkForMultipleExplicitInverses(e)
var a=this._schema.associationsFor(this.modelName),n=e.opts.inverse,i=n?a[n]:null,r=i&&i.isPolymorphic,t=i&&i.modelName===e.ownerModelName
return i&&i.opts.inverse&&i.opts.inverse!==e.name&&En(!1,"You specified an inverse of ".concat(n," for ").concat(e.name,", but it does not match ").concat(i.modelName," ").concat(i.name,"'s inverse")),r||t?i:null}},{key:"_checkForMultipleExplicitInverses",value:function(e){var a=this._schema.associationsFor(this.modelName)
En(Object.keys(a).filter((function(n){var i=a[n],r=e.ownerModelName===i.modelName,t=e.name===i.opts.inverse
return r&&t})).length<=1,"The ".concat(this.modelName," model has defined multiple explicit inverse associations for the ").concat(e.ownerModelName,".").concat(e.name," association."))}},{key:"_implicitInverseFor",value:function(e){var a=this,n=this._schema.associationsFor(this.modelName),i=e.ownerModelName
return Na()(n).filter((function(e){return e.modelName===i})).reduce((function(n,i){var r=i.opts.inverse,t=void 0===r,o=r===e.name
return(t||o)&&(En(!n,"The ".concat(a.modelName," model has multiple possible inverse associations for the ").concat(e.ownerModelName,".").concat(e.name," association.")),n=i),n}),null)}},{key:"hasInverseFor",value:function(e){return!!this.inverseFor(e)}},{key:"alreadyAssociatedWith",value:function(a,n){var i=this[n.name]
if(i&&a)return i instanceof e?i.isSaved()&&a.isSaved()?i.toString()===a.toString():i===a:i.includes(a)}},{key:"associate",value:function(e,a){if(!this.alreadyAssociatedWith(e,a)){var n=a.name
a instanceof On?this[n].includes(e)||this[n].add(e):this[n]=e}}},{key:"disassociate",value:function(e,a){var n=a.getForeignKey()
if(a instanceof On){var i
if(a.isPolymorphic){var r=this[n].find((function(a){var n=a.type,i=a.id
return n===e.modelName&&i===e.id}))
i=r&&this[n].indexOf(r)}else i=this[n].map((function(e){return e.toString()})).indexOf(e.id.toString())
i>-1&&this.attrs[n].splice(i,1)}else this.attrs[n]=null}},{key:"isSaving",get:function(){return this._schema.isSaving[this.toString()]}},{key:"_setupAttr",value:function(e,a){this.associationKeys.has(e)||this.associationIdKeys.has(e)||(this.attrs[e]=a,this._definePlainAttribute(e))}},{key:"_definePlainAttribute",value:function(e){var a=Object.getOwnPropertyDescriptor(this,e)
a&&a.get||(Object.prototype.hasOwnProperty.call(this.attrs,e)||(this.attrs[e]=null),Object.defineProperty(this,e,{get:function(){return this.attrs[e]},set:function(a){this.attrs[e]=a}}))}},{key:"_setupRelationship",value:function(e,a){var n=this.associationIdKeys.has(e)||this.fks.includes(e),i=this.associationKeys.has(e)
n&&(null!=a&&this._validateForeignKeyExistsInDatabase(e,a),this.attrs[e]=a),i&&(this[e]=a)}},{key:"_validateAttr",value:function(a,n){if(this.associationKeys.has(a)){var i=this.associationFor(a),r=null===n
if(i instanceof On){var t=n instanceof Kn||n instanceof Rn,o=Array.isArray(n)&&n.every((function(a){return a instanceof e}))
En(t||o||r,"You're trying to create a ".concat(this.modelName,' model and you passed in "').concat(n,'" under the ').concat(a," key, but that key is a HasMany relationship. You must pass in a Collection, PolymorphicCollection, array of Models, or null."))}else i instanceof Ln&&En(n instanceof e||r,"You're trying to create a ".concat(this.modelName,' model and you passed in "').concat(n,'" under the ').concat(a," key, but that key is a BelongsTo relationship. You must pass in a Model or null."))}this.associationIdKeys.has(a)&&a.endsWith("Ids")&&En(Array.isArray(n)||null===n,"You're trying to create a ".concat(this.modelName,' model and you passed in "').concat(n,'" under the ').concat(a," key, but that key is a foreign key for a HasMany relationship. You must pass in an array of ids or null."))
var s=n instanceof e||n instanceof Kn||n instanceof Rn,l=Array.isArray(n)&&n.length&&n.every((function(a){return a instanceof e}))
if(s||l){var u=n
En(this.associationKeys.has(a),"You're trying to create a ".concat(this.modelName," model and you passed in a ").concat(u.toString()," under the ").concat(a," key, but you haven't defined that key as an association on your model."))}}},{key:"_validateForeignKeyExistsInDatabase",value:function(e,a){var n=this
if(Array.isArray(a)){var i,r=this.hasManyAssociationFks[e]
r.isPolymorphic?(i=a.map((function(e){var a=e.type,i=e.id
return n._schema.db[n._schema.toInternalCollectionName(a)].find(i)})),i=_a()(i)):i=this._schema.db[this._schema.toInternalCollectionName(r.modelName)].find(a)
var t=r.isPolymorphic?a.map((function(e){return"".concat(e.type,":").concat(e.id)})).join(","):a
En(i.length===a.length,"You're instantiating a ".concat(this.modelName," that has a ").concat(e," of ").concat(t,", but some of those records don't exist in the database."))}else{var o,s=this.belongsToAssociationFks[e]
o=s.isPolymorphic?this._schema.db[this._schema.toInternalCollectionName(a.type)].find(a.id):this._schema.db[this._schema.toInternalCollectionName(s.modelName)].find(a)
var l=s.isPolymorphic?"".concat(a.type,":").concat(a.id):a
En(o,"You're instantiating a ".concat(this.modelName," that has a ").concat(e," of ").concat(l,", but that record doesn't exist in the database."))}}},{key:"_saveAssociations",value:function(){this._saveBelongsToAssociations(),this._saveHasManyAssociations()}},{key:"_saveBelongsToAssociations",value:function(){var e=this
Na()(this.belongsToAssociations).forEach((function(a){e._disassociateFromOldInverses(a),e._saveNewAssociates(a),e._associateWithNewInverses(a)}))}},{key:"_saveHasManyAssociations",value:function(){var e=this
Na()(this.hasManyAssociations).forEach((function(a){e._disassociateFromOldInverses(a),e._saveNewAssociates(a),e._associateWithNewInverses(a)}))}},{key:"_disassociateFromOldInverses",value:function(e){e instanceof On?this._disassociateFromHasManyInverses(e):e instanceof Ln&&this._disassociateFromBelongsToInverse(e)}},{key:"_disassociateFromHasManyInverses",value:function(e){var a=this,n=e.getForeignKey(),i=this._tempAssociations&&this._tempAssociations[e.name],r=this.attrs[n]
i&&r&&(e.isPolymorphic?r.map((function(e){var n=e.type,i=e.id
return a._schema[a._schema.toCollectionName(n)].find(i)})):this._schema[this._schema.toCollectionName(e.modelName)].find(r||[]).models).filter((function(a){return!a.isSaving&&!i.includes(a)&&a.hasInverseFor(e)})).forEach((function(n){var i=n.inverseFor(e)
n.disassociate(a,i),n.save()}))}},{key:"_disassociateFromBelongsToInverse",value:function(e){var a,n=e.getForeignKey(),i=this._tempAssociations&&this._tempAssociations[e.name],r=this.attrs[n]
if(void 0!==i&&r&&(a=e.isPolymorphic?this._schema[this._schema.toCollectionName(r.type)].find(r.id):this._schema[this._schema.toCollectionName(e.modelName)].find(r)).hasInverseFor(e)){var t=a.inverseFor(e)
a.disassociate(this,t),a._updateInDb(a.attrs)}}},{key:"_disassociateFromDependents",value:function(){var e=this
this._schema.dependentAssociationsFor(this.modelName).forEach((function(a){a.disassociateAllDependentsFromTarget(e)}))}},{key:"_saveNewAssociates",value:function(e){var a=e.getForeignKey(),n=this._tempAssociations&&this._tempAssociations[e.name]
if(void 0!==n){if(this.__isSavingNewChildren=!0,delete this._tempAssociations[e.name],n instanceof Kn)n.models.filter((function(e){return!e.isSaving})).forEach((function(e){e.save()})),this._updateInDb(Ya({},a,n.models.map((function(e){return e.id}))))
else if(n instanceof Rn)n.models.filter((function(e){return!e.isSaving})).forEach((function(e){e.save()})),this._updateInDb(Ya({},a,n.models.map((function(e){return{type:e.modelName,id:e.id}}))))
else if(null===n)this._updateInDb(Ya({},a,null))
else if(this.equals(n))this._updateInDb(Ya({},a,this.id))
else if(!n.isSaving){var i
n.save(),this._syncTempAssociations(n),i=e.isPolymorphic?{id:n.id,type:n.modelName}:n.id,this._updateInDb(Ya({},a,i))}this.__isSavingNewChildren=!1}}},{key:"_associateWithNewInverses",value:function(a){var n=this
if(!this.__isSavingNewChildren){var i=this[a.name]
i instanceof e?this._associateModelWithInverse(i,a):(i instanceof Kn||i instanceof Rn)&&i.models.forEach((function(e){n._associateModelWithInverse(e,a)})),delete this._tempAssociations[a.name]}}},{key:"_associateModelWithInverse",value:function(e,a){var n=this
if(e.hasInverseFor(a)){var i=e.inverseFor(a),r=i.getForeignKey(),t=this.id
if(i instanceof Ln){var o
o=i.isPolymorphic?{type:this.modelName,id:t}:t,this._schema.db[this._schema.toInternalCollectionName(e.modelName)].update(e.id,Ya({},r,o))}else{var s,l,u=this._schema.db[this._schema.toInternalCollectionName(e.modelName)],c=u.find(e.id)[i.getForeignKey()]||[],d=Object.assign([],c)
i.isPolymorphic?(s={type:this.modelName,id:t},l=d.some((function(e){return e.type==n.modelName&&e.id==t}))):(s=t,l=d.includes(t)),l||d.push(s),u.update(e.id,Ya({},r,d))}}}},{key:"_updateInDb",value:function(e){this.attrs=this._schema.db[this._schema.toInternalCollectionName(this.modelName)].update(this.attrs.id,e)}},{key:"_syncTempAssociations",value:function(e){var a=this
Object.keys(this._tempAssociations).forEach((function(n){a._tempAssociations[n]&&a._tempAssociations[n].toString()===e.toString()&&(a._tempAssociations[n]=e)}))}},{key:"toString",value:function(){var e=this.id?"(".concat(this.id,")"):""
return"model:".concat(this.modelName).concat(e)}},{key:"equals",value:function(e){return this.toString()===e.toString()}}]),e}()
Xn.extend=$n,Xn.findBelongsToAssociation=function(e){return this.prototype.belongsToAssociations[e]}
var ei=function(){function e(a,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}
Za(this,e),this.registry=a,this.type=n,this.request=i,this.attrs=this.attrs||void 0,this.include=this.include||[],this.root=this.root||void 0,this.embed=this.embed||void 0,this.serializeIds=this.serializeIds||void 0}return Qa(e,[{key:"serialize",value:function(e){return this.primaryResource=e,this.buildPayload(e)}},{key:"normalize",value:function(e){return e}},{key:"buildPayload",value:function(e,a,n,i){if(!e&&Pa()(a))return i
if(e){var r=sn(this.getHashForPrimaryResource(e),2),t=r[0],o=r[1],s=this.isCollection(e)?e.models:[e]
return this.buildPayload(void 0,o,s,t)}var l=a.shift(),u=sn(this.getHashForIncludedResource(l),2),c=u[0],d=u[1].filter((function(e){return!n.map((function(e){return e.toString()})).includes(e.toString())})).concat(a),h=(this.isCollection(l)?l.models:[l]).concat(n),p=this.mergePayloads(i,c)
return this.buildPayload(void 0,d,h,p)}},{key:"getHashForPrimaryResource",value:function(e){var a,n=sn(this.getHashForResource(e),2),i=n[0],r=n[1]
return this.root?(En(!(e instanceof Rn),"The base Serializer class cannot serialize a top-level PolymorphicCollection when root is true, since PolymorphicCollections have no type."),a=Ya({},this.serializerFor(e.modelName).keyForResource(e),i)):a=i,[a,r]}},{key:"getHashForIncludedResource",value:function(e){var a,n
if(e instanceof Rn)a={},n=e.models
else{var i=this.serializerFor(e.modelName),r=sn(i.getHashForResource(e),2),t=r[0],o=r[1],s=i.keyForRelationship(e.modelName)
a=Array.isArray(t)?Ya({},s,t):Ya({},s,[t]),n=o}return[a,n]}},{key:"getHashForResource",value:function(e){var a,n,i=this,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=arguments.length>3&&void 0!==arguments[3]&&arguments[3]
if(o||(n=this),o&&e.modelName&&(n=this.serializerFor(e.modelName)),a=this.isModel(e)?n._hashForModel(e,r,t):e.models.map((function(e){var a=n
return a||(a=i.serializerFor(e.modelName)),a._hashForModel(e,r,t)})),this.embed)return[a,[]]
var s=Ca()(_a()(h()(n.getKeysForIncluded().map((function(a){return i.isCollection(e)?e.models.map((function(e){return e[a]})):e[a]})))),(function(e){return e.toString()}))
return[a,s]}},{key:"mergePayloads",value:function(e,a){var n,i=sn(Object.keys(a),1)[0]
return e[i]?(n=e)[i]=e[i].concat(a[i]):n=Object.assign(e,a),n}},{key:"keyForResource",value:function(e){var a=e.modelName
return this.isModel(e)?this.keyForModel(a):this.keyForCollection(a)}},{key:"keyForModel",value:function(e){return An(e)}},{key:"keyForCollection",value:function(e){return this._container.inflector.pluralize(this.keyForModel(e))}},{key:"_hashForModel",value:function(e,a){var n=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=this._attrsForModel(e)
if(a&&e.fks.forEach((function(e){delete r[e]})),this.embed){var t=Object.assign({},i)
return t[e.modelName]=t[e.modelName]||{},t[e.modelName][e.id]=!0,this.getKeysForIncluded().forEach((function(a){var i=e[a]
if(i&&!Da()(t,"".concat(i.modelName,".").concat(i.id))){var o=sn(n.getHashForResource(i,!0,t,!0),1)[0],s=n.keyForEmbeddedRelationship(a)
if(r[s]=o,n.isModel(i)){var l="".concat(An(a),"Id")
delete r[l]}}})),r}return this._maybeAddAssociationIds(e,r)}},{key:"_attrsForModel",value:function(e){var a={}
return a=this.attrs?this.attrs.reduce((function(a,n){return a[n]=e[n],a}),{}):Object.assign(a,e.attrs),e.fks.forEach((function(e){return delete a[e]})),this._formatAttributeKeys(a)}},{key:"_maybeAddAssociationIds",value:function(e,a){var n=this,i=Object.assign({},a)
return"always"===this.serializeIds?e.associationKeys.forEach((function(a){var r=e[a],t=e.associationFor(a)
if(n.isCollection(r)){var o=n.keyForRelationshipIds(a)
i[o]=e["".concat(n._container.inflector.singularize(a),"Ids")]}else if(n.isModel(r)&&t.isPolymorphic){var s=n.keyForPolymorphicForeignKeyType(a),l=n.keyForPolymorphicForeignKeyId(a)
i[s]=e["".concat(a,"Id")].type,i[l]=e["".concat(a,"Id")].id}else if(r){var u=n.keyForForeignKey(a)
i[u]=e["".concat(a,"Id")]}})):"included"===this.serializeIds&&this.getKeysForIncluded().forEach((function(a){var r=e[a],t=e.associationFor(a)
if(n.isCollection(r)){var o=n.keyForRelationshipIds(a)
i[o]=e["".concat(n._container.inflector.singularize(a),"Ids")]}else if(n.isModel(r)&&t.isPolymorphic){var s=n.keyForPolymorphicForeignKeyType(a),l=n.keyForPolymorphicForeignKeyId(a)
i[s]=e["".concat(a,"Id")].type,i[l]=e["".concat(a,"Id")].id}else if(n.isModel(r)){var u=n.keyForForeignKey(a)
i[u]=e["".concat(a,"Id")]}})),i}},{key:"keyForAttribute",value:function(e){return e}},{key:"keyForRelationship",value:function(e){return An(this._container.inflector.pluralize(e))}},{key:"keyForEmbeddedRelationship",value:function(e){return An(e)}},{key:"keyForRelationshipIds",value:function(e){return"".concat(this._container.inflector.singularize(An(e)),"Ids")}},{key:"keyForForeignKey",value:function(e){return"".concat(An(e),"Id")}},{key:"keyForPolymorphicForeignKeyId",value:function(e){return"".concat(An(e),"Id")}},{key:"keyForPolymorphicForeignKeyType",value:function(e){return"".concat(An(e),"Type")}},{key:"isModel",value:function(e){return e instanceof Xn}},{key:"isCollection",value:function(e){return e instanceof Kn||e instanceof Rn}},{key:"isModelOrCollection",value:function(e){return this.isModel(e)||this.isCollection(e)}},{key:"serializerFor",value:function(e){return this.registry.serializerFor(e)}},{key:"getKeysForIncluded",value:function(){return o()(this.include)?this.include(this.request,this.primaryResource):this.include}},{key:"schema",get:function(){return this.registry.schema}},{key:"_formatAttributeKeys",value:function(e){var a={}
for(var n in e)a[this.keyForAttribute(n)]=e[n]
return a}},{key:"getCoalescedIds",value:function(){}}]),e}()
ei.prototype.include=[],ei.prototype.root=!0,ei.prototype.embed=!1,ei.prototype.serializeIds="included",ei.extend=$n
var ai=function(e){$a(n,e)
var a=on(n)
function n(){var e
return Za(this,n),(e=a.apply(this,arguments)).alwaysIncludeLinkageData=e.alwaysIncludeLinkageData||void 0,e}return Qa(n,[{key:"keyForModel",value:function(e){return Mn(e)}},{key:"keyForCollection",value:function(e){return Mn(e)}},{key:"keyForAttribute",value:function(e){return Mn(e)}},{key:"keyForRelationship",value:function(e){return Mn(e)}},{key:"links",value:function(){}},{key:"getHashForPrimaryResource",value:function(e){return this._createRequestedIncludesGraph(e),[{data:this.getHashForResource(e)},this.getAddToIncludesForResource(e)]}},{key:"getHashForIncludedResource",value:function(e){var a=this.serializerFor(e.modelName).getHashForResource(e),n={included:this.isModel(e)?[a]:a},i=[]
return this.hasQueryParamIncludes()||(i=this.getAddToIncludesForResource(e)),[n,i]}},{key:"getHashForResource",value:function(e){var a=this
return this.isModel(e)?this.getResourceObjectForModel(e):e.models.map((function(e){return a.getResourceObjectForModel(e)}))}},{key:"getAddToIncludesForResource",value:function(e){var a
return a=this.hasQueryParamIncludes()?this.request.queryParams.include.split(","):this.serializerFor(e.modelName).getKeysForIncluded(),this.getAddToIncludesForResourceAndPaths(e,a)}},{key:"getAddToIncludesForResourceAndPaths",value:function(e,a){var n=this,i=[]
return a.forEach((function(a){var r=a.split("."),t=n.getIncludesForResourceAndPath.apply(n,[e].concat(ln(r)))
i.push(t)})),Ca()(_a()(h()(i)),(function(e){return e.toString()}))}},{key:"getIncludesForResourceAndPath",value:function(e){for(var a=this,n=arguments.length,i=new Array(n>1?n-1:0),r=1;r<n;r++)i[r-1]=arguments[r]
var t=An(i.shift()),o=[],s=[]
if(this.isModel(e)){var l=e[t]
this.isModel(l)?s=[l]:this.isCollection(l)&&(s=l.models)}else e.models.forEach((function(e){var n=e[t]
a.isModel(n)?s.push(n):a.isCollection(n)&&(s=s.concat(n.models))}))
return o=o.concat(s),i.length&&s.forEach((function(e){o=o.concat(a.getIncludesForResourceAndPath.apply(a,[e].concat(i)))})),o}},{key:"getResourceObjectForModel",value:function(e){var a=this._attrsForModel(e,!0)
delete a.id
var n={type:this.typeKeyForModel(e),id:e.id,attributes:a}
return this._maybeAddRelationshipsToResourceObjectForModel(n,e)}},{key:"_maybeAddRelationshipsToResourceObjectForModel",value:function(e,a){var n=this,i={}
return a.associationKeys.forEach((function(e){var r=a[e],t=n.keyForRelationship(e),o={}
if(n.hasLinksForRelationship(a,e)){var s=n.serializerFor(a.modelName).links(a)
o.links=s[e]}if(n.alwaysIncludeLinkageData||n.shouldIncludeLinkageData(e,a)||n._relationshipIsIncludedForModel(e,a)){var l=null
n.isModel(r)?l={type:n.typeKeyForModel(r),id:r.id}:n.isCollection(r)&&(l=r.models.map((function(e){return{type:n.typeKeyForModel(e),id:e.id}}))),o.data=l}Pa()(o)||(i[t]=o)})),Pa()(i)||(e.relationships=i),e}},{key:"hasLinksForRelationship",value:function(e,a){var n=this.serializerFor(e.modelName),i=n.links&&n.links(e)
return i&&null!=i[a]}},{key:"_relationshipIsIncludedForModel",value:function(e,a){if(this.hasQueryParamIncludes()){var n,i=this.request._includesGraph,r=this._graphKeyForModel(a)
return i.data[r]?n=i.data[r]:i.included[this._container.inflector.pluralize(a.modelName)]&&(n=i.included[this._container.inflector.pluralize(a.modelName)][r]),n&&n.relationships&&Object.prototype.hasOwnProperty.call(n.relationships,Mn(e))}return this.getKeysForIncluded().includes(e)}},{key:"_createRequestedIncludesGraph",value:function(e){var a=this,n={data:{}}
if(this.isModel(e)){var i=this._graphKeyForModel(e)
n.data[i]={},this._addPrimaryModelToRequestedIncludesGraph(n,e)}else this.isCollection(e)&&e.models.forEach((function(e){var i=a._graphKeyForModel(e)
n.data[i]={},a._addPrimaryModelToRequestedIncludesGraph(n,e)}))
this.request._includesGraph=n}},{key:"_addPrimaryModelToRequestedIncludesGraph",value:function(e,a){var n=this
if(this.hasQueryParamIncludes()){var i=this._graphKeyForModel(a)
this.getQueryParamIncludes().split(",").filter((function(e){return!!e.trim()})).forEach((function(r){e.data[i].relationships=e.data[i].relationships||{}
var t=r.split(".").map(Mn),o=t[0],s=o,l=An(o)
En(a.associationKeys.has(l),'You tried to include "'.concat(o,'" with ').concat(a,' but no association named "').concat(l,'" is defined on the model.'))
var u,c=a[l]
u=n.isModel(c)?n._graphKeyForModel(c):n.isCollection(c)?c.models.map(n._graphKeyForModel):null,e.data[i].relationships[s]=u,c&&n._addResourceToRequestedIncludesGraph(e,c,t.slice(1))}))}}},{key:"_addResourceToRequestedIncludesGraph",value:function(e,a,n){var i=this
e.included=e.included||{},(this.isCollection(a)?a.models:[a]).forEach((function(a){var r=i._container.inflector.pluralize(a.modelName)
e.included[r]=e.included[r]||{},i._addModelToRequestedIncludesGraph(e,a,n)}))}},{key:"_addModelToRequestedIncludesGraph",value:function(e,a,n){var i=this._container.inflector.pluralize(a.modelName),r=this._graphKeyForModel(a)
e.included[i][r]=e.included[i][r]||{},n.length&&this._addResourceRelationshipsToRequestedIncludesGraph(e,i,r,a,n)}},{key:"_addResourceRelationshipsToRequestedIncludesGraph",value:function(e,a,n,i,r){e.included[a][n].relationships=e.included[a][n].relationships||{}
var t,o=r[0],s=i[An(o)]
this.isModel(s)?t=this._graphKeyForModel(s):this.isCollection(s)&&(t=s.models.map(this._graphKeyForModel)),e.included[a][n].relationships[o]=t,s&&this._addResourceToRequestedIncludesGraph(e,s,r.slice(1))}},{key:"_graphKeyForModel",value:function(e){return"".concat(e.modelName,":").concat(e.id)}},{key:"getQueryParamIncludes",value:function(){return Da()(this,"request.queryParams.include")}},{key:"hasQueryParamIncludes",value:function(){return!!this.getQueryParamIncludes()}},{key:"typeKeyForModel",value:function(e){return Mn(this._container.inflector.pluralize(e.modelName))}},{key:"getCoalescedIds",value:function(e){var a=e.queryParams&&e.queryParams["filter[id]"]
return"string"==typeof a?a.split(","):a}},{key:"shouldIncludeLinkageData",value:function(e,a){return!1}}]),n}(ei)
ai.prototype.alwaysIncludeLinkageData=!1
var ni=function(){function e(a){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}
Za(this,e),this.schema=a,this._serializerMap=n}return Qa(e,[{key:"normalize",value:function(e,a){return this.serializerFor(a).normalize(e)}},{key:"serialize",value:function(e,a){var n=this
return this.request=a,this._isModelOrCollection(e)?this.serializerFor(e.modelName).serialize(e,a):Array.isArray(e)&&e.some(this._isCollection)?e.reduce((function(e,i){var r=n.serializerFor(i.modelName)
return r.embed?e[n._container.inflector.pluralize(i.modelName)]=r.serialize(i,a):e=Object.assign(e,r.serialize(i,a)),e}),{}):e}},{key:"serializerFor",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=a.explicit,i=void 0!==n&&n,r=e&&this._serializerMap&&this._serializerMap[An(e)]
return i?En(!!r,"You passed in ".concat(e," as an explicit serializer type but that serializer doesn't exist.")):En(!(r=r||this._serializerMap.application||ei)||r.prototype.embed||r.prototype.root||new r instanceof ai,"You cannot have a serializer that sideloads (embed: false) and disables the root (root: false)."),new r(this,e,this.request)}},{key:"_isModel",value:function(e){return e instanceof Xn}},{key:"_isCollection",value:function(e){return e instanceof Kn||e instanceof Rn}},{key:"_isModelOrCollection",value:function(e){return this._isModel(e)||this._isCollection(e)}},{key:"registerSerializers",value:function(e){var a=this._serializerMap||{}
this._serializerMap=Object.assign(a,e)}},{key:"getCoalescedIds",value:function(e,a){return this.serializerFor(a).getCoalescedIds(e)}}]),e}(),ii={},ri={},ti={},oi=function(){function e(a){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}
Za(this,e),En(a,"A schema requires a db"),this.db=a,this._registry={},this._dependentAssociations={polymorphic:[]},this.registerModels(n),this.isSaving={}}return Qa(e,[{key:"registerModels",value:function(){var e=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}
Ra()(a,(function(n,i){e.registerModel(i,a[i])}))}},{key:"registerModel",value:function(e,a){var n=this,i=An(e),r=Mn(i)
a=a.extend(),this._registry[i]=this._registry[i]||{class:null,foreignKeys:[]},this._registry[i].class=a,a.prototype._schema=this,a.prototype.modelName=r,a.prototype.hasManyAssociations={},a.prototype.hasManyAssociationFks={},a.prototype.belongsToAssociations={},a.prototype.belongsToAssociationFks={},a.prototype.associationKeys=new Set,a.prototype.associationIdKeys=new Set,a.prototype.dependentAssociations=[]
var t={}
for(var o in a.prototype)if(a.prototype[o]instanceof Bn){var s=a.prototype[o]
s.name=o,s.modelName=s.modelName||this.toModelName(o),s.ownerModelName=r,s.setSchema(this)
var l=sn(s.getForeignKeyArray(),2),u=l[0],c=l[1]
t[u]=t[u]||[],En(!t[u].includes(c),"Your '".concat(e,"' model definition has multiple possible inverse relationships of type '").concat(u,"'. Please use explicit inverses.")),t[u].push(c),this._addForeignKeyToRegistry(u,c),s.addMethodsToModelClass(a,o)}var d=this.toCollectionName(r)
return this.db[d]||this.db.createCollection(d),this[d]={camelizedModelName:i,new:function(e){return n.new(i,e)},create:function(e){return n.create(i,e)},all:function(e){return n.all(i,e)},find:function(e){return n.find(i,e)},findBy:function(e){return n.findBy(i,e)},findOrCreateBy:function(e){return n.findOrCreateBy(i,e)},where:function(e){return n.where(i,e)},none:function(e){return n.none(i,e)},first:function(e){return n.first(i,e)}},this}},{key:"modelFor",value:function(e){return this._registry[e]}},{key:"new",value:function(e,a){return this._instantiateModel(Mn(e),a)}},{key:"create",value:function(e,a){return this.new(e,a).save()}},{key:"all",value:function(e){var a=this.collectionForType(e)
return this._hydrate(a,Mn(e))}},{key:"none",value:function(e){return this._hydrate([],Mn(e))}},{key:"find",value:function(e,a){var n=this.collectionForType(e).find(a)
return Array.isArray(a)&&En(n.length===a.length,"Couldn't find all ".concat(this._container.inflector.pluralize(e)," with ids: (").concat(a.join(","),") (found ").concat(n.length," results, but was looking for ").concat(a.length,")")),this._hydrate(n,Mn(e))}},{key:"findBy",value:function(e,a){var n=this.collectionForType(e).findBy(a)
return this._hydrate(n,Mn(e))}},{key:"findOrCreateBy",value:function(e,a){var n=this.collectionForType(e).findBy(a)
return n?this._hydrate(n,Mn(e)):this.create(e,a)}},{key:"where",value:function(e,a){var n=this.collectionForType(e).where(a)
return this._hydrate(n,Mn(e))}},{key:"first",value:function(e){var a=this.collectionForType(e)[0]
return this._hydrate(a,Mn(e))}},{key:"modelClassFor",value:function(e){var a=this._registry[An(e)]
return En(a,"Model not registered: ".concat(e)),a.class.prototype}},{key:"addDependentAssociation",value:function(e,a){e.isPolymorphic?this._dependentAssociations.polymorphic.push(e):(this._dependentAssociations[a]=this._dependentAssociations[a]||[],this._dependentAssociations[a].push(e))}},{key:"dependentAssociationsFor",value:function(e){var a=this._dependentAssociations[e]||[],n=this._dependentAssociations.polymorphic||[]
return a.concat(n)}},{key:"associationsFor",value:function(e){var a=this.modelClassFor(e)
return Object.assign({},a.belongsToAssociations,a.hasManyAssociations)}},{key:"hasModelForModelName",value:function(e){return this.modelFor(An(e))}},{key:"collectionForType",value:function(e){var a=this.toCollectionName(e)
return En(this.db[a],"You're trying to find model(s) of type ".concat(e," but this collection doesn't exist in the database.")),this.db[a]}},{key:"toCollectionName",value:function(e){if("string"!=typeof ii[e]){var a=Mn(e),n=An(this._container.inflector.pluralize(a))
ii[e]=n}return ii[e]}},{key:"toInternalCollectionName",value:function(e){if("string"!=typeof ri[e]){var a="_".concat(this.toCollectionName(e))
ri[e]=a}return ri[e]}},{key:"toModelName",value:function(e){if("string"!=typeof ti[e]){var a=Mn(e),n=this._container.inflector.singularize(a)
ti[e]=n}return ti[e]}},{key:"_addForeignKeyToRegistry",value:function(e,a){this._registry[e]=this._registry[e]||{class:null,foreignKeys:[]}
var n=this._registry[e].foreignKeys
n.includes(a)||n.push(a)}},{key:"_instantiateModel",value:function(e,a){return new(this._modelFor(e))(this,e,a,this._foreignKeysFor(e))}},{key:"_modelFor",value:function(e){return this._registry[An(e)].class}},{key:"_foreignKeysFor",value:function(e){return this._registry[An(e)].foreignKeys}},{key:"_hydrate",value:function(e,a){if(Array.isArray(e)){var n=e.map((function(e){return this._instantiateModel(a,e)}),this)
return new Kn(a,n)}return e?this._instantiateModel(a,e):null}}]),e}(),si={Db:Cn,Association:Bn,RouteHandler:Yn,BaseRouteHandler:Vn,Serializer:ei,SerializerRegistry:ni,Schema:oi},li={singularize:ca,pluralize:ua},ui=function(){function e(){Za(this,e),this.inflector=li}return Qa(e,[{key:"register",value:function(e,a){this[e]=a}},{key:"create",value:function(e){var a=si[e]
a.prototype._container=this
for(var n=arguments.length,i=new Array(n>1?n-1:0),r=1;r<n;r++)i[r-1]=arguments[r]
return nn(a,i)}}]),e}(),ci=new ui
Cn.prototype._container=ci,Bn.prototype._container=ci,Vn.prototype._container=ci,Yn.prototype._container=ci,ei.prototype._container=ci,ni.prototype._container=ci,oi.prototype._container=ci
var di={}
function hi(e){if("undefined"!=typeof window)return new Qe((function(){this.passthroughRequest=function(a,n,i){e.shouldLog()&&console.log("Mirage: Passthrough request for ".concat(a.toUpperCase()," ").concat(i.url))},this.handledRequest=function(a,n,i){if(e.shouldLog()){console.groupCollapsed("Mirage: [".concat(i.status,"] ").concat(a.toUpperCase()," ").concat(i.url))
var r,t,o=i.requestBody,s=i.responseText
try{r=JSON.parse(o)}catch(e){r=o}try{t=JSON.parse(s)}catch(e){t=s}console.groupCollapsed("Response"),console.log(t),console.groupEnd(),console.groupCollapsed("Request (data)"),console.log(r),console.groupEnd(),console.groupCollapsed("Request (raw)"),console.log(i),console.groupEnd(),console.groupEnd()}}
var a=this.checkPassthrough
this.checkPassthrough=function(n){var i=e.passthroughChecks.some((function(e){return e(n)}))
if(i){var r=n.url.includes("?")?n.url.substr(0,n.url.indexOf("?")):n.url
this[n.method.toLowerCase()](r,this.passthrough)}return a.apply(this,arguments)},this.unhandledRequest=function(e,a){a=decodeURI(a),En("Your app tried to ".concat(e," '").concat(a,"', but there was no route defined to handle this request. Define a route for this endpoint in your routes() config. Did you forget to define a namespace?"))}}),{trackRequests:e.shouldTrackRequests()})}var pi={coalesce:!1,timing:void 0},mi={singularize:ca,pluralize:ua},fi=["http://localhost:0/chromecheckurl","http://localhost:30820/socket.io",function(e){return/.+\.hot-update.json$/.test(e.url)}]
function vi(e){var a=sn(e.splice(-1),1)[0]
!function(e){if(!e||"object"!==Wa(e))return!1
for(var a=Object.keys(pi),n=Object.keys(e),i=0;i<n.length;i++){var r=n[i]
if(a.indexOf(r)>-1)return!0}return!1}(a)?(e.push(a),a=pi):a=Va()({},pi,a)
for(var n=2-e.length;n-- >0;)e.push(void 0)
return e.push(a),e}function gi(e){return new ki(e)}var ki=function(){function e(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}
Za(this,e),this._container=new ui,this.config(a),this.db=this.db||void 0,this.schema=this.schema||void 0}return Qa(e,[{key:"config",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}
this.passthroughChecks=this.passthroughChecks||[]
var a=e.environment&&this.environment&&this.environment!==e.environment
En(!a,"You cannot modify Mirage's environment once the server is created"),this.environment=e.environment||this.environment||"development",e.routes&&(En(!e.baseConfig,"The routes option is an alias for the baseConfig option. You can't pass both options into your server definition."),e.baseConfig=e.routes),e.seeds&&(En(!e.scenarios,"The seeds option is an alias for the scenarios.default option. You can't pass both options into your server definition."),e.scenarios={default:e.seeds}),this._config=e,this.namespace=this.namespace||e.namespace||"",this.inflector=e.inflector||mi,this._container.register("inflector",this.inflector),this.urlPrefix=this.urlPrefix||e.urlPrefix||"",this.timing=this.timing||e.timing||400,this.logging=void 0!==this.logging?this.logging:void 0,this.testConfig=this.testConfig||void 0,this.trackRequests=e.trackRequests,this._defineRouteHandlerHelpers(),this.db?this.db.registerIdentityManagers(e.identityManagers):this.db=this._container.create("Db",void 0,e.identityManagers),this.schema?(this.schema.registerModels(e.models),this.serializerOrRegistry.registerSerializers(e.serializers||{})):(this.schema=this._container.create("Schema",this.db,e.models),this.serializerOrRegistry=this._container.create("SerializerRegistry",this.schema,e.serializers))
var n=this._hasModulesOfType(e,"factories"),i=e.scenarios&&Object.prototype.hasOwnProperty.call(e.scenarios,"default"),r=void 0!==e.trackRequests&&this.pretender
En(!r,"You cannot modify Pretender's request tracking once the server is created"),this.pretender=this.pretender||e.pretender||hi(this),e.baseConfig&&this.loadConfig(e.baseConfig),this.isTest()&&(e.testConfig&&this.loadConfig(e.testConfig),"undefined"!=typeof window&&(window.server=this)),this.isTest()&&n?this.loadFactories(e.factories):!this.isTest()&&i?(this.loadFactories(e.factories),e.scenarios.default(this)):this.loadFixtures()
var t=void 0===e.useDefaultPassthroughs||e.useDefaultPassthroughs
t&&this._configureDefaultPassthroughs()}},{key:"isTest",value:function(){return"test"===this.environment}},{key:"shouldLog",value:function(){return void 0!==this.logging?this.logging:!this.isTest()}},{key:"shouldTrackRequests",value:function(){return Boolean(this.trackRequests)}},{key:"loadConfig",value:function(e){e.call(this),this.timing=this.isTest()?0:this.timing||0}},{key:"passthrough",value:function(){for(var e=this,a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
if("undefined"!=typeof window){var r=["get","post","put","delete","patch","options","head"],t=n[n.length-1]
0===n.length?n=["/**","/"]:Array.isArray(t)&&(r=n.pop()),n.forEach((function(a){"function"==typeof a?e.passthroughChecks.push(a):r.forEach((function(n){var i=e._getFullPath(a)
e.pretender[n](i,e.pretender.passthrough)}))}))}}},{key:"loadFixtures",value:function(){for(var e=this._config.fixtures,a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
if(n.length){var r=n.map(An),t=r.filter((function(a){return!e[a]}))
if(t.length)throw new Error("Fixtures not found: ".concat(t.join(", ")))
e=Oa().apply(void 0,[e].concat(ln(r)))}this.db.loadData(e)}},{key:"loadFactories",value:function(){var e=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=this._factoryMap||{}
this._factoryMap=Va()(n,a),Object.keys(a).forEach((function(a){var n=e.schema.toCollectionName(a)
e.db.createCollection(n)}))}},{key:"factoryFor",value:function(e){var a=An(e)
if(this._factoryMap&&this._factoryMap[a])return this._factoryMap[a]}},{key:"build",value:function(e){for(var a=arguments.length,n=new Array(a>1?a-1:0),i=1;i<a;i++)n[i-1]=arguments[i]
var t=n.filter((function(e){return e&&"string"==typeof e})),o=Ha()(n,(function(e){return r()(e)})),s=An(e)
this.factorySequences=this.factorySequences||{},this.factorySequences[s]=this.factorySequences[s]+1||0
var l=this.factoryFor(e)
if(l){var u=(l=l.extend({})).attrs||{}
this._validateTraits(t,l,e)
var c=this._mergeExtensions(u,t,o)
this._mapAssociationsFromAttributes(e,u,o),this._mapAssociationsFromAttributes(e,c)
var d=l.extend(c),h=new d,p=this.factorySequences[s]
return h.build(p)}return o}},{key:"buildList",value:function(e,a){En(Ja()(a),"second argument has to be an integer, you passed: ".concat(Wa(a)))
for(var n=[],i=arguments.length,r=new Array(i>2?i-2:0),t=2;t<i;t++)r[t-2]=arguments[t]
for(var o=[e].concat(r),s=0;s<a;s++)n.push(this.build.apply(this,o))
return n}},{key:"create",value:function(e){var a=this
En(this._modelOrFactoryExistsForType(e),"You called server.create('".concat(e,"') but no model or factory was found. Make sure you're passing in the singularized version of the model or factory name."))
for(var n=arguments.length,i=new Array(n>1?n-1:0),t=1;t<n;t++)i[t-1]=arguments[t]
var o,s=i.filter((function(e){return e&&"string"==typeof e})),l=Ha()(i,(function(e){return r()(e)})),u=Ha()(i,(function(e){return e&&Array.isArray(e)})),c=this.build.apply(this,[e].concat(ln(s),[l]))
if(this.schema&&this.schema[this.schema.toCollectionName(e)]){var d=this.schema[this.schema.toCollectionName(e)]
o=d.create(c)}else{var h,p
u?h=u:(p=this.schema?this.schema.toInternalCollectionName(e):"_".concat(this.inflector.pluralize(e)),h=this.db[p]),En(h,"You called server.create('".concat(e,"') but no model or factory was found.")),o=h.insert(c)}var m=this.factoryFor(e)
return m&&m.extractAfterCreateCallbacks({traits:s}).forEach((function(e){e(o,a)})),o}},{key:"createList",value:function(e,a){En(this._modelOrFactoryExistsForType(e),"You called server.createList('".concat(e,"') but no model or factory was found. Make sure you're passing in the singularized version of the model or factory name.")),En(Ja()(a),"second argument has to be an integer, you passed: ".concat(Wa(a)))
for(var n=[],i=this.schema?this.schema.toInternalCollectionName(e):"_".concat(this.inflector.pluralize(e)),r=this.db[i],t=arguments.length,o=new Array(t>2?t-2:0),s=2;s<t;s++)o[s-2]=arguments[s]
for(var l=[e].concat(o,[r]),u=0;u<a;u++)n.push(this.create.apply(this,l))
return n}},{key:"shutdown",value:function(){"undefined"!=typeof window&&this.pretender.shutdown(),"undefined"!=typeof window&&"test"===this.environment&&(window.server=void 0)}},{key:"resource",value:function(e){var a=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=n.only,r=n.except,t=n.path
if(e=this.inflector.pluralize(e),t=t||"/".concat(e),r=r||[],(i=i||[]).length>0&&r.length>0)throw"cannot use both :only and :except options"
var o={index:{methods:["get"],path:"".concat(t)},show:{methods:["get"],path:"".concat(t,"/:id")},create:{methods:["post"],path:"".concat(t)},update:{methods:["put","patch"],path:"".concat(t,"/:id")},delete:{methods:["del"],path:"".concat(t,"/:id")}},s=Object.keys(o),l=i.length>0&&i||r.length>0&&s.filter((function(e){return-1===r.indexOf(e)}))||s
l.forEach((function(n){var i=o[n]
i.methods.forEach((function(n){return t===e?a[n](i.path):a[n](i.path,e)}))}))}},{key:"_defineRouteHandlerHelpers",value:function(){var e=this;[["get"],["post"],["put"],["delete","del"],["patch"],["head"],["options"]].forEach((function(a){var n=sn(a,2),i=n[0],r=n[1]
e[i]=function(a){for(var n=arguments.length,r=new Array(n>1?n-1:0),t=1;t<n;t++)r[t-1]=arguments[t]
var o=vi(r),s=sn(o,3),l=s[0],u=s[1],c=s[2]
return e._registerRouteHandler(i,a,l,u,c)},r&&(e[r]=e[i])}))}},{key:"_serialize",value:function(e){return"string"==typeof e?e:JSON.stringify(e)}},{key:"_registerRouteHandler",value:function(e,a,n,i,r){var t=this,o=this._container.create("RouteHandler",{schema:this.schema,verb:e,rawHandler:n,customizedCode:i,options:r,path:a,serializerOrRegistry:this.serializerOrRegistry}),s=this._getFullPath(a),l=void 0!==r.timing?r.timing:function(){return t.timing}
if(this.pretender)return this.pretender[e](s,(function(e){return o.handle(e).then((function(e){var a=sn(e,3),n=a[0],i=a[1],r=a[2]
return[n,i,t._serialize(r)]}))}),l)}},{key:"_hasModulesOfType",value:function(e,a){var n=e[a]
return!!n&&Object.keys(n).length>0}},{key:"_getFullPath",value:function(e){e="/"===e[0]?e.slice(1):e
var a="",n=this.urlPrefix?this.urlPrefix.trim():"",i=""
if(this.urlPrefix&&this.namespace&&("/"===this.namespace[0]&&"/"===this.namespace[this.namespace.length-1]&&(i=this.namespace.substring(0,this.namespace.length-1).substring(1)),"/"===this.namespace[0]&&"/"!==this.namespace[this.namespace.length-1]&&(i=this.namespace.substring(1)),"/"!==this.namespace[0]&&"/"===this.namespace[this.namespace.length-1]&&(i=this.namespace.substring(0,this.namespace.length-1)),"/"!==this.namespace[0]&&"/"!==this.namespace[this.namespace.length-1]&&(i=this.namespace)),this.namespace&&!this.urlPrefix){if("/"===this.namespace[0]&&"/"===this.namespace[this.namespace.length-1]&&(i=this.namespace.substring(0,this.namespace.length-1)),"/"===this.namespace[0]&&"/"!==this.namespace[this.namespace.length-1]&&(i=this.namespace),"/"!==this.namespace[0]&&"/"===this.namespace[this.namespace.length-1]){var r=this.namespace.substring(0,this.namespace.length-1)
i="/".concat(r)}"/"!==this.namespace[0]&&"/"!==this.namespace[this.namespace.length-1]&&(i="/".concat(this.namespace))}return this.namespace||(i=""),/^https?:\/\//.test(e)?a+=e:(n.length&&(a+="/"===n[n.length-1]?n:"".concat(n,"/")),"/"!==(a+=i)[a.length-1]&&(a+="/"),/^https?:\/\//.test(a+=e)||(a=(a="/".concat(a)).replace(/\/+/g,"/"))),a}},{key:"_configureDefaultPassthroughs",value:function(){var e=this
fi.forEach((function(a){e.passthrough(a)}))}},{key:"_typeIsPluralForModel",value:function(e){if("boolean"!=typeof di[e]){var a=this._modelOrFactoryExistsForTypeOrCollectionName(e),n=e===this.inflector.pluralize(e),i=this.inflector.singularize(e)===this.inflector.pluralize(e),r=n&&!i&&a
di[e]=r}return di[e]}},{key:"_modelOrFactoryExistsForType",value:function(e){var a=this.schema&&this.schema.modelFor(An(e)),n=this.db[this.schema.toInternalCollectionName(e)]
return(a||n)&&!this._typeIsPluralForModel(e)}},{key:"_modelOrFactoryExistsForTypeOrCollectionName",value:function(e){var a=this.schema&&this.schema.modelFor(An(e)),n=this.db[this.schema.toInternalCollectionName(e)]
return a||n}},{key:"_validateTraits",value:function(e,a,n){e.forEach((function(e){if(!a.isTrait(e))throw new Error("'".concat(e,"' trait is not registered in '").concat(n,"' factory"))}))}},{key:"_mergeExtensions",value:function(e,a,n){var i=a.map((function(a){return e[a].extension}))
return i.push(n||{}),i.reduce((function(e,a){return Va()(e,a)}),{})}},{key:"_mapAssociationsFromAttributes",value:function(e,a){var n=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}
Object.keys(a||{}).filter((function(e){return wn(a[e])})).forEach((function(r){var t=n.schema.modelClassFor(e).associationFor(r)
En(t&&t instanceof Ln,"You're using the `association` factory helper on the '".concat(r,"' attribute of your ").concat(e," factory, but that attribute is not a `belongsTo` association.")),En(!(t&&t instanceof Ln&&t.modelName===e),"You're using the association() helper on your ".concat(e," factory for ").concat(r,", which is a belongsTo self-referential relationship. You can't do this as it will lead to infinite recursion. You can move the helper inside of a trait and use it selectively.")),En(!(t&&t.opts&&t.opts.polymorphic),"You're using the association() helper on your ".concat(e," factory for ").concat(r,", which is a polymorphic relationship. This is not currently supported."))
var o=a[r],s="".concat(An(r),"Id")
i[r]||(a[s]=n.create.apply(n,[t.modelName].concat(ln(o.traitsAndOverrides))).id),delete a[r]}))}}]),e}(),yi=ei.extend({serializeIds:"always",normalizeIds:!0,keyForModel:function(e){return Tn(e)},keyForAttribute:function(e){return Tn(e)},keyForRelationship:function(e){return this._container.inflector.pluralize(Tn(e))},keyForEmbeddedRelationship:function(e){return Tn(e)},keyForRelationshipIds:function(e){return"".concat(Tn(this._container.inflector.singularize(e)),"_ids")},keyForForeignKey:function(e){return"".concat(Tn(e),"_id")},keyForPolymorphicForeignKeyId:function(e){return"".concat(Tn(e),"_id")},keyForPolymorphicForeignKeyType:function(e){return"".concat(Tn(e),"_type")},normalize:function(e){var a=this,n=Object.keys(e)[0],i=e[n],r=An(n),t=this.schema.modelClassFor(r),o=t.belongsToAssociations,s=t.hasManyAssociations,l=Object.keys(o),u=Object.keys(s),c={data:{type:this._container.inflector.pluralize(n),attributes:{}}}
i.id&&(c.data.id=i.id)
var d={}
return Object.keys(i).forEach((function(e){if("id"!==e)if(a.normalizeIds)if(l.includes(e)){var n=o[e].modelName
d[Mn(e)]={data:{type:n,id:i[e]}}}else if(u.includes(e)){var r=s[e].modelName,t=i[e].map((function(e){return{type:r,id:e}}))
d[Mn(e)]={data:t}}else c.data.attributes[Mn(e)]=i[e]
else c.data.attributes[Mn(e)]=i[e]})),Object.keys(d).length&&(c.data.relationships=d),c},getCoalescedIds:function(e){return e.queryParams&&e.queryParams.ids}}),bi=yi.extend({serializeIds:"always",keyForModel:function(e){return An(e)},keyForAttribute:function(e){return An(e)},keyForRelationship:function(e){return An(this._container.inflector.pluralize(e))},keyForEmbeddedRelationship:function(e){return An(e)},keyForRelationshipIds:function(e){return An(this._container.inflector.pluralize(e))},keyForForeignKey:function(e){return An(this._container.inflector.singularize(e))},getCoalescedIds:function(e){return e.queryParams&&e.queryParams.ids}})
function Si(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var a=16*Math.random()|0
return("x"===e?a:3&a|8).toString(16)}))}function Ai(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
return nn(On,a)}function Mi(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
return nn(Ln,a)}var Ti={Factory:hn,Response:gn,hasMany:Ai,belongsTo:Mi}},6593:(e,a,n)=>{"use strict"
n.d(a,{dP:()=>E,re:()=>P})
var i=n(9585),r=n(768)
function t(){}var o,s=function(){function e(e,a){void 0===e&&(e=1/0),void 0===a&&(a=t),this.max=e,this.dispose=a,this.map=new Map,this.newest=null,this.oldest=null}return e.prototype.has=function(e){return this.map.has(e)},e.prototype.get=function(e){var a=this.getNode(e)
return a&&a.value},e.prototype.getNode=function(e){var a=this.map.get(e)
if(a&&a!==this.newest){var n=a.older,i=a.newer
i&&(i.older=n),n&&(n.newer=i),a.older=this.newest,a.older.newer=a,a.newer=null,this.newest=a,a===this.oldest&&(this.oldest=i)}return a},e.prototype.set=function(e,a){var n=this.getNode(e)
return n?n.value=a:(n={key:e,value:a,newer:null,older:this.newest},this.newest&&(this.newest.newer=n),this.newest=n,this.oldest=this.oldest||n,this.map.set(e,n),n.value)},e.prototype.clean=function(){for(;this.oldest&&this.map.size>this.max;)this.delete(this.oldest.key)},e.prototype.delete=function(e){var a=this.map.get(e)
return!!a&&(a===this.newest&&(this.newest=a.older),a===this.oldest&&(this.oldest=a.newer),a.newer&&(a.newer.older=a.older),a.older&&(a.older.newer=a.newer),this.map.delete(e),this.dispose(a.value,e),!0)},e}(),l=new r.g7,u=Object.prototype.hasOwnProperty,c=void 0===(o=Array.from)?function(e){var a=[]
return e.forEach((function(e){return a.push(e)})),a}:o
function d(e){var a=e.unsubscribe
"function"==typeof a&&(e.unsubscribe=void 0,a())}var h=[]
function p(e,a){if(!e)throw new Error(a||"assertion failure")}function m(e){switch(e.length){case 0:throw new Error("unknown value")
case 1:return e[0]
case 2:throw e[1]}}var f=function(){function e(a){this.fn=a,this.parents=new Set,this.childValues=new Map,this.dirtyChildren=null,this.dirty=!0,this.recomputing=!1,this.value=[],this.deps=null,++e.count}return e.prototype.peek=function(){if(1===this.value.length&&!k(this))return v(this),this.value[0]},e.prototype.recompute=function(e){return p(!this.recomputing,"already recomputing"),v(this),k(this)?function(e,a){return _(e),l.withValue(e,g,[e,a]),function(e,a){if("function"==typeof e.subscribe)try{d(e),e.unsubscribe=e.subscribe.apply(null,a)}catch(a){return e.setDirty(),!1}return!0}(e,a)&&function(e){e.dirty=!1,k(e)||b(e)}(e),m(e.value)}(this,e):m(this.value)},e.prototype.setDirty=function(){this.dirty||(this.dirty=!0,this.value.length=0,y(this),d(this))},e.prototype.dispose=function(){var e=this
this.setDirty(),_(this),S(this,(function(a,n){a.setDirty(),w(a,e)}))},e.prototype.forget=function(){this.dispose()},e.prototype.dependOn=function(e){e.add(this),this.deps||(this.deps=h.pop()||new Set),this.deps.add(e)},e.prototype.forgetDeps=function(){var e=this
this.deps&&(c(this.deps).forEach((function(a){return a.delete(e)})),this.deps.clear(),h.push(this.deps),this.deps=null)},e.count=0,e}()
function v(e){var a=l.getValue()
if(a)return e.parents.add(a),a.childValues.has(e)||a.childValues.set(e,[]),k(e)?A(a,e):M(a,e),a}function g(e,a){e.recomputing=!0,e.value.length=0
try{e.value[0]=e.fn.apply(null,a)}catch(a){e.value[1]=a}e.recomputing=!1}function k(e){return e.dirty||!(!e.dirtyChildren||!e.dirtyChildren.size)}function y(e){S(e,A)}function b(e){S(e,M)}function S(e,a){var n=e.parents.size
if(n)for(var i=c(e.parents),r=0;r<n;++r)a(i[r],e)}function A(e,a){p(e.childValues.has(a)),p(k(a))
var n=!k(e)
if(e.dirtyChildren){if(e.dirtyChildren.has(a))return}else e.dirtyChildren=h.pop()||new Set
e.dirtyChildren.add(a),n&&y(e)}function M(e,a){p(e.childValues.has(a)),p(!k(a))
var n,i,r,t=e.childValues.get(a)
0===t.length?e.childValues.set(a,a.value.slice(0)):(n=t,i=a.value,(r=n.length)>0&&r===i.length&&n[r-1]===i[r-1]||e.setDirty()),T(e,a),k(e)||b(e)}function T(e,a){var n=e.dirtyChildren
n&&(n.delete(a),0===n.size&&(h.length<100&&h.push(n),e.dirtyChildren=null))}function _(e){e.childValues.size>0&&e.childValues.forEach((function(a,n){w(e,n)})),e.forgetDeps(),p(null===e.dirtyChildren)}function w(e,a){a.parents.delete(e),e.childValues.delete(a),T(e,a)}var j={setDirty:!0,dispose:!0,forget:!0}
function E(e){var a=new Map,n=e&&e.subscribe
function i(e){var i=l.getValue()
if(i){var r=a.get(e)
r||a.set(e,r=new Set),i.dependOn(r),"function"==typeof n&&(d(r),r.unsubscribe=n(e))}}return i.dirty=function(e,n){var i=a.get(e)
if(i){var r=n&&u.call(j,n)?n:"setDirty"
c(i).forEach((function(e){return e[r]()})),a.delete(e),d(i)}},i}function N(){var e=new i.B("function"==typeof WeakMap)
return function(){return e.lookupArray(arguments)}}N()
var B=new Set
function P(e,a){void 0===a&&(a=Object.create(null))
var n=new s(a.max||Math.pow(2,16),(function(e){return e.dispose()})),i=a.keyArgs,r=a.makeCacheKey||N(),t=function(){var t=r.apply(null,i?i.apply(null,arguments):arguments)
if(void 0===t)return e.apply(null,arguments)
var o=n.get(t)
o||(n.set(t,o=new f(e)),o.subscribe=a.subscribe,o.forget=function(){return n.delete(t)})
var s=o.recompute(Array.prototype.slice.call(arguments))
return n.set(t,o),B.add(n),l.hasValue()||(B.forEach((function(e){return e.clean()})),B.clear()),s}
function o(e){var a=n.get(e)
a&&a.setDirty()}function u(e){var a=n.get(e)
if(a)return a.peek()}function c(e){return n.delete(e)}return Object.defineProperty(t,"size",{get:function(){return n.map.size},configurable:!1,enumerable:!1}),t.dirtyKey=o,t.dirty=function(){o(r.apply(null,arguments))},t.peekKey=u,t.peek=function(){return u(r.apply(null,arguments))},t.forgetKey=c,t.forget=function(){return c(r.apply(null,arguments))},t.makeCacheKey=r,t.getKey=i?function(){return r.apply(null,i.apply(null,arguments))}:r,Object.freeze(t)}},3401:()=>{Prism.languages.jexl={string:/(["'])(?:\\[\s\S]|(?!\1)[^\\])*\1/,transform:{pattern:/(\|\s*)[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*/,alias:"function",lookbehind:!0},function:/[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*\s*(?=\()/,number:/\b\d+(?:\.\d+)?\b|\B\.\d+\b/,operator:/[<>!]=?|-|\+|&&|==|\|\|?|\/\/?|[?:*^%]/,boolean:/\b(?:false|true)\b/,keyword:/\bin\b/,punctuation:/[{}[\](),.]/}},813:()=>{!function(e){var a=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source
function n(e){return e=e.replace(/<inner>/g,(function(){return a})),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var i=/(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,r=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g,(function(){return i})),t=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source
e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{"front-matter-block":{pattern:/(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,"front-matter":{pattern:/\S+(?:\s+\S+)*/,alias:["yaml","language-yaml"],inside:e.languages.yaml}}},blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+r+t+"(?:"+r+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+r+t+")(?:"+r+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(i),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+r+")"+t+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+r+"$"),inside:{"table-header":{pattern:RegExp(i),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:n(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:n(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:n(/(~~?)(?:(?!~)<inner>)+\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},"code-snippet":{pattern:/(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:["code","keyword"]},url:{pattern:n(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\][ \t]?\[)[^\]]+(?=\]$)/,lookbehind:!0},url:{pattern:/(^\]\()[^\s)]+/,lookbehind:!0},string:{pattern:/(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,lookbehind:!0}}}}),["url","bold","italic","strike"].forEach((function(a){["url","bold","italic","strike","code-snippet"].forEach((function(n){a!==n&&(e.languages.markdown[a].inside.content.inside[n]=e.languages.markdown[n])}))})),e.hooks.add("after-tokenize",(function(e){"markdown"!==e.language&&"md"!==e.language||function e(a){if(a&&"string"!=typeof a)for(var n=0,i=a.length;n<i;n++){var r=a[n]
if("code"===r.type){var t=r.content[1],o=r.content[3]
if(t&&o&&"code-language"===t.type&&"code-block"===o.type&&"string"==typeof t.content){var s=t.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp"),l="language-"+(s=(/[a-z][\w-]*/i.exec(s)||[""])[0].toLowerCase())
o.alias?"string"==typeof o.alias?o.alias=[o.alias,l]:o.alias.push(l):o.alias=[l]}}else e(r.content)}}(e.tokens)})),e.hooks.add("wrap",(function(a){if("code-block"===a.type){for(var n="",i=0,r=a.classes.length;i<r;i++){var t=a.classes[i],u=/language-(.+)/.exec(t)
if(u){n=u[1]
break}}var c=e.languages[n]
if(c)a.content=e.highlight(a.content.replace(o,"").replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi,(function(e,a){var n
return"#"===(a=a.toLowerCase())[0]?(n="x"===a[1]?parseInt(a.slice(2),16):Number(a.slice(1)),l(n)):s[a]||e})),c,n)
else if(n&&"none"!==n&&e.plugins.autoloader){var d="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random())
a.attributes.id=d,e.plugins.autoloader.loadLanguages(n,(function(){var a=document.getElementById(d)
a&&(a.innerHTML=e.highlight(a.textContent,e.languages[n],n))}))}}}))
var o=RegExp(e.languages.markup.tag.pattern.source,"gi"),s={amp:"&",lt:"<",gt:">",quot:'"'},l=String.fromCodePoint||String.fromCharCode
e.languages.md=e.languages.markdown}(Prism)},817:e=>{var a=function(e){var a=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,n=0,i={},r={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(a){return a instanceof t?new t(a.type,e(a.content),a.alias):Array.isArray(a)?a.map(e):a.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++n}),e.__id},clone:function e(a,n){var i,t
switch(n=n||{},r.util.type(a)){case"Object":if(t=r.util.objId(a),n[t])return n[t]
for(var o in i={},n[t]=i,a)a.hasOwnProperty(o)&&(i[o]=e(a[o],n))
return i
case"Array":return t=r.util.objId(a),n[t]?n[t]:(i=[],n[t]=i,a.forEach((function(a,r){i[r]=e(a,n)})),i)
default:return a}},getLanguage:function(e){for(;e;){var n=a.exec(e.className)
if(n)return n[1].toLowerCase()
e=e.parentElement}return"none"},setLanguage:function(e,n){e.className=e.className.replace(RegExp(a,"gi"),""),e.classList.add("language-"+n)},currentScript:function(){if("undefined"==typeof document)return null
if("currentScript"in document)return document.currentScript
try{throw new Error}catch(i){var e=(/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(i.stack)||[])[1]
if(e){var a=document.getElementsByTagName("script")
for(var n in a)if(a[n].src==e)return a[n]}return null}},isActive:function(e,a,n){for(var i="no-"+a;e;){var r=e.classList
if(r.contains(a))return!0
if(r.contains(i))return!1
e=e.parentElement}return!!n}},languages:{plain:i,plaintext:i,text:i,txt:i,extend:function(e,a){var n=r.util.clone(r.languages[e])
for(var i in a)n[i]=a[i]
return n},insertBefore:function(e,a,n,i){var t=(i=i||r.languages)[e],o={}
for(var s in t)if(t.hasOwnProperty(s)){if(s==a)for(var l in n)n.hasOwnProperty(l)&&(o[l]=n[l])
n.hasOwnProperty(s)||(o[s]=t[s])}var u=i[e]
return i[e]=o,r.languages.DFS(r.languages,(function(a,n){n===u&&a!=e&&(this[a]=o)})),o},DFS:function e(a,n,i,t){t=t||{}
var o=r.util.objId
for(var s in a)if(a.hasOwnProperty(s)){n.call(a,s,a[s],i||s)
var l=a[s],u=r.util.type(l)
"Object"!==u||t[o(l)]?"Array"!==u||t[o(l)]||(t[o(l)]=!0,e(l,n,s,t)):(t[o(l)]=!0,e(l,n,null,t))}}},plugins:{},highlightAll:function(e,a){r.highlightAllUnder(document,e,a)},highlightAllUnder:function(e,a,n){var i={callback:n,container:e,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'}
r.hooks.run("before-highlightall",i),i.elements=Array.prototype.slice.apply(i.container.querySelectorAll(i.selector)),r.hooks.run("before-all-elements-highlight",i)
for(var t,o=0;t=i.elements[o++];)r.highlightElement(t,!0===a,i.callback)},highlightElement:function(a,n,i){var t=r.util.getLanguage(a),o=r.languages[t]
r.util.setLanguage(a,t)
var s=a.parentElement
s&&"pre"===s.nodeName.toLowerCase()&&r.util.setLanguage(s,t)
var l={element:a,language:t,grammar:o,code:a.textContent}
function u(e){l.highlightedCode=e,r.hooks.run("before-insert",l),l.element.innerHTML=l.highlightedCode,r.hooks.run("after-highlight",l),r.hooks.run("complete",l),i&&i.call(l.element)}if(r.hooks.run("before-sanity-check",l),(s=l.element.parentElement)&&"pre"===s.nodeName.toLowerCase()&&!s.hasAttribute("tabindex")&&s.setAttribute("tabindex","0"),!l.code)return r.hooks.run("complete",l),void(i&&i.call(l.element))
if(r.hooks.run("before-highlight",l),l.grammar)if(n&&e.Worker){var c=new Worker(r.filename)
c.onmessage=function(e){u(e.data)},c.postMessage(JSON.stringify({language:l.language,code:l.code,immediateClose:!0}))}else u(r.highlight(l.code,l.grammar,l.language))
else u(r.util.encode(l.code))},highlight:function(e,a,n){var i={code:e,grammar:a,language:n}
return r.hooks.run("before-tokenize",i),i.tokens=r.tokenize(i.code,i.grammar),r.hooks.run("after-tokenize",i),t.stringify(r.util.encode(i.tokens),i.language)},tokenize:function(e,a){var n=a.rest
if(n){for(var i in n)a[i]=n[i]
delete a.rest}var r=new l
return u(r,r.head,e),s(e,r,a,r.head,0),function(e){for(var a=[],n=e.head.next;n!==e.tail;)a.push(n.value),n=n.next
return a}(r)},hooks:{all:{},add:function(e,a){var n=r.hooks.all
n[e]=n[e]||[],n[e].push(a)},run:function(e,a){var n=r.hooks.all[e]
if(n&&n.length)for(var i,t=0;i=n[t++];)i(a)}},Token:t}
function t(e,a,n,i){this.type=e,this.content=a,this.alias=n,this.length=0|(i||"").length}function o(e,a,n,i){e.lastIndex=a
var r=e.exec(n)
if(r&&i&&r[1]){var t=r[1].length
r.index+=t,r[0]=r[0].slice(t)}return r}function s(e,a,n,i,l,d){for(var h in n)if(n.hasOwnProperty(h)&&n[h]){var p=n[h]
p=Array.isArray(p)?p:[p]
for(var m=0;m<p.length;++m){if(d&&d.cause==h+","+m)return
var f=p[m],v=f.inside,g=!!f.lookbehind,k=!!f.greedy,y=f.alias
if(k&&!f.pattern.global){var b=f.pattern.toString().match(/[imsuy]*$/)[0]
f.pattern=RegExp(f.pattern.source,b+"g")}for(var S=f.pattern||f,A=i.next,M=l;A!==a.tail&&!(d&&M>=d.reach);M+=A.value.length,A=A.next){var T=A.value
if(a.length>e.length)return
if(!(T instanceof t)){var _,w=1
if(k){if(!(_=o(S,M,e,g))||_.index>=e.length)break
var j=_.index,E=_.index+_[0].length,N=M
for(N+=A.value.length;j>=N;)N+=(A=A.next).value.length
if(M=N-=A.value.length,A.value instanceof t)continue
for(var B=A;B!==a.tail&&(N<E||"string"==typeof B.value);B=B.next)w++,N+=B.value.length
w--,T=e.slice(M,N),_.index-=M}else if(!(_=o(S,0,T,g)))continue
j=_.index
var P=_[0],L=T.slice(0,j),D=T.slice(j+P.length),x=M+T.length
d&&x>d.reach&&(d.reach=x)
var C=A.prev
if(L&&(C=u(a,C,L),M+=L.length),c(a,C,w),A=u(a,C,new t(h,v?r.tokenize(P,v):P,y,P)),D&&u(a,A,D),w>1){var K={cause:h+","+m,reach:x}
s(e,a,n,A.prev,M,K),d&&K.reach>d.reach&&(d.reach=K.reach)}}}}}}function l(){var e={value:null,prev:null,next:null},a={value:null,prev:e,next:null}
e.next=a,this.head=e,this.tail=a,this.length=0}function u(e,a,n){var i=a.next,r={value:n,prev:a,next:i}
return a.next=r,i.prev=r,e.length++,r}function c(e,a,n){for(var i=a.next,r=0;r<n&&i!==e.tail;r++)i=i.next
a.next=i,i.prev=a,e.length-=r}if(e.Prism=r,t.stringify=function e(a,n){if("string"==typeof a)return a
if(Array.isArray(a)){var i=""
return a.forEach((function(a){i+=e(a,n)})),i}var t={type:a.type,content:e(a.content,n),tag:"span",classes:["token",a.type],attributes:{},language:n},o=a.alias
o&&(Array.isArray(o)?Array.prototype.push.apply(t.classes,o):t.classes.push(o)),r.hooks.run("wrap",t)
var s=""
for(var l in t.attributes)s+=" "+l+'="'+(t.attributes[l]||"").replace(/"/g,"&quot;")+'"'
return"<"+t.tag+' class="'+t.classes.join(" ")+'"'+s+">"+t.content+"</"+t.tag+">"},!e.document)return e.addEventListener?(r.disableWorkerMessageHandler||e.addEventListener("message",(function(a){var n=JSON.parse(a.data),i=n.language,t=n.code,o=n.immediateClose
e.postMessage(r.highlight(t,r.languages[i],i)),o&&e.close()}),!1),r):r
var d=r.util.currentScript()
function h(){r.manual||r.highlightAll()}if(d&&(r.filename=d.src,d.hasAttribute("data-manual")&&(r.manual=!0)),!r.manual){var p=document.readyState
"loading"===p||"interactive"===p&&d&&d.defer?document.addEventListener("DOMContentLoaded",h):window.requestAnimationFrame?window.requestAnimationFrame(h):window.setTimeout(h,16)}return r}("undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{})
e.exports&&(e.exports=a),"undefined"!=typeof global&&(global.Prism=a),a.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},a.languages.markup.tag.inside["attr-value"].inside.entity=a.languages.markup.entity,a.languages.markup.doctype.inside["internal-subset"].inside=a.languages.markup,a.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(a.languages.markup.tag,"addInlined",{value:function(e,n){var i={}
i["language-"+n]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:a.languages[n]},i.cdata=/^<!\[CDATA\[|\]\]>$/i
var r={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:i}}
r["language-"+n]={pattern:/[\s\S]+/,inside:a.languages[n]}
var t={}
t[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:r},a.languages.insertBefore("markup","cdata",t)}}),Object.defineProperty(a.languages.markup.tag,"addAttribute",{value:function(e,n){a.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[n,"language-"+n],inside:a.languages[n]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),a.languages.html=a.languages.markup,a.languages.mathml=a.languages.markup,a.languages.svg=a.languages.markup,a.languages.xml=a.languages.extend("markup",{}),a.languages.ssml=a.languages.xml,a.languages.atom=a.languages.xml,a.languages.rss=a.languages.xml,function(e){var a=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/
e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+a.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+a.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+a.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:a,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css
var n=e.languages.markup
n&&(n.tag.addInlined("style","css"),n.tag.addAttribute("style","css"))}(a),a.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},a.languages.javascript=a.languages.extend("clike",{"class-name":[a.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),a.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,a.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:a.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:a.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:a.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:a.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:a.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),a.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:a.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),a.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),a.languages.markup&&(a.languages.markup.tag.addInlined("script","javascript"),a.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),a.languages.js=a.languages.javascript,function(){if(void 0!==a&&"undefined"!=typeof document){Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector)
var e={js:"javascript",py:"python",rb:"ruby",ps1:"powershell",psm1:"powershell",sh:"bash",bat:"batch",h:"c",tex:"latex"},n="data-src-status",i='pre[data-src]:not([data-src-status="loaded"]):not([data-src-status="loading"])'
a.hooks.add("before-highlightall",(function(e){e.selector+=", "+i})),a.hooks.add("before-sanity-check",(function(r){var t=r.element
if(t.matches(i)){r.code="",t.setAttribute(n,"loading")
var o=t.appendChild(document.createElement("CODE"))
o.textContent="Loading…"
var s=t.getAttribute("data-src"),l=r.language
if("none"===l){var u=(/\.(\w+)$/.exec(s)||[,"none"])[1]
l=e[u]||u}a.util.setLanguage(o,l),a.util.setLanguage(t,l)
var c=a.plugins.autoloader
c&&c.loadLanguages(l),function(e,i,r){var s=new XMLHttpRequest
s.open("GET",e,!0),s.onreadystatechange=function(){4==s.readyState&&(s.status<400&&s.responseText?function(e){t.setAttribute(n,"loaded")
var i=function(e){var a=/^\s*(\d+)\s*(?:(,)\s*(?:(\d+)\s*)?)?$/.exec(e||"")
if(a){var n=Number(a[1]),i=a[2],r=a[3]
return i?r?[n,Number(r)]:[n,void 0]:[n,n]}}(t.getAttribute("data-range"))
if(i){var r=e.split(/\r\n?|\n/g),s=i[0],l=null==i[1]?r.length:i[1]
s<0&&(s+=r.length),s=Math.max(0,Math.min(s-1,r.length)),l<0&&(l+=r.length),l=Math.max(0,Math.min(l,r.length)),e=r.slice(s,l).join("\n"),t.hasAttribute("data-start")||t.setAttribute("data-start",String(s+1))}o.textContent=e,a.highlightElement(o)}(s.responseText):s.status>=400?r("✖ Error "+s.status+" while fetching file: "+s.statusText):r("✖ Error: File does not exist or is empty"))},s.send(null)}(s,0,(function(e){t.setAttribute(n,"failed"),o.textContent=e}))}})),a.plugins.fileHighlight={highlight:function(e){for(var n,r=(e||document).querySelectorAll(i),t=0;n=r[t++];)a.highlightElement(n)}}
var r=!1
a.fileHighlight=function(){r||(console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead."),r=!0),a.plugins.fileHighlight.highlight.apply(this,arguments)}}}()},240:(e,a,n)=>{"use strict"
var i
n.r(a),n.d(a,{default:()=>r})
const r=function(){function e(){this.pool=[],this.flush()}return e.prototype.flush=function(){var e=this
i=window.requestAnimationFrame((function(){var a=e.pool
e.reset(),a.forEach((function(e){e[Object.keys(e)[0]]()})),e.flush()}))},e.prototype.add=function(e,a){var n
return this.pool.push(((n={})[e]=a,n)),a},e.prototype.remove=function(e){this.pool=this.pool.filter((function(a){return!a[e]}))},e.prototype.reset=function(){this.pool=[]},e.prototype.stop=function(){window.cancelAnimationFrame(i)},e}()},5097:function(e){var a
a=function(){var e=JSON.parse('{"$":"dollar","%":"percent","&":"and","<":"less",">":"greater","|":"or","¢":"cent","£":"pound","¤":"currency","¥":"yen","©":"(c)","ª":"a","®":"(r)","º":"o","À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","Æ":"AE","Ç":"C","È":"E","É":"E","Ê":"E","Ë":"E","Ì":"I","Í":"I","Î":"I","Ï":"I","Ð":"D","Ñ":"N","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","Ù":"U","Ú":"U","Û":"U","Ü":"U","Ý":"Y","Þ":"TH","ß":"ss","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","æ":"ae","ç":"c","è":"e","é":"e","ê":"e","ë":"e","ì":"i","í":"i","î":"i","ï":"i","ð":"d","ñ":"n","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","ù":"u","ú":"u","û":"u","ü":"u","ý":"y","þ":"th","ÿ":"y","Ā":"A","ā":"a","Ă":"A","ă":"a","Ą":"A","ą":"a","Ć":"C","ć":"c","Č":"C","č":"c","Ď":"D","ď":"d","Đ":"DJ","đ":"dj","Ē":"E","ē":"e","Ė":"E","ė":"e","Ę":"e","ę":"e","Ě":"E","ě":"e","Ğ":"G","ğ":"g","Ģ":"G","ģ":"g","Ĩ":"I","ĩ":"i","Ī":"i","ī":"i","Į":"I","į":"i","İ":"I","ı":"i","Ķ":"k","ķ":"k","Ļ":"L","ļ":"l","Ľ":"L","ľ":"l","Ł":"L","ł":"l","Ń":"N","ń":"n","Ņ":"N","ņ":"n","Ň":"N","ň":"n","Ō":"O","ō":"o","Ő":"O","ő":"o","Œ":"OE","œ":"oe","Ŕ":"R","ŕ":"r","Ř":"R","ř":"r","Ś":"S","ś":"s","Ş":"S","ş":"s","Š":"S","š":"s","Ţ":"T","ţ":"t","Ť":"T","ť":"t","Ũ":"U","ũ":"u","Ū":"u","ū":"u","Ů":"U","ů":"u","Ű":"U","ű":"u","Ų":"U","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","ź":"z","Ż":"Z","ż":"z","Ž":"Z","ž":"z","Ə":"E","ƒ":"f","Ơ":"O","ơ":"o","Ư":"U","ư":"u","ǈ":"LJ","ǉ":"lj","ǋ":"NJ","ǌ":"nj","Ș":"S","ș":"s","Ț":"T","ț":"t","ə":"e","˚":"o","Ά":"A","Έ":"E","Ή":"H","Ί":"I","Ό":"O","Ύ":"Y","Ώ":"W","ΐ":"i","Α":"A","Β":"B","Γ":"G","Δ":"D","Ε":"E","Ζ":"Z","Η":"H","Θ":"8","Ι":"I","Κ":"K","Λ":"L","Μ":"M","Ν":"N","Ξ":"3","Ο":"O","Π":"P","Ρ":"R","Σ":"S","Τ":"T","Υ":"Y","Φ":"F","Χ":"X","Ψ":"PS","Ω":"W","Ϊ":"I","Ϋ":"Y","ά":"a","έ":"e","ή":"h","ί":"i","ΰ":"y","α":"a","β":"b","γ":"g","δ":"d","ε":"e","ζ":"z","η":"h","θ":"8","ι":"i","κ":"k","λ":"l","μ":"m","ν":"n","ξ":"3","ο":"o","π":"p","ρ":"r","ς":"s","σ":"s","τ":"t","υ":"y","φ":"f","χ":"x","ψ":"ps","ω":"w","ϊ":"i","ϋ":"y","ό":"o","ύ":"y","ώ":"w","Ё":"Yo","Ђ":"DJ","Є":"Ye","І":"I","Ї":"Yi","Ј":"J","Љ":"LJ","Њ":"NJ","Ћ":"C","Џ":"DZ","А":"A","Б":"B","В":"V","Г":"G","Д":"D","Е":"E","Ж":"Zh","З":"Z","И":"I","Й":"J","К":"K","Л":"L","М":"M","Н":"N","О":"O","П":"P","Р":"R","С":"S","Т":"T","У":"U","Ф":"F","Х":"H","Ц":"C","Ч":"Ch","Ш":"Sh","Щ":"Sh","Ъ":"U","Ы":"Y","Ь":"","Э":"E","Ю":"Yu","Я":"Ya","а":"a","б":"b","в":"v","г":"g","д":"d","е":"e","ж":"zh","з":"z","и":"i","й":"j","к":"k","л":"l","м":"m","н":"n","о":"o","п":"p","р":"r","с":"s","т":"t","у":"u","ф":"f","х":"h","ц":"c","ч":"ch","ш":"sh","щ":"sh","ъ":"u","ы":"y","ь":"","э":"e","ю":"yu","я":"ya","ё":"yo","ђ":"dj","є":"ye","і":"i","ї":"yi","ј":"j","љ":"lj","њ":"nj","ћ":"c","ѝ":"u","џ":"dz","Ґ":"G","ґ":"g","Ғ":"GH","ғ":"gh","Қ":"KH","қ":"kh","Ң":"NG","ң":"ng","Ү":"UE","ү":"ue","Ұ":"U","ұ":"u","Һ":"H","һ":"h","Ә":"AE","ә":"ae","Ө":"OE","ө":"oe","Ա":"A","Բ":"B","Գ":"G","Դ":"D","Ե":"E","Զ":"Z","Է":"E\'","Ը":"Y\'","Թ":"T\'","Ժ":"JH","Ի":"I","Լ":"L","Խ":"X","Ծ":"C\'","Կ":"K","Հ":"H","Ձ":"D\'","Ղ":"GH","Ճ":"TW","Մ":"M","Յ":"Y","Ն":"N","Շ":"SH","Չ":"CH","Պ":"P","Ջ":"J","Ռ":"R\'","Ս":"S","Վ":"V","Տ":"T","Ր":"R","Ց":"C","Փ":"P\'","Ք":"Q\'","Օ":"O\'\'","Ֆ":"F","և":"EV","ء":"a","آ":"aa","أ":"a","ؤ":"u","إ":"i","ئ":"e","ا":"a","ب":"b","ة":"h","ت":"t","ث":"th","ج":"j","ح":"h","خ":"kh","د":"d","ذ":"th","ر":"r","ز":"z","س":"s","ش":"sh","ص":"s","ض":"dh","ط":"t","ظ":"z","ع":"a","غ":"gh","ف":"f","ق":"q","ك":"k","ل":"l","م":"m","ن":"n","ه":"h","و":"w","ى":"a","ي":"y","ً":"an","ٌ":"on","ٍ":"en","َ":"a","ُ":"u","ِ":"e","ْ":"","٠":"0","١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","پ":"p","چ":"ch","ژ":"zh","ک":"k","گ":"g","ی":"y","۰":"0","۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9","฿":"baht","ა":"a","ბ":"b","გ":"g","დ":"d","ე":"e","ვ":"v","ზ":"z","თ":"t","ი":"i","კ":"k","ლ":"l","მ":"m","ნ":"n","ო":"o","პ":"p","ჟ":"zh","რ":"r","ს":"s","ტ":"t","უ":"u","ფ":"f","ქ":"k","ღ":"gh","ყ":"q","შ":"sh","ჩ":"ch","ც":"ts","ძ":"dz","წ":"ts","ჭ":"ch","ხ":"kh","ჯ":"j","ჰ":"h","Ṣ":"S","ṣ":"s","Ẁ":"W","ẁ":"w","Ẃ":"W","ẃ":"w","Ẅ":"W","ẅ":"w","ẞ":"SS","Ạ":"A","ạ":"a","Ả":"A","ả":"a","Ấ":"A","ấ":"a","Ầ":"A","ầ":"a","Ẩ":"A","ẩ":"a","Ẫ":"A","ẫ":"a","Ậ":"A","ậ":"a","Ắ":"A","ắ":"a","Ằ":"A","ằ":"a","Ẳ":"A","ẳ":"a","Ẵ":"A","ẵ":"a","Ặ":"A","ặ":"a","Ẹ":"E","ẹ":"e","Ẻ":"E","ẻ":"e","Ẽ":"E","ẽ":"e","Ế":"E","ế":"e","Ề":"E","ề":"e","Ể":"E","ể":"e","Ễ":"E","ễ":"e","Ệ":"E","ệ":"e","Ỉ":"I","ỉ":"i","Ị":"I","ị":"i","Ọ":"O","ọ":"o","Ỏ":"O","ỏ":"o","Ố":"O","ố":"o","Ồ":"O","ồ":"o","Ổ":"O","ổ":"o","Ỗ":"O","ỗ":"o","Ộ":"O","ộ":"o","Ớ":"O","ớ":"o","Ờ":"O","ờ":"o","Ở":"O","ở":"o","Ỡ":"O","ỡ":"o","Ợ":"O","ợ":"o","Ụ":"U","ụ":"u","Ủ":"U","ủ":"u","Ứ":"U","ứ":"u","Ừ":"U","ừ":"u","Ử":"U","ử":"u","Ữ":"U","ữ":"u","Ự":"U","ự":"u","Ỳ":"Y","ỳ":"y","Ỵ":"Y","ỵ":"y","Ỷ":"Y","ỷ":"y","Ỹ":"Y","ỹ":"y","–":"-","‘":"\'","’":"\'","“":"\\"","”":"\\"","„":"\\"","†":"+","•":"*","…":"...","₠":"ecu","₢":"cruzeiro","₣":"french franc","₤":"lira","₥":"mill","₦":"naira","₧":"peseta","₨":"rupee","₩":"won","₪":"new shequel","₫":"dong","€":"euro","₭":"kip","₮":"tugrik","₯":"drachma","₰":"penny","₱":"peso","₲":"guarani","₳":"austral","₴":"hryvnia","₵":"cedi","₸":"kazakhstani tenge","₹":"indian rupee","₺":"turkish lira","₽":"russian ruble","₿":"bitcoin","℠":"sm","™":"tm","∂":"d","∆":"delta","∑":"sum","∞":"infinity","♥":"love","元":"yuan","円":"yen","﷼":"rial","ﻵ":"laa","ﻷ":"laa","ﻹ":"lai","ﻻ":"la"}'),a=JSON.parse('{"bg":{"Й":"Y","Ц":"Ts","Щ":"Sht","Ъ":"A","Ь":"Y","й":"y","ц":"ts","щ":"sht","ъ":"a","ь":"y"},"de":{"Ä":"AE","ä":"ae","Ö":"OE","ö":"oe","Ü":"UE","ü":"ue","ß":"ss","%":"prozent","&":"und","|":"oder","∑":"summe","∞":"unendlich","♥":"liebe"},"es":{"%":"por ciento","&":"y","<":"menor que",">":"mayor que","|":"o","¢":"centavos","£":"libras","¤":"moneda","₣":"francos","∑":"suma","∞":"infinito","♥":"amor"},"fr":{"%":"pourcent","&":"et","<":"plus petit",">":"plus grand","|":"ou","¢":"centime","£":"livre","¤":"devise","₣":"franc","∑":"somme","∞":"infini","♥":"amour"},"pt":{"%":"porcento","&":"e","<":"menor",">":"maior","|":"ou","¢":"centavo","∑":"soma","£":"libra","∞":"infinito","♥":"amor"},"uk":{"И":"Y","и":"y","Й":"Y","й":"y","Ц":"Ts","ц":"ts","Х":"Kh","х":"kh","Щ":"Shch","щ":"shch","Г":"H","г":"h"},"vi":{"Đ":"D","đ":"d"},"da":{"Ø":"OE","ø":"oe","Å":"AA","å":"aa","%":"procent","&":"og","|":"eller","$":"dollar","<":"mindre end",">":"større end"},"nb":{"&":"og","Å":"AA","Æ":"AE","Ø":"OE","å":"aa","æ":"ae","ø":"oe"},"it":{"&":"e"},"nl":{"&":"en"},"sv":{"&":"och","Å":"AA","Ä":"AE","Ö":"OE","å":"aa","ä":"ae","ö":"oe"}}')
function n(n,i){if("string"!=typeof n)throw new Error("slugify: string argument expected")
var r=a[(i="string"==typeof i?{replacement:i}:i||{}).locale]||{},t=void 0===i.replacement?"-":i.replacement,o=void 0===i.trim||i.trim,s=n.normalize().split("").reduce((function(a,n){var o=r[n]||e[n]||n
return o===t&&(o=" "),a+o.replace(i.remove||/[^\w\s$*_+~.()'"!\-:@]+/g,"")}),"")
return i.strict&&(s=s.replace(/[^A-Za-z0-9\s]/g,"")),o&&(s=s.trim()),s=s.replace(/\s+/g,t),i.lower&&(s=s.toLowerCase()),s}return n.extend=function(a){Object.assign(e,a)},n},e.exports=a(),e.exports.default=a()},7965:function(e,a){var n,i
n=function(){"use strict"
var e=function(){function e(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(a,n,i){return n&&e(a.prototype,n),i&&e(a,i),a}}()
function a(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}var n=void 0
void 0===n&&(n={modules:[]})
var i=null
function r(e){var a=e.getBoundingClientRect(),n={}
for(var i in a)n[i]=a[i]
try{if(e.ownerDocument!==document){var t=e.ownerDocument.defaultView.frameElement
if(t){var o=r(t)
n.top+=o.top,n.bottom+=o.top,n.left+=o.left,n.right+=o.left}}}catch(e){}return n}function t(e){var a=(getComputedStyle(e)||{}).position,n=[]
if("fixed"===a)return[e]
for(var i=e;(i=i.parentNode)&&i&&1===i.nodeType;){var r=void 0
try{r=getComputedStyle(i)}catch(e){}if(null==r)return n.push(i),n
var t=r,o=t.overflow,s=t.overflowX,l=t.overflowY;/(auto|scroll|overlay)/.test(o+l+s)&&("absolute"!==a||["relative","absolute","fixed"].indexOf(r.position)>=0)&&n.push(i)}return n.push(e.ownerDocument.body),e.ownerDocument!==document&&n.push(e.ownerDocument.defaultView),n}var o,s=(o=0,function(){return++o}),l={}
function u(){i&&document.body.removeChild(i),i=null}function c(e){var a=void 0
e===document?(a=document,e=document.documentElement):a=e.ownerDocument
var n=a.documentElement,t=r(e),o=function(){var e=i
e&&document.body.contains(e)||((e=document.createElement("div")).setAttribute("data-tether-id",s()),m(e.style,{top:0,left:0,position:"absolute"}),document.body.appendChild(e),i=e)
var a=e.getAttribute("data-tether-id")
return void 0===l[a]&&(l[a]=r(e),A((function(){delete l[a]}))),l[a]}()
return t.top-=o.top,t.left-=o.left,void 0===t.width&&(t.width=document.body.scrollWidth-t.left-t.right),void 0===t.height&&(t.height=document.body.scrollHeight-t.top-t.bottom),t.top=t.top-n.clientTop,t.left=t.left-n.clientLeft,t.right=a.body.clientWidth-t.width-t.left,t.bottom=a.body.clientHeight-t.height-t.top,t}function d(e){return e.offsetParent||document.documentElement}var h=null
function p(){if(h)return h
var e=document.createElement("div")
e.style.width="100%",e.style.height="200px"
var a=document.createElement("div")
m(a.style,{position:"absolute",top:0,left:0,pointerEvents:"none",visibility:"hidden",width:"200px",height:"150px",overflow:"hidden"}),a.appendChild(e),document.body.appendChild(a)
var n=e.offsetWidth
a.style.overflow="scroll"
var i=e.offsetWidth
n===i&&(i=a.clientWidth),document.body.removeChild(a)
var r=n-i
return h={width:r,height:r}}function m(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],a=[]
return Array.prototype.push.apply(a,arguments),a.slice(1).forEach((function(a){if(a)for(var n in a)({}).hasOwnProperty.call(a,n)&&(e[n]=a[n])})),e}function f(e,a){if(void 0!==e.classList)a.split(" ").forEach((function(a){a.trim()&&e.classList.remove(a)}))
else{var n=new RegExp("(^| )"+a.split(" ").join("|")+"( |$)","gi"),i=k(e).replace(n," ")
y(e,i)}}function v(e,a){if(void 0!==e.classList)a.split(" ").forEach((function(a){a.trim()&&e.classList.add(a)}))
else{f(e,a)
var n=k(e)+" "+a
y(e,n)}}function g(e,a){if(void 0!==e.classList)return e.classList.contains(a)
var n=k(e)
return new RegExp("(^| )"+a+"( |$)","gi").test(n)}function k(e){return e.className instanceof e.ownerDocument.defaultView.SVGAnimatedString?e.className.baseVal:e.className}function y(e,a){e.setAttribute("class",a)}function b(e,a,n){n.forEach((function(n){-1===a.indexOf(n)&&g(e,n)&&f(e,n)})),a.forEach((function(a){g(e,a)||v(e,a)}))}var S=[],A=function(e){S.push(e)},M=function(){for(var e=void 0;e=S.pop();)e()},T=function(){function n(){a(this,n)}return e(n,[{key:"on",value:function(e,a,n){var i=!(arguments.length<=3||void 0===arguments[3])&&arguments[3]
void 0===this.bindings&&(this.bindings={}),void 0===this.bindings[e]&&(this.bindings[e]=[]),this.bindings[e].push({handler:a,ctx:n,once:i})}},{key:"once",value:function(e,a,n){this.on(e,a,n,!0)}},{key:"off",value:function(e,a){if(void 0!==this.bindings&&void 0!==this.bindings[e])if(void 0===a)delete this.bindings[e]
else for(var n=0;n<this.bindings[e].length;)this.bindings[e][n].handler===a?this.bindings[e].splice(n,1):++n}},{key:"trigger",value:function(e){if(void 0!==this.bindings&&this.bindings[e]){for(var a=0,n=arguments.length,i=Array(n>1?n-1:0),r=1;r<n;r++)i[r-1]=arguments[r]
for(;a<this.bindings[e].length;){var t=this.bindings[e][a],o=t.handler,s=t.ctx,l=t.once,u=s
void 0===u&&(u=this),o.apply(u,i),l?this.bindings[e].splice(a,1):++a}}}}]),n}()
n.Utils={getActualBoundingClientRect:r,getScrollParents:t,getBounds:c,getOffsetParent:d,extend:m,addClass:v,removeClass:f,hasClass:g,updateClasses:b,defer:A,flush:M,uniqueId:s,Evented:T,getScrollBarSize:p,removeUtilElements:u}
var _=function(e,a){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,a){var n=[],i=!0,r=!1,t=void 0
try{for(var o,s=e[Symbol.iterator]();!(i=(o=s.next()).done)&&(n.push(o.value),!a||n.length!==a);i=!0);}catch(e){r=!0,t=e}finally{try{!i&&s.return&&s.return()}finally{if(r)throw t}}return n}(e,a)
throw new TypeError("Invalid attempt to destructure non-iterable instance")},w=(e=function(){function e(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(a,n,i){return n&&e(a.prototype,n),i&&e(a,i),a}}(),function(e,a,n){for(var i=!0;i;){var r=e,t=a,o=n
i=!1,null===r&&(r=Function.prototype)
var s=Object.getOwnPropertyDescriptor(r,t)
if(void 0!==s){if("value"in s)return s.value
var l=s.get
if(void 0===l)return
return l.call(o)}var u=Object.getPrototypeOf(r)
if(null===u)return
e=u,a=t,n=o,i=!0,s=u=void 0}})
function a(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}if(void 0===n)throw new Error("You must include the utils.js file before tether.js")
var t=(Z=n.Utils).getScrollParents,d=(c=Z.getBounds,Z.getOffsetParent),v=(m=Z.extend,Z.addClass),f=Z.removeClass,p=(b=Z.updateClasses,A=Z.defer,M=Z.flush,Z.getScrollBarSize),u=Z.removeUtilElements
function j(e,a){var n=arguments.length<=2||void 0===arguments[2]?1:arguments[2]
return e+n>=a&&a>=e-n}var E,N,B,P,L=function(){if("undefined"==typeof document)return""
for(var e=document.createElement("div"),a=["transform","WebkitTransform","OTransform","MozTransform","msTransform"],n=0;n<a.length;++n){var i=a[n]
if(void 0!==e.style[i])return i}}(),D=[],x=function(){D.forEach((function(e){e.position(!1)})),M()}
function C(){return"object"==typeof performance&&"function"==typeof performance.now?performance.now():+new Date}E=null,N=null,B=null,P=function e(){if(void 0!==N&&N>16)return N=Math.min(N-16,250),void(B=setTimeout(e,250))
void 0!==E&&C()-E<10||(null!=B&&(clearTimeout(B),B=null),E=C(),x(),N=C()-E)},"undefined"!=typeof window&&void 0!==window.addEventListener&&["resize","scroll","touchmove"].forEach((function(e){window.addEventListener(e,P)}))
var K={center:"center",left:"right",right:"left"},R={middle:"middle",top:"bottom",bottom:"top"},z={top:0,left:0,middle:"50%",center:"50%",bottom:"100%",right:"100%"},O=function(e,a){var n=e.left,i=e.top
return"auto"===n&&(n=K[a.left]),"auto"===i&&(i=R[a.top]),{left:n,top:i}},I=function(e){var a=e.left,n=e.top
return void 0!==z[e.left]&&(a=z[e.left]),void 0!==z[e.top]&&(n=z[e.top]),{left:a,top:n}}
function V(){for(var e={top:0,left:0},a=arguments.length,n=Array(a),i=0;i<a;i++)n[i]=arguments[i]
return n.forEach((function(a){var n=a.top,i=a.left
"string"==typeof n&&(n=parseFloat(n,10)),"string"==typeof i&&(i=parseFloat(i,10)),e.top+=n,e.left+=i})),e}function G(e,a){return"string"==typeof e.left&&-1!==e.left.indexOf("%")&&(e.left=parseFloat(e.left,10)/100*a.width),"string"==typeof e.top&&-1!==e.top.indexOf("%")&&(e.top=parseFloat(e.top,10)/100*a.height),e}var H=function(e){var a=e.split(" "),n=_(a,2)
return{top:n[0],left:n[1]}},F=H,J=function(i){function r(e){var i=this
a(this,r),w(Object.getPrototypeOf(r.prototype),"constructor",this).call(this),this.position=this.position.bind(this),D.push(this),this.history=[],this.setOptions(e,!1),n.modules.forEach((function(e){void 0!==e.initialize&&e.initialize.call(i)})),this.position()}return function(e,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function, not "+typeof a)
e.prototype=Object.create(a&&a.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),a&&(Object.setPrototypeOf?Object.setPrototypeOf(e,a):e.__proto__=a)}(r,i),e(r,[{key:"getClass",value:function(){var e=arguments.length<=0||void 0===arguments[0]?"":arguments[0],a=this.options.classes
return void 0!==a&&a[e]?this.options.classes[e]:this.options.classPrefix?this.options.classPrefix+"-"+e:e}},{key:"setOptions",value:function(e){var a=this,n=arguments.length<=1||void 0===arguments[1]||arguments[1],i={offset:"0 0",targetOffset:"0 0",targetAttachment:"auto auto",classPrefix:"tether"}
this.options=m(i,e)
var r=this.options,o=r.element,s=r.target,l=r.targetModifier
if(this.element=o,this.target=s,this.targetModifier=l,"viewport"===this.target?(this.target=document.body,this.targetModifier="visible"):"scroll-handle"===this.target&&(this.target=document.body,this.targetModifier="scroll-handle"),["element","target"].forEach((function(e){if(void 0===a[e])throw new Error("Tether Error: Both element and target must be defined")
void 0!==a[e].jquery?a[e]=a[e][0]:"string"==typeof a[e]&&(a[e]=document.querySelector(a[e]))})),v(this.element,this.getClass("element")),!1!==this.options.addTargetClasses&&v(this.target,this.getClass("target")),!this.options.attachment)throw new Error("Tether Error: You must provide an attachment")
this.targetAttachment=F(this.options.targetAttachment),this.attachment=F(this.options.attachment),this.offset=H(this.options.offset),this.targetOffset=H(this.options.targetOffset),void 0!==this.scrollParents&&this.disable(),"scroll-handle"===this.targetModifier?this.scrollParents=[this.target]:this.scrollParents=t(this.target),!1!==this.options.enabled&&this.enable(n)}},{key:"getTargetBounds",value:function(){if(void 0===this.targetModifier)return c(this.target)
if("visible"===this.targetModifier)return this.target===document.body?{top:pageYOffset,left:pageXOffset,height:innerHeight,width:innerWidth}:((t={height:(e=c(this.target)).height,width:e.width,top:e.top,left:e.left}).height=Math.min(t.height,e.height-(pageYOffset-e.top)),t.height=Math.min(t.height,e.height-(e.top+e.height-(pageYOffset+innerHeight))),t.height=Math.min(innerHeight,t.height),t.height-=2,t.width=Math.min(t.width,e.width-(pageXOffset-e.left)),t.width=Math.min(t.width,e.width-(e.left+e.width-(pageXOffset+innerWidth))),t.width=Math.min(innerWidth,t.width),t.width-=2,t.top<pageYOffset&&(t.top=pageYOffset),t.left<pageXOffset&&(t.left=pageXOffset),t)
if("scroll-handle"===this.targetModifier){var e=void 0,a=this.target
a===document.body?(a=document.documentElement,e={left:pageXOffset,top:pageYOffset,height:innerHeight,width:innerWidth}):e=c(a)
var n=getComputedStyle(a),i=0;(a.scrollWidth>a.clientWidth||[n.overflow,n.overflowX].indexOf("scroll")>=0||this.target!==document.body)&&(i=15)
var r=e.height-parseFloat(n.borderTopWidth)-parseFloat(n.borderBottomWidth)-i,t={width:15,height:.975*r*(r/a.scrollHeight),left:e.left+e.width-parseFloat(n.borderLeftWidth)-15},o=0
r<408&&this.target===document.body&&(o=-11e-5*Math.pow(r,2)-.00727*r+22.58),this.target!==document.body&&(t.height=Math.max(t.height,24))
var s=this.target.scrollTop/(a.scrollHeight-r)
return t.top=s*(r-t.height-o)+e.top+parseFloat(n.borderTopWidth),this.target===document.body&&(t.height=Math.max(t.height,24)),t}}},{key:"clearCache",value:function(){this._cache={}}},{key:"cache",value:function(e,a){return void 0===this._cache&&(this._cache={}),void 0===this._cache[e]&&(this._cache[e]=a.call(this)),this._cache[e]}},{key:"enable",value:function(){var e=this,a=arguments.length<=0||void 0===arguments[0]||arguments[0]
!1!==this.options.addTargetClasses&&v(this.target,this.getClass("enabled")),v(this.element,this.getClass("enabled")),this.enabled=!0,this.scrollParents.forEach((function(a){a!==e.target.ownerDocument&&a.addEventListener("scroll",e.position)})),a&&this.position()}},{key:"disable",value:function(){var e=this
f(this.target,this.getClass("enabled")),f(this.element,this.getClass("enabled")),this.enabled=!1,void 0!==this.scrollParents&&this.scrollParents.forEach((function(a){a.removeEventListener("scroll",e.position)}))}},{key:"destroy",value:function(){var e=this
this.disable(),D.forEach((function(a,n){a===e&&D.splice(n,1)})),0===D.length&&u()}},{key:"updateAttachClasses",value:function(e,a){var n=this
e=e||this.attachment,a=a||this.targetAttachment,void 0!==this._addAttachClasses&&this._addAttachClasses.length&&this._addAttachClasses.splice(0,this._addAttachClasses.length),void 0===this._addAttachClasses&&(this._addAttachClasses=[])
var i=this._addAttachClasses
e.top&&i.push(this.getClass("element-attached")+"-"+e.top),e.left&&i.push(this.getClass("element-attached")+"-"+e.left),a.top&&i.push(this.getClass("target-attached")+"-"+a.top),a.left&&i.push(this.getClass("target-attached")+"-"+a.left)
var r=[];["left","top","bottom","right","middle","center"].forEach((function(e){r.push(n.getClass("element-attached")+"-"+e),r.push(n.getClass("target-attached")+"-"+e)})),A((function(){void 0!==n._addAttachClasses&&(b(n.element,n._addAttachClasses,r),!1!==n.options.addTargetClasses&&b(n.target,n._addAttachClasses,r),delete n._addAttachClasses)}))}},{key:"position",value:function(){var e=this,a=arguments.length<=0||void 0===arguments[0]||arguments[0]
if(this.enabled){this.clearCache()
var i=O(this.targetAttachment,this.attachment)
this.updateAttachClasses(this.attachment,i)
var r=this.cache("element-bounds",(function(){return c(e.element)})),t=r.width,o=r.height
if(0===t&&0===o&&void 0!==this.lastSize){var s=this.lastSize
t=s.width,o=s.height}else this.lastSize={width:t,height:o}
var l=this.cache("target-bounds",(function(){return e.getTargetBounds()})),u=l,h=G(I(this.attachment),{width:t,height:o}),m=G(I(i),u),f=G(this.offset,{width:t,height:o}),v=G(this.targetOffset,u)
h=V(h,f),m=V(m,v)
for(var g=l.left+m.left-h.left,k=l.top+m.top-h.top,y=0;y<n.modules.length;++y){var b=n.modules[y].position.call(this,{left:g,top:k,targetAttachment:i,targetPos:l,elementPos:r,offset:h,targetOffset:m,manualOffset:f,manualTargetOffset:v,scrollbarSize:_,attachment:this.attachment})
if(!1===b)return!1
void 0!==b&&"object"==typeof b&&(k=b.top,g=b.left)}var S={page:{top:k,left:g},viewport:{top:k-pageYOffset,bottom:pageYOffset-k-o+innerHeight,left:g-pageXOffset,right:pageXOffset-g-t+innerWidth}},A=this.target.ownerDocument,T=A.defaultView,_=void 0
return T.innerHeight>A.documentElement.clientHeight&&(_=this.cache("scrollbar-size",p),S.viewport.bottom-=_.height),T.innerWidth>A.documentElement.clientWidth&&(_=this.cache("scrollbar-size",p),S.viewport.right-=_.width),-1!==["","static"].indexOf(A.body.style.position)&&-1!==["","static"].indexOf(A.body.parentElement.style.position)||(S.page.bottom=A.body.scrollHeight-k-o,S.page.right=A.body.scrollWidth-g-t),void 0!==this.options.optimizations&&!1!==this.options.optimizations.moveElement&&void 0===this.targetModifier&&function(){var a=e.cache("target-offsetparent",(function(){return d(e.target)})),n=e.cache("target-offsetparent-bounds",(function(){return c(a)})),i=getComputedStyle(a),r=n,t={}
if(["Top","Left","Bottom","Right"].forEach((function(e){t[e.toLowerCase()]=parseFloat(i["border"+e+"Width"])})),n.right=A.body.scrollWidth-n.left-r.width+t.right,n.bottom=A.body.scrollHeight-n.top-r.height+t.bottom,S.page.top>=n.top+t.top&&S.page.bottom>=n.bottom&&S.page.left>=n.left+t.left&&S.page.right>=n.right){var o=a.scrollTop,s=a.scrollLeft
S.offset={top:S.page.top-n.top+o-t.top,left:S.page.left-n.left+s-t.left}}}(),this.move(S),this.history.unshift(S),this.history.length>3&&this.history.pop(),a&&M(),!0}}},{key:"move",value:function(e){var a,n,i=this
if(void 0!==this.element.parentNode){var r={}
for(var t in e)for(var o in r[t]={},e[t]){for(var s=!1,l=0;l<this.history.length;++l){var u=this.history[l]
if(void 0!==u[t]&&!j(u[t][o],e[t][o])){s=!0
break}}s||(r[t][o]=!0)}var c={top:"",left:"",right:"",bottom:""},h=function(e,a){if(!1!==(void 0!==i.options.optimizations?i.options.optimizations.gpu:null)){var n=void 0,r=void 0
e.top?(c.top=0,n=a.top):(c.bottom=0,n=-a.bottom),e.left?(c.left=0,r=a.left):(c.right=0,r=-a.right),"number"==typeof window.devicePixelRatio&&devicePixelRatio%1==0&&(r=Math.round(r*devicePixelRatio)/devicePixelRatio,n=Math.round(n*devicePixelRatio)/devicePixelRatio),c[L]="translateX("+r+"px) translateY("+n+"px)","msTransform"!==L&&(c[L]+=" translateZ(0)")}else e.top?c.top=a.top+"px":c.bottom=a.bottom+"px",e.left?c.left=a.left+"px":c.right=a.right+"px"},p=!1
if((r.page.top||r.page.bottom)&&(r.page.left||r.page.right)?(c.position="absolute",h(r.page,e.page)):(r.viewport.top||r.viewport.bottom)&&(r.viewport.left||r.viewport.right)?(c.position="fixed",h(r.viewport,e.viewport)):void 0!==r.offset&&r.offset.top&&r.offset.left?function(){c.position="absolute"
var a=i.cache("target-offsetparent",(function(){return d(i.target)}))
d(i.element)!==a&&A((function(){i.element.parentNode.removeChild(i.element),a.appendChild(i.element)})),h(r.offset,e.offset),p=!0}():(c.position="absolute",h({top:!0,left:!0},e.page)),!p)if(this.options.bodyElement)this.element.parentNode!==this.options.bodyElement&&this.options.bodyElement.appendChild(this.element)
else{for(var f=!0,v=this.element.parentNode;v&&1===v.nodeType&&"BODY"!==v.tagName&&(void 0,((n=(a=v).ownerDocument).fullscreenElement||n.webkitFullscreenElement||n.mozFullScreenElement||n.msFullscreenElement)!==a);){if("static"!==getComputedStyle(v).position){f=!1
break}v=v.parentNode}f||(this.element.parentNode.removeChild(this.element),this.element.ownerDocument.body.appendChild(this.element))}var g={},k=!1
for(var o in c){var y=c[o]
this.element.style[o]!==y&&(k=!0,g[o]=y)}k&&A((function(){m(i.element.style,g),i.trigger("repositioned")}))}}}]),r}(T)
J.modules=[],n.position=x
var U=m(J,n)
_=function(e,a){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,a){var n=[],i=!0,r=!1,t=void 0
try{for(var o,s=e[Symbol.iterator]();!(i=(o=s.next()).done)&&(n.push(o.value),!a||n.length!==a);i=!0);}catch(e){r=!0,t=e}finally{try{!i&&s.return&&s.return()}finally{if(r)throw t}}return n}(e,a)
throw new TypeError("Invalid attempt to destructure non-iterable instance")},c=(Z=n.Utils).getBounds
var m=Z.extend,W=(b=Z.updateClasses,A=Z.defer,["left","top","right","bottom"])
n.modules.push({position:function(e){var a=this,n=e.top,i=e.left,r=e.targetAttachment
if(!this.options.constraints)return!0
var t=this.cache("element-bounds",(function(){return c(a.element)})),o=t.height,s=t.width
if(0===s&&0===o&&void 0!==this.lastSize){var l=this.lastSize
s=l.width,o=l.height}var u=this.cache("target-bounds",(function(){return a.getTargetBounds()})),d=u.height,h=u.width,p=[this.getClass("pinned"),this.getClass("out-of-bounds")]
this.options.constraints.forEach((function(e){var a=e.outOfBoundsClass,n=e.pinnedClass
a&&p.push(a),n&&p.push(n)})),p.forEach((function(e){["left","top","right","bottom"].forEach((function(a){p.push(e+"-"+a)}))}))
var f=[],v=m({},r),g=m({},this.attachment)
return this.options.constraints.forEach((function(e){var t=e.to,l=e.attachment,u=e.pin
void 0===l&&(l="")
var p=void 0,m=void 0
if(l.indexOf(" ")>=0){var k=l.split(" "),y=_(k,2)
m=y[0],p=y[1]}else p=m=l
var b=function(e,a){return"scrollParent"===a?a=e.scrollParents[0]:"window"===a&&(a=[pageXOffset,pageYOffset,innerWidth+pageXOffset,innerHeight+pageYOffset]),a===document&&(a=a.documentElement),void 0!==a.nodeType&&function(){var e=a,n=c(a),i=n,r=getComputedStyle(a)
if(a=[i.left,i.top,n.width+i.left,n.height+i.top],e.ownerDocument!==document){var t=e.ownerDocument.defaultView
a[0]+=t.pageXOffset,a[1]+=t.pageYOffset,a[2]+=t.pageXOffset,a[3]+=t.pageYOffset}W.forEach((function(e,n){"Top"===(e=e[0].toUpperCase()+e.substr(1))||"Left"===e?a[n]+=parseFloat(r["border"+e+"Width"]):a[n]-=parseFloat(r["border"+e+"Width"])}))}(),a}(a,t)
"target"!==m&&"both"!==m||(n<b[1]&&"top"===v.top&&(n+=d,v.top="bottom"),n+o>b[3]&&"bottom"===v.top&&(n-=d,v.top="top")),"together"===m&&("top"===v.top&&("bottom"===g.top&&n<b[1]?(n+=d,v.top="bottom",n+=o,g.top="top"):"top"===g.top&&n+o>b[3]&&n-(o-d)>=b[1]&&(n-=o-d,v.top="bottom",g.top="bottom")),"bottom"===v.top&&("top"===g.top&&n+o>b[3]?(n-=d,v.top="top",n-=o,g.top="bottom"):"bottom"===g.top&&n<b[1]&&n+(2*o-d)<=b[3]&&(n+=o-d,v.top="top",g.top="top")),"middle"===v.top&&(n+o>b[3]&&"top"===g.top?(n-=o,g.top="bottom"):n<b[1]&&"bottom"===g.top&&(n+=o,g.top="top"))),"target"!==p&&"both"!==p||(i<b[0]&&"left"===v.left&&(i+=h,v.left="right"),i+s>b[2]&&"right"===v.left&&(i-=h,v.left="left")),"together"===p&&(i<b[0]&&"left"===v.left?"right"===g.left?(i+=h,v.left="right",i+=s,g.left="left"):"left"===g.left&&(i+=h,v.left="right",i-=s,g.left="right"):i+s>b[2]&&"right"===v.left?"left"===g.left?(i-=h,v.left="left",i-=s,g.left="right"):"right"===g.left&&(i-=h,v.left="left",i+=s,g.left="left"):"center"===v.left&&(i+s>b[2]&&"left"===g.left?(i-=s,g.left="right"):i<b[0]&&"right"===g.left&&(i+=s,g.left="left"))),"element"!==m&&"both"!==m||(n<b[1]&&"bottom"===g.top&&(n+=o,g.top="top"),n+o>b[3]&&"top"===g.top&&(n-=o,g.top="bottom")),"element"!==p&&"both"!==p||(i<b[0]&&("right"===g.left?(i+=s,g.left="left"):"center"===g.left&&(i+=s/2,g.left="left")),i+s>b[2]&&("left"===g.left?(i-=s,g.left="right"):"center"===g.left&&(i-=s/2,g.left="right"))),"string"==typeof u?u=u.split(",").map((function(e){return e.trim()})):!0===u&&(u=["top","left","right","bottom"]),u=u||[]
var S,A,M=[],T=[]
n<b[1]&&(u.indexOf("top")>=0?(n=b[1],M.push("top")):T.push("top")),n+o>b[3]&&(u.indexOf("bottom")>=0?(n=b[3]-o,M.push("bottom")):T.push("bottom")),i<b[0]&&(u.indexOf("left")>=0?(i=b[0],M.push("left")):T.push("left")),i+s>b[2]&&(u.indexOf("right")>=0?(i=b[2]-s,M.push("right")):T.push("right")),M.length&&(S=void 0!==a.options.pinnedClass?a.options.pinnedClass:a.getClass("pinned"),f.push(S),M.forEach((function(e){f.push(S+"-"+e)}))),T.length&&(A=void 0!==a.options.outOfBoundsClass?a.options.outOfBoundsClass:a.getClass("out-of-bounds"),f.push(A),T.forEach((function(e){f.push(A+"-"+e)}))),(M.indexOf("left")>=0||M.indexOf("right")>=0)&&(g.left=v.left=!1),(M.indexOf("top")>=0||M.indexOf("bottom")>=0)&&(g.top=v.top=!1),v.top===r.top&&v.left===r.left&&g.top===a.attachment.top&&g.left===a.attachment.left||(a.updateAttachClasses(g,v),a.trigger("update",{attachment:g,targetAttachment:v}))})),A((function(){!1!==a.options.addTargetClasses&&b(a.target,f,p),b(a.element,f,p)})),{top:n,left:i}}})
var Z,c=(Z=n.Utils).getBounds,b=Z.updateClasses
return A=Z.defer,n.modules.push({position:function(e){var a=this,n=e.top,i=e.left,r=this.cache("element-bounds",(function(){return c(a.element)})),t=r.height,o=r.width,s=this.getTargetBounds(),l=n+t,u=i+o,d=[]
n<=s.bottom&&l>=s.top&&["left","right"].forEach((function(e){var a=s[e]
a!==i&&a!==u||d.push(e)})),i<=s.right&&u>=s.left&&["top","bottom"].forEach((function(e){var a=s[e]
a!==n&&a!==l||d.push(e)}))
var h=[],p=[]
return h.push(this.getClass("abutted")),["left","top","right","bottom"].forEach((function(e){h.push(a.getClass("abutted")+"-"+e)})),d.length&&p.push(this.getClass("abutted")),d.forEach((function(e){p.push(a.getClass("abutted")+"-"+e)})),A((function(){!1!==a.options.addTargetClasses&&b(a.target,p,h),b(a.element,p,h)})),!0}}),_=function(e,a){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,a){var n=[],i=!0,r=!1,t=void 0
try{for(var o,s=e[Symbol.iterator]();!(i=(o=s.next()).done)&&(n.push(o.value),!a||n.length!==a);i=!0);}catch(e){r=!0,t=e}finally{try{!i&&s.return&&s.return()}finally{if(r)throw t}}return n}(e,a)
throw new TypeError("Invalid attempt to destructure non-iterable instance")},n.modules.push({position:function(e){var a=e.top,n=e.left
if(this.options.shift){var i=this.options.shift
"function"==typeof this.options.shift&&(i=this.options.shift.call(this,{top:a,left:n}))
var r=void 0,t=void 0
if("string"==typeof i){(i=i.split(" "))[1]=i[1]||i[0]
var o=_(i,2)
r=o[0],t=o[1],r=parseFloat(r,10),t=parseFloat(t,10)}else r=i.top,t=i.left
return{top:a+=r,left:n+=t}}}}),U},void 0===(i=n.apply(a,[]))||(e.exports=i)},2985:(e,a,n)=>{"use strict"
n.d(a,{ZT:()=>r,pi:()=>t,_T:()=>o,mG:()=>s,Jh:()=>l,ev:()=>u})
var i=function(e,a){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])},i(e,a)}
function r(e,a){if("function"!=typeof a&&null!==a)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null")
function n(){this.constructor=e}i(e,a),e.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}var t=function(){return t=Object.assign||function(e){for(var a,n=1,i=arguments.length;n<i;n++)for(var r in a=arguments[n])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])
return e},t.apply(this,arguments)}
function o(e,a){var n={}
for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&a.indexOf(i)<0&&(n[i]=e[i])
if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0
for(i=Object.getOwnPropertySymbols(e);r<i.length;r++)a.indexOf(i[r])<0&&Object.prototype.propertyIsEnumerable.call(e,i[r])&&(n[i[r]]=e[i[r]])}return n}function s(e,a,n,i){return new(n||(n=Promise))((function(r,t){function o(e){try{l(i.next(e))}catch(e){t(e)}}function s(e){try{l(i.throw(e))}catch(e){t(e)}}function l(e){var a
e.done?r(e.value):(a=e.value,a instanceof n?a:new n((function(e){e(a)}))).then(o,s)}l((i=i.apply(e,a||[])).next())}))}function l(e,a){var n,i,r,t,o={label:0,sent:function(){if(1&r[0])throw r[1]
return r[1]},trys:[],ops:[]}
return t={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t
function s(t){return function(s){return function(t){if(n)throw new TypeError("Generator is already executing.")
for(;o;)try{if(n=1,i&&(r=2&t[0]?i.return:t[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,t[1])).done)return r
switch(i=0,r&&(t=[2&t[0],r.value]),t[0]){case 0:case 1:r=t
break
case 4:return o.label++,{value:t[1],done:!1}
case 5:o.label++,i=t[1],t=[0]
continue
case 7:t=o.ops.pop(),o.trys.pop()
continue
default:if(!((r=(r=o.trys).length>0&&r[r.length-1])||6!==t[0]&&2!==t[0])){o=0
continue}if(3===t[0]&&(!r||t[1]>r[0]&&t[1]<r[3])){o.label=t[1]
break}if(6===t[0]&&o.label<r[1]){o.label=r[1],r=t
break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(t)
break}r[2]&&o.ops.pop(),o.trys.pop()
continue}t=a.call(e,o)}catch(e){t=[6,e],i=0}finally{n=r=0}if(5&t[0])throw t[1]
return{value:t[0]?t[1]:void 0,done:!0}}([t,s])}}}function u(e,a,n){if(n||2===arguments.length)for(var i,r=0,t=a.length;r<t;r++)!i&&r in a||(i||(i=Array.prototype.slice.call(a,0,r)),i[r]=a[r])
return e.concat(i||Array.prototype.slice.call(a))}Object.create,Object.create},6613:function(e){e.exports=function(){"use strict"
var e=Object.prototype,a=e.hasOwnProperty
function n(e,n){return a.call(e,n)}var i=/\B([A-Z])/g,r=re((function(e){return e.replace(i,"-$1").toLowerCase()})),t=/-(\w)/g,o=re((function(e){return e.replace(t,l)})),s=re((function(e){return e.length?l(0,e.charAt(0))+e.slice(1):""}))
function l(e,a){return a?a.toUpperCase():""}var u=String.prototype,c=u.startsWith||function(e){return 0===this.lastIndexOf(e,0)}
function d(e,a){return c.call(e,a)}var h=u.endsWith||function(e){return this.substr(-e.length)===e}
function p(e,a){return h.call(e,a)}var m=Array.prototype,f=function(e,a){return!!~this.indexOf(e,a)},v=u.includes||f,g=m.includes||f
function k(e,a){return e&&(L(e)?v:g).call(e,a)}var y=m.findIndex||function(e){for(var a=arguments,n=0;n<this.length;n++)if(e.call(a[1],this[n],n,this))return n
return-1}
function b(e,a){return y.call(e,a)}var S=Array.isArray
function A(e){return"function"==typeof e}function M(e){return null!==e&&"object"==typeof e}var T=e.toString
function _(e){return"[object Object]"===T.call(e)}function w(e){return M(e)&&e===e.window}function j(e){return 9===B(e)}function E(e){return B(e)>=1}function N(e){return 1===B(e)}function B(e){return!w(e)&&M(e)&&e.nodeType}function P(e){return"boolean"==typeof e}function L(e){return"string"==typeof e}function D(e){return"number"==typeof e}function x(e){return D(e)||L(e)&&!isNaN(e-parseFloat(e))}function C(e){return!(S(e)?e.length:M(e)&&Object.keys(e).length)}function K(e){return void 0===e}function R(e){return P(e)?e:"true"===e||"1"===e||""===e||"false"!==e&&"0"!==e&&e}function z(e){var a=Number(e)
return!isNaN(a)&&a}function O(e){return parseFloat(e)||0}var I=Array.from||function(e){return m.slice.call(e)}
function V(e){return G(e)[0]}function G(e){return e&&(E(e)?[e]:I(e).filter(E))||[]}function H(e){return w(e)?e:(e=V(e))?(j(e)?e:e.ownerDocument).defaultView:window}function F(e){return e?p(e,"ms")?O(e):1e3*O(e):0}function J(e,a){return e===a||M(e)&&M(a)&&Object.keys(e).length===Object.keys(a).length&&q(e,(function(e,n){return e===a[n]}))}function U(e,a,n){return e.replace(new RegExp(a+"|"+n,"g"),(function(e){return e===a?n:a}))}var W=Object.assign||function(e){for(var a=[],i=arguments.length-1;i-- >0;)a[i]=arguments[i+1]
e=Object(e)
for(var r=0;r<a.length;r++){var t=a[r]
if(null!==t)for(var o in t)n(t,o)&&(e[o]=t[o])}return e}
function Z(e){return e[e.length-1]}function q(e,a){for(var n in e)if(!1===a(e[n],n))return!1
return!0}function Q(e,a){return e.slice().sort((function(e,n){var i=e[a]
void 0===i&&(i=0)
var r=n[a]
return void 0===r&&(r=0),i>r?1:r>i?-1:0}))}function Y(e,a){var n=new Set
return e.filter((function(e){var i=e[a]
return!n.has(i)&&(n.add(i)||!0)}))}function $(e,a,n){return void 0===a&&(a=0),void 0===n&&(n=1),Math.min(Math.max(z(e)||0,a),n)}function X(){}function ee(){for(var e=[],a=arguments.length;a--;)e[a]=arguments[a]
return[["bottom","top"],["right","left"]].every((function(a){var n=a[0],i=a[1]
return Math.min.apply(Math,e.map((function(e){return e[n]})))-Math.max.apply(Math,e.map((function(e){return e[i]})))>0}))}function ae(e,a){return e.x<=a.right&&e.x>=a.left&&e.y<=a.bottom&&e.y>=a.top}var ne={ratio:function(e,a,n){var i,r="width"===a?"height":"width"
return(i={})[r]=e[a]?Math.round(n*e[r]/e[a]):e[r],i[a]=n,i},contain:function(e,a){var n=this
return q(e=W({},e),(function(i,r){return e=e[r]>a[r]?n.ratio(e,r,a[r]):e})),e},cover:function(e,a){var n=this
return q(e=this.contain(e,a),(function(i,r){return e=e[r]<a[r]?n.ratio(e,r,a[r]):e})),e}}
function ie(e,a,n,i){void 0===n&&(n=0),void 0===i&&(i=!1)
var r=(a=G(a)).length
return r?(e=x(e)?z(e):"next"===e?n+1:"previous"===e?n-1:a.indexOf(V(e)),i?$(e,0,r-1):(e%=r)<0?e+r:e):-1}function re(e){var a=Object.create(null)
return function(n){return a[n]||(a[n]=e(n))}}function te(e,a,n){if(M(a))for(var i in a)te(e,i,a[i])
else{if(K(n))return(e=V(e))&&e.getAttribute(a)
G(e).forEach((function(e){A(n)&&(n=n.call(e,te(e,a))),null===n?se(e,a):e.setAttribute(a,n)}))}}function oe(e,a){return G(e).some((function(e){return e.hasAttribute(a)}))}function se(e,a){e=G(e),a.split(" ").forEach((function(a){return e.forEach((function(e){return e.hasAttribute(a)&&e.removeAttribute(a)}))}))}function le(e,a){for(var n=0,i=[a,"data-"+a];n<i.length;n++)if(oe(e,i[n]))return te(e,i[n])}var ue="undefined"!=typeof window,ce=ue&&/msie|trident/i.test(window.navigator.userAgent),de=ue&&"rtl"===te(document.documentElement,"dir"),he=ue&&"ontouchstart"in window,pe=ue&&window.PointerEvent,me=ue&&(he||window.DocumentTouch&&document instanceof DocumentTouch||navigator.maxTouchPoints),fe=pe?"pointerdown":he?"touchstart":"mousedown",ve=pe?"pointermove":he?"touchmove":"mousemove",ge=pe?"pointerup":he?"touchend":"mouseup",ke=pe?"pointerenter":he?"":"mouseenter",ye=pe?"pointerleave":he?"":"mouseleave",be=pe?"pointercancel":"touchcancel",Se={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,menuitem:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}
function Ae(e){return G(e).some((function(e){return Se[e.tagName.toLowerCase()]}))}function Me(e){return G(e).some((function(e){return e.offsetWidth||e.offsetHeight||e.getClientRects().length}))}var Te="input,select,textarea,button"
function _e(e){return G(e).some((function(e){return Le(e,Te)}))}var we=Te+",a[href],[tabindex]"
function je(e){return Le(e,we)}function Ee(e){return(e=V(e))&&N(e.parentNode)&&e.parentNode}function Ne(e,a){return G(e).filter((function(e){return Le(e,a)}))}var Be=ue?Element.prototype:{},Pe=Be.matches||Be.webkitMatchesSelector||Be.msMatchesSelector||X
function Le(e,a){return G(e).some((function(e){return Pe.call(e,a)}))}var De=Be.closest||function(e){var a=this
do{if(Le(a,e))return a}while(a=Ee(a))}
function xe(e,a){return d(a,">")&&(a=a.slice(1)),N(e)?De.call(e,a):G(e).map((function(e){return xe(e,a)})).filter(Boolean)}function Ce(e,a){return L(a)?Le(e,a)||!!xe(e,a):e===a||(j(a)?a.documentElement:V(a)).contains(V(e))}function Ke(e,a){for(var n=[];e=Ee(e);)a&&!Le(e,a)||n.push(e)
return n}function Re(e,a){var n=(e=V(e))?G(e.children):[]
return a?Ne(n,a):n}function ze(e,a){return a?G(e).indexOf(V(a)):Re(Ee(e)).indexOf(e)}function Oe(e,a){return Ge(e,Ve(e,a))}function Ie(e,a){return He(e,Ve(e,a))}function Ve(e,a){return void 0===a&&(a=document),L(e)&&We(e)||j(a)?a:a.ownerDocument}function Ge(e,a){return V(Fe(e,a,"querySelector"))}function He(e,a){return G(Fe(e,a,"querySelectorAll"))}function Fe(e,a,n){if(void 0===a&&(a=document),!e||!L(e))return e
e=e.replace(Ue,"$1 *"),We(e)&&(e=qe(e).map((function(e){var n=a
if("!"===e[0]){var i=e.substr(1).trim().split(" ")
n=xe(Ee(a),i[0]),e=i.slice(1).join(" ").trim()}if("-"===e[0]){var r=e.substr(1).trim().split(" "),t=(n||a).previousElementSibling
n=Le(t,e.substr(1))?t:null,e=r.slice(1).join(" ")}return n?function(e){for(var a=[];e.parentNode;){var n=te(e,"id")
if(n){a.unshift("#"+Ye(n))
break}var i=e.tagName
"HTML"!==i&&(i+=":nth-child("+(ze(e)+1)+")"),a.unshift(i),e=e.parentNode}return a.join(" > ")}(n)+" "+e:null})).filter(Boolean).join(","),a=document)
try{return a[n](e)}catch(e){return null}}var Je=/(^|[^\\],)\s*[!>+~-]/,Ue=/([!>+~-])(?=\s+[!>+~-]|\s*$)/g,We=re((function(e){return e.match(Je)})),Ze=/.*?[^\\](?:,|$)/g,qe=re((function(e){return e.match(Ze).map((function(e){return e.replace(/,$/,"").trim()}))})),Qe=ue&&window.CSS&&CSS.escape||function(e){return e.replace(/([^\x7f-\uFFFF\w-])/g,(function(e){return"\\"+e}))}
function Ye(e){return L(e)?Qe.call(null,e):""}function $e(){for(var e=[],a=arguments.length;a--;)e[a]=arguments[a]
var n=ia(e),i=n[0],r=n[1],t=n[2],o=n[3],s=n[4]
return i=ca(i),o.length>1&&(o=ta(o)),s&&s.self&&(o=oa(o)),t&&(o=ra(t,o)),s=sa(s),r.split(" ").forEach((function(e){return i.forEach((function(a){return a.addEventListener(e,o,s)}))})),function(){return Xe(i,r,o,s)}}function Xe(e,a,n,i){void 0===i&&(i=!1),i=sa(i),e=ca(e),a.split(" ").forEach((function(a){return e.forEach((function(e){return e.removeEventListener(a,n,i)}))}))}function ea(){for(var e=[],a=arguments.length;a--;)e[a]=arguments[a]
var n=ia(e),i=n[0],r=n[1],t=n[2],o=n[3],s=n[4],l=n[5],u=$e(i,r,t,(function(e){var a=!l||l(e)
a&&(u(),o(e,a))}),s)
return u}function aa(e,a,n){return ca(e).reduce((function(e,i){return e&&i.dispatchEvent(na(a,!0,!0,n))}),!0)}function na(e,a,n,i){if(void 0===a&&(a=!0),void 0===n&&(n=!1),L(e)){var r=document.createEvent("CustomEvent")
r.initCustomEvent(e,a,n,i),e=r}return e}function ia(e){return A(e[2])&&e.splice(2,0,!1),e}function ra(e,a){var n=this
return function(i){var r=">"===e[0]?He(e,i.currentTarget).reverse().filter((function(e){return Ce(i.target,e)}))[0]:xe(i.target,e)
r&&(i.current=r,a.call(n,i))}}function ta(e){return function(a){return S(a.detail)?e.apply(void 0,[a].concat(a.detail)):e(a)}}function oa(e){return function(a){if(a.target===a.currentTarget||a.target===a.current)return e.call(null,a)}}function sa(e){return e&&ce&&!P(e)?!!e.capture:e}function la(e){return e&&"addEventListener"in e}function ua(e){return la(e)?e:V(e)}function ca(e){return S(e)?e.map(ua).filter(Boolean):L(e)?He(e):la(e)?[e]:G(e)}function da(e){return"touch"===e.pointerType||!!e.touches}function ha(e){var a=e.touches,n=e.changedTouches,i=a&&a[0]||n&&n[0]||e
return{x:i.clientX,y:i.clientY}}var pa=ue&&window.Promise||va,ma=function(){var e=this
this.promise=new pa((function(a,n){e.reject=n,e.resolve=a}))},fa=ue&&window.setImmediate||setTimeout
function va(e){this.state=2,this.value=void 0,this.deferred=[]
var a=this
try{e((function(e){a.resolve(e)}),(function(e){a.reject(e)}))}catch(e){a.reject(e)}}va.reject=function(e){return new va((function(a,n){n(e)}))},va.resolve=function(e){return new va((function(a,n){a(e)}))},va.all=function(e){return new va((function(a,n){var i=[],r=0
function t(n){return function(t){i[n]=t,(r+=1)===e.length&&a(i)}}0===e.length&&a(i)
for(var o=0;o<e.length;o+=1)va.resolve(e[o]).then(t(o),n)}))},va.race=function(e){return new va((function(a,n){for(var i=0;i<e.length;i+=1)va.resolve(e[i]).then(a,n)}))}
var ga=va.prototype
function ka(e,a){var n=W({data:null,method:"GET",headers:{},xhr:new XMLHttpRequest,beforeSend:X,responseType:""},a)
return pa.resolve().then((function(){return n.beforeSend(n)})).then((function(){return function(e,a){return new pa((function(n,i){var r=a.xhr
for(var t in a)if(t in r)try{r[t]=a[t]}catch(e){}for(var o in r.open(a.method.toUpperCase(),e),a.headers)r.setRequestHeader(o,a.headers[o])
$e(r,"load",(function(){0===r.status||r.status>=200&&r.status<300||304===r.status?("json"===a.responseType&&L(r.response)&&(r=W(function(e){var a={}
for(var n in e)a[n]=e[n]
return a}(r),{response:JSON.parse(r.response)})),n(r)):i(W(Error(r.statusText),{xhr:r,status:r.status}))})),$e(r,"error",(function(){return i(W(Error("Network Error"),{xhr:r}))})),$e(r,"timeout",(function(){return i(W(Error("Network Timeout"),{xhr:r}))})),r.send(a.data)}))}(e,n)}))}function ya(e,a,n){return new pa((function(i,r){var t=new Image
t.onerror=function(e){return r(e)},t.onload=function(){return i(t)},n&&(t.sizes=n),a&&(t.srcset=a),t.src=e}))}function ba(e){return(e=xa(e)).innerHTML="",e}function Sa(e,a){return e=xa(e),K(a)?e.innerHTML:Aa(e.hasChildNodes()?ba(e):e,a)}function Aa(e,a){return e=xa(e),_a(a,(function(a){return e.appendChild(a)}))}function Ma(e,a){return e=xa(e),_a(a,(function(a){return e.parentNode.insertBefore(a,e)}))}function Ta(e,a){return e=xa(e),_a(a,(function(a){return e.nextSibling?Ma(e.nextSibling,a):Aa(e.parentNode,a)}))}function _a(e,a){return(e=L(e)?La(e):e)?"length"in e?G(e).map(a):a(e):null}function wa(e){G(e).forEach((function(e){return e.parentNode&&e.parentNode.removeChild(e)}))}function ja(e,a){for(a=V(Ma(e,a));a.firstChild;)a=a.firstChild
return Aa(a,e),a}function Ea(e,a){return G(G(e).map((function(e){return e.hasChildNodes?ja(G(e.childNodes),a):Aa(e,a)})))}function Na(e){G(e).map(Ee).filter((function(e,a,n){return n.indexOf(e)===a})).forEach((function(e){Ma(e,e.childNodes),wa(e)}))}ga.resolve=function(e){var a=this
if(2===a.state){if(e===a)throw new TypeError("Promise settled with itself.")
var n=!1
try{var i=e&&e.then
if(null!==e&&M(e)&&A(i))return void i.call(e,(function(e){n||a.resolve(e),n=!0}),(function(e){n||a.reject(e),n=!0}))}catch(e){return void(n||a.reject(e))}a.state=0,a.value=e,a.notify()}},ga.reject=function(e){var a=this
if(2===a.state){if(e===a)throw new TypeError("Promise settled with itself.")
a.state=1,a.value=e,a.notify()}},ga.notify=function(){var e=this
fa((function(){if(2!==e.state)for(;e.deferred.length;){var a=e.deferred.shift(),n=a[0],i=a[1],r=a[2],t=a[3]
try{0===e.state?A(n)?r(n.call(void 0,e.value)):r(e.value):1===e.state&&(A(i)?r(i.call(void 0,e.value)):t(e.value))}catch(e){t(e)}}}))},ga.then=function(e,a){var n=this
return new va((function(i,r){n.deferred.push([e,a,i,r]),n.notify()}))},ga.catch=function(e){return this.then(void 0,e)}
var Ba=/^\s*<(\w+|!)[^>]*>/,Pa=/^<(\w+)\s*\/?>(?:<\/\1>)?$/
function La(e){var a=Pa.exec(e)
if(a)return document.createElement(a[1])
var n=document.createElement("div")
return Ba.test(e)?n.insertAdjacentHTML("beforeend",e.trim()):n.textContent=e,n.childNodes.length>1?G(n.childNodes):n.firstChild}function Da(e,a){if(N(e))for(a(e),e=e.firstElementChild;e;){var n=e.nextElementSibling
Da(e,a),e=n}}function xa(e,a){return Ka(e)?V(La(e)):Ge(e,a)}function Ca(e,a){return Ka(e)?G(La(e)):He(e,a)}function Ka(e){return L(e)&&("<"===e[0]||e.match(/^\s*</))}function Ra(e){for(var a=[],n=arguments.length-1;n-- >0;)a[n]=arguments[n+1]
Ha(e,a,"add")}function za(e){for(var a=[],n=arguments.length-1;n-- >0;)a[n]=arguments[n+1]
Ha(e,a,"remove")}function Oa(e,a){te(e,"class",(function(e){return(e||"").replace(new RegExp("\\b"+a+"\\b","g"),"")}))}function Ia(e){for(var a=[],n=arguments.length-1;n-- >0;)a[n]=arguments[n+1]
a[0]&&za(e,a[0]),a[1]&&Ra(e,a[1])}function Va(e,a){a=Fa(a)[0]
for(var n=G(e),i=0;i<n.length;i++)if(a&&n[i].classList.contains(a))return!0
return!1}function Ga(e,a,n){a=Fa(a)
for(var i=G(e),r=0;r<i.length;r++)for(var t=i[r].classList,o=0;o<a.length;o++)K(n)?t.toggle(a[o]):Ja.Force?t.toggle(a[o],!!n):t[n?"add":"remove"](a[o])}function Ha(e,a,n){var i
a=a.reduce((function(e,a){return e.concat(Fa(a))}),[])
for(var r=G(e),t=function(e){Ja.Multiple?(i=r[e].classList)[n].apply(i,a):a.forEach((function(a){return r[e].classList[n](a)}))},o=0;o<r.length;o++)t(o)}function Fa(e){return String(e).split(/\s|,/).filter(Boolean)}var Ja={get Multiple(){return this.get("Multiple")},get Force(){return this.get("Force")},get:function(e){var a=document.createElement("_").classList
return a.add("a","b"),a.toggle("c",!1),(Ja={Multiple:a.contains("b"),Force:!a.contains("c")})[e]}},Ua={"animation-iteration-count":!0,"column-count":!0,"fill-opacity":!0,"flex-grow":!0,"flex-shrink":!0,"font-weight":!0,"line-height":!0,opacity:!0,order:!0,orphans:!0,"stroke-dasharray":!0,"stroke-dashoffset":!0,widows:!0,"z-index":!0,zoom:!0}
function Wa(e,a,n,i){return void 0===i&&(i=""),G(e).map((function(e){if(L(a)){if(a=Xa(a),K(n))return qa(e,a)
n||D(n)?e.style.setProperty(a,x(n)&&!Ua[a]?n+"px":n,i):e.style.removeProperty(a)}else{if(S(a)){var r=Za(e)
return a.reduce((function(e,a){return e[a]=r[Xa(a)],e}),{})}M(a)&&(i=n,q(a,(function(a,n){return Wa(e,n,a,i)})))}return e}))[0]}function Za(e,a){return H(e).getComputedStyle(e,a)}function qa(e,a,n){return Za(e,n)[a]}var Qa=re((function(e){var a=Aa(document.documentElement,La("<div>"))
Ra(a,"uk-"+e)
var n=qa(a,"content",":before")
return wa(a),n})),Ya=/^\s*(["'])?(.*?)\1\s*$/
function $a(e){return(ce?Qa(e):Za(document.documentElement).getPropertyValue("--uk-"+e)).replace(Ya,"$2")}var Xa=re((function(e){return function(e){e=r(e)
var a=document.documentElement.style
if(e in a)return e
for(var n,i=en.length;i--;)if((n="-"+en[i]+"-"+e)in a)return n}(e)})),en=["webkit","moz","ms"]
function an(e,a,n,i){return void 0===n&&(n=400),void 0===i&&(i="linear"),pa.all(G(e).map((function(e){return new pa((function(r,t){for(var o in a){var s=Wa(e,o)
""===s&&Wa(e,o,s)}var l=setTimeout((function(){return aa(e,"transitionend")}),n)
ea(e,"transitionend transitioncanceled",(function(a){var n=a.type
clearTimeout(l),za(e,"uk-transition"),Wa(e,{transitionProperty:"",transitionDuration:"",transitionTimingFunction:""}),"transitioncanceled"===n?t():r(e)}),{self:!0}),Ra(e,"uk-transition"),Wa(e,W({transitionProperty:Object.keys(a).map(Xa).join(","),transitionDuration:n+"ms",transitionTimingFunction:i},a))}))})))}var nn={start:an,stop:function(e){return aa(e,"transitionend"),pa.resolve()},cancel:function(e){aa(e,"transitioncanceled")},inProgress:function(e){return Va(e,"uk-transition")}},rn="uk-animation-"
function tn(e,a,n,i,r){return void 0===n&&(n=200),pa.all(G(e).map((function(e){return new pa((function(t,o){aa(e,"animationcanceled")
var s=setTimeout((function(){return aa(e,"animationend")}),n)
ea(e,"animationend animationcanceled",(function(a){var n=a.type
clearTimeout(s),"animationcanceled"===n?o():t(e),Wa(e,"animationDuration",""),Oa(e,"uk-animation-\\S*")}),{self:!0}),Wa(e,"animationDuration",n+"ms"),Ra(e,a,rn+(r?"leave":"enter")),d(a,rn)&&(i&&Ra(e,"uk-transform-origin-"+i),r&&Ra(e,"uk-animation-reverse"))}))})))}var on=new RegExp("uk-animation-(enter|leave)"),sn={in:tn,out:function(e,a,n,i){return tn(e,a,n,i,!0)},inProgress:function(e){return on.test(te(e,"class"))},cancel:function(e){aa(e,"animationcanceled")}},ln={width:["left","right"],height:["top","bottom"]}
function un(e){var a=N(e)?V(e).getBoundingClientRect():{height:pn(e),width:mn(e),top:0,left:0}
return{height:a.height,width:a.width,top:a.top,left:a.left,bottom:a.top+a.height,right:a.left+a.width}}function cn(e,a){var n=un(e)
if(e){var i=H(e),r={height:i.pageYOffset,width:i.pageXOffset}
for(var t in ln)for(var o in ln[t])n[ln[t][o]]+=r[t]}if(!a)return n
var s=Wa(e,"position")
q(Wa(e,["left","top"]),(function(i,r){return Wa(e,r,a[r]-n[r]+O("absolute"===s&&"auto"===i?dn(e)[r]:i))}))}function dn(e){for(var a=cn(e),n=a.top,i=a.left,r=V(e),t=r.ownerDocument,o=t.body,s=t.documentElement,l=r.offsetParent||s;l&&(l===o||l===s)&&"static"===Wa(l,"position");)l=l.parentNode
if(N(l)){var u=cn(l)
n-=u.top+O(Wa(l,"borderTopWidth")),i-=u.left+O(Wa(l,"borderLeftWidth"))}return{top:n-O(Wa(e,"marginTop")),left:i-O(Wa(e,"marginLeft"))}}function hn(e){var a=[0,0]
e=V(e)
do{if(a[0]+=e.offsetTop,a[1]+=e.offsetLeft,"fixed"===Wa(e,"position")){var n=H(e)
return a[0]+=n.pageYOffset,a[1]+=n.pageXOffset,a}}while(e=e.offsetParent)
return a}var pn=fn("height"),mn=fn("width")
function fn(e){var a=s(e)
return function(n,i){if(K(i)){if(w(n))return n["inner"+a]
if(j(n)){var r=n.documentElement
return Math.max(r["offset"+a],r["scroll"+a])}return(i="auto"===(i=Wa(n=V(n),e))?n["offset"+a]:O(i)||0)-vn(n,e)}return Wa(n,e,i||0===i?+i+vn(n,e)+"px":"")}}function vn(e,a,n){return void 0===n&&(n="border-box"),Wa(e,"boxSizing")===n?ln[a].map(s).reduce((function(a,n){return a+O(Wa(e,"padding"+n))+O(Wa(e,"border"+n+"Width"))}),0):0}function gn(e){for(var a in ln)for(var n in ln[a])if(ln[a][n]===e)return ln[a][1-n]
return e}function kn(e,a,n,i){return void 0===a&&(a="width"),void 0===n&&(n=window),void 0===i&&(i=!1),x(e)?+e:p(e,"vh")?yn(pn(H(n)),e):p(e,"vw")?yn(mn(H(n)),e):p(e,"%")?yn(i?n["offset"+s(a)]:un(n)[a],e):O(e)}function yn(e,a){return e*O(a)/100}var bn={reads:[],writes:[],read:function(e){return this.reads.push(e),An(),e},write:function(e){return this.writes.push(e),An(),e},clear:function(e){Tn(this.reads,e),Tn(this.writes,e)},flush:Sn}
function Sn(e){void 0===e&&(e=1),Mn(bn.reads),Mn(bn.writes.splice(0)),bn.scheduled=!1,(bn.reads.length||bn.writes.length)&&An(e+1)}function An(e){bn.scheduled||(bn.scheduled=!0,e&&e<4?pa.resolve().then((function(){return Sn(e)})):requestAnimationFrame((function(){return Sn()})))}function Mn(e){for(var a;a=e.shift();)try{a()}catch(e){console.error(e)}}function Tn(e,a){var n=e.indexOf(a)
return~n&&e.splice(n,1)}function _n(){}_n.prototype={positions:[],init:function(){var e,a=this
this.positions=[],this.unbind=$e(document,"mousemove",(function(a){return e=ha(a)})),this.interval=setInterval((function(){e&&(a.positions.push(e),a.positions.length>5&&a.positions.shift())}),50)},cancel:function(){this.unbind&&this.unbind(),this.interval&&clearInterval(this.interval)},movesTo:function(e){if(this.positions.length<2)return!1
var a=e.getBoundingClientRect(),n=a.left,i=a.right,r=a.top,t=a.bottom,o=this.positions[0],s=Z(this.positions),l=[o,s]
return!ae(s,a)&&[[{x:n,y:r},{x:i,y:t}],[{x:n,y:t},{x:i,y:r}]].some((function(e){var n=function(e,a){var n=e[0],i=n.x,r=n.y,t=e[1],o=t.x,s=t.y,l=a[0],u=l.x,c=l.y,d=a[1],h=d.x,p=d.y,m=(p-c)*(o-i)-(h-u)*(s-r)
if(0===m)return!1
var f=((h-u)*(r-c)-(p-c)*(i-u))/m
return!(f<0)&&{x:i+f*(o-i),y:r+f*(s-r)}}(l,e)
return n&&ae(n,a)}))}}
var wn={}
function jn(e,a,n){return wn.computed(A(e)?e.call(n,n):e,A(a)?a.call(n,n):a)}function En(e,a){return e=e&&!S(e)?[e]:e,a?e?e.concat(a):S(a)?a:[a]:e}function Nn(e,a){return K(a)?e:a}function Bn(e,a,i){var r={}
if(A(a)&&(a=a.options),a.extends&&(e=Bn(e,a.extends,i)),a.mixins)for(var t=0,o=a.mixins.length;t<o;t++)e=Bn(e,a.mixins[t],i)
for(var s in e)u(s)
for(var l in a)n(e,l)||u(l)
function u(n){r[n]=(wn[n]||Nn)(e[n],a[n],i)}return r}function Pn(e,a){var n
void 0===a&&(a=[])
try{return e?d(e,"{")?JSON.parse(e):a.length&&!k(e,":")?((n={})[a[0]]=e,n):e.split(";").reduce((function(e,a){var n=a.split(/:(.*)/),i=n[0],r=n[1]
return i&&!K(r)&&(e[i.trim()]=r.trim()),e}),{}):{}}catch(e){return{}}}function Ln(e){if(Rn(e)&&In(e,{func:"playVideo",method:"play"}),Kn(e))try{e.play().catch(X)}catch(e){}}function Dn(e){Rn(e)&&In(e,{func:"pauseVideo",method:"pause"}),Kn(e)&&e.pause()}function xn(e){Rn(e)&&In(e,{func:"mute",method:"setVolume",value:0}),Kn(e)&&(e.muted=!0)}function Cn(e){return Kn(e)||Rn(e)}function Kn(e){return e&&"VIDEO"===e.tagName}function Rn(e){return e&&"IFRAME"===e.tagName&&(zn(e)||On(e))}function zn(e){return!!e.src.match(/\/\/.*?youtube(-nocookie)?\.[a-z]+\/(watch\?v=[^&\s]+|embed)|youtu\.be\/.*/)}function On(e){return!!e.src.match(/vimeo\.com\/video\/.*/)}function In(e,a){(function(e){if(e._ukPlayer)return e._ukPlayer
var a,n=zn(e),i=On(e),r=++Gn
return e._ukPlayer=new pa((function(t){n&&ea(e,"load",(function(){var n=function(){return Vn(e,{event:"listening",id:r})}
a=setInterval(n,100),n()})),ea(window,"message",t,!1,(function(e){var a=e.data
try{return(a=JSON.parse(a))&&(n&&a.id===r&&"onReady"===a.event||i&&Number(a.player_id)===r)}catch(e){}})),e.src=e.src+(k(e.src,"?")?"&":"?")+(n?"enablejsapi=1":"api=1&player_id="+r)})).then((function(){return clearInterval(a)}))})(e).then((function(){return Vn(e,a)}))}function Vn(e,a){try{e.contentWindow.postMessage(JSON.stringify(W({event:"command"},a)),"*")}catch(e){}}wn.events=wn.created=wn.beforeConnect=wn.connected=wn.beforeDisconnect=wn.disconnected=wn.destroy=En,wn.args=function(e,a){return!1!==a&&En(a||e)},wn.update=function(e,a){return Q(En(e,A(a)?{read:a}:a),"order")},wn.props=function(e,a){return S(a)&&(a=a.reduce((function(e,a){return e[a]=String,e}),{})),wn.methods(e,a)},wn.computed=wn.methods=function(e,a){return a?e?W({},e,a):a:e},wn.data=function(e,a,n){return n?jn(e,a,n):a?e?function(n){return jn(e,a,n)}:a:e}
var Gn=0
function Hn(e,a,n){return void 0===a&&(a=0),void 0===n&&(n=0),!!Me(e)&&ee.apply(void 0,Wn(e).map((function(e){var i=cn(Zn(e)),r=i.top,t=i.left,o=i.bottom,s=i.right
return{top:r-a,left:t-n,bottom:o+a,right:s+n}})).concat(cn(e)))}function Fn(e,a){(e=w(e)||j(e)?Qn(e):V(e)).scrollTop=a}function Jn(e,a){void 0===a&&(a={})
var n=a.offset
void 0===n&&(n=0)
var i=Me(e)?Wn(e):[]
return i.reduce((function(a,r,t){var o=r.scrollTop,s=r.scrollHeight,l=r.offsetHeight,u=s-qn(r),c=cn(i[t-1]||e),d=c.height,h=c.top,p=Math.ceil(h-cn(Zn(r)).top-n+o)
return n>0&&l<d+n?p+=n:n=0,p>u?(n-=p-u,p=u):p<0&&(n-=p,p=0),function(){return function(e,a){return new pa((function(n){var i,r=e.scrollTop,t=(i=Math.abs(a),40*Math.pow(i,.375)),o=Date.now()
!function i(){var s,l=(s=$((Date.now()-o)/t),.5*(1-Math.cos(Math.PI*s)))
Fn(e,r+a*l),1===l?n():requestAnimationFrame(i)}()}))}(r,p-o).then(a)}}),(function(){return pa.resolve()}))()}function Un(e,a,n){if(void 0===a&&(a=0),void 0===n&&(n=0),!Me(e))return 0
var i=Wn(e,/auto|scroll/,!0)[0],r=i.scrollHeight,t=i.scrollTop,o=qn(i),s=r-o,l=hn(e)[0]-hn(i)[0],u=Math.max(0,l-o+a)
return $((t-u)/(Math.min(s,l+e.offsetHeight-n)-u))}function Wn(e,a,n){void 0===a&&(a=/auto|scroll|hidden/),void 0===n&&(n=!1)
var i=Qn(e),r=Ke(e).reverse(),t=b(r=r.slice(r.indexOf(i)+1),(function(e){return"fixed"===Wa(e,"position")}))
return~t&&(r=r.slice(t)),[i].concat(r.filter((function(e){return a.test(Wa(e,"overflow"))&&(!n||e.scrollHeight>qn(e))}))).reverse()}function Zn(e){return e===Qn(e)?window:e}function qn(e){return(e===Qn(e)?document.documentElement:e).clientHeight}function Qn(e){var a=H(e).document
return a.scrollingElement||a.documentElement}var Yn={width:["x","left","right"],height:["y","top","bottom"]}
function $n(e,a,n,i,r,t,o,s){n=ei(n),i=ei(i)
var l={element:n,target:i}
if(!e||!a)return l
var u=cn(e),c=cn(a),d=c
if(Xn(d,n,u,-1),Xn(d,i,c,1),r=ai(r,u.width,u.height),t=ai(t,c.width,c.height),r.x+=t.x,r.y+=t.y,d.left+=r.x,d.top+=r.y,o){var h=Wn(e).map(Zn)
s&&!k(h,s)&&h.unshift(s),h=h.map((function(e){return cn(e)})),q(Yn,(function(e,a){var t=e[0],s=e[1],p=e[2];(!0===o||k(o,t))&&h.some((function(e){var o=n[t]===s?-u[a]:n[t]===p?u[a]:0,h=i[t]===s?c[a]:i[t]===p?-c[a]:0
if(d[s]<e[s]||d[s]+u[a]>e[p]){var m=u[a]/2,f="center"===i[t]?-c[a]/2:0
return"center"===n[t]&&(v(m,f)||v(-m,-f))||v(o,h)}function v(n,i){var o=O((d[s]+n+i-2*r[t]).toFixed(4))
if(o>=e[s]&&o+u[a]<=e[p])return d[s]=o,["element","target"].forEach((function(e){l[e][t]=n?l[e][t]===Yn[a][1]?Yn[a][2]:Yn[a][1]:l[e][t]})),!0}}))}))}return cn(e,d),l}function Xn(e,a,n,i){q(Yn,(function(r,t){var o=r[0],s=r[1],l=r[2]
a[o]===l?e[s]+=n[t]*i:"center"===a[o]&&(e[s]+=n[t]*i/2)}))}function ei(e){var a=/left|center|right/,n=/top|center|bottom/
return 1===(e=(e||"").split(" ")).length&&(e=a.test(e[0])?e.concat("center"):n.test(e[0])?["center"].concat(e):["center","center"]),{x:a.test(e[0])?e[0]:"center",y:n.test(e[1])?e[1]:"center"}}function ai(e,a,n){var i=(e||"").split(" "),r=i[0],t=i[1]
return{x:r?O(r)*(p(r,"%")?a/100:1):0,y:t?O(t)*(p(t,"%")?n/100:1):0}}var ni=Object.freeze({__proto__:null,ajax:ka,getImage:ya,transition:an,Transition:nn,animate:tn,Animation:sn,attr:te,hasAttr:oe,removeAttr:se,data:le,addClass:Ra,removeClass:za,removeClasses:Oa,replaceClass:Ia,hasClass:Va,toggleClass:Ga,dimensions:un,offset:cn,position:dn,offsetPosition:hn,height:pn,width:mn,boxModelAdjust:vn,flipPosition:gn,toPx:kn,ready:function(e){"loading"===document.readyState?ea(document,"DOMContentLoaded",e):e()},empty:ba,html:Sa,prepend:function(e,a){return(e=xa(e)).hasChildNodes()?_a(a,(function(a){return e.insertBefore(a,e.firstChild)})):Aa(e,a)},append:Aa,before:Ma,after:Ta,remove:wa,wrapAll:ja,wrapInner:Ea,unwrap:Na,fragment:La,apply:Da,$:xa,$$:Ca,inBrowser:ue,isIE:ce,isRtl:de,hasTouch:me,pointerDown:fe,pointerMove:ve,pointerUp:ge,pointerEnter:ke,pointerLeave:ye,pointerCancel:be,on:$e,off:Xe,once:ea,trigger:aa,createEvent:na,toEventTargets:ca,isTouch:da,getEventPos:ha,fastdom:bn,isVoidElement:Ae,isVisible:Me,selInput:Te,isInput:_e,selFocusable:we,isFocusable:je,parent:Ee,filter:Ne,matches:Le,closest:xe,within:Ce,parents:Ke,children:Re,index:ze,hasOwn:n,hyphenate:r,camelize:o,ucfirst:s,startsWith:d,endsWith:p,includes:k,findIndex:b,isArray:S,isFunction:A,isObject:M,isPlainObject:_,isWindow:w,isDocument:j,isNode:E,isElement:N,isBoolean:P,isString:L,isNumber:D,isNumeric:x,isEmpty:C,isUndefined:K,toBoolean:R,toNumber:z,toFloat:O,toArray:I,toNode:V,toNodes:G,toWindow:H,toMs:F,isEqual:J,swap:U,assign:W,last:Z,each:q,sortBy:Q,uniqueBy:Y,clamp:$,noop:X,intersectRect:ee,pointInRect:ae,Dimensions:ne,getIndex:ie,memoize:re,MouseTracker:_n,mergeOptions:Bn,parseOptions:Pn,play:Ln,pause:Dn,mute:xn,isVideo:Cn,positionAt:$n,Promise:pa,Deferred:ma,query:Oe,queryAll:Ie,find:Ge,findAll:He,escape:Ye,css:Wa,getCssVar:$a,propName:Xa,isInView:Hn,scrollTop:Fn,scrollIntoView:Jn,scrolledOver:Un,scrollParents:Wn,getViewport:Zn,getViewportClientHeight:qn}),ii=re((function(e){return!(!d(e,"uk-")&&!d(e,"data-uk-"))&&o(e.replace("data-uk-","").replace("uk-",""))})),ri=function(e){this._init(e)}
ri.util=ni,ri.data="__uikit__",ri.prefix="uk-",ri.options={},ri.version="3.11.1",function(e){var a,n=e.data
function i(e,a){if(e)for(var n in e)e[n]._connected&&e[n]._callUpdate(a)}e.use=function(e){if(!e.installed)return e.call(null,this),e.installed=!0,this},e.mixin=function(a,n){(n=(L(n)?e.component(n):n)||this).options=Bn(n.options,a)},e.extend=function(e){e=e||{}
var a=this,n=function(e){this._init(e)}
return(n.prototype=Object.create(a.prototype)).constructor=n,n.options=Bn(a.options,e),n.super=a,n.extend=a.extend,n},e.update=function(e,a){Ke(e=e?V(e):document.body).reverse().forEach((function(e){return i(e[n],a)})),Da(e,(function(e){return i(e[n],a)}))},Object.defineProperty(e,"container",{get:function(){return a||document.body},set:function(e){a=xa(e)}})}(ri),function(e){function a(e){for(var a=this,n=this.$options.update,i=function(i){var r=n[i],t=r.read,o=r.write,s=r.events
if(e.has("update")||s&&s.some((function(a){return e.has(a)}))){var l=void 0
t&&(l=t.call(a,a._data,e))&&_(l)&&W(a._data,l),o&&!1!==l&&bn.write((function(){return o.call(a,a._data,e)}))}},r=0;r<n.length;r++)i(r)}function i(e){var a=this.$options.computed,i=W({},this._computeds)
for(var r in this._computeds={},a){var t=a[r],o=t.watch,s=t.immediate
o&&(e&&s||n(i,r)&&!J(i[r],this[r]))&&o.call(this,this[r],i[r])}}e.prototype._callHook=function(e){var a=this,n=this.$options[e]
n&&n.forEach((function(e){return e.call(a)}))},e.prototype._callConnected=function(){this._connected||(this._data={},this._computeds={},this._initProps(),this._callHook("beforeConnect"),this._connected=!0,this._initEvents(),this._initObservers(),this._callHook("connected"),this._callUpdate())},e.prototype._callDisconnected=function(){this._connected&&(this._callHook("beforeDisconnect"),this._disconnectObservers(),this._unbindEvents(),this._callHook("disconnected"),this._connected=!1,delete this._watch)},e.prototype._callUpdate=function(e){var n=this
void 0===e&&(e="update"),this._connected&&("update"!==e&&"resize"!==e||this._callWatches(),this.$options.update&&(this._updates||(this._updates=new Set,bn.read((function(){n._connected&&a.call(n,n._updates),delete n._updates}))),this._updates.add(e.type||e)))},e.prototype._callWatches=function(){var e=this
if(!this._watch){var a=!n(this,"_watch")
this._watch=bn.read((function(){e._connected&&i.call(e,a),e._watch=null}))}}}(ri),function(e){var a=0
function i(e,a){var n={},i=e.args
void 0===i&&(i=[])
var t=e.props
void 0===t&&(t={})
var s=e.el
if(!t)return n
for(var l in t){var c=r(l),h=le(s,c)
K(h)||(h=t[l]===Boolean&&""===h||u(t[l],h),("target"!==c||h&&!d(h,"_"))&&(n[l]=h))}var p=Pn(le(s,a),i)
for(var m in p){var f=o(m)
void 0!==t[f]&&(n[f]=u(t[f],p[m]))}return n}function t(e,a,i){Object.defineProperty(e,a,{enumerable:!0,get:function(){var r=e._computeds,t=e.$props,o=e.$el
return n(r,a)||(r[a]=(i.get||i).call(e,t,o)),r[a]},set:function(n){var r=e._computeds
r[a]=i.set?i.set.call(e,n):n,K(r[a])&&delete r[a]}})}function s(e,a,n){_(a)||(a={name:n,handler:a})
var i=a.name,r=a.el,t=a.handler,o=a.capture,l=a.passive,u=a.delegate,c=a.filter,d=a.self
r=A(r)?r.call(e):r||e.$el,S(r)?r.forEach((function(i){return s(e,W({},a,{el:i}),n)})):!r||c&&!c.call(e)||e._events.push($e(r,i,u?L(u)?u:u.call(e):null,L(t)?e[t]:t.bind(e),{passive:l,capture:o,self:d}))}function l(e,a){return e.every((function(e){return!e||!n(e,a)}))}function u(e,a){return e===Boolean?R(a):e===Number?z(a):"list"===e?function(e){return S(e)?e:L(e)?e.split(/,(?![^(]*\))/).map((function(e){return x(e)?z(e):R(e.trim())})):[e]}(a):e?e(a):a}function c(e){var a=e.$name,n=e.$options,t=e.$props,s=n.attrs,l=n.props,u=n.el
if(l&&!1!==s){var c=S(s)?s:Object.keys(l),d=c.map((function(e){return r(e)})).concat(a),h=new MutationObserver((function(r){var s=i(n,a)
r.some((function(e){var n=e.attributeName,i=n.replace("data-","")
return(i===a?c:[o(i),o(n)]).some((function(e){return!K(s[e])&&s[e]!==t[e]}))}))&&e.$reset()}))
return h.observe(u,{attributes:!0,attributeFilter:d.concat(d.map((function(e){return"data-"+e})))}),h}}e.prototype._init=function(e){(e=e||{}).data=function(e,a){var n=e.data,i=a.args,r=a.props
if(void 0===r&&(r={}),n=S(n)?C(i)?void 0:n.slice(0,i.length).reduce((function(e,a,n){return _(a)?W(e,a):e[i[n]]=a,e}),{}):n,n)for(var t in n)K(n[t])?delete n[t]:n[t]=r[t]?u(r[t],n[t]):n[t]
return n}(e,this.constructor.options),this.$options=Bn(this.constructor.options,e,this),this.$el=null,this.$props={},this._uid=a++,this._initData(),this._initMethods(),this._initComputeds(),this._callHook("created"),e.el&&this.$mount(e.el)},e.prototype._initData=function(){var e=this.$options.data
for(var a in void 0===e&&(e={}),e)this.$props[a]=this[a]=e[a]},e.prototype._initMethods=function(){var e=this.$options.methods
if(e)for(var a in e)this[a]=e[a].bind(this)},e.prototype._initComputeds=function(){var e=this.$options.computed
if(this._computeds={},e)for(var a in e)t(this,a,e[a])},e.prototype._initProps=function(e){var a
for(a in e=e||i(this.$options,this.$name))K(e[a])||(this.$props[a]=e[a])
var n=[this.$options.computed,this.$options.methods]
for(a in this.$props)a in e&&l(n,a)&&(this[a]=this.$props[a])},e.prototype._initEvents=function(){var e=this
this._events=[]
var a=this.$options.events
a&&a.forEach((function(a){if(n(a,"handler"))s(e,a)
else for(var i in a)s(e,a[i],i)}))},e.prototype._unbindEvents=function(){this._events.forEach((function(e){return e()})),delete this._events},e.prototype._initObservers=function(){var e,a,n
this._observers=[(e=this,a=e.$options.el,n=new MutationObserver((function(){return e.$emit()})),n.observe(a,{childList:!0,subtree:!0}),n),c(this)]},e.prototype._disconnectObservers=function(){this._observers.forEach((function(e){return e&&e.disconnect()}))}}(ri),function(e){var a=e.data,n={}
e.component=function(a,i){var t=r(a)
if(a=o(t),!i)return _(n[a])&&(n[a]=e.extend(n[a])),n[a]
e[a]=function(n,i){for(var r=arguments.length,t=Array(r);r--;)t[r]=arguments[r]
var o=e.component(a)
return o.options.functional?new o({data:_(n)?n:[].concat(t)}):n?Ca(n).map(s)[0]:s(n)
function s(n){var r=e.getComponent(n,a)
if(r){if(!i)return r
r.$destroy()}return new o({el:n,data:i})}}
var s=_(i)?W({},i):i.options
return s.name=a,s.install&&s.install(e,s,a),e._initialized&&!s.functional&&bn.read((function(){return e[a]("[uk-"+t+"],[data-uk-"+t+"]")})),n[a]=_(i)?s:i},e.getComponents=function(e){return e&&e[a]||{}},e.getComponent=function(a,n){return e.getComponents(a)[n]},e.connect=function(i){if(i[a])for(var r in i[a])i[a][r]._callConnected()
for(var t=0;t<i.attributes.length;t++){var o=ii(i.attributes[t].name)
o&&o in n&&e[o](i)}},e.disconnect=function(e){for(var n in e[a])e[a][n]._callDisconnected()}}(ri),function(e){var a=e.data
e.prototype.$create=function(a,n,i){return e[a](n,i)},e.prototype.$mount=function(e){var n=this.$options.name
e[a]||(e[a]={}),e[a][n]||(e[a][n]=this,this.$el=this.$options.el=this.$options.el||e,Ce(e,document)&&this._callConnected())},e.prototype.$reset=function(){this._callDisconnected(),this._callConnected()},e.prototype.$destroy=function(e){void 0===e&&(e=!1)
var n=this.$options,i=n.el,r=n.name
i&&this._callDisconnected(),this._callHook("destroy"),i&&i[a]&&(delete i[a][r],C(i[a])||delete i[a],e&&wa(this.$el))},e.prototype.$emit=function(e){this._callUpdate(e)},e.prototype.$update=function(a,n){void 0===a&&(a=this.$el),e.update(a,n)},e.prototype.$getComponent=e.getComponent
var n=re((function(a){return e.prefix+r(a)}))
Object.defineProperties(e.prototype,{$container:Object.getOwnPropertyDescriptor(e,"container"),$name:{get:function(){return n(this.$options.name)}}})}(ri)
var ti={connected:function(){!Va(this.$el,this.$name)&&Ra(this.$el,this.$name)}},oi={props:{cls:Boolean,animation:"list",duration:Number,origin:String,transition:String},data:{cls:!1,animation:[!1],duration:200,origin:!1,transition:"linear",clsEnter:"uk-togglabe-enter",clsLeave:"uk-togglabe-leave",initProps:{overflow:"",height:"",paddingTop:"",paddingBottom:"",marginTop:"",marginBottom:""},hideProps:{overflow:"hidden",height:0,paddingTop:0,paddingBottom:0,marginTop:0,marginBottom:0}},computed:{hasAnimation:function(e){return!!e.animation[0]},hasTransition:function(e){var a=e.animation
return this.hasAnimation&&!0===a[0]}},methods:{toggleElement:function(e,a,n){var i=this
return new pa((function(r){return pa.all(G(e).map((function(e){var r=P(a)?a:!i.isToggled(e)
if(!aa(e,"before"+(r?"show":"hide"),[i]))return pa.reject()
var t,o=(A(n)?n:!1!==n&&i.hasAnimation?i.hasTransition?si(i):(t=i,function(e,a){sn.cancel(e)
var n=t.animation,i=t.duration,r=t._toggle
return a?(r(e,!0),sn.in(e,n[0],i,t.origin)):sn.out(e,n[1]||n[0],i,t.origin).then((function(){return r(e,!1)}))}):i._toggle)(e,r),s=r?i.clsEnter:i.clsLeave
Ra(e,s),aa(e,r?"show":"hide",[i])
var l=function(){za(e,s),aa(e,r?"shown":"hidden",[i]),i.$update(e)}
return o?o.then(l,(function(){return za(e,s),pa.reject()})):l()}))).then(r,X)}))},isToggled:function(e){return void 0===e&&(e=this.$el),!!Va(e=G(e)[0],this.clsEnter)||!Va(e,this.clsLeave)&&(this.cls?Va(e,this.cls.split(" ")[0]):Me(e))},_toggle:function(e,a){var n
e&&(a=Boolean(a),this.cls?(n=k(this.cls," ")||a!==Va(e,this.cls))&&Ga(e,this.cls,k(this.cls," ")?void 0:a):(n=a===e.hidden)&&(e.hidden=!a),Ca("[autofocus]",e).some((function(e){return Me(e)?e.focus()||!0:e.blur()})),n&&(aa(e,"toggled",[a,this]),this.$update(e)))}}}
function si(e){var a=e.isToggled,n=e.duration,i=e.initProps,r=e.hideProps,t=e.transition,o=e._toggle
return function(e,s){var l=nn.inProgress(e),u=e.hasChildNodes?O(Wa(e.firstElementChild,"marginTop"))+O(Wa(e.lastElementChild,"marginBottom")):0,c=Me(e)?pn(e)+(l?0:u):0
nn.cancel(e),a(e)||o(e,!0),pn(e,""),bn.flush()
var d=pn(e)+(l?0:u)
return pn(e,c),(s?nn.start(e,W({},i,{overflow:"hidden",height:d}),Math.round(n*(1-c/d)),t):nn.start(e,r,Math.round(n*(c/d)),t).then((function(){return o(e,!1)}))).then((function(){return Wa(e,i)}))}}var li={mixins:[ti,oi],props:{targets:String,active:null,collapsible:Boolean,multiple:Boolean,toggle:String,content:String,transition:String,offset:Number},data:{targets:"> *",active:!1,animation:[!0],collapsible:!0,multiple:!1,clsOpen:"uk-open",toggle:"> .uk-accordion-title",content:"> .uk-accordion-content",transition:"ease",offset:0},computed:{items:{get:function(e,a){return Ca(e.targets,a)},watch:function(e,a){var n=this
if(e.forEach((function(e){return ui(xa(n.content,e),!Va(e,n.clsOpen))})),!a&&!Va(e,this.clsOpen)){var i=!1!==this.active&&e[Number(this.active)]||!this.collapsible&&e[0]
i&&this.toggle(i,!1)}},immediate:!0},toggles:function(e){var a=e.toggle
return this.items.map((function(e){return xa(a,e)}))}},events:[{name:"click",delegate:function(){return this.targets+" "+this.$props.toggle},handler:function(e){e.preventDefault(),this.toggle(ze(this.toggles,e.current))}}],methods:{toggle:function(e,a){var n=this,i=[this.items[ie(e,this.items)]],r=Ne(this.items,"."+this.clsOpen)
this.multiple||k(r,i[0])||(i=i.concat(r)),!this.collapsible&&r.length<2&&!Ne(i,":not(."+this.clsOpen+")").length||i.forEach((function(e){return n.toggleElement(e,!Va(e,n.clsOpen),(function(e,i){Ga(e,n.clsOpen,i),te(xa(n.$props.toggle,e),"aria-expanded",i)
var r=xa((e._wrapper?"> * ":"")+n.content,e)
if(!1!==a&&n.hasTransition)return e._wrapper||(e._wrapper=ja(r,"<div"+(i?" hidden":"")+">")),ui(r,!1),si(n)(e._wrapper,i).then((function(){if(ui(r,!i),delete e._wrapper,Na(r),i){var a=xa(n.$props.toggle,e)
Hn(a)||Jn(a,{offset:n.offset})}}))
ui(r,!i)}))}))}}}
function ui(e,a){e&&(e.hidden=a)}var ci,di={mixins:[ti,oi],args:"animation",props:{close:String},data:{animation:[!0],selClose:".uk-alert-close",duration:150,hideProps:W({opacity:0},oi.data.hideProps)},events:[{name:"click",delegate:function(){return this.selClose},handler:function(e){e.preventDefault(),this.close()}}],methods:{close:function(){var e=this
this.toggleElement(this.$el).then((function(){return e.$destroy(!0)}))}}},hi={args:"autoplay",props:{automute:Boolean,autoplay:Boolean},data:{automute:!1,autoplay:!0},computed:{inView:function(e){return"inview"===e.autoplay}},connected:function(){this.inView&&!oe(this.$el,"preload")&&(this.$el.preload="none"),this.automute&&xn(this.$el)},update:{read:function(){return!!Cn(this.$el)&&{visible:Me(this.$el)&&"hidden"!==Wa(this.$el,"visibility"),inView:this.inView&&Hn(this.$el)}},write:function(e){var a=e.visible,n=e.inView
!a||this.inView&&!n?Dn(this.$el):(!0===this.autoplay||this.inView&&n)&&Ln(this.$el)},events:["resize","scroll"]}},pi={mixins:[hi],props:{width:Number,height:Number},data:{automute:!0},update:{read:function(){var e=this.$el,a=function(e){for(;e=Ee(e);)if("static"!==Wa(e,"position"))return e}(e)||Ee(e),n=a.offsetHeight,i=a.offsetWidth,r=ne.cover({width:this.width||e.naturalWidth||e.videoWidth||e.clientWidth,height:this.height||e.naturalHeight||e.videoHeight||e.clientHeight},{width:i+(i%2?1:0),height:n+(n%2?1:0)})
return!(!r.width||!r.height)&&r},write:function(e){var a=e.height,n=e.width
Wa(this.$el,{height:a,width:n})},events:["resize"]}},mi={props:{container:Boolean},data:{container:!0},computed:{container:function(e){var a=e.container
return!0===a&&this.$container||a&&xa(a)}}},fi={props:{pos:String,offset:null,flip:Boolean,clsPos:String},data:{pos:"bottom-"+(de?"right":"left"),flip:!0,offset:!1,clsPos:""},computed:{pos:function(e){return e.pos.split("-").concat("center").slice(0,2)},dir:function(){return this.pos[0]},align:function(){return this.pos[1]}},methods:{positionAt:function(e,a,n){Oa(e,this.clsPos+"-(top|bottom|left|right)(-[a-z]+)?")
var i=this.offset,r=this.getAxis()
if(!x(i)){var t=xa(i)
i=t?cn(t)["x"===r?"left":"top"]-cn(a)["x"===r?"right":"bottom"]:0}var o=$n(e,a,"x"===r?gn(this.dir)+" "+this.align:this.align+" "+gn(this.dir),"x"===r?this.dir+" "+this.align:this.align+" "+this.dir,"x"===r?""+("left"===this.dir?-i:i):" "+("top"===this.dir?-i:i),null,this.flip,n).target,s=o.x,l=o.y
this.dir="x"===r?s:l,this.align="x"===r?l:s,Ga(e,this.clsPos+"-"+this.dir+"-"+this.align,!1===this.offset)},getAxis:function(){return"top"===this.dir||"bottom"===this.dir?"y":"x"}}},vi={mixins:[mi,fi,oi],args:"pos",props:{mode:"list",toggle:Boolean,boundary:Boolean,boundaryAlign:Boolean,delayShow:Number,delayHide:Number,clsDrop:String},data:{mode:["click","hover"],toggle:"- *",boundary:!0,boundaryAlign:!1,delayShow:0,delayHide:800,clsDrop:!1,animation:["uk-animation-fade"],cls:"uk-open",container:!1},computed:{boundary:function(e,a){var n=e.boundary
return!0===n?window:Oe(n,a)},clsDrop:function(e){return e.clsDrop||"uk-"+this.$options.name},clsPos:function(){return this.clsDrop}},created:function(){this.tracker=new _n},connected:function(){Ra(this.$el,this.clsDrop),this.toggle&&!this.target&&(this.target=this.$create("toggle",Oe(this.toggle,this.$el),{target:this.$el,mode:this.mode}).$el,te(this.target,"aria-haspopup",!0))},disconnected:function(){this.isActive()&&(ci=null)},events:[{name:"click",delegate:function(){return"."+this.clsDrop+"-close"},handler:function(e){e.preventDefault(),this.hide(!1)}},{name:"click",delegate:function(){return'a[href^="#"]'},handler:function(e){var a=e.defaultPrevented,n=e.current.hash
a||!n||Ce(n,this.$el)||this.hide(!1)}},{name:"beforescroll",handler:function(){this.hide(!1)}},{name:"toggle",self:!0,handler:function(e,a){e.preventDefault(),this.isToggled()?this.hide(!1):this.show(a.$el,!1)}},{name:"toggleshow",self:!0,handler:function(e,a){e.preventDefault(),this.show(a.$el)}},{name:"togglehide",self:!0,handler:function(e){e.preventDefault(),Le(this.$el,":focus,:hover")||this.hide()}},{name:ke+" focusin",filter:function(){return k(this.mode,"hover")},handler:function(e){da(e)||this.clearTimers()}},{name:ye+" focusout",filter:function(){return k(this.mode,"hover")},handler:function(e){!da(e)&&e.relatedTarget&&this.hide()}},{name:"toggled",self:!0,handler:function(e,a){a&&(this.clearTimers(),this.position())}},{name:"show",self:!0,handler:function(){var e=this
ci=this,this.tracker.init(),ea(this.$el,"hide",$e(document,fe,(function(a){var n=a.target
return!Ce(n,e.$el)&&ea(document,ge+" "+be+" scroll",(function(a){var i=a.defaultPrevented,r=a.type,t=a.target
i||r!==ge||n!==t||e.target&&Ce(n,e.target)||e.hide(!1)}),!0)})),{self:!0}),ea(this.$el,"hide",$e(document,"keydown",(function(a){27===a.keyCode&&e.hide(!1)})),{self:!0})}},{name:"beforehide",self:!0,handler:function(){this.clearTimers()}},{name:"hide",handler:function(e){var a=e.target
this.$el===a?(ci=this.isActive()?null:ci,this.tracker.cancel()):ci=null===ci&&Ce(a,this.$el)&&this.isToggled()?this:ci}}],update:{write:function(){this.isToggled()&&!Va(this.$el,this.clsEnter)&&this.position()},events:["resize"]},methods:{show:function(e,a){var n=this
if(void 0===e&&(e=this.target),void 0===a&&(a=!0),this.isToggled()&&e&&this.target&&e!==this.target&&this.hide(!1),this.target=e,this.clearTimers(),!this.isActive()){if(ci){if(a&&ci.isDelaying)return void(this.showTimer=setTimeout(this.show,10))
for(var i;ci&&i!==ci&&!Ce(this.$el,ci.$el);)i=ci,ci.hide(!1)}this.container&&Ee(this.$el)!==this.container&&Aa(this.container,this.$el),this.showTimer=setTimeout((function(){return n.toggleElement(n.$el,!0)}),a&&this.delayShow||0)}},hide:function(e){var a=this
void 0===e&&(e=!0)
var n,i,r=function(){return a.toggleElement(a.$el,!1,!1)}
this.clearTimers(),this.isDelaying=(n=this.$el,i=[],Da(n,(function(e){return"static"!==Wa(e,"position")&&i.push(e)})),i).some((function(e){return a.tracker.movesTo(e)})),e&&this.isDelaying?this.hideTimer=setTimeout(this.hide,50):e&&this.delayHide?this.hideTimer=setTimeout(r,this.delayHide):r()},clearTimers:function(){clearTimeout(this.showTimer),clearTimeout(this.hideTimer),this.showTimer=null,this.hideTimer=null,this.isDelaying=!1},isActive:function(){return ci===this},position:function(){za(this.$el,this.clsDrop+"-stack"),Ga(this.$el,this.clsDrop+"-boundary",this.boundaryAlign)
var e=cn(this.boundary),a=this.boundaryAlign?e:cn(this.target)
if("justify"===this.align){var n="y"===this.getAxis()?"width":"height"
Wa(this.$el,n,a[n])}else this.boundary&&this.$el.offsetWidth>Math.max(e.right-a.left,a.right-e.left)&&Ra(this.$el,this.clsDrop+"-stack")
this.positionAt(this.$el,this.boundaryAlign?this.boundary:this.target,this.boundary)}}},gi={mixins:[ti],args:"target",props:{target:Boolean},data:{target:!1},computed:{input:function(e,a){return xa(Te,a)},state:function(){return this.input.nextElementSibling},target:function(e,a){var n=e.target
return n&&(!0===n&&Ee(this.input)===a&&this.input.nextElementSibling||Oe(n,a))}},update:function(){var e=this.target,a=this.input
if(e){var n,i=_e(e)?"value":"textContent",r=e[i],t=a.files&&a.files[0]?a.files[0].name:Le(a,"select")&&(n=Ca("option",a).filter((function(e){return e.selected}))[0])?n.textContent:a.value
r!==t&&(e[i]=t)}},events:[{name:"change",handler:function(){this.$update()}},{name:"reset",el:function(){return xe(this.$el,"form")},handler:function(){this.$update()}}]},ki={update:{read:function(e){var a=Hn(this.$el)
if(!a||e.isInView===a)return!1
e.isInView=a},write:function(){this.$el.src=""+this.$el.src},events:["scroll","resize"]}},yi={props:{margin:String,firstColumn:Boolean},data:{margin:"uk-margin-small-top",firstColumn:"uk-first-column"},update:{read:function(){var e=bi(this.$el.children)
return{rows:e,columns:Si(e)}},write:function(e){for(var a=e.columns,n=e.rows,i=0;i<n.length;i++)for(var r=0;r<n[i].length;r++)Ga(n[i][r],this.margin,0!==i),Ga(n[i][r],this.firstColumn,!!~a[0].indexOf(n[i][r]))},events:["resize"]}}
function bi(e){return Ai(e,"top","bottom")}function Si(e){for(var a=[],n=0;n<e.length;n++)for(var i=Ai(e[n],"left","right"),r=0;r<i.length;r++)a[r]=a[r]?a[r].concat(i[r]):i[r]
return de?a.reverse():a}function Ai(e,a,n){for(var i=[[]],r=0;r<e.length;r++){var t=e[r]
if(Me(t))for(var o=Mi(t),s=i.length-1;s>=0;s--){var l=i[s]
if(!l[0]){l.push(t)
break}var u=void 0
if(l[0].offsetParent===t.offsetParent?u=Mi(l[0]):(o=Mi(t,!0),u=Mi(l[0],!0)),o[a]>=u[n]-1&&o[a]!==u[a]){i.push([t])
break}if(o[n]-1>u[a]||o[a]===u[a]){l.push(t)
break}if(0===s){i.unshift([t])
break}}}return i}function Mi(e,a){var n
void 0===a&&(a=!1)
var i=e.offsetTop,r=e.offsetLeft,t=e.offsetHeight,o=e.offsetWidth
return a&&(i=(n=hn(e))[0],r=n[1]),{top:i,left:r,bottom:i+t,right:r+o}}var Ti={extends:yi,mixins:[ti],name:"grid",props:{masonry:Boolean,parallax:Number},data:{margin:"uk-grid-margin",clsStack:"uk-grid-stack",masonry:!1,parallax:0},connected:function(){this.masonry&&Ra(this.$el,"uk-flex-top uk-flex-wrap-top")},update:[{write:function(e){var a=e.columns
Ga(this.$el,this.clsStack,a.length<2)},events:["resize"]},{read:function(e){var a=e.columns,n=e.rows
if(!a.length||!this.masonry&&!this.parallax||_i(this.$el))return e.translates=!1,!1
var i=!1,r=Re(this.$el),t=function(e){return e.map((function(e){return e.reduce((function(e,a){return e+a.offsetHeight}),0)}))}(a),o=function(e,a){var n=e.filter((function(e){return Va(e,a)}))[0]
return O(n?Wa(n,"marginTop"):Wa(e[0],"paddingLeft"))}(r,this.margin)*(n.length-1),s=Math.max.apply(Math,t)+o
this.masonry&&(i=function(e,a){var n=e.map((function(e){return Math.max.apply(Math,e.map((function(e){return e.offsetHeight})))}))
return a.map((function(e){var a=0
return e.map((function(i,r){return a+=r?n[r-1]-e[r-1].offsetHeight:0}))}))}(n,a=a.map((function(e){return Q(e,"offsetTop")}))))
var l=Math.abs(this.parallax)
return l&&(l=t.reduce((function(e,a,n){return Math.max(e,a+o+(n%2?l:l/8)-s)}),0)),{padding:l,columns:a,translates:i,height:i?s:""}},write:function(e){var a=e.height,n=e.padding
Wa(this.$el,"paddingBottom",n||""),!1!==a&&Wa(this.$el,"height",a)},events:["resize"]},{read:function(e){return e.height,!_i(this.$el)&&{scrolled:!!this.parallax&&Un(this.$el)*Math.abs(this.parallax)}},write:function(e){var a=e.columns,n=e.scrolled,i=e.translates;(!1!==n||i)&&a.forEach((function(e,a){return e.forEach((function(e,r){return Wa(e,"transform",n||i?"translateY("+((i&&-i[a][r])+(n?a%2?n:n/8:0))+"px)":"")}))}))},events:["scroll","resize"]}]}
function _i(e){return Re(e).some((function(e){return"absolute"===Wa(e,"position")}))}var wi=ce?{props:{selMinHeight:String},data:{selMinHeight:!1,forceHeight:!1},computed:{elements:function(e,a){var n=e.selMinHeight
return n?Ca(n,a):[a]}},update:[{read:function(){Wa(this.elements,"height","")},order:-5,events:["resize"]},{write:function(){var e=this
this.elements.forEach((function(a){var n=O(Wa(a,"minHeight"))
n&&(e.forceHeight||Math.round(n+vn(a,"height","content-box"))>=a.offsetHeight)&&Wa(a,"height",n)}))},order:5,events:["resize"]}]}:{},ji={mixins:[wi],args:"target",props:{target:String,row:Boolean},data:{target:"> *",row:!0,forceHeight:!0},computed:{elements:function(e,a){return Ca(e.target,a)}},update:{read:function(){return{rows:(this.row?bi(this.elements):[this.elements]).map(Ei)}},write:function(e){e.rows.forEach((function(e){var a=e.heights
return e.elements.forEach((function(e,n){return Wa(e,"minHeight",a[n])}))}))},events:["resize"]}}
function Ei(e){if(e.length<2)return{heights:[""],elements:e}
var a=e.map(Ni),n=Math.max.apply(Math,a),i=e.some((function(e){return e.style.minHeight})),r=e.some((function(e,i){return!e.style.minHeight&&a[i]<n}))
return i&&r&&(Wa(e,"minHeight",""),a=e.map(Ni),n=Math.max.apply(Math,a)),{heights:a=e.map((function(e,i){return a[i]===n&&O(e.style.minHeight).toFixed(2)!==n.toFixed(2)?"":n})),elements:e}}function Ni(e){var a=!1
Me(e)||(a=e.style.display,Wa(e,"display","block","important"))
var n=un(e).height-vn(e,"height","content-box")
return!1!==a&&Wa(e,"display",a),n}var Bi={mixins:[wi],props:{expand:Boolean,offsetTop:Boolean,offsetBottom:Boolean,minHeight:Number},data:{expand:!1,offsetTop:!1,offsetBottom:!1,minHeight:0},update:{read:function(e){var a=e.minHeight
if(!Me(this.$el))return!1
var n="",i=vn(this.$el,"height","content-box")
if(this.expand)n=pn(window)-(un(document.documentElement).height-un(this.$el).height)-i||""
else{if(n="calc(100vh",this.offsetTop){var r=cn(this.$el).top
n+=r>0&&r<pn(window)/2?" - "+r+"px":""}!0===this.offsetBottom?n+=" - "+un(this.$el.nextElementSibling).height+"px":x(this.offsetBottom)?n+=" - "+this.offsetBottom+"vh":this.offsetBottom&&p(this.offsetBottom,"px")?n+=" - "+O(this.offsetBottom)+"px":L(this.offsetBottom)&&(n+=" - "+un(Oe(this.offsetBottom,this.$el)).height+"px"),n+=(i?" - "+i+"px":"")+")"}return{minHeight:n,prev:a}},write:function(e){var a=e.minHeight,n=e.prev
Wa(this.$el,{minHeight:a}),a!==n&&this.$update(this.$el,"resize"),this.minHeight&&O(Wa(this.$el,"minHeight"))<this.minHeight&&Wa(this.$el,"minHeight",this.minHeight)},events:["resize"]}},Pi={args:"src",props:{id:Boolean,icon:String,src:String,style:String,width:Number,height:Number,ratio:Number,class:String,strokeAnimation:Boolean,focusable:Boolean,attributes:"list"},data:{ratio:1,include:["style","class","focusable"],class:"",strokeAnimation:!1},beforeConnect:function(){this.class+=" uk-svg"},connected:function(){var e,a=this
!this.icon&&k(this.src,"#")&&(e=this.src.split("#"),this.src=e[0],this.icon=e[1]),this.svg=this.getSvg().then((function(e){if(a._connected){var n=function(e,a){if(Ae(a)||"CANVAS"===a.tagName){a.hidden=!0
var n=a.nextElementSibling
return Ki(e,n)?n:Ta(a,e)}var i=a.lastElementChild
return Ki(e,i)?i:Aa(a,e)}(e,a.$el)
return a.svgEl&&n!==a.svgEl&&wa(a.svgEl),a.applyAttributes(n,e),a.$emit(),a.svgEl=n}}),X)},disconnected:function(){var e=this
this.svg.then((function(a){e._connected||(Ae(e.$el)&&(e.$el.hidden=!1),wa(a),e.svgEl=null)})),this.svg=null},update:{read:function(){return!!(this.strokeAnimation&&this.svgEl&&Me(this.svgEl))},write:function(){var e,a;(a=Ci(e=this.svgEl))&&e.style.setProperty("--uk-animation-stroke",a)},type:["resize"]},methods:{getSvg:function(){var e=this
return Li(this.src).then((function(a){return function(e,a){return a&&k(e,"<symbol")&&(e=function(e,a){var n
if(!xi[e])for(xi[e]={},Di.lastIndex=0;n=Di.exec(e);)xi[e][n[3]]='<svg xmlns="http://www.w3.org/2000/svg"'+n[1]+"svg>"
return xi[e][a]}(e,a)||e),(e=xa(e.substr(e.indexOf("<svg"))))&&e.hasChildNodes()&&e}(a,e.icon)||pa.reject("SVG not found.")}))},applyAttributes:function(e,a){var n=this
for(var i in this.$options.props)k(this.include,i)&&i in this&&te(e,i,this[i])
for(var r in this.attributes){var t=this.attributes[r].split(":",2),o=t[0],s=t[1]
te(e,o,s)}this.id||se(e,"id")
var l=["width","height"],u=l.map((function(e){return n[e]}))
u.some((function(e){return e}))||(u=l.map((function(e){return te(a,e)})))
var c=te(a,"viewBox")
c&&!u.some((function(e){return e}))&&(u=c.split(" ").slice(2)),u.forEach((function(a,i){return te(e,l[i],O(a)*n.ratio||null)}))}}},Li=re((function(e){return new pa((function(a,n){e?d(e,"data:")?a(decodeURIComponent(e.split(",")[1])):ka(e).then((function(e){return a(e.response)}),(function(){return n("SVG not found.")})):n()}))})),Di=/<symbol([^]*?id=(['"])(.+?)\2[^]*?<\/)symbol>/g,xi={}
function Ci(e){return Math.ceil(Math.max.apply(Math,[0].concat(Ca("[stroke]",e).map((function(e){try{return e.getTotalLength()}catch(e){return 0}})))))}function Ki(e,a){return Ri(e)&&Ri(a)&&zi(e)===zi(a)}function Ri(e){return e&&"svg"===e.tagName}function zi(e){return(e.innerHTML||(new XMLSerializer).serializeToString(e).replace(/<svg.*?>(.*?)<\/svg>/g,"$1")).replace(/\s/g,"")}var Oi={spinner:'<svg width="30" height="30" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" cx="15" cy="15" r="14"/></svg>',totop:'<svg width="18" height="10" viewBox="0 0 18 10" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 9 9 1 17 9 "/></svg>',marker:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="9" y="4" width="1" height="11"/><rect x="4" y="9" width="11" height="1"/></svg>',"close-icon":'<svg width="14" height="14" viewBox="0 0 14 14" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.1" x1="1" y1="1" x2="13" y2="13"/><line fill="none" stroke="#000" stroke-width="1.1" x1="13" y1="1" x2="1" y2="13"/></svg>',"close-large":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.4" x1="1" y1="1" x2="19" y2="19"/><line fill="none" stroke="#000" stroke-width="1.4" x1="19" y1="1" x2="1" y2="19"/></svg>',"navbar-toggle-icon":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect y="9" width="20" height="2"/><rect y="3" width="20" height="2"/><rect y="15" width="20" height="2"/></svg>',"overlay-icon":'<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><rect x="19" y="0" width="1" height="40"/><rect x="0" y="19" width="40" height="1"/></svg>',"pagination-next":'<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 1 6 6 1 11"/></svg>',"pagination-previous":'<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="6 1 1 6 6 11"/></svg>',"search-icon":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9" cy="9" r="7"/><path fill="none" stroke="#000" stroke-width="1.1" d="M14,14 L18,18 L14,14 Z"/></svg>',"search-large":'<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.8" cx="17.5" cy="17.5" r="16.5"/><line fill="none" stroke="#000" stroke-width="1.8" x1="38" y1="39" x2="29" y2="30"/></svg>',"search-navbar":'<svg width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10.5" cy="10.5" r="9.5"/><line fill="none" stroke="#000" stroke-width="1.1" x1="23" y1="23" x2="17" y2="17"/></svg>',"slidenav-next":'<svg width="14" height="24" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="1.225,23 12.775,12 1.225,1 "/></svg>',"slidenav-next-large":'<svg width="25" height="40" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="4.002,38.547 22.527,20.024 4,1.5 "/></svg>',"slidenav-previous":'<svg width="14" height="24" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="12.775,1 1.225,12 12.775,23 "/></svg>',"slidenav-previous-large":'<svg width="25" height="40" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="20.527,1.5 2,20.024 20.525,38.547 "/></svg>'},Ii={install:function(e){e.icon.add=function(a,n){var i,r=L(a)?((i={})[a]=n,i):a
q(r,(function(e,a){Oi[a]=e,delete Ui[a]})),e._initialized&&Da(document.body,(function(a){return q(e.getComponents(a),(function(e){e.$options.isIcon&&e.icon in r&&e.$reset()}))}))}},extends:Pi,args:"icon",props:["icon"],data:{include:["focusable"]},isIcon:!0,beforeConnect:function(){Ra(this.$el,"uk-icon")},methods:{getSvg:function(){var e=function(e){return Oi[e]?(Ui[e]||(Ui[e]=xa((Oi[function(e){return de?U(U(e,"left","right"),"previous","next"):e}(e)]||Oi[e]).trim())),Ui[e].cloneNode(!0)):null}(this.icon)
return e?pa.resolve(e):pa.reject("Icon not found.")}}},Vi={args:!1,extends:Ii,data:function(e){return{icon:r(e.constructor.options.name)}},beforeConnect:function(){Ra(this.$el,this.$name)}},Gi={extends:Vi,beforeConnect:function(){Ra(this.$el,"uk-slidenav")},computed:{icon:function(e,a){var n=e.icon
return Va(a,"uk-slidenav-large")?n+"-large":n}}},Hi={extends:Vi,computed:{icon:function(e,a){var n=e.icon
return Va(a,"uk-search-icon")&&Ke(a,".uk-search-large").length?"search-large":Ke(a,".uk-search-navbar").length?"search-navbar":n}}},Fi={extends:Vi,computed:{icon:function(){return"close-"+(Va(this.$el,"uk-close-large")?"large":"icon")}}},Ji={extends:Vi,connected:function(){var e=this
this.svg.then((function(a){return a&&1!==e.ratio&&Wa(xa("circle",a),"strokeWidth",1/e.ratio)}))}},Ui={},Wi={args:"dataSrc",props:{dataSrc:String,dataSrcset:Boolean,sizes:String,width:Number,height:Number,offsetTop:String,offsetLeft:String,target:String},data:{dataSrc:"",dataSrcset:!1,sizes:!1,width:!1,height:!1,offsetTop:"50vh",offsetLeft:"50vw",target:!1},computed:{cacheKey:function(e){var a=e.dataSrc
return this.$name+"."+a},width:function(e){var a=e.width,n=e.dataWidth
return a||n},height:function(e){var a=e.height,n=e.dataHeight
return a||n},sizes:function(e){var a=e.sizes,n=e.dataSizes
return a||n},isImg:function(e,a){return er(a)},target:{get:function(e){var a=e.target
return[this.$el].concat(Ie(a,this.$el))},watch:function(){this.observe()}},offsetTop:function(e){return kn(e.offsetTop,"height")},offsetLeft:function(e){return kn(e.offsetLeft,"width")}},connected:function(){window.IntersectionObserver?(nr[this.cacheKey]?Zi(this.$el,nr[this.cacheKey],this.dataSrcset,this.sizes):this.isImg&&this.width&&this.height&&Zi(this.$el,function(e,a,n){var i
return n&&(e=(i=ne.ratio({width:e,height:a},"width",kn(Qi(n)))).width,a=i.height),'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="'+e+'" height="'+a+'"></svg>'}(this.width,this.height,this.sizes)),this.observer=new IntersectionObserver(this.load,{rootMargin:this.offsetTop+"px "+this.offsetLeft+"px"}),requestAnimationFrame(this.observe)):Zi(this.$el,this.dataSrc,this.dataSrcset,this.sizes)},disconnected:function(){this.observer&&this.observer.disconnect()},update:{read:function(e){var a=this,n=e.image
return!!this.observer&&(n||"complete"!==document.readyState||this.load(this.observer.takeRecords()),!this.isImg&&void(n&&n.then((function(e){return e&&""!==e.currentSrc&&Zi(a.$el,ar(e))}))))},write:function(e){if(this.dataSrcset&&1!==window.devicePixelRatio){var a=Wa(this.$el,"backgroundSize");(a.match(/^(auto\s?)+$/)||O(a)===e.bgSize)&&(e.bgSize=(n=this.dataSrcset,i=this.sizes,r=kn(Qi(i)),(t=(n.match(Xi)||[]).map(O).sort((function(e,a){return e-a}))).filter((function(e){return e>=r}))[0]||t.pop()||""),Wa(this.$el,"backgroundSize",e.bgSize+"px"))}var n,i,r,t},events:["resize"]},methods:{load:function(e){var a=this
e.some((function(e){return K(e.isIntersecting)||e.isIntersecting}))&&(this._data.image=ya(this.dataSrc,this.dataSrcset,this.sizes).then((function(e){return Zi(a.$el,ar(e),e.srcset,e.sizes),nr[a.cacheKey]=ar(e),e}),(function(e){return aa(a.$el,new e.constructor(e.type,e))})),this.observer.disconnect())},observe:function(){var e=this
this._connected&&!this._data.image&&this.target.forEach((function(a){return e.observer.observe(a)}))}}}
function Zi(e,a,n,i){if(er(e)){var r=function(a,n){return n&&n!==e[a]&&(e[a]=n)}
r("sizes",i),r("srcset",n),r("src",a)}else a&&!k(e.style.backgroundImage,a)&&(Wa(e,"backgroundImage","url("+Ye(a)+")"),aa(e,na("load",!1)))}var qi=/\s*(.*?)\s*(\w+|calc\(.*?\))\s*(?:,|$)/g
function Qi(e){var a,n
for(qi.lastIndex=0;a=qi.exec(e);)if(!a[1]||window.matchMedia(a[1]).matches){a=d(n=a[2],"calc")?n.slice(5,-1).replace(Yi,(function(e){return kn(e)})).replace(/ /g,"").match($i).reduce((function(e,a){return e+ +a}),0):n
break}return a||"100vw"}var Yi=/\d+(?:\w+|%)/g,$i=/[+-]?(\d+)/g,Xi=/\s+\d+w\s*(?:,|$)/g
function er(e){return"IMG"===e.tagName}function ar(e){return e.currentSrc||e.src}var nr,ir="__test__"
try{(nr=window.sessionStorage||{})[ir]=1,delete nr[ir]}catch(e){nr={}}var rr={props:{media:Boolean},data:{media:!1},computed:{matchMedia:function(){var e=function(e){if(L(e))if("@"===e[0]){var a="breakpoint-"+e.substr(1)
e=O($a(a))}else if(isNaN(e))return e
return!(!e||isNaN(e))&&"(min-width: "+e+"px)"}(this.media)
return!e||window.matchMedia(e).matches}}},tr={mixins:[ti,rr],props:{fill:String},data:{fill:"",clsWrapper:"uk-leader-fill",clsHide:"uk-leader-hide",attrFill:"data-fill"},computed:{fill:function(e){return e.fill||$a("leader-fill-content")}},connected:function(){var e
e=Ea(this.$el,'<span class="'+this.clsWrapper+'">'),this.wrapper=e[0]},disconnected:function(){Na(this.wrapper.childNodes)},update:{read:function(e){var a=e.changed,n=e.width,i=n
return{width:n=Math.floor(this.$el.offsetWidth/2),fill:this.fill,changed:a||i!==n,hide:!this.matchMedia}},write:function(e){Ga(this.wrapper,this.clsHide,e.hide),e.changed&&(e.changed=!1,te(this.wrapper,this.attrFill,new Array(e.width).join(e.fill)))},events:["resize"]}},or=[],sr={mixins:[ti,mi,oi],props:{selPanel:String,selClose:String,escClose:Boolean,bgClose:Boolean,stack:Boolean},data:{cls:"uk-open",escClose:!0,bgClose:!0,overlay:!0,stack:!1},computed:{panel:function(e,a){return xa(e.selPanel,a)},transitionElement:function(){return this.panel},bgClose:function(e){return e.bgClose&&this.panel}},beforeDisconnect:function(){k(or,this)&&this.toggleElement(this.$el,!1,!1)},events:[{name:"click",delegate:function(){return this.selClose},handler:function(e){e.preventDefault(),this.hide()}},{name:"toggle",self:!0,handler:function(e,a){e.defaultPrevented||(e.preventDefault(),this.isToggled()===k(or,this)&&this.toggle())}},{name:"beforeshow",self:!0,handler:function(e){if(k(or,this))return!1
!this.stack&&or.length?(pa.all(or.map((function(e){return e.hide()}))).then(this.show),e.preventDefault()):or.push(this)}},{name:"show",self:!0,handler:function(){var e=this,a=document.documentElement
mn(window)>a.clientWidth&&this.overlay&&Wa(document.body,"overflowY","scroll"),this.stack&&Wa(this.$el,"zIndex",O(Wa(this.$el,"zIndex"))+or.length),Ra(a,this.clsPage),this.bgClose&&ea(this.$el,"hide",$e(document,fe,(function(a){var n=a.target
Z(or)!==e||e.overlay&&!Ce(n,e.$el)||Ce(n,e.panel)||ea(document,ge+" "+be+" scroll",(function(a){var i=a.defaultPrevented,r=a.type,t=a.target
i||r!==ge||n!==t||e.hide()}),!0)})),{self:!0}),this.escClose&&ea(this.$el,"hide",$e(document,"keydown",(function(a){27===a.keyCode&&Z(or)===e&&e.hide()})),{self:!0})}},{name:"shown",self:!0,handler:function(){je(this.$el)||te(this.$el,"tabindex","-1"),xa(":focus",this.$el)||this.$el.focus()}},{name:"hidden",self:!0,handler:function(){var e=this
k(or,this)&&or.splice(or.indexOf(this),1),or.length||Wa(document.body,"overflowY",""),Wa(this.$el,"zIndex",""),or.some((function(a){return a.clsPage===e.clsPage}))||za(document.documentElement,this.clsPage)}}],methods:{toggle:function(){return this.isToggled()?this.hide():this.show()},show:function(){var e=this
return this.container&&Ee(this.$el)!==this.container?(Aa(this.container,this.$el),new pa((function(a){return requestAnimationFrame((function(){return e.show().then(a)}))}))):this.toggleElement(this.$el,!0,lr(this))},hide:function(){return this.toggleElement(this.$el,!1,lr(this))}}}
function lr(e){var a=e.transitionElement,n=e._toggle
return function(e,i){return new pa((function(r,t){return ea(e,"show hide",(function(){e._reject&&e._reject(),e._reject=t,n(e,i)
var o=ea(a,"transitionstart",(function(){ea(a,"transitionend transitioncancel",r,{self:!0}),clearTimeout(s)}),{self:!0}),s=setTimeout((function(){o(),r()}),F(Wa(a,"transitionDuration")))}))})).then((function(){return delete e._reject}))}}var ur={install:function(e){var a=e.modal
function n(e,n,i,r){n=W({bgClose:!1,escClose:!0,labels:a.labels},n)
var t=a.dialog(e(n),n),o=new ma,s=!1
return $e(t.$el,"submit","form",(function(e){e.preventDefault(),o.resolve(r&&r(t)),s=!0,t.hide()})),$e(t.$el,"hide",(function(){return!s&&i(o)})),o.promise.dialog=t,o.promise}a.dialog=function(e,n){var i=a('<div class="uk-modal"> <div class="uk-modal-dialog">'+e+"</div> </div>",n)
return i.show(),$e(i.$el,"hidden",(function(){return pa.resolve().then((function(){return i.$destroy(!0)}))}),{self:!0}),i},a.alert=function(e,a){return n((function(a){var n=a.labels
return'<div class="uk-modal-body">'+(L(e)?e:Sa(e))+'</div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-primary uk-modal-close" autofocus>'+n.ok+"</button> </div>"}),a,(function(e){return e.resolve()}))},a.confirm=function(e,a){return n((function(a){var n=a.labels
return'<form> <div class="uk-modal-body">'+(L(e)?e:Sa(e))+'</div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-default uk-modal-close" type="button">'+n.cancel+'</button> <button class="uk-button uk-button-primary" autofocus>'+n.ok+"</button> </div> </form>"}),a,(function(e){return e.reject()}))},a.prompt=function(e,a,i){return n((function(n){var i=n.labels
return'<form class="uk-form-stacked"> <div class="uk-modal-body"> <label>'+(L(e)?e:Sa(e))+'</label> <input class="uk-input" value="'+(a||"")+'" autofocus> </div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-default uk-modal-close" type="button">'+i.cancel+'</button> <button class="uk-button uk-button-primary">'+i.ok+"</button> </div> </form>"}),i,(function(e){return e.resolve(null)}),(function(e){return xa("input",e.$el).value}))},a.labels={ok:"Ok",cancel:"Cancel"}},mixins:[sr],data:{clsPage:"uk-modal-page",selPanel:".uk-modal-dialog",selClose:".uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full"},events:[{name:"show",self:!0,handler:function(){Va(this.panel,"uk-margin-auto-vertical")?Ra(this.$el,"uk-flex"):Wa(this.$el,"display","block"),pn(this.$el)}},{name:"hidden",self:!0,handler:function(){Wa(this.$el,"display",""),za(this.$el,"uk-flex")}}]},cr={extends:li,data:{targets:"> .uk-parent",toggle:"> a",content:"> ul"}},dr=".uk-navbar-nav > li > a, .uk-navbar-item, .uk-navbar-toggle",hr={mixins:[ti,mi,wi],props:{dropdown:String,mode:"list",align:String,offset:Number,boundary:Boolean,boundaryAlign:Boolean,clsDrop:String,delayShow:Number,delayHide:Number,dropbar:Boolean,dropbarMode:String,dropbarAnchor:Boolean,duration:Number},data:{dropdown:dr,align:de?"right":"left",clsDrop:"uk-navbar-dropdown",mode:void 0,offset:void 0,delayShow:void 0,delayHide:void 0,boundaryAlign:void 0,flip:"x",boundary:!0,dropbar:!1,dropbarMode:"slide",dropbarAnchor:!1,duration:200,forceHeight:!0,selMinHeight:dr,container:!1},computed:{boundary:function(e,a){var n=e.boundary,i=e.boundaryAlign
return!0===n||i?a:n},dropbarAnchor:function(e,a){return Oe(e.dropbarAnchor,a)},pos:function(e){return"bottom-"+e.align},dropbar:{get:function(e){var a=e.dropbar
return a?(a=this._dropbar||Oe(a,this.$el)||xa("+ .uk-navbar-dropbar",this.$el))||(this._dropbar=xa("<div></div>")):null},watch:function(e){Ra(e,"uk-navbar-dropbar")},immediate:!0},dropContainer:function(e,a){return this.container||a},dropdowns:{get:function(e,a){var n=this,i=e.clsDrop,r=Ca("."+i,a)
return this.dropContainer!==a&&Ca("."+i,this.dropContainer).forEach((function(e){var a=n.getDropdown(e)
!k(r,e)&&a&&a.target&&Ce(a.target,n.$el)&&r.push(e)})),r},watch:function(e){var a=this
this.$create("drop",e.filter((function(e){return!a.getDropdown(e)})),W({},this.$props,{boundary:this.boundary,pos:this.pos,offset:this.dropbar||this.offset}))},immediate:!0},toggles:function(e,a){return Ca(e.dropdown,a)}},disconnected:function(){this.dropbar&&wa(this.dropbar),delete this._dropbar},events:[{name:"mouseover focusin",delegate:function(){return this.dropdown},handler:function(e){var a=e.current,n=this.getActive()
n&&k(n.mode,"hover")&&n.target&&!Ce(n.target,a)&&!n.tracker.movesTo(n.$el)&&n.hide(!1)}},{name:"keydown",delegate:function(){return this.dropdown},handler:function(e){var a=e.current,n=e.keyCode,i=this.getActive()
n===fr.DOWN&&oe(a,"aria-expanded")&&(e.preventDefault(),i&&i.target===a?mr(i.$el):(a.click(),ea(this.dropContainer,"show",(function(e){return mr(e.target)})))),pr(e,this.toggles,i)}},{name:"keydown",el:function(){return this.dropContainer},delegate:function(){return"."+this.clsDrop},handler:function(e){var a=e.current,n=e.keyCode
if(k(this.dropdowns,a)){var i=this.getActive(),r=Ca(we,a),t=b(r,(function(e){return Le(e,":focus")}))
n===fr.UP&&(e.preventDefault(),t>0&&r[t-1].focus()),n===fr.DOWN&&(e.preventDefault(),t<r.length-1&&r[t+1].focus()),n===fr.ESC&&i&&i.target&&i.target.focus(),pr(e,this.toggles,i)}}},{name:"mouseleave",el:function(){return this.dropbar},filter:function(){return this.dropbar},handler:function(){var e=this.getActive()
e&&k(e.mode,"hover")&&!this.dropdowns.some((function(e){return Le(e,":hover")}))&&e.hide()}},{name:"beforeshow",el:function(){return this.dropContainer},filter:function(){return this.dropbar},handler:function(){Ee(this.dropbar)||Ta(this.dropbarAnchor||this.$el,this.dropbar)}},{name:"show",el:function(){return this.dropContainer},filter:function(){return this.dropbar},handler:function(e,a){var n=a.$el,i=a.dir
Va(n,this.clsDrop)&&("slide"===this.dropbarMode&&Ra(this.dropbar,"uk-navbar-dropbar-slide"),this.clsDrop&&Ra(n,this.clsDrop+"-dropbar"),"bottom"===i&&this.transitionTo(n.offsetHeight+O(Wa(n,"marginTop"))+O(Wa(n,"marginBottom")),n))}},{name:"beforehide",el:function(){return this.dropContainer},filter:function(){return this.dropbar},handler:function(e,a){var n=a.$el,i=this.getActive()
Le(this.dropbar,":hover")&&i&&i.$el===n&&e.preventDefault()}},{name:"hide",el:function(){return this.dropContainer},filter:function(){return this.dropbar},handler:function(e,a){var n=a.$el
if(Va(n,this.clsDrop)){var i=this.getActive();(!i||i&&i.$el===n)&&this.transitionTo(0)}}}],methods:{getActive:function(){return ci&&Ce(ci.target,this.$el)&&ci},transitionTo:function(e,a){var n=this,i=this.dropbar,r=Me(i)?pn(i):0
return Wa(a=r<e&&a,"clip","rect(0,"+a.offsetWidth+"px,"+r+"px,0)"),pn(i,r),nn.cancel([a,i]),pa.all([nn.start(i,{height:e},this.duration),nn.start(a,{clip:"rect(0,"+a.offsetWidth+"px,"+e+"px,0)"},this.duration)]).catch(X).then((function(){Wa(a,{clip:""}),n.$update(i)}))},getDropdown:function(e){return this.$getComponent(e,"drop")||this.$getComponent(e,"dropdown")}}}
function pr(e,a,n){var i=e.current,r=e.keyCode,t=n&&n.target||i,o=a.indexOf(t)
r===fr.LEFT&&o>0&&(n&&n.hide(!1),a[o-1].focus()),r===fr.RIGHT&&o<a.length-1&&(n&&n.hide(!1),a[o+1].focus()),r===fr.TAB&&(t.focus(),n&&n.hide(!1))}function mr(e){if(!xa(":focus",e)){var a=xa(we,e)
a&&a.focus()}}var fr={TAB:9,ESC:27,LEFT:37,UP:38,RIGHT:39,DOWN:40},vr={mixins:[sr],args:"mode",props:{mode:String,flip:Boolean,overlay:Boolean},data:{mode:"slide",flip:!1,overlay:!1,clsPage:"uk-offcanvas-page",clsContainer:"uk-offcanvas-container",selPanel:".uk-offcanvas-bar",clsFlip:"uk-offcanvas-flip",clsContainerAnimation:"uk-offcanvas-container-animation",clsSidebarAnimation:"uk-offcanvas-bar-animation",clsMode:"uk-offcanvas",clsOverlay:"uk-offcanvas-overlay",selClose:".uk-offcanvas-close",container:!1},computed:{clsFlip:function(e){var a=e.flip,n=e.clsFlip
return a?n:""},clsOverlay:function(e){var a=e.overlay,n=e.clsOverlay
return a?n:""},clsMode:function(e){var a=e.mode
return e.clsMode+"-"+a},clsSidebarAnimation:function(e){var a=e.mode,n=e.clsSidebarAnimation
return"none"===a||"reveal"===a?"":n},clsContainerAnimation:function(e){var a=e.mode,n=e.clsContainerAnimation
return"push"!==a&&"reveal"!==a?"":n},transitionElement:function(e){return"reveal"===e.mode?Ee(this.panel):this.panel}},update:{read:function(){this.isToggled()&&!Me(this.$el)&&this.hide()},events:["resize"]},events:[{name:"click",delegate:function(){return'a[href^="#"]'},handler:function(e){var a=e.current.hash
!e.defaultPrevented&&a&&xa(a,document.body)&&this.hide()}},{name:"touchstart",passive:!0,el:function(){return this.panel},handler:function(e){var a=e.targetTouches
1===a.length&&(this.clientY=a[0].clientY)}},{name:"touchmove",self:!0,passive:!1,filter:function(){return this.overlay},handler:function(e){e.cancelable&&e.preventDefault()}},{name:"touchmove",passive:!1,el:function(){return this.panel},handler:function(e){if(1===e.targetTouches.length){var a=e.targetTouches[0].clientY-this.clientY,n=this.panel,i=n.scrollTop,r=n.scrollHeight,t=n.clientHeight;(t>=r||0===i&&a>0||r-i<=t&&a<0)&&e.cancelable&&e.preventDefault()}}},{name:"show",self:!0,handler:function(){"reveal"!==this.mode||Va(Ee(this.panel),this.clsMode)||(ja(this.panel,"<div>"),Ra(Ee(this.panel),this.clsMode)),Wa(document.documentElement,"overflowY",this.overlay?"hidden":""),Ra(document.body,this.clsContainer,this.clsFlip),Wa(document.body,"touch-action","pan-y pinch-zoom"),Wa(this.$el,"display","block"),Ra(this.$el,this.clsOverlay),Ra(this.panel,this.clsSidebarAnimation,"reveal"!==this.mode?this.clsMode:""),pn(document.body),Ra(document.body,this.clsContainerAnimation),this.clsContainerAnimation&&(gr().content+=",user-scalable=0")}},{name:"hide",self:!0,handler:function(){za(document.body,this.clsContainerAnimation),Wa(document.body,"touch-action","")}},{name:"hidden",self:!0,handler:function(){var e
this.clsContainerAnimation&&((e=gr()).content=e.content.replace(/,user-scalable=0$/,"")),"reveal"===this.mode&&Na(this.panel),za(this.panel,this.clsSidebarAnimation,this.clsMode),za(this.$el,this.clsOverlay),Wa(this.$el,"display",""),za(document.body,this.clsContainer,this.clsFlip),Wa(document.documentElement,"overflowY","")}},{name:"swipeLeft swipeRight",handler:function(e){this.isToggled()&&p(e.type,"Left")^this.flip&&this.hide()}}]}
function gr(){return xa('meta[name="viewport"]',document.head)||Aa(document.head,'<meta name="viewport">')}var kr={mixins:[ti],props:{selContainer:String,selContent:String,minHeight:Number},data:{selContainer:".uk-modal",selContent:".uk-modal-dialog",minHeight:150},computed:{container:function(e,a){return xe(a,e.selContainer)},content:function(e,a){return xe(a,e.selContent)}},connected:function(){Wa(this.$el,"minHeight",this.minHeight)},update:{read:function(){return!!(this.content&&this.container&&Me(this.$el))&&{current:O(Wa(this.$el,"maxHeight")),max:Math.max(this.minHeight,pn(this.container)-(un(this.content).height-pn(this.$el)))}},write:function(e){var a=e.current,n=e.max
Wa(this.$el,"maxHeight",n),Math.round(a)!==Math.round(n)&&aa(this.$el,"resize")},events:["resize"]}},yr={props:["width","height"],connected:function(){Ra(this.$el,"uk-responsive-width")},update:{read:function(){return!!(Me(this.$el)&&this.width&&this.height)&&{width:mn(Ee(this.$el)),height:this.height}},write:function(e){pn(this.$el,ne.contain({height:this.height,width:this.width},e).height)},events:["resize"]}},br={props:{offset:Number},data:{offset:0},methods:{scrollTo:function(e){var a=this
e=e&&xa(e)||document.body,aa(this.$el,"beforescroll",[this,e])&&Jn(e,{offset:this.offset}).then((function(){return aa(a.$el,"scrolled",[a,e])}))}},events:{click:function(e){e.defaultPrevented||(e.preventDefault(),this.scrollTo("#"+Ye(decodeURIComponent((this.$el.hash||"").substr(1)))))}}},Sr="_ukScrollspy",Ar={args:"cls",props:{cls:String,target:String,hidden:Boolean,offsetTop:Number,offsetLeft:Number,repeat:Boolean,delay:Number},data:function(){return{cls:"",target:!1,hidden:!0,offsetTop:0,offsetLeft:0,repeat:!1,delay:0,inViewClass:"uk-scrollspy-inview"}},computed:{elements:{get:function(e,a){var n=e.target
return n?Ca(n,a):[a]},watch:function(e){this.hidden&&Wa(Ne(e,":not(."+this.inViewClass+")"),"visibility","hidden")},immediate:!0}},disconnected:function(){var e=this
this.elements.forEach((function(a){za(a,e.inViewClass,a[Sr]?a[Sr].cls:""),delete a[Sr]}))},update:[{read:function(e){var a=this
if(!e.update)return pa.resolve().then((function(){a.$emit(),e.update=!0})),!1
this.elements.forEach((function(e){e[Sr]||(e[Sr]={cls:le(e,"uk-scrollspy-class")||a.cls}),e[Sr].show=Hn(e,a.offsetTop,a.offsetLeft)}))},write:function(e){var a=this
this.elements.forEach((function(n){var i=n[Sr]
!i.show||i.inview||i.queued?!i.show&&i.inview&&!i.queued&&a.repeat&&a.toggle(n,!1):(i.queued=!0,e.promise=(e.promise||pa.resolve()).then((function(){return new pa((function(e){return setTimeout(e,a.delay)}))})).then((function(){a.toggle(n,!0),setTimeout((function(){i.queued=!1,a.$emit()}),300)})))}))},events:["scroll","resize"]}],methods:{toggle:function(e,a){var n=e[Sr]
n.off&&n.off(),Wa(e,"visibility",!a&&this.hidden?"hidden":""),Ga(e,this.inViewClass,a),Ga(e,n.cls),/\buk-animation-/.test(n.cls)&&(n.off=ea(e,"animationcancel animationend",(function(){return Oa(e,"uk-animation-[\\w-]+")}))),aa(e,a?"inview":"outview"),n.inview=a,this.$update(e)}}},Mr={props:{cls:String,closest:String,scroll:Boolean,overflow:Boolean,offset:Number},data:{cls:"uk-active",closest:!1,scroll:!1,overflow:!0,offset:0},computed:{links:{get:function(e,a){return Ca('a[href^="#"]',a).filter((function(e){return e.hash}))},watch:function(e){this.scroll&&this.$create("scroll",e,{offset:this.offset||0})},immediate:!0},targets:function(){return Ca(this.links.map((function(e){return Ye(e.hash).substr(1)})).join(","))},elements:function(e){var a=e.closest
return xe(this.links,a||"*")}},update:[{read:function(){var e=this,a=this.targets.length
if(!a||!Me(this.$el))return!1
var n=Wn(this.targets,/auto|scroll/,!0)[0],i=n.scrollTop,r=n.scrollHeight-qn(n),t=!1
return i===r?t=a-1:(this.targets.every((function(a,i){if(cn(a).top-cn(Zn(n)).top-e.offset<=0)return t=i,!0})),!1===t&&this.overflow&&(t=0)),{active:t}},write:function(e){var a=e.active,n=!1!==a&&!Va(this.elements[a],this.cls)
this.links.forEach((function(e){return e.blur()})),za(this.elements,this.cls),Ra(this.elements[a],this.cls),n&&aa(this.$el,"active",[a,this.elements[a]])},events:["scroll","resize"]}]},Tr={mixins:[ti,rr],props:{top:null,bottom:Boolean,offset:String,animation:String,clsActive:String,clsInactive:String,clsFixed:String,clsBelow:String,selTarget:String,widthElement:Boolean,showOnUp:Boolean,targetOffset:Number},data:{top:0,bottom:!1,offset:0,animation:"",clsActive:"uk-active",clsInactive:"",clsFixed:"uk-sticky-fixed",clsBelow:"uk-sticky-below",selTarget:"",widthElement:!1,showOnUp:!1,targetOffset:!1},computed:{offset:function(e){return kn(e.offset)},selTarget:function(e,a){var n=e.selTarget
return n&&xa(n,a)||a},widthElement:function(e,a){return Oe(e.widthElement,a)||this.placeholder},isActive:{get:function(){return Va(this.selTarget,this.clsActive)},set:function(e){e&&!this.isActive?(Ia(this.selTarget,this.clsInactive,this.clsActive),aa(this.$el,"active")):e||Va(this.selTarget,this.clsInactive)||(Ia(this.selTarget,this.clsActive,this.clsInactive),aa(this.$el,"inactive"))}}},connected:function(){this.placeholder=xa("+ .uk-sticky-placeholder",this.$el)||xa('<div class="uk-sticky-placeholder"></div>'),this.isFixed=!1,this.isActive=!1},disconnected:function(){this.isFixed&&(this.hide(),za(this.selTarget,this.clsInactive)),wa(this.placeholder),this.placeholder=null,this.widthElement=null},events:[{name:"load hashchange popstate",el:function(){return window},handler:function(){var e=this
if(!1!==this.targetOffset&&location.hash&&window.pageYOffset>0){var a=xa(location.hash)
a&&bn.read((function(){var n=cn(a).top,i=cn(e.$el).top,r=e.$el.offsetHeight
e.isFixed&&i+r>=n&&i<=n+a.offsetHeight&&Fn(window,n-r-(x(e.targetOffset)?e.targetOffset:0)-e.offset)}))}}}],update:[{read:function(e,a){var n=e.height
if(this.inactive=!this.matchMedia||!Me(this.$el),this.inactive)return!1
if(this.isActive&&a.has("resize")&&(this.hide(),n=this.$el.offsetHeight,this.show()),(n=this.isActive?n:this.$el.offsetHeight)+this.offset>pn(window))return this.inactive=!0,!1
var i=this.isFixed?this.placeholder:this.$el
this.topOffset=cn(i).top,this.bottomOffset=this.topOffset+n,this.offsetParentTop=cn(i.offsetParent).top
var r=_r("bottom",this)
return this.top=Math.max(O(_r("top",this)),this.topOffset)-this.offset,this.bottom=r&&r-this.$el.offsetHeight,this.width=un(Me(this.widthElement)?this.widthElement:this.$el).width,{height:n,top:hn(this.placeholder)[0],margins:Wa(this.$el,["marginTop","marginBottom","marginLeft","marginRight"])}},write:function(e){var a=e.height,n=e.margins,i=this.placeholder
Wa(i,W({height:a},n)),Ce(i,document)||(Ta(this.$el,i),i.hidden=!0),this.isActive=!!this.isActive},events:["resize"]},{read:function(e){var a=e.scroll
return void 0===a&&(a=0),this.scroll=window.pageYOffset,{dir:a<=this.scroll?"down":"up",scroll:this.scroll}},write:function(e,a){var n=this,i=Date.now(),r=a.has("scroll"),t=e.initTimestamp
void 0===t&&(t=0)
var o=e.dir,s=e.lastDir,l=e.lastScroll,u=e.scroll,c=e.top
if(e.lastScroll=u,!(u<0||u===l&&r||this.showOnUp&&!r&&!this.isFixed||((i-t>300||o!==s)&&(e.initScroll=u,e.initTimestamp=i),e.lastDir=o,this.showOnUp&&!this.isFixed&&Math.abs(e.initScroll-u)<=30&&Math.abs(l-u)<=10)))if(this.inactive||u<this.top||this.showOnUp&&(u<=this.top||"down"===o&&r||"up"===o&&!this.isFixed&&u<=this.bottomOffset)){if(!this.isFixed)return void(sn.inProgress(this.$el)&&c>u&&(sn.cancel(this.$el),this.hide()))
this.isFixed=!1,this.animation&&u>this.topOffset?(sn.cancel(this.$el),sn.out(this.$el,this.animation).then((function(){return n.hide()}),X)):this.hide()}else this.isFixed?this.update():this.animation?(sn.cancel(this.$el),this.show(),sn.in(this.$el,this.animation).catch(X)):this.show()},events:["resize","scroll"]}],methods:{show:function(){this.isFixed=!0,this.update(),this.placeholder.hidden=!1},hide:function(){this.isActive=!1,za(this.$el,this.clsFixed,this.clsBelow),Wa(this.$el,{position:"",top:"",width:""}),this.placeholder.hidden=!0},update:function(){var e=0!==this.top||this.scroll>this.top,a=Math.max(0,this.offset),n="fixed"
x(this.bottom)&&this.scroll>this.bottom-this.offset&&(a=this.bottom-this.offsetParentTop,n="absolute"),Wa(this.$el,{position:n,top:a+"px",width:this.width}),this.isActive=e,Ga(this.$el,this.clsBelow,this.scroll>this.bottomOffset),Ra(this.$el,this.clsFixed)}}}
function _r(e,a){var n=a.$props,i=a.$el,r=a[e+"Offset"],t=n[e]
if(t)return L(t)&&t.match(/^-?\d/)?r+kn(t):cn(!0===t?Ee(i):Oe(t,i)).bottom}var wr={mixins:[oi],args:"connect",props:{connect:String,toggle:String,itemNav:String,active:Number,swiping:Boolean},data:{connect:"~.uk-switcher",toggle:"> * > :first-child",itemNav:!1,active:0,swiping:!0,cls:"uk-active",attrItem:"uk-switcher-item"},computed:{connects:{get:function(e,a){return Ie(e.connect,a)},watch:function(e){var a=this
this.swiping&&Wa(e,"touch-action","pan-y pinch-zoom")
var n=this.index()
this.connects.forEach((function(e){return Re(e).forEach((function(e,i){return Ga(e,a.cls,i===n)}))}))},immediate:!0},toggles:{get:function(e,a){return Ca(e.toggle,a).filter((function(e){return!Le(e,".uk-disabled *, .uk-disabled, [disabled]")}))},watch:function(e){var a=this.index()
this.show(~a?a:e[this.active]||e[0])},immediate:!0},children:function(){var e=this
return Re(this.$el).filter((function(a){return e.toggles.some((function(e){return Ce(e,a)}))}))}},events:[{name:"click",delegate:function(){return this.toggle},handler:function(e){e.preventDefault(),this.show(e.current)}},{name:"click",el:function(){return this.connects.concat(this.itemNav?Ie(this.itemNav,this.$el):[])},delegate:function(){return"["+this.attrItem+"],[data-"+this.attrItem+"]"},handler:function(e){e.preventDefault(),this.show(le(e.current,this.attrItem))}},{name:"swipeRight swipeLeft",filter:function(){return this.swiping},el:function(){return this.connects},handler:function(e){var a=e.type
this.show(p(a,"Left")?"next":"previous")}}],methods:{index:function(){var e=this
return b(this.children,(function(a){return Va(a,e.cls)}))},show:function(e){var a=this,n=this.index(),i=ie(this.children[ie(e,this.toggles,n)],Re(this.$el))
n!==i&&(this.children.forEach((function(e,n){Ga(e,a.cls,i===n),te(a.toggles[n],"aria-expanded",i===n)})),this.connects.forEach((function(e){var r=e.children
return a.toggleElement(G(r).filter((function(e){return Va(e,a.cls)})),!1,n>=0).then((function(){return a.toggleElement(r[i],!0,n>=0)}))})))}}},jr={mixins:[ti],extends:wr,props:{media:Boolean},data:{media:960,attrItem:"uk-tab-item"},connected:function(){var e=Va(this.$el,"uk-tab-left")?"uk-tab-left":!!Va(this.$el,"uk-tab-right")&&"uk-tab-right"
e&&this.$create("toggle",this.$el,{cls:e,mode:"media",media:this.media})}},Er={mixins:[rr,oi],args:"target",props:{href:String,target:null,mode:"list",queued:Boolean},data:{href:!1,target:!1,mode:"click",queued:!0},connected:function(){k(this.mode,"media")||je(this.$el)||te(this.$el,"tabindex","0")},computed:{target:{get:function(e,a){var n=e.href,i=e.target
return(i=Ie(i||n,a)).length&&i||[a]},watch:function(){this.updateAria()},immediate:!0}},events:[{name:fe,filter:function(){return k(this.mode,"hover")},handler:function(e){var a=this
da(e)&&!this._showState&&(aa(this.$el,"focus"),ea(document,fe,(function(){return aa(a.$el,"blur")}),!0,(function(e){return!Ce(e.target,a.$el)})),k(this.mode,"click")&&(this._preventClick=!0))}},{name:ke+" "+ye+" focus blur",filter:function(){return k(this.mode,"hover")},handler:function(e){if(!da(e)){var a=k([ke,"focus"],e.type),n=te(this.$el,"aria-expanded")
!a&&(e.type===ye&&Le(this.$el,":focus")||"blur"===e.type&&Le(this.$el,":hover"))||(this._showState&&a===(n!==this._showState)?a||(this._showState=null):(this._showState=a?n:null,this.toggle("toggle"+(a?"show":"hide"))))}}},{name:"keydown",filter:function(){return k(this.mode,"click")&&"INPUT"!==this.$el.tagName},handler:function(e){32===e.keyCode&&(e.preventDefault(),this.$el.click())}},{name:"click",filter:function(){return k(this.mode,"click")},handler:function(e){if(this._preventClick)return this._preventClick=null
var a;(xe(e.target,'a[href="#"], a[href=""]')||(a=xe(e.target,"a[href]"))&&("true"!==te(this.$el,"aria-expanded")||a.hash&&Le(this.target,a.hash)))&&e.preventDefault(),this.toggle()}},{name:"toggled",self:!0,el:function(){return this.target},handler:function(e,a){e.target===this.target[0]&&this.updateAria(a)}}],update:{read:function(){return!(!k(this.mode,"media")||!this.media)&&{match:this.matchMedia}},write:function(e){var a=e.match,n=this.isToggled(this.target);(a?!n:n)&&this.toggle()},events:["resize"]},methods:{toggle:function(e){var a=this
if(aa(this.target,e||"toggle",[this])){if(!this.queued)return this.toggleElement(this.target)
var n=this.target.filter((function(e){return Va(e,a.clsLeave)}))
if(n.length)this.target.forEach((function(e){var i=k(n,e)
a.toggleElement(e,i,i)}))
else{var i=this.target.filter(this.isToggled)
this.toggleElement(i,!1).then((function(){return a.toggleElement(a.target.filter((function(e){return!k(i,e)})),!0)}))}}},updateAria:function(e){k(this.mode,"media")||te(this.$el,"aria-expanded",P(e)?e:this.isToggled(this.target))}}}
q(Object.freeze({__proto__:null,Accordion:li,Alert:di,Cover:pi,Drop:vi,Dropdown:vi,FormCustom:gi,Gif:ki,Grid:Ti,HeightMatch:ji,HeightViewport:Bi,Icon:Ii,Img:Wi,Leader:tr,Margin:yi,Modal:ur,Nav:cr,Navbar:hr,Offcanvas:vr,OverflowAuto:kr,Responsive:yr,Scroll:br,Scrollspy:Ar,ScrollspyNav:Mr,Sticky:Tr,Svg:Pi,Switcher:wr,Tab:jr,Toggle:Er,Video:hi,Close:Fi,Spinner:Ji,SlidenavNext:Gi,SlidenavPrevious:Gi,SearchIcon:Hi,Marker:Vi,NavbarToggleIcon:Vi,OverlayIcon:Vi,PaginationNext:Vi,PaginationPrevious:Vi,Totop:Vi}),(function(e,a){return ri.component(a,e)})),ri.use((function(e){if(ue){var a,n,i=function(){a||(a=!0,bn.write((function(){return a=!1})),e.update(null,"resize"))}
$e(window,"load resize",i),$e(document,"loadedmetadata load",i,!0),"ResizeObserver"in window&&new ResizeObserver(i).observe(document.documentElement),$e(window,"scroll",(function(a){n||(n=!0,bn.write((function(){return n=!1})),e.update(null,a.type))}),{passive:!0,capture:!0})
var r=0
$e(document,"animationstart",(function(e){var a=e.target;(Wa(a,"animationName")||"").match(/^uk-.*(left|right)/)&&(r++,Wa(document.documentElement,"overflowX","hidden"),setTimeout((function(){--r||Wa(document.documentElement,"overflowX","")}),F(Wa(a,"animationDuration"))+100))}),!0),$e(document,fe,(function(e){if(da(e)){var a=ha(e),n="tagName"in e.target?e.target:Ee(e.target)
ea(document,ge+" "+be+" scroll",(function(e){var i=ha(e),r=i.x,t=i.y;("scroll"!==e.type&&n&&r&&Math.abs(a.x-r)>100||t&&Math.abs(a.y-t)>100)&&setTimeout((function(){var e,i,o,s
aa(n,"swipe"),aa(n,"swipe"+(e=a.x,i=a.y,o=r,s=t,Math.abs(e-o)>=Math.abs(i-s)?e-o>0?"Left":"Right":i-s>0?"Up":"Down"))}))}))}}),{passive:!0})}})),function(e){var a=e.connect,n=e.disconnect
function i(e){for(var i=e.addedNodes,r=e.removedNodes,t=0;t<i.length;t++)Da(i[t],a)
for(var o=0;o<r.length;o++)Da(r[o],n)}function r(a){var n=a.target,i=a.attributeName,r=ii(i)
if(r&&r in e)if(oe(n,i))e[r](n)
else{var t=e.getComponent(n,r)
t&&t.$destroy()}}ue&&window.MutationObserver&&bn.read((function(){document.body&&Da(document.body,a),new MutationObserver((function(e){return e.forEach(i)})).observe(document,{childList:!0,subtree:!0}),new MutationObserver((function(e){return e.forEach(r)})).observe(document,{attributes:!0,subtree:!0}),e._initialized=!0}))}(ri)
var Nr={mixins:[ti],props:{date:String,clsWrapper:String},data:{date:"",clsWrapper:".uk-countdown-%unit%"},computed:{date:function(e){var a=e.date
return Date.parse(a)},days:function(e,a){return xa(e.clsWrapper.replace("%unit%","days"),a)},hours:function(e,a){return xa(e.clsWrapper.replace("%unit%","hours"),a)},minutes:function(e,a){return xa(e.clsWrapper.replace("%unit%","minutes"),a)},seconds:function(e,a){return xa(e.clsWrapper.replace("%unit%","seconds"),a)},units:function(){var e=this
return["days","hours","minutes","seconds"].filter((function(a){return e[a]}))}},connected:function(){this.start()},disconnected:function(){var e=this
this.stop(),this.units.forEach((function(a){return ba(e[a])}))},events:[{name:"visibilitychange",el:function(){return document},handler:function(){document.hidden?this.stop():this.start()}}],update:{write:function(){var e,a=this,n={total:e=this.date-Date.now(),seconds:e/1e3%60,minutes:e/1e3/60%60,hours:e/1e3/60/60%24,days:e/1e3/60/60/24}
n.total<=0&&(this.stop(),n.days=n.hours=n.minutes=n.seconds=0),this.units.forEach((function(e){var i=String(Math.floor(n[e]))
i=i.length<2?"0"+i:i
var r=a[e]
r.textContent!==i&&((i=i.split("")).length!==r.children.length&&Sa(r,i.map((function(){return"<span></span>"})).join("")),i.forEach((function(e,a){return r.children[a].textContent=e})))}))}},methods:{start:function(){this.stop(),this.date&&this.units.length&&(this.$update(),this.timer=setInterval(this.$update,1e3))},stop:function(){this.timer&&(clearInterval(this.timer),this.timer=null)}}},Br="uk-transition-leave",Pr="uk-transition-enter"
function Lr(e,a,n,i){void 0===i&&(i=0)
var r=Dr(a,!0),t={opacity:1},o={opacity:0},s=function(e){return function(){return r===Dr(a)?e():pa.reject()}},l=s((function(){return Ra(a,Br),pa.all(Cr(a).map((function(e,a){return new pa((function(r){return setTimeout((function(){return nn.start(e,o,n/2,"ease").then(r)}),a*i)}))}))).then((function(){return za(a,Br)}))})),u=s((function(){var s=pn(a)
return Ra(a,Pr),e(),Wa(Re(a),{opacity:0}),new pa((function(e){return requestAnimationFrame((function(){var l=Re(a),u=pn(a)
Wa(a,"alignContent","flex-start"),pn(a,s)
var c=Cr(a)
Wa(l,o)
var d=c.map((function(e,a){return new pa((function(r){return setTimeout((function(){return nn.start(e,t,n/2,"ease").then(r)}),a*i)}))}))
s!==u&&d.push(nn.start(a,{height:u},n/2+c.length*i,"ease")),pa.all(d).then((function(){za(a,Pr),r===Dr(a)&&(Wa(a,{height:"",alignContent:""}),Wa(l,{opacity:""}),delete a.dataset.transition),e()}))}))}))}))
return Va(a,Br)?xr(a).then(u):Va(a,Pr)?xr(a).then(l).then(u):l().then(u)}function Dr(e,a){return a&&(e.dataset.transition=1+Dr(e)),z(e.dataset.transition)||0}function xr(e){return pa.all(Re(e).filter(nn.inProgress).map((function(e){return new pa((function(a){return ea(e,"transitionend transitioncanceled",a)}))})))}function Cr(e){return bi(Re(e)).reduce((function(e,a){return e.concat(Q(a.filter((function(e){return Hn(e)})),"offsetLeft"))}),[])}function Kr(e,a,n){return new pa((function(i){return requestAnimationFrame((function(){var r=Re(a),t=r.map((function(e){return Rr(e,!0)})),o=Wa(a,["height","padding"])
nn.cancel(a),r.forEach(nn.cancel),zr(a),e(),r=r.concat(Re(a).filter((function(e){return!k(r,e)}))),pa.resolve().then((function(){bn.flush()
var e=Wa(a,["height","padding"]),s=function(e,a,n){var i=a.map((function(e,a){return!(!Ee(e)||!(a in n))&&(n[a]?Me(e)?Or(e):{opacity:0}:{opacity:Me(e)?1:0})})),r=i.map((function(i,r){var t=Ee(a[r])===e&&(n[r]||Rr(a[r]))
return!!t&&(i?"opacity"in i||(t.opacity%1?i.opacity=1:delete t.opacity):delete t.opacity,t)}))
return[i,r]}(a,r,t),l=s[0],u=s[1]
r.forEach((function(e,a){return u[a]&&Wa(e,u[a])})),Wa(a,W({display:"block"},o)),requestAnimationFrame((function(){var t=r.map((function(e,i){return Ee(e)===a&&nn.start(e,l[i],n,"ease")})).concat(nn.start(a,e,n,"ease"))
pa.all(t).then((function(){r.forEach((function(e,n){return Ee(e)===a&&Wa(e,"display",0===l[n].opacity?"none":"")})),zr(a)}),X).then(i)}))}))}))}))}function Rr(e,a){var n=Wa(e,"zIndex")
return!!Me(e)&&W({display:"",opacity:a?Wa(e,"opacity"):"0",pointerEvents:"none",position:"absolute",zIndex:"auto"===n?ze(e):n},Or(e))}function zr(e){Wa(e.children,{height:"",left:"",opacity:"",pointerEvents:"",position:"",top:"",marginTop:"",marginLeft:"",transform:"",width:"",zIndex:""}),Wa(e,{height:"",display:"",padding:""})}function Or(e){var a=cn(e),n=a.height,i=a.width,r=dn(e),t=r.top,o=r.left,s=Wa(e,["marginTop","marginLeft"])
return{top:t,left:o,height:n,width:i,marginLeft:s.marginLeft,marginTop:s.marginTop,transform:""}}var Ir={props:{duration:Number,animation:Boolean},data:{duration:150,animation:"slide"},methods:{animate:function(e,a){var n=this
void 0===a&&(a=this.$el)
var i=this.animation,r="fade"===i?Lr:"delayed-fade"===i?function(){for(var e=[],a=arguments.length;a--;)e[a]=arguments[a]
return Lr.apply(void 0,e.concat([40]))}:i?Kr:function(){return e(),pa.resolve()}
return r(e,a,this.duration).then((function(){return n.$update(a,"resize")}),X)}}},Vr={mixins:[Ir],args:"target",props:{target:Boolean,selActive:Boolean},data:{target:null,selActive:!1,attrItem:"uk-filter-control",cls:"uk-active",duration:250},computed:{toggles:{get:function(e,a){var n=e.attrItem
return Ca("["+n+"],[data-"+n+"]",a)},watch:function(){var e=this
if(this.updateState(),!1!==this.selActive){var a=Ca(this.selActive,this.$el)
this.toggles.forEach((function(n){return Ga(n,e.cls,k(a,n))}))}},immediate:!0},children:{get:function(e,a){return Ca(e.target+" > *",a)},watch:function(e,a){var n,i
a&&(i=a,(n=e).length!==i.length||!n.every((function(e){return~i.indexOf(e)})))&&this.updateState()},immediate:!0}},events:[{name:"click",delegate:function(){return"["+this.attrItem+"],[data-"+this.attrItem+"]"},handler:function(e){e.preventDefault(),this.apply(e.current)}}],methods:{apply:function(e){var a,n,i=this.getState(),r=Hr(e,this.attrItem,this.getState())
a=i,n=r,["filter","sort"].every((function(e){return J(a[e],n[e])}))||this.setState(r)},getState:function(){var e=this
return this.toggles.filter((function(a){return Va(a,e.cls)})).reduce((function(a,n){return Hr(n,e.attrItem,a)}),{filter:{"":""},sort:[]})},setState:function(e,a){var n=this
void 0===a&&(a=!0),e=W({filter:{"":""},sort:[]},e),aa(this.$el,"beforeFilter",[this,e]),this.toggles.forEach((function(a){return Ga(a,n.cls,!!function(e,a,n){var i=n.filter
void 0===i&&(i={"":""})
var r=n.sort,t=r[0],o=r[1],s=Gr(e,a),l=s.filter
void 0===l&&(l="")
var u=s.group
void 0===u&&(u="")
var c=s.sort,d=s.order
return void 0===d&&(d="asc"),K(c)?u in i&&l===i[u]||!l&&u&&!(u in i)&&!i[""]:t===c&&o===d}(a,n.attrItem,e))})),pa.all(Ca(this.target,this.$el).map((function(i){var r=function(){(function(e,a,n){var i=function(e){var a=e.filter,n=""
return q(a,(function(e){return n+=e||""})),n}(e)
n.forEach((function(e){return Wa(e,"display",i&&!Le(e,i)?"none":"")}))
var r=e.sort,t=r[0],o=r[1]
if(t){var s=function(e,a,n){return W([],e).sort((function(e,i){return le(e,a).localeCompare(le(i,a),void 0,{numeric:!0})*("asc"===n||-1)}))}(n,t,o)
J(s,n)||Aa(a,s)}})(e,i,Re(i)),n.$update(n.$el)}
return a?n.animate(r,i):r()}))).then((function(){return aa(n.$el,"afterFilter",[n])}))},updateState:function(){var e=this
bn.write((function(){return e.setState(e.getState(),!1)}))}}}
function Gr(e,a){return Pn(le(e,a),["filter"])}function Hr(e,a,n){var i=Gr(e,a),r=i.filter,t=i.group,o=i.sort,s=i.order
return void 0===s&&(s="asc"),(r||K(o))&&(t?r?(delete n.filter[""],n.filter[t]=r):(delete n.filter[t],(C(n.filter)||""in n.filter)&&(n.filter={"":r||""})):n.filter={"":r||""}),K(o)||(n.sort=[o,s]),n}var Fr={slide:{show:function(e){return[{transform:Ur(-100*e)},{transform:Ur()}]},percent:function(e){return Jr(e)},translate:function(e,a){return[{transform:Ur(-100*a*e)},{transform:Ur(100*a*(1-e))}]}}}
function Jr(e){return Math.abs(Wa(e,"transform").split(",")[4]/e.offsetWidth)||0}function Ur(e,a){return void 0===e&&(e=0),void 0===a&&(a="%"),e+=e?a:"",ce?"translateX("+e+")":"translate3d("+e+", 0, 0)"}function Wr(e){return"scale3d("+e+", "+e+", 1)"}var Zr=W({},Fr,{fade:{show:function(){return[{opacity:0},{opacity:1}]},percent:function(e){return 1-Wa(e,"opacity")},translate:function(e){return[{opacity:1-e},{opacity:e}]}},scale:{show:function(){return[{opacity:0,transform:Wr(.8)},{opacity:1,transform:Wr(1)}]},percent:function(e){return 1-Wa(e,"opacity")},translate:function(e){return[{opacity:1-e,transform:Wr(1-.2*e)},{opacity:e,transform:Wr(.8+.2*e)}]}}})
function qr(e,a,n){aa(e,na(a,!1,!1,n))}var Qr={props:{autoplay:Boolean,autoplayInterval:Number,pauseOnHover:Boolean},data:{autoplay:!1,autoplayInterval:7e3,pauseOnHover:!0},connected:function(){this.autoplay&&this.startAutoplay()},disconnected:function(){this.stopAutoplay()},update:function(){te(this.slides,"tabindex","-1")},events:[{name:"visibilitychange",el:function(){return document},filter:function(){return this.autoplay},handler:function(){document.hidden?this.stopAutoplay():this.startAutoplay()}}],methods:{startAutoplay:function(){var e=this
this.stopAutoplay(),this.interval=setInterval((function(){return(!e.draggable||!xa(":focus",e.$el))&&(!e.pauseOnHover||!Le(e.$el,":hover"))&&!e.stack.length&&e.show("next")}),this.autoplayInterval)},stopAutoplay:function(){this.interval&&clearInterval(this.interval)}}},Yr={props:{draggable:Boolean},data:{draggable:!0,threshold:10},created:function(){var e=this;["start","move","end"].forEach((function(a){var n=e[a]
e[a]=function(a){var i=ha(a).x*(de?-1:1)
e.prevPos=i!==e.pos?e.pos:e.prevPos,e.pos=i,n(a)}}))},events:[{name:fe,delegate:function(){return this.selSlides},handler:function(e){var a
!this.draggable||!da(e)&&!(a=e.target).children.length&&a.childNodes.length||xe(e.target,Te)||e.button>0||this.length<2||this.start(e)}},{name:"dragstart",handler:function(e){e.preventDefault()}}],methods:{start:function(){this.drag=this.pos,this._transitioner?(this.percent=this._transitioner.percent(),this.drag+=this._transitioner.getDistance()*this.percent*this.dir,this._transitioner.cancel(),this._transitioner.translate(this.percent),this.dragging=!0,this.stack=[]):this.prevIndex=this.index,$e(document,ve,this.move,{passive:!1}),$e(document,ge+" "+be+" input",this.end,!0),Wa(this.list,"userSelect","none")},move:function(e){var a=this,n=this.pos-this.drag
if(!(0===n||this.prevPos===this.pos||!this.dragging&&Math.abs(n)<this.threshold)){Wa(this.list,"pointerEvents","none"),e.cancelable&&e.preventDefault(),this.dragging=!0,this.dir=n<0?1:-1
for(var i=this.slides,r=this.prevIndex,t=Math.abs(n),o=this.getIndex(r+this.dir,r),s=this._getDistance(r,o)||i[r].offsetWidth;o!==r&&t>s;)this.drag-=s*this.dir,r=o,t-=s,o=this.getIndex(r+this.dir,r),s=this._getDistance(r,o)||i[r].offsetWidth
this.percent=t/s
var l,u=i[r],c=i[o],d=this.index!==o,h=r===o;[this.index,this.prevIndex].filter((function(e){return!k([o,r],e)})).forEach((function(e){aa(i[e],"itemhidden",[a]),h&&(l=!0,a.prevIndex=r)})),(this.index===r&&this.prevIndex!==r||l)&&aa(i[this.index],"itemshown",[this]),d&&(this.prevIndex=r,this.index=o,!h&&aa(u,"beforeitemhide",[this]),aa(c,"beforeitemshow",[this])),this._transitioner=this._translate(Math.abs(this.percent),u,!h&&c),d&&(!h&&aa(u,"itemhide",[this]),aa(c,"itemshow",[this]))}},end:function(){if(Xe(document,ve,this.move,{passive:!1}),Xe(document,ge+" "+be+" input",this.end,!0),this.dragging)if(this.dragging=null,this.index===this.prevIndex)this.percent=1-this.percent,this.dir*=-1,this._show(!1,this.index,!0),this._transitioner=null
else{var e=(de?this.dir*(de?1:-1):this.dir)<0==this.prevPos>this.pos
this.index=e?this.index:this.prevIndex,e&&(this.percent=1-this.percent),this.show(this.dir>0&&!e||this.dir<0&&e?"next":"previous",!0)}Wa(this.list,{userSelect:"",pointerEvents:""}),this.drag=this.percent=null}}},$r={mixins:[Qr,Yr,{data:{selNav:!1},computed:{nav:function(e,a){return xa(e.selNav,a)},selNavItem:function(e){var a=e.attrItem
return"["+a+"],[data-"+a+"]"},navItems:function(e,a){return Ca(this.selNavItem,a)}},update:{write:function(){var e=this
this.nav&&this.length!==this.nav.children.length&&Sa(this.nav,this.slides.map((function(a,n){return"<li "+e.attrItem+'="'+n+'"><a href></a></li>'})).join("")),this.navItems.concat(this.nav).forEach((function(a){return a&&(a.hidden=!e.maxIndex)})),this.updateNav()},events:["resize"]},events:[{name:"click",delegate:function(){return this.selNavItem},handler:function(e){e.preventDefault(),this.show(le(e.current,this.attrItem))}},{name:"itemshow",handler:"updateNav"}],methods:{updateNav:function(){var e=this,a=this.getValidIndex()
this.navItems.forEach((function(n){var i=le(n,e.attrItem)
Ga(n,e.clsActive,z(i)===a),Ga(n,"uk-invisible",e.finite&&("previous"===i&&0===a||"next"===i&&a>=e.maxIndex))}))}}}],props:{clsActivated:Boolean,easing:String,index:Number,finite:Boolean,velocity:Number,selSlides:String},data:function(){return{easing:"ease",finite:!1,velocity:1,index:0,prevIndex:-1,stack:[],percent:0,clsActive:"uk-active",clsActivated:!1,Transitioner:!1,transitionOptions:{}}},connected:function(){this.prevIndex=-1,this.index=this.getValidIndex(this.$props.index),this.stack=[]},disconnected:function(){za(this.slides,this.clsActive)},computed:{duration:function(e,a){var n=e.velocity
return Xr(a.offsetWidth/n)},list:function(e,a){return xa(e.selList,a)},maxIndex:function(){return this.length-1},selSlides:function(e){return e.selList+" "+(e.selSlides||"> *")},slides:{get:function(){return Ca(this.selSlides,this.$el)},watch:function(){this.$reset()}},length:function(){return this.slides.length}},events:{itemshown:function(){this.$update(this.list)}},methods:{show:function(e,a){var n=this
if(void 0===a&&(a=!1),!this.dragging&&this.length){var i=this.stack,r=a?0:i.length,t=function(){i.splice(r,1),i.length&&n.show(i.shift(),!0)}
if(i[a?"unshift":"push"](e),!a&&i.length>1)2===i.length&&this._transitioner.forward(Math.min(this.duration,200))
else{var o=this.getIndex(this.index),s=Va(this.slides,this.clsActive)&&this.slides[o],l=this.getIndex(e,this.index),u=this.slides[l]
if(s!==u){if(this.dir=function(e,a){return"next"===e?1:"previous"===e||e<a?-1:1}(e,o),this.prevIndex=o,this.index=l,s&&!aa(s,"beforeitemhide",[this])||!aa(u,"beforeitemshow",[this,s]))return this.index=this.prevIndex,void t()
var c=this._show(s,u,a).then((function(){return s&&aa(s,"itemhidden",[n]),aa(u,"itemshown",[n]),new pa((function(e){bn.write((function(){i.shift(),i.length?n.show(i.shift(),!0):n._transitioner=null,e()}))}))}))
return s&&aa(s,"itemhide",[this]),aa(u,"itemshow",[this]),c}t()}}},getIndex:function(e,a){return void 0===e&&(e=this.index),void 0===a&&(a=this.index),$(ie(e,this.slides,a,this.finite),0,this.maxIndex)},getValidIndex:function(e,a){return void 0===e&&(e=this.index),void 0===a&&(a=this.prevIndex),this.getIndex(e,a)},_show:function(e,a,n){if(this._transitioner=this._getTransitioner(e,a,this.dir,W({easing:n?a.offsetWidth<600?"cubic-bezier(0.25, 0.46, 0.45, 0.94)":"cubic-bezier(0.165, 0.84, 0.44, 1)":this.easing},this.transitionOptions)),!n&&!e)return this._translate(1),pa.resolve()
var i=this.stack.length
return this._transitioner[i>1?"forward":"show"](i>1?Math.min(this.duration,75+75/(i-1)):this.duration,this.percent)},_getDistance:function(e,a){return this._getTransitioner(e,e!==a&&a).getDistance()},_translate:function(e,a,n){void 0===a&&(a=this.prevIndex),void 0===n&&(n=this.index)
var i=this._getTransitioner(a!==n&&a,n)
return i.translate(e),i},_getTransitioner:function(e,a,n,i){return void 0===e&&(e=this.prevIndex),void 0===a&&(a=this.index),void 0===n&&(n=this.dir||1),void 0===i&&(i=this.transitionOptions),new this.Transitioner(D(e)?this.slides[e]:e,D(a)?this.slides[a]:a,n*(de?-1:1),i)}}}
function Xr(e){return.5*e+300}var et={mixins:[$r],props:{animation:String},data:{animation:"slide",clsActivated:"uk-transition-active",Animations:Fr,Transitioner:function(e,a,n,i){var r=i.animation,t=i.easing,o=r.percent,s=r.translate,l=r.show
void 0===l&&(l=X)
var u=l(n),c=new ma
return{dir:n,show:function(i,r,o){var s=this
void 0===r&&(r=0)
var l=o?"linear":t
return i-=Math.round(i*$(r,-1,1)),this.translate(r),qr(a,"itemin",{percent:r,duration:i,timing:l,dir:n}),qr(e,"itemout",{percent:1-r,duration:i,timing:l,dir:n}),pa.all([nn.start(a,u[1],i,l),nn.start(e,u[0],i,l)]).then((function(){s.reset(),c.resolve()}),X),c.promise},cancel:function(){nn.cancel([a,e])},reset:function(){for(var n in u[0])Wa([a,e],n,"")},forward:function(n,i){return void 0===i&&(i=this.percent()),nn.cancel([a,e]),this.show(n,i,!0)},translate:function(i){this.reset()
var r=s(i,n)
Wa(a,r[1]),Wa(e,r[0]),qr(a,"itemtranslatein",{percent:i,dir:n}),qr(e,"itemtranslateout",{percent:1-i,dir:n})},percent:function(){return o(e||a,a,n)},getDistance:function(){return e&&e.offsetWidth}}}},computed:{animation:function(e){var a=e.animation,n=e.Animations
return W(n[a]||n.slide,{name:a})},transitionOptions:function(){return{animation:this.animation}}},events:{"itemshow itemhide itemshown itemhidden":function(e){var a=e.target
this.$update(a)},beforeitemshow:function(e){Ra(e.target,this.clsActive)},itemshown:function(e){Ra(e.target,this.clsActivated)},itemhidden:function(e){za(e.target,this.clsActive,this.clsActivated)}}},at={mixins:[mi,sr,oi,et],functional:!0,props:{delayControls:Number,preload:Number,videoAutoplay:Boolean,template:String},data:function(){return{preload:1,videoAutoplay:!1,delayControls:3e3,items:[],cls:"uk-open",clsPage:"uk-lightbox-page",selList:".uk-lightbox-items",attrItem:"uk-lightbox-item",selClose:".uk-close-large",selCaption:".uk-lightbox-caption",pauseOnHover:!1,velocity:2,Animations:Zr,template:'<div class="uk-lightbox uk-overflow-hidden"> <ul class="uk-lightbox-items"></ul> <div class="uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque"> <button class="uk-lightbox-toolbar-icon uk-close-large" type="button" uk-close></button> </div> <a class="uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade" href uk-slidenav-previous uk-lightbox-item="previous"></a> <a class="uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade" href uk-slidenav-next uk-lightbox-item="next"></a> <div class="uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque"></div> </div>'}},created:function(){var e=xa(this.template),a=xa(this.selList,e)
this.items.forEach((function(){return Aa(a,"<li>")})),this.$mount(Aa(this.container,e))},computed:{caption:function(e,a){return xa(e.selCaption,a)}},events:[{name:ve+" "+fe+" keydown",handler:"showControls"},{name:"click",self:!0,delegate:function(){return this.selSlides},handler:function(e){e.defaultPrevented||this.hide()}},{name:"shown",self:!0,handler:function(){this.showControls()}},{name:"hide",self:!0,handler:function(){this.hideControls(),za(this.slides,this.clsActive),nn.stop(this.slides)}},{name:"hidden",self:!0,handler:function(){this.$destroy(!0)}},{name:"keyup",el:function(){return document},handler:function(e){if(this.isToggled(this.$el)&&this.draggable)switch(e.keyCode){case 37:this.show("previous")
break
case 39:this.show("next")}}},{name:"beforeitemshow",handler:function(e){this.isToggled()||(this.draggable=!1,e.preventDefault(),this.toggleElement(this.$el,!0,!1),this.animation=Zr.scale,za(e.target,this.clsActive),this.stack.splice(1,0,this.index))}},{name:"itemshow",handler:function(){Sa(this.caption,this.getItem().caption||"")
for(var e=-this.preload;e<=this.preload;e++)this.loadItem(this.index+e)}},{name:"itemshown",handler:function(){this.draggable=this.$props.draggable}},{name:"itemload",handler:function(e,a){var n=this,i=a.source,r=a.type,t=a.alt
void 0===t&&(t="")
var o=a.poster,s=a.attrs
if(void 0===s&&(s={}),this.setItem(a,"<span uk-spinner></span>"),i){var l,u={frameborder:"0",allow:"autoplay",allowfullscreen:"",style:"max-width: 100%; box-sizing: border-box;","uk-responsive":"","uk-video":""+this.videoAutoplay}
if("image"===r||i.match(/\.(avif|jpe?g|a?png|gif|svg|webp)($|\?)/i))ya(i,s.srcset,s.size).then((function(e){var r=e.width,o=e.height
return n.setItem(a,nt("img",W({src:i,width:r,height:o,alt:t},s)))}),(function(){return n.setError(a)}))
else if("video"===r||i.match(/\.(mp4|webm|ogv)($|\?)/i)){var c=nt("video",W({src:i,poster:o,controls:"",playsinline:"","uk-video":""+this.videoAutoplay},s))
$e(c,"loadedmetadata",(function(){te(c,{width:c.videoWidth,height:c.videoHeight}),n.setItem(a,c)})),$e(c,"error",(function(){return n.setError(a)}))}else"iframe"===r||i.match(/\.(html|php)($|\?)/i)?this.setItem(a,nt("iframe",W({src:i,frameborder:"0",allowfullscreen:"",class:"uk-lightbox-iframe"},s))):(l=i.match(/\/\/(?:.*?youtube(-nocookie)?\..*?[?&]v=|youtu\.be\/)([\w-]{11})[&?]?(.*)?/))?this.setItem(a,nt("iframe",W({src:"https://www.youtube"+(l[1]||"")+".com/embed/"+l[2]+(l[3]?"?"+l[3]:""),width:1920,height:1080},u,s))):(l=i.match(/\/\/.*?vimeo\.[a-z]+\/(\d+)[&?]?(.*)?/))&&ka("https://vimeo.com/api/oembed.json?maxwidth=1920&url="+encodeURI(i),{responseType:"json",withCredentials:!1}).then((function(e){var i=e.response,r=i.height,t=i.width
return n.setItem(a,nt("iframe",W({src:"https://player.vimeo.com/video/"+l[1]+(l[2]?"?"+l[2]:""),width:t,height:r},u,s)))}),(function(){return n.setError(a)}))}}}],methods:{loadItem:function(e){void 0===e&&(e=this.index)
var a=this.getItem(e)
this.getSlide(a).childElementCount||aa(this.$el,"itemload",[a])},getItem:function(e){return void 0===e&&(e=this.index),this.items[ie(e,this.slides)]},setItem:function(e,a){aa(this.$el,"itemloaded",[this,Sa(this.getSlide(e),a)])},getSlide:function(e){return this.slides[this.items.indexOf(e)]},setError:function(e){this.setItem(e,'<span uk-icon="icon: bolt; ratio: 2"></span>')},showControls:function(){clearTimeout(this.controlsTimer),this.controlsTimer=setTimeout(this.hideControls,this.delayControls),Ra(this.$el,"uk-active","uk-transition-active")},hideControls:function(){za(this.$el,"uk-active","uk-transition-active")}}}
function nt(e,a){var n=La("<"+e+">")
return te(n,a),n}var it,rt={install:function(e,a){e.lightboxPanel||e.component("lightboxPanel",at),W(a.props,e.component("lightboxPanel").options.props)},props:{toggle:String},data:{toggle:"a"},computed:{toggles:{get:function(e,a){return Ca(e.toggle,a)},watch:function(){this.hide()}}},disconnected:function(){this.hide()},events:[{name:"click",delegate:function(){return this.toggle+":not(.uk-disabled)"},handler:function(e){e.preventDefault(),this.show(e.current)}}],methods:{show:function(e){var a=this,n=Y(this.toggles.map(tt),"source")
if(N(e)){var i=tt(e).source
e=b(n,(function(e){var a=e.source
return i===a}))}return this.panel=this.panel||this.$create("lightboxPanel",W({},this.$props,{items:n})),$e(this.panel.$el,"hidden",(function(){return a.panel=!1})),this.panel.show(e)},hide:function(){return this.panel&&this.panel.hide()}}}
function tt(e){var a={}
return["href","caption","type","poster","alt","attrs"].forEach((function(n){a["href"===n?"source":n]=le(e,n)})),a.attrs=Pn(a.attrs),a}var ot={mixins:[mi],functional:!0,args:["message","status"],data:{message:"",status:"",timeout:5e3,group:null,pos:"top-center",clsContainer:"uk-notification",clsClose:"uk-notification-close",clsMsg:"uk-notification-message"},install:function(e){e.notification.closeAll=function(a,n){Da(document.body,(function(i){var r=e.getComponent(i,"notification")
!r||a&&a!==r.group||r.close(n)}))}},computed:{marginProp:function(e){return"margin"+(d(e.pos,"top")?"Top":"Bottom")},startProps:function(){var e
return(e={opacity:0})[this.marginProp]=-this.$el.offsetHeight,e}},created:function(){var e=xa("."+this.clsContainer+"-"+this.pos,this.container)||Aa(this.container,'<div class="'+this.clsContainer+" "+this.clsContainer+"-"+this.pos+'" style="display: block"></div>')
this.$mount(Aa(e,'<div class="'+this.clsMsg+(this.status?" "+this.clsMsg+"-"+this.status:"")+'"> <a href class="'+this.clsClose+'" data-uk-close></a> <div>'+this.message+"</div> </div>"))},connected:function(){var e,a=this,n=O(Wa(this.$el,this.marginProp))
nn.start(Wa(this.$el,this.startProps),(e={opacity:1},e[this.marginProp]=n,e)).then((function(){a.timeout&&(a.timer=setTimeout(a.close,a.timeout))}))},events:(it={click:function(e){xe(e.target,'a[href="#"],a[href=""]')&&e.preventDefault(),this.close()}},it[ke]=function(){this.timer&&clearTimeout(this.timer)},it[ye]=function(){this.timeout&&(this.timer=setTimeout(this.close,this.timeout))},it),methods:{close:function(e){var a=this,n=function(e){var n=Ee(e)
aa(e,"close",[a]),wa(e),n&&!n.hasChildNodes()&&wa(n)}
this.timer&&clearTimeout(this.timer),e?n(this.$el):nn.start(this.$el,this.startProps).then(n)}}},st={x:ct,y:ct,rotate:ct,scale:ct,color:dt,backgroundColor:dt,borderColor:dt,blur:ht,hue:ht,fopacity:ht,grayscale:ht,invert:ht,saturate:ht,sepia:ht,opacity:function(e,a,n){return 1===n.length&&n.unshift(bt(a,e,"")),n=n.map(O),function(a,i){a[e]=kt(n,i)}},stroke:function(e,a,n){1===n.length&&n.unshift(0)
var i=yt(n)
if(!(n=n.map(O)).some((function(e){return e})))return X
var r=Ci(a)
return Wa(a,"strokeDasharray",r),"%"===i&&(n=n.map((function(e){return e*r/100}))),n=n.reverse(),function(e,a){e.strokeDashoffset=kt(n,a)}},bgx:pt,bgy:pt},lt=Object.keys,ut={mixins:[rr],props:St(lt(st),"list"),data:St(lt(st),void 0),computed:{props:function(e,a){var n=this
return lt(st).reduce((function(i,r){return K(e[r])||(i[r]=st[r].call(n,r,a,e[r].slice())),i}),{})}},methods:{reset:function(){var e=this
q(this.getCss(0),(function(a,n){return Wa(e.$el,n,"")}))},getCss:function(e){var a=this
return lt(this.props).reduce((function(n,i){return a.props[i](n,e),n}),{transform:"",filter:""})}}}
function ct(e,a,n){var i=yt(n)||{x:"px",y:"px",rotate:"deg"}[e]||""
return"x"!==e&&"y"!==e||(e="translate"+s(e)),1===(n=n.map(O)).length&&n.unshift("scale"===e?1:0),function(a,r){var t=kt(n,r)
d(e,"translate")&&(t=O(t).toFixed("px"===i?0:6)),a.transform+=" "+e+"("+t+i+")"}}function dt(e,a,n){return 1===n.length&&n.unshift(bt(a,e,"")),n=n.map((function(e){return function(e,a){return bt(e,"color",a).split(/[(),]/g).slice(1,-1).concat(1).slice(0,4).map(O)}(a,e)})),function(a,i){var r=gt(n,i),t=r[0],o=r[1],s=r[2],l=t.map((function(e,a){return e+=s*(o[a]-e),3===a?O(e):parseInt(e,10)})).join(",")
a[e]="rgba("+l+")"}}function ht(e,a,n){1===n.length&&n.unshift(0)
var i=yt(n)||{blur:"px",hue:"deg"}[e]||"%"
return e={fopacity:"opacity",hue:"hue-rotate"}[e]||e,n=n.map(O),function(a,r){var t=kt(n,r)
a.filter+=" "+e+"("+(t+i)+")"}}function pt(e,a,n){1===n.length&&n.unshift(0)
var i="y"===(e=e.substr(-1))?"height":"width"
n=n.map((function(e){return kn(e,i,a)})),Wa(a,"background-position-"+e,"")
var r=Wa(a,"backgroundPosition").split(" ")["x"===e?0:1]
return"cover"===bt(a,"backgroundSize","")?mt.call(this,e,a,n,r,i):ft(e,n,r)}function mt(e,a,n,i,r){var t=vt.call(this,a)
if(!t.naturalWidth)return X
var o=Math.min.apply(Math,n),s=Math.max.apply(Math,n),l=n.indexOf(o)<n.indexOf(s),u=s-o,c=(l?-u:0)-(l?o:s),d={width:a.offsetWidth,height:a.offsetHeight},h={width:t.naturalWidth,height:t.naturalHeight},p=ne.cover(h,d),m=p[r]-d[r]
if(m<u)d[r]=p[r]+u-m
else if(m>u){var f=d[r]/kn(i,r,a,!0)
f&&(c-=(m-u)/f)}var v=ne.cover(h,d),g=ft(e,n,c+"px")
return function(e,a){g(e,a),e.backgroundSize=v.width+"px "+v.height+"px",e.backgroundRepeat="no-repeat"}}function ft(e,a,n){return function(i,r){i["background-position-"+e]="calc("+n+" + "+kt(a,r)+"px)"}}function vt(e){var a=this,n=Wa(e,"backgroundImage").replace(/^none|url\(["']?(.+?)["']?\)$/,"$1"),i=this._data
if(i[n])return i[n]
if(n){var r=new Image
return r.src=n,r.naturalWidth||(r.onload=function(){return a.$update()}),i[n]=r}}function gt(e,a){var n=e.length-1,i=Math.min(Math.floor(n*a),n-1)
return e.slice(i,i+2).concat(1===a?1:a%(1/n)*n)}function kt(e,a){var n=gt(e,a),i=n[0],r=n[1],t=n[2]
return D(i)?i+Math.abs(i-r)*t*(i<r?1:-1):+r}function yt(e,a){return e.reduce((function(e,a){return e||L(a)&&a.replace(/[\d-]/g,"").trim()}),"")||a}function bt(e,a,n){var i=e.style[a],r=Wa(Wa(e,a,n),a)
return e.style[a]=i,r}function St(e,a){return e.reduce((function(e,n){return e[n]=a,e}),{})}var At={mixins:[ut],props:{target:String,viewport:Number,easing:Number,start:String,end:String},data:{target:!1,viewport:1,easing:1,start:0,end:0},computed:{target:function(e,a){var n=e.target
return wt(n&&Oe(n,a)||a)},start:function(e){return Tt(e.start,this.target)},end:function(e){var a=e.end,n=e.viewport
return Tt(a||(n=100*(1-n))&&n+"vh+"+n+"%",this.target)}},update:{read:function(e,a){var n=e.percent
if(a.has("scroll")||(n=!1),this.matchMedia){var i=n
return{percent:n=_t(Un(this.target,this.start,this.end),this.easing),style:i!==n&&this.getCss(n)}}},write:function(e){var a=e.style
this.matchMedia?a&&Wa(this.$el,a):this.reset()},events:["scroll","resize"]}},Mt=/-?\d+(?:\.\d+)?(?:v[wh]|%|px)?/g
function Tt(e,a){var n,i=0
for(e=e.toString().replace(/\s/g,""),Mt.lastIndex=0;null!==(n=Mt.exec(e));)i+=kn(n[0],"height",a,!0)
return i}function _t(e,a){return a>=0?Math.pow(e,a+1):1-Math.pow(1-e,1-a)}function wt(e){return e?"offsetTop"in e?e:wt(Ee(e)):document.documentElement}var jt={update:{write:function(){if(!this.stack.length&&!this.dragging){var e=this.getValidIndex(this.index)
~this.prevIndex&&this.index===e||this.show(e)}},events:["resize"]}}
function Et(e,a,n){var i=Pt(e,a)
return n?i-function(e,a){return un(a).width/2-un(e).width/2}(e,a):Math.min(i,Nt(a))}function Nt(e){return Math.max(0,Bt(e)-un(e).width)}function Bt(e){return Re(e).reduce((function(e,a){return un(a).width+e}),0)}function Pt(e,a){return e&&(dn(e).left+(de?un(e).width-un(a).width:0))*(de?-1:1)||0}function Lt(e,a){a-=1
var n=un(e).width,i=a+n+2
return Re(e).filter((function(r){var t=Pt(r,e),o=t+Math.min(un(r).width,n)
return t>=a&&o<=i}))}function Dt(e,a,n){aa(e,na(a,!1,!1,n))}var xt={mixins:[ti,$r,jt],props:{center:Boolean,sets:Boolean},data:{center:!1,sets:!1,attrItem:"uk-slider-item",selList:".uk-slider-items",selNav:".uk-slider-nav",clsContainer:"uk-slider-container",Transitioner:function(e,a,n,i){var r=i.center,t=i.easing,o=i.list,s=new ma,l=e?Et(e,o,r):Et(a,o,r)+un(a).width*n,u=a?Et(a,o,r):l+un(e).width*n*(de?-1:1)
return{dir:n,show:function(a,i,r){void 0===i&&(i=0)
var l=r?"linear":t
return a-=Math.round(a*$(i,-1,1)),this.translate(i),i=e?i:$(i,0,1),Dt(this.getItemIn(),"itemin",{percent:i,duration:a,timing:l,dir:n}),e&&Dt(this.getItemIn(!0),"itemout",{percent:1-i,duration:a,timing:l,dir:n}),nn.start(o,{transform:Ur(-u*(de?-1:1),"px")},a,l).then(s.resolve,X),s.promise},cancel:function(){nn.cancel(o)},reset:function(){Wa(o,"transform","")},forward:function(e,a){return void 0===a&&(a=this.percent()),nn.cancel(o),this.show(e,a,!0)},translate:function(i){var r=this.getDistance()*n*(de?-1:1)
Wa(o,"transform",Ur($(r-r*i-u,-Bt(o),un(o).width)*(de?-1:1),"px"))
var t=this.getActives(),s=this.getItemIn(),l=this.getItemIn(!0)
i=e?$(i,-1,1):0,Re(o).forEach((function(r){var u=k(t,r),c=r===s,d=r===l
Dt(r,"itemtranslate"+(c||!d&&(u||n*(de?-1:1)==-1^Pt(r,o)>Pt(e||a))?"in":"out"),{dir:n,percent:d?1-i:c?i:u?1:0})}))},percent:function(){return Math.abs((Wa(o,"transform").split(",")[4]*(de?-1:1)+l)/(u-l))},getDistance:function(){return Math.abs(u-l)},getItemIn:function(n){void 0===n&&(n=!1)
var i=this.getActives(),t=Lt(o,Et(a||e,o,r))
if(n){var s=i
i=t,t=s}return t[b(t,(function(e){return!k(i,e)}))]},getActives:function(){return Lt(o,Et(e||a,o,r))}}}},computed:{avgWidth:function(){return Bt(this.list)/this.length},finite:function(e){return e.finite||Math.ceil(Bt(this.list))<un(this.list).width+(a=this.list,Math.max.apply(Math,[0].concat(Re(a).map((function(e){return un(e).width})))))+this.center
var a},maxIndex:function(){if(!this.finite||this.center&&!this.sets)return this.length-1
if(this.center)return Z(this.sets)
var e=0,a=Nt(this.list),n=b(this.slides,(function(n){if(e>=a)return!0
e+=un(n).width}))
return~n?n:this.length-1},sets:function(e){var a=this,n=e.sets
if(n){var i=un(this.list).width/(this.center?2:1),r=0,t=i,o=0
return n=Q(this.slides,"offsetLeft").reduce((function(e,n,s){var l=un(n).width
if(o+l>r&&(!a.center&&s>a.maxIndex&&(s=a.maxIndex),!k(e,s))){var u=a.slides[s+1]
a.center&&u&&l<t-un(u).width/2?t-=l:(t=i,e.push(s),r=o+i+(a.center?l/2:0))}return o+=l,e}),[]),!C(n)&&n}},transitionOptions:function(){return{center:this.center,list:this.list}}},connected:function(){Ga(this.$el,this.clsContainer,!xa("."+this.clsContainer,this.$el))},update:{write:function(){var e=this
this.navItems.forEach((function(a){var n=z(le(a,e.attrItem))
!1!==n&&(a.hidden=!e.maxIndex||n>e.maxIndex||e.sets&&!k(e.sets,n))})),!this.length||this.dragging||this.stack.length||(this.reorder(),this._translate(1))
var a=this._getTransitioner(this.index).getActives()
this.slides.forEach((function(n){return Ga(n,e.clsActive,k(a,n))})),!this.clsActivated||this.sets&&!k(this.sets,O(this.index))||this.slides.forEach((function(n){return Ga(n,e.clsActivated||"",k(a,n))}))},events:["resize"]},events:{beforeitemshow:function(e){!this.dragging&&this.sets&&this.stack.length<2&&!k(this.sets,this.index)&&(this.index=this.getValidIndex())
var a=Math.abs(this.index-this.prevIndex+(this.dir>0&&this.index<this.prevIndex||this.dir<0&&this.index>this.prevIndex?(this.maxIndex+1)*this.dir:0))
if(!this.dragging&&a>1){for(var n=0;n<a;n++)this.stack.splice(1,0,this.dir>0?"next":"previous")
e.preventDefault()}else{var i=this.dir<0||!this.slides[this.prevIndex]?this.index:this.prevIndex
this.duration=Xr(this.avgWidth/this.velocity)*(un(this.slides[i]).width/this.avgWidth),this.reorder()}},itemshow:function(){~this.prevIndex&&Ra(this._getTransitioner().getItemIn(),this.clsActive)}},methods:{reorder:function(){var e=this
if(this.finite)Wa(this.slides,"order","")
else{var a=this.dir>0&&this.slides[this.prevIndex]?this.prevIndex:this.index
if(this.slides.forEach((function(n,i){return Wa(n,"order",e.dir>0&&i<a?1:e.dir<0&&i>=e.index?-1:"")})),this.center)for(var n=this.slides[a],i=un(this.list).width/2-un(n).width/2,r=0;i>0;){var t=this.getIndex(--r+a,a),o=this.slides[t]
Wa(o,"order",t>a?-2:-1),i-=un(o).width}}},getValidIndex:function(e,a){if(void 0===e&&(e=this.index),void 0===a&&(a=this.prevIndex),e=this.getIndex(e,a),!this.sets)return e
var n
do{if(k(this.sets,e))return e
n=e,e=this.getIndex(e+this.dir,a)}while(e!==n)
return e}}},Ct={mixins:[ut],data:{selItem:"!li"},computed:{item:function(e,a){return Oe(e.selItem,a)}},events:[{name:"itemin itemout",self:!0,el:function(){return this.item},handler:function(e){var a=this,n=e.type,i=e.detail,r=i.percent,t=i.duration,o=i.timing,s=i.dir
bn.read((function(){var e=a.getCss(Rt(n,s,r)),i=a.getCss(Kt(n)?.5:s>0?1:0)
bn.write((function(){Wa(a.$el,e),nn.start(a.$el,i,t,o).catch(X)}))}))}},{name:"transitioncanceled transitionend",self:!0,el:function(){return this.item},handler:function(){nn.cancel(this.$el)}},{name:"itemtranslatein itemtranslateout",self:!0,el:function(){return this.item},handler:function(e){var a=this,n=e.type,i=e.detail,r=i.percent,t=i.dir
bn.read((function(){var e=a.getCss(Rt(n,t,r))
bn.write((function(){return Wa(a.$el,e)}))}))}}]}
function Kt(e){return p(e,"in")}function Rt(e,a,n){return n/=2,Kt(e)^a<0?n:1-n}var zt,Ot,It=W({},Fr,{fade:{show:function(){return[{opacity:0,zIndex:0},{zIndex:-1}]},percent:function(e){return 1-Wa(e,"opacity")},translate:function(e){return[{opacity:1-e,zIndex:0},{zIndex:-1}]}},scale:{show:function(){return[{opacity:0,transform:Wr(1.5),zIndex:0},{zIndex:-1}]},percent:function(e){return 1-Wa(e,"opacity")},translate:function(e){return[{opacity:1-e,transform:Wr(1+.5*e),zIndex:0},{zIndex:-1}]}},pull:{show:function(e){return e<0?[{transform:Ur(30),zIndex:-1},{transform:Ur(),zIndex:0}]:[{transform:Ur(-100),zIndex:0},{transform:Ur(),zIndex:-1}]},percent:function(e,a,n){return n<0?1-Jr(a):Jr(e)},translate:function(e,a){return a<0?[{transform:Ur(30*e),zIndex:-1},{transform:Ur(-100*(1-e)),zIndex:0}]:[{transform:Ur(100*-e),zIndex:0},{transform:Ur(30*(1-e)),zIndex:-1}]}},push:{show:function(e){return e<0?[{transform:Ur(100),zIndex:0},{transform:Ur(),zIndex:-1}]:[{transform:Ur(-30),zIndex:-1},{transform:Ur(),zIndex:0}]},percent:function(e,a,n){return n>0?1-Jr(a):Jr(e)},translate:function(e,a){return a<0?[{transform:Ur(100*e),zIndex:0},{transform:Ur(-30*(1-e)),zIndex:-1}]:[{transform:Ur(-30*e),zIndex:-1},{transform:Ur(100*(1-e)),zIndex:0}]}}}),Vt={mixins:[ti,et,jt],props:{ratio:String,minHeight:Number,maxHeight:Number},data:{ratio:"16:9",minHeight:!1,maxHeight:!1,selList:".uk-slideshow-items",attrItem:"uk-slideshow-item",selNav:".uk-slideshow-nav",Animations:It},update:{read:function(){if(!this.list)return!1
var e=this.ratio.split(":").map(Number),a=e[0],n=e[1]
return n=n*this.list.offsetWidth/a||0,this.minHeight&&(n=Math.max(this.minHeight,n)),this.maxHeight&&(n=Math.min(this.maxHeight,n)),{height:n-vn(this.list,"height","content-box")}},write:function(e){var a=e.height
a>0&&Wa(this.list,"minHeight",a)},events:["resize"]}},Gt={mixins:[ti,Ir],props:{group:String,threshold:Number,clsItem:String,clsPlaceholder:String,clsDrag:String,clsDragState:String,clsBase:String,clsNoDrag:String,clsEmpty:String,clsCustom:String,handle:String},data:{group:!1,threshold:5,clsItem:"uk-sortable-item",clsPlaceholder:"uk-sortable-placeholder",clsDrag:"uk-sortable-drag",clsDragState:"uk-drag",clsBase:"uk-sortable",clsNoDrag:"uk-sortable-nodrag",clsEmpty:"uk-sortable-empty",clsCustom:"",handle:!1,pos:{}},created:function(){var e=this;["init","start","move","end"].forEach((function(a){var n=e[a]
e[a]=function(a){W(e.pos,ha(a)),n(a)}}))},events:{name:fe,passive:!1,handler:"init"},computed:{target:function(){return(this.$el.tBodies||[this.$el])[0]},items:function(){return Re(this.target)},isEmpty:{get:function(){return C(this.items)},watch:function(e){Ga(this.target,this.clsEmpty,e)},immediate:!0},handles:{get:function(e,a){var n=e.handle
return n?Ca(n,a):this.items},watch:function(e,a){Wa(a,{touchAction:"",userSelect:""}),Wa(e,{touchAction:me?"none":"",userSelect:"none"})},immediate:!0}},update:{write:function(e){if(this.drag&&Ee(this.placeholder)){var a=this,n=a.pos,i=n.x,r=n.y,t=a.origin,o=t.offsetTop,s=t.offsetLeft,l=a.placeholder
Wa(this.drag,{top:r-o,left:i-s})
var u=this.getSortable(document.elementFromPoint(i,r))
if(u){var c=u.items
if(!c.some(nn.inProgress)){var d=function(e,a){return e[b(e,(function(e){return ae(a,e.getBoundingClientRect())}))]}(c,{x:i,y:r})
if(!c.length||d&&d!==l){var h=this.getSortable(l),p=function(e,a,n,i,r,t){if(Re(e).length){var o=a.getBoundingClientRect()
if(!t)return function(e,a){var n=1===Re(e).length
n&&Aa(e,a)
var i=Re(e),r=i.some((function(e,a){var n=e.getBoundingClientRect()
return i.slice(a+1).some((function(e){var a=e.getBoundingClientRect()
return!Ht([n.left,n.right],[a.left,a.right])}))}))
return n&&wa(a),r}(e,n)||r<o.top+o.height/2?a:a.nextElementSibling
var s=n.getBoundingClientRect(),l=Ht([o.top,o.bottom],[s.top,s.bottom]),u=l?i:r,c=l?"width":"height",d=l?"left":"top",h=l?"right":"bottom",p=s[c]<o[c]?o[c]-s[c]:0
return s[d]<o[d]?!(p&&u<o[d]+p)&&a.nextElementSibling:!(p&&u>o[h]-p)&&a}}(u.target,d,l,i,r,u===h&&e.moved!==d)
!1!==p&&(p&&l===p||(u!==h?(h.remove(l),e.moved=d):delete e.moved,u.insert(l,p),this.touched.add(u)))}}}}},events:["move"]},methods:{init:function(e){var a=e.target,n=e.button,i=e.defaultPrevented,r=this.items.filter((function(e){return Ce(a,e)}))[0]
!r||i||n>0||_e(a)||Ce(a,"."+this.clsNoDrag)||this.handle&&!Ce(a,this.handle)||(e.preventDefault(),this.touched=new Set([this]),this.placeholder=r,this.origin=W({target:a,index:ze(r)},this.pos),$e(document,ve,this.move),$e(document,ge,this.end),this.threshold||this.start(e))},start:function(e){var a,n
this.drag=(Wa(n=Aa(this.$container,(a=this.placeholder).outerHTML.replace(/(^<)(?:li|tr)|(?:li|tr)(\/>$)/g,"$1div$2")),"margin","0","important"),Wa(n,W({boxSizing:"border-box",width:a.offsetWidth,height:a.offsetHeight},Wa(a,["paddingLeft","paddingRight","paddingTop","paddingBottom"]))),pn(n.firstElementChild,pn(a.firstElementChild)),n)
var i=this.placeholder.getBoundingClientRect(),r=i.left,t=i.top
W(this.origin,{offsetLeft:this.pos.x-r,offsetTop:this.pos.y-t}),Ra(this.drag,this.clsDrag,this.clsCustom),Ra(this.placeholder,this.clsPlaceholder),Ra(this.items,this.clsItem),Ra(document.documentElement,this.clsDragState),aa(this.$el,"start",[this,this.placeholder]),function(e){var a=Date.now()
zt=setInterval((function(){var n=e.x,i=e.y
i+=window.pageYOffset
var r=.3*(Date.now()-a)
a=Date.now(),Wn(document.elementFromPoint(n,e.y),/auto|scroll/).reverse().some((function(e){var a=e.scrollTop,n=e.scrollHeight,t=cn(Zn(e)),o=t.top,s=t.bottom,l=t.height
if(o<i&&o+35>i)a-=r
else{if(!(s>i&&s-35<i))return
a+=r}if(a>0&&a<n-l)return Fn(e,a),!0}))}),15)}(this.pos),this.move(e)},move:function(e){this.drag?this.$emit("move"):(Math.abs(this.pos.x-this.origin.x)>this.threshold||Math.abs(this.pos.y-this.origin.y)>this.threshold)&&this.start(e)},end:function(){var e=this
if(Xe(document,ve,this.move),Xe(document,ge,this.end),Xe(window,"scroll",this.scroll),this.drag){clearInterval(zt)
var a=this.getSortable(this.placeholder)
this===a?this.origin.index!==ze(this.placeholder)&&aa(this.$el,"moved",[this,this.placeholder]):(aa(a.$el,"added",[a,this.placeholder]),aa(this.$el,"removed",[this,this.placeholder])),aa(this.$el,"stop",[this,this.placeholder]),wa(this.drag),this.drag=null,this.touched.forEach((function(a){var n=a.clsPlaceholder,i=a.clsItem
return e.touched.forEach((function(e){return za(e.items,n,i)}))})),this.touched=null,za(document.documentElement,this.clsDragState)}},insert:function(e,a){var n=this
Ra(this.items,this.clsItem),this.animate((function(){return a?Ma(a,e):Aa(n.target,e)}))},remove:function(e){Ce(e,this.target)&&this.animate((function(){return wa(e)}))},getSortable:function(e){do{var a=this.$getComponent(e,"sortable")
if(a&&(a===this||!1!==this.group&&a.group===this.group))return a}while(e=Ee(e))}}}
function Ht(e,a){return e[1]>a[0]&&a[1]>e[0]}var Ft={mixins:[mi,oi,fi],args:"title",props:{delay:Number,title:String},data:{pos:"top",title:"",delay:0,animation:["uk-animation-scale-up"],duration:100,cls:"uk-active",clsPos:"uk-tooltip"},beforeConnect:function(){var e
this._hasTitle=oe(this.$el,"title"),te(this.$el,"title",""),this.updateAria(!1),je(e=this.$el)||te(e,"tabindex","0")},disconnected:function(){this.hide(),te(this.$el,"title",this._hasTitle?this.title:null)},methods:{show:function(){var e=this
!this.isToggled(this.tooltip||null)&&this.title&&(this._unbind=ea(document,"show keydown "+fe,this.hide,!1,(function(a){return a.type===fe&&!Ce(a.target,e.$el)||"keydown"===a.type&&27===a.keyCode||"show"===a.type&&a.detail[0]!==e&&a.detail[0].$name===e.$name})),clearTimeout(this.showTimer),this.showTimer=setTimeout(this._show,this.delay))},hide:function(){var e=this
Le(this.$el,"input:focus")||(clearTimeout(this.showTimer),this.isToggled(this.tooltip||null)&&this.toggleElement(this.tooltip,!1,!1).then((function(){wa(e.tooltip),e.tooltip=null,e._unbind()})))},_show:function(){var e=this
this.tooltip=Aa(this.container,'<div class="'+this.clsPos+'"> <div class="'+this.clsPos+'-inner">'+this.title+"</div> </div>"),$e(this.tooltip,"toggled",(function(a,n){e.updateAria(n),n&&(e.positionAt(e.tooltip,e.$el),e.origin="y"===e.getAxis()?gn(e.dir)+"-"+e.align:e.align+"-"+gn(e.dir))})),this.toggleElement(this.tooltip,!0)},updateAria:function(e){te(this.$el,"aria-expanded",e)}},events:(Ot={focus:"show",blur:"hide"},Ot[ke+" "+ye]=function(e){da(e)||this[e.type===ke?"show":"hide"]()},Ot[fe]=function(e){da(e)&&this.show()},Ot)},Jt={props:{allow:String,clsDragover:String,concurrent:Number,maxSize:Number,method:String,mime:String,msgInvalidMime:String,msgInvalidName:String,msgInvalidSize:String,multiple:Boolean,name:String,params:Object,type:String,url:String},data:{allow:!1,clsDragover:"uk-dragover",concurrent:1,maxSize:0,method:"POST",mime:!1,msgInvalidMime:"Invalid File Type: %s",msgInvalidName:"Invalid File Name: %s",msgInvalidSize:"Invalid File Size: %s Kilobytes Max",multiple:!1,name:"files[]",params:{},type:"",url:"",abort:X,beforeAll:X,beforeSend:X,complete:X,completeAll:X,error:X,fail:X,load:X,loadEnd:X,loadStart:X,progress:X},events:{change:function(e){Le(e.target,'input[type="file"]')&&(e.preventDefault(),e.target.files&&this.upload(e.target.files),e.target.value="")},drop:function(e){Wt(e)
var a=e.dataTransfer
a&&a.files&&(za(this.$el,this.clsDragover),this.upload(a.files))},dragenter:function(e){Wt(e)},dragover:function(e){Wt(e),Ra(this.$el,this.clsDragover)},dragleave:function(e){Wt(e),za(this.$el,this.clsDragover)}},methods:{upload:function(e){var a=this
if(e.length){aa(this.$el,"upload",[e])
for(var n=0;n<e.length;n++){if(this.maxSize&&1e3*this.maxSize<e[n].size)return void this.fail(this.msgInvalidSize.replace("%s",this.maxSize))
if(this.allow&&!Ut(this.allow,e[n].name))return void this.fail(this.msgInvalidName.replace("%s",this.allow))
if(this.mime&&!Ut(this.mime,e[n].type))return void this.fail(this.msgInvalidMime.replace("%s",this.mime))}this.multiple||(e=[e[0]]),this.beforeAll(this,e)
var i=function(e,a){for(var n=[],i=0;i<e.length;i+=a){for(var r=[],t=0;t<a;t++)r.push(e[i+t])
n.push(r)}return n}(e,this.concurrent),r=function(e){var n=new FormData
for(var t in e.forEach((function(e){return n.append(a.name,e)})),a.params)n.append(t,a.params[t])
ka(a.url,{data:n,method:a.method,responseType:a.type,beforeSend:function(e){var n=e.xhr
return n.upload&&$e(n.upload,"progress",a.progress),["loadStart","load","loadEnd","abort"].forEach((function(e){return $e(n,e.toLowerCase(),a[e])})),a.beforeSend(e)}}).then((function(e){a.complete(e),i.length?r(i.shift()):a.completeAll(e)}),(function(e){return a.error(e)}))}
r(i.shift())}}}}
function Ut(e,a){return a.match(new RegExp("^"+e.replace(/\//g,"\\/").replace(/\*\*/g,"(\\/[^\\/]+)*").replace(/\*/g,"[^\\/]+").replace(/((?!\\))\?/g,"$1.")+"$","i"))}function Wt(e){e.preventDefault(),e.stopPropagation()}return q(Object.freeze({__proto__:null,Countdown:Nr,Filter:Vr,Lightbox:rt,LightboxPanel:at,Notification:ot,Parallax:At,Slider:xt,SliderParallax:Ct,Slideshow:Vt,SlideshowParallax:Ct,Sortable:Gt,Tooltip:Ft,Upload:Jt}),(function(e,a){return ri.component(a,e)})),ri}()},6885:(e,a,n)=>{"use strict"
function i(e){return null!==e&&"object"==typeof e&&!(e instanceof Date||e instanceof RegExp)&&!Array.isArray(e)}n.r(a),n.d(a,{BufferedChangeset:()=>ee,CHANGESET:()=>M,Change:()=>t,Changeset:()=>ie,Err:()=>l,ValidatedChangeset:()=>ne,buildOldValues:()=>C,changeset:()=>ae,getChangeValue:()=>s,getDeep:()=>p,getKeyValues:()=>u,isChange:()=>o,isChangeset:()=>T,isObject:()=>i,isPromise:()=>d,keyInObject:()=>_,lookupValidator:()=>m,mergeDeep:()=>V,mergeNested:()=>x,normalizeObject:()=>g,objectWithout:()=>J,propertyIsUnsafe:()=>z,pureAssign:()=>b,setDeep:()=>L,take:()=>U})
const r=Symbol("__value__")
class t{constructor(e){this[r]=e}}const o=e=>i(e)&&r in e
function s(e){if(o(e))return e[r]}class l{constructor(e,a){this.value=e,this.validation=a}}function u(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[]
const n=[]
for(let r in e)e[r]&&i(e[r])&&(o(e[r])?n.push({key:[...a,r].join("."),value:s(e[r])}):n.push(...u(e[r],[...a,r])))
return n}function c(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=[]
for(let r in e)e[r]&&i(e[r])&&(Object.prototype.hasOwnProperty.call(e[r],"value")&&e[r]instanceof l?n.push({key:[...a,r].join("."),validation:e[r].validation,value:e[r].value}):"value"!==r&&n.push(...c(e[r],[...a,r])))
return n}function d(e){return i(e)&&function(e){return!!(e&&e.then&&e.catch&&e.finally&&"function"==typeof e.then&&"function"==typeof e.catch&&"function"==typeof e.finally)}(e)}async function h(e){try{const a=(await Promise.all(e)).filter((e=>"boolean"!=typeof e&&e))
return 0===a.length||a}catch(e){return e}}function p(e,a){let n=e
if(-1===a.indexOf("."))return n[a]
const i="string"==typeof a?a.split("."):a
for(let r=0;r<i.length;r++){if(null==n)return
n=n[i[r]]}return n}function m(e){return a=>{let n,{key:r,newValue:t,oldValue:o,changes:s,content:l}=a,u=p(e||{},r)
return u&&u.validate&&(u=u.validate.bind(u)),!(u&&!i(u))||(n=Array.isArray(u)?function(e,a){let{key:n,newValue:i,oldValue:r,changes:t,content:o}=a,s=Array.from(e.map((e=>(e&&e.validate&&(e=e.validate.bind(e)),e(n,i,r,t,o)))))
return s.some(d)?Promise.all(s).then(h):function(e){const a=e.filter((e=>"boolean"!=typeof e&&e))
return 0===a.length||a}(s)}(u,{key:r,newValue:t,oldValue:o,changes:s,content:l}):u(r,t,o,s,l),d(n)?n.then((e=>e)):n)}}class f{constructor(){this.listeners=[]}addListener(e){return this.listeners.push(e),()=>this.removeListener(e)}removeListener(e){for(let a=0;a<this.listeners.length;a++)if(this.listeners[a]===e)return void this.listeners.splice(a,1)}trigger(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
this.listeners.forEach((e=>e(...a)))}}function v(e,a){void 0===e._eventedNotifiers&&(e._eventedNotifiers={})
let n=e._eventedNotifiers[a]
return n||(n=e._eventedNotifiers[a]=new f),n}function g(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i
if(!e||!a(e))return e
if(o(e))return s(e)
let n=Object.assign({},e)
for(let i in n){const r=n[i]
if(r&&a(r))if(o(r))n[i]=s(r)
else{try{JSON.stringify(r)}catch(e){break}n[i]=g(r)}}return n}function k(e){for(let a in e){if(o(e[a]))return!0
if(i(e[a])){const n=k(e[a])
if(n)return n}}return!1}let y
function b(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
return a.reduce(((e,a)=>Object.defineProperties(e,y(a))),{})}function S(e,a,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[]
for(let t of n){const n=e[t]
"function"==typeof n.validate?a[t]=n:i(n)?S(n,a,Object.keys(n),[...r,t]):("function"==typeof n||Array.isArray(n)&&n.every((e=>"function"==typeof e||"function"==typeof e.validate)))&&(a[[...r,t].join(".")]=n)}return a}function A(e){return e?S(e,{},Object.keys(e)):{}}y=void 0!==Object.getOwnPropertyDescriptors?Object.getOwnPropertyDescriptors:function(e){let a={}
return Object.keys(e).forEach((n=>{a[n]=Object.getOwnPropertyDescriptor(e,n)})),a}
const M="__CHANGESET__"
function T(e){return e&&e.__changeset__===M}function _(e,a){let[n,...i]=a.split(".")
if(!n||!(n in e))return!1
if(!i.length)return n in e
let r=e[n]
return null!==r&&"object"==typeof r&&_(e[n],i.join("."))}function w(e){return!!e&&Object.keys(e).every((e=>Number.isInteger(parseInt(e,10))))}function j(e){return e.reduce(((e,a,n)=>(e[n]=a,e)),{})}function E(e){let a=[]
for(let[n,i]of Object.entries(e))a[parseInt(n,10)]=i
return a}function N(e){return e.split(".")}function B(e,a){const[n]=a.slice(-1),i=Object.keys(e).filter((e=>e!==n)).reduce(((a,n)=>(a[n]=e[n],a)),Object.create(null))
return Object.assign({},i)}function P(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e}function L(e,a,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{safeSet:void 0,safeGet:void 0}
const l=N(a).filter(P)
let u=e
if(r.safeSet=r.safeSet||function(e,a,n){return e[a]=n},r.safeGet=r.safeGet||function(e,a){return e?e[a]:e},1===l.length)return r.safeSet(e,a,n),e
for(let c=0;c<l.length;c++){let a=l[c]
if(Array.isArray(e)&&parseInt(a,10)<0)throw new Error("Negative indices are not allowed as arrays do not serialize values at negative indices")
const u=i(r.safeGet(e,a)),d=Array.isArray(r.safeGet(e,a)),h=u||d
if(h){if(h&&o(r.safeGet(e,a))){let u=s(r.safeGet(e,a))
if(i(u)){const i=B(u,l),d=o(n)?s(n):n,h=Array.isArray(e)||w(e),p=h?l.slice(c+1,l.length).join("."):l.slice(1,l.length).join(".")
let m
m=h&&void 0===d||c===l.length-1?d:L(i,p,d,r),r.safeSet(e,a,new t(m))
break}r.safeSet(e,a,{})}}else r.safeSet(e,a,{})
if(c===l.length-1){r.safeSet(e,a,n)
break}e=r.safeGet(e,a)}return u}const{keys:D}=Object
function x(){let e={}
for(var a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
return n.forEach((a=>D(a).forEach((n=>L(e,n,a[n]))))),e}function C(e,a,n){const i=Object.create(null)
for(let r of a)i[r.key]=n(e,r.key)
return i}function K(e){return Object.keys(e).concat(function(e){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e).filter((a=>e.propertyIsEnumerable(a))):[]}(e))}function R(e,a){try{return a in e}catch(e){return!1}}function z(e,a){return R(e,a)&&!(Object.hasOwnProperty.call(e,a)&&Object.propertyIsEnumerable.call(e,a))}function O(e,a,n,i){return Object.keys(e).forEach((r=>{let t=e[r]
t&&o(t)?n[[...i,r].join(".")]=s(t):t&&"object"==typeof t&&O(t,a,n,[...i,r])})),n}function I(e,a,n){return n.getKeys(a).forEach((i=>{if(n.propertyIsUnsafe(e,i)){if(n.safeSet){const r=O(a,n,{},[])
if(Object.keys(r).length>0)for(i in r){const a=r[i]
n.safeSet(e,i,a)}}}else{if(!R(e,i)||!function(e){return!!e&&"object"==typeof e}(r=a[i])||function(e){let a=Object.prototype.toString.call(e)
return"[object RegExp]"===a||"[object Date]"===a}(r)||o(a[i])){let r=a[i]
return r&&o(r)?n.safeSet(e,i,s(r)):n.safeSet(e,i,g(r))}n.safeSet(e,i,V(n.safeGet(e,i),n.safeGet(a,i),n))}var r})),e}function V(e,a){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{safeGet:void 0,safeSet:void 0,propertyIsUnsafe:void 0,getKeys:void 0}
n.getKeys=n.getKeys||K,n.propertyIsUnsafe=n.propertyIsUnsafe||z,n.safeGet=n.safeGet||function(e,a){return e[a]},n.safeSet=n.safeSet||function(e,a,n){return e[a]=n}
let i=Array.isArray(a),r=Array.isArray(e),t=i===r
if(t)return i||null==e?a:I(e,a,n)
{let i=w(a)
return r&&i?E(I(j(e),a,n)):a}}const G={get(e,a){if("symbol"==typeof a)return
let n=e.safeGet(e.changes,a)
if(o(n))return s(n)
if(i(n)){let i=e.children[a]
if(void 0===i&&e.content){let r=e.safeGet(e.content,a)
i=e.children[a]=new F(n,r,e.safeGet)}if(i)return i.proxy}if(void 0!==n)return n
if(e.content){const n=e.content
if(e.safeGet(n,a))return e.safeGet(n,a)}return"function"==typeof e[a]||e.hasOwnProperty(a)?e[a]:void 0},ownKeys:e=>Reflect.ownKeys(e.changes),getOwnPropertyDescriptor:(e,a)=>Reflect.getOwnPropertyDescriptor(e.changes,a),has:(e,a)=>Reflect.has(e.changes,a),set:(e,a,n)=>a.startsWith("_")?Reflect.set(e,a,n):Reflect.set(e.changes,a,new t(n))}
function H(e,a){return e[a]}class F{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:H,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:i
this.safeGet=n,this.isObject=r,this.changes=e,this.content=a,this.proxy=new Proxy(this,G),this.children=Object.create(null)}get(e){return this.safeGet(this.changes,e)}set(e,a){return L(this.changes,e,a)}unwrap(){let e=this.changes
if(i(e)){e=g(e,this.isObject)
const a=this.content
if(i(a))return e=g(e,this.isObject),Object.assign(Object.assign({},a),e)
if(Array.isArray(a))return e=g(e,this.isObject),E(V(j(a),e))}return e}}function J(e){for(var a=arguments.length,n=new Array(a>1?a-1:0),i=1;i<a;i++)n[i-1]=arguments[i]
return n.reduce(((a,n)=>(Object.keys(n).filter((a=>-1===e.indexOf(a)||!n.hasOwnProperty(a))).forEach((e=>a[e]=n[e])),a)),{})}function U(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n={}
for(let i in e)-1!==a.indexOf(i)&&(n[i]=e[i])
return n}const{keys:W}=Object,Z="_changes",q="_errors",Q="afterValidation",Y=()=>!0,$={skipValidate:!1}
function X(e){return e}class ee{constructor(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Y,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{}
this.validateFn=a,this.validationMap=n,this.__changeset__=M,this._eventedNotifiers={},this.isObject=i,this.maybeUnwrapProxy=X,this.setDeep=L,this.getDeep=p,this.mergeDeep=V,this._content=e,this._previousContent=void 0,this._changes={},this._errors={},this._errorsCache={},this._validator=a,this._options=b($,JSON.parse(JSON.stringify(r))),this._runningValidations={}}on(e,a){return v(this,e).addListener(a)}off(e,a){return v(this,e).removeListener(a)}trigger(e){const a=v(this,e)
if(a){for(var n=arguments.length,i=new Array(n>1?n-1:0),r=1;r<n;r++)i[r-1]=arguments[r]
a.trigger(...i)}}safeGet(e,a){return e[a]}safeSet(e,a,n){return e[a]=n}get _bareChanges(){return u(this._changes).reduce(((e,a)=>{let{key:n,value:i}=a
return e[n]=i,e}),Object.create(null))}get changes(){return u(this._changes)}get errors(){return c(this._errors)}get change(){let e=this._changes
return k(this._changes)?g(e):{}}get error(){return this._errors}get data(){return this._content}get isValid(){return 0===c(this._errors).length}get isPristine(){let e=Object.keys(this._changes)
const a=this._options.changesetKeys
return Array.isArray(a)&&a.length&&(e=e.filter((e=>a.includes(e)))),0===e.length||!k(this._changes)}get isInvalid(){return!this.isValid}get isDirty(){return!this.isPristine}setUnknownProperty(e,a){let n=this._options,i=n.changesetKeys
if(Array.isArray(i)&&i.length>0&&!i.find((a=>e.match(a))))return
let r=this._content,t=this.safeGet(r,e)
if(n.skipValidate)return this._setProperty({key:e,value:a,oldValue:t}),void this._handleValidation(!0,{key:e,value:a})
this._setProperty({key:e,value:a,oldValue:t}),this._validateKey(e,a)}get[Symbol.toStringTag](){return`changeset:${b(this._content,{}).toString()}`}toString(){return`changeset:${b(this._content,{}).toString()}`}prepare(e){let a=e(this._bareChanges)
this.isObject(a)
let n={}
if(this.isObject(a)){let e=W(a).reduce(((e,n)=>(e[n]=new t(a[n]),e)),n)
this._changes=e}return this}execute(){let e
if(this.isValid&&this.isDirty){let a=this._content,n=this._changes
e=C(a,this.changes,this.getDeep),this._content=this.mergeDeep(a,n)}return this.trigger("execute"),this._changes={},this._previousContent=e,this}unexecute(){return this._previousContent&&(this._content=this.mergeDeep(this._content,this._previousContent,{safeGet:this.safeGet,safeSet:this.safeSet})),this}async save(e){let a=this._content,n=Promise.resolve(this)
if(this.execute(),"function"==typeof a.save)n=a.save(e)
else if("function"==typeof this.safeGet(a,"save")){let e=this.maybeUnwrapProxy(a).save()
e&&(n=e)}try{const e=await n
return this.rollback(),e}catch(e){throw e}}merge(e){let a=this._content
if(T(e),e._content,this.isPristine&&e.isPristine)return this
let n=this._changes,i=e._changes,r=this._errors,t=e._errors,o=new ne(a,this._validator),s=J(W(i),r),l=J(W(t),n),u=x(s,t),c=x(l,i)
return o._errors=u,o._changes=c,o._notifyVirtualProperties(),o}rollback(){let e=this._rollbackKeys()
return this._changes={},this._errors={},this._errorsCache={},this._notifyVirtualProperties(e),this.trigger("afterRollback"),this}rollbackInvalid(e){let a=W(this._errors)
return e?(this._notifyVirtualProperties([e]),this._errors=this._deleteKey(q,e),this._errorsCache=this._errors,a.indexOf(e)>-1&&(this._changes=this._deleteKey(Z,e))):(this._notifyVirtualProperties(),this._errors={},this._errorsCache=this._errors,a.forEach((e=>{this._changes=this._deleteKey(Z,e)}))),this}rollbackProperty(e){return this._changes=this._deleteKey(Z,e),this._errors=this._deleteKey(q,e),this._errorsCache=this._errors,this}async validate(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
if(0===W(this.validationMap).length&&!a.length)return Promise.resolve(null)
let i=(a=a.length>0?a:W(A(this.validationMap))).map((e=>{const a=this[e],n=a instanceof F?a.unwrap():a
return this._validateKey(e,n)}))
return Promise.all(i)}addError(e,a){let n
if((e=>this.isObject(e)&&!Array.isArray(e))(a))a.hasOwnProperty("value")||a.value,a.hasOwnProperty("validation"),n=new l(a.value,a.validation)
else{let i=this[e]
n=new l(i,a)}let i=this._errors
return this._errors=this.setDeep(i,e,n,{safeSet:this.safeSet}),this._errorsCache=this._errors,a}pushErrors(e){let a=this._errors,n=this.getDeep(a,e)||new l(null,[]),i=n.validation,r=this[e]
!Array.isArray(i)&&Boolean(i)&&(n.validation=[i])
let t=n.validation
for(var o=arguments.length,s=new Array(o>1?o-1:0),u=1;u<o;u++)s[u-1]=arguments[u]
i=[...t,...s]
let c=new l(r,i)
return this._errors=this.setDeep(a,e,c,{safeSet:this.safeSet}),this._errorsCache=this._errors,{value:r,validation:i}}snapshot(){let e=this._changes,a=this._errors
return{changes:this.getChangesForSnapshot(e),errors:W(a).reduce(((e,n)=>{let i=a[n]
return e[n]={value:i.value,validation:i.validation},e}),{})}}getChangesForSnapshot(e){return W(e).reduce(((a,n)=>(a[n]=o(e[n])?s(e[n]):this.getChangesForSnapshot(e[n]),a)),{})}restore(e){let{changes:a,errors:n}=e,i=W(a).reduce(((e,n)=>(e[n]=new t(a[n]),e)),{}),r=W(n).reduce(((e,a)=>{let i=n[a]
return e[a]=new l(i.value,i.validation),e}),{})
return this._changes=i,this._errors=r,this._errorsCache=this._errors,this._notifyVirtualProperties(),this}cast(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=this._changes
if(Array.isArray(e)&&0===e.length)return this
let n=U(a,W(a).filter((a=>e.includes(a))))
return this._changes=n,this}isValidating(e){let a=this._runningValidations,n=W(a)
return e?n.includes(e):n.length>0}_validateKey(e,a){let n=this._content,i=this.getDeep(n,e),r=this._validate(e,a,i)
if(this.trigger("beforeValidation",e),d(r)){this._setIsValidating(e,r)
let n=this._runningValidations,i=Object.entries(n)
return Promise.all(i).then((()=>r.then((i=>(delete n[e],this._handleValidation(i,{key:e,value:a})))).then((a=>(this.trigger(Q,e),a)))))}let t=this._handleValidation(r,{key:e,value:a})
return this.trigger(Q,e),t}_handleValidation(e,a){let{key:n,value:i}=a
const r=!0===e||Array.isArray(e)&&1===e.length&&!0===e[0]
return this._errors=this._deleteKey("_errorsCache",n),r?i:this.addError(n,{value:i,validation:e})}_validate(e,a,n){let i=this._validator,r=this._content
if("function"==typeof i){let t=i({key:e,newValue:a,oldValue:n,changes:this.change,content:r})
return void 0===t||t}return!0}_setProperty(e){let{key:a,value:n,oldValue:i}=e,r=this._changes
if(s=i,((o=n)instanceof Date&&s instanceof Date?o.getTime()===s.getTime():o===s)&&void 0!==i)_(r,a)&&(this._changes=this._deleteKey(Z,a))
else{let e=this.setDeep(r,a,new t(n),{safeSet:this.safeSet})
this._changes=e}var o,s}_setIsValidating(e,a){let n=this._runningValidations
this.setDeep(n,e,a)}_notifyVirtualProperties(e){return e||(e=this._rollbackKeys()),e}_rollbackKeys(){let e=this._changes,a=this._errors
return[...new Set([...W(e),...W(a)])]}_deleteKey(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=this[e],i=a.split(".")
if(1===i.length&&n.hasOwnProperty(a))delete n[a]
else if(n[i[0]]){let[e,...a]=i,r=n,t=n[e],s=e
for(;this.isObject(t)&&s;){let e=t;(o(e)||void 0!==e.value||e.validation)&&delete r[s],s=a.shift(),r=t,s&&(t=t[s])}}return n}get(e){let[a,...n]=e.split("."),r=this._changes,t=this._content
if(Object.prototype.hasOwnProperty.call(r,a)){const a=this.getDeep(r,e)
if(!this.isObject(a)&&void 0!==a)return a}if(Object.prototype.hasOwnProperty.call(r,a)&&k(r)){let i=r[a]
const l=g(i)
if(this.isObject(l)){const i=this.maybeUnwrapProxy(this.getDeep(l,n.join(".")))
if(void 0===i&&function(e,a,n){if(o(e))return!1
const i=a.split(".")
let r=e
for(const t of i){if(!r)return!1
if(i[i.length-1]!==t&&o(n(r,t)))return!0
r=n(r,t)}return!1}(r,e,this.safeGet)&&!function(e,a,n){const i=a.split(".")
let r=e
for(const t of i){if(!r||!Object.prototype.hasOwnProperty.call(r,t))return!1
r=n(r,t),o(r)&&(r=s(r))}return!0}(r,e,this.safeGet)&&this.getDeep(t,e))return
if(this.isObject(i)){if(o(i))return s(i)
const l=this.safeGet(t,a)||{},u=this.getDeep(l,n.join(".")),c=function(e,a){let n=e
if(-1===a.indexOf("."))return n[a]
const i="string"==typeof a?a.split("."):a
for(let r=0;r<i.length;r++){if(null==n)return
n=o(n[i[r]])?s(n[i[r]]):n[i[r]]}return n}(r,e)
return new F(c,u,this.getDeep,this.isObject).proxy}if(void 0!==i)return i}if(o(i)&&0===n.length)return s(i)}if(a in this||e in this)return this.getDeep(this,e)
const l=this.maybeUnwrapProxy(this.getDeep(t,e))
if(this.isObject(l)){let a=this.getDeep(r,e)
return a||(a=this.getDeep(this.setDeep(r,e,{}),e)),new F(a,l,this.getDeep,this.isObject).proxy}if(Array.isArray(l)){let a=this.getDeep(r,e)
if(!a)return l
if(i(a)){if(i(l))return a=g(a,this.isObject),Object.assign(Object.assign({},l),a)
if(Array.isArray(l))return a=g(a,this.isObject),E(V(j(l),a))}return a}return l}set(e,a){this.hasOwnProperty(e)||_(this,e)?this[e]=a:this.setUnknownProperty(e,a)}}function ae(e,a,n,i){return new ee(e,a,n,i)}class ne{constructor(e,a,n,i){const r=ae(e,a,n,i)
return new Proxy(r,{get:(e,a)=>e.get(a.toString()),set:(e,a,n)=>(e.set(a.toString(),n),!0)})}}function ie(e,a,n,i){const r=ae(e,a,n,i)
return new Proxy(r,{get:(e,a)=>e.get(a.toString()),set:(e,a,n)=>(e.set(a.toString(),n),!0)})}},6657:(e,a,n)=>{e.exports=n(1197).Observable},1197:(e,a)=>{"use strict"
function n(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}function i(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function r(e,a,n){return a&&i(e.prototype,a),n&&i(e,n),e}a.Observable=void 0
var t=function(){return"function"==typeof Symbol},o=function(e){return t()&&Boolean(Symbol[e])},s=function(e){return o(e)?Symbol[e]:"@@"+e}
t()&&!o("observable")&&(Symbol.observable=Symbol("observable"))
var l=s("iterator"),u=s("observable"),c=s("species")
function d(e,a){var n=e[a]
if(null!=n){if("function"!=typeof n)throw new TypeError(n+" is not a function")
return n}}function h(e){var a=e.constructor
return void 0!==a&&null===(a=a[c])&&(a=void 0),void 0!==a?a:S}function p(e){p.log?p.log(e):setTimeout((function(){throw e}))}function m(e){Promise.resolve().then((function(){try{e()}catch(e){p(e)}}))}function f(e){var a=e._cleanup
if(void 0!==a&&(e._cleanup=void 0,a))try{if("function"==typeof a)a()
else{var n=d(a,"unsubscribe")
n&&n.call(a)}}catch(e){p(e)}}function v(e){e._observer=void 0,e._queue=void 0,e._state="closed"}function g(e,a,n){e._state="running"
var i=e._observer
try{var r=d(i,a)
switch(a){case"next":r&&r.call(i,n)
break
case"error":if(v(e),!r)throw n
r.call(i,n)
break
case"complete":v(e),r&&r.call(i)}}catch(e){p(e)}"closed"===e._state?f(e):"running"===e._state&&(e._state="ready")}function k(e,a,n){if("closed"!==e._state){if("buffering"!==e._state)return"ready"!==e._state?(e._state="buffering",e._queue=[{type:a,value:n}],void m((function(){return function(e){var a=e._queue
if(a){e._queue=void 0,e._state="ready"
for(var n=0;n<a.length&&(g(e,a[n].type,a[n].value),"closed"!==e._state);++n);}}(e)}))):void g(e,a,n)
e._queue.push({type:a,value:n})}}var y=function(){function e(a,i){n(this,e),this._cleanup=void 0,this._observer=a,this._queue=void 0,this._state="initializing"
var r=new b(this)
try{this._cleanup=i.call(void 0,r)}catch(e){r.error(e)}"initializing"===this._state&&(this._state="ready")}return r(e,[{key:"unsubscribe",value:function(){"closed"!==this._state&&(v(this),f(this))}},{key:"closed",get:function(){return"closed"===this._state}}]),e}(),b=function(){function e(a){n(this,e),this._subscription=a}return r(e,[{key:"next",value:function(e){k(this._subscription,"next",e)}},{key:"error",value:function(e){k(this._subscription,"error",e)}},{key:"complete",value:function(){k(this._subscription,"complete")}},{key:"closed",get:function(){return"closed"===this._subscription._state}}]),e}(),S=function(){function e(a){if(n(this,e),!(this instanceof e))throw new TypeError("Observable cannot be called as a function")
if("function"!=typeof a)throw new TypeError("Observable initializer must be a function")
this._subscriber=a}return r(e,[{key:"subscribe",value:function(e){return"object"==typeof e&&null!==e||(e={next:e,error:arguments[1],complete:arguments[2]}),new y(e,this._subscriber)}},{key:"forEach",value:function(e){var a=this
return new Promise((function(n,i){if("function"==typeof e)var r=a.subscribe({next:function(a){try{e(a,t)}catch(e){i(e),r.unsubscribe()}},error:i,complete:n})
else i(new TypeError(e+" is not a function"))
function t(){r.unsubscribe(),n()}}))}},{key:"map",value:function(e){var a=this
if("function"!=typeof e)throw new TypeError(e+" is not a function")
return new(h(this))((function(n){return a.subscribe({next:function(a){try{a=e(a)}catch(e){return n.error(e)}n.next(a)},error:function(e){n.error(e)},complete:function(){n.complete()}})}))}},{key:"filter",value:function(e){var a=this
if("function"!=typeof e)throw new TypeError(e+" is not a function")
return new(h(this))((function(n){return a.subscribe({next:function(a){try{if(!e(a))return}catch(e){return n.error(e)}n.next(a)},error:function(e){n.error(e)},complete:function(){n.complete()}})}))}},{key:"reduce",value:function(e){var a=this
if("function"!=typeof e)throw new TypeError(e+" is not a function")
var n=h(this),i=arguments.length>1,r=!1,t=arguments[1],o=t
return new n((function(n){return a.subscribe({next:function(a){var t=!r
if(r=!0,!t||i)try{o=e(o,a)}catch(e){return n.error(e)}else o=a},error:function(e){n.error(e)},complete:function(){if(!r&&!i)return n.error(new TypeError("Cannot reduce an empty sequence"))
n.next(o),n.complete()}})}))}},{key:"concat",value:function(){for(var e=this,a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
var r=h(this)
return new r((function(a){var i,t=0
return function e(o){i=o.subscribe({next:function(e){a.next(e)},error:function(e){a.error(e)},complete:function(){t===n.length?(i=void 0,a.complete()):e(r.from(n[t++]))}})}(e),function(){i&&(i.unsubscribe(),i=void 0)}}))}},{key:"flatMap",value:function(e){var a=this
if("function"!=typeof e)throw new TypeError(e+" is not a function")
var n=h(this)
return new n((function(i){var r=[],t=a.subscribe({next:function(a){if(e)try{a=e(a)}catch(e){return i.error(e)}var t=n.from(a).subscribe({next:function(e){i.next(e)},error:function(e){i.error(e)},complete:function(){var e=r.indexOf(t)
e>=0&&r.splice(e,1),o()}})
r.push(t)},error:function(e){i.error(e)},complete:function(){o()}})
function o(){t.closed&&0===r.length&&i.complete()}return function(){r.forEach((function(e){return e.unsubscribe()})),t.unsubscribe()}}))}},{key:u,value:function(){return this}}],[{key:"from",value:function(a){var n="function"==typeof this?this:e
if(null==a)throw new TypeError(a+" is not an object")
var i=d(a,u)
if(i){var r=i.call(a)
if(Object(r)!==r)throw new TypeError(r+" is not an object")
return function(e){return e instanceof S}(r)&&r.constructor===n?r:new n((function(e){return r.subscribe(e)}))}if(o("iterator")&&(i=d(a,l)))return new n((function(e){m((function(){if(!e.closed){var n=!0,r=!1,t=void 0
try{for(var o,s=i.call(a)[Symbol.iterator]();!(n=(o=s.next()).done);n=!0){var l=o.value
if(e.next(l),e.closed)return}}catch(e){r=!0,t=e}finally{try{n||null==s.return||s.return()}finally{if(r)throw t}}e.complete()}}))}))
if(Array.isArray(a))return new n((function(e){m((function(){if(!e.closed){for(var n=0;n<a.length;++n)if(e.next(a[n]),e.closed)return
e.complete()}}))}))
throw new TypeError(a+" is not observable")}},{key:"of",value:function(){for(var a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
var r="function"==typeof this?this:e
return new r((function(e){m((function(){if(!e.closed){for(var a=0;a<n.length;++a)if(e.next(n[a]),e.closed)return
e.complete()}}))}))}},{key:c,get:function(){return this}}]),e}()
a.Observable=S,t()&&Object.defineProperty(S,Symbol("extensions"),{value:{symbol:u,hostReportError:p},configurable:!0})},8411:(e,a,n)=>{"use strict"
n.d(a,{_:()=>g,O:()=>y})
var i=n(1886),r=n(788),t=n(5368),o=n(3026)
function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function u(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function c(e,a){return!a||"object"!==s(a)&&"function"!=typeof a?d(e):a}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function h(e){var a="function"==typeof Map?new Map:void 0
return h=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e
var n
if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function")
if(void 0!==a){if(a.has(e))return a.get(e)
a.set(e,i)}function i(){return p(e,arguments,v(this).constructor)}return i.prototype=Object.create(e.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),f(i,e)},h(e)}function p(e,a,n){return p=m()?Reflect.construct:function(e,a,n){var i=[null]
i.push.apply(i,a)
var r=new(Function.bind.apply(e,i))
return n&&f(r,n.prototype),r},p.apply(null,arguments)}function m(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function f(e,a){return f=Object.setPrototypeOf||function(e,a){return e.__proto__=a,e},f(e,a)}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}var g=function(e){!function(e,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(a&&a.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),a&&f(e,a)}(p,e)
var a,n,o,s,h=(a=p,n=m(),function(){var e,i=v(a)
if(n){var r=v(this).constructor
e=Reflect.construct(i,arguments,r)}else e=i.apply(this,arguments)
return c(this,e)})
function p(e,a,n,r,o,s,m){var f,v,g,y
!function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,p),(y=h.call(this,e)).name="GraphQLError",y.originalError=null!=s?s:void 0,y.nodes=k(Array.isArray(a)?a:a?[a]:void 0)
for(var b=[],S=0,A=null!==(M=y.nodes)&&void 0!==M?M:[];S<A.length;S++){var M,T=A[S].loc
null!=T&&b.push(T)}b=k(b),y.source=null!=n?n:null===(f=b)||void 0===f?void 0:f[0].source,y.positions=null!=r?r:null===(v=b)||void 0===v?void 0:v.map((function(e){return e.start})),y.locations=r&&n?r.map((function(e){return(0,t.k)(n,e)})):null===(g=b)||void 0===g?void 0:g.map((function(e){return(0,t.k)(e.source,e.start)})),y.path=null!=o?o:void 0
var _=null==s?void 0:s.extensions
return null==m&&(0,i.Z)(_)?y.extensions=function(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?l(Object(n),!0).forEach((function(a){u(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}({},_):y.extensions=null!=m?m:{},Object.defineProperties(d(y),{message:{enumerable:!0},locations:{enumerable:null!=y.locations},path:{enumerable:null!=y.path},extensions:{enumerable:null!=y.extensions&&Object.keys(y.extensions).length>0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),null!=s&&s.stack?(Object.defineProperty(d(y),"stack",{value:s.stack,writable:!0,configurable:!0}),c(y)):(Error.captureStackTrace?Error.captureStackTrace(d(y),p):Object.defineProperty(d(y),"stack",{value:Error().stack,writable:!0,configurable:!0}),y)}return o=p,(s=[{key:"toString",value:function(){return y(this)}},{key:r.YF,get:function(){return"Object"}}])&&function(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}(o.prototype,s),p}(h(Error))
function k(e){return void 0===e||0===e.length?void 0:e}function y(e){var a=e.message
if(e.nodes)for(var n=0,i=e.nodes;n<i.length;n++){var r=i[n]
r.loc&&(a+="\n\n"+(0,o.Q)(r.loc))}else if(e.source&&e.locations)for(var t=0,s=e.locations;t<s.length;t++){var l=s[t]
a+="\n\n"+(0,o.z)(e.source,l)}return a}},1083:(e,a,n)=>{"use strict"
n.d(a,{h:()=>r})
var i=n(8411)
function r(e,a,n){return new i._("Syntax Error: ".concat(n),void 0,e,[a])}},4636:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{BREAK:()=>u.$_,BreakingChangeType:()=>_t,DEFAULT_DEPRECATION_REASON:()=>Ea,DangerousChangeType:()=>wt,DirectiveLocation:()=>Ue.B,ExecutableDefinitionsRule:()=>fn,FieldsOnCorrectTypeRule:()=>Tn,FragmentsOnCompositeTypesRule:()=>Sn,GraphQLBoolean:()=>ia,GraphQLDeprecatedDirective:()=>Na,GraphQLDirective:()=>_a,GraphQLEnumType:()=>Re,GraphQLError:()=>l._,GraphQLFloat:()=>ea,GraphQLID:()=>ra,GraphQLIncludeDirective:()=>wa,GraphQLInputObjectType:()=>Oe,GraphQLInt:()=>Xe,GraphQLInterfaceType:()=>xe,GraphQLList:()=>me,GraphQLNonNull:()=>fe,GraphQLObjectType:()=>je,GraphQLScalarType:()=>we,GraphQLSchema:()=>Ca,GraphQLSkipDirective:()=>ja,GraphQLSpecifiedByDirective:()=>Ba,GraphQLString:()=>na,GraphQLUnionType:()=>Ce,Kind:()=>x.h,KnownArgumentNamesRule:()=>zn,KnownDirectivesRule:()=>Dn,KnownFragmentNamesRule:()=>wn,KnownTypeNamesRule:()=>yn,Lexer:()=>vr.h,Location:()=>en.Ye,LoneAnonymousOperationRule:()=>gn,LoneSchemaDefinitionRule:()=>ci,NoDeprecatedCustomRule:()=>_r,NoFragmentCyclesRule:()=>Nn,NoSchemaIntrospectionCustomRule:()=>wr,NoUndefinedVariablesRule:()=>Pn,NoUnusedFragmentsRule:()=>jn,NoUnusedVariablesRule:()=>Ln,OverlappingFieldsCanBeMergedRule:()=>$n,PossibleFragmentSpreadsRule:()=>En,PossibleTypeExtensionsRule:()=>ki,ProvidedRequiredArgumentsRule:()=>Un,ScalarLeafsRule:()=>Mn,SchemaMetaFieldDef:()=>ka,SingleFieldSubscriptionsRule:()=>kn,Source:()=>pr.H,Token:()=>en.WU,TokenKind:()=>gr.T,TypeInfo:()=>nn,TypeKind:()=>va,TypeMetaFieldDef:()=>ya,TypeNameMetaFieldDef:()=>ba,UniqueArgumentNamesRule:()=>In,UniqueDirectiveNamesRule:()=>vi,UniqueDirectivesPerLocationRule:()=>xn,UniqueEnumValueNamesRule:()=>pi,UniqueFieldDefinitionNamesRule:()=>mi,UniqueFragmentNamesRule:()=>_n,UniqueInputFieldNamesRule:()=>ui,UniqueOperationNamesRule:()=>vn,UniqueOperationTypesRule:()=>di,UniqueTypeNamesRule:()=>hi,UniqueVariableNamesRule:()=>Bn,ValidationContext:()=>_i,ValuesOfCorrectTypeRule:()=>Vn,VariablesAreInputTypesRule:()=>An,VariablesInAllowedPositionRule:()=>qn,__Directive:()=>ca,__DirectiveLocation:()=>da,__EnumValue:()=>fa,__Field:()=>pa,__InputValue:()=>ma,__Schema:()=>ua,__Type:()=>ha,__TypeKind:()=>ga,assertAbstractType:()=>pe,assertCompositeType:()=>de,assertDirective:()=>Ta,assertEnumType:()=>Y,assertInputObjectType:()=>X,assertInputType:()=>te,assertInterfaceType:()=>W,assertLeafType:()=>ue,assertListType:()=>ae,assertNamedType:()=>Ae,assertNonNullType:()=>ie,assertNullableType:()=>ye,assertObjectType:()=>J,assertOutputType:()=>se,assertScalarType:()=>H,assertSchema:()=>xa,assertType:()=>V,assertUnionType:()=>q,assertValidName:()=>f,assertValidSchema:()=>za,assertWrappingType:()=>ge,astFromValue:()=>sa,buildASTSchema:()=>Wr,buildClientSchema:()=>Kr,buildSchema:()=>Zr,coerceInputValue:()=>xi,concatAST:()=>vt,createSourceEventStream:()=>Tr,defaultFieldResolver:()=>lr,defaultTypeResolver:()=>sr,doTypesOverlap:()=>Fe,execute:()=>Ii,executeSync:()=>Vi,extendSchema:()=>Vr,findBreakingChanges:()=>jt,findDangerousChanges:()=>Et,findDeprecatedUsages:()=>Vt,formatError:()=>jr,getDescription:()=>Ur,getDirectiveValues:()=>zi,getIntrospectionQuery:()=>Pr,getLocation:()=>mr.k,getNamedType:()=>Me,getNullableType:()=>be,getOperationAST:()=>Lr,getOperationRootType:()=>Bi,getVisitFn:()=>u.CK,graphql:()=>cr,graphqlSync:()=>dr,introspectionFromSchema:()=>Cr,introspectionTypes:()=>Sa,isAbstractType:()=>he,isCompositeType:()=>ce,isDefinitionNode:()=>on,isDirective:()=>Ma,isEnumType:()=>Q,isEqualType:()=>Ge,isExecutableDefinitionNode:()=>sn,isInputObjectType:()=>$,isInputType:()=>re,isInterfaceType:()=>U,isIntrospectionType:()=>Aa,isLeafType:()=>le,isListType:()=>ee,isNamedType:()=>Se,isNonNullType:()=>ne,isNullableType:()=>ke,isObjectType:()=>F,isOutputType:()=>oe,isRequiredArgument:()=>De,isRequiredInputField:()=>Ve,isScalarType:()=>G,isSchema:()=>Da,isSelectionNode:()=>ln,isSpecifiedDirective:()=>La,isSpecifiedScalarType:()=>oa,isType:()=>I,isTypeDefinitionNode:()=>hn,isTypeExtensionNode:()=>mn,isTypeNode:()=>cn,isTypeSubTypeOf:()=>He,isTypeSystemDefinitionNode:()=>dn,isTypeSystemExtensionNode:()=>pn,isUnionType:()=>Z,isValidNameError:()=>v,isValueNode:()=>un,isWrappingType:()=>ve,lexicographicSortSchema:()=>$r,locatedError:()=>p,parse:()=>o.Qc,parseType:()=>o.gZ,parseValue:()=>o.H2,print:()=>C.S,printError:()=>l.O,printIntrospectionSchema:()=>it,printLocation:()=>fr.Q,printSchema:()=>nt,printSourceLocation:()=>fr.z,printType:()=>st,responsePathAsArray:()=>Ni,separateOperations:()=>gt,specifiedDirectives:()=>Pa,specifiedRules:()=>bi,specifiedScalarTypes:()=>ta,stripIgnoredCharacters:()=>bt,subscribe:()=>Sr,syntaxError:()=>Er.h,typeFromAST:()=>an,validate:()=>wi,validateSchema:()=>Ra,valueFromAST:()=>Li,valueFromASTUntyped:()=>R,version:()=>i,versionInfo:()=>r,visit:()=>u.Vn,visitInParallel:()=>u.j1,visitWithTypeInfo:()=>tn})
var i="15.8.0",r=Object.freeze({major:15,minor:8,patch:0,preReleaseTag:null})
function t(e){return"function"==typeof(null==e?void 0:e.then)}var o=n(6795),s=n(7431),l=n(8411),u=n(9485)
const c=Array.prototype.find?function(e,a){return Array.prototype.find.call(e,a)}:function(e,a){for(var n=0;n<e.length;n++){var i=e[n]
if(a(i))return i}},d=Object.values||function(e){return Object.keys(e).map((function(a){return e[a]}))}
var h=n(9613)
function p(e,a,n){var i,r=e instanceof Error?e:new Error("Unexpected error value: "+(0,h.Z)(e))
return Array.isArray(r.path)?r:new l._(r.message,null!==(i=r.nodes)&&void 0!==i?i:a,r.source,r.positions,n,r)}var m=/^[_a-zA-Z][_a-zA-Z0-9]*$/
function f(e){var a=v(e)
if(a)throw a
return e}function v(e){return"string"==typeof e||(0,s.Z)(0,"Expected name to be a string."),e.length>1&&"_"===e[0]&&"_"===e[1]?new l._('Name "'.concat(e,'" must not begin with "__", which is reserved by GraphQL introspection.')):m.test(e)?void 0:new l._('Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but "'.concat(e,'" does not.'))}const g=Object.entries||function(e){return Object.keys(e).map((function(a){return[a,e[a]]}))}
var k=n(788)
function y(e,a){return e.reduce((function(e,n){return e[a(n)]=n,e}),Object.create(null))}function b(e,a){for(var n=Object.create(null),i=0,r=g(e);i<r.length;i++){var t=r[i],o=t[0],s=t[1]
n[o]=a(s,o)}return n}function S(e){if(null===Object.getPrototypeOf(e))return e
for(var a=Object.create(null),n=0,i=g(e);n<i.length;n++){var r=i[n],t=r[0],o=r[1]
a[t]=o}return a}function A(e,a,n){return e.reduce((function(e,i){return e[a(i)]=n(i),e}),Object.create(null))}var M=n(1327)
function T(e,a){var n="string"==typeof e?[e,a]:[void 0,e],i=n[0],r=" Did you mean "
i&&(r+=i+" ")
var t=n[1].map((function(e){return'"'.concat(e,'"')}))
switch(t.length){case 0:return""
case 1:return r+t[0]+"?"
case 2:return r+t[0]+" or "+t[1]+"?"}var o=t.slice(0,5),s=o.pop()
return r+o.join(", ")+", or "+s+"?"}var _=n(1886)
function w(e){return e}var j=n(237)
function E(e,a){for(var n=0,i=0;n<e.length&&i<a.length;){var r=e.charCodeAt(n),t=a.charCodeAt(i)
if(B(r)&&B(t)){var o=0
do{++n,o=10*o+r-N,r=e.charCodeAt(n)}while(B(r)&&o>0)
var s=0
do{++i,s=10*s+t-N,t=a.charCodeAt(i)}while(B(t)&&s>0)
if(o<s)return-1
if(o>s)return 1}else{if(r<t)return-1
if(r>t)return 1;++n,++i}}return e.length-a.length}var N=48
function B(e){return!isNaN(e)&&N<=e&&e<=57}function P(e,a){for(var n=Object.create(null),i=new L(e),r=Math.floor(.4*e.length)+1,t=0;t<a.length;t++){var o=a[t],s=i.measure(o,r)
void 0!==s&&(n[o]=s)}return Object.keys(n).sort((function(e,a){var i=n[e]-n[a]
return 0!==i?i:E(e,a)}))}var L=function(){function e(e){this._input=e,this._inputLowerCase=e.toLowerCase(),this._inputArray=D(this._inputLowerCase),this._rows=[new Array(e.length+1).fill(0),new Array(e.length+1).fill(0),new Array(e.length+1).fill(0)]}return e.prototype.measure=function(e,a){if(this._input===e)return 0
var n=e.toLowerCase()
if(this._inputLowerCase===n)return 1
var i=D(n),r=this._inputArray
if(i.length<r.length){var t=i
i=r,r=t}var o=i.length,s=r.length
if(!(o-s>a)){for(var l=this._rows,u=0;u<=s;u++)l[0][u]=u
for(var c=1;c<=o;c++){for(var d=l[(c-1)%3],h=l[c%3],p=h[0]=c,m=1;m<=s;m++){var f=i[c-1]===r[m-1]?0:1,v=Math.min(d[m]+1,h[m-1]+1,d[m-1]+f)
if(c>1&&m>1&&i[c-1]===r[m-2]&&i[c-2]===r[m-1]){var g=l[(c-2)%3][m-2]
v=Math.min(v,g+1)}v<p&&(p=v),h[m]=v}if(p>a)return}var k=l[o%3][s]
return k<=a?k:void 0}},e}()
function D(e){for(var a=e.length,n=new Array(a),i=0;i<a;++i)n[i]=e.charCodeAt(i)
return n}var x=n(4627),C=n(6255),K=n(3325)
function R(e,a){switch(e.kind){case x.h.NULL:return null
case x.h.INT:return parseInt(e.value,10)
case x.h.FLOAT:return parseFloat(e.value)
case x.h.STRING:case x.h.ENUM:case x.h.BOOLEAN:return e.value
case x.h.LIST:return e.values.map((function(e){return R(e,a)}))
case x.h.OBJECT:return A(e.fields,(function(e){return e.name.value}),(function(e){return R(e.value,a)}))
case x.h.VARIABLE:return null==a?void 0:a[e.name.value]}(0,K.Z)(0,"Unexpected value node: "+(0,h.Z)(e))}function z(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function O(e,a,n){return a&&z(e.prototype,a),n&&z(e,n),e}function I(e){return G(e)||F(e)||U(e)||Z(e)||Q(e)||$(e)||ee(e)||ne(e)}function V(e){if(!I(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL type."))
return e}function G(e){return(0,M.Z)(e,we)}function H(e){if(!G(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL Scalar type."))
return e}function F(e){return(0,M.Z)(e,je)}function J(e){if(!F(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL Object type."))
return e}function U(e){return(0,M.Z)(e,xe)}function W(e){if(!U(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL Interface type."))
return e}function Z(e){return(0,M.Z)(e,Ce)}function q(e){if(!Z(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL Union type."))
return e}function Q(e){return(0,M.Z)(e,Re)}function Y(e){if(!Q(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL Enum type."))
return e}function $(e){return(0,M.Z)(e,Oe)}function X(e){if(!$(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL Input Object type."))
return e}function ee(e){return(0,M.Z)(e,me)}function ae(e){if(!ee(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL List type."))
return e}function ne(e){return(0,M.Z)(e,fe)}function ie(e){if(!ne(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL Non-Null type."))
return e}function re(e){return G(e)||Q(e)||$(e)||ve(e)&&re(e.ofType)}function te(e){if(!re(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL input type."))
return e}function oe(e){return G(e)||F(e)||U(e)||Z(e)||Q(e)||ve(e)&&oe(e.ofType)}function se(e){if(!oe(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL output type."))
return e}function le(e){return G(e)||Q(e)}function ue(e){if(!le(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL leaf type."))
return e}function ce(e){return F(e)||U(e)||Z(e)}function de(e){if(!ce(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL composite type."))
return e}function he(e){return U(e)||Z(e)}function pe(e){if(!he(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL abstract type."))
return e}function me(e){if(!(this instanceof me))return new me(e)
this.ofType=V(e)}function fe(e){if(!(this instanceof fe))return new fe(e)
this.ofType=ye(e)}function ve(e){return ee(e)||ne(e)}function ge(e){if(!ve(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL wrapping type."))
return e}function ke(e){return I(e)&&!ne(e)}function ye(e){if(!ke(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL nullable type."))
return e}function be(e){if(e)return ne(e)?e.ofType:e}function Se(e){return G(e)||F(e)||U(e)||Z(e)||Q(e)||$(e)}function Ae(e){if(!Se(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL named type."))
return e}function Me(e){if(e){for(var a=e;ve(a);)a=a.ofType
return a}}function Te(e){return"function"==typeof e?e():e}function _e(e){return e&&e.length>0?e:void 0}me.prototype.toString=function(){return"["+String(this.ofType)+"]"},me.prototype.toJSON=function(){return this.toString()},Object.defineProperty(me.prototype,k.YF,{get:function(){return"GraphQLList"}}),(0,j.Z)(me),fe.prototype.toString=function(){return String(this.ofType)+"!"},fe.prototype.toJSON=function(){return this.toString()},Object.defineProperty(fe.prototype,k.YF,{get:function(){return"GraphQLNonNull"}}),(0,j.Z)(fe)
var we=function(){function e(e){var a,n,i,r=null!==(a=e.parseValue)&&void 0!==a?a:w
this.name=e.name,this.description=e.description,this.specifiedByUrl=e.specifiedByUrl,this.serialize=null!==(n=e.serialize)&&void 0!==n?n:w,this.parseValue=r,this.parseLiteral=null!==(i=e.parseLiteral)&&void 0!==i?i:function(e,a){return r(R(e,a))},this.extensions=e.extensions&&S(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=_e(e.extensionASTNodes),"string"==typeof e.name||(0,s.Z)(0,"Must provide name."),null==e.specifiedByUrl||"string"==typeof e.specifiedByUrl||(0,s.Z)(0,"".concat(this.name,' must provide "specifiedByUrl" as a string, ')+"but got: ".concat((0,h.Z)(e.specifiedByUrl),".")),null==e.serialize||"function"==typeof e.serialize||(0,s.Z)(0,"".concat(this.name,' must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.')),e.parseLiteral&&("function"==typeof e.parseValue&&"function"==typeof e.parseLiteral||(0,s.Z)(0,"".concat(this.name,' must provide both "parseValue" and "parseLiteral" functions.')))}var a=e.prototype
return a.toConfig=function(){var e
return{name:this.name,description:this.description,specifiedByUrl:this.specifiedByUrl,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},O(e,[{key:k.YF,get:function(){return"GraphQLScalarType"}}]),e}();(0,j.Z)(we)
var je=function(){function e(e){this.name=e.name,this.description=e.description,this.isTypeOf=e.isTypeOf,this.extensions=e.extensions&&S(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=_e(e.extensionASTNodes),this._fields=Ne.bind(void 0,e),this._interfaces=Ee.bind(void 0,e),"string"==typeof e.name||(0,s.Z)(0,"Must provide name."),null==e.isTypeOf||"function"==typeof e.isTypeOf||(0,s.Z)(0,"".concat(this.name,' must provide "isTypeOf" as a function, ')+"but got: ".concat((0,h.Z)(e.isTypeOf),"."))}var a=e.prototype
return a.getFields=function(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields},a.getInterfaces=function(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces},a.toConfig=function(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Pe(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes||[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},O(e,[{key:k.YF,get:function(){return"GraphQLObjectType"}}]),e}()
function Ee(e){var a,n=null!==(a=Te(e.interfaces))&&void 0!==a?a:[]
return Array.isArray(n)||(0,s.Z)(0,"".concat(e.name," interfaces must be an Array or a function which returns an Array.")),n}function Ne(e){var a=Te(e.fields)
return Be(a)||(0,s.Z)(0,"".concat(e.name," fields must be an object with field names as keys or a function which returns such an object.")),b(a,(function(a,n){var i
Be(a)||(0,s.Z)(0,"".concat(e.name,".").concat(n," field config must be an object.")),!("isDeprecated"in a)||(0,s.Z)(0,"".concat(e.name,".").concat(n,' should provide "deprecationReason" instead of "isDeprecated".')),null==a.resolve||"function"==typeof a.resolve||(0,s.Z)(0,"".concat(e.name,".").concat(n," field resolver must be a function if ")+"provided, but got: ".concat((0,h.Z)(a.resolve),"."))
var r=null!==(i=a.args)&&void 0!==i?i:{}
Be(r)||(0,s.Z)(0,"".concat(e.name,".").concat(n," args must be an object with argument names as keys."))
var t=g(r).map((function(e){var a=e[0],n=e[1]
return{name:a,description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:n.extensions&&S(n.extensions),astNode:n.astNode}}))
return{name:n,description:a.description,type:a.type,args:t,resolve:a.resolve,subscribe:a.subscribe,isDeprecated:null!=a.deprecationReason,deprecationReason:a.deprecationReason,extensions:a.extensions&&S(a.extensions),astNode:a.astNode}}))}function Be(e){return(0,_.Z)(e)&&!Array.isArray(e)}function Pe(e){return b(e,(function(e){return{description:e.description,type:e.type,args:Le(e.args),resolve:e.resolve,subscribe:e.subscribe,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode}}))}function Le(e){return A(e,(function(e){return e.name}),(function(e){return{description:e.description,type:e.type,defaultValue:e.defaultValue,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode}}))}function De(e){return ne(e.type)&&void 0===e.defaultValue}(0,j.Z)(je)
var xe=function(){function e(e){this.name=e.name,this.description=e.description,this.resolveType=e.resolveType,this.extensions=e.extensions&&S(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=_e(e.extensionASTNodes),this._fields=Ne.bind(void 0,e),this._interfaces=Ee.bind(void 0,e),"string"==typeof e.name||(0,s.Z)(0,"Must provide name."),null==e.resolveType||"function"==typeof e.resolveType||(0,s.Z)(0,"".concat(this.name,' must provide "resolveType" as a function, ')+"but got: ".concat((0,h.Z)(e.resolveType),"."))}var a=e.prototype
return a.getFields=function(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields},a.getInterfaces=function(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces},a.toConfig=function(){var e
return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Pe(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},O(e,[{key:k.YF,get:function(){return"GraphQLInterfaceType"}}]),e}();(0,j.Z)(xe)
var Ce=function(){function e(e){this.name=e.name,this.description=e.description,this.resolveType=e.resolveType,this.extensions=e.extensions&&S(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=_e(e.extensionASTNodes),this._types=Ke.bind(void 0,e),"string"==typeof e.name||(0,s.Z)(0,"Must provide name."),null==e.resolveType||"function"==typeof e.resolveType||(0,s.Z)(0,"".concat(this.name,' must provide "resolveType" as a function, ')+"but got: ".concat((0,h.Z)(e.resolveType),"."))}var a=e.prototype
return a.getTypes=function(){return"function"==typeof this._types&&(this._types=this._types()),this._types},a.toConfig=function(){var e
return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},O(e,[{key:k.YF,get:function(){return"GraphQLUnionType"}}]),e}()
function Ke(e){var a=Te(e.types)
return Array.isArray(a)||(0,s.Z)(0,"Must provide Array of types or a function which returns such an array for Union ".concat(e.name,".")),a}(0,j.Z)(Ce)
var Re=function(){function e(e){var a,n
this.name=e.name,this.description=e.description,this.extensions=e.extensions&&S(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=_e(e.extensionASTNodes),this._values=(a=this.name,Be(n=e.values)||(0,s.Z)(0,"".concat(a," values must be an object with value names as keys.")),g(n).map((function(e){var n=e[0],i=e[1]
return Be(i)||(0,s.Z)(0,"".concat(a,".").concat(n,' must refer to an object with a "value" key ')+"representing an internal value but got: ".concat((0,h.Z)(i),".")),!("isDeprecated"in i)||(0,s.Z)(0,"".concat(a,".").concat(n,' should provide "deprecationReason" instead of "isDeprecated".')),{name:n,description:i.description,value:void 0!==i.value?i.value:n,isDeprecated:null!=i.deprecationReason,deprecationReason:i.deprecationReason,extensions:i.extensions&&S(i.extensions),astNode:i.astNode}}))),this._valueLookup=new Map(this._values.map((function(e){return[e.value,e]}))),this._nameLookup=y(this._values,(function(e){return e.name})),"string"==typeof e.name||(0,s.Z)(0,"Must provide name.")}var a=e.prototype
return a.getValues=function(){return this._values},a.getValue=function(e){return this._nameLookup[e]},a.serialize=function(e){var a=this._valueLookup.get(e)
if(void 0===a)throw new l._('Enum "'.concat(this.name,'" cannot represent value: ').concat((0,h.Z)(e)))
return a.name},a.parseValue=function(e){if("string"!=typeof e){var a=(0,h.Z)(e)
throw new l._('Enum "'.concat(this.name,'" cannot represent non-string value: ').concat(a,".")+ze(this,a))}var n=this.getValue(e)
if(null==n)throw new l._('Value "'.concat(e,'" does not exist in "').concat(this.name,'" enum.')+ze(this,e))
return n.value},a.parseLiteral=function(e,a){if(e.kind!==x.h.ENUM){var n=(0,C.S)(e)
throw new l._('Enum "'.concat(this.name,'" cannot represent non-enum value: ').concat(n,".")+ze(this,n),e)}var i=this.getValue(e.value)
if(null==i){var r=(0,C.S)(e)
throw new l._('Value "'.concat(r,'" does not exist in "').concat(this.name,'" enum.')+ze(this,r),e)}return i.value},a.toConfig=function(){var e,a=A(this.getValues(),(function(e){return e.name}),(function(e){return{description:e.description,value:e.value,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode}}))
return{name:this.name,description:this.description,values:a,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},O(e,[{key:k.YF,get:function(){return"GraphQLEnumType"}}]),e}()
function ze(e,a){return T("the enum value",P(a,e.getValues().map((function(e){return e.name}))))}(0,j.Z)(Re)
var Oe=function(){function e(e){this.name=e.name,this.description=e.description,this.extensions=e.extensions&&S(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=_e(e.extensionASTNodes),this._fields=Ie.bind(void 0,e),"string"==typeof e.name||(0,s.Z)(0,"Must provide name.")}var a=e.prototype
return a.getFields=function(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields},a.toConfig=function(){var e,a=b(this.getFields(),(function(e){return{description:e.description,type:e.type,defaultValue:e.defaultValue,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode}}))
return{name:this.name,description:this.description,fields:a,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[]}},a.toString=function(){return this.name},a.toJSON=function(){return this.toString()},O(e,[{key:k.YF,get:function(){return"GraphQLInputObjectType"}}]),e}()
function Ie(e){var a=Te(e.fields)
return Be(a)||(0,s.Z)(0,"".concat(e.name," fields must be an object with field names as keys or a function which returns such an object.")),b(a,(function(a,n){return!("resolve"in a)||(0,s.Z)(0,"".concat(e.name,".").concat(n," field has a resolve property, but Input Types cannot define resolvers.")),{name:n,description:a.description,type:a.type,defaultValue:a.defaultValue,deprecationReason:a.deprecationReason,extensions:a.extensions&&S(a.extensions),astNode:a.astNode}}))}function Ve(e){return ne(e.type)&&void 0===e.defaultValue}function Ge(e,a){return e===a||(ne(e)&&ne(a)||!(!ee(e)||!ee(a)))&&Ge(e.ofType,a.ofType)}function He(e,a,n){return a===n||(ne(n)?!!ne(a)&&He(e,a.ofType,n.ofType):ne(a)?He(e,a.ofType,n):ee(n)?!!ee(a)&&He(e,a.ofType,n.ofType):!ee(a)&&he(n)&&(U(a)||F(a))&&e.isSubType(n,a))}function Fe(e,a,n){return a===n||(he(a)?he(n)?e.getPossibleTypes(a).some((function(a){return e.isSubType(n,a)})):e.isSubType(a,n):!!he(n)&&e.isSubType(n,a))}(0,j.Z)(Oe)
const Je=Array.from||function(e,a,n){if(null==e)throw new TypeError("Array.from requires an array-like object - not null or undefined")
var i=e[k.Xr]
if("function"==typeof i){for(var r,t=i.call(e),o=[],s=0;!(r=t.next()).done;++s)if(o.push(a.call(n,r.value,s)),s>9999999)throw new TypeError("Near-infinite iteration.")
return o}var l=e.length
if("number"==typeof l&&l>=0&&l%1==0){for(var u=[],c=0;c<l;++c)Object.prototype.hasOwnProperty.call(e,c)&&u.push(a.call(n,e[c],c))
return u}return[]}
var Ue=n(5932)
const We=Number.isFinite||function(e){return"number"==typeof e&&isFinite(e)}
function Ze(e){return Ze="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ze(e)}function qe(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(e){return e}
if(null==e||"object"!==Ze(e))return null
if(Array.isArray(e))return e.map(a)
var n=e[k.Xr]
if("function"==typeof n){for(var i,r=n.call(e),t=[],o=0;!(i=r.next()).done;++o)t.push(a(i.value,o))
return t}var s=e.length
if("number"==typeof s&&s>=0&&s%1==0){for(var l=[],u=0;u<s;++u){if(!Object.prototype.hasOwnProperty.call(e,u))return null
l.push(a(e[String(u)],u))}return l}return null}const Qe=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e}
var Ye=2147483647,$e=-2147483648,Xe=new we({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize:function(e){var a=aa(e)
if("boolean"==typeof a)return a?1:0
var n=a
if("string"==typeof a&&""!==a&&(n=Number(a)),!Qe(n))throw new l._("Int cannot represent non-integer value: ".concat((0,h.Z)(a)))
if(n>Ye||n<$e)throw new l._("Int cannot represent non 32-bit signed integer value: "+(0,h.Z)(a))
return n},parseValue:function(e){if(!Qe(e))throw new l._("Int cannot represent non-integer value: ".concat((0,h.Z)(e)))
if(e>Ye||e<$e)throw new l._("Int cannot represent non 32-bit signed integer value: ".concat(e))
return e},parseLiteral:function(e){if(e.kind!==x.h.INT)throw new l._("Int cannot represent non-integer value: ".concat((0,C.S)(e)),e)
var a=parseInt(e.value,10)
if(a>Ye||a<$e)throw new l._("Int cannot represent non 32-bit signed integer value: ".concat(e.value),e)
return a}}),ea=new we({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize:function(e){var a=aa(e)
if("boolean"==typeof a)return a?1:0
var n=a
if("string"==typeof a&&""!==a&&(n=Number(a)),!We(n))throw new l._("Float cannot represent non numeric value: ".concat((0,h.Z)(a)))
return n},parseValue:function(e){if(!We(e))throw new l._("Float cannot represent non numeric value: ".concat((0,h.Z)(e)))
return e},parseLiteral:function(e){if(e.kind!==x.h.FLOAT&&e.kind!==x.h.INT)throw new l._("Float cannot represent non numeric value: ".concat((0,C.S)(e)),e)
return parseFloat(e.value)}})
function aa(e){if((0,_.Z)(e)){if("function"==typeof e.valueOf){var a=e.valueOf()
if(!(0,_.Z)(a))return a}if("function"==typeof e.toJSON)return e.toJSON()}return e}var na=new we({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize:function(e){var a=aa(e)
if("string"==typeof a)return a
if("boolean"==typeof a)return a?"true":"false"
if(We(a))return a.toString()
throw new l._("String cannot represent value: ".concat((0,h.Z)(e)))},parseValue:function(e){if("string"!=typeof e)throw new l._("String cannot represent a non string value: ".concat((0,h.Z)(e)))
return e},parseLiteral:function(e){if(e.kind!==x.h.STRING)throw new l._("String cannot represent a non string value: ".concat((0,C.S)(e)),e)
return e.value}}),ia=new we({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize:function(e){var a=aa(e)
if("boolean"==typeof a)return a
if(We(a))return 0!==a
throw new l._("Boolean cannot represent a non boolean value: ".concat((0,h.Z)(a)))},parseValue:function(e){if("boolean"!=typeof e)throw new l._("Boolean cannot represent a non boolean value: ".concat((0,h.Z)(e)))
return e},parseLiteral:function(e){if(e.kind!==x.h.BOOLEAN)throw new l._("Boolean cannot represent a non boolean value: ".concat((0,C.S)(e)),e)
return e.value}}),ra=new we({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize:function(e){var a=aa(e)
if("string"==typeof a)return a
if(Qe(a))return String(a)
throw new l._("ID cannot represent value: ".concat((0,h.Z)(e)))},parseValue:function(e){if("string"==typeof e)return e
if(Qe(e))return e.toString()
throw new l._("ID cannot represent value: ".concat((0,h.Z)(e)))},parseLiteral:function(e){if(e.kind!==x.h.STRING&&e.kind!==x.h.INT)throw new l._("ID cannot represent a non-string and non-integer value: "+(0,C.S)(e),e)
return e.value}}),ta=Object.freeze([na,Xe,ea,ia,ra])
function oa(e){return ta.some((function(a){var n=a.name
return e.name===n}))}function sa(e,a){if(ne(a)){var n=sa(e,a.ofType)
return(null==n?void 0:n.kind)===x.h.NULL?null:n}if(null===e)return{kind:x.h.NULL}
if(void 0===e)return null
if(ee(a)){var i=a.ofType,r=qe(e)
if(null!=r){for(var t=[],o=0;o<r.length;o++){var s=sa(r[o],i)
null!=s&&t.push(s)}return{kind:x.h.LIST,values:t}}return sa(e,i)}if($(a)){if(!(0,_.Z)(e))return null
for(var l=[],u=0,c=d(a.getFields());u<c.length;u++){var p=c[u],m=sa(e[p.name],p.type)
m&&l.push({kind:x.h.OBJECT_FIELD,name:{kind:x.h.NAME,value:p.name},value:m})}return{kind:x.h.OBJECT,fields:l}}if(le(a)){var f=a.serialize(e)
if(null==f)return null
if("boolean"==typeof f)return{kind:x.h.BOOLEAN,value:f}
if("number"==typeof f&&We(f)){var v=String(f)
return la.test(v)?{kind:x.h.INT,value:v}:{kind:x.h.FLOAT,value:v}}if("string"==typeof f)return Q(a)?{kind:x.h.ENUM,value:f}:a===ra&&la.test(f)?{kind:x.h.INT,value:f}:{kind:x.h.STRING,value:f}
throw new TypeError("Cannot convert value to AST: ".concat((0,h.Z)(f),"."))}(0,K.Z)(0,"Unexpected input type: "+(0,h.Z)(a))}var la=/^-?(?:0|[1-9][0-9]*)$/,ua=new je({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:function(){return{description:{type:na,resolve:function(e){return e.description}},types:{description:"A list of all types supported by this server.",type:new fe(new me(new fe(ha))),resolve:function(e){return d(e.getTypeMap())}},queryType:{description:"The type that query operations will be rooted at.",type:new fe(ha),resolve:function(e){return e.getQueryType()}},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:ha,resolve:function(e){return e.getMutationType()}},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:ha,resolve:function(e){return e.getSubscriptionType()}},directives:{description:"A list of all directives supported by this server.",type:new fe(new me(new fe(ca))),resolve:function(e){return e.getDirectives()}}}}}),ca=new je({name:"__Directive",description:"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",fields:function(){return{name:{type:new fe(na),resolve:function(e){return e.name}},description:{type:na,resolve:function(e){return e.description}},isRepeatable:{type:new fe(ia),resolve:function(e){return e.isRepeatable}},locations:{type:new fe(new me(new fe(da))),resolve:function(e){return e.locations}},args:{type:new fe(new me(new fe(ma))),args:{includeDeprecated:{type:ia,defaultValue:!1}},resolve:function(e,a){return a.includeDeprecated?e.args:e.args.filter((function(e){return null==e.deprecationReason}))}}}}}),da=new Re({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:Ue.B.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:Ue.B.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:Ue.B.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:Ue.B.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:Ue.B.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:Ue.B.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:Ue.B.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:Ue.B.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:Ue.B.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:Ue.B.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:Ue.B.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:Ue.B.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:Ue.B.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:Ue.B.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:Ue.B.UNION,description:"Location adjacent to a union definition."},ENUM:{value:Ue.B.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:Ue.B.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:Ue.B.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:Ue.B.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),ha=new je({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:function(){return{kind:{type:new fe(ga),resolve:function(e){return G(e)?va.SCALAR:F(e)?va.OBJECT:U(e)?va.INTERFACE:Z(e)?va.UNION:Q(e)?va.ENUM:$(e)?va.INPUT_OBJECT:ee(e)?va.LIST:ne(e)?va.NON_NULL:void(0,K.Z)(0,'Unexpected type: "'.concat((0,h.Z)(e),'".'))}},name:{type:na,resolve:function(e){return void 0!==e.name?e.name:void 0}},description:{type:na,resolve:function(e){return void 0!==e.description?e.description:void 0}},specifiedByUrl:{type:na,resolve:function(e){return void 0!==e.specifiedByUrl?e.specifiedByUrl:void 0}},fields:{type:new me(new fe(pa)),args:{includeDeprecated:{type:ia,defaultValue:!1}},resolve:function(e,a){var n=a.includeDeprecated
if(F(e)||U(e)){var i=d(e.getFields())
return n?i:i.filter((function(e){return null==e.deprecationReason}))}}},interfaces:{type:new me(new fe(ha)),resolve:function(e){if(F(e)||U(e))return e.getInterfaces()}},possibleTypes:{type:new me(new fe(ha)),resolve:function(e,a,n,i){var r=i.schema
if(he(e))return r.getPossibleTypes(e)}},enumValues:{type:new me(new fe(fa)),args:{includeDeprecated:{type:ia,defaultValue:!1}},resolve:function(e,a){var n=a.includeDeprecated
if(Q(e)){var i=e.getValues()
return n?i:i.filter((function(e){return null==e.deprecationReason}))}}},inputFields:{type:new me(new fe(ma)),args:{includeDeprecated:{type:ia,defaultValue:!1}},resolve:function(e,a){var n=a.includeDeprecated
if($(e)){var i=d(e.getFields())
return n?i:i.filter((function(e){return null==e.deprecationReason}))}}},ofType:{type:ha,resolve:function(e){return void 0!==e.ofType?e.ofType:void 0}}}}}),pa=new je({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:function(){return{name:{type:new fe(na),resolve:function(e){return e.name}},description:{type:na,resolve:function(e){return e.description}},args:{type:new fe(new me(new fe(ma))),args:{includeDeprecated:{type:ia,defaultValue:!1}},resolve:function(e,a){return a.includeDeprecated?e.args:e.args.filter((function(e){return null==e.deprecationReason}))}},type:{type:new fe(ha),resolve:function(e){return e.type}},isDeprecated:{type:new fe(ia),resolve:function(e){return null!=e.deprecationReason}},deprecationReason:{type:na,resolve:function(e){return e.deprecationReason}}}}}),ma=new je({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:function(){return{name:{type:new fe(na),resolve:function(e){return e.name}},description:{type:na,resolve:function(e){return e.description}},type:{type:new fe(ha),resolve:function(e){return e.type}},defaultValue:{type:na,description:"A GraphQL-formatted string representing the default value for this input value.",resolve:function(e){var a=e.type,n=sa(e.defaultValue,a)
return n?(0,C.S)(n):null}},isDeprecated:{type:new fe(ia),resolve:function(e){return null!=e.deprecationReason}},deprecationReason:{type:na,resolve:function(e){return e.deprecationReason}}}}}),fa=new je({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:function(){return{name:{type:new fe(na),resolve:function(e){return e.name}},description:{type:na,resolve:function(e){return e.description}},isDeprecated:{type:new fe(ia),resolve:function(e){return null!=e.deprecationReason}},deprecationReason:{type:na,resolve:function(e){return e.deprecationReason}}}}}),va=Object.freeze({SCALAR:"SCALAR",OBJECT:"OBJECT",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",INPUT_OBJECT:"INPUT_OBJECT",LIST:"LIST",NON_NULL:"NON_NULL"}),ga=new Re({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:va.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:va.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:va.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:va.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:va.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:va.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:va.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:va.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}}),ka={name:"__schema",type:new fe(ua),description:"Access the current type schema of this server.",args:[],resolve:function(e,a,n,i){return i.schema},isDeprecated:!1,deprecationReason:void 0,extensions:void 0,astNode:void 0},ya={name:"__type",type:ha,description:"Request the type information of a single type.",args:[{name:"name",description:void 0,type:new fe(na),defaultValue:void 0,deprecationReason:void 0,extensions:void 0,astNode:void 0}],resolve:function(e,a,n,i){var r=a.name
return i.schema.getType(r)},isDeprecated:!1,deprecationReason:void 0,extensions:void 0,astNode:void 0},ba={name:"__typename",type:new fe(na),description:"The name of the current Object type at runtime.",args:[],resolve:function(e,a,n,i){return i.parentType.name},isDeprecated:!1,deprecationReason:void 0,extensions:void 0,astNode:void 0},Sa=Object.freeze([ua,ca,da,ha,pa,ma,fa,ga])
function Aa(e){return Sa.some((function(a){var n=a.name
return e.name===n}))}function Ma(e){return(0,M.Z)(e,_a)}function Ta(e){if(!Ma(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL directive."))
return e}var _a=function(){function e(e){var a,n
this.name=e.name,this.description=e.description,this.locations=e.locations,this.isRepeatable=null!==(a=e.isRepeatable)&&void 0!==a&&a,this.extensions=e.extensions&&S(e.extensions),this.astNode=e.astNode,e.name||(0,s.Z)(0,"Directive must be named."),Array.isArray(e.locations)||(0,s.Z)(0,"@".concat(e.name," locations must be an Array."))
var i=null!==(n=e.args)&&void 0!==n?n:{};(0,_.Z)(i)&&!Array.isArray(i)||(0,s.Z)(0,"@".concat(e.name," args must be an object with argument names as keys.")),this.args=g(i).map((function(e){var a=e[0],n=e[1]
return{name:a,description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:n.extensions&&S(n.extensions),astNode:n.astNode}}))}var a,n,i=e.prototype
return i.toConfig=function(){return{name:this.name,description:this.description,locations:this.locations,args:Le(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}},i.toString=function(){return"@"+this.name},i.toJSON=function(){return this.toString()},a=e,(n=[{key:k.YF,get:function(){return"GraphQLDirective"}}])&&function(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}(a.prototype,n),e}();(0,j.Z)(_a)
var wa=new _a({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[Ue.B.FIELD,Ue.B.FRAGMENT_SPREAD,Ue.B.INLINE_FRAGMENT],args:{if:{type:new fe(ia),description:"Included when true."}}}),ja=new _a({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[Ue.B.FIELD,Ue.B.FRAGMENT_SPREAD,Ue.B.INLINE_FRAGMENT],args:{if:{type:new fe(ia),description:"Skipped when true."}}}),Ea="No longer supported",Na=new _a({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[Ue.B.FIELD_DEFINITION,Ue.B.ARGUMENT_DEFINITION,Ue.B.INPUT_FIELD_DEFINITION,Ue.B.ENUM_VALUE],args:{reason:{type:na,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:Ea}}}),Ba=new _a({name:"specifiedBy",description:"Exposes a URL that specifies the behaviour of this scalar.",locations:[Ue.B.SCALAR],args:{url:{type:new fe(na),description:"The URL that specifies the behaviour of this scalar."}}}),Pa=Object.freeze([wa,ja,Na,Ba])
function La(e){return Pa.some((function(a){return a.name===e.name}))}function Da(e){return(0,M.Z)(e,Ca)}function xa(e){if(!Da(e))throw new Error("Expected ".concat((0,h.Z)(e)," to be a GraphQL schema."))
return e}var Ca=function(){function e(e){var a
this.__validationErrors=!0===e.assumeValid?[]:void 0,(0,_.Z)(e)||(0,s.Z)(0,"Must provide configuration object."),!e.types||Array.isArray(e.types)||(0,s.Z)(0,'"types" must be Array if provided but got: '.concat((0,h.Z)(e.types),".")),!e.directives||Array.isArray(e.directives)||(0,s.Z)(0,'"directives" must be Array if provided but got: '+"".concat((0,h.Z)(e.directives),".")),this.description=e.description,this.extensions=e.extensions&&S(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes,this._queryType=e.query,this._mutationType=e.mutation,this._subscriptionType=e.subscription,this._directives=null!==(a=e.directives)&&void 0!==a?a:Pa
var n=new Set(e.types)
if(null!=e.types)for(var i=0,r=e.types;i<r.length;i++){var t=r[i]
n.delete(t),Ka(t,n)}null!=this._queryType&&Ka(this._queryType,n),null!=this._mutationType&&Ka(this._mutationType,n),null!=this._subscriptionType&&Ka(this._subscriptionType,n)
for(var o=0,l=this._directives;o<l.length;o++){var u=l[o]
if(Ma(u))for(var c=0,d=u.args;c<d.length;c++)Ka(d[c].type,n)}Ka(ua,n),this._typeMap=Object.create(null),this._subTypeMap=Object.create(null),this._implementationsMap=Object.create(null)
for(var p=0,m=Je(n);p<m.length;p++){var f=m[p]
if(null!=f){var v=f.name
if(v||(0,s.Z)(0,"One of the provided types for building the Schema is missing a name."),void 0!==this._typeMap[v])throw new Error('Schema must contain uniquely named types but contains multiple types named "'.concat(v,'".'))
if(this._typeMap[v]=f,U(f))for(var g=0,k=f.getInterfaces();g<k.length;g++){var y=k[g]
if(U(y)){var b=this._implementationsMap[y.name]
void 0===b&&(b=this._implementationsMap[y.name]={objects:[],interfaces:[]}),b.interfaces.push(f)}}else if(F(f))for(var A=0,M=f.getInterfaces();A<M.length;A++){var T=M[A]
if(U(T)){var w=this._implementationsMap[T.name]
void 0===w&&(w=this._implementationsMap[T.name]={objects:[],interfaces:[]}),w.objects.push(f)}}}}}var a,n,i=e.prototype
return i.getQueryType=function(){return this._queryType},i.getMutationType=function(){return this._mutationType},i.getSubscriptionType=function(){return this._subscriptionType},i.getTypeMap=function(){return this._typeMap},i.getType=function(e){return this.getTypeMap()[e]},i.getPossibleTypes=function(e){return Z(e)?e.getTypes():this.getImplementations(e).objects},i.getImplementations=function(e){var a=this._implementationsMap[e.name]
return null!=a?a:{objects:[],interfaces:[]}},i.isPossibleType=function(e,a){return this.isSubType(e,a)},i.isSubType=function(e,a){var n=this._subTypeMap[e.name]
if(void 0===n){if(n=Object.create(null),Z(e))for(var i=0,r=e.getTypes();i<r.length;i++)n[r[i].name]=!0
else{for(var t=this.getImplementations(e),o=0,s=t.objects;o<s.length;o++)n[s[o].name]=!0
for(var l=0,u=t.interfaces;l<u.length;l++)n[u[l].name]=!0}this._subTypeMap[e.name]=n}return void 0!==n[a.name]},i.getDirectives=function(){return this._directives},i.getDirective=function(e){return c(this.getDirectives(),(function(a){return a.name===e}))},i.toConfig=function(){var e
return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:d(this.getTypeMap()),directives:this.getDirectives().slice(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:null!==(e=this.extensionASTNodes)&&void 0!==e?e:[],assumeValid:void 0!==this.__validationErrors}},a=e,(n=[{key:k.YF,get:function(){return"GraphQLSchema"}}])&&function(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}(a.prototype,n),e}()
function Ka(e,a){var n=Me(e)
if(!a.has(n))if(a.add(n),Z(n))for(var i=0,r=n.getTypes();i<r.length;i++)Ka(r[i],a)
else if(F(n)||U(n)){for(var t=0,o=n.getInterfaces();t<o.length;t++)Ka(o[t],a)
for(var s=0,l=d(n.getFields());s<l.length;s++){var u=l[s]
Ka(u.type,a)
for(var c=0,h=u.args;c<h.length;c++)Ka(h[c].type,a)}}else if($(n))for(var p=0,m=d(n.getFields());p<m.length;p++)Ka(m[p].type,a)
return a}function Ra(e){if(xa(e),e.__validationErrors)return e.__validationErrors
var a=new Oa(e)
!function(e){var a,n=e.schema,i=n.getQueryType()
i?F(i)||e.reportError("Query root type must be Object type, it cannot be ".concat((0,h.Z)(i),"."),null!==(a=Ia(n,"query"))&&void 0!==a?a:i.astNode):e.reportError("Query root type must be provided.",n.astNode)
var r,t=n.getMutationType()
t&&!F(t)&&e.reportError("Mutation root type must be Object type if provided, it cannot be "+"".concat((0,h.Z)(t),"."),null!==(r=Ia(n,"mutation"))&&void 0!==r?r:t.astNode)
var o,s=n.getSubscriptionType()
s&&!F(s)&&e.reportError("Subscription root type must be Object type if provided, it cannot be "+"".concat((0,h.Z)(s),"."),null!==(o=Ia(n,"subscription"))&&void 0!==o?o:s.astNode)}(a),function(e){for(var a=0,n=e.schema.getDirectives();a<n.length;a++){var i=n[a]
if(Ma(i)){Va(e,i)
for(var r=0,t=i.args;r<t.length;r++){var o,s=t[r]
Va(e,s),re(s.type)||e.reportError("The type of @".concat(i.name,"(").concat(s.name,":) must be Input Type ")+"but got: ".concat((0,h.Z)(s.type),"."),s.astNode),De(s)&&null!=s.deprecationReason&&e.reportError("Required argument @".concat(i.name,"(").concat(s.name,":) cannot be deprecated."),[Xa(s.astNode),null===(o=s.astNode)||void 0===o?void 0:o.type])}}else e.reportError("Expected directive but got: ".concat((0,h.Z)(i),"."),null==i?void 0:i.astNode)}}(a),function(e){for(var a=function(e){var a=Object.create(null),n=[],i=Object.create(null)
return function r(t){if(!a[t.name]){a[t.name]=!0,i[t.name]=n.length
for(var o=d(t.getFields()),s=0;s<o.length;s++){var l=o[s]
if(ne(l.type)&&$(l.type.ofType)){var u=l.type.ofType,c=i[u.name]
if(n.push(l),void 0===c)r(u)
else{var h=n.slice(c),p=h.map((function(e){return e.name})).join(".")
e.reportError('Cannot reference Input Object "'.concat(u.name,'" within itself through a series of non-null fields: "').concat(p,'".'),h.map((function(e){return e.astNode})))}n.pop()}}i[t.name]=void 0}}}(e),n=e.schema.getTypeMap(),i=0,r=d(n);i<r.length;i++){var t=r[i]
Se(t)?(Aa(t)||Va(e,t),F(t)||U(t)?(Ga(e,t),Ha(e,t)):Z(t)?Ua(e,t):Q(t)?Wa(e,t):$(t)&&(Za(e,t),a(t))):e.reportError("Expected GraphQL named type but got: ".concat((0,h.Z)(t),"."),t.astNode)}}(a)
var n=a.getErrors()
return e.__validationErrors=n,n}function za(e){var a=Ra(e)
if(0!==a.length)throw new Error(a.map((function(e){return e.message})).join("\n\n"))}var Oa=function(){function e(e){this._errors=[],this.schema=e}var a=e.prototype
return a.reportError=function(e,a){var n=Array.isArray(a)?a.filter(Boolean):a
this.addError(new l._(e,n))},a.addError=function(e){this._errors.push(e)},a.getErrors=function(){return this._errors},e}()
function Ia(e,a){for(var n=Qa(e,(function(e){return e.operationTypes})),i=0;i<n.length;i++){var r=n[i]
if(r.operation===a)return r.type}}function Va(e,a){var n=v(a.name)
n&&e.addError(p(n,a.astNode))}function Ga(e,a){var n=d(a.getFields())
0===n.length&&e.reportError("Type ".concat(a.name," must define one or more fields."),qa(a))
for(var i=0;i<n.length;i++){var r,t=n[i]
Va(e,t),oe(t.type)||e.reportError("The type of ".concat(a.name,".").concat(t.name," must be Output Type ")+"but got: ".concat((0,h.Z)(t.type),"."),null===(r=t.astNode)||void 0===r?void 0:r.type)
for(var o=0,s=t.args;o<s.length;o++){var l,u,c=s[o],p=c.name
Va(e,c),re(c.type)||e.reportError("The type of ".concat(a.name,".").concat(t.name,"(").concat(p,":) must be Input ")+"Type but got: ".concat((0,h.Z)(c.type),"."),null===(l=c.astNode)||void 0===l?void 0:l.type),De(c)&&null!=c.deprecationReason&&e.reportError("Required argument ".concat(a.name,".").concat(t.name,"(").concat(p,":) cannot be deprecated."),[Xa(c.astNode),null===(u=c.astNode)||void 0===u?void 0:u.type])}}}function Ha(e,a){for(var n=Object.create(null),i=0,r=a.getInterfaces();i<r.length;i++){var t=r[i]
U(t)?a!==t?n[t.name]?e.reportError("Type ".concat(a.name," can only implement ").concat(t.name," once."),Ya(a,t)):(n[t.name]=!0,Ja(e,a,t),Fa(e,a,t)):e.reportError("Type ".concat(a.name," cannot implement itself because it would create a circular reference."),Ya(a,t)):e.reportError("Type ".concat((0,h.Z)(a)," must only implement Interface types, ")+"it cannot implement ".concat((0,h.Z)(t),"."),Ya(a,t))}}function Fa(e,a,n){for(var i=a.getFields(),r=0,t=d(n.getFields());r<t.length;r++){var o=t[r],s=o.name,l=i[s]
if(l){var u,p
He(e.schema,l.type,o.type)||e.reportError("Interface field ".concat(n.name,".").concat(s," expects type ")+"".concat((0,h.Z)(o.type)," but ").concat(a.name,".").concat(s," ")+"is type ".concat((0,h.Z)(l.type),"."),[null===(u=o.astNode)||void 0===u?void 0:u.type,null===(p=l.astNode)||void 0===p?void 0:p.type])
for(var m=function(i,r){var t,o,u=r[i],d=u.name,p=c(l.args,(function(e){return e.name===d}))
if(!p)return e.reportError("Interface field argument ".concat(n.name,".").concat(s,"(").concat(d,":) expected but ").concat(a.name,".").concat(s," does not provide it."),[u.astNode,l.astNode]),"continue"
Ge(u.type,p.type)||e.reportError("Interface field argument ".concat(n.name,".").concat(s,"(").concat(d,":) ")+"expects type ".concat((0,h.Z)(u.type)," but ")+"".concat(a.name,".").concat(s,"(").concat(d,":) is type ")+"".concat((0,h.Z)(p.type),"."),[null===(t=u.astNode)||void 0===t?void 0:t.type,null===(o=p.astNode)||void 0===o?void 0:o.type])},f=0,v=o.args;f<v.length;f++)m(f,v)
for(var g=function(i,r){var t=r[i],l=t.name
!c(o.args,(function(e){return e.name===l}))&&De(t)&&e.reportError("Object field ".concat(a.name,".").concat(s," includes required argument ").concat(l," that is missing from the Interface field ").concat(n.name,".").concat(s,"."),[t.astNode,o.astNode])},k=0,y=l.args;k<y.length;k++)g(k,y)}else e.reportError("Interface field ".concat(n.name,".").concat(s," expected but ").concat(a.name," does not provide it."),[o.astNode].concat(qa(a)))}}function Ja(e,a,n){for(var i=a.getInterfaces(),r=0,t=n.getInterfaces();r<t.length;r++){var o=t[r];-1===i.indexOf(o)&&e.reportError(o===a?"Type ".concat(a.name," cannot implement ").concat(n.name," because it would create a circular reference."):"Type ".concat(a.name," must implement ").concat(o.name," because it is implemented by ").concat(n.name,"."),[].concat(Ya(n,o),Ya(a,n)))}}function Ua(e,a){var n=a.getTypes()
0===n.length&&e.reportError("Union type ".concat(a.name," must define one or more member types."),qa(a))
for(var i=Object.create(null),r=0;r<n.length;r++){var t=n[r]
i[t.name]?e.reportError("Union type ".concat(a.name," can only include type ").concat(t.name," once."),$a(a,t.name)):(i[t.name]=!0,F(t)||e.reportError("Union type ".concat(a.name," can only include Object types, ")+"it cannot include ".concat((0,h.Z)(t),"."),$a(a,String(t))))}}function Wa(e,a){var n=a.getValues()
0===n.length&&e.reportError("Enum type ".concat(a.name," must define one or more values."),qa(a))
for(var i=0;i<n.length;i++){var r=n[i],t=r.name
Va(e,r),"true"!==t&&"false"!==t&&"null"!==t||e.reportError("Enum type ".concat(a.name," cannot include value: ").concat(t,"."),r.astNode)}}function Za(e,a){var n=d(a.getFields())
0===n.length&&e.reportError("Input Object type ".concat(a.name," must define one or more fields."),qa(a))
for(var i=0;i<n.length;i++){var r,t,o=n[i]
Va(e,o),re(o.type)||e.reportError("The type of ".concat(a.name,".").concat(o.name," must be Input Type ")+"but got: ".concat((0,h.Z)(o.type),"."),null===(r=o.astNode)||void 0===r?void 0:r.type),Ve(o)&&null!=o.deprecationReason&&e.reportError("Required input field ".concat(a.name,".").concat(o.name," cannot be deprecated."),[Xa(o.astNode),null===(t=o.astNode)||void 0===t?void 0:t.type])}}function qa(e){var a=e.astNode,n=e.extensionASTNodes
return a?n?[a].concat(n):[a]:null!=n?n:[]}function Qa(e,a){for(var n=[],i=0,r=qa(e);i<r.length;i++){var t,o=r[i]
n=n.concat(null!==(t=a(o))&&void 0!==t?t:[])}return n}function Ya(e,a){return Qa(e,(function(e){return e.interfaces})).filter((function(e){return e.name.value===a.name}))}function $a(e,a){return Qa(e,(function(e){return e.types})).filter((function(e){return e.name.value===a}))}function Xa(e){var a
return null==e||null===(a=e.directives)||void 0===a?void 0:a.find((function(e){return e.name.value===Na.name}))}var en=n(5132)
function an(e,a){var n
return a.kind===x.h.LIST_TYPE?(n=an(e,a.type))&&new me(n):a.kind===x.h.NON_NULL_TYPE?(n=an(e,a.type))&&new fe(n):a.kind===x.h.NAMED_TYPE?e.getType(a.name.value):void(0,K.Z)(0,"Unexpected type node: "+(0,h.Z)(a))}var nn=function(){function e(e,a,n){this._schema=e,this._typeStack=[],this._parentTypeStack=[],this._inputTypeStack=[],this._fieldDefStack=[],this._defaultValueStack=[],this._directive=null,this._argument=null,this._enumValue=null,this._getFieldDef=null!=a?a:rn,n&&(re(n)&&this._inputTypeStack.push(n),ce(n)&&this._parentTypeStack.push(n),oe(n)&&this._typeStack.push(n))}var a=e.prototype
return a.getType=function(){if(this._typeStack.length>0)return this._typeStack[this._typeStack.length-1]},a.getParentType=function(){if(this._parentTypeStack.length>0)return this._parentTypeStack[this._parentTypeStack.length-1]},a.getInputType=function(){if(this._inputTypeStack.length>0)return this._inputTypeStack[this._inputTypeStack.length-1]},a.getParentInputType=function(){if(this._inputTypeStack.length>1)return this._inputTypeStack[this._inputTypeStack.length-2]},a.getFieldDef=function(){if(this._fieldDefStack.length>0)return this._fieldDefStack[this._fieldDefStack.length-1]},a.getDefaultValue=function(){if(this._defaultValueStack.length>0)return this._defaultValueStack[this._defaultValueStack.length-1]},a.getDirective=function(){return this._directive},a.getArgument=function(){return this._argument},a.getEnumValue=function(){return this._enumValue},a.enter=function(e){var a=this._schema
switch(e.kind){case x.h.SELECTION_SET:var n=Me(this.getType())
this._parentTypeStack.push(ce(n)?n:void 0)
break
case x.h.FIELD:var i,r,t=this.getParentType()
t&&(i=this._getFieldDef(a,t,e))&&(r=i.type),this._fieldDefStack.push(i),this._typeStack.push(oe(r)?r:void 0)
break
case x.h.DIRECTIVE:this._directive=a.getDirective(e.name.value)
break
case x.h.OPERATION_DEFINITION:var o
switch(e.operation){case"query":o=a.getQueryType()
break
case"mutation":o=a.getMutationType()
break
case"subscription":o=a.getSubscriptionType()}this._typeStack.push(F(o)?o:void 0)
break
case x.h.INLINE_FRAGMENT:case x.h.FRAGMENT_DEFINITION:var s=e.typeCondition,l=s?an(a,s):Me(this.getType())
this._typeStack.push(oe(l)?l:void 0)
break
case x.h.VARIABLE_DEFINITION:var u=an(a,e.type)
this._inputTypeStack.push(re(u)?u:void 0)
break
case x.h.ARGUMENT:var d,h,p,m=null!==(d=this.getDirective())&&void 0!==d?d:this.getFieldDef()
m&&(h=c(m.args,(function(a){return a.name===e.name.value})))&&(p=h.type),this._argument=h,this._defaultValueStack.push(h?h.defaultValue:void 0),this._inputTypeStack.push(re(p)?p:void 0)
break
case x.h.LIST:var f=be(this.getInputType()),v=ee(f)?f.ofType:f
this._defaultValueStack.push(void 0),this._inputTypeStack.push(re(v)?v:void 0)
break
case x.h.OBJECT_FIELD:var g,k,y=Me(this.getInputType())
$(y)&&(k=y.getFields()[e.name.value])&&(g=k.type),this._defaultValueStack.push(k?k.defaultValue:void 0),this._inputTypeStack.push(re(g)?g:void 0)
break
case x.h.ENUM:var b,S=Me(this.getInputType())
Q(S)&&(b=S.getValue(e.value)),this._enumValue=b}},a.leave=function(e){switch(e.kind){case x.h.SELECTION_SET:this._parentTypeStack.pop()
break
case x.h.FIELD:this._fieldDefStack.pop(),this._typeStack.pop()
break
case x.h.DIRECTIVE:this._directive=null
break
case x.h.OPERATION_DEFINITION:case x.h.INLINE_FRAGMENT:case x.h.FRAGMENT_DEFINITION:this._typeStack.pop()
break
case x.h.VARIABLE_DEFINITION:this._inputTypeStack.pop()
break
case x.h.ARGUMENT:this._argument=null,this._defaultValueStack.pop(),this._inputTypeStack.pop()
break
case x.h.LIST:case x.h.OBJECT_FIELD:this._defaultValueStack.pop(),this._inputTypeStack.pop()
break
case x.h.ENUM:this._enumValue=null}},e}()
function rn(e,a,n){var i=n.name.value
return i===ka.name&&e.getQueryType()===a?ka:i===ya.name&&e.getQueryType()===a?ya:i===ba.name&&ce(a)?ba:F(a)||U(a)?a.getFields()[i]:void 0}function tn(e,a){return{enter:function(n){e.enter(n)
var i=(0,u.CK)(a,n.kind,!1)
if(i){var r=i.apply(a,arguments)
return void 0!==r&&(e.leave(n),(0,en.UG)(r)&&e.enter(r)),r}},leave:function(n){var i,r=(0,u.CK)(a,n.kind,!0)
return r&&(i=r.apply(a,arguments)),e.leave(n),i}}}function on(e){return sn(e)||dn(e)||pn(e)}function sn(e){return e.kind===x.h.OPERATION_DEFINITION||e.kind===x.h.FRAGMENT_DEFINITION}function ln(e){return e.kind===x.h.FIELD||e.kind===x.h.FRAGMENT_SPREAD||e.kind===x.h.INLINE_FRAGMENT}function un(e){return e.kind===x.h.VARIABLE||e.kind===x.h.INT||e.kind===x.h.FLOAT||e.kind===x.h.STRING||e.kind===x.h.BOOLEAN||e.kind===x.h.NULL||e.kind===x.h.ENUM||e.kind===x.h.LIST||e.kind===x.h.OBJECT}function cn(e){return e.kind===x.h.NAMED_TYPE||e.kind===x.h.LIST_TYPE||e.kind===x.h.NON_NULL_TYPE}function dn(e){return e.kind===x.h.SCHEMA_DEFINITION||hn(e)||e.kind===x.h.DIRECTIVE_DEFINITION}function hn(e){return e.kind===x.h.SCALAR_TYPE_DEFINITION||e.kind===x.h.OBJECT_TYPE_DEFINITION||e.kind===x.h.INTERFACE_TYPE_DEFINITION||e.kind===x.h.UNION_TYPE_DEFINITION||e.kind===x.h.ENUM_TYPE_DEFINITION||e.kind===x.h.INPUT_OBJECT_TYPE_DEFINITION}function pn(e){return e.kind===x.h.SCHEMA_EXTENSION||mn(e)}function mn(e){return e.kind===x.h.SCALAR_TYPE_EXTENSION||e.kind===x.h.OBJECT_TYPE_EXTENSION||e.kind===x.h.INTERFACE_TYPE_EXTENSION||e.kind===x.h.UNION_TYPE_EXTENSION||e.kind===x.h.ENUM_TYPE_EXTENSION||e.kind===x.h.INPUT_OBJECT_TYPE_EXTENSION}function fn(e){return{Document:function(a){for(var n=0,i=a.definitions;n<i.length;n++){var r=i[n]
if(!sn(r)){var t=r.kind===x.h.SCHEMA_DEFINITION||r.kind===x.h.SCHEMA_EXTENSION?"schema":'"'+r.name.value+'"'
e.reportError(new l._("The ".concat(t," definition is not executable."),r))}}return!1}}}function vn(e){var a=Object.create(null)
return{OperationDefinition:function(n){var i=n.name
return i&&(a[i.value]?e.reportError(new l._('There can be only one operation named "'.concat(i.value,'".'),[a[i.value],i])):a[i.value]=i),!1},FragmentDefinition:function(){return!1}}}function gn(e){var a=0
return{Document:function(e){a=e.definitions.filter((function(e){return e.kind===x.h.OPERATION_DEFINITION})).length},OperationDefinition:function(n){!n.name&&a>1&&e.reportError(new l._("This anonymous operation must be the only defined operation.",n))}}}function kn(e){return{OperationDefinition:function(a){"subscription"===a.operation&&1!==a.selectionSet.selections.length&&e.reportError(new l._(a.name?'Subscription "'.concat(a.name.value,'" must select only one top level field.'):"Anonymous Subscription must select only one top level field.",a.selectionSet.selections.slice(1)))}}}function yn(e){for(var a=e.getSchema(),n=a?a.getTypeMap():Object.create(null),i=Object.create(null),r=0,t=e.getDocument().definitions;r<t.length;r++){var o=t[r]
hn(o)&&(i[o.name.value]=!0)}var s=Object.keys(n).concat(Object.keys(i))
return{NamedType:function(a,r,t,o,u){var c,d=a.name.value
if(!n[d]&&!i[d]){var h,p=null!==(h=u[2])&&void 0!==h?h:t,m=null!=p&&(c=p,!Array.isArray(c)&&(dn(c)||pn(c)))
if(m&&function(e){return-1!==bn.indexOf(e)}(d))return
var f=P(d,m?bn.concat(s):s)
e.reportError(new l._('Unknown type "'.concat(d,'".')+T(f),a))}}}}var bn=[].concat(ta,Sa).map((function(e){return e.name}))
function Sn(e){return{InlineFragment:function(a){var n=a.typeCondition
if(n){var i=an(e.getSchema(),n)
if(i&&!ce(i)){var r=(0,C.S)(n)
e.reportError(new l._('Fragment cannot condition on non composite type "'.concat(r,'".'),n))}}},FragmentDefinition:function(a){var n=an(e.getSchema(),a.typeCondition)
if(n&&!ce(n)){var i=(0,C.S)(a.typeCondition)
e.reportError(new l._('Fragment "'.concat(a.name.value,'" cannot condition on non composite type "').concat(i,'".'),a.typeCondition))}}}}function An(e){return{VariableDefinition:function(a){var n=an(e.getSchema(),a.type)
if(n&&!re(n)){var i=a.variable.name.value,r=(0,C.S)(a.type)
e.reportError(new l._('Variable "$'.concat(i,'" cannot be non-input type "').concat(r,'".'),a.type))}}}}function Mn(e){return{Field:function(a){var n=e.getType(),i=a.selectionSet
if(n)if(le(Me(n))){if(i){var r=a.name.value,t=(0,h.Z)(n)
e.reportError(new l._('Field "'.concat(r,'" must not have a selection since type "').concat(t,'" has no subfields.'),i))}}else if(!i){var o=a.name.value,s=(0,h.Z)(n)
e.reportError(new l._('Field "'.concat(o,'" of type "').concat(s,'" must have a selection of subfields. Did you mean "').concat(o,' { ... }"?'),a))}}}}function Tn(e){return{Field:function(a){var n=e.getParentType()
if(n&&!e.getFieldDef()){var i=e.getSchema(),r=a.name.value,t=T("to use an inline fragment on",function(e,a,n){if(!he(a))return[]
for(var i=new Set,r=Object.create(null),t=0,o=e.getPossibleTypes(a);t<o.length;t++){var s=o[t]
if(s.getFields()[n]){i.add(s),r[s.name]=1
for(var l=0,u=s.getInterfaces();l<u.length;l++){var c,d=u[l]
d.getFields()[n]&&(i.add(d),r[d.name]=(null!==(c=r[d.name])&&void 0!==c?c:0)+1)}}}return Je(i).sort((function(a,n){var i=r[n.name]-r[a.name]
return 0!==i?i:U(a)&&e.isSubType(a,n)?-1:U(n)&&e.isSubType(n,a)?1:E(a.name,n.name)})).map((function(e){return e.name}))}(i,n,r))
""===t&&(t=T(function(e,a){return F(e)||U(e)?P(a,Object.keys(e.getFields())):[]}(n,r))),e.reportError(new l._('Cannot query field "'.concat(r,'" on type "').concat(n.name,'".')+t,a))}}}}function _n(e){var a=Object.create(null)
return{OperationDefinition:function(){return!1},FragmentDefinition:function(n){var i=n.name.value
return a[i]?e.reportError(new l._('There can be only one fragment named "'.concat(i,'".'),[a[i],n.name])):a[i]=n.name,!1}}}function wn(e){return{FragmentSpread:function(a){var n=a.name.value
e.getFragment(n)||e.reportError(new l._('Unknown fragment "'.concat(n,'".'),a.name))}}}function jn(e){var a=[],n=[]
return{OperationDefinition:function(e){return a.push(e),!1},FragmentDefinition:function(e){return n.push(e),!1},Document:{leave:function(){for(var i=Object.create(null),r=0;r<a.length;r++)for(var t=a[r],o=0,s=e.getRecursivelyReferencedFragments(t);o<s.length;o++)i[s[o].name.value]=!0
for(var u=0;u<n.length;u++){var c=n[u],d=c.name.value
!0!==i[d]&&e.reportError(new l._('Fragment "'.concat(d,'" is never used.'),c))}}}}}function En(e){return{InlineFragment:function(a){var n=e.getType(),i=e.getParentType()
if(ce(n)&&ce(i)&&!Fe(e.getSchema(),n,i)){var r=(0,h.Z)(i),t=(0,h.Z)(n)
e.reportError(new l._('Fragment cannot be spread here as objects of type "'.concat(r,'" can never be of type "').concat(t,'".'),a))}},FragmentSpread:function(a){var n=a.name.value,i=function(e,a){var n=e.getFragment(a)
if(n){var i=an(e.getSchema(),n.typeCondition)
if(ce(i))return i}}(e,n),r=e.getParentType()
if(i&&r&&!Fe(e.getSchema(),i,r)){var t=(0,h.Z)(r),o=(0,h.Z)(i)
e.reportError(new l._('Fragment "'.concat(n,'" cannot be spread here as objects of type "').concat(t,'" can never be of type "').concat(o,'".'),a))}}}}function Nn(e){var a=Object.create(null),n=[],i=Object.create(null)
return{OperationDefinition:function(){return!1},FragmentDefinition:function(e){return r(e),!1}}
function r(t){if(!a[t.name.value]){var o=t.name.value
a[o]=!0
var s=e.getFragmentSpreads(t.selectionSet)
if(0!==s.length){i[o]=n.length
for(var u=0;u<s.length;u++){var c=s[u],d=c.name.value,h=i[d]
if(n.push(c),void 0===h){var p=e.getFragment(d)
p&&r(p)}else{var m=n.slice(h),f=m.slice(0,-1).map((function(e){return'"'+e.name.value+'"'})).join(", ")
e.reportError(new l._('Cannot spread fragment "'.concat(d,'" within itself')+(""!==f?" via ".concat(f,"."):"."),m))}n.pop()}i[o]=void 0}}}}function Bn(e){var a=Object.create(null)
return{OperationDefinition:function(){a=Object.create(null)},VariableDefinition:function(n){var i=n.variable.name.value
a[i]?e.reportError(new l._('There can be only one variable named "$'.concat(i,'".'),[a[i],n.variable.name])):a[i]=n.variable.name}}}function Pn(e){var a=Object.create(null)
return{OperationDefinition:{enter:function(){a=Object.create(null)},leave:function(n){for(var i=e.getRecursiveVariableUsages(n),r=0;r<i.length;r++){var t=i[r].node,o=t.name.value
!0!==a[o]&&e.reportError(new l._(n.name?'Variable "$'.concat(o,'" is not defined by operation "').concat(n.name.value,'".'):'Variable "$'.concat(o,'" is not defined.'),[t,n]))}}},VariableDefinition:function(e){a[e.variable.name.value]=!0}}}function Ln(e){var a=[]
return{OperationDefinition:{enter:function(){a=[]},leave:function(n){for(var i=Object.create(null),r=e.getRecursiveVariableUsages(n),t=0;t<r.length;t++)i[r[t].node.name.value]=!0
for(var o=0,s=a;o<s.length;o++){var u=s[o],c=u.variable.name.value
!0!==i[c]&&e.reportError(new l._(n.name?'Variable "$'.concat(c,'" is never used in operation "').concat(n.name.value,'".'):'Variable "$'.concat(c,'" is never used.'),u))}}},VariableDefinition:function(e){a.push(e)}}}function Dn(e){for(var a=Object.create(null),n=e.getSchema(),i=n?n.getDirectives():Pa,r=0;r<i.length;r++){var t=i[r]
a[t.name]=t.locations}for(var o=e.getDocument().definitions,s=0;s<o.length;s++){var u=o[s]
u.kind===x.h.DIRECTIVE_DEFINITION&&(a[u.name.value]=u.locations.map((function(e){return e.value})))}return{Directive:function(n,i,r,t,o){var s=n.name.value,u=a[s]
if(u){var c=function(e){var a=e[e.length-1]
switch(!Array.isArray(a)||(0,K.Z)(0),a.kind){case x.h.OPERATION_DEFINITION:return function(e){switch(e){case"query":return Ue.B.QUERY
case"mutation":return Ue.B.MUTATION
case"subscription":return Ue.B.SUBSCRIPTION}(0,K.Z)(0,"Unexpected operation: "+(0,h.Z)(e))}(a.operation)
case x.h.FIELD:return Ue.B.FIELD
case x.h.FRAGMENT_SPREAD:return Ue.B.FRAGMENT_SPREAD
case x.h.INLINE_FRAGMENT:return Ue.B.INLINE_FRAGMENT
case x.h.FRAGMENT_DEFINITION:return Ue.B.FRAGMENT_DEFINITION
case x.h.VARIABLE_DEFINITION:return Ue.B.VARIABLE_DEFINITION
case x.h.SCHEMA_DEFINITION:case x.h.SCHEMA_EXTENSION:return Ue.B.SCHEMA
case x.h.SCALAR_TYPE_DEFINITION:case x.h.SCALAR_TYPE_EXTENSION:return Ue.B.SCALAR
case x.h.OBJECT_TYPE_DEFINITION:case x.h.OBJECT_TYPE_EXTENSION:return Ue.B.OBJECT
case x.h.FIELD_DEFINITION:return Ue.B.FIELD_DEFINITION
case x.h.INTERFACE_TYPE_DEFINITION:case x.h.INTERFACE_TYPE_EXTENSION:return Ue.B.INTERFACE
case x.h.UNION_TYPE_DEFINITION:case x.h.UNION_TYPE_EXTENSION:return Ue.B.UNION
case x.h.ENUM_TYPE_DEFINITION:case x.h.ENUM_TYPE_EXTENSION:return Ue.B.ENUM
case x.h.ENUM_VALUE_DEFINITION:return Ue.B.ENUM_VALUE
case x.h.INPUT_OBJECT_TYPE_DEFINITION:case x.h.INPUT_OBJECT_TYPE_EXTENSION:return Ue.B.INPUT_OBJECT
case x.h.INPUT_VALUE_DEFINITION:return e[e.length-3].kind===x.h.INPUT_OBJECT_TYPE_DEFINITION?Ue.B.INPUT_FIELD_DEFINITION:Ue.B.ARGUMENT_DEFINITION}}(o)
c&&-1===u.indexOf(c)&&e.reportError(new l._('Directive "@'.concat(s,'" may not be used on ').concat(c,"."),n))}else e.reportError(new l._('Unknown directive "@'.concat(s,'".'),n))}}}function xn(e){for(var a=Object.create(null),n=e.getSchema(),i=n?n.getDirectives():Pa,r=0;r<i.length;r++){var t=i[r]
a[t.name]=!t.isRepeatable}for(var o=e.getDocument().definitions,s=0;s<o.length;s++){var u=o[s]
u.kind===x.h.DIRECTIVE_DEFINITION&&(a[u.name.value]=!u.repeatable)}var c=Object.create(null),d=Object.create(null)
return{enter:function(n){if(null!=n.directives){var i
if(n.kind===x.h.SCHEMA_DEFINITION||n.kind===x.h.SCHEMA_EXTENSION)i=c
else if(hn(n)||mn(n)){var r=n.name.value
void 0===(i=d[r])&&(d[r]=i=Object.create(null))}else i=Object.create(null)
for(var t=0,o=n.directives;t<o.length;t++){var s=o[t],u=s.name.value
a[u]&&(i[u]?e.reportError(new l._('The directive "@'.concat(u,'" can only be used once at this location.'),[i[u],s])):i[u]=s)}}}}}function Cn(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function Kn(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?Cn(Object(n),!0).forEach((function(a){Rn(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Cn(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function Rn(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function zn(e){return Kn(Kn({},On(e)),{},{Argument:function(a){var n=e.getArgument(),i=e.getFieldDef(),r=e.getParentType()
if(!n&&i&&r){var t=a.name.value,o=P(t,i.args.map((function(e){return e.name})))
e.reportError(new l._('Unknown argument "'.concat(t,'" on field "').concat(r.name,".").concat(i.name,'".')+T(o),a))}}})}function On(e){for(var a=Object.create(null),n=e.getSchema(),i=n?n.getDirectives():Pa,r=0;r<i.length;r++){var t=i[r]
a[t.name]=t.args.map((function(e){return e.name}))}for(var o=e.getDocument().definitions,s=0;s<o.length;s++){var u=o[s]
if(u.kind===x.h.DIRECTIVE_DEFINITION){var c,d=null!==(c=u.arguments)&&void 0!==c?c:[]
a[u.name.value]=d.map((function(e){return e.name.value}))}}return{Directive:function(n){var i=n.name.value,r=a[i]
if(n.arguments&&r)for(var t=0,o=n.arguments;t<o.length;t++){var s=o[t],u=s.name.value
if(-1===r.indexOf(u)){var c=P(u,r)
e.reportError(new l._('Unknown argument "'.concat(u,'" on directive "@').concat(i,'".')+T(c),s))}}return!1}}}function In(e){var a=Object.create(null)
return{Field:function(){a=Object.create(null)},Directive:function(){a=Object.create(null)},Argument:function(n){var i=n.name.value
return a[i]?e.reportError(new l._('There can be only one argument named "'.concat(i,'".'),[a[i],n.name])):a[i]=n.name,!1}}}function Vn(e){return{ListValue:function(a){if(!ee(be(e.getParentInputType())))return Gn(e,a),!1},ObjectValue:function(a){var n=Me(e.getInputType())
if(!$(n))return Gn(e,a),!1
for(var i=y(a.fields,(function(e){return e.name.value})),r=0,t=d(n.getFields());r<t.length;r++){var o=t[r]
if(!i[o.name]&&Ve(o)){var s=(0,h.Z)(o.type)
e.reportError(new l._('Field "'.concat(n.name,".").concat(o.name,'" of required type "').concat(s,'" was not provided.'),a))}}},ObjectField:function(a){var n=Me(e.getParentInputType())
if(!e.getInputType()&&$(n)){var i=P(a.name.value,Object.keys(n.getFields()))
e.reportError(new l._('Field "'.concat(a.name.value,'" is not defined by type "').concat(n.name,'".')+T(i),a))}},NullValue:function(a){var n=e.getInputType()
ne(n)&&e.reportError(new l._('Expected value of type "'.concat((0,h.Z)(n),'", found ').concat((0,C.S)(a),"."),a))},EnumValue:function(a){return Gn(e,a)},IntValue:function(a){return Gn(e,a)},FloatValue:function(a){return Gn(e,a)},StringValue:function(a){return Gn(e,a)},BooleanValue:function(a){return Gn(e,a)}}}function Gn(e,a){var n=e.getInputType()
if(n){var i=Me(n)
if(le(i))try{if(void 0===i.parseLiteral(a,void 0)){var r=(0,h.Z)(n)
e.reportError(new l._('Expected value of type "'.concat(r,'", found ').concat((0,C.S)(a),"."),a))}}catch(i){var t=(0,h.Z)(n)
i instanceof l._?e.reportError(i):e.reportError(new l._('Expected value of type "'.concat(t,'", found ').concat((0,C.S)(a),"; ")+i.message,a,void 0,void 0,void 0,i))}else{var o=(0,h.Z)(n)
e.reportError(new l._('Expected value of type "'.concat(o,'", found ').concat((0,C.S)(a),"."),a))}}}function Hn(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function Fn(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?Hn(Object(n),!0).forEach((function(a){Jn(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Hn(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function Jn(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function Un(e){return Fn(Fn({},Wn(e)),{},{Field:{leave:function(a){var n,i=e.getFieldDef()
if(!i)return!1
for(var r=y(null!==(n=a.arguments)&&void 0!==n?n:[],(function(e){return e.name.value})),t=0,o=i.args;t<o.length;t++){var s=o[t]
if(!r[s.name]&&De(s)){var u=(0,h.Z)(s.type)
e.reportError(new l._('Field "'.concat(i.name,'" argument "').concat(s.name,'" of type "').concat(u,'" is required, but it was not provided.'),a))}}}}})}function Wn(e){for(var a=Object.create(null),n=e.getSchema(),i=n?n.getDirectives():Pa,r=0;r<i.length;r++){var t=i[r]
a[t.name]=y(t.args.filter(De),(function(e){return e.name}))}for(var o=e.getDocument().definitions,s=0;s<o.length;s++){var u=o[s]
if(u.kind===x.h.DIRECTIVE_DEFINITION){var c,d=null!==(c=u.arguments)&&void 0!==c?c:[]
a[u.name.value]=y(d.filter(Zn),(function(e){return e.name.value}))}}return{Directive:{leave:function(n){var i=n.name.value,r=a[i]
if(r)for(var t,o=y(null!==(t=n.arguments)&&void 0!==t?t:[],(function(e){return e.name.value})),s=0,u=Object.keys(r);s<u.length;s++){var c=u[s]
if(!o[c]){var d=r[c].type,p=I(d)?(0,h.Z)(d):(0,C.S)(d)
e.reportError(new l._('Directive "@'.concat(i,'" argument "').concat(c,'" of type "').concat(p,'" is required, but it was not provided.'),n))}}}}}}function Zn(e){return e.type.kind===x.h.NON_NULL_TYPE&&null==e.defaultValue}function qn(e){var a=Object.create(null)
return{OperationDefinition:{enter:function(){a=Object.create(null)},leave:function(n){for(var i=e.getRecursiveVariableUsages(n),r=0;r<i.length;r++){var t=i[r],o=t.node,s=t.type,u=t.defaultValue,c=o.name.value,d=a[c]
if(d&&s){var p=e.getSchema(),m=an(p,d.type)
if(m&&!Qn(p,m,d.defaultValue,s,u)){var f=(0,h.Z)(m),v=(0,h.Z)(s)
e.reportError(new l._('Variable "$'.concat(c,'" of type "').concat(f,'" used in position expecting type "').concat(v,'".'),[d,o]))}}}}},VariableDefinition:function(e){a[e.variable.name.value]=e}}}function Qn(e,a,n,i,r){return ne(i)&&!ne(a)?(null!=n&&n.kind!==x.h.NULL||void 0!==r)&&He(e,a,i.ofType):He(e,a,i)}function Yn(e){return Array.isArray(e)?e.map((function(e){var a=e[0],n=e[1]
return'subfields "'.concat(a,'" conflict because ')+Yn(n)})).join(" and "):e}function $n(e){var a=new li,n=new Map
return{SelectionSet:function(i){for(var r=function(e,a,n,i,r){var t=[],o=ri(e,a,i,r),s=o[0],l=o[1]
if(function(e,a,n,i,r){for(var t=0,o=g(r);t<o.length;t++){var s=o[t],l=s[0],u=s[1]
if(u.length>1)for(var c=0;c<u.length;c++)for(var d=c+1;d<u.length;d++){var h=ni(e,n,i,!1,l,u[c],u[d])
h&&a.push(h)}}}(e,t,a,n,s),0!==l.length)for(var u=0;u<l.length;u++){Xn(e,t,a,n,!1,s,l[u])
for(var c=u+1;c<l.length;c++)ei(e,t,a,n,!1,l[u],l[c])}return t}(e,n,a,e.getParentType(),i),t=0;t<r.length;t++){var o=r[t],s=o[0],u=s[0],c=s[1],d=o[1],h=o[2],p=Yn(c)
e.reportError(new l._('Fields "'.concat(u,'" conflict because ').concat(p,". Use different aliases on the fields to fetch both if this was intentional."),d.concat(h)))}}}}function Xn(e,a,n,i,r,t,o){var s=e.getFragment(o)
if(s){var l=ti(e,n,s),u=l[0],c=l[1]
if(t!==u){ai(e,a,n,i,r,t,u)
for(var d=0;d<c.length;d++)Xn(e,a,n,i,r,t,c[d])}}}function ei(e,a,n,i,r,t,o){if(t!==o&&!i.has(t,o,r)){i.add(t,o,r)
var s=e.getFragment(t),l=e.getFragment(o)
if(s&&l){var u=ti(e,n,s),c=u[0],d=u[1],h=ti(e,n,l),p=h[0],m=h[1]
ai(e,a,n,i,r,c,p)
for(var f=0;f<m.length;f++)ei(e,a,n,i,r,t,m[f])
for(var v=0;v<d.length;v++)ei(e,a,n,i,r,d[v],o)}}}function ai(e,a,n,i,r,t,o){for(var s=0,l=Object.keys(t);s<l.length;s++){var u=l[s],c=o[u]
if(c)for(var d=t[u],h=0;h<d.length;h++)for(var p=0;p<c.length;p++){var m=ni(e,n,i,r,u,d[h],c[p])
m&&a.push(m)}}}function ni(e,a,n,i,r,t,o){var s,l,u=t[0],d=t[1],p=t[2],m=o[0],f=o[1],v=o[2],g=i||u!==m&&F(u)&&F(m)
if(!g){var k,y,b=d.name.value,S=f.name.value
if(b!==S)return[[r,'"'.concat(b,'" and "').concat(S,'" are different fields')],[d],[f]]
if(s=null!==(k=d.arguments)&&void 0!==k?k:[],l=null!==(y=f.arguments)&&void 0!==y?y:[],s.length!==l.length||!s.every((function(e){var a,n,i=c(l,(function(a){return a.name.value===e.name.value}))
return!!i&&(a=e.value,n=i.value,(0,C.S)(a)===(0,C.S)(n))})))return[[r,"they have differing arguments"],[d],[f]]}var A=null==p?void 0:p.type,M=null==v?void 0:v.type
if(A&&M&&ii(A,M))return[[r,'they return conflicting types "'.concat((0,h.Z)(A),'" and "').concat((0,h.Z)(M),'"')],[d],[f]]
var T=d.selectionSet,_=f.selectionSet
if(T&&_){var w=function(e,a,n,i,r,t,o,s){var l=[],u=ri(e,a,r,t),c=u[0],d=u[1],h=ri(e,a,o,s),p=h[0],m=h[1]
if(ai(e,l,a,n,i,c,p),0!==m.length)for(var f=0;f<m.length;f++)Xn(e,l,a,n,i,c,m[f])
if(0!==d.length)for(var v=0;v<d.length;v++)Xn(e,l,a,n,i,p,d[v])
for(var g=0;g<d.length;g++)for(var k=0;k<m.length;k++)ei(e,l,a,n,i,d[g],m[k])
return l}(e,a,n,g,Me(A),T,Me(M),_)
return function(e,a,n,i){if(e.length>0)return[[a,e.map((function(e){return e[0]}))],e.reduce((function(e,a){var n=a[1]
return e.concat(n)}),[n]),e.reduce((function(e,a){var n=a[2]
return e.concat(n)}),[i])]}(w,r,d,f)}}function ii(e,a){return ee(e)?!ee(a)||ii(e.ofType,a.ofType):!!ee(a)||(ne(e)?!ne(a)||ii(e.ofType,a.ofType):!!ne(a)||!(!le(e)&&!le(a))&&e!==a)}function ri(e,a,n,i){var r=a.get(i)
if(!r){var t=Object.create(null),o=Object.create(null)
oi(e,n,i,t,o),r=[t,Object.keys(o)],a.set(i,r)}return r}function ti(e,a,n){var i=a.get(n.selectionSet)
if(i)return i
var r=an(e.getSchema(),n.typeCondition)
return ri(e,a,r,n.selectionSet)}function oi(e,a,n,i,r){for(var t=0,o=n.selections;t<o.length;t++){var s=o[t]
switch(s.kind){case x.h.FIELD:var l=s.name.value,u=void 0;(F(a)||U(a))&&(u=a.getFields()[l])
var c=s.alias?s.alias.value:l
i[c]||(i[c]=[]),i[c].push([a,s,u])
break
case x.h.FRAGMENT_SPREAD:r[s.name.value]=!0
break
case x.h.INLINE_FRAGMENT:var d=s.typeCondition,h=d?an(e.getSchema(),d):a
oi(e,h,s.selectionSet,i,r)}}}var si,li=function(){function e(){this._data=Object.create(null)}var a=e.prototype
return a.has=function(e,a,n){var i=this._data[e],r=i&&i[a]
return void 0!==r&&(!1!==n||!1===r)},a.add=function(e,a,n){this._pairSetAdd(e,a,n),this._pairSetAdd(a,e,n)},a._pairSetAdd=function(e,a,n){var i=this._data[e]
i||(i=Object.create(null),this._data[e]=i),i[a]=n},e}()
function ui(e){var a=[],n=Object.create(null)
return{ObjectValue:{enter:function(){a.push(n),n=Object.create(null)},leave:function(){n=a.pop()}},ObjectField:function(a){var i=a.name.value
n[i]?e.reportError(new l._('There can be only one input field named "'.concat(i,'".'),[n[i],a.name])):n[i]=a.name}}}function ci(e){var a,n,i,r=e.getSchema(),t=null!==(a=null!==(n=null!==(i=null==r?void 0:r.astNode)&&void 0!==i?i:null==r?void 0:r.getQueryType())&&void 0!==n?n:null==r?void 0:r.getMutationType())&&void 0!==a?a:null==r?void 0:r.getSubscriptionType(),o=0
return{SchemaDefinition:function(a){t?e.reportError(new l._("Cannot define a new schema within a schema extension.",a)):(o>0&&e.reportError(new l._("Must provide only one schema definition.",a)),++o)}}}function di(e){var a=e.getSchema(),n=Object.create(null),i=a?{query:a.getQueryType(),mutation:a.getMutationType(),subscription:a.getSubscriptionType()}:{}
return{SchemaDefinition:r,SchemaExtension:r}
function r(a){for(var r,t=null!==(r=a.operationTypes)&&void 0!==r?r:[],o=0;o<t.length;o++){var s=t[o],u=s.operation,c=n[u]
i[u]?e.reportError(new l._("Type for ".concat(u," already defined in the schema. It cannot be redefined."),s)):c?e.reportError(new l._("There can be only one ".concat(u," type in schema."),[c,s])):n[u]=s}return!1}}function hi(e){var a=Object.create(null),n=e.getSchema()
return{ScalarTypeDefinition:i,ObjectTypeDefinition:i,InterfaceTypeDefinition:i,UnionTypeDefinition:i,EnumTypeDefinition:i,InputObjectTypeDefinition:i}
function i(i){var r=i.name.value
if(null==n||!n.getType(r))return a[r]?e.reportError(new l._('There can be only one type named "'.concat(r,'".'),[a[r],i.name])):a[r]=i.name,!1
e.reportError(new l._('Type "'.concat(r,'" already exists in the schema. It cannot also be defined in this type definition.'),i.name))}}function pi(e){var a=e.getSchema(),n=a?a.getTypeMap():Object.create(null),i=Object.create(null)
return{EnumTypeDefinition:r,EnumTypeExtension:r}
function r(a){var r,t=a.name.value
i[t]||(i[t]=Object.create(null))
for(var o=null!==(r=a.values)&&void 0!==r?r:[],s=i[t],u=0;u<o.length;u++){var c=o[u],d=c.name.value,h=n[t]
Q(h)&&h.getValue(d)?e.reportError(new l._('Enum value "'.concat(t,".").concat(d,'" already exists in the schema. It cannot also be defined in this type extension.'),c.name)):s[d]?e.reportError(new l._('Enum value "'.concat(t,".").concat(d,'" can only be defined once.'),[s[d],c.name])):s[d]=c.name}return!1}}function mi(e){var a=e.getSchema(),n=a?a.getTypeMap():Object.create(null),i=Object.create(null)
return{InputObjectTypeDefinition:r,InputObjectTypeExtension:r,InterfaceTypeDefinition:r,InterfaceTypeExtension:r,ObjectTypeDefinition:r,ObjectTypeExtension:r}
function r(a){var r,t=a.name.value
i[t]||(i[t]=Object.create(null))
for(var o=null!==(r=a.fields)&&void 0!==r?r:[],s=i[t],u=0;u<o.length;u++){var c=o[u],d=c.name.value
fi(n[t],d)?e.reportError(new l._('Field "'.concat(t,".").concat(d,'" already exists in the schema. It cannot also be defined in this type extension.'),c.name)):s[d]?e.reportError(new l._('Field "'.concat(t,".").concat(d,'" can only be defined once.'),[s[d],c.name])):s[d]=c.name}return!1}}function fi(e,a){return!!(F(e)||U(e)||$(e))&&null!=e.getFields()[a]}function vi(e){var a=Object.create(null),n=e.getSchema()
return{DirectiveDefinition:function(i){var r=i.name.value
if(null==n||!n.getDirective(r))return a[r]?e.reportError(new l._('There can be only one directive named "@'.concat(r,'".'),[a[r],i.name])):a[r]=i.name,!1
e.reportError(new l._('Directive "@'.concat(r,'" already exists in the schema. It cannot be redefined.'),i.name))}}}function gi(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function ki(e){for(var a=e.getSchema(),n=Object.create(null),i=0,r=e.getDocument().definitions;i<r.length;i++){var t=r[i]
hn(t)&&(n[t.name.value]=t)}return{ScalarTypeExtension:o,ObjectTypeExtension:o,InterfaceTypeExtension:o,UnionTypeExtension:o,EnumTypeExtension:o,InputObjectTypeExtension:o}
function o(i){var r,t,o=i.name.value,s=n[o],u=null==a?void 0:a.getType(o)
if(s?r=yi[s.kind]:u&&(r=G(t=u)?x.h.SCALAR_TYPE_EXTENSION:F(t)?x.h.OBJECT_TYPE_EXTENSION:U(t)?x.h.INTERFACE_TYPE_EXTENSION:Z(t)?x.h.UNION_TYPE_EXTENSION:Q(t)?x.h.ENUM_TYPE_EXTENSION:$(t)?x.h.INPUT_OBJECT_TYPE_EXTENSION:void(0,K.Z)(0,"Unexpected type: "+(0,h.Z)(t))),r){if(r!==i.kind){var c=function(e){switch(e){case x.h.SCALAR_TYPE_EXTENSION:return"scalar"
case x.h.OBJECT_TYPE_EXTENSION:return"object"
case x.h.INTERFACE_TYPE_EXTENSION:return"interface"
case x.h.UNION_TYPE_EXTENSION:return"union"
case x.h.ENUM_TYPE_EXTENSION:return"enum"
case x.h.INPUT_OBJECT_TYPE_EXTENSION:return"input object"}(0,K.Z)(0,"Unexpected kind: "+(0,h.Z)(e))}(i.kind)
e.reportError(new l._("Cannot extend non-".concat(c,' type "').concat(o,'".'),s?[s,i]:i))}}else{var d=Object.keys(n)
a&&(d=d.concat(Object.keys(a.getTypeMap())))
var p=P(o,d)
e.reportError(new l._('Cannot extend type "'.concat(o,'" because it is not defined.')+T(p),i.name))}}}var yi=(gi(si={},x.h.SCALAR_TYPE_DEFINITION,x.h.SCALAR_TYPE_EXTENSION),gi(si,x.h.OBJECT_TYPE_DEFINITION,x.h.OBJECT_TYPE_EXTENSION),gi(si,x.h.INTERFACE_TYPE_DEFINITION,x.h.INTERFACE_TYPE_EXTENSION),gi(si,x.h.UNION_TYPE_DEFINITION,x.h.UNION_TYPE_EXTENSION),gi(si,x.h.ENUM_TYPE_DEFINITION,x.h.ENUM_TYPE_EXTENSION),gi(si,x.h.INPUT_OBJECT_TYPE_DEFINITION,x.h.INPUT_OBJECT_TYPE_EXTENSION),si),bi=Object.freeze([fn,vn,gn,kn,yn,Sn,An,Mn,Tn,_n,wn,jn,En,Nn,Bn,Pn,Ln,Dn,xn,zn,In,Vn,Un,qn,$n,ui]),Si=Object.freeze([ci,di,hi,pi,mi,vi,yn,Dn,xn,ki,On,In,ui,Wn])
function Ai(e,a){e.prototype=Object.create(a.prototype),e.prototype.constructor=e,e.__proto__=a}var Mi=function(){function e(e,a){this._ast=e,this._fragments=void 0,this._fragmentSpreads=new Map,this._recursivelyReferencedFragments=new Map,this._onError=a}var a=e.prototype
return a.reportError=function(e){this._onError(e)},a.getDocument=function(){return this._ast},a.getFragment=function(e){var a=this._fragments
return a||(this._fragments=a=this.getDocument().definitions.reduce((function(e,a){return a.kind===x.h.FRAGMENT_DEFINITION&&(e[a.name.value]=a),e}),Object.create(null))),a[e]},a.getFragmentSpreads=function(e){var a=this._fragmentSpreads.get(e)
if(!a){a=[]
for(var n=[e];0!==n.length;)for(var i=0,r=n.pop().selections;i<r.length;i++){var t=r[i]
t.kind===x.h.FRAGMENT_SPREAD?a.push(t):t.selectionSet&&n.push(t.selectionSet)}this._fragmentSpreads.set(e,a)}return a},a.getRecursivelyReferencedFragments=function(e){var a=this._recursivelyReferencedFragments.get(e)
if(!a){a=[]
for(var n=Object.create(null),i=[e.selectionSet];0!==i.length;)for(var r=i.pop(),t=0,o=this.getFragmentSpreads(r);t<o.length;t++){var s=o[t].name.value
if(!0!==n[s]){n[s]=!0
var l=this.getFragment(s)
l&&(a.push(l),i.push(l.selectionSet))}}this._recursivelyReferencedFragments.set(e,a)}return a},e}(),Ti=function(e){function a(a,n,i){var r
return(r=e.call(this,a,i)||this)._schema=n,r}return Ai(a,e),a.prototype.getSchema=function(){return this._schema},a}(Mi),_i=function(e){function a(a,n,i,r){var t
return(t=e.call(this,n,r)||this)._schema=a,t._typeInfo=i,t._variableUsages=new Map,t._recursiveVariableUsages=new Map,t}Ai(a,e)
var n=a.prototype
return n.getSchema=function(){return this._schema},n.getVariableUsages=function(e){var a=this._variableUsages.get(e)
if(!a){var n=[],i=new nn(this._schema);(0,u.Vn)(e,tn(i,{VariableDefinition:function(){return!1},Variable:function(e){n.push({node:e,type:i.getInputType(),defaultValue:i.getDefaultValue()})}})),a=n,this._variableUsages.set(e,a)}return a},n.getRecursiveVariableUsages=function(e){var a=this._recursiveVariableUsages.get(e)
if(!a){a=this.getVariableUsages(e)
for(var n=0,i=this.getRecursivelyReferencedFragments(e);n<i.length;n++){var r=i[n]
a=a.concat(this.getVariableUsages(r))}this._recursiveVariableUsages.set(e,a)}return a},n.getType=function(){return this._typeInfo.getType()},n.getParentType=function(){return this._typeInfo.getParentType()},n.getInputType=function(){return this._typeInfo.getInputType()},n.getParentInputType=function(){return this._typeInfo.getParentInputType()},n.getFieldDef=function(){return this._typeInfo.getFieldDef()},n.getDirective=function(){return this._typeInfo.getDirective()},n.getArgument=function(){return this._typeInfo.getArgument()},n.getEnumValue=function(){return this._typeInfo.getEnumValue()},a}(Mi)
function wi(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:bi,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new nn(e),r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{maxErrors:void 0}
a||(0,s.Z)(0,"Must provide document."),za(e)
var t=Object.freeze({}),o=[],c=new _i(e,a,i,(function(e){if(null!=r.maxErrors&&o.length>=r.maxErrors)throw o.push(new l._("Too many validation errors, error limit reached. Validation aborted.")),t
o.push(e)})),d=(0,u.j1)(n.map((function(e){return e(c)})))
try{(0,u.Vn)(a,tn(i,d))}catch(e){if(e!==t)throw e}return o}function ji(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Si,i=[],r=new Ti(e,a,(function(e){i.push(e)})),t=n.map((function(e){return e(r)}))
return(0,u.Vn)(e,(0,u.j1)(t)),i}function Ei(e,a,n){return{prev:e,key:a,typename:n}}function Ni(e){for(var a=[],n=e;n;)a.push(n.key),n=n.prev
return a.reverse()}function Bi(e,a){if("query"===a.operation){var n=e.getQueryType()
if(!n)throw new l._("Schema does not define the required query root type.",a)
return n}if("mutation"===a.operation){var i=e.getMutationType()
if(!i)throw new l._("Schema is not configured for mutations.",a)
return i}if("subscription"===a.operation){var r=e.getSubscriptionType()
if(!r)throw new l._("Schema is not configured for subscriptions.",a)
return r}throw new l._("Can only have query, mutation and subscription operations.",a)}function Pi(e){return e.map((function(e){return"number"==typeof e?"["+e.toString()+"]":"."+e})).join("")}function Li(e,a,n){if(e){if(e.kind===x.h.VARIABLE){var i=e.name.value
if(null==n||void 0===n[i])return
var r=n[i]
if(null===r&&ne(a))return
return r}if(ne(a)){if(e.kind===x.h.NULL)return
return Li(e,a.ofType,n)}if(e.kind===x.h.NULL)return null
if(ee(a)){var t=a.ofType
if(e.kind===x.h.LIST){for(var o=[],s=0,l=e.values;s<l.length;s++){var u=l[s]
if(Di(u,n)){if(ne(t))return
o.push(null)}else{var c=Li(u,t,n)
if(void 0===c)return
o.push(c)}}return o}var p=Li(e,t,n)
if(void 0===p)return
return[p]}if($(a)){if(e.kind!==x.h.OBJECT)return
for(var m=Object.create(null),f=y(e.fields,(function(e){return e.name.value})),v=0,g=d(a.getFields());v<g.length;v++){var k=g[v],b=f[k.name]
if(b&&!Di(b.value,n)){var S=Li(b.value,k.type,n)
if(void 0===S)return
m[k.name]=S}else if(void 0!==k.defaultValue)m[k.name]=k.defaultValue
else if(ne(k.type))return}return m}if(le(a)){var A
try{A=a.parseLiteral(e,n)}catch(e){return}if(void 0===A)return
return A}(0,K.Z)(0,"Unexpected input type: "+(0,h.Z)(a))}}function Di(e,a){return e.kind===x.h.VARIABLE&&(null==a||void 0===a[e.name.value])}function xi(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ci
return Ki(e,a,n)}function Ci(e,a,n){var i="Invalid value "+(0,h.Z)(a)
throw e.length>0&&(i+=' at "value'.concat(Pi(e),'"')),n.message=i+": "+n.message,n}function Ki(e,a,n,i){if(ne(a))return null!=e?Ki(e,a.ofType,n,i):void n(Ni(i),e,new l._('Expected non-nullable type "'.concat((0,h.Z)(a),'" not to be null.')))
if(null==e)return null
if(ee(a)){var r=a.ofType,t=qe(e,(function(e,a){var t=Ei(i,a,void 0)
return Ki(e,r,n,t)}))
return null!=t?t:[Ki(e,r,n,i)]}if($(a)){if(!(0,_.Z)(e))return void n(Ni(i),e,new l._('Expected type "'.concat(a.name,'" to be an object.')))
for(var o={},s=a.getFields(),u=0,c=d(s);u<c.length;u++){var p=c[u],m=e[p.name]
if(void 0!==m)o[p.name]=Ki(m,p.type,n,Ei(i,p.name,a.name))
else if(void 0!==p.defaultValue)o[p.name]=p.defaultValue
else if(ne(p.type)){var f=(0,h.Z)(p.type)
n(Ni(i),e,new l._('Field "'.concat(p.name,'" of required type "').concat(f,'" was not provided.')))}}for(var v=0,g=Object.keys(e);v<g.length;v++){var k=g[v]
if(!s[k]){var y=P(k,Object.keys(a.getFields()))
n(Ni(i),e,new l._('Field "'.concat(k,'" is not defined by type "').concat(a.name,'".')+T(y)))}}return o}if(le(a)){var b
try{b=a.parseValue(e)}catch(r){return void(r instanceof l._?n(Ni(i),e,r):n(Ni(i),e,new l._('Expected type "'.concat(a.name,'". ')+r.message,void 0,void 0,void 0,void 0,r)))}return void 0===b&&n(Ni(i),e,new l._('Expected type "'.concat(a.name,'".'))),b}(0,K.Z)(0,"Unexpected input type: "+(0,h.Z)(a))}function Ri(e,a,n){for(var i,r={},t=y(null!==(i=a.arguments)&&void 0!==i?i:[],(function(e){return e.name.value})),o=0,s=e.args;o<s.length;o++){var u=s[o],c=u.name,d=u.type,p=t[c]
if(p){var m=p.value,f=m.kind===x.h.NULL
if(m.kind===x.h.VARIABLE){var v=m.name.value
if(null==n||!Oi(n,v)){if(void 0!==u.defaultValue)r[c]=u.defaultValue
else if(ne(d))throw new l._('Argument "'.concat(c,'" of required type "').concat((0,h.Z)(d),'" ')+'was provided the variable "$'.concat(v,'" which was not provided a runtime value.'),m)
continue}f=null==n[v]}if(f&&ne(d))throw new l._('Argument "'.concat(c,'" of non-null type "').concat((0,h.Z)(d),'" ')+"must not be null.",m)
var g=Li(m,d,n)
if(void 0===g)throw new l._('Argument "'.concat(c,'" has invalid value ').concat((0,C.S)(m),"."),m)
r[c]=g}else if(void 0!==u.defaultValue)r[c]=u.defaultValue
else if(ne(d))throw new l._('Argument "'.concat(c,'" of required type "').concat((0,h.Z)(d),'" ')+"was not provided.",a)}return r}function zi(e,a,n){var i=a.directives&&c(a.directives,(function(a){return a.name.value===e.name}))
if(i)return Ri(e,i,n)}function Oi(e,a){return Object.prototype.hasOwnProperty.call(e,a)}function Ii(e,a,n,i,r,t,o,s){return Gi(1===arguments.length?e:{schema:e,document:a,rootValue:n,contextValue:i,variableValues:r,operationName:t,fieldResolver:o,typeResolver:s})}function Vi(e){var a=Gi(e)
if(t(a))throw new Error("GraphQL execution failed to complete synchronously.")
return a}function Gi(e){var a=e.schema,n=e.document,i=e.rootValue,r=e.contextValue,o=e.variableValues,s=e.operationName,l=e.fieldResolver,u=e.typeResolver
Fi(a,n,o)
var c=Ji(a,n,i,r,o,s,l,u)
if(Array.isArray(c))return{errors:c}
var d=function(e,a,n){var i=Bi(e.schema,a),r=Wi(e,i,a.selectionSet,Object.create(null),Object.create(null))
try{var o="mutation"===a.operation?function(e,a,n,i,r){return o=Object.keys(r),s=function(i,o){var s=r[o],l=Ei(void 0,o,a.name),u=Qi(e,a,n,s,l)
return void 0===u?i:t(u)?u.then((function(e){return i[o]=e,i})):(i[o]=u,i)},l=Object.create(null),o.reduce((function(e,a){return t(e)?e.then((function(e){return s(e,a)})):s(e,a)}),l)
var o,s,l}(e,i,n,0,r):Ui(e,i,n,void 0,r)
return t(o)?o.then(void 0,(function(a){return e.errors.push(a),Promise.resolve(null)})):o}catch(a){return e.errors.push(a),null}}(c,c.operation,i)
return Hi(c,d)}function Hi(e,a){return t(a)?a.then((function(a){return Hi(e,a)})):0===e.errors.length?{data:a}:{errors:e.errors,data:a}}function Fi(e,a,n){a||(0,s.Z)(0,"Must provide document."),za(e),null==n||(0,_.Z)(n)||(0,s.Z)(0,"Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.")}function Ji(e,a,n,i,r,t,o,s){for(var u,c,d,p=Object.create(null),m=0,f=a.definitions;m<f.length;m++){var v=f[m]
switch(v.kind){case x.h.OPERATION_DEFINITION:if(null==t){if(void 0!==d)return[new l._("Must provide operation name if query contains multiple operations.")]
d=v}else(null===(u=v.name)||void 0===u?void 0:u.value)===t&&(d=v)
break
case x.h.FRAGMENT_DEFINITION:p[v.name.value]=v}}if(!d)return null!=t?[new l._('Unknown operation named "'.concat(t,'".'))]:[new l._("Must provide an operation.")]
var g=function(e,a,n,i){var r=[],t=null==i?void 0:i.maxErrors
try{var o=function(e,a,n,i){for(var r={},t=function(t){var o=a[t],s=o.variable.name.value,u=an(e,o.type)
if(!re(u)){var c=(0,C.S)(o.type)
return i(new l._('Variable "$'.concat(s,'" expected value of type "').concat(c,'" which cannot be used as an input type.'),o.type)),"continue"}if(!Oi(n,s)){if(o.defaultValue)r[s]=Li(o.defaultValue,u)
else if(ne(u)){var d=(0,h.Z)(u)
i(new l._('Variable "$'.concat(s,'" of required type "').concat(d,'" was not provided.'),o))}return"continue"}var p=n[s]
if(null===p&&ne(u)){var m=(0,h.Z)(u)
return i(new l._('Variable "$'.concat(s,'" of non-null type "').concat(m,'" must not be null.'),o)),"continue"}r[s]=xi(p,u,(function(e,a,n){var r='Variable "$'.concat(s,'" got invalid value ')+(0,h.Z)(a)
e.length>0&&(r+=' at "'.concat(s).concat(Pi(e),'"')),i(new l._(r+"; "+n.message,o,void 0,void 0,void 0,n.originalError))}))},o=0;o<a.length;o++)t(o)
return r}(e,a,n,(function(e){if(null!=t&&r.length>=t)throw new l._("Too many errors processing variables, error limit reached. Execution aborted.")
r.push(e)}))
if(0===r.length)return{coerced:o}}catch(e){r.push(e)}return{errors:r}}(e,null!==(c=d.variableDefinitions)&&void 0!==c?c:[],null!=r?r:{},{maxErrors:50})
return g.errors?g.errors:{schema:e,fragments:p,rootValue:n,contextValue:i,operation:d,variableValues:g.coerced,fieldResolver:null!=o?o:lr,typeResolver:null!=s?s:sr,errors:[]}}function Ui(e,a,n,i,r){for(var o,s,l,u=Object.create(null),c=!1,d=0,h=Object.keys(r);d<h.length;d++){var p=h[d],m=Qi(e,a,n,r[p],Ei(i,p,a.name))
void 0!==m&&(u[p]=m,t(m)&&(c=!0))}return c?(o=u,l=(s=Object.keys(o)).map((function(e){return o[e]})),Promise.all(l).then((function(e){return e.reduce((function(e,a,n){return e[s[n]]=a,e}),Object.create(null))}))):u}function Wi(e,a,n,i,r){for(var t=0,o=n.selections;t<o.length;t++){var s=o[t]
switch(s.kind){case x.h.FIELD:if(!Zi(e,s))continue
var l=(d=s).alias?d.alias.value:d.name.value
i[l]||(i[l]=[]),i[l].push(s)
break
case x.h.INLINE_FRAGMENT:if(!Zi(e,s)||!qi(e,s,a))continue
Wi(e,a,s.selectionSet,i,r)
break
case x.h.FRAGMENT_SPREAD:var u=s.name.value
if(r[u]||!Zi(e,s))continue
r[u]=!0
var c=e.fragments[u]
if(!c||!qi(e,c,a))continue
Wi(e,a,c.selectionSet,i,r)}}var d
return i}function Zi(e,a){var n=zi(ja,a,e.variableValues)
if(!0===(null==n?void 0:n.if))return!1
var i=zi(wa,a,e.variableValues)
return!1!==(null==i?void 0:i.if)}function qi(e,a,n){var i=a.typeCondition
if(!i)return!0
var r=an(e.schema,i)
return r===n||!!he(r)&&e.schema.isSubType(r,n)}function Qi(e,a,n,i,r){var o,s=i[0].name.value,l=ur(e.schema,a,s)
if(l){var u=l.type,c=null!==(o=l.resolve)&&void 0!==o?o:e.fieldResolver,d=Yi(e,l,i,a,r)
try{var h,m=c(n,Ri(l,i[0],e.variableValues),e.contextValue,d)
return h=t(m)?m.then((function(a){return Xi(e,u,i,d,r,a)})):Xi(e,u,i,d,r,m),t(h)?h.then(void 0,(function(a){return $i(p(a,i,Ni(r)),u,e)})):h}catch(a){return $i(p(a,i,Ni(r)),u,e)}}}function Yi(e,a,n,i,r){return{fieldName:a.name,fieldNodes:n,returnType:a.type,parentType:i,path:r,schema:e.schema,fragments:e.fragments,rootValue:e.rootValue,operation:e.operation,variableValues:e.variableValues}}function $i(e,a,n){if(ne(a))throw e
return n.errors.push(e),null}function Xi(e,a,n,i,r,o){if(o instanceof Error)throw o
if(ne(a)){var s=Xi(e,a.ofType,n,i,r,o)
if(null===s)throw new Error("Cannot return null for non-nullable field ".concat(i.parentType.name,".").concat(i.fieldName,"."))
return s}return null==o?null:ee(a)?function(e,a,n,i,r,o){var s=a.ofType,u=!1,c=qe(o,(function(a,o){var l=Ei(r,o,void 0)
try{var c
return c=t(a)?a.then((function(a){return Xi(e,s,n,i,l,a)})):Xi(e,s,n,i,l,a),t(c)?(u=!0,c.then(void 0,(function(a){return $i(p(a,n,Ni(l)),s,e)}))):c}catch(a){return $i(p(a,n,Ni(l)),s,e)}}))
if(null==c)throw new l._('Expected Iterable, but did not find one for field "'.concat(i.parentType.name,".").concat(i.fieldName,'".'))
return u?Promise.all(c):c}(e,a,n,i,r,o):le(a)?function(e,a){var n=e.serialize(a)
if(void 0===n)throw new Error('Expected a value of type "'.concat((0,h.Z)(e),'" but ')+"received: ".concat((0,h.Z)(a)))
return n}(a,o):he(a)?function(e,a,n,i,r,o){var s,l=null!==(s=a.resolveType)&&void 0!==s?s:e.typeResolver,u=e.contextValue,c=l(o,u,i,a)
return t(c)?c.then((function(t){return ar(e,er(t,e,a,n,i,o),n,i,r,o)})):ar(e,er(c,e,a,n,i,o),n,i,r,o)}(e,a,n,i,r,o):F(a)?ar(e,a,n,i,r,o):void(0,K.Z)(0,"Cannot complete value of unexpected output type: "+(0,h.Z)(a))}function er(e,a,n,i,r,t){if(null==e)throw new l._('Abstract type "'.concat(n.name,'" must resolve to an Object type at runtime for field "').concat(r.parentType.name,".").concat(r.fieldName,'". Either the "').concat(n.name,'" type should provide a "resolveType" function or each possible type should provide an "isTypeOf" function.'),i)
var o=Se(e)?e.name:e
if("string"!=typeof o)throw new l._('Abstract type "'.concat(n.name,'" must resolve to an Object type at runtime for field "').concat(r.parentType.name,".").concat(r.fieldName,'" with ')+"value ".concat((0,h.Z)(t),', received "').concat((0,h.Z)(e),'".'))
var s=a.schema.getType(o)
if(null==s)throw new l._('Abstract type "'.concat(n.name,'" was resolve to a type "').concat(o,'" that does not exist inside schema.'),i)
if(!F(s))throw new l._('Abstract type "'.concat(n.name,'" was resolve to a non-object type "').concat(o,'".'),i)
if(!a.schema.isSubType(n,s))throw new l._('Runtime Object type "'.concat(s.name,'" is not a possible type for "').concat(n.name,'".'),i)
return s}function ar(e,a,n,i,r,o){if(a.isTypeOf){var s=a.isTypeOf(o,e.contextValue,i)
if(t(s))return s.then((function(i){if(!i)throw nr(a,o,n)
return ir(e,a,n,r,o)}))
if(!s)throw nr(a,o,n)}return ir(e,a,n,r,o)}function nr(e,a,n){return new l._('Expected value of type "'.concat(e.name,'" but got: ').concat((0,h.Z)(a),"."),n)}function ir(e,a,n,i,r){return Ui(e,a,r,i,or(e,a,n))}var rr,tr,or=(rr=function(e,a,n){for(var i=Object.create(null),r=Object.create(null),t=0;t<n.length;t++){var o=n[t]
o.selectionSet&&(i=Wi(e,a,o.selectionSet,i,r))}return i},function(e,a,n){tr||(tr=new WeakMap)
var i,r=tr.get(e)
if(r){if(i=r.get(a)){var t=i.get(n)
if(void 0!==t)return t}}else r=new WeakMap,tr.set(e,r)
i||(i=new WeakMap,r.set(a,i))
var o=rr(e,a,n)
return i.set(n,o),o}),sr=function(e,a,n,i){if((0,_.Z)(e)&&"string"==typeof e.__typename)return e.__typename
for(var r=n.schema.getPossibleTypes(i),o=[],s=0;s<r.length;s++){var l=r[s]
if(l.isTypeOf){var u=l.isTypeOf(e,a,n)
if(t(u))o[s]=u
else if(u)return l.name}}return o.length?Promise.all(o).then((function(e){for(var a=0;a<e.length;a++)if(e[a])return r[a].name})):void 0},lr=function(e,a,n,i){if((0,_.Z)(e)||"function"==typeof e){var r=e[i.fieldName]
return"function"==typeof r?e[i.fieldName](a,n,i):r}}
function ur(e,a,n){return n===ka.name&&e.getQueryType()===a?ka:n===ya.name&&e.getQueryType()===a?ya:n===ba.name?ba:a.getFields()[n]}function cr(e,a,n,i,r,t,o,s){var l=arguments
return new Promise((function(u){return u(1===l.length?hr(e):hr({schema:e,source:a,rootValue:n,contextValue:i,variableValues:r,operationName:t,fieldResolver:o,typeResolver:s}))}))}function dr(e,a,n,i,r,o,s,l){var u=hr(1===arguments.length?e:{schema:e,source:a,rootValue:n,contextValue:i,variableValues:r,operationName:o,fieldResolver:s,typeResolver:l})
if(t(u))throw new Error("GraphQL execution failed to complete synchronously.")
return u}function hr(e){var a,n=e.schema,i=e.source,r=e.rootValue,t=e.contextValue,s=e.variableValues,l=e.operationName,u=e.fieldResolver,c=e.typeResolver,d=Ra(n)
if(d.length>0)return{errors:d}
try{a=(0,o.Qc)(i)}catch(e){return{errors:[e]}}var h=wi(n,a)
return h.length>0?{errors:h}:Ii({schema:n,document:a,rootValue:r,contextValue:t,variableValues:s,operationName:l,fieldResolver:u,typeResolver:c})}var pr=n(6333),mr=n(5368),fr=n(3026),vr=n(9112),gr=n(244)
function kr(e){return"function"==typeof(null==e?void 0:e[k.PA])}function yr(e,a){return new Promise((function(n){return n(a(e))}))}function br(e){return{value:e,done:!1}}function Sr(e,a,n,i,r,t,o,s){return Mr(1===arguments.length?e:{schema:e,document:a,rootValue:n,contextValue:i,variableValues:r,operationName:t,fieldResolver:o,subscribeFieldResolver:s})}function Ar(e){if(e instanceof l._)return{errors:[e]}
throw e}function Mr(e){var a=e.schema,n=e.document,i=e.rootValue,r=e.contextValue,t=e.variableValues,o=e.operationName,s=e.fieldResolver,l=e.subscribeFieldResolver,u=Tr(a,n,i,r,t,o,l),c=function(e){return Ii({schema:a,document:n,rootValue:e,contextValue:r,variableValues:t,operationName:o,fieldResolver:s})}
return u.then((function(e){return kr(e)?function(e,a,n){var i,r,t,o,s,l,u=e[k.PA].call(e)
function c(e){return e.done?e:yr(e.value,a).then(br,r)}if("function"==typeof u.return&&(i=u.return,r=function(e){var a=function(){return Promise.reject(e)}
return i.call(u).then(a,a)}),n){var d=n
t=function(e){return yr(e,d).then(br,r)}}return o={next:function(){return u.next().then(c,t)},return:function(){return i?i.call(u).then(c,t):Promise.resolve({value:void 0,done:!0})},throw:function(e){return"function"==typeof u.throw?u.throw(e).then(c,t):Promise.reject(e).catch(r)}},l=function(){return this},(s=k.PA)in o?Object.defineProperty(o,s,{value:l,enumerable:!0,configurable:!0,writable:!0}):o[s]=l,o}(e,c,Ar):e}))}function Tr(e,a,n,i,r,t,o){return Fi(e,a,r),new Promise((function(s){var u=Ji(e,a,n,i,r,t,o)
s(Array.isArray(u)?{errors:u}:function(e){var a=e.schema,n=e.operation,i=e.variableValues,r=e.rootValue,t=Bi(a,n),o=Wi(e,t,n.selectionSet,Object.create(null),Object.create(null)),s=Object.keys(o)[0],u=o[s],c=u[0].name.value,d=ur(a,t,c)
if(!d)throw new l._('The subscription field "'.concat(c,'" is not defined.'),u)
var m=Ei(void 0,s,t.name),f=Yi(e,d,u,t,m)
return new Promise((function(a){var n,t=Ri(d,u[0],i),o=e.contextValue
a((null!==(n=d.subscribe)&&void 0!==n?n:e.fieldResolver)(r,t,o,f))})).then((function(e){if(e instanceof Error)throw p(e,u,Ni(m))
if(!kr(e))throw new Error("Subscription field must return Async Iterable. "+"Received: ".concat((0,h.Z)(e),"."))
return e}),(function(e){throw p(e,u,Ni(m))}))}(u))})).catch(Ar)}function _r(e){return{Field:function(a){var n=e.getFieldDef(),i=null==n?void 0:n.deprecationReason
if(n&&null!=i){var r=e.getParentType()
null!=r||(0,K.Z)(0),e.reportError(new l._("The field ".concat(r.name,".").concat(n.name," is deprecated. ").concat(i),a))}},Argument:function(a){var n=e.getArgument(),i=null==n?void 0:n.deprecationReason
if(n&&null!=i){var r=e.getDirective()
if(null!=r)e.reportError(new l._('Directive "@'.concat(r.name,'" argument "').concat(n.name,'" is deprecated. ').concat(i),a))
else{var t=e.getParentType(),o=e.getFieldDef()
null!=t&&null!=o||(0,K.Z)(0),e.reportError(new l._('Field "'.concat(t.name,".").concat(o.name,'" argument "').concat(n.name,'" is deprecated. ').concat(i),a))}}},ObjectField:function(a){var n=Me(e.getParentInputType())
if($(n)){var i=n.getFields()[a.name.value],r=null==i?void 0:i.deprecationReason
null!=r&&e.reportError(new l._("The input field ".concat(n.name,".").concat(i.name," is deprecated. ").concat(r),a))}},EnumValue:function(a){var n=e.getEnumValue(),i=null==n?void 0:n.deprecationReason
if(n&&null!=i){var r=Me(e.getInputType())
null!=r||(0,K.Z)(0),e.reportError(new l._('The enum value "'.concat(r.name,".").concat(n.name,'" is deprecated. ').concat(i),a))}}}}function wr(e){return{Field:function(a){var n=Me(e.getType())
n&&Aa(n)&&e.reportError(new l._('GraphQL introspection has been disabled, but the requested query contained the field "'.concat(a.name.value,'".'),a))}}}function jr(e){var a
e||(0,s.Z)(0,"Received null or undefined error.")
var n=null!==(a=e.message)&&void 0!==a?a:"An unknown error occurred.",i=e.locations,r=e.path,t=e.extensions
return t&&Object.keys(t).length>0?{message:n,locations:i,path:r,extensions:t}:{message:n,locations:i,path:r}}var Er=n(1083)
function Nr(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function Br(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function Pr(e){var a=function(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?Nr(Object(n),!0).forEach((function(a){Br(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Nr(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}({descriptions:!0,specifiedByUrl:!1,directiveIsRepeatable:!1,schemaDescription:!1,inputValueDeprecation:!1},e),n=a.descriptions?"description":"",i=a.specifiedByUrl?"specifiedByUrl":"",r=a.directiveIsRepeatable?"isRepeatable":"",t=a.schemaDescription?n:""
function o(e){return a.inputValueDeprecation?e:""}return"\n    query IntrospectionQuery {\n      __schema {\n        ".concat(t,"\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ").concat(n,"\n          ").concat(r,"\n          locations\n          args").concat(o("(includeDeprecated: true)")," {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ").concat(n,"\n      ").concat(i,"\n      fields(includeDeprecated: true) {\n        name\n        ").concat(n,"\n        args").concat(o("(includeDeprecated: true)")," {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields").concat(o("(includeDeprecated: true)")," {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ").concat(n,"\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ").concat(n,"\n      type { ...TypeRef }\n      defaultValue\n      ").concat(o("isDeprecated"),"\n      ").concat(o("deprecationReason"),"\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ")}function Lr(e,a){for(var n=null,i=0,r=e.definitions;i<r.length;i++){var t,o=r[i]
if(o.kind===x.h.OPERATION_DEFINITION)if(null==a){if(n)return null
n=o}else if((null===(t=o.name)||void 0===t?void 0:t.value)===a)return o}return n}function Dr(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function xr(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function Cr(e,a){var n=function(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?Dr(Object(n),!0).forEach((function(a){xr(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Dr(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}({specifiedByUrl:!0,directiveIsRepeatable:!0,schemaDescription:!0,inputValueDeprecation:!0},a),i=Vi({schema:e,document:(0,o.Qc)(Pr(n))})
return!i.errors&&i.data||(0,K.Z)(0),i.data}function Kr(e,a){(0,_.Z)(e)&&(0,_.Z)(e.__schema)||(0,s.Z)(0,'Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: '.concat((0,h.Z)(e),"."))
for(var n=e.__schema,i=A(n.types,(function(e){return e.name}),(function(e){return function(e){if(null!=e&&null!=e.name&&null!=e.kind)switch(e.kind){case va.SCALAR:return new we({name:(i=e).name,description:i.description,specifiedByUrl:i.specifiedByUrl})
case va.OBJECT:return new je({name:(n=e).name,description:n.description,interfaces:function(){return y(n)},fields:function(){return b(n)}})
case va.INTERFACE:return new xe({name:(a=e).name,description:a.description,interfaces:function(){return y(a)},fields:function(){return b(a)}})
case va.UNION:return function(e){if(!e.possibleTypes){var a=(0,h.Z)(e)
throw new Error("Introspection result missing possibleTypes: ".concat(a,"."))}return new Ce({name:e.name,description:e.description,types:function(){return e.possibleTypes.map(g)}})}(e)
case va.ENUM:return function(e){if(!e.enumValues){var a=(0,h.Z)(e)
throw new Error("Introspection result missing enumValues: ".concat(a,"."))}return new Re({name:e.name,description:e.description,values:A(e.enumValues,(function(e){return e.name}),(function(e){return{description:e.description,deprecationReason:e.deprecationReason}}))})}(e)
case va.INPUT_OBJECT:return function(e){if(!e.inputFields){var a=(0,h.Z)(e)
throw new Error("Introspection result missing inputFields: ".concat(a,"."))}return new Oe({name:e.name,description:e.description,fields:function(){return M(e.inputFields)}})}(e)}var a,n,i,r=(0,h.Z)(e)
throw new Error("Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ".concat(r,"."))}(e)})),r=0,t=[].concat(ta,Sa);r<t.length;r++){var l=t[r]
i[l.name]&&(i[l.name]=l)}var u=n.queryType?g(n.queryType):null,c=n.mutationType?g(n.mutationType):null,p=n.subscriptionType?g(n.subscriptionType):null,m=n.directives?n.directives.map((function(e){if(!e.args){var a=(0,h.Z)(e)
throw new Error("Introspection result missing directive args: ".concat(a,"."))}if(!e.locations){var n=(0,h.Z)(e)
throw new Error("Introspection result missing directive locations: ".concat(n,"."))}return new _a({name:e.name,description:e.description,isRepeatable:e.isRepeatable,locations:e.locations.slice(),args:M(e.args)})})):[]
return new Ca({description:n.description,query:u,mutation:c,subscription:p,types:d(i),directives:m,assumeValid:null==a?void 0:a.assumeValid})
function f(e){if(e.kind===va.LIST){var a=e.ofType
if(!a)throw new Error("Decorated type deeper than introspection query.")
return new me(f(a))}if(e.kind===va.NON_NULL){var n=e.ofType
if(!n)throw new Error("Decorated type deeper than introspection query.")
return new fe(ye(f(n)))}return v(e)}function v(e){var a=e.name
if(!a)throw new Error("Unknown type reference: ".concat((0,h.Z)(e),"."))
var n=i[a]
if(!n)throw new Error("Invalid or incomplete schema, unknown type: ".concat(a,". Ensure that a full introspection query is used in order to build a client schema."))
return n}function g(e){return J(v(e))}function k(e){return W(v(e))}function y(e){if(null===e.interfaces&&e.kind===va.INTERFACE)return[]
if(!e.interfaces){var a=(0,h.Z)(e)
throw new Error("Introspection result missing interfaces: ".concat(a,"."))}return e.interfaces.map(k)}function b(e){if(!e.fields)throw new Error("Introspection result missing fields: ".concat((0,h.Z)(e),"."))
return A(e.fields,(function(e){return e.name}),S)}function S(e){var a=f(e.type)
if(!oe(a)){var n=(0,h.Z)(a)
throw new Error("Introspection must provide output type for fields, but received: ".concat(n,"."))}if(!e.args){var i=(0,h.Z)(e)
throw new Error("Introspection result missing field args: ".concat(i,"."))}return{description:e.description,deprecationReason:e.deprecationReason,type:a,args:M(e.args)}}function M(e){return A(e,(function(e){return e.name}),T)}function T(e){var a=f(e.type)
if(!re(a)){var n=(0,h.Z)(a)
throw new Error("Introspection must provide input type for arguments, but received: ".concat(n,"."))}var i=null!=e.defaultValue?Li((0,o.H2)(e.defaultValue),a):void 0
return{description:e.description,type:a,defaultValue:i,deprecationReason:e.deprecationReason}}}var Rr=n(930)
function zr(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function Or(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?zr(Object(n),!0).forEach((function(a){Ir(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):zr(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function Ir(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function Vr(e,a,n){xa(e),null!=a&&a.kind===x.h.DOCUMENT||(0,s.Z)(0,"Must provide valid Document AST."),!0!==(null==n?void 0:n.assumeValid)&&!0!==(null==n?void 0:n.assumeValidSDL)&&function(e,a){var n=ji(e,a)
if(0!==n.length)throw new Error(n.map((function(e){return e.message})).join("\n\n"))}(a,e)
var i=e.toConfig(),r=Gr(i,a,n)
return i===r?e:new Ca(r)}function Gr(e,a,n){for(var i,r,t,o,s,l=[],u=Object.create(null),c=[],p=[],m=0,f=a.definitions;m<f.length;m++){var v=f[m]
if(v.kind===x.h.SCHEMA_DEFINITION)s=v
else if(v.kind===x.h.SCHEMA_EXTENSION)p.push(v)
else if(hn(v))l.push(v)
else if(mn(v)){var g=v.name.value,k=u[g]
u[g]=k?k.concat([v]):[v]}else v.kind===x.h.DIRECTIVE_DEFINITION&&c.push(v)}if(0===Object.keys(u).length&&0===l.length&&0===c.length&&0===p.length&&null==s)return e
for(var y=Object.create(null),S=0,A=e.types;S<A.length;S++){var M=A[S]
y[M.name]=Aa(T=M)||oa(T)?T:G(T)?function(e){for(var a,n=e.toConfig(),i=null!==(a=u[n.name])&&void 0!==a?a:[],r=n.specifiedByUrl,t=0;t<i.length;t++){var o
r=null!==(o=Jr(i[t]))&&void 0!==o?o:r}return new we(Or(Or({},n),{},{specifiedByUrl:r,extensionASTNodes:n.extensionASTNodes.concat(i)}))}(T):F(T)?function(e){var a,n=e.toConfig(),i=null!==(a=u[n.name])&&void 0!==a?a:[]
return new je(Or(Or({},n),{},{interfaces:function(){return[].concat(e.getInterfaces().map(P),J(i))},fields:function(){return Or(Or({},b(n.fields,L)),O(i))},extensionASTNodes:n.extensionASTNodes.concat(i)}))}(T):U(T)?function(e){var a,n=e.toConfig(),i=null!==(a=u[n.name])&&void 0!==a?a:[]
return new xe(Or(Or({},n),{},{interfaces:function(){return[].concat(e.getInterfaces().map(P),J(i))},fields:function(){return Or(Or({},b(n.fields,L)),O(i))},extensionASTNodes:n.extensionASTNodes.concat(i)}))}(T):Z(T)?function(e){var a,n=e.toConfig(),i=null!==(a=u[n.name])&&void 0!==a?a:[]
return new Ce(Or(Or({},n),{},{types:function(){return[].concat(e.getTypes().map(P),W(i))},extensionASTNodes:n.extensionASTNodes.concat(i)}))}(T):Q(T)?function(e){var a,n=e.toConfig(),i=null!==(a=u[e.name])&&void 0!==a?a:[]
return new Re(Or(Or({},n),{},{values:Or(Or({},n.values),H(i)),extensionASTNodes:n.extensionASTNodes.concat(i)}))}(T):$(T)?function(e){var a,n=e.toConfig(),i=null!==(a=u[n.name])&&void 0!==a?a:[]
return new Oe(Or(Or({},n),{},{fields:function(){return Or(Or({},b(n.fields,(function(e){return Or(Or({},e),{},{type:B(e.type)})}))),V(i))},extensionASTNodes:n.extensionASTNodes.concat(i)}))}(T):void(0,K.Z)(0,"Unexpected type: "+(0,h.Z)(T))}for(var T,_=0;_<l.length;_++){var w,j=l[_],E=j.name.value
y[E]=null!==(w=Hr[E])&&void 0!==w?w:q(j)}var N=Or(Or({query:e.query&&P(e.query),mutation:e.mutation&&P(e.mutation),subscription:e.subscription&&P(e.subscription)},s&&C([s])),C(p))
return Or(Or({description:null===(i=s)||void 0===i||null===(r=i.description)||void 0===r?void 0:r.value},N),{},{types:d(y),directives:[].concat(e.directives.map((function(e){var a=e.toConfig()
return new _a(Or(Or({},a),{},{args:b(a.args,D)}))})),c.map((function(e){var a=e.locations.map((function(e){return e.value}))
return new _a({name:e.name.value,description:Ur(e,n),locations:a,isRepeatable:e.repeatable,args:I(e.arguments),astNode:e})}))),extensions:void 0,astNode:null!==(t=s)&&void 0!==t?t:e.astNode,extensionASTNodes:e.extensionASTNodes.concat(p),assumeValid:null!==(o=null==n?void 0:n.assumeValid)&&void 0!==o&&o})
function B(e){return ee(e)?new me(B(e.ofType)):ne(e)?new fe(B(e.ofType)):P(e)}function P(e){return y[e.name]}function L(e){return Or(Or({},e),{},{type:B(e.type),args:b(e.args,D)})}function D(e){return Or(Or({},e),{},{type:B(e.type)})}function C(e){for(var a={},n=0;n<e.length;n++)for(var i,r=null!==(i=e[n].operationTypes)&&void 0!==i?i:[],t=0;t<r.length;t++){var o=r[t]
a[o.operation]=R(o.type)}return a}function R(e){var a,n=e.name.value,i=null!==(a=Hr[n])&&void 0!==a?a:y[n]
if(void 0===i)throw new Error('Unknown type: "'.concat(n,'".'))
return i}function z(e){return e.kind===x.h.LIST_TYPE?new me(z(e.type)):e.kind===x.h.NON_NULL_TYPE?new fe(z(e.type)):R(e)}function O(e){for(var a=Object.create(null),i=0;i<e.length;i++)for(var r,t=null!==(r=e[i].fields)&&void 0!==r?r:[],o=0;o<t.length;o++){var s=t[o]
a[s.name.value]={type:z(s.type),description:Ur(s,n),args:I(s.arguments),deprecationReason:Fr(s),astNode:s}}return a}function I(e){for(var a=null!=e?e:[],i=Object.create(null),r=0;r<a.length;r++){var t=a[r],o=z(t.type)
i[t.name.value]={type:o,description:Ur(t,n),defaultValue:Li(t.defaultValue,o),deprecationReason:Fr(t),astNode:t}}return i}function V(e){for(var a=Object.create(null),i=0;i<e.length;i++)for(var r,t=null!==(r=e[i].fields)&&void 0!==r?r:[],o=0;o<t.length;o++){var s=t[o],l=z(s.type)
a[s.name.value]={type:l,description:Ur(s,n),defaultValue:Li(s.defaultValue,l),deprecationReason:Fr(s),astNode:s}}return a}function H(e){for(var a=Object.create(null),i=0;i<e.length;i++)for(var r,t=null!==(r=e[i].values)&&void 0!==r?r:[],o=0;o<t.length;o++){var s=t[o]
a[s.name.value]={description:Ur(s,n),deprecationReason:Fr(s),astNode:s}}return a}function J(e){for(var a=[],n=0;n<e.length;n++)for(var i,r=null!==(i=e[n].interfaces)&&void 0!==i?i:[],t=0;t<r.length;t++){var o=r[t]
a.push(R(o))}return a}function W(e){for(var a=[],n=0;n<e.length;n++)for(var i,r=null!==(i=e[n].types)&&void 0!==i?i:[],t=0;t<r.length;t++){var o=r[t]
a.push(R(o))}return a}function q(e){var a,i=e.name.value,r=Ur(e,n),t=null!==(a=u[i])&&void 0!==a?a:[]
switch(e.kind){case x.h.OBJECT_TYPE_DEFINITION:var o=t,s=[e].concat(o)
return new je({name:i,description:r,interfaces:function(){return J(s)},fields:function(){return O(s)},astNode:e,extensionASTNodes:o})
case x.h.INTERFACE_TYPE_DEFINITION:var l=t,c=[e].concat(l)
return new xe({name:i,description:r,interfaces:function(){return J(c)},fields:function(){return O(c)},astNode:e,extensionASTNodes:l})
case x.h.ENUM_TYPE_DEFINITION:var d=t,p=[e].concat(d)
return new Re({name:i,description:r,values:H(p),astNode:e,extensionASTNodes:d})
case x.h.UNION_TYPE_DEFINITION:var m=t,f=[e].concat(m)
return new Ce({name:i,description:r,types:function(){return W(f)},astNode:e,extensionASTNodes:m})
case x.h.SCALAR_TYPE_DEFINITION:var v=t
return new we({name:i,description:r,specifiedByUrl:Jr(e),astNode:e,extensionASTNodes:v})
case x.h.INPUT_OBJECT_TYPE_DEFINITION:var g=t,k=[e].concat(g)
return new Oe({name:i,description:r,fields:function(){return V(k)},astNode:e,extensionASTNodes:g})}(0,K.Z)(0,"Unexpected type definition node: "+(0,h.Z)(e))}}var Hr=y(ta.concat(Sa),(function(e){return e.name}))
function Fr(e){var a=zi(Na,e)
return null==a?void 0:a.reason}function Jr(e){var a=zi(Ba,e)
return null==a?void 0:a.url}function Ur(e,a){if(e.description)return e.description.value
if(!0===(null==a?void 0:a.commentDescriptions)){var n=function(e){var a=e.loc
if(a){for(var n=[],i=a.startToken.prev;null!=i&&i.kind===gr.T.COMMENT&&i.next&&i.prev&&i.line+1===i.next.line&&i.line!==i.prev.line;){var r=String(i.value)
n.push(r),i=i.prev}return n.length>0?n.reverse().join("\n"):void 0}}(e)
if(void 0!==n)return(0,Rr.W7)("\n"+n)}}function Wr(e,a){null!=e&&e.kind===x.h.DOCUMENT||(0,s.Z)(0,"Must provide valid Document AST."),!0!==(null==a?void 0:a.assumeValid)&&!0!==(null==a?void 0:a.assumeValidSDL)&&function(e){var a=ji(e)
if(0!==a.length)throw new Error(a.map((function(e){return e.message})).join("\n\n"))}(e)
var n=Gr({description:void 0,types:[],directives:[],extensions:void 0,extensionASTNodes:[],assumeValid:!1},e,a)
if(null==n.astNode)for(var i=0,r=n.types;i<r.length;i++){var t=r[i]
switch(t.name){case"Query":n.query=t
break
case"Mutation":n.mutation=t
break
case"Subscription":n.subscription=t}}for(var o=n.directives,l=function(e){var a=Pa[e]
o.every((function(e){return e.name!==a.name}))&&o.push(a)},u=0;u<Pa.length;u++)l(u)
return new Ca(n)}function Zr(e,a){return Wr((0,o.Qc)(e,{noLocation:null==a?void 0:a.noLocation,allowLegacySDLEmptyFields:null==a?void 0:a.allowLegacySDLEmptyFields,allowLegacySDLImplementsInterfaces:null==a?void 0:a.allowLegacySDLImplementsInterfaces,experimentalFragmentVariables:null==a?void 0:a.experimentalFragmentVariables}),{commentDescriptions:null==a?void 0:a.commentDescriptions,assumeValidSDL:null==a?void 0:a.assumeValidSDL,assumeValid:null==a?void 0:a.assumeValid})}function qr(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function Qr(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?qr(Object(n),!0).forEach((function(a){Yr(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):qr(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function Yr(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function $r(e){var a=e.toConfig(),n=A(et(a.types),(function(e){return e.name}),(function(e){if(G(e)||Aa(e))return e
if(F(e)){var a=e.toConfig()
return new je(Qr(Qr({},a),{},{interfaces:function(){return l(a.interfaces)},fields:function(){return s(a.fields)}}))}if(U(e)){var n=e.toConfig()
return new xe(Qr(Qr({},n),{},{interfaces:function(){return l(n.interfaces)},fields:function(){return s(n.fields)}}))}if(Z(e)){var r=e.toConfig()
return new Ce(Qr(Qr({},r),{},{types:function(){return l(r.types)}}))}if(Q(e)){var t=e.toConfig()
return new Re(Qr(Qr({},t),{},{values:Xr(t.values)}))}if($(e)){var o=e.toConfig()
return new Oe(Qr(Qr({},o),{},{fields:function(){return Xr(o.fields,(function(e){return Qr(Qr({},e),{},{type:i(e.type)})}))}}))}(0,K.Z)(0,"Unexpected type: "+(0,h.Z)(e))}))
return new Ca(Qr(Qr({},a),{},{types:d(n),directives:et(a.directives).map((function(e){var a=e.toConfig()
return new _a(Qr(Qr({},a),{},{locations:at(a.locations,(function(e){return e})),args:o(a.args)}))})),query:t(a.query),mutation:t(a.mutation),subscription:t(a.subscription)}))
function i(e){return ee(e)?new me(i(e.ofType)):ne(e)?new fe(i(e.ofType)):r(e)}function r(e){return n[e.name]}function t(e){return e&&r(e)}function o(e){return Xr(e,(function(e){return Qr(Qr({},e),{},{type:i(e.type)})}))}function s(e){return Xr(e,(function(e){return Qr(Qr({},e),{},{type:i(e.type),args:o(e.args)})}))}function l(e){return et(e).map(r)}}function Xr(e,a){for(var n=Object.create(null),i=at(Object.keys(e),(function(e){return e})),r=0;r<i.length;r++){var t=i[r],o=e[t]
n[t]=a?a(o):o}return n}function et(e){return at(e,(function(e){return e.name}))}function at(e,a){return e.slice().sort((function(e,n){return E(a(e),a(n))}))}function nt(e,a){return tt(e,(function(e){return!La(e)}),rt,a)}function it(e,a){return tt(e,La,Aa,a)}function rt(e){return!oa(e)&&!Aa(e)}function tt(e,a,n,i){var r=e.getDirectives().filter(a),t=d(e.getTypeMap()).filter(n)
return[ot(e)].concat(r.map((function(e){return function(e,a){return mt(a,e)+"directive @"+e.name+dt(a,e.args)+(e.isRepeatable?" repeatable":"")+" on "+e.locations.join(" | ")}(e,i)})),t.map((function(e){return st(e,i)}))).filter(Boolean).join("\n\n")+"\n"}function ot(e){if(null!=e.description||!function(e){var a=e.getQueryType()
if(a&&"Query"!==a.name)return!1
var n=e.getMutationType()
if(n&&"Mutation"!==n.name)return!1
var i=e.getSubscriptionType()
return!i||"Subscription"===i.name}(e)){var a=[],n=e.getQueryType()
n&&a.push("  query: ".concat(n.name))
var i=e.getMutationType()
i&&a.push("  mutation: ".concat(i.name))
var r=e.getSubscriptionType()
return r&&a.push("  subscription: ".concat(r.name)),mt({},e)+"schema {\n".concat(a.join("\n"),"\n}")}}function st(e,a){return G(e)?function(e,a){return mt(a,e)+"scalar ".concat(e.name)+function(e){if(null==e.specifiedByUrl)return""
var a=sa(e.specifiedByUrl,na)
return a||(0,K.Z)(0,"Unexpected null value returned from `astFromValue` for specifiedByUrl")," @specifiedBy(url: "+(0,C.S)(a)+")"}(e)}(e,a):F(e)?function(e,a){return mt(a,e)+"type ".concat(e.name)+lt(e)+ut(a,e)}(e,a):U(e)?function(e,a){return mt(a,e)+"interface ".concat(e.name)+lt(e)+ut(a,e)}(e,a):Z(e)?function(e,a){var n=e.getTypes(),i=n.length?" = "+n.join(" | "):""
return mt(a,e)+"union "+e.name+i}(e,a):Q(e)?function(e,a){var n=e.getValues().map((function(e,n){return mt(a,e,"  ",!n)+"  "+e.name+pt(e.deprecationReason)}))
return mt(a,e)+"enum ".concat(e.name)+ct(n)}(e,a):$(e)?function(e,a){var n=d(e.getFields()).map((function(e,n){return mt(a,e,"  ",!n)+"  "+ht(e)}))
return mt(a,e)+"input ".concat(e.name)+ct(n)}(e,a):void(0,K.Z)(0,"Unexpected type: "+(0,h.Z)(e))}function lt(e){var a=e.getInterfaces()
return a.length?" implements "+a.map((function(e){return e.name})).join(" & "):""}function ut(e,a){return ct(d(a.getFields()).map((function(a,n){return mt(e,a,"  ",!n)+"  "+a.name+dt(e,a.args,"  ")+": "+String(a.type)+pt(a.deprecationReason)})))}function ct(e){return 0!==e.length?" {\n"+e.join("\n")+"\n}":""}function dt(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:""
return 0===a.length?"":a.every((function(e){return!e.description}))?"("+a.map(ht).join(", ")+")":"(\n"+a.map((function(a,i){return mt(e,a,"  "+n,!i)+"  "+n+ht(a)})).join("\n")+"\n"+n+")"}function ht(e){var a=sa(e.defaultValue,e.type),n=e.name+": "+String(e.type)
return a&&(n+=" = ".concat((0,C.S)(a))),n+pt(e.deprecationReason)}function pt(e){if(null==e)return""
var a=sa(e,na)
return a&&e!==Ea?" @deprecated(reason: "+(0,C.S)(a)+")":" @deprecated"}function mt(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=a.description
if(null==r)return""
if(!0===(null==e?void 0:e.commentDescriptions))return ft(r,n,i)
var t=r.length>70,o=(0,Rr.LZ)(r,"",t),s=n&&!i?"\n"+n:n
return s+o.replace(/\n/g,"\n"+n)+"\n"}function ft(e,a,n){return(a&&!n?"\n":"")+e.split("\n").map((function(e){return a+(""!==e?"# "+e:"#")})).join("\n")+"\n"}function vt(e){for(var a=[],n=0;n<e.length;n++){var i=e[n]
a=a.concat(i.definitions)}return{kind:"Document",definitions:a}}function gt(e){for(var a=[],n=Object.create(null),i=0,r=e.definitions;i<r.length;i++){var t=r[i]
switch(t.kind){case x.h.OPERATION_DEFINITION:a.push(t)
break
case x.h.FRAGMENT_DEFINITION:n[t.name.value]=yt(t.selectionSet)}}for(var o=Object.create(null),s=function(i){for(var r=a[i],t=new Set,s=0,l=yt(r.selectionSet);s<l.length;s++){var u=l[s]
kt(t,n,u)}var c=r.name?r.name.value:""
o[c]={kind:x.h.DOCUMENT,definitions:e.definitions.filter((function(e){return e===r||e.kind===x.h.FRAGMENT_DEFINITION&&t.has(e.name.value)}))}},l=0;l<a.length;l++)s(l)
return o}function kt(e,a,n){if(!e.has(n)){e.add(n)
var i=a[n]
if(void 0!==i)for(var r=0;r<i.length;r++)kt(e,a,i[r])}}function yt(e){var a=[]
return(0,u.Vn)(e,{FragmentSpread:function(e){a.push(e.name.value)}}),a}function bt(e){for(var a=(0,pr.T)(e)?e:new pr.H(e),n=a.body,i=new vr.h(a),r="",t=!1;i.advance().kind!==gr.T.EOF;){var o=i.token,s=o.kind,l=!(0,vr.u)(o.kind)
t&&(l||o.kind===gr.T.SPREAD)&&(r+=" ")
var u=n.slice(o.start,o.end)
s===gr.T.BLOCK_STRING?r+=St(u):r+=u,t=l}return r}function St(e){var a=e.slice(3,-3),n=(0,Rr.W7)(a);(0,Rr.Z2)(n)>0&&(n="\n"+n)
var i=n[n.length-1]
return('"'===i&&'\\"""'!==n.slice(-4)||"\\"===i)&&(n+="\n"),'"""'+n+'"""'}function At(e,a){var n=Object.keys(e)
if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e)
a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function Mt(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{}
a%2?At(Object(n),!0).forEach((function(a){Tt(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):At(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function Tt(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}var _t=Object.freeze({TYPE_REMOVED:"TYPE_REMOVED",TYPE_CHANGED_KIND:"TYPE_CHANGED_KIND",TYPE_REMOVED_FROM_UNION:"TYPE_REMOVED_FROM_UNION",VALUE_REMOVED_FROM_ENUM:"VALUE_REMOVED_FROM_ENUM",REQUIRED_INPUT_FIELD_ADDED:"REQUIRED_INPUT_FIELD_ADDED",IMPLEMENTED_INTERFACE_REMOVED:"IMPLEMENTED_INTERFACE_REMOVED",FIELD_REMOVED:"FIELD_REMOVED",FIELD_CHANGED_KIND:"FIELD_CHANGED_KIND",REQUIRED_ARG_ADDED:"REQUIRED_ARG_ADDED",ARG_REMOVED:"ARG_REMOVED",ARG_CHANGED_KIND:"ARG_CHANGED_KIND",DIRECTIVE_REMOVED:"DIRECTIVE_REMOVED",DIRECTIVE_ARG_REMOVED:"DIRECTIVE_ARG_REMOVED",REQUIRED_DIRECTIVE_ARG_ADDED:"REQUIRED_DIRECTIVE_ARG_ADDED",DIRECTIVE_REPEATABLE_REMOVED:"DIRECTIVE_REPEATABLE_REMOVED",DIRECTIVE_LOCATION_REMOVED:"DIRECTIVE_LOCATION_REMOVED"}),wt=Object.freeze({VALUE_ADDED_TO_ENUM:"VALUE_ADDED_TO_ENUM",TYPE_ADDED_TO_UNION:"TYPE_ADDED_TO_UNION",OPTIONAL_INPUT_FIELD_ADDED:"OPTIONAL_INPUT_FIELD_ADDED",OPTIONAL_ARG_ADDED:"OPTIONAL_ARG_ADDED",IMPLEMENTED_INTERFACE_ADDED:"IMPLEMENTED_INTERFACE_ADDED",ARG_DEFAULT_VALUE_CHANGE:"ARG_DEFAULT_VALUE_CHANGE"})
function jt(e,a){return Nt(e,a).filter((function(e){return e.type in _t}))}function Et(e,a){return Nt(e,a).filter((function(e){return e.type in wt}))}function Nt(e,a){return[].concat(function(e,a){for(var n=[],i=It(d(e.getTypeMap()),d(a.getTypeMap())),r=0,t=i.removed;r<t.length;r++){var o=t[r]
n.push({type:_t.TYPE_REMOVED,description:oa(o)?"Standard scalar ".concat(o.name," was removed because it is not referenced anymore."):"".concat(o.name," was removed.")})}for(var s=0,l=i.persisted;s<l.length;s++){var u=l[s],c=u[0],h=u[1]
Q(c)&&Q(h)?n.push.apply(n,Lt(c,h)):Z(c)&&Z(h)?n.push.apply(n,Pt(c,h)):$(c)&&$(h)?n.push.apply(n,Bt(c,h)):F(c)&&F(h)||U(c)&&U(h)?n.push.apply(n,xt(c,h).concat(Dt(c,h))):c.constructor!==h.constructor&&n.push({type:_t.TYPE_CHANGED_KIND,description:"".concat(c.name," changed from ")+"".concat(zt(c)," to ").concat(zt(h),".")})}return n}(e,a),function(e,a){for(var n=[],i=It(e.getDirectives(),a.getDirectives()),r=0,t=i.removed;r<t.length;r++){var o=t[r]
n.push({type:_t.DIRECTIVE_REMOVED,description:"".concat(o.name," was removed.")})}for(var s=0,l=i.persisted;s<l.length;s++){for(var u=l[s],c=u[0],d=u[1],h=It(c.args,d.args),p=0,m=h.added;p<m.length;p++){var f=m[p]
De(f)&&n.push({type:_t.REQUIRED_DIRECTIVE_ARG_ADDED,description:"A required arg ".concat(f.name," on directive ").concat(c.name," was added.")})}for(var v=0,g=h.removed;v<g.length;v++){var k=g[v]
n.push({type:_t.DIRECTIVE_ARG_REMOVED,description:"".concat(k.name," was removed from ").concat(c.name,".")})}c.isRepeatable&&!d.isRepeatable&&n.push({type:_t.DIRECTIVE_REPEATABLE_REMOVED,description:"Repeatable flag was removed from ".concat(c.name,".")})
for(var y=0,b=c.locations;y<b.length;y++){var S=b[y];-1===d.locations.indexOf(S)&&n.push({type:_t.DIRECTIVE_LOCATION_REMOVED,description:"".concat(S," was removed from ").concat(c.name,".")})}}return n}(e,a))}function Bt(e,a){for(var n=[],i=It(d(e.getFields()),d(a.getFields())),r=0,t=i.added;r<t.length;r++){var o=t[r]
Ve(o)?n.push({type:_t.REQUIRED_INPUT_FIELD_ADDED,description:"A required field ".concat(o.name," on input type ").concat(e.name," was added.")}):n.push({type:wt.OPTIONAL_INPUT_FIELD_ADDED,description:"An optional field ".concat(o.name," on input type ").concat(e.name," was added.")})}for(var s=0,l=i.removed;s<l.length;s++){var u=l[s]
n.push({type:_t.FIELD_REMOVED,description:"".concat(e.name,".").concat(u.name," was removed.")})}for(var c=0,h=i.persisted;c<h.length;c++){var p=h[c],m=p[0],f=p[1]
Rt(m.type,f.type)||n.push({type:_t.FIELD_CHANGED_KIND,description:"".concat(e.name,".").concat(m.name," changed type from ")+"".concat(String(m.type)," to ").concat(String(f.type),".")})}return n}function Pt(e,a){for(var n=[],i=It(e.getTypes(),a.getTypes()),r=0,t=i.added;r<t.length;r++){var o=t[r]
n.push({type:wt.TYPE_ADDED_TO_UNION,description:"".concat(o.name," was added to union type ").concat(e.name,".")})}for(var s=0,l=i.removed;s<l.length;s++){var u=l[s]
n.push({type:_t.TYPE_REMOVED_FROM_UNION,description:"".concat(u.name," was removed from union type ").concat(e.name,".")})}return n}function Lt(e,a){for(var n=[],i=It(e.getValues(),a.getValues()),r=0,t=i.added;r<t.length;r++){var o=t[r]
n.push({type:wt.VALUE_ADDED_TO_ENUM,description:"".concat(o.name," was added to enum type ").concat(e.name,".")})}for(var s=0,l=i.removed;s<l.length;s++){var u=l[s]
n.push({type:_t.VALUE_REMOVED_FROM_ENUM,description:"".concat(u.name," was removed from enum type ").concat(e.name,".")})}return n}function Dt(e,a){for(var n=[],i=It(e.getInterfaces(),a.getInterfaces()),r=0,t=i.added;r<t.length;r++){var o=t[r]
n.push({type:wt.IMPLEMENTED_INTERFACE_ADDED,description:"".concat(o.name," added to interfaces implemented by ").concat(e.name,".")})}for(var s=0,l=i.removed;s<l.length;s++){var u=l[s]
n.push({type:_t.IMPLEMENTED_INTERFACE_REMOVED,description:"".concat(e.name," no longer implements interface ").concat(u.name,".")})}return n}function xt(e,a){for(var n=[],i=It(d(e.getFields()),d(a.getFields())),r=0,t=i.removed;r<t.length;r++){var o=t[r]
n.push({type:_t.FIELD_REMOVED,description:"".concat(e.name,".").concat(o.name," was removed.")})}for(var s=0,l=i.persisted;s<l.length;s++){var u=l[s],c=u[0],h=u[1]
n.push.apply(n,Ct(e,c,h)),Kt(c.type,h.type)||n.push({type:_t.FIELD_CHANGED_KIND,description:"".concat(e.name,".").concat(c.name," changed type from ")+"".concat(String(c.type)," to ").concat(String(h.type),".")})}return n}function Ct(e,a,n){for(var i=[],r=It(a.args,n.args),t=0,o=r.removed;t<o.length;t++){var s=o[t]
i.push({type:_t.ARG_REMOVED,description:"".concat(e.name,".").concat(a.name," arg ").concat(s.name," was removed.")})}for(var l=0,u=r.persisted;l<u.length;l++){var c=u[l],d=c[0],h=c[1]
if(Rt(d.type,h.type)){if(void 0!==d.defaultValue)if(void 0===h.defaultValue)i.push({type:wt.ARG_DEFAULT_VALUE_CHANGE,description:"".concat(e.name,".").concat(a.name," arg ").concat(d.name," defaultValue was removed.")})
else{var p=Ot(d.defaultValue,d.type),m=Ot(h.defaultValue,h.type)
p!==m&&i.push({type:wt.ARG_DEFAULT_VALUE_CHANGE,description:"".concat(e.name,".").concat(a.name," arg ").concat(d.name," has changed defaultValue from ").concat(p," to ").concat(m,".")})}}else i.push({type:_t.ARG_CHANGED_KIND,description:"".concat(e.name,".").concat(a.name," arg ").concat(d.name," has changed type from ")+"".concat(String(d.type)," to ").concat(String(h.type),".")})}for(var f=0,v=r.added;f<v.length;f++){var g=v[f]
De(g)?i.push({type:_t.REQUIRED_ARG_ADDED,description:"A required arg ".concat(g.name," on ").concat(e.name,".").concat(a.name," was added.")}):i.push({type:wt.OPTIONAL_ARG_ADDED,description:"An optional arg ".concat(g.name," on ").concat(e.name,".").concat(a.name," was added.")})}return i}function Kt(e,a){return ee(e)?ee(a)&&Kt(e.ofType,a.ofType)||ne(a)&&Kt(e,a.ofType):ne(e)?ne(a)&&Kt(e.ofType,a.ofType):Se(a)&&e.name===a.name||ne(a)&&Kt(e,a.ofType)}function Rt(e,a){return ee(e)?ee(a)&&Rt(e.ofType,a.ofType):ne(e)?ne(a)&&Rt(e.ofType,a.ofType)||!ne(a)&&Rt(e.ofType,a):Se(a)&&e.name===a.name}function zt(e){return G(e)?"a Scalar type":F(e)?"an Object type":U(e)?"an Interface type":Z(e)?"a Union type":Q(e)?"an Enum type":$(e)?"an Input type":void(0,K.Z)(0,"Unexpected type: "+(0,h.Z)(e))}function Ot(e,a){var n=sa(e,a)
null!=n||(0,K.Z)(0)
var i=(0,u.Vn)(n,{ObjectValue:function(e){var a=[].concat(e.fields)
return a.sort((function(e,a){return E(e.name.value,a.name.value)})),Mt(Mt({},e),{},{fields:a})}})
return(0,C.S)(i)}function It(e,a){for(var n=[],i=[],r=[],t=y(e,(function(e){return e.name})),o=y(a,(function(e){return e.name})),s=0;s<e.length;s++){var l=e[s],u=o[l.name]
void 0===u?i.push(l):r.push([l,u])}for(var c=0;c<a.length;c++){var d=a[c]
void 0===t[d.name]&&n.push(d)}return{added:n,persisted:r,removed:i}}function Vt(e,a){return wi(e,a,[_r])}},237:(e,a,n)=>{"use strict"
n.d(a,{Z:()=>t})
var i=n(3325),r=n(1915)
function t(e){var a=e.prototype.toJSON
"function"==typeof a||(0,i.Z)(0),e.prototype.inspect=a,r.Z&&(e.prototype[r.Z]=a)}},7431:(e,a,n)=>{"use strict"
function i(e,a){if(!Boolean(e))throw new Error(a)}n.d(a,{Z:()=>i})},9613:(e,a,n)=>{"use strict"
n.d(a,{Z:()=>t})
var i=n(1915)
function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function t(e){return o(e,[])}function o(e,a){switch(r(e)){case"string":return JSON.stringify(e)
case"function":return e.name?"[function ".concat(e.name,"]"):"[function]"
case"object":return null===e?"null":function(e,a){if(-1!==a.indexOf(e))return"[Circular]"
var n=[].concat(a,[e]),r=function(e){var a=e[String(i.Z)]
return"function"==typeof a?a:"function"==typeof e.inspect?e.inspect:void 0}(e)
if(void 0!==r){var t=r.call(e)
if(t!==e)return"string"==typeof t?t:o(t,n)}else if(Array.isArray(e))return function(e,a){if(0===e.length)return"[]"
if(a.length>2)return"[Array]"
for(var n=Math.min(10,e.length),i=e.length-n,r=[],t=0;t<n;++t)r.push(o(e[t],a))
return 1===i?r.push("... 1 more item"):i>1&&r.push("... ".concat(i," more items")),"["+r.join(", ")+"]"}(e,n)
return function(e,a){var n=Object.keys(e)
return 0===n.length?"{}":a.length>2?"["+function(e){var a=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"")
if("Object"===a&&"function"==typeof e.constructor){var n=e.constructor.name
if("string"==typeof n&&""!==n)return n}return a}(e)+"]":"{ "+n.map((function(n){return n+": "+o(e[n],a)})).join(", ")+" }"}(e,n)}(e,a)
default:return String(e)}}},1327:(e,a,n)=>{"use strict"
n.d(a,{Z:()=>i})
const i=function(e,a){return e instanceof a}},3325:(e,a,n)=>{"use strict"
function i(e,a){if(!Boolean(e))throw new Error(null!=a?a:"Unexpected invariant triggered.")}n.d(a,{Z:()=>i})},1886:(e,a,n)=>{"use strict"
function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function r(e){return"object"==i(e)&&null!==e}n.d(a,{Z:()=>r})},1915:(e,a,n)=>{"use strict"
n.d(a,{Z:()=>i})
const i="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):void 0},5132:(e,a,n)=>{"use strict"
n.d(a,{Ye:()=>r,WU:()=>t,UG:()=>o})
var i=n(237),r=function(){function e(e,a,n){this.start=e.start,this.end=a.end,this.startToken=e,this.endToken=a,this.source=n}return e.prototype.toJSON=function(){return{start:this.start,end:this.end}},e}();(0,i.Z)(r)
var t=function(){function e(e,a,n,i,r,t,o){this.kind=e,this.start=a,this.end=n,this.line=i,this.column=r,this.value=o,this.prev=t,this.next=null}return e.prototype.toJSON=function(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}},e}()
function o(e){return null!=e&&"string"==typeof e.kind}(0,i.Z)(t)},930:(e,a,n)=>{"use strict"
function i(e){var a=e.split(/\r\n|[\n\r]/g),n=t(e)
if(0!==n)for(var i=1;i<a.length;i++)a[i]=a[i].slice(n)
for(var o=0;o<a.length&&r(a[o]);)++o
for(var s=a.length;s>o&&r(a[s-1]);)--s
return a.slice(o,s).join("\n")}function r(e){for(var a=0;a<e.length;++a)if(" "!==e[a]&&"\t"!==e[a])return!1
return!0}function t(e){for(var a,n=!0,i=!0,r=0,t=null,o=0;o<e.length;++o)switch(e.charCodeAt(o)){case 13:10===e.charCodeAt(o+1)&&++o
case 10:n=!1,i=!0,r=0
break
case 9:case 32:++r
break
default:i&&!n&&(null===t||r<t)&&(t=r),i=!1}return null!==(a=t)&&void 0!==a?a:0}function o(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=-1===e.indexOf("\n"),r=" "===e[0]||"\t"===e[0],t='"'===e[e.length-1],o="\\"===e[e.length-1],s=!i||t||o||n,l=""
return!s||i&&r||(l+="\n"+a),l+=a?e.replace(/\n/g,"\n"+a):e,s&&(l+="\n"),'"""'+l.replace(/"""/g,'\\"""')+'"""'}n.d(a,{W7:()=>i,Z2:()=>t,LZ:()=>o})},5932:(e,a,n)=>{"use strict"
n.d(a,{B:()=>i})
var i=Object.freeze({QUERY:"QUERY",MUTATION:"MUTATION",SUBSCRIPTION:"SUBSCRIPTION",FIELD:"FIELD",FRAGMENT_DEFINITION:"FRAGMENT_DEFINITION",FRAGMENT_SPREAD:"FRAGMENT_SPREAD",INLINE_FRAGMENT:"INLINE_FRAGMENT",VARIABLE_DEFINITION:"VARIABLE_DEFINITION",SCHEMA:"SCHEMA",SCALAR:"SCALAR",OBJECT:"OBJECT",FIELD_DEFINITION:"FIELD_DEFINITION",ARGUMENT_DEFINITION:"ARGUMENT_DEFINITION",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",ENUM_VALUE:"ENUM_VALUE",INPUT_OBJECT:"INPUT_OBJECT",INPUT_FIELD_DEFINITION:"INPUT_FIELD_DEFINITION"})},4627:(e,a,n)=>{"use strict"
n.d(a,{h:()=>i})
var i=Object.freeze({NAME:"Name",DOCUMENT:"Document",OPERATION_DEFINITION:"OperationDefinition",VARIABLE_DEFINITION:"VariableDefinition",SELECTION_SET:"SelectionSet",FIELD:"Field",ARGUMENT:"Argument",FRAGMENT_SPREAD:"FragmentSpread",INLINE_FRAGMENT:"InlineFragment",FRAGMENT_DEFINITION:"FragmentDefinition",VARIABLE:"Variable",INT:"IntValue",FLOAT:"FloatValue",STRING:"StringValue",BOOLEAN:"BooleanValue",NULL:"NullValue",ENUM:"EnumValue",LIST:"ListValue",OBJECT:"ObjectValue",OBJECT_FIELD:"ObjectField",DIRECTIVE:"Directive",NAMED_TYPE:"NamedType",LIST_TYPE:"ListType",NON_NULL_TYPE:"NonNullType",SCHEMA_DEFINITION:"SchemaDefinition",OPERATION_TYPE_DEFINITION:"OperationTypeDefinition",SCALAR_TYPE_DEFINITION:"ScalarTypeDefinition",OBJECT_TYPE_DEFINITION:"ObjectTypeDefinition",FIELD_DEFINITION:"FieldDefinition",INPUT_VALUE_DEFINITION:"InputValueDefinition",INTERFACE_TYPE_DEFINITION:"InterfaceTypeDefinition",UNION_TYPE_DEFINITION:"UnionTypeDefinition",ENUM_TYPE_DEFINITION:"EnumTypeDefinition",ENUM_VALUE_DEFINITION:"EnumValueDefinition",INPUT_OBJECT_TYPE_DEFINITION:"InputObjectTypeDefinition",DIRECTIVE_DEFINITION:"DirectiveDefinition",SCHEMA_EXTENSION:"SchemaExtension",SCALAR_TYPE_EXTENSION:"ScalarTypeExtension",OBJECT_TYPE_EXTENSION:"ObjectTypeExtension",INTERFACE_TYPE_EXTENSION:"InterfaceTypeExtension",UNION_TYPE_EXTENSION:"UnionTypeExtension",ENUM_TYPE_EXTENSION:"EnumTypeExtension",INPUT_OBJECT_TYPE_EXTENSION:"InputObjectTypeExtension"})},9112:(e,a,n)=>{"use strict"
n.d(a,{h:()=>s,u:()=>l})
var i=n(1083),r=n(5132),t=n(244),o=n(930),s=function(){function e(e){var a=new r.WU(t.T.SOF,0,0,0,0,null)
this.source=e,this.lastToken=a,this.token=a,this.line=1,this.lineStart=0}var a=e.prototype
return a.advance=function(){return this.lastToken=this.token,this.token=this.lookahead()},a.lookahead=function(){var e=this.token
if(e.kind!==t.T.EOF)do{var a
e=null!==(a=e.next)&&void 0!==a?a:e.next=c(this,e)}while(e.kind===t.T.COMMENT)
return e},e}()
function l(e){return e===t.T.BANG||e===t.T.DOLLAR||e===t.T.AMP||e===t.T.PAREN_L||e===t.T.PAREN_R||e===t.T.SPREAD||e===t.T.COLON||e===t.T.EQUALS||e===t.T.AT||e===t.T.BRACKET_L||e===t.T.BRACKET_R||e===t.T.BRACE_L||e===t.T.PIPE||e===t.T.BRACE_R}function u(e){return isNaN(e)?t.T.EOF:e<127?JSON.stringify(String.fromCharCode(e)):'"\\u'.concat(("00"+e.toString(16).toUpperCase()).slice(-4),'"')}function c(e,a){for(var n=e.source,o=n.body,s=o.length,l=a.end;l<s;){var u=o.charCodeAt(l),c=e.line,m=1+l-e.lineStart
switch(u){case 65279:case 9:case 32:case 44:++l
continue
case 10:++l,++e.line,e.lineStart=l
continue
case 13:10===o.charCodeAt(l+1)?l+=2:++l,++e.line,e.lineStart=l
continue
case 33:return new r.WU(t.T.BANG,l,l+1,c,m,a)
case 35:return h(n,l,c,m,a)
case 36:return new r.WU(t.T.DOLLAR,l,l+1,c,m,a)
case 38:return new r.WU(t.T.AMP,l,l+1,c,m,a)
case 40:return new r.WU(t.T.PAREN_L,l,l+1,c,m,a)
case 41:return new r.WU(t.T.PAREN_R,l,l+1,c,m,a)
case 46:if(46===o.charCodeAt(l+1)&&46===o.charCodeAt(l+2))return new r.WU(t.T.SPREAD,l,l+3,c,m,a)
break
case 58:return new r.WU(t.T.COLON,l,l+1,c,m,a)
case 61:return new r.WU(t.T.EQUALS,l,l+1,c,m,a)
case 64:return new r.WU(t.T.AT,l,l+1,c,m,a)
case 91:return new r.WU(t.T.BRACKET_L,l,l+1,c,m,a)
case 93:return new r.WU(t.T.BRACKET_R,l,l+1,c,m,a)
case 123:return new r.WU(t.T.BRACE_L,l,l+1,c,m,a)
case 124:return new r.WU(t.T.PIPE,l,l+1,c,m,a)
case 125:return new r.WU(t.T.BRACE_R,l,l+1,c,m,a)
case 34:return 34===o.charCodeAt(l+1)&&34===o.charCodeAt(l+2)?v(n,l,c,m,a,e):f(n,l,c,m,a)
case 45:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return p(n,l,u,c,m,a)
case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 82:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 95:case 97:case 98:case 99:case 100:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 108:case 109:case 110:case 111:case 112:case 113:case 114:case 115:case 116:case 117:case 118:case 119:case 120:case 121:case 122:return k(n,l,c,m,a)}throw(0,i.h)(n,l,d(u))}var g=e.line,y=1+l-e.lineStart
return new r.WU(t.T.EOF,s,s,g,y,a)}function d(e){return e<32&&9!==e&&10!==e&&13!==e?"Cannot contain the invalid character ".concat(u(e),"."):39===e?"Unexpected single quote character ('), did you mean to use a double quote (\")?":"Cannot parse the unexpected character ".concat(u(e),".")}function h(e,a,n,i,o){var s,l=e.body,u=a
do{s=l.charCodeAt(++u)}while(!isNaN(s)&&(s>31||9===s))
return new r.WU(t.T.COMMENT,a,u,n,i,o,l.slice(a+1,u))}function p(e,a,n,o,s,l){var c=e.body,d=n,h=a,p=!1
if(45===d&&(d=c.charCodeAt(++h)),48===d){if((d=c.charCodeAt(++h))>=48&&d<=57)throw(0,i.h)(e,h,"Invalid number, unexpected digit after 0: ".concat(u(d),"."))}else h=m(e,h,d),d=c.charCodeAt(h)
if(46===d&&(p=!0,d=c.charCodeAt(++h),h=m(e,h,d),d=c.charCodeAt(h)),69!==d&&101!==d||(p=!0,43!==(d=c.charCodeAt(++h))&&45!==d||(d=c.charCodeAt(++h)),h=m(e,h,d),d=c.charCodeAt(h)),46===d||function(e){return 95===e||e>=65&&e<=90||e>=97&&e<=122}(d))throw(0,i.h)(e,h,"Invalid number, expected digit but got: ".concat(u(d),"."))
return new r.WU(p?t.T.FLOAT:t.T.INT,a,h,o,s,l,c.slice(a,h))}function m(e,a,n){var r=e.body,t=a,o=n
if(o>=48&&o<=57){do{o=r.charCodeAt(++t)}while(o>=48&&o<=57)
return t}throw(0,i.h)(e,t,"Invalid number, expected digit but got: ".concat(u(o),"."))}function f(e,a,n,o,s){for(var l,c,d,h,p=e.body,m=a+1,f=m,v=0,k="";m<p.length&&!isNaN(v=p.charCodeAt(m))&&10!==v&&13!==v;){if(34===v)return k+=p.slice(f,m),new r.WU(t.T.STRING,a,m+1,n,o,s,k)
if(v<32&&9!==v)throw(0,i.h)(e,m,"Invalid character within String: ".concat(u(v),"."))
if(++m,92===v){switch(k+=p.slice(f,m-1),v=p.charCodeAt(m)){case 34:k+='"'
break
case 47:k+="/"
break
case 92:k+="\\"
break
case 98:k+="\b"
break
case 102:k+="\f"
break
case 110:k+="\n"
break
case 114:k+="\r"
break
case 116:k+="\t"
break
case 117:var y=(l=p.charCodeAt(m+1),c=p.charCodeAt(m+2),d=p.charCodeAt(m+3),h=p.charCodeAt(m+4),g(l)<<12|g(c)<<8|g(d)<<4|g(h))
if(y<0){var b=p.slice(m+1,m+5)
throw(0,i.h)(e,m,"Invalid character escape sequence: \\u".concat(b,"."))}k+=String.fromCharCode(y),m+=4
break
default:throw(0,i.h)(e,m,"Invalid character escape sequence: \\".concat(String.fromCharCode(v),"."))}f=++m}}throw(0,i.h)(e,m,"Unterminated string.")}function v(e,a,n,s,l,c){for(var d=e.body,h=a+3,p=h,m=0,f="";h<d.length&&!isNaN(m=d.charCodeAt(h));){if(34===m&&34===d.charCodeAt(h+1)&&34===d.charCodeAt(h+2))return f+=d.slice(p,h),new r.WU(t.T.BLOCK_STRING,a,h+3,n,s,l,(0,o.W7)(f))
if(m<32&&9!==m&&10!==m&&13!==m)throw(0,i.h)(e,h,"Invalid character within String: ".concat(u(m),"."))
10===m?(++h,++c.line,c.lineStart=h):13===m?(10===d.charCodeAt(h+1)?h+=2:++h,++c.line,c.lineStart=h):92===m&&34===d.charCodeAt(h+1)&&34===d.charCodeAt(h+2)&&34===d.charCodeAt(h+3)?(f+=d.slice(p,h)+'"""',p=h+=4):++h}throw(0,i.h)(e,h,"Unterminated string.")}function g(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function k(e,a,n,i,o){for(var s=e.body,l=s.length,u=a+1,c=0;u!==l&&!isNaN(c=s.charCodeAt(u))&&(95===c||c>=48&&c<=57||c>=65&&c<=90||c>=97&&c<=122);)++u
return new r.WU(t.T.NAME,a,u,n,i,o,s.slice(a,u))}},5368:(e,a,n)=>{"use strict"
function i(e,a){for(var n,i=/\r\n|[\n\r]/g,r=1,t=a+1;(n=i.exec(e.body))&&n.index<a;)r+=1,t=a+1-(n.index+n[0].length)
return{line:r,column:t}}n.d(a,{k:()=>i})},6795:(e,a,n)=>{"use strict"
n.d(a,{Qc:()=>c,H2:()=>d,gZ:()=>h})
var i=n(1083),r=n(4627),t=n(5132),o=n(244),s=n(6333),l=n(5932),u=n(9112)
function c(e,a){return new p(e,a).parseDocument()}function d(e,a){var n=new p(e,a)
n.expectToken(o.T.SOF)
var i=n.parseValueLiteral(!1)
return n.expectToken(o.T.EOF),i}function h(e,a){var n=new p(e,a)
n.expectToken(o.T.SOF)
var i=n.parseTypeReference()
return n.expectToken(o.T.EOF),i}var p=function(){function e(e,a){var n=(0,s.T)(e)?e:new s.H(e)
this._lexer=new u.h(n),this._options=a}var a=e.prototype
return a.parseName=function(){var e=this.expectToken(o.T.NAME)
return{kind:r.h.NAME,value:e.value,loc:this.loc(e)}},a.parseDocument=function(){var e=this._lexer.token
return{kind:r.h.DOCUMENT,definitions:this.many(o.T.SOF,this.parseDefinition,o.T.EOF),loc:this.loc(e)}},a.parseDefinition=function(){if(this.peek(o.T.NAME))switch(this._lexer.token.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition()
case"fragment":return this.parseFragmentDefinition()
case"schema":case"scalar":case"type":case"interface":case"union":case"enum":case"input":case"directive":return this.parseTypeSystemDefinition()
case"extend":return this.parseTypeSystemExtension()}else{if(this.peek(o.T.BRACE_L))return this.parseOperationDefinition()
if(this.peekDescription())return this.parseTypeSystemDefinition()}throw this.unexpected()},a.parseOperationDefinition=function(){var e=this._lexer.token
if(this.peek(o.T.BRACE_L))return{kind:r.h.OPERATION_DEFINITION,operation:"query",name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet(),loc:this.loc(e)}
var a,n=this.parseOperationType()
return this.peek(o.T.NAME)&&(a=this.parseName()),{kind:r.h.OPERATION_DEFINITION,operation:n,name:a,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}},a.parseOperationType=function(){var e=this.expectToken(o.T.NAME)
switch(e.value){case"query":return"query"
case"mutation":return"mutation"
case"subscription":return"subscription"}throw this.unexpected(e)},a.parseVariableDefinitions=function(){return this.optionalMany(o.T.PAREN_L,this.parseVariableDefinition,o.T.PAREN_R)},a.parseVariableDefinition=function(){var e=this._lexer.token
return{kind:r.h.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(o.T.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(o.T.EQUALS)?this.parseValueLiteral(!0):void 0,directives:this.parseDirectives(!0),loc:this.loc(e)}},a.parseVariable=function(){var e=this._lexer.token
return this.expectToken(o.T.DOLLAR),{kind:r.h.VARIABLE,name:this.parseName(),loc:this.loc(e)}},a.parseSelectionSet=function(){var e=this._lexer.token
return{kind:r.h.SELECTION_SET,selections:this.many(o.T.BRACE_L,this.parseSelection,o.T.BRACE_R),loc:this.loc(e)}},a.parseSelection=function(){return this.peek(o.T.SPREAD)?this.parseFragment():this.parseField()},a.parseField=function(){var e,a,n=this._lexer.token,i=this.parseName()
return this.expectOptionalToken(o.T.COLON)?(e=i,a=this.parseName()):a=i,{kind:r.h.FIELD,alias:e,name:a,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(o.T.BRACE_L)?this.parseSelectionSet():void 0,loc:this.loc(n)}},a.parseArguments=function(e){var a=e?this.parseConstArgument:this.parseArgument
return this.optionalMany(o.T.PAREN_L,a,o.T.PAREN_R)},a.parseArgument=function(){var e=this._lexer.token,a=this.parseName()
return this.expectToken(o.T.COLON),{kind:r.h.ARGUMENT,name:a,value:this.parseValueLiteral(!1),loc:this.loc(e)}},a.parseConstArgument=function(){var e=this._lexer.token
return{kind:r.h.ARGUMENT,name:this.parseName(),value:(this.expectToken(o.T.COLON),this.parseValueLiteral(!0)),loc:this.loc(e)}},a.parseFragment=function(){var e=this._lexer.token
this.expectToken(o.T.SPREAD)
var a=this.expectOptionalKeyword("on")
return!a&&this.peek(o.T.NAME)?{kind:r.h.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1),loc:this.loc(e)}:{kind:r.h.INLINE_FRAGMENT,typeCondition:a?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}},a.parseFragmentDefinition=function(){var e,a=this._lexer.token
return this.expectKeyword("fragment"),!0===(null===(e=this._options)||void 0===e?void 0:e.experimentalFragmentVariables)?{kind:r.h.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(a)}:{kind:r.h.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(a)}},a.parseFragmentName=function(){if("on"===this._lexer.token.value)throw this.unexpected()
return this.parseName()},a.parseValueLiteral=function(e){var a=this._lexer.token
switch(a.kind){case o.T.BRACKET_L:return this.parseList(e)
case o.T.BRACE_L:return this.parseObject(e)
case o.T.INT:return this._lexer.advance(),{kind:r.h.INT,value:a.value,loc:this.loc(a)}
case o.T.FLOAT:return this._lexer.advance(),{kind:r.h.FLOAT,value:a.value,loc:this.loc(a)}
case o.T.STRING:case o.T.BLOCK_STRING:return this.parseStringLiteral()
case o.T.NAME:switch(this._lexer.advance(),a.value){case"true":return{kind:r.h.BOOLEAN,value:!0,loc:this.loc(a)}
case"false":return{kind:r.h.BOOLEAN,value:!1,loc:this.loc(a)}
case"null":return{kind:r.h.NULL,loc:this.loc(a)}
default:return{kind:r.h.ENUM,value:a.value,loc:this.loc(a)}}case o.T.DOLLAR:if(!e)return this.parseVariable()}throw this.unexpected()},a.parseStringLiteral=function(){var e=this._lexer.token
return this._lexer.advance(),{kind:r.h.STRING,value:e.value,block:e.kind===o.T.BLOCK_STRING,loc:this.loc(e)}},a.parseList=function(e){var a=this,n=this._lexer.token
return{kind:r.h.LIST,values:this.any(o.T.BRACKET_L,(function(){return a.parseValueLiteral(e)}),o.T.BRACKET_R),loc:this.loc(n)}},a.parseObject=function(e){var a=this,n=this._lexer.token
return{kind:r.h.OBJECT,fields:this.any(o.T.BRACE_L,(function(){return a.parseObjectField(e)}),o.T.BRACE_R),loc:this.loc(n)}},a.parseObjectField=function(e){var a=this._lexer.token,n=this.parseName()
return this.expectToken(o.T.COLON),{kind:r.h.OBJECT_FIELD,name:n,value:this.parseValueLiteral(e),loc:this.loc(a)}},a.parseDirectives=function(e){for(var a=[];this.peek(o.T.AT);)a.push(this.parseDirective(e))
return a},a.parseDirective=function(e){var a=this._lexer.token
return this.expectToken(o.T.AT),{kind:r.h.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(e),loc:this.loc(a)}},a.parseTypeReference=function(){var e,a=this._lexer.token
return this.expectOptionalToken(o.T.BRACKET_L)?(e=this.parseTypeReference(),this.expectToken(o.T.BRACKET_R),e={kind:r.h.LIST_TYPE,type:e,loc:this.loc(a)}):e=this.parseNamedType(),this.expectOptionalToken(o.T.BANG)?{kind:r.h.NON_NULL_TYPE,type:e,loc:this.loc(a)}:e},a.parseNamedType=function(){var e=this._lexer.token
return{kind:r.h.NAMED_TYPE,name:this.parseName(),loc:this.loc(e)}},a.parseTypeSystemDefinition=function(){var e=this.peekDescription()?this._lexer.lookahead():this._lexer.token
if(e.kind===o.T.NAME)switch(e.value){case"schema":return this.parseSchemaDefinition()
case"scalar":return this.parseScalarTypeDefinition()
case"type":return this.parseObjectTypeDefinition()
case"interface":return this.parseInterfaceTypeDefinition()
case"union":return this.parseUnionTypeDefinition()
case"enum":return this.parseEnumTypeDefinition()
case"input":return this.parseInputObjectTypeDefinition()
case"directive":return this.parseDirectiveDefinition()}throw this.unexpected(e)},a.peekDescription=function(){return this.peek(o.T.STRING)||this.peek(o.T.BLOCK_STRING)},a.parseDescription=function(){if(this.peekDescription())return this.parseStringLiteral()},a.parseSchemaDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("schema")
var n=this.parseDirectives(!0),i=this.many(o.T.BRACE_L,this.parseOperationTypeDefinition,o.T.BRACE_R)
return{kind:r.h.SCHEMA_DEFINITION,description:a,directives:n,operationTypes:i,loc:this.loc(e)}},a.parseOperationTypeDefinition=function(){var e=this._lexer.token,a=this.parseOperationType()
this.expectToken(o.T.COLON)
var n=this.parseNamedType()
return{kind:r.h.OPERATION_TYPE_DEFINITION,operation:a,type:n,loc:this.loc(e)}},a.parseScalarTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("scalar")
var n=this.parseName(),i=this.parseDirectives(!0)
return{kind:r.h.SCALAR_TYPE_DEFINITION,description:a,name:n,directives:i,loc:this.loc(e)}},a.parseObjectTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("type")
var n=this.parseName(),i=this.parseImplementsInterfaces(),t=this.parseDirectives(!0),o=this.parseFieldsDefinition()
return{kind:r.h.OBJECT_TYPE_DEFINITION,description:a,name:n,interfaces:i,directives:t,fields:o,loc:this.loc(e)}},a.parseImplementsInterfaces=function(){var e
if(!this.expectOptionalKeyword("implements"))return[]
if(!0===(null===(e=this._options)||void 0===e?void 0:e.allowLegacySDLImplementsInterfaces)){var a=[]
this.expectOptionalToken(o.T.AMP)
do{a.push(this.parseNamedType())}while(this.expectOptionalToken(o.T.AMP)||this.peek(o.T.NAME))
return a}return this.delimitedMany(o.T.AMP,this.parseNamedType)},a.parseFieldsDefinition=function(){var e
return!0===(null===(e=this._options)||void 0===e?void 0:e.allowLegacySDLEmptyFields)&&this.peek(o.T.BRACE_L)&&this._lexer.lookahead().kind===o.T.BRACE_R?(this._lexer.advance(),this._lexer.advance(),[]):this.optionalMany(o.T.BRACE_L,this.parseFieldDefinition,o.T.BRACE_R)},a.parseFieldDefinition=function(){var e=this._lexer.token,a=this.parseDescription(),n=this.parseName(),i=this.parseArgumentDefs()
this.expectToken(o.T.COLON)
var t=this.parseTypeReference(),s=this.parseDirectives(!0)
return{kind:r.h.FIELD_DEFINITION,description:a,name:n,arguments:i,type:t,directives:s,loc:this.loc(e)}},a.parseArgumentDefs=function(){return this.optionalMany(o.T.PAREN_L,this.parseInputValueDef,o.T.PAREN_R)},a.parseInputValueDef=function(){var e=this._lexer.token,a=this.parseDescription(),n=this.parseName()
this.expectToken(o.T.COLON)
var i,t=this.parseTypeReference()
this.expectOptionalToken(o.T.EQUALS)&&(i=this.parseValueLiteral(!0))
var s=this.parseDirectives(!0)
return{kind:r.h.INPUT_VALUE_DEFINITION,description:a,name:n,type:t,defaultValue:i,directives:s,loc:this.loc(e)}},a.parseInterfaceTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("interface")
var n=this.parseName(),i=this.parseImplementsInterfaces(),t=this.parseDirectives(!0),o=this.parseFieldsDefinition()
return{kind:r.h.INTERFACE_TYPE_DEFINITION,description:a,name:n,interfaces:i,directives:t,fields:o,loc:this.loc(e)}},a.parseUnionTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("union")
var n=this.parseName(),i=this.parseDirectives(!0),t=this.parseUnionMemberTypes()
return{kind:r.h.UNION_TYPE_DEFINITION,description:a,name:n,directives:i,types:t,loc:this.loc(e)}},a.parseUnionMemberTypes=function(){return this.expectOptionalToken(o.T.EQUALS)?this.delimitedMany(o.T.PIPE,this.parseNamedType):[]},a.parseEnumTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("enum")
var n=this.parseName(),i=this.parseDirectives(!0),t=this.parseEnumValuesDefinition()
return{kind:r.h.ENUM_TYPE_DEFINITION,description:a,name:n,directives:i,values:t,loc:this.loc(e)}},a.parseEnumValuesDefinition=function(){return this.optionalMany(o.T.BRACE_L,this.parseEnumValueDefinition,o.T.BRACE_R)},a.parseEnumValueDefinition=function(){var e=this._lexer.token,a=this.parseDescription(),n=this.parseName(),i=this.parseDirectives(!0)
return{kind:r.h.ENUM_VALUE_DEFINITION,description:a,name:n,directives:i,loc:this.loc(e)}},a.parseInputObjectTypeDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("input")
var n=this.parseName(),i=this.parseDirectives(!0),t=this.parseInputFieldsDefinition()
return{kind:r.h.INPUT_OBJECT_TYPE_DEFINITION,description:a,name:n,directives:i,fields:t,loc:this.loc(e)}},a.parseInputFieldsDefinition=function(){return this.optionalMany(o.T.BRACE_L,this.parseInputValueDef,o.T.BRACE_R)},a.parseTypeSystemExtension=function(){var e=this._lexer.lookahead()
if(e.kind===o.T.NAME)switch(e.value){case"schema":return this.parseSchemaExtension()
case"scalar":return this.parseScalarTypeExtension()
case"type":return this.parseObjectTypeExtension()
case"interface":return this.parseInterfaceTypeExtension()
case"union":return this.parseUnionTypeExtension()
case"enum":return this.parseEnumTypeExtension()
case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(e)},a.parseSchemaExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("schema")
var a=this.parseDirectives(!0),n=this.optionalMany(o.T.BRACE_L,this.parseOperationTypeDefinition,o.T.BRACE_R)
if(0===a.length&&0===n.length)throw this.unexpected()
return{kind:r.h.SCHEMA_EXTENSION,directives:a,operationTypes:n,loc:this.loc(e)}},a.parseScalarTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("scalar")
var a=this.parseName(),n=this.parseDirectives(!0)
if(0===n.length)throw this.unexpected()
return{kind:r.h.SCALAR_TYPE_EXTENSION,name:a,directives:n,loc:this.loc(e)}},a.parseObjectTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("type")
var a=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseDirectives(!0),t=this.parseFieldsDefinition()
if(0===n.length&&0===i.length&&0===t.length)throw this.unexpected()
return{kind:r.h.OBJECT_TYPE_EXTENSION,name:a,interfaces:n,directives:i,fields:t,loc:this.loc(e)}},a.parseInterfaceTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("interface")
var a=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseDirectives(!0),t=this.parseFieldsDefinition()
if(0===n.length&&0===i.length&&0===t.length)throw this.unexpected()
return{kind:r.h.INTERFACE_TYPE_EXTENSION,name:a,interfaces:n,directives:i,fields:t,loc:this.loc(e)}},a.parseUnionTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("union")
var a=this.parseName(),n=this.parseDirectives(!0),i=this.parseUnionMemberTypes()
if(0===n.length&&0===i.length)throw this.unexpected()
return{kind:r.h.UNION_TYPE_EXTENSION,name:a,directives:n,types:i,loc:this.loc(e)}},a.parseEnumTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("enum")
var a=this.parseName(),n=this.parseDirectives(!0),i=this.parseEnumValuesDefinition()
if(0===n.length&&0===i.length)throw this.unexpected()
return{kind:r.h.ENUM_TYPE_EXTENSION,name:a,directives:n,values:i,loc:this.loc(e)}},a.parseInputObjectTypeExtension=function(){var e=this._lexer.token
this.expectKeyword("extend"),this.expectKeyword("input")
var a=this.parseName(),n=this.parseDirectives(!0),i=this.parseInputFieldsDefinition()
if(0===n.length&&0===i.length)throw this.unexpected()
return{kind:r.h.INPUT_OBJECT_TYPE_EXTENSION,name:a,directives:n,fields:i,loc:this.loc(e)}},a.parseDirectiveDefinition=function(){var e=this._lexer.token,a=this.parseDescription()
this.expectKeyword("directive"),this.expectToken(o.T.AT)
var n=this.parseName(),i=this.parseArgumentDefs(),t=this.expectOptionalKeyword("repeatable")
this.expectKeyword("on")
var s=this.parseDirectiveLocations()
return{kind:r.h.DIRECTIVE_DEFINITION,description:a,name:n,arguments:i,repeatable:t,locations:s,loc:this.loc(e)}},a.parseDirectiveLocations=function(){return this.delimitedMany(o.T.PIPE,this.parseDirectiveLocation)},a.parseDirectiveLocation=function(){var e=this._lexer.token,a=this.parseName()
if(void 0!==l.B[a.value])return a
throw this.unexpected(e)},a.loc=function(e){var a
if(!0!==(null===(a=this._options)||void 0===a?void 0:a.noLocation))return new t.Ye(e,this._lexer.lastToken,this._lexer.source)},a.peek=function(e){return this._lexer.token.kind===e},a.expectToken=function(e){var a=this._lexer.token
if(a.kind===e)return this._lexer.advance(),a
throw(0,i.h)(this._lexer.source,a.start,"Expected ".concat(f(e),", found ").concat(m(a),"."))},a.expectOptionalToken=function(e){var a=this._lexer.token
if(a.kind===e)return this._lexer.advance(),a},a.expectKeyword=function(e){var a=this._lexer.token
if(a.kind!==o.T.NAME||a.value!==e)throw(0,i.h)(this._lexer.source,a.start,'Expected "'.concat(e,'", found ').concat(m(a),"."))
this._lexer.advance()},a.expectOptionalKeyword=function(e){var a=this._lexer.token
return a.kind===o.T.NAME&&a.value===e&&(this._lexer.advance(),!0)},a.unexpected=function(e){var a=null!=e?e:this._lexer.token
return(0,i.h)(this._lexer.source,a.start,"Unexpected ".concat(m(a),"."))},a.any=function(e,a,n){this.expectToken(e)
for(var i=[];!this.expectOptionalToken(n);)i.push(a.call(this))
return i},a.optionalMany=function(e,a,n){if(this.expectOptionalToken(e)){var i=[]
do{i.push(a.call(this))}while(!this.expectOptionalToken(n))
return i}return[]},a.many=function(e,a,n){this.expectToken(e)
var i=[]
do{i.push(a.call(this))}while(!this.expectOptionalToken(n))
return i},a.delimitedMany=function(e,a){this.expectOptionalToken(e)
var n=[]
do{n.push(a.call(this))}while(this.expectOptionalToken(e))
return n},e}()
function m(e){var a=e.value
return f(e.kind)+(null!=a?' "'.concat(a,'"'):"")}function f(e){return(0,u.u)(e)?'"'.concat(e,'"'):e}},3026:(e,a,n)=>{"use strict"
n.d(a,{Q:()=>r,z:()=>t})
var i=n(5368)
function r(e){return t(e.source,(0,i.k)(e.source,e.start))}function t(e,a){var n=e.locationOffset.column-1,i=s(n)+e.body,r=a.line-1,t=e.locationOffset.line-1,l=a.line+t,u=1===a.line?n:0,c=a.column+u,d="".concat(e.name,":").concat(l,":").concat(c,"\n"),h=i.split(/\r\n|[\n\r]/g),p=h[r]
if(p.length>120){for(var m=Math.floor(c/80),f=c%80,v=[],g=0;g<p.length;g+=80)v.push(p.slice(g,g+80))
return d+o([["".concat(l),v[0]]].concat(v.slice(1,m+1).map((function(e){return["",e]})),[[" ",s(f-1)+"^"],["",v[m+1]]]))}return d+o([["".concat(l-1),h[r-1]],["".concat(l),p],["",s(c-1)+"^"],["".concat(l+1),h[r+1]]])}function o(e){var a=e.filter((function(e){return e[0],void 0!==e[1]})),n=Math.max.apply(Math,a.map((function(e){return e[0].length})))
return a.map((function(e){var a,i=e[0],r=e[1]
return s(n-(a=i).length)+a+(r?" | "+r:" |")})).join("\n")}function s(e){return Array(e+1).join(" ")}},6255:(e,a,n)=>{"use strict"
n.d(a,{S:()=>t})
var i=n(9485),r=n(930)
function t(e){return(0,i.Vn)(e,{leave:o})}var o={Name:function(e){return e.value},Variable:function(e){return"$"+e.name},Document:function(e){return l(e.definitions,"\n\n")+"\n"},OperationDefinition:function(e){var a=e.operation,n=e.name,i=c("(",l(e.variableDefinitions,", "),")"),r=l(e.directives," "),t=e.selectionSet
return n||r||i||"query"!==a?l([a,l([n,i]),r,t]," "):t},VariableDefinition:function(e){var a=e.variable,n=e.type,i=e.defaultValue,r=e.directives
return a+": "+n+c(" = ",i)+c(" ",l(r," "))},SelectionSet:function(e){return u(e.selections)},Field:function(e){var a=e.alias,n=e.name,i=e.arguments,r=e.directives,t=e.selectionSet,o=c("",a,": ")+n,s=o+c("(",l(i,", "),")")
return s.length>80&&(s=o+c("(\n",d(l(i,"\n")),"\n)")),l([s,l(r," "),t]," ")},Argument:function(e){return e.name+": "+e.value},FragmentSpread:function(e){return"..."+e.name+c(" ",l(e.directives," "))},InlineFragment:function(e){var a=e.typeCondition,n=e.directives,i=e.selectionSet
return l(["...",c("on ",a),l(n," "),i]," ")},FragmentDefinition:function(e){var a=e.name,n=e.typeCondition,i=e.variableDefinitions,r=e.directives,t=e.selectionSet
return"fragment ".concat(a).concat(c("(",l(i,", "),")")," ")+"on ".concat(n," ").concat(c("",l(r," ")," "))+t},IntValue:function(e){return e.value},FloatValue:function(e){return e.value},StringValue:function(e,a){var n=e.value
return e.block?(0,r.LZ)(n,"description"===a?"":"  "):JSON.stringify(n)},BooleanValue:function(e){return e.value?"true":"false"},NullValue:function(){return"null"},EnumValue:function(e){return e.value},ListValue:function(e){return"["+l(e.values,", ")+"]"},ObjectValue:function(e){return"{"+l(e.fields,", ")+"}"},ObjectField:function(e){return e.name+": "+e.value},Directive:function(e){return"@"+e.name+c("(",l(e.arguments,", "),")")},NamedType:function(e){return e.name},ListType:function(e){return"["+e.type+"]"},NonNullType:function(e){return e.type+"!"},SchemaDefinition:s((function(e){var a=e.directives,n=e.operationTypes
return l(["schema",l(a," "),u(n)]," ")})),OperationTypeDefinition:function(e){return e.operation+": "+e.type},ScalarTypeDefinition:s((function(e){return l(["scalar",e.name,l(e.directives," ")]," ")})),ObjectTypeDefinition:s((function(e){var a=e.name,n=e.interfaces,i=e.directives,r=e.fields
return l(["type",a,c("implements ",l(n," & ")),l(i," "),u(r)]," ")})),FieldDefinition:s((function(e){var a=e.name,n=e.arguments,i=e.type,r=e.directives
return a+(p(n)?c("(\n",d(l(n,"\n")),"\n)"):c("(",l(n,", "),")"))+": "+i+c(" ",l(r," "))})),InputValueDefinition:s((function(e){var a=e.name,n=e.type,i=e.defaultValue,r=e.directives
return l([a+": "+n,c("= ",i),l(r," ")]," ")})),InterfaceTypeDefinition:s((function(e){var a=e.name,n=e.interfaces,i=e.directives,r=e.fields
return l(["interface",a,c("implements ",l(n," & ")),l(i," "),u(r)]," ")})),UnionTypeDefinition:s((function(e){var a=e.name,n=e.directives,i=e.types
return l(["union",a,l(n," "),i&&0!==i.length?"= "+l(i," | "):""]," ")})),EnumTypeDefinition:s((function(e){var a=e.name,n=e.directives,i=e.values
return l(["enum",a,l(n," "),u(i)]," ")})),EnumValueDefinition:s((function(e){return l([e.name,l(e.directives," ")]," ")})),InputObjectTypeDefinition:s((function(e){var a=e.name,n=e.directives,i=e.fields
return l(["input",a,l(n," "),u(i)]," ")})),DirectiveDefinition:s((function(e){var a=e.name,n=e.arguments,i=e.repeatable,r=e.locations
return"directive @"+a+(p(n)?c("(\n",d(l(n,"\n")),"\n)"):c("(",l(n,", "),")"))+(i?" repeatable":"")+" on "+l(r," | ")})),SchemaExtension:function(e){var a=e.directives,n=e.operationTypes
return l(["extend schema",l(a," "),u(n)]," ")},ScalarTypeExtension:function(e){return l(["extend scalar",e.name,l(e.directives," ")]," ")},ObjectTypeExtension:function(e){var a=e.name,n=e.interfaces,i=e.directives,r=e.fields
return l(["extend type",a,c("implements ",l(n," & ")),l(i," "),u(r)]," ")},InterfaceTypeExtension:function(e){var a=e.name,n=e.interfaces,i=e.directives,r=e.fields
return l(["extend interface",a,c("implements ",l(n," & ")),l(i," "),u(r)]," ")},UnionTypeExtension:function(e){var a=e.name,n=e.directives,i=e.types
return l(["extend union",a,l(n," "),i&&0!==i.length?"= "+l(i," | "):""]," ")},EnumTypeExtension:function(e){var a=e.name,n=e.directives,i=e.values
return l(["extend enum",a,l(n," "),u(i)]," ")},InputObjectTypeExtension:function(e){var a=e.name,n=e.directives,i=e.fields
return l(["extend input",a,l(n," "),u(i)]," ")}}
function s(e){return function(a){return l([a.description,e(a)],"\n")}}function l(e){var a,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:""
return null!==(a=null==e?void 0:e.filter((function(e){return e})).join(n))&&void 0!==a?a:""}function u(e){return c("{\n",d(l(e,"\n")),"\n}")}function c(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:""
return null!=a&&""!==a?e+a+n:""}function d(e){return c("  ",e.replace(/\n/g,"\n  "))}function h(e){return-1!==e.indexOf("\n")}function p(e){return null!=e&&e.some(h)}},6333:(e,a,n)=>{"use strict"
n.d(a,{H:()=>s,T:()=>l})
var i=n(788),r=n(9613),t=n(7431),o=n(1327)
var s=function(){function e(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GraphQL request",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{line:1,column:1}
"string"==typeof e||(0,t.Z)(0,"Body must be a string. Received: ".concat((0,r.Z)(e),".")),this.body=e,this.name=a,this.locationOffset=n,this.locationOffset.line>0||(0,t.Z)(0,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||(0,t.Z)(0,"column in locationOffset is 1-indexed and must be positive.")}var a,n
return a=e,(n=[{key:i.YF,get:function(){return"Source"}}])&&function(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}(a.prototype,n),e}()
function l(e){return(0,o.Z)(e,s)}},244:(e,a,n)=>{"use strict"
n.d(a,{T:()=>i})
var i=Object.freeze({SOF:"<SOF>",EOF:"<EOF>",BANG:"!",DOLLAR:"$",AMP:"&",PAREN_L:"(",PAREN_R:")",SPREAD:"...",COLON:":",EQUALS:"=",AT:"@",BRACKET_L:"[",BRACKET_R:"]",BRACE_L:"{",PIPE:"|",BRACE_R:"}",NAME:"Name",INT:"Int",FLOAT:"Float",STRING:"String",BLOCK_STRING:"BlockString",COMMENT:"Comment"})},9485:(e,a,n)=>{"use strict"
n.d(a,{$_:()=>o,Vn:()=>s,j1:()=>l,CK:()=>u})
var i=n(9613),r=n(5132),t={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},o=Object.freeze({})
function s(e,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t,s=void 0,l=Array.isArray(e),c=[e],d=-1,h=[],p=void 0,m=void 0,f=void 0,v=[],g=[],k=e
do{var y=++d===c.length,b=y&&0!==h.length
if(y){if(m=0===g.length?void 0:v[v.length-1],p=f,f=g.pop(),b){if(l)p=p.slice()
else{for(var S={},A=0,M=Object.keys(p);A<M.length;A++){var T=M[A]
S[T]=p[T]}p=S}for(var _=0,w=0;w<h.length;w++){var j=h[w][0],E=h[w][1]
l&&(j-=_),l&&null===E?(p.splice(j,1),_++):p[j]=E}}d=s.index,c=s.keys,h=s.edits,l=s.inArray,s=s.prev}else{if(m=f?l?d:c[d]:void 0,null==(p=f?f[m]:k))continue
f&&v.push(m)}var N,B=void 0
if(!Array.isArray(p)){if(!(0,r.UG)(p))throw new Error("Invalid AST Node: ".concat((0,i.Z)(p),"."))
var P=u(a,p.kind,y)
if(P){if((B=P.call(a,p,m,f,v,g))===o)break
if(!1===B){if(!y){v.pop()
continue}}else if(void 0!==B&&(h.push([m,B]),!y)){if(!(0,r.UG)(B)){v.pop()
continue}p=B}}}void 0===B&&b&&h.push([m,p]),y?v.pop():(s={inArray:l,index:d,keys:c,edits:h,prev:s},c=(l=Array.isArray(p))?p:null!==(N=n[p.kind])&&void 0!==N?N:[],d=-1,h=[],f&&g.push(f),f=p)}while(void 0!==s)
return 0!==h.length&&(k=h[h.length-1][1]),k}function l(e){var a=new Array(e.length)
return{enter:function(n){for(var i=0;i<e.length;i++)if(null==a[i]){var r=u(e[i],n.kind,!1)
if(r){var t=r.apply(e[i],arguments)
if(!1===t)a[i]=n
else if(t===o)a[i]=o
else if(void 0!==t)return t}}},leave:function(n){for(var i=0;i<e.length;i++)if(null==a[i]){var r=u(e[i],n.kind,!0)
if(r){var t=r.apply(e[i],arguments)
if(t===o)a[i]=o
else if(void 0!==t&&!1!==t)return t}}else a[i]===n&&(a[i]=null)}}}function u(e,a,n){var i=e[a]
if(i){if(!n&&"function"==typeof i)return i
var r=n?i.leave:i.enter
if("function"==typeof r)return r}else{var t=n?e.leave:e.enter
if(t){if("function"==typeof t)return t
var o=t[a]
if("function"==typeof o)return o}}}},788:(e,a,n)=>{"use strict"
n.d(a,{Xr:()=>i,PA:()=>r,YF:()=>t})
var i="function"==typeof Symbol&&null!=Symbol.iterator?Symbol.iterator:"@@iterator",r="function"==typeof Symbol&&null!=Symbol.asyncIterator?Symbol.asyncIterator:"@@asyncIterator",t="function"==typeof Symbol&&null!=Symbol.toStringTag?Symbol.toStringTag:"@@toStringTag"},8607:(e,a,n)=>{"use strict"
n.r(a)},2872:(e,a,n)=>{"use strict"
n.d(a,{R:()=>o})
var i=n(2985),r=n(6593),t=n(3669),o=function(){function e(){this.getFragmentDoc=(0,r.re)(t.Yk)}return e.prototype.batch=function(e){var a,n=this,i="string"==typeof e.optimistic?e.optimistic:!1===e.optimistic?null:void 0
return this.performTransaction((function(){return a=e.update(n)}),i),a},e.prototype.recordOptimisticTransaction=function(e,a){this.performTransaction(e,a)},e.prototype.transformDocument=function(e){return e},e.prototype.identify=function(e){},e.prototype.gc=function(){return[]},e.prototype.modify=function(e){return!1},e.prototype.transformForLink=function(e){return e},e.prototype.readQuery=function(e,a){return void 0===a&&(a=!!e.optimistic),this.read((0,i.pi)((0,i.pi)({},e),{rootId:e.id||"ROOT_QUERY",optimistic:a}))},e.prototype.readFragment=function(e,a){return void 0===a&&(a=!!e.optimistic),this.read((0,i.pi)((0,i.pi)({},e),{query:this.getFragmentDoc(e.fragment,e.fragmentName),rootId:e.id,optimistic:a}))},e.prototype.writeQuery=function(e){var a=e.id,n=e.data,r=(0,i._T)(e,["id","data"])
return this.write(Object.assign(r,{dataId:a||"ROOT_QUERY",result:n}))},e.prototype.writeFragment=function(e){var a=e.id,n=e.data,r=e.fragment,t=e.fragmentName,o=(0,i._T)(e,["id","data","fragment","fragmentName"])
return this.write(Object.assign(o,{query:this.getFragmentDoc(r,t),dataId:a,result:n}))},e.prototype.updateQuery=function(e,a){return this.batch({update:function(n){var r=n.readQuery(e),t=a(r)
return null==t?r:(n.writeQuery((0,i.pi)((0,i.pi)({},e),{data:t})),t)}})},e.prototype.updateFragment=function(e,a){return this.batch({update:function(n){var r=n.readFragment(e),t=a(r)
return null==t?r:(n.writeFragment((0,i.pi)((0,i.pi)({},e),{data:t})),t)}})},e}()},2018:(e,a,n)=>{"use strict"
var i
n.d(a,{C:()=>i}),i||(i={})},550:(e,a,n)=>{"use strict"
n.d(a,{y:()=>i})
var i=function(e,a,n,i){this.message=e,this.path=a,this.query=n,this.variables=i}},8238:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{ApolloCache:()=>i.R,Cache:()=>r.C,MissingFieldError:()=>t.y,isReference:()=>o.Yk,makeReference:()=>o.kQ,EntityStore:()=>s.cf,fieldNameFromStoreName:()=>l.E_,defaultDataIdFromObject:()=>l.uG,InMemoryCache:()=>u.h,makeVar:()=>c.QS,cacheSlot:()=>c.ab,Policies:()=>d.r,canonicalStringify:()=>h.B}),n(3199)
var i=n(2872),r=n(2018),t=n(550),o=n(2411),s=n(1397),l=n(8797),u=n(3486),c=n(4435),d=n(7155),h=n(8523)},1397:(e,a,n)=>{"use strict"
n.d(a,{cf:()=>g,HL:()=>b,ur:()=>T})
var i=n(2985),r=n(3199),t=n(6593),o=n(7812),s=n(9585),l=n(4741),u=n(2411),c=n(509),d=n(1173),h=n(2414),p=n(8797),m=Object.create(null),f=function(){return m},v=Object.create(null),g=function(){function e(e,a){var n=this
this.policies=e,this.group=a,this.data=Object.create(null),this.rootIds=Object.create(null),this.refs=Object.create(null),this.getFieldValue=function(e,a){return(0,l.J)((0,u.Yk)(e)?n.get(e.__ref,a):e&&e[a])},this.canRead=function(e){return(0,u.Yk)(e)?n.has(e.__ref):"object"==typeof e},this.toReference=function(e,a){if("string"==typeof e)return(0,u.kQ)(e)
if((0,u.Yk)(e))return e
var i=n.policies.identify(e)[0]
if(i){var r=(0,u.kQ)(i)
return a&&n.merge(i,e),r}}}return e.prototype.toObject=function(){return(0,i.pi)({},this.data)},e.prototype.has=function(e){return void 0!==this.lookup(e,!0)},e.prototype.get=function(e,a){if(this.group.depend(e,a),p.RI.call(this.data,e)){var n=this.data[e]
if(n&&p.RI.call(n,a))return n[a]}return"__typename"===a&&p.RI.call(this.policies.rootTypenamesById,e)?this.policies.rootTypenamesById[e]:this instanceof S?this.parent.get(e,a):void 0},e.prototype.lookup=function(e,a){return a&&this.group.depend(e,"__exists"),p.RI.call(this.data,e)?this.data[e]:this instanceof S?this.parent.lookup(e,a):this.policies.rootTypenamesById[e]?Object.create(null):void 0},e.prototype.merge=function(e,a){var n,i=this;(0,u.Yk)(e)&&(e=e.__ref),(0,u.Yk)(a)&&(a=a.__ref)
var t="string"==typeof e?this.lookup(n=e):e,o="string"==typeof a?this.lookup(n=a):a
if(o){__DEV__?(0,r.kG)("string"==typeof n,"store.merge expects a string ID"):(0,r.kG)("string"==typeof n,1)
var s=new c.w0(M).merge(t,o)
if(this.data[n]=s,s!==t&&(delete this.refs[n],this.group.caching)){var l=Object.create(null)
t||(l.__exists=1),Object.keys(o).forEach((function(e){if(!t||t[e]!==s[e]){l[e]=1
var a=(0,p.E_)(e)
a===e||i.policies.hasKeyArgs(s.__typename,a)||(l[a]=1),void 0!==s[e]||i instanceof S||delete s[e]}})),!l.__typename||t&&t.__typename||this.policies.rootTypenamesById[n]!==s.__typename||delete l.__typename,Object.keys(l).forEach((function(e){return i.group.dirty(n,e)}))}}},e.prototype.modify=function(e,a){var n=this,r=this.lookup(e)
if(r){var t=Object.create(null),o=!1,s=!0,c={DELETE:m,INVALIDATE:v,isReference:u.Yk,toReference:this.toReference,canRead:this.canRead,readField:function(a,i){return n.policies.readField("string"==typeof a?{fieldName:a,from:i||(0,u.kQ)(e)}:a,{store:n})}}
if(Object.keys(r).forEach((function(u){var d=(0,p.E_)(u),h=r[u]
if(void 0!==h){var g="function"==typeof a?a:a[u]||a[d]
if(g){var k=g===f?m:g((0,l.J)(h),(0,i.pi)((0,i.pi)({},c),{fieldName:d,storeFieldName:u,storage:n.getStorage(e,u)}))
k===v?n.group.dirty(e,u):(k===m&&(k=void 0),k!==h&&(t[u]=k,o=!0,h=k))}void 0!==h&&(s=!1)}})),o)return this.merge(e,t),s&&(this instanceof S?this.data[e]=void 0:delete this.data[e],this.group.dirty(e,"__exists")),!0}return!1},e.prototype.delete=function(e,a,n){var i,r=this.lookup(e)
if(r){var t=this.getFieldValue(r,"__typename"),o=a&&n?this.policies.getStoreFieldName({typename:t,fieldName:a,args:n}):a
return this.modify(e,o?((i={})[o]=f,i):f)}return!1},e.prototype.evict=function(e,a){var n=!1
return e.id&&(p.RI.call(this.data,e.id)&&(n=this.delete(e.id,e.fieldName,e.args)),this instanceof S&&this!==a&&(n=this.parent.evict(e,a)||n),(e.fieldName||n)&&this.group.dirty(e.id,e.fieldName||"__exists")),n},e.prototype.clear=function(){this.replace(null)},e.prototype.extract=function(){var e=this,a=this.toObject(),n=[]
return this.getRootIdSet().forEach((function(a){p.RI.call(e.policies.rootTypenamesById,a)||n.push(a)})),n.length&&(a.__META={extraRootIds:n.sort()}),a},e.prototype.replace=function(e){var a=this
if(Object.keys(this.data).forEach((function(n){e&&p.RI.call(e,n)||a.delete(n)})),e){var n=e.__META,r=(0,i._T)(e,["__META"])
Object.keys(r).forEach((function(e){a.merge(e,r[e])})),n&&n.extraRootIds.forEach(this.retain,this)}},e.prototype.retain=function(e){return this.rootIds[e]=(this.rootIds[e]||0)+1},e.prototype.release=function(e){if(this.rootIds[e]>0){var a=--this.rootIds[e]
return a||delete this.rootIds[e],a}return 0},e.prototype.getRootIdSet=function(e){return void 0===e&&(e=new Set),Object.keys(this.rootIds).forEach(e.add,e),this instanceof S?this.parent.getRootIdSet(e):Object.keys(this.policies.rootTypenamesById).forEach(e.add,e),e},e.prototype.gc=function(){var e=this,a=this.getRootIdSet(),n=this.toObject()
a.forEach((function(i){p.RI.call(n,i)&&(Object.keys(e.findChildRefIds(i)).forEach(a.add,a),delete n[i])}))
var i=Object.keys(n)
if(i.length){for(var r=this;r instanceof S;)r=r.parent
i.forEach((function(e){return r.delete(e)}))}return i},e.prototype.findChildRefIds=function(e){if(!p.RI.call(this.refs,e)){var a=this.refs[e]=Object.create(null),n=this.data[e]
if(!n)return a
var i=new Set([n])
i.forEach((function(e){(0,u.Yk)(e)&&(a[e.__ref]=!0),(0,d.s)(e)&&Object.keys(e).forEach((function(a){var n=e[a];(0,d.s)(n)&&i.add(n)}))}))}return this.refs[e]},e.prototype.makeCacheKey=function(){return this.group.keyMaker.lookupArray(arguments)},e}(),k=function(){function e(e,a){void 0===a&&(a=null),this.caching=e,this.parent=a,this.d=null,this.resetCaching()}return e.prototype.resetCaching=function(){this.d=this.caching?(0,t.dP)():null,this.keyMaker=new s.B(h.mr)},e.prototype.depend=function(e,a){if(this.d){this.d(y(e,a))
var n=(0,p.E_)(a)
n!==a&&this.d(y(e,n)),this.parent&&this.parent.depend(e,a)}},e.prototype.dirty=function(e,a){this.d&&this.d.dirty(y(e,a),"__exists"===a?"forget":"setDirty")},e}()
function y(e,a){return a+"#"+e}function b(e,a){T(e)&&e.group.depend(a,"__exists")}!function(e){var a=function(e){function a(a){var n=a.policies,i=a.resultCaching,r=void 0===i||i,t=a.seed,o=e.call(this,n,new k(r))||this
return o.stump=new A(o),o.storageTrie=new s.B(h.mr),t&&o.replace(t),o}return(0,i.ZT)(a,e),a.prototype.addLayer=function(e,a){return this.stump.addLayer(e,a)},a.prototype.removeLayer=function(){return this},a.prototype.getStorage=function(){return this.storageTrie.lookupArray(arguments)},a}(e)
e.Root=a}(g||(g={}))
var S=function(e){function a(a,n,i,r){var t=e.call(this,n.policies,r)||this
return t.id=a,t.parent=n,t.replay=i,t.group=r,i(t),t}return(0,i.ZT)(a,e),a.prototype.addLayer=function(e,n){return new a(e,this,n,this.group)},a.prototype.removeLayer=function(e){var a=this,n=this.parent.removeLayer(e)
return e===this.id?(this.group.caching&&Object.keys(this.data).forEach((function(e){var i=a.data[e],r=n.lookup(e)
r?i?i!==r&&Object.keys(i).forEach((function(n){(0,o.D)(i[n],r[n])||a.group.dirty(e,n)})):(a.group.dirty(e,"__exists"),Object.keys(r).forEach((function(n){a.group.dirty(e,n)}))):a.delete(e)})),n):n===this.parent?this:n.addLayer(this.id,this.replay)},a.prototype.toObject=function(){return(0,i.pi)((0,i.pi)({},this.parent.toObject()),this.data)},a.prototype.findChildRefIds=function(a){var n=this.parent.findChildRefIds(a)
return p.RI.call(this.data,a)?(0,i.pi)((0,i.pi)({},n),e.prototype.findChildRefIds.call(this,a)):n},a.prototype.getStorage=function(){for(var e=this.parent;e.parent;)e=e.parent
return e.getStorage.apply(e,arguments)},a}(g),A=function(e){function a(a){return e.call(this,"EntityStore.Stump",a,(function(){}),new k(a.group.caching,a.group))||this}return(0,i.ZT)(a,e),a.prototype.removeLayer=function(){return this},a.prototype.merge=function(){return this.parent.merge.apply(this.parent,arguments)},a}(S)
function M(e,a,n){var i=e[n],r=a[n]
return(0,o.D)(i,r)?i:r}function T(e){return!!(e instanceof g&&e.group.caching)}},8797:(e,a,n)=>{"use strict"
n.d(a,{RI:()=>l,uG:()=>u,jS:()=>d,lg:()=>h,jp:()=>p,$O:()=>m,E_:()=>f,RC:()=>v,j:()=>g,ig:()=>k})
var i=n(868),r=n(2411),t=n(1173),o=n(5252),s=n(509),l=Object.prototype.hasOwnProperty
function u(e,a){var n=e.__typename,i=e.id,r=e._id
if("string"==typeof n&&(a&&(a.keyObject=void 0!==i?{id:i}:void 0!==r?{_id:r}:void 0),void 0===i&&(i=r),void 0!==i))return"".concat(n,":").concat("number"==typeof i||"string"==typeof i?i:JSON.stringify(i))}var c={dataIdFromObject:u,addTypename:!0,resultCaching:!0,canonizeResults:!1}
function d(e){return(0,i.o)(c,e)}function h(e){var a=e.canonizeResults
return void 0===a?c.canonizeResults:a}function p(e,a){return(0,r.Yk)(a)?e.get(a.__ref,"__typename"):a&&a.__typename}var m=/^[_a-z][_0-9a-z]*/i
function f(e){var a=e.match(m)
return a?a[0]:e}function v(e,a,n){return!!(0,t.s)(a)&&(Array.isArray(a)?a.every((function(a){return v(e,a,n)})):e.selections.every((function(e){if((0,r.My)(e)&&(0,o.LZ)(e,n)){var i=(0,r.u2)(e)
return l.call(a,i)&&(!e.selectionSet||v(e.selectionSet,a[i],n))}return!0})))}function g(e){return(0,t.s)(e)&&!(0,r.Yk)(e)&&!Array.isArray(e)}function k(){return new s.w0}},3486:(e,a,n)=>{"use strict"
n.d(a,{h:()=>z})
var i=n(2985),r=n(3199),t=n(6593),o=n(7812),s=n(2872),l=n(550),u=n(2411),c=n(1214),d=n(2414),h=n(868),p=n(4250),m=n(509),f=n(3669),v=n(5252),g=n(4741),k=n(1173),y=n(1397),b=n(8797),S=n(8523)
function A(e){return[e.selectionSet,e.objectOrReference,e.context,e.context.canonizeResults]}var M=function(){function e(e){var a=this
this.knownResults=new(d.mr?WeakMap:Map),this.config=(0,h.o)(e,{addTypename:!1!==e.addTypename,canonizeResults:(0,b.lg)(e)}),this.canon=e.canon||new S.h,this.executeSelectionSet=(0,t.re)((function(e){var n,r=e.context.canonizeResults,t=A(e)
t[3]=!r
var o=(n=a.executeSelectionSet).peek.apply(n,t)
return o?r?(0,i.pi)((0,i.pi)({},o),{result:a.canon.admit(o.result)}):o:((0,y.HL)(e.context.store,e.enclosingRef.__ref),a.execSelectionSetImpl(e))}),{max:this.config.resultCacheMaxSize,keyArgs:A,makeCacheKey:function(e,a,n,i){if((0,y.ur)(n.store))return n.store.makeCacheKey(e,(0,u.Yk)(a)?a.__ref:a,n.varString,i)}}),this.executeSubSelectedArray=(0,t.re)((function(e){return(0,y.HL)(e.context.store,e.enclosingRef.__ref),a.execSubSelectedArrayImpl(e)}),{max:this.config.resultCacheMaxSize,makeCacheKey:function(e){var a=e.field,n=e.array,i=e.context
if((0,y.ur)(i.store))return i.store.makeCacheKey(a,n,i.varString)}})}return e.prototype.resetCanon=function(){this.canon=new S.h},e.prototype.diffQueryAgainstStore=function(e){var a=e.store,n=e.query,r=e.rootId,t=void 0===r?"ROOT_QUERY":r,o=e.variables,s=e.returnPartialData,c=void 0===s||s,d=e.canonizeResults,h=void 0===d?this.config.canonizeResults:d,v=this.config.cache.policies
o=(0,i.pi)((0,i.pi)({},(0,p.O4)((0,p.iW)(n))),o)
var g,k=(0,u.kQ)(t),y=new m.w0,b=this.executeSelectionSet({selectionSet:(0,p.p$)(n).selectionSet,objectOrReference:k,enclosingRef:k,context:{store:a,query:n,policies:v,variables:o,varString:(0,S.B)(o),canonizeResults:h,fragmentMap:(0,f.F)((0,p.kU)(n)),merge:function(e,a){return y.merge(e,a)}}})
if(b.missing&&(g=[new l.y(T(b.missing),b.missing,n,o)],!c))throw g[0]
return{result:b.result,complete:!g,missing:g}},e.prototype.isFresh=function(e,a,n,i){if((0,y.ur)(i.store)&&this.knownResults.get(e)===n){var r=this.executeSelectionSet.peek(n,a,i,this.canon.isKnown(e))
if(r&&e===r.result)return!0}return!1},e.prototype.execSelectionSetImpl=function(e){var a=this,n=e.selectionSet,i=e.objectOrReference,r=e.enclosingRef,t=e.context
if((0,u.Yk)(i)&&!t.policies.rootTypenamesById[i.__ref]&&!t.store.has(i.__ref))return{result:this.canon.empty,missing:"Dangling reference to missing ".concat(i.__ref," object")}
var o,s=t.variables,l=t.policies,d=t.store.getFieldValue(i,"__typename"),h={}
function p(e,a){var n
return e.missing&&(o=t.merge(o,((n={})[a]=e.missing,n))),e.result}this.config.addTypename&&"string"==typeof d&&!l.rootIdsByTypename[d]&&(h={__typename:d})
var m=new Set(n.selections)
m.forEach((function(e){var n,g
if((0,v.LZ)(e,s))if((0,u.My)(e)){var k=l.readField({fieldName:e.name.value,field:e,variables:t.variables,from:i},t),y=(0,u.u2)(e)
void 0===k?c.Gw.added(e)||(o=t.merge(o,((n={})[y]="Can't find field '".concat(e.name.value,"' on ").concat((0,u.Yk)(i)?i.__ref+" object":"object "+JSON.stringify(i,null,2)),n))):Array.isArray(k)?k=p(a.executeSubSelectedArray({field:e,array:k,enclosingRef:r,context:t}),y):e.selectionSet?null!=k&&(k=p(a.executeSelectionSet({selectionSet:e.selectionSet,objectOrReference:k,enclosingRef:(0,u.Yk)(k)?k:r,context:t}),y)):t.canonizeResults&&(k=a.canon.pass(k)),void 0!==k&&(h=t.merge(h,((g={})[y]=k,g)))}else{var b=(0,f.hi)(e,t.fragmentMap)
b&&l.fragmentMatches(b,d)&&b.selectionSet.selections.forEach(m.add,m)}}))
var k={result:h,missing:o},y=t.canonizeResults?this.canon.admit(k):(0,g.J)(k)
return y.result&&this.knownResults.set(y.result,n),y},e.prototype.execSubSelectedArrayImpl=function(e){var a,n=this,i=e.field,t=e.array,o=e.enclosingRef,s=e.context
function l(e,n){var i
return e.missing&&(a=s.merge(a,((i={})[n]=e.missing,i))),e.result}return i.selectionSet&&(t=t.filter(s.store.canRead)),t=t.map((function(e,a){return null===e?null:Array.isArray(e)?l(n.executeSubSelectedArray({field:i,array:e,enclosingRef:o,context:s}),a):i.selectionSet?l(n.executeSelectionSet({selectionSet:i.selectionSet,objectOrReference:e,enclosingRef:(0,u.Yk)(e)?e:o,context:s}),a):(__DEV__&&function(e,a,n){if(!a.selectionSet){var i=new Set([n])
i.forEach((function(n){(0,k.s)(n)&&(__DEV__?(0,r.kG)(!(0,u.Yk)(n),"Missing selection set for object of type ".concat((0,b.jp)(e,n)," returned for query field ").concat(a.name.value)):(0,r.kG)(!(0,u.Yk)(n),5),Object.values(n).forEach(i.add,i))}))}}(s.store,i,e),e)})),{result:s.canonizeResults?this.canon.admit(t):t,missing:a}},e}()
function T(e){try{JSON.stringify(e,(function(e,a){if("string"==typeof a)throw a
return a}))}catch(e){return e}}var _=n(9585),w=n(7948),j=n(708),E=n(7155)
function N(e,a,n){var r="".concat(a).concat(n),t=e.flavors.get(r)
return t||e.flavors.set(r,t=e.clientOnly===a&&e.deferred===n?e:(0,i.pi)((0,i.pi)({},e),{clientOnly:a,deferred:n})),t}var B=function(){function e(e,a){this.cache=e,this.reader=a}return e.prototype.writeToStore=function(e,a){var n=this,t=a.query,s=a.result,l=a.dataId,c=a.variables,d=a.overwrite,h=(0,p.$H)(t),m=(0,b.ig)()
c=(0,i.pi)((0,i.pi)({},(0,p.O4)(h)),c)
var v={store:e,written:Object.create(null),merge:function(e,a){return m.merge(e,a)},variables:c,varString:(0,S.B)(c),fragmentMap:(0,f.F)((0,p.kU)(t)),overwrite:!!d,incomingById:new Map,clientOnly:!1,deferred:!1,flavors:new Map},g=this.processSelectionSet({result:s||Object.create(null),dataId:l,selectionSet:h.selectionSet,mergeTree:{map:new Map},context:v})
if(!(0,u.Yk)(g))throw __DEV__?new r.ej("Could not identify object ".concat(JSON.stringify(s))):new r.ej(6)
return v.incomingById.forEach((function(a,i){var t=a.storeObject,s=a.mergeTree,l=a.fieldNodeSet,c=(0,u.kQ)(i)
if(s&&s.map.size){var d=n.applyMerges(s,c,t,v)
if((0,u.Yk)(d))return
t=d}if(__DEV__&&!v.overwrite){var h=Object.create(null)
l.forEach((function(e){e.selectionSet&&(h[e.name.value]=!0)})),Object.keys(t).forEach((function(e){(function(e){return!0===h[(0,b.E_)(e)]})(e)&&!function(e){var a=s&&s.map.get(e)
return Boolean(a&&a.info&&a.info.merge)}(e)&&function(e,a,n,i){var t=function(e){var a=i.getFieldValue(e,n)
return"object"==typeof a&&a},s=t(e)
if(s){var l=t(a)
if(l&&!(0,u.Yk)(s)&&!(0,o.D)(s,l)&&!Object.keys(s).every((function(e){return void 0!==i.getFieldValue(l,e)}))){var c=i.getFieldValue(e,"__typename")||i.getFieldValue(a,"__typename"),d=(0,b.E_)(n),h="".concat(c,".").concat(d)
if(!K.has(h)){K.add(h)
var p=[]
Array.isArray(s)||Array.isArray(l)||[s,l].forEach((function(e){var a=i.getFieldValue(e,"__typename")
"string"!=typeof a||p.includes(a)||p.push(a)})),__DEV__&&r.kG.warn("Cache data may be lost when replacing the ".concat(d," field of a ").concat(c," object.\n\nTo address this problem (which is not a bug in Apollo Client), ").concat(p.length?"either ensure all objects of type "+p.join(" and ")+" have an ID or a custom merge function, or ":"","define a custom merge function for the ").concat(h," field, so InMemoryCache can safely merge these objects:\n\n  existing: ").concat(JSON.stringify(s).slice(0,1e3),"\n  incoming: ").concat(JSON.stringify(l).slice(0,1e3),"\n\nFor more information about these options, please refer to the documentation:\n\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\n"))}}}}(c,t,e,v.store)}))}e.merge(i,t)})),e.retain(g.__ref),g},e.prototype.processSelectionSet=function(e){var a=this,n=e.dataId,t=e.result,o=e.selectionSet,s=e.context,l=e.mergeTree,d=this.cache.policies,h=Object.create(null),p=n&&d.rootTypenamesById[n]||(0,u.qw)(t,o,s.fragmentMap)||n&&s.store.get(n,"__typename")
"string"==typeof p&&(h.__typename=p)
var m=function(){var e=(0,E.y)(arguments,h,s.variables)
if((0,u.Yk)(e.from)){var a=s.incomingById.get(e.from.__ref)
if(a){var n=d.readField((0,i.pi)((0,i.pi)({},e),{from:a.storeObject}),s)
if(void 0!==n)return n}}return d.readField(e,s)},f=new Set
this.flattenFields(o,t,s,p).forEach((function(e,n){var i,o=(0,u.u2)(n),s=t[o]
if(f.add(n),void 0!==s){var v=d.getStoreFieldName({typename:p,fieldName:n.name.value,field:n,variables:e.variables}),g=L(l,v),k=a.processFieldValue(s,n,n.selectionSet?N(e,!1,!1):e,g),y=void 0
n.selectionSet&&((0,u.Yk)(k)||(0,b.j)(k))&&(y=m("__typename",k))
var S=d.getMergeFunction(p,n.name.value,y)
S?g.info={field:n,typename:p,merge:S}:C(l,v),h=e.merge(h,((i={})[v]=k,i))}else!__DEV__||e.clientOnly||e.deferred||c.Gw.added(n)||d.getReadFunction(p,n.name.value)||__DEV__&&r.kG.error("Missing field '".concat((0,u.u2)(n),"' while writing result ").concat(JSON.stringify(t,null,2)).substring(0,1e3))}))
try{var v=d.identify(t,{typename:p,selectionSet:o,fragmentMap:s.fragmentMap,storeObject:h,readField:m}),g=v[0],k=v[1]
n=n||g,k&&(h=s.merge(h,k))}catch(e){if(!n)throw e}if("string"==typeof n){var y=(0,u.kQ)(n),S=s.written[n]||(s.written[n]=[])
if(S.indexOf(o)>=0)return y
if(S.push(o),this.reader&&this.reader.isFresh(t,y,o,s))return y
var A=s.incomingById.get(n)
return A?(A.storeObject=s.merge(A.storeObject,h),A.mergeTree=D(A.mergeTree,l),f.forEach((function(e){return A.fieldNodeSet.add(e)}))):s.incomingById.set(n,{storeObject:h,mergeTree:x(l)?void 0:l,fieldNodeSet:f}),y}return h},e.prototype.processFieldValue=function(e,a,n,i){var r=this
return a.selectionSet&&null!==e?Array.isArray(e)?e.map((function(e,t){var o=r.processFieldValue(e,a,n,L(i,t))
return C(i,t),o})):this.processSelectionSet({result:e,selectionSet:a.selectionSet,context:n,mergeTree:i}):__DEV__?(0,w.X)(e):e},e.prototype.flattenFields=function(e,a,n,i){void 0===i&&(i=(0,u.qw)(a,e,n.fragmentMap))
var r=new Map,t=this.cache.policies,o=new _.B(!1)
return function e(s,l){var c=o.lookup(s,l.clientOnly,l.deferred)
c.visited||(c.visited=!0,s.selections.forEach((function(o){if((0,v.LZ)(o,n.variables)){var s=l.clientOnly,c=l.deferred
if(s&&c||!(0,j.O)(o.directives)||o.directives.forEach((function(e){var a=e.name.value
if("client"===a&&(s=!0),"defer"===a){var i=(0,u.NC)(e,n.variables)
i&&!1===i.if||(c=!0)}})),(0,u.My)(o)){var d=r.get(o)
d&&(s=s&&d.clientOnly,c=c&&d.deferred),r.set(o,N(n,s,c))}else{var h=(0,f.hi)(o,n.fragmentMap)
h&&t.fragmentMatches(h,i,a,n.variables)&&e(h.selectionSet,N(n,s,c))}}})))}(e,n),r},e.prototype.applyMerges=function(e,a,n,t,o){var s,l=this
if(e.map.size&&!(0,u.Yk)(n)){var c,d=Array.isArray(n)||!(0,u.Yk)(a)&&!(0,b.j)(a)?void 0:a,h=n
d&&!o&&(o=[(0,u.Yk)(d)?d.__ref:d])
var p=function(e,a){return Array.isArray(e)?"number"==typeof a?e[a]:void 0:t.store.getFieldValue(e,String(a))}
e.map.forEach((function(e,a){var n=p(d,a),i=p(h,a)
if(void 0!==i){o&&o.push(a)
var s=l.applyMerges(e,n,i,t,o)
s!==i&&(c=c||new Map).set(a,s),o&&(0,r.kG)(o.pop()===a)}})),c&&(n=Array.isArray(h)?h.slice(0):(0,i.pi)({},h),c.forEach((function(e,a){n[a]=e})))}return e.info?this.cache.policies.runMergeFunction(a,n,e.info,t,o&&(s=t.store).getStorage.apply(s,o)):n},e}(),P=[]
function L(e,a){var n=e.map
return n.has(a)||n.set(a,P.pop()||{map:new Map}),n.get(a)}function D(e,a){if(e===a||!a||x(a))return e
if(!e||x(e))return a
var n=e.info&&a.info?(0,i.pi)((0,i.pi)({},e.info),a.info):e.info||a.info,r=e.map.size&&a.map.size,t={info:n,map:r?new Map:e.map.size?e.map:a.map}
if(r){var o=new Set(a.map.keys())
e.map.forEach((function(e,n){t.map.set(n,D(e,a.map.get(n))),o.delete(n)})),o.forEach((function(n){t.map.set(n,D(a.map.get(n),e.map.get(n)))}))}return t}function x(e){return!e||!(e.info||e.map.size)}function C(e,a){var n=e.map,i=n.get(a)
i&&x(i)&&(P.push(i),n.delete(a))}var K=new Set,R=n(4435),z=function(e){function a(a){void 0===a&&(a={})
var n=e.call(this)||this
return n.watches=new Set,n.typenameDocumentCache=new Map,n.makeVar=R.QS,n.txCount=0,n.config=(0,b.jS)(a),n.addTypename=!!n.config.addTypename,n.policies=new E.r({cache:n,dataIdFromObject:n.config.dataIdFromObject,possibleTypes:n.config.possibleTypes,typePolicies:n.config.typePolicies}),n.init(),n}return(0,i.ZT)(a,e),a.prototype.init=function(){var e=this.data=new y.cf.Root({policies:this.policies,resultCaching:this.config.resultCaching})
this.optimisticData=e.stump,this.resetResultCache()},a.prototype.resetResultCache=function(e){var a=this,n=this.storeReader
this.storeWriter=new B(this,this.storeReader=new M({cache:this,addTypename:this.addTypename,resultCacheMaxSize:this.config.resultCacheMaxSize,canonizeResults:(0,b.lg)(this.config),canon:e?void 0:n&&n.canon})),this.maybeBroadcastWatch=(0,t.re)((function(e,n){return a.broadcastWatch(e,n)}),{max:this.config.resultCacheMaxSize,makeCacheKey:function(e){var n=e.optimistic?a.optimisticData:a.data
if((0,y.ur)(n)){var i=e.optimistic,r=e.rootId,t=e.variables
return n.makeCacheKey(e.query,e.callback,(0,S.B)({optimistic:i,rootId:r,variables:t}))}}}),new Set([this.data.group,this.optimisticData.group]).forEach((function(e){return e.resetCaching()}))},a.prototype.restore=function(e){return this.init(),e&&this.data.replace(e),this},a.prototype.extract=function(e){return void 0===e&&(e=!1),(e?this.optimisticData:this.data).extract()},a.prototype.read=function(e){var a=e.returnPartialData,n=void 0!==a&&a
try{return this.storeReader.diffQueryAgainstStore((0,i.pi)((0,i.pi)({},e),{store:e.optimistic?this.optimisticData:this.data,config:this.config,returnPartialData:n})).result||null}catch(e){if(e instanceof l.y)return null
throw e}},a.prototype.write=function(e){try{return++this.txCount,this.storeWriter.writeToStore(this.data,e)}finally{--this.txCount||!1===e.broadcast||this.broadcastWatches()}},a.prototype.modify=function(e){if(b.RI.call(e,"id")&&!e.id)return!1
var a=e.optimistic?this.optimisticData:this.data
try{return++this.txCount,a.modify(e.id||"ROOT_QUERY",e.fields)}finally{--this.txCount||!1===e.broadcast||this.broadcastWatches()}},a.prototype.diff=function(e){return this.storeReader.diffQueryAgainstStore((0,i.pi)((0,i.pi)({},e),{store:e.optimistic?this.optimisticData:this.data,rootId:e.id||"ROOT_QUERY",config:this.config}))},a.prototype.watch=function(e){var a=this
return this.watches.size||(0,R._v)(this),this.watches.add(e),e.immediate&&this.maybeBroadcastWatch(e),function(){a.watches.delete(e)&&!a.watches.size&&(0,R.li)(a),a.maybeBroadcastWatch.forget(e)}},a.prototype.gc=function(e){S.B.reset()
var a=this.optimisticData.gc()
return e&&!this.txCount&&(e.resetResultCache?this.resetResultCache(e.resetResultIdentities):e.resetResultIdentities&&this.storeReader.resetCanon()),a},a.prototype.retain=function(e,a){return(a?this.optimisticData:this.data).retain(e)},a.prototype.release=function(e,a){return(a?this.optimisticData:this.data).release(e)},a.prototype.identify=function(e){if((0,u.Yk)(e))return e.__ref
try{return this.policies.identify(e)[0]}catch(e){__DEV__&&r.kG.warn(e)}},a.prototype.evict=function(e){if(!e.id){if(b.RI.call(e,"id"))return!1
e=(0,i.pi)((0,i.pi)({},e),{id:"ROOT_QUERY"})}try{return++this.txCount,this.optimisticData.evict(e,this.data)}finally{--this.txCount||!1===e.broadcast||this.broadcastWatches()}},a.prototype.reset=function(e){var a=this
return this.init(),S.B.reset(),e&&e.discardWatches?(this.watches.forEach((function(e){return a.maybeBroadcastWatch.forget(e)})),this.watches.clear(),(0,R.li)(this)):this.broadcastWatches(),Promise.resolve()},a.prototype.removeOptimistic=function(e){var a=this.optimisticData.removeLayer(e)
a!==this.optimisticData&&(this.optimisticData=a,this.broadcastWatches())},a.prototype.batch=function(e){var a,n=this,r=e.update,t=e.optimistic,o=void 0===t||t,s=e.removeOptimistic,l=e.onWatchUpdated,u=function(e){var i=n,t=i.data,o=i.optimisticData;++n.txCount,e&&(n.data=n.optimisticData=e)
try{return a=r(n)}finally{--n.txCount,n.data=t,n.optimisticData=o}},c=new Set
return l&&!this.txCount&&this.broadcastWatches((0,i.pi)((0,i.pi)({},e),{onWatchUpdated:function(e){return c.add(e),!1}})),"string"==typeof o?this.optimisticData=this.optimisticData.addLayer(o,u):!1===o?u(this.data):u(),"string"==typeof s&&(this.optimisticData=this.optimisticData.removeLayer(s)),l&&c.size?(this.broadcastWatches((0,i.pi)((0,i.pi)({},e),{onWatchUpdated:function(e,a){var n=l.call(this,e,a)
return!1!==n&&c.delete(e),n}})),c.size&&c.forEach((function(e){return n.maybeBroadcastWatch.dirty(e)}))):this.broadcastWatches(e),a},a.prototype.performTransaction=function(e,a){return this.batch({update:e,optimistic:a||null!==a})},a.prototype.transformDocument=function(e){if(this.addTypename){var a=this.typenameDocumentCache.get(e)
return a||(a=(0,c.Gw)(e),this.typenameDocumentCache.set(e,a),this.typenameDocumentCache.set(a,a)),a}return e},a.prototype.broadcastWatches=function(e){var a=this
this.txCount||this.watches.forEach((function(n){return a.maybeBroadcastWatch(n,e)}))},a.prototype.broadcastWatch=function(e,a){var n=e.lastDiff,i=this.diff(e)
a&&(e.optimistic&&"string"==typeof a.optimistic&&(i.fromOptimisticTransaction=!0),a.onWatchUpdated&&!1===a.onWatchUpdated.call(this,e,i,n))||n&&(0,o.D)(n.result,i.result)||e.callback(e.lastDiff=i,n)},a}(s.R)},8523:(e,a,n)=>{"use strict"
n.d(a,{h:()=>u,B:()=>c})
var i,r,t=n(2985),o=(n(3199),n(9585)),s=n(1173),l=n(2414),u=function(){function e(){this.known=new(l.sy?WeakSet:Set),this.pool=new o.B(l.mr),this.passes=new WeakMap,this.keysByJSON=new Map,this.empty=this.admit({})}return e.prototype.isKnown=function(e){return(0,s.s)(e)&&this.known.has(e)},e.prototype.pass=function(e){if((0,s.s)(e)){var a=function(e){return(0,s.s)(e)?Array.isArray(e)?e.slice(0):(0,t.pi)({__proto__:Object.getPrototypeOf(e)},e):e}(e)
return this.passes.set(a,e),a}return e},e.prototype.admit=function(e){var a=this
if((0,s.s)(e)){var n=this.passes.get(e)
if(n)return n
switch(Object.getPrototypeOf(e)){case Array.prototype:if(this.known.has(e))return e
var i=e.map(this.admit,this)
return(l=this.pool.lookupArray(i)).array||(this.known.add(l.array=i),__DEV__&&Object.freeze(i)),l.array
case null:case Object.prototype:if(this.known.has(e))return e
var r=Object.getPrototypeOf(e),t=[r],o=this.sortedKeys(e)
t.push(o.json)
var l,u=t.length
if(o.sorted.forEach((function(n){t.push(a.admit(e[n]))})),!(l=this.pool.lookupArray(t)).object){var c=l.object=Object.create(r)
this.known.add(c),o.sorted.forEach((function(e,a){c[e]=t[u+a]})),__DEV__&&Object.freeze(c)}return l.object}}return e},e.prototype.sortedKeys=function(e){var a=Object.keys(e),n=this.pool.lookupArray(a)
if(!n.keys){a.sort()
var i=JSON.stringify(a);(n.keys=this.keysByJSON.get(i))||this.keysByJSON.set(i,n.keys={sorted:a,json:i})}return n.keys},e}(),c=Object.assign((function(e){if((0,s.s)(e)){void 0===i&&d()
var a=i.admit(e),n=r.get(a)
return void 0===n&&r.set(a,n=JSON.stringify(a)),n}return JSON.stringify(e)}),{reset:d})
function d(){i=new u,r=new(l.mr?WeakMap:Map)}},7155:(e,a,n)=>{"use strict"
n.d(a,{r:()=>j,y:()=>N})
var i=n(2985),r=n(3199),t=n(3994),o=n(2411),s=n(1173),l=n(8797),u=n(4435),c=n(8523),d=n(708),h=n(509),p=Object.create(null)
function m(e){var a=JSON.stringify(e)
return p[a]||(p[a]=Object.create(null))}function f(e){var a=m(e)
return a.keyFieldsFn||(a.keyFieldsFn=function(a,n){var i=function(e,a){return n.readField(a,e)},t=n.keyObject=g(e,(function(e){var t=b(n.storeObject,e,i)
return void 0===t&&a!==n.storeObject&&l.RI.call(a,e[0])&&(t=b(a,e,y)),__DEV__?(0,r.kG)(void 0!==t,"Missing field '".concat(e.join("."),"' while extracting keyFields from ").concat(JSON.stringify(a))):(0,r.kG)(void 0!==t,2),t}))
return"".concat(n.typename,":").concat(JSON.stringify(t))})}function v(e){var a=m(e)
return a.keyArgsFn||(a.keyArgsFn=function(a,n){var i=n.field,r=n.variables,t=n.fieldName,s=g(e,(function(e){var n=e[0],t=n.charAt(0)
if("@"!==t)if("$"!==t){if(a)return b(a,e)}else{var s=n.slice(1)
if(r&&l.RI.call(r,s)){var u=e.slice(0)
return u[0]=s,b(r,u)}}else if(i&&(0,d.O)(i.directives)){var c=n.slice(1),h=i.directives.find((function(e){return e.name.value===c})),p=h&&(0,o.NC)(h,r)
return p&&b(p,e.slice(1))}})),u=JSON.stringify(s)
return(a||"{}"!==u)&&(t+=":"+u),t})}function g(e,a){var n=new h.w0
return k(e).reduce((function(e,i){var r,t=a(i)
if(void 0!==t){for(var o=i.length-1;o>=0;--o)(r={})[i[o]]=t,t=r
e=n.merge(e,t)}return e}),Object.create(null))}function k(e){var a=m(e)
if(!a.paths){var n=a.paths=[],i=[]
e.forEach((function(a,r){Array.isArray(a)?(k(a).forEach((function(e){return n.push(i.concat(e))})),i.length=0):(i.push(a),Array.isArray(e[r+1])||(n.push(i.slice(0)),i.length=0))}))}return a.paths}function y(e,a){return e[a]}function b(e,a,n){return n=n||y,S(a.reduce((function e(a,i){return Array.isArray(a)?a.map((function(a){return e(a,i)})):a&&n(a,i)}),e))}function S(e){return(0,s.s)(e)?Array.isArray(e)?e.map(S):g(Object.keys(e).sort(),(function(a){return b(e,a)})):e}function A(e){return void 0!==e.args?e.args:e.field?(0,o.NC)(e.field,e.variables):null}o.PT.setStringify(c.B)
var M=function(){},T=function(e,a){return a.fieldName},_=function(e,a,n){return(0,n.mergeObjects)(e,a)},w=function(e,a){return a},j=function(){function e(e){this.config=e,this.typePolicies=Object.create(null),this.toBeAdded=Object.create(null),this.supertypeMap=new Map,this.fuzzySubtypes=new Map,this.rootIdsByTypename=Object.create(null),this.rootTypenamesById=Object.create(null),this.usingPossibleTypes=!1,this.config=(0,i.pi)({dataIdFromObject:l.uG},e),this.cache=this.config.cache,this.setRootTypename("Query"),this.setRootTypename("Mutation"),this.setRootTypename("Subscription"),e.possibleTypes&&this.addPossibleTypes(e.possibleTypes),e.typePolicies&&this.addTypePolicies(e.typePolicies)}return e.prototype.identify=function(e,a){var n,r=this,t=a&&(a.typename||(null===(n=a.storeObject)||void 0===n?void 0:n.__typename))||e.__typename
if(t===this.rootTypenamesById.ROOT_QUERY)return["ROOT_QUERY"]
for(var o,s=a&&a.storeObject||e,l=(0,i.pi)((0,i.pi)({},a),{typename:t,storeObject:s,readField:a&&a.readField||function(){var e=N(arguments,s)
return r.readField(e,{store:r.cache.data,variables:e.variables})}}),u=t&&this.getTypePolicy(t),c=u&&u.keyFn||this.config.dataIdFromObject;c;){var d=c(e,l)
if(!Array.isArray(d)){o=d
break}c=f(d)}return o=o?String(o):void 0,l.keyObject?[o,l.keyObject]:[o]},e.prototype.addTypePolicies=function(e){var a=this
Object.keys(e).forEach((function(n){var r=e[n],t=r.queryType,o=r.mutationType,s=r.subscriptionType,u=(0,i._T)(r,["queryType","mutationType","subscriptionType"])
t&&a.setRootTypename("Query",n),o&&a.setRootTypename("Mutation",n),s&&a.setRootTypename("Subscription",n),l.RI.call(a.toBeAdded,n)?a.toBeAdded[n].push(u):a.toBeAdded[n]=[u]}))},e.prototype.updateTypePolicy=function(e,a){var n=this,i=this.getTypePolicy(e),r=a.keyFields,t=a.fields
function o(e,a){e.merge="function"==typeof a?a:!0===a?_:!1===a?w:e.merge}o(i,a.merge),i.keyFn=!1===r?M:Array.isArray(r)?f(r):"function"==typeof r?r:i.keyFn,t&&Object.keys(t).forEach((function(a){var i=n.getFieldPolicy(e,a,!0),r=t[a]
if("function"==typeof r)i.read=r
else{var s=r.keyArgs,l=r.read,u=r.merge
i.keyFn=!1===s?T:Array.isArray(s)?v(s):"function"==typeof s?s:i.keyFn,"function"==typeof l&&(i.read=l),o(i,u)}i.read&&i.merge&&(i.keyFn=i.keyFn||T)}))},e.prototype.setRootTypename=function(e,a){void 0===a&&(a=e)
var n="ROOT_"+e.toUpperCase(),i=this.rootTypenamesById[n]
a!==i&&(__DEV__?(0,r.kG)(!i||i===e,"Cannot change root ".concat(e," __typename more than once")):(0,r.kG)(!i||i===e,3),i&&delete this.rootIdsByTypename[i],this.rootIdsByTypename[a]=n,this.rootTypenamesById[n]=a)},e.prototype.addPossibleTypes=function(e){var a=this
this.usingPossibleTypes=!0,Object.keys(e).forEach((function(n){a.getSupertypeSet(n,!0),e[n].forEach((function(e){a.getSupertypeSet(e,!0).add(n)
var i=e.match(l.$O)
i&&i[0]===e||a.fuzzySubtypes.set(e,new RegExp(e))}))}))},e.prototype.getTypePolicy=function(e){var a=this
if(!l.RI.call(this.typePolicies,e)){var n=this.typePolicies[e]=Object.create(null)
n.fields=Object.create(null)
var r=this.supertypeMap.get(e)
r&&r.size&&r.forEach((function(e){var r=a.getTypePolicy(e),t=r.fields,o=(0,i._T)(r,["fields"])
Object.assign(n,o),Object.assign(n.fields,t)}))}var t=this.toBeAdded[e]
return t&&t.length&&t.splice(0).forEach((function(n){a.updateTypePolicy(e,n)})),this.typePolicies[e]},e.prototype.getFieldPolicy=function(e,a,n){if(e){var i=this.getTypePolicy(e).fields
return i[a]||n&&(i[a]=Object.create(null))}},e.prototype.getSupertypeSet=function(e,a){var n=this.supertypeMap.get(e)
return!n&&a&&this.supertypeMap.set(e,n=new Set),n},e.prototype.fragmentMatches=function(e,a,n,i){var t=this
if(!e.typeCondition)return!0
if(!a)return!1
var o=e.typeCondition.name.value
if(a===o)return!0
if(this.usingPossibleTypes&&this.supertypeMap.has(o))for(var s=this.getSupertypeSet(a,!0),u=[s],c=function(e){var a=t.getSupertypeSet(e,!1)
a&&a.size&&u.indexOf(a)<0&&u.push(a)},d=!(!n||!this.fuzzySubtypes.size),h=!1,p=0;p<u.length;++p){var m=u[p]
if(m.has(o))return s.has(o)||(h&&__DEV__&&r.kG.warn("Inferring subtype ".concat(a," of supertype ").concat(o)),s.add(o)),!0
m.forEach(c),d&&p===u.length-1&&(0,l.RC)(e.selectionSet,n,i)&&(d=!1,h=!0,this.fuzzySubtypes.forEach((function(e,n){var i=a.match(e)
i&&i[0]===a&&c(n)})))}return!1},e.prototype.hasKeyArgs=function(e,a){var n=this.getFieldPolicy(e,a,!1)
return!(!n||!n.keyFn)},e.prototype.getStoreFieldName=function(e){var a,n=e.typename,i=e.fieldName,r=this.getFieldPolicy(n,i,!1),t=r&&r.keyFn
if(t&&n)for(var s={typename:n,fieldName:i,field:e.field||null,variables:e.variables},u=A(e);t;){var c=t(u,s)
if(!Array.isArray(c)){a=c||i
break}t=v(c)}return void 0===a&&(a=e.field?(0,o.vf)(e.field,e.variables):(0,o.PT)(i,A(e))),!1===a?i:i===(0,l.E_)(a)?a:i+":"+a},e.prototype.readField=function(e,a){var n=e.from
if(n&&(e.field||e.fieldName)){if(void 0===e.typename){var i=a.store.getFieldValue(n,"__typename")
i&&(e.typename=i)}var r=this.getStoreFieldName(e),t=(0,l.E_)(r),s=a.store.getFieldValue(n,r),c=this.getFieldPolicy(e.typename,t,!1),d=c&&c.read
if(d){var h=E(this,n,e,a,a.store.getStorage((0,o.Yk)(n)?n.__ref:n,r))
return u.ab.withValue(this.cache,d,[s,h])}return s}},e.prototype.getReadFunction=function(e,a){var n=this.getFieldPolicy(e,a,!1)
return n&&n.read},e.prototype.getMergeFunction=function(e,a,n){var i=this.getFieldPolicy(e,a,!1),r=i&&i.merge
return!r&&n&&(r=(i=this.getTypePolicy(n))&&i.merge),r},e.prototype.runMergeFunction=function(e,a,n,i,r){var t=n.field,o=n.typename,s=n.merge
return s===_?B(i.store)(e,a):s===w?a:(i.overwrite&&(e=void 0),s(e,a,E(this,void 0,{typename:o,fieldName:t.name.value,field:t,variables:i.variables},i,r||Object.create(null))))},e}()
function E(e,a,n,i,r){var t=e.getStoreFieldName(n),s=(0,l.E_)(t),u=n.variables||i.variables,c=i.store,d=c.toReference,h=c.canRead
return{args:A(n),field:n.field||null,fieldName:s,storeFieldName:t,variables:u,isReference:o.Yk,toReference:d,storage:r,cache:e.cache,canRead:h,readField:function(){return e.readField(N(arguments,a,i),i)},mergeObjects:B(i.store)}}function N(e,a,n){var o,s,u,c=e[0],d=e[1],h=e.length
return"string"==typeof c?o={fieldName:c,from:h>1?d:a}:(o=(0,i.pi)({},c),l.RI.call(o,"from")||(o.from=a)),__DEV__&&void 0===o.from&&__DEV__&&r.kG.warn("Undefined 'from' passed to readField with arguments ".concat((s=Array.from(e),u=(0,t.X)("stringifyForDisplay"),JSON.stringify(s,(function(e,a){return void 0===a?u:a})).split(JSON.stringify(u)).join("<undefined>")))),void 0===o.variables&&(o.variables=n),o}function B(e){return function(a,n){if(Array.isArray(a)||Array.isArray(n))throw __DEV__?new r.ej("Cannot automatically merge arrays"):new r.ej(4)
if((0,s.s)(a)&&(0,s.s)(n)){var t=e.getFieldValue(a,"__typename"),u=e.getFieldValue(n,"__typename")
if(t&&u&&t!==u)return n
if((0,o.Yk)(a)&&(0,l.j)(n))return e.merge(a.__ref,n),a
if((0,l.j)(a)&&(0,o.Yk)(n))return e.merge(a,n.__ref),n
if((0,l.j)(a)&&(0,l.j)(n))return(0,i.pi)((0,i.pi)({},a),n)}return n}}},4435:(e,a,n)=>{"use strict"
n.d(a,{ab:()=>r,li:()=>s,_v:()=>l,QS:()=>u})
var i=n(6593),r=new(n(768).g7),t=new WeakMap
function o(e){var a=t.get(e)
return a||t.set(e,a={vars:new Set,dep:(0,i.dP)()}),a}function s(e){o(e).vars.forEach((function(a){return a.forgetCache(e)}))}function l(e){o(e).vars.forEach((function(a){return a.attachCache(e)}))}function u(e){var a=new Set,n=new Set,i=function(s){if(arguments.length>0){if(e!==s){e=s,a.forEach((function(e){o(e).dep.dirty(i),c(e)}))
var l=Array.from(n)
n.clear(),l.forEach((function(a){return a(e)}))}}else{var u=r.getValue()
u&&(t(u),o(u).dep(i))}return e}
i.onNextChange=function(e){return n.add(e),function(){n.delete(e)}}
var t=i.attachCache=function(e){return a.add(e),o(e).vars.add(i),i}
return i.forgetCache=function(e){return a.delete(e)},i}function c(e){e.broadcastWatches&&e.broadcastWatches()}},3506:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{ApolloCache:()=>ge.R,ApolloClient:()=>fe,ApolloError:()=>U,ApolloLink:()=>t.i,Cache:()=>ve.C,HttpLink:()=>j,InMemoryCache:()=>ke.h,MissingFieldError:()=>ye.y,NetworkStatus:()=>J,Observable:()=>u.y,ObservableQuery:()=>$,applyNextFetchPolicy:()=>ae,checkFetcher:()=>f,concat:()=>Te,createHttpLink:()=>w,createSignalIfSupported:()=>A,defaultDataIdFromObject:()=>be.uG,defaultPrinter:()=>k,disableExperimentalFragmentVariables:()=>Ee.disableExperimentalFragmentVariables,disableFragmentWarnings:()=>Ee.disableFragmentWarnings,empty:()=>Se,enableExperimentalFragmentVariables:()=>Ee.enableExperimentalFragmentVariables,execute:()=>o,fallbackHttpConfig:()=>g,from:()=>Ae,fromError:()=>T,fromPromise:()=>we,gql:()=>Ee.gql,isApolloError:()=>F,isReference:()=>K.Yk,makeReference:()=>K.kQ,makeVar:()=>re.QS,mergeOptions:()=>me,parseAndCheckHttpResponse:()=>m,resetCaches:()=>Ee.resetCaches,rewriteURIForGET:()=>M,selectHttpOptionsAndBody:()=>y,selectHttpOptionsAndBodyInternal:()=>b,selectURI:()=>d,serializeFetchParameter:()=>c,setLogVerbosity:()=>je.U6,split:()=>Me,throwServerError:()=>h,toPromise:()=>_e})
var i=n(3199),r=n(2985),t=n(2050),o=t.i.execute,s=n(868),l=n(9485),u=n(9189),c=function(e,a){var n
try{n=JSON.stringify(e)}catch(e){var r=__DEV__?new i.ej("Network request failed. ".concat(a," is not serializable: ").concat(e.message)):new i.ej(21)
throw r.parseError=e,r}return n},d=function(e,a){return e.getContext().uri||("function"==typeof a?a(e):a||"/graphql")},h=function(e,a,n){var i=new Error(n)
throw i.name="ServerError",i.response=e,i.statusCode=e.status,i.result=a,i},p=Object.prototype.hasOwnProperty
function m(e){return function(a){return a.text().then((function(e){try{return JSON.parse(e)}catch(i){var n=i
throw n.name="ServerParseError",n.response=a,n.statusCode=a.status,n.bodyText=e,n}})).then((function(n){return a.status>=300&&h(a,n,"Response not successful: Received status code ".concat(a.status)),Array.isArray(n)||p.call(n,"data")||p.call(n,"errors")||h(a,n,"Server response was missing for query '".concat(Array.isArray(e)?e.map((function(e){return e.operationName})):e.operationName,"'.")),n}))}}var f=function(e){if(!e&&"undefined"==typeof fetch)throw __DEV__?new i.ej("\n\"fetch\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    "):new i.ej(20)},v=n(6255),g={http:{includeQuery:!0,includeExtensions:!1},headers:{accept:"*/*","content-type":"application/json"},options:{method:"POST"}},k=function(e,a){return a(e)}
function y(e,a){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i]
return n.unshift(a),b.apply(void 0,(0,r.ev)([e,k],n,!1))}function b(e,a){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i]
var t={},o={}
n.forEach((function(e){t=(0,r.pi)((0,r.pi)((0,r.pi)({},t),e.options),{headers:(0,r.pi)((0,r.pi)({},t.headers),S(e.headers))}),e.credentials&&(t.credentials=e.credentials),o=(0,r.pi)((0,r.pi)({},o),e.http)}))
var s=e.operationName,l=e.extensions,u=e.variables,c=e.query,d={operationName:s,variables:u}
return o.includeExtensions&&(d.extensions=l),o.includeQuery&&(d.query=a(c,v.S)),{options:t,body:d}}function S(e){if(e){var a=Object.create(null)
return Object.keys(Object(e)).forEach((function(n){a[n.toLowerCase()]=e[n]})),a}return e}var A=function(){if("undefined"==typeof AbortController)return{controller:!1,signal:!1}
var e=new AbortController
return{controller:e,signal:e.signal}}
function M(e,a){var n=[],i=function(e,a){n.push("".concat(e,"=").concat(encodeURIComponent(a)))}
if("query"in a&&i("query",a.query),a.operationName&&i("operationName",a.operationName),a.variables){var r=void 0
try{r=c(a.variables,"Variables map")}catch(e){return{parseError:e}}i("variables",r)}if(a.extensions){var t=void 0
try{t=c(a.extensions,"Extensions map")}catch(e){return{parseError:e}}i("extensions",t)}var o="",s=e,l=e.indexOf("#");-1!==l&&(o=e.substr(l),s=e.substr(0,l))
var u=-1===s.indexOf("?")?"?":"&"
return{newURI:s+u+n.join("&")+o}}function T(e){return new u.y((function(a){a.error(e)}))}var _=(0,i.wY)((function(){return fetch})),w=function(e){void 0===e&&(e={})
var a=e.uri,n=void 0===a?"/graphql":a,o=e.fetch,s=e.print,h=void 0===s?k:s,p=e.includeExtensions,v=e.useGETForQueries,y=e.includeUnusedVariables,S=void 0!==y&&y,w=(0,r._T)(e,["uri","fetch","print","includeExtensions","useGETForQueries","includeUnusedVariables"])
__DEV__&&f(o||_)
var j={http:{includeExtensions:p},options:w.fetchOptions,credentials:w.credentials,headers:w.headers}
return new t.i((function(e){var a=d(e,n),t=e.getContext(),s={}
if(t.clientAwareness){var p=t.clientAwareness,f=p.name,k=p.version
f&&(s["apollographql-client-name"]=f),k&&(s["apollographql-client-version"]=k)}var y,w=(0,r.pi)((0,r.pi)({},s),t.headers),E={http:t.http,options:t.fetchOptions,credentials:t.credentials,headers:w},N=b(e,h,g,j,E),B=N.options,P=N.body
if(P.variables&&!S){var L=new Set(Object.keys(P.variables));(0,l.Vn)(e.query,{Variable:function(e,a,n){n&&"VariableDefinition"!==n.kind&&L.delete(e.name.value)}}),L.size&&(P.variables=(0,r.pi)({},P.variables),L.forEach((function(e){delete P.variables[e]})))}if(!B.signal){var D=A(),x=D.controller,C=D.signal;(y=x)&&(B.signal=C)}if(v&&!e.query.definitions.some((function(e){return"OperationDefinition"===e.kind&&"mutation"===e.operation}))&&(B.method="GET"),"GET"===B.method){var K=M(a,P),R=K.newURI,z=K.parseError
if(z)return T(z)
a=R}else try{B.body=c(P,"Payload")}catch(z){return T(z)}return new u.y((function(n){return(o||(0,i.wY)((function(){return fetch}))||_)(a,B).then((function(a){return e.setContext({response:a}),a})).then(m(e)).then((function(e){return n.next(e),n.complete(),e})).catch((function(e){"AbortError"!==e.name&&(e.result&&e.result.errors&&e.result.data&&n.next(e.result),n.error(e))})),function(){y&&y.abort()}}))}))},j=function(e){function a(a){void 0===a&&(a={})
var n=e.call(this,w(a).request)||this
return n.options=a,n}return(0,r.ZT)(a,e),a}(t.i),E=n(7812),N=n(8523),B=n(2414)
function P(e,a,n){return new u.y((function(i){var r=i.next,t=i.error,o=i.complete,s=0,l=!1,u={then:function(e){return new Promise((function(a){return a(e())}))}}
function c(e,a){return e?function(a){++s
var n=function(){return e(a)}
u=u.then(n,n).then((function(e){--s,r&&r.call(i,e),l&&d.complete()}),(function(e){throw--s,e})).catch((function(e){t&&t.call(i,e)}))}:function(e){return a&&a.call(i,e)}}var d={next:c(a,r),error:c(n,t),complete:function(){l=!0,s||o&&o.call(i)}},h=e.subscribe(d)
return function(){return h.unsubscribe()}}))}function L(e){return e.errors&&e.errors.length>0||!1}var D=n(4250),x=n(1214),C=n(5252),K=n(2411),R=n(1173),z=n(3994)
function O(e,a,n){var i=[]
e.forEach((function(e){return e[a]&&i.push(e)})),i.forEach((function(e){return e[a](n)}))}function I(e){function a(a){Object.defineProperty(e,a,{value:u.y})}return B.aS&&Symbol.species&&a(Symbol.species),a("@@species"),e}function V(e){return e&&"function"==typeof e.then}var G=function(e){function a(a){var n=e.call(this,(function(e){return n.addObserver(e),function(){return n.removeObserver(e)}}))||this
return n.observers=new Set,n.addCount=0,n.promise=new Promise((function(e,a){n.resolve=e,n.reject=a})),n.handlers={next:function(e){null!==n.sub&&(n.latest=["next",e],O(n.observers,"next",e))},error:function(e){var a=n.sub
null!==a&&(a&&setTimeout((function(){return a.unsubscribe()})),n.sub=null,n.latest=["error",e],n.reject(e),O(n.observers,"error",e))},complete:function(){if(null!==n.sub){var e=n.sources.shift()
e?V(e)?e.then((function(e){return n.sub=e.subscribe(n.handlers)})):n.sub=e.subscribe(n.handlers):(n.sub=null,n.latest&&"next"===n.latest[0]?n.resolve(n.latest[1]):n.resolve(),O(n.observers,"complete"))}}},n.cancel=function(e){n.reject(e),n.sources=[],n.handlers.complete()},n.promise.catch((function(e){})),"function"==typeof a&&(a=[new u.y(a)]),V(a)?a.then((function(e){return n.start(e)}),n.handlers.error):n.start(a),n}return(0,r.ZT)(a,e),a.prototype.start=function(e){void 0===this.sub&&(this.sources=Array.from(e),this.handlers.complete())},a.prototype.deliverLastMessage=function(e){if(this.latest){var a=this.latest[0],n=e[a]
n&&n.call(e,this.latest[1]),null===this.sub&&"next"===a&&e.complete&&e.complete()}},a.prototype.addObserver=function(e){this.observers.has(e)||(this.deliverLastMessage(e),this.observers.add(e),++this.addCount)},a.prototype.removeObserver=function(e,a){this.observers.delete(e)&&--this.addCount<1&&!a&&this.handlers.error(new Error("Observable cancelled prematurely"))},a.prototype.cleanup=function(e){var a=this,n=!1,i=function(){n||(n=!0,a.observers.delete(r),e())},r={next:i,error:i,complete:i},t=this.addCount
this.addObserver(r),this.addCount=t},a}(u.y)
I(G)
var H=n(708)
function F(e){return e.hasOwnProperty("graphQLErrors")}var J,U=function(e){function a(n){var i,r,t=n.graphQLErrors,o=n.clientErrors,s=n.networkError,l=n.errorMessage,u=n.extraInfo,c=e.call(this,l)||this
return c.graphQLErrors=t||[],c.clientErrors=o||[],c.networkError=s||null,c.message=l||(i=c,r="",((0,H.O)(i.graphQLErrors)||(0,H.O)(i.clientErrors))&&(i.graphQLErrors||[]).concat(i.clientErrors||[]).forEach((function(e){var a=e?e.message:"Error message not found."
r+="".concat(a,"\n")})),i.networkError&&(r+="".concat(i.networkError.message,"\n")),r=r.replace(/\n$/,"")),c.extraInfo=u,c.__proto__=a.prototype,c}return(0,r.ZT)(a,e),a}(Error)
function W(e){return!!e&&e<7}!function(e){e[e.loading=1]="loading",e[e.setVariables=2]="setVariables",e[e.fetchMore=3]="fetchMore",e[e.refetch=4]="refetch",e[e.poll=6]="poll",e[e.ready=7]="ready",e[e.error=8]="error"}(J||(J={}))
var Z=n(7948),q=Object.assign,Q=Object.hasOwnProperty,Y=!1,$=function(e){function a(a){var n=a.queryManager,i=a.queryInfo,r=a.options,t=e.call(this,(function(e){try{var a=e._subscription._observer
a&&!a.error&&(a.error=X)}catch(e){}var n=!t.observers.size
t.observers.add(e)
var i=t.last
return i&&i.error?e.error&&e.error(i.error):i&&i.result&&e.next&&e.next(i.result),n&&t.reobserve().catch((function(){})),function(){t.observers.delete(e)&&!t.observers.size&&t.tearDownQuery()}}))||this
t.observers=new Set,t.subscriptions=new Set,t.isTornDown=!1,t.options=r,t.queryId=i.queryId||n.generateQueryId()
var o=(0,D.$H)(r.query)
return t.queryName=o&&o.name&&o.name.value,t.initialFetchPolicy=r.fetchPolicy||"cache-first",t.queryManager=n,t.queryInfo=i,t}return(0,r.ZT)(a,e),Object.defineProperty(a.prototype,"variables",{get:function(){return this.options.variables},enumerable:!1,configurable:!0}),a.prototype.result=function(){var e=this
return new Promise((function(a,n){var i={next:function(n){a(n),e.observers.delete(i),e.observers.size||e.queryManager.removeQuery(e.queryId),setTimeout((function(){r.unsubscribe()}),0)},error:n},r=e.subscribe(i)}))},a.prototype.getCurrentResult=function(e){void 0===e&&(e=!0)
var a=this.getLastResult(!0),n=this.queryInfo.networkStatus||a&&a.networkStatus||J.ready,i=(0,r.pi)((0,r.pi)({},a),{loading:W(n),networkStatus:n}),t=this.options.fetchPolicy,o=void 0===t?"cache-first":t
if("network-only"===o||"no-cache"===o||"standby"===o||this.queryManager.transform(this.options.query).hasForcedResolvers);else{var s=this.queryInfo.getDiff();(s.complete||this.options.returnPartialData)&&(i.data=s.result),(0,E.D)(i.data,{})&&(i.data=void 0),s.complete?(delete i.partial,!s.complete||i.networkStatus!==J.loading||"cache-first"!==o&&"cache-only"!==o||(i.networkStatus=J.ready,i.loading=!1)):i.partial=!0,!__DEV__||s.complete||this.options.partialRefetch||i.loading||i.data||i.error||ee(s.missing)}return e&&this.updateLastResult(i),i},a.prototype.isDifferentFromLastResult=function(e){return!this.last||!(0,E.D)(this.last.result,e)},a.prototype.getLast=function(e,a){var n=this.last
if(n&&n[e]&&(!a||(0,E.D)(n.variables,this.variables)))return n[e]},a.prototype.getLastResult=function(e){return this.getLast("result",e)},a.prototype.getLastError=function(e){return this.getLast("error",e)},a.prototype.resetLastResults=function(){delete this.last,this.isTornDown=!1},a.prototype.resetQueryStoreErrors=function(){this.queryManager.resetErrors(this.queryId)},a.prototype.refetch=function(e){var a,n={pollInterval:0},t=this.options.fetchPolicy
if(n.fetchPolicy="cache-and-network"===t?t:"no-cache"===t?"no-cache":"network-only",__DEV__&&e&&Q.call(e,"variables")){var o=(0,D.iW)(this.options.query),s=o.variableDefinitions
s&&s.some((function(e){return"variables"===e.variable.name.value}))||__DEV__&&i.kG.warn("Called refetch(".concat(JSON.stringify(e),") for query ").concat((null===(a=o.name)||void 0===a?void 0:a.value)||JSON.stringify(o),", which does not declare a $variables variable.\nDid you mean to call refetch(variables) instead of refetch({ variables })?"))}return e&&!(0,E.D)(this.options.variables,e)&&(n.variables=this.options.variables=(0,r.pi)((0,r.pi)({},this.options.variables),e)),this.queryInfo.resetLastWrite(),this.reobserve(n,J.refetch)},a.prototype.fetchMore=function(e){var a=this,n=(0,r.pi)((0,r.pi)({},e.query?e:(0,r.pi)((0,r.pi)((0,r.pi)({},this.options),e),{variables:(0,r.pi)((0,r.pi)({},this.options.variables),e.variables)})),{fetchPolicy:"no-cache"}),t=this.queryManager.generateQueryId()
return n.notifyOnNetworkStatusChange&&(this.queryInfo.networkStatus=J.fetchMore,this.observe()),this.queryManager.fetchQuery(t,n,J.fetchMore).then((function(r){var t=r.data,o=e.updateQuery
return o?(__DEV__&&!Y&&(__DEV__&&i.kG.warn("The updateQuery callback for fetchMore is deprecated, and will be removed\nin the next major version of Apollo Client.\n\nPlease convert updateQuery functions to field policies with appropriate\nread and merge functions, or use/adapt a helper function (such as\nconcatPagination, offsetLimitPagination, or relayStylePagination) from\n@apollo/client/utilities.\n\nThe field policy system handles pagination more effectively than a\nhand-written updateQuery function, and you only need to define the policy\nonce, rather than every time you call fetchMore."),Y=!0),a.updateQuery((function(e){return o(e,{fetchMoreResult:t,variables:n.variables})}))):a.queryManager.cache.writeQuery({query:n.query,variables:n.variables,data:t}),r})).finally((function(){a.queryManager.stopQuery(t),a.reobserve()}))},a.prototype.subscribeToMore=function(e){var a=this,n=this.queryManager.startGraphQLSubscription({query:e.document,variables:e.variables,context:e.context}).subscribe({next:function(n){var i=e.updateQuery
i&&a.updateQuery((function(e,a){var r=a.variables
return i(e,{subscriptionData:n,variables:r})}))},error:function(a){e.onError?e.onError(a):__DEV__&&i.kG.error("Unhandled GraphQL subscription error",a)}})
return this.subscriptions.add(n),function(){a.subscriptions.delete(n)&&n.unsubscribe()}},a.prototype.setOptions=function(e){return this.reobserve(e)},a.prototype.setVariables=function(e){return(0,E.D)(this.variables,e)?this.observers.size?this.result():Promise.resolve():(this.options.variables=e,this.observers.size?this.reobserve({fetchPolicy:this.initialFetchPolicy,variables:e},J.setVariables):Promise.resolve())},a.prototype.updateQuery=function(e){var a=this.queryManager,n=e(a.cache.diff({query:this.options.query,variables:this.variables,returnPartialData:!0,optimistic:!1}).result,{variables:this.variables})
n&&(a.cache.writeQuery({query:this.options.query,data:n,variables:this.variables}),a.broadcastQueries())},a.prototype.startPolling=function(e){this.options.pollInterval=e,this.updatePolling()},a.prototype.stopPolling=function(){this.options.pollInterval=0,this.updatePolling()},a.prototype.fetch=function(e,a){return this.queryManager.setObservableQuery(this),this.queryManager.fetchQueryObservable(this.queryId,e,a)},a.prototype.updatePolling=function(){var e=this
if(!this.queryManager.ssrMode){var a=this.pollingInfo,n=this.options.pollInterval
if(n){if(!a||a.interval!==n){__DEV__?(0,i.kG)(n,"Attempted to start a polling query without a polling interval."):(0,i.kG)(n,10),(a||(this.pollingInfo={})).interval=n
var r=function(){e.pollingInfo&&(W(e.queryInfo.networkStatus)?t():e.reobserve({fetchPolicy:"network-only"},J.poll).then(t,t))},t=function(){var a=e.pollingInfo
a&&(clearTimeout(a.timeout),a.timeout=setTimeout(r,a.interval))}
t()}}else a&&(clearTimeout(a.timeout),delete this.pollingInfo)}},a.prototype.updateLastResult=function(e,a){return void 0===a&&(a=this.variables),this.last=(0,r.pi)((0,r.pi)({},this.last),{result:this.queryManager.assumeImmutableResults?e:(0,Z.X)(e),variables:a}),(0,H.O)(e.errors)||delete this.last.error,this.last},a.prototype.reobserve=function(e,a){var n=this
this.isTornDown=!1
var i=a===J.refetch||a===J.fetchMore||a===J.poll,t=this.options.variables,o=i?(0,s.o)(this.options,e):q(this.options,(0,s.o)(e))
i||(this.updatePolling(),e&&e.variables&&!e.fetchPolicy&&!(0,E.D)(e.variables,t)&&(o.fetchPolicy=this.initialFetchPolicy,void 0===a&&(a=J.setVariables)))
var l=o.variables&&(0,r.pi)({},o.variables),u=this.fetch(o,a),c={next:function(e){n.reportResult(e,l)},error:function(e){n.reportError(e,l)}}
return i||(this.concast&&this.observer&&this.concast.removeObserver(this.observer,!0),this.concast=u,this.observer=c),u.addObserver(c),u.promise},a.prototype.observe=function(){this.reportResult(this.getCurrentResult(!1),this.variables)},a.prototype.reportResult=function(e,a){(this.getLastError()||this.isDifferentFromLastResult(e))&&(this.updateLastResult(e,a),O(this.observers,"next",e))},a.prototype.reportError=function(e,a){var n=(0,r.pi)((0,r.pi)({},this.getLastResult()),{error:e,errors:e.graphQLErrors,networkStatus:J.error,loading:!1})
this.updateLastResult(n,a),O(this.observers,"error",this.last.error=e)},a.prototype.hasObservers=function(){return this.observers.size>0},a.prototype.tearDownQuery=function(){this.isTornDown||(this.concast&&this.observer&&(this.concast.removeObserver(this.observer),delete this.concast,delete this.observer),this.stopPolling(),this.subscriptions.forEach((function(e){return e.unsubscribe()})),this.subscriptions.clear(),this.queryManager.stopQuery(this.queryId),this.observers.clear(),this.isTornDown=!0)},a}(u.y)
function X(e){__DEV__&&i.kG.error("Unhandled error",e.message,e.stack)}function ee(e){__DEV__&&e&&__DEV__&&i.kG.debug("Missing cache result fields: ".concat(JSON.stringify(e)),e)}function ae(e){var a=e.fetchPolicy,n=void 0===a?"cache-first":a,i=e.nextFetchPolicy
i&&(e.fetchPolicy="function"==typeof i?i.call(e,n):i)}I($)
var ne=n(509),ie=n(3669),re=n(4435),te=function(){function e(e){var a=e.cache,n=e.client,i=e.resolvers,r=e.fragmentMatcher
this.cache=a,n&&(this.client=n),i&&this.addResolvers(i),r&&this.setFragmentMatcher(r)}return e.prototype.addResolvers=function(e){var a=this
this.resolvers=this.resolvers||{},Array.isArray(e)?e.forEach((function(e){a.resolvers=(0,ne.Ee)(a.resolvers,e)})):this.resolvers=(0,ne.Ee)(this.resolvers,e)},e.prototype.setResolvers=function(e){this.resolvers={},this.addResolvers(e)},e.prototype.getResolvers=function(){return this.resolvers||{}},e.prototype.runResolvers=function(e){var a=e.document,n=e.remoteResult,i=e.context,t=e.variables,o=e.onlyRunForcedResolvers,s=void 0!==o&&o
return(0,r.mG)(this,void 0,void 0,(function(){return(0,r.Jh)(this,(function(e){return a?[2,this.resolveDocument(a,n.data,i,t,this.fragmentMatcher,s).then((function(e){return(0,r.pi)((0,r.pi)({},n),{data:e.result})}))]:[2,n]}))}))},e.prototype.setFragmentMatcher=function(e){this.fragmentMatcher=e},e.prototype.getFragmentMatcher=function(){return this.fragmentMatcher},e.prototype.clientQuery=function(e){return(0,C.FS)(["client"],e)&&this.resolvers?e:null},e.prototype.serverQuery=function(e){return(0,x.ob)(e)},e.prototype.prepareContext=function(e){var a=this.cache
return(0,r.pi)((0,r.pi)({},e),{cache:a,getCacheKey:function(e){return a.identify(e)}})},e.prototype.addExportedVariables=function(e,a,n){return void 0===a&&(a={}),void 0===n&&(n={}),(0,r.mG)(this,void 0,void 0,(function(){return(0,r.Jh)(this,(function(i){return e?[2,this.resolveDocument(e,this.buildRootValueFromCache(e,a)||{},this.prepareContext(n),a).then((function(e){return(0,r.pi)((0,r.pi)({},a),e.exportedVariables)}))]:[2,(0,r.pi)({},a)]}))}))},e.prototype.shouldForceResolvers=function(e){var a=!1
return(0,l.Vn)(e,{Directive:{enter:function(e){if("client"===e.name.value&&e.arguments&&(a=e.arguments.some((function(e){return"always"===e.name.value&&"BooleanValue"===e.value.kind&&!0===e.value.value}))))return l.$_}}}),a},e.prototype.buildRootValueFromCache=function(e,a){return this.cache.diff({query:(0,x.aL)(e),variables:a,returnPartialData:!0,optimistic:!1}).result},e.prototype.resolveDocument=function(e,a,n,i,t,o){return void 0===n&&(n={}),void 0===i&&(i={}),void 0===t&&(t=function(){return!0}),void 0===o&&(o=!1),(0,r.mG)(this,void 0,void 0,(function(){var s,l,u,c,d,h,p,m,f
return(0,r.Jh)(this,(function(v){return s=(0,D.p$)(e),l=(0,D.kU)(e),u=(0,ie.F)(l),c=s.operation,d=c?c.charAt(0).toUpperCase()+c.slice(1):"Query",p=(h=this).cache,m=h.client,f={fragmentMap:u,context:(0,r.pi)((0,r.pi)({},n),{cache:p,client:m}),variables:i,fragmentMatcher:t,defaultOperationType:d,exportedVariables:{},onlyRunForcedResolvers:o},[2,this.resolveSelectionSet(s.selectionSet,a,f).then((function(e){return{result:e,exportedVariables:f.exportedVariables}}))]}))}))},e.prototype.resolveSelectionSet=function(e,a,n){return(0,r.mG)(this,void 0,void 0,(function(){var t,o,s,l,u,c=this
return(0,r.Jh)(this,(function(d){return t=n.fragmentMap,o=n.context,s=n.variables,l=[a],u=function(e){return(0,r.mG)(c,void 0,void 0,(function(){var u,c
return(0,r.Jh)(this,(function(r){return(0,C.LZ)(e,s)?(0,K.My)(e)?[2,this.resolveField(e,a,n).then((function(a){var n
void 0!==a&&l.push(((n={})[(0,K.u2)(e)]=a,n))}))]:((0,K.Ao)(e)?u=e:(u=t[e.name.value],__DEV__?(0,i.kG)(u,"No fragment named ".concat(e.name.value)):(0,i.kG)(u,9)),u&&u.typeCondition&&(c=u.typeCondition.name.value,n.fragmentMatcher(a,c,o))?[2,this.resolveSelectionSet(u.selectionSet,a,n).then((function(e){l.push(e)}))]:[2]):[2]}))}))},[2,Promise.all(e.selections.map(u)).then((function(){return(0,ne.bw)(l)}))]}))}))},e.prototype.resolveField=function(e,a,n){return(0,r.mG)(this,void 0,void 0,(function(){var i,t,o,s,l,u,c,d,h,p=this
return(0,r.Jh)(this,(function(r){return i=n.variables,t=e.name.value,o=(0,K.u2)(e),s=t!==o,l=a[o]||a[t],u=Promise.resolve(l),n.onlyRunForcedResolvers&&!this.shouldForceResolvers(e)||(c=a.__typename||n.defaultOperationType,(d=this.resolvers&&this.resolvers[c])&&(h=d[s?t:o])&&(u=Promise.resolve(re.ab.withValue(this.cache,h,[a,(0,K.NC)(e,i),n.context,{field:e,fragmentMap:n.fragmentMap}])))),[2,u.then((function(a){return void 0===a&&(a=l),e.directives&&e.directives.forEach((function(e){"export"===e.name.value&&e.arguments&&e.arguments.forEach((function(e){"as"===e.name.value&&"StringValue"===e.value.kind&&(n.exportedVariables[e.value.value]=a)}))})),e.selectionSet?null==a?a:Array.isArray(a)?p.resolveSubSelectedArray(e,a,n):e.selectionSet?p.resolveSelectionSet(e.selectionSet,a,n):void 0:a}))]}))}))},e.prototype.resolveSubSelectedArray=function(e,a,n){var i=this
return Promise.all(a.map((function(a){return null===a?null:Array.isArray(a)?i.resolveSubSelectedArray(e,a,n):e.selectionSet?i.resolveSelectionSet(e.selectionSet,a,n):void 0})))},e}(),oe=new(B.mr?WeakMap:Map)
function se(e,a){var n=e[a]
"function"==typeof n&&(e[a]=function(){return oe.set(e,(oe.get(e)+1)%1e15),n.apply(this,arguments)})}function le(e){e.notifyTimeout&&(clearTimeout(e.notifyTimeout),e.notifyTimeout=void 0)}var ue=function(){function e(e,a){void 0===a&&(a=e.generateQueryId()),this.queryId=a,this.listeners=new Set,this.document=null,this.lastRequestId=1,this.subscriptions=new Set,this.stopped=!1,this.dirty=!1,this.observableQuery=null
var n=this.cache=e.cache
oe.has(n)||(oe.set(n,0),se(n,"evict"),se(n,"modify"),se(n,"reset"))}return e.prototype.init=function(e){var a=e.networkStatus||J.loading
return this.variables&&this.networkStatus!==J.loading&&!(0,E.D)(this.variables,e.variables)&&(a=J.setVariables),(0,E.D)(e.variables,this.variables)||(this.lastDiff=void 0),Object.assign(this,{document:e.document,variables:e.variables,networkError:null,graphQLErrors:this.graphQLErrors||[],networkStatus:a}),e.observableQuery&&this.setObservableQuery(e.observableQuery),e.lastRequestId&&(this.lastRequestId=e.lastRequestId),this},e.prototype.reset=function(){le(this),this.lastDiff=void 0,this.dirty=!1},e.prototype.getDiff=function(e){void 0===e&&(e=this.variables)
var a=this.getDiffOptions(e)
if(this.lastDiff&&(0,E.D)(a,this.lastDiff.options))return this.lastDiff.diff
this.updateWatch(this.variables=e)
var n=this.observableQuery
if(n&&"no-cache"===n.options.fetchPolicy)return{complete:!1}
var i=this.cache.diff(a)
return this.updateLastDiff(i,a),i},e.prototype.updateLastDiff=function(e,a){this.lastDiff=e?{diff:e,options:a||this.getDiffOptions()}:void 0},e.prototype.getDiffOptions=function(e){var a
return void 0===e&&(e=this.variables),{query:this.document,variables:e,returnPartialData:!0,optimistic:!0,canonizeResults:null===(a=this.observableQuery)||void 0===a?void 0:a.options.canonizeResults}},e.prototype.setDiff=function(e){var a=this,n=this.lastDiff&&this.lastDiff.diff
this.updateLastDiff(e),this.dirty||(0,E.D)(n&&n.result,e&&e.result)||(this.dirty=!0,this.notifyTimeout||(this.notifyTimeout=setTimeout((function(){return a.notify()}),0)))},e.prototype.setObservableQuery=function(e){var a=this
e!==this.observableQuery&&(this.oqListener&&this.listeners.delete(this.oqListener),this.observableQuery=e,e?(e.queryInfo=this,this.listeners.add(this.oqListener=function(){a.getDiff().fromOptimisticTransaction?e.observe():e.reobserve()})):delete this.oqListener)},e.prototype.notify=function(){var e=this
le(this),this.shouldNotify()&&this.listeners.forEach((function(a){return a(e)})),this.dirty=!1},e.prototype.shouldNotify=function(){if(!this.dirty||!this.listeners.size)return!1
if(W(this.networkStatus)&&this.observableQuery){var e=this.observableQuery.options.fetchPolicy
if("cache-only"!==e&&"cache-and-network"!==e)return!1}return!0},e.prototype.stop=function(){if(!this.stopped){this.stopped=!0,this.reset(),this.cancel(),this.cancel=e.prototype.cancel,this.subscriptions.forEach((function(e){return e.unsubscribe()}))
var a=this.observableQuery
a&&a.stopPolling()}},e.prototype.cancel=function(){},e.prototype.updateWatch=function(e){var a=this
void 0===e&&(e=this.variables)
var n=this.observableQuery
if(!n||"no-cache"!==n.options.fetchPolicy){var i=(0,r.pi)((0,r.pi)({},this.getDiffOptions(e)),{watcher:this,callback:function(e){return a.setDiff(e)}})
this.lastWatch&&(0,E.D)(i,this.lastWatch)||(this.cancel(),this.cancel=this.cache.watch(this.lastWatch=i))}},e.prototype.resetLastWrite=function(){this.lastWrite=void 0},e.prototype.shouldWrite=function(e,a){var n=this.lastWrite
return!(n&&n.dmCount===oe.get(this.cache)&&(0,E.D)(a,n.variables)&&(0,E.D)(e.data,n.result.data))},e.prototype.markResult=function(e,a,n){var i=this
this.graphQLErrors=(0,H.O)(e.errors)?e.errors:[],this.reset(),"no-cache"===a.fetchPolicy?this.updateLastDiff({result:e.data,complete:!0},this.getDiffOptions(a.variables)):0!==n&&(ce(e,a.errorPolicy)?this.cache.performTransaction((function(r){if(i.shouldWrite(e,a.variables))r.writeQuery({query:i.document,data:e.data,variables:a.variables,overwrite:1===n}),i.lastWrite={result:e,variables:a.variables,dmCount:oe.get(i.cache)}
else if(i.lastDiff&&i.lastDiff.diff.complete)return void(e.data=i.lastDiff.diff.result)
var t=i.getDiffOptions(a.variables),o=r.diff(t)
i.stopped||i.updateWatch(a.variables),i.updateLastDiff(o,t),o.complete&&(e.data=o.result)})):this.lastWrite=void 0)},e.prototype.markReady=function(){return this.networkError=null,this.networkStatus=J.ready},e.prototype.markError=function(e){return this.networkStatus=J.error,this.lastWrite=void 0,this.reset(),e.graphQLErrors&&(this.graphQLErrors=e.graphQLErrors),e.networkError&&(this.networkError=e.networkError),e},e}()
function ce(e,a){void 0===a&&(a="none")
var n="ignore"===a||"all"===a,i=!L(e)
return!i&&n&&e.data&&(i=!0),i}var de=Object.prototype.hasOwnProperty,he=function(){function e(e){var a=e.cache,n=e.link,i=e.queryDeduplication,r=void 0!==i&&i,t=e.onBroadcast,o=e.ssrMode,s=void 0!==o&&o,l=e.clientAwareness,u=void 0===l?{}:l,c=e.localState,d=e.assumeImmutableResults
this.clientAwareness={},this.queries=new Map,this.fetchCancelFns=new Map,this.transformCache=new(B.mr?WeakMap:Map),this.queryIdCounter=1,this.requestIdCounter=1,this.mutationIdCounter=1,this.inFlightLinkObservables=new Map,this.cache=a,this.link=n,this.queryDeduplication=r,this.clientAwareness=u,this.localState=c||new te({cache:a}),this.ssrMode=s,this.assumeImmutableResults=!!d,(this.onBroadcast=t)&&(this.mutationStore=Object.create(null))}return e.prototype.stop=function(){var e=this
this.queries.forEach((function(a,n){e.stopQueryNoBroadcast(n)})),this.cancelPendingFetches(__DEV__?new i.ej("QueryManager stopped while query was in flight"):new i.ej(11))},e.prototype.cancelPendingFetches=function(e){this.fetchCancelFns.forEach((function(a){return a(e)})),this.fetchCancelFns.clear()},e.prototype.mutate=function(e){var a=e.mutation,n=e.variables,t=e.optimisticResponse,o=e.updateQueries,s=e.refetchQueries,l=void 0===s?[]:s,u=e.awaitRefetchQueries,c=void 0!==u&&u,d=e.update,h=e.onQueryUpdated,p=e.errorPolicy,m=void 0===p?"none":p,f=e.fetchPolicy,v=void 0===f?"network-only":f,g=e.keepRootFields,k=e.context
return(0,r.mG)(this,void 0,void 0,(function(){var e,s,u
return(0,r.Jh)(this,(function(p){switch(p.label){case 0:return __DEV__?(0,i.kG)(a,"mutation option is required. You must specify your GraphQL document in the mutation option."):(0,i.kG)(a,12),__DEV__?(0,i.kG)("network-only"===v||"no-cache"===v,"Mutations support only 'network-only' or 'no-cache' fetchPolicy strings. The default `network-only` behavior automatically writes mutation results to the cache. Passing `no-cache` skips the cache write."):(0,i.kG)("network-only"===v||"no-cache"===v,13),e=this.generateMutationId(),a=this.transform(a).document,n=this.getVariables(a,n),this.transform(a).hasClientExports?[4,this.localState.addExportedVariables(a,n,k)]:[3,2]
case 1:n=p.sent(),p.label=2
case 2:return s=this.mutationStore&&(this.mutationStore[e]={mutation:a,variables:n,loading:!0,error:null}),t&&this.markMutationOptimistic(t,{mutationId:e,document:a,variables:n,fetchPolicy:v,errorPolicy:m,context:k,updateQueries:o,update:d,keepRootFields:g}),this.broadcastQueries(),u=this,[2,new Promise((function(i,p){return P(u.getObservableFromLink(a,(0,r.pi)((0,r.pi)({},k),{optimisticResponse:t}),n,!1),(function(i){if(L(i)&&"none"===m)throw new U({graphQLErrors:i.errors})
s&&(s.loading=!1,s.error=null)
var p=(0,r.pi)({},i)
return"function"==typeof l&&(l=l(p)),"ignore"===m&&L(p)&&delete p.errors,u.markMutationResult({mutationId:e,result:p,document:a,variables:n,fetchPolicy:v,errorPolicy:m,context:k,update:d,updateQueries:o,awaitRefetchQueries:c,refetchQueries:l,removeOptimistic:t?e:void 0,onQueryUpdated:h,keepRootFields:g})})).subscribe({next:function(e){u.broadcastQueries(),i(e)},error:function(a){s&&(s.loading=!1,s.error=a),t&&u.cache.removeOptimistic(e),u.broadcastQueries(),p(a instanceof U?a:new U({networkError:a}))}})}))]}}))}))},e.prototype.markMutationResult=function(e,a){var n=this
void 0===a&&(a=this.cache)
var i=e.result,t=[],o="no-cache"===e.fetchPolicy
if(!o&&ce(i,e.errorPolicy)){t.push({result:i.data,dataId:"ROOT_MUTATION",query:e.document,variables:e.variables})
var s=e.updateQueries
s&&this.queries.forEach((function(e,r){var o=e.observableQuery,l=o&&o.queryName
if(l&&de.call(s,l)){var u=s[l],c=n.queries.get(r),d=c.document,h=c.variables,p=a.diff({query:d,variables:h,returnPartialData:!0,optimistic:!1}),m=p.result
if(p.complete&&m){var f=u(m,{mutationResult:i,queryName:d&&(0,D.rY)(d)||void 0,queryVariables:h})
f&&t.push({result:f,dataId:"ROOT_QUERY",query:d,variables:h})}}}))}if(t.length>0||e.refetchQueries||e.update||e.onQueryUpdated||e.removeOptimistic){var l=[]
if(this.refetchQueries({updateCache:function(a){o||t.forEach((function(e){return a.write(e)}))
var s=e.update
if(s){if(!o){var l=a.diff({id:"ROOT_MUTATION",query:n.transform(e.document).asQuery,variables:e.variables,optimistic:!1,returnPartialData:!0})
l.complete&&(i=(0,r.pi)((0,r.pi)({},i),{data:l.result}))}s(a,i,{context:e.context,variables:e.variables})}o||e.keepRootFields||a.modify({id:"ROOT_MUTATION",fields:function(e,a){var n=a.fieldName,i=a.DELETE
return"__typename"===n?e:i}})},include:e.refetchQueries,optimistic:!1,removeOptimistic:e.removeOptimistic,onQueryUpdated:e.onQueryUpdated||null}).forEach((function(e){return l.push(e)})),e.awaitRefetchQueries||e.onQueryUpdated)return Promise.all(l).then((function(){return i}))}return Promise.resolve(i)},e.prototype.markMutationOptimistic=function(e,a){var n=this,t="function"==typeof e?e(a.variables):e
return this.cache.recordOptimisticTransaction((function(e){try{n.markMutationResult((0,r.pi)((0,r.pi)({},a),{result:{data:t}}),e)}catch(e){__DEV__&&i.kG.error(e)}}),a.mutationId)},e.prototype.fetchQuery=function(e,a,n){return this.fetchQueryObservable(e,a,n).promise},e.prototype.getQueryStore=function(){var e=Object.create(null)
return this.queries.forEach((function(a,n){e[n]={variables:a.variables,networkStatus:a.networkStatus,networkError:a.networkError,graphQLErrors:a.graphQLErrors}})),e},e.prototype.resetErrors=function(e){var a=this.queries.get(e)
a&&(a.networkError=void 0,a.graphQLErrors=[])},e.prototype.transform=function(e){var a=this.transformCache
if(!a.has(e)){var n=this.cache.transformDocument(e),i=(0,x.Fo)(this.cache.transformForLink(n)),t=this.localState.clientQuery(n),o=i&&this.localState.serverQuery(i),s={document:n,hasClientExports:(0,C.mj)(n),hasForcedResolvers:this.localState.shouldForceResolvers(n),clientQuery:t,serverQuery:o,defaultVars:(0,D.O4)((0,D.$H)(n)),asQuery:(0,r.pi)((0,r.pi)({},n),{definitions:n.definitions.map((function(e){return"OperationDefinition"===e.kind&&"query"!==e.operation?(0,r.pi)((0,r.pi)({},e),{operation:"query"}):e}))})},l=function(e){e&&!a.has(e)&&a.set(e,s)}
l(e),l(n),l(t),l(o)}return a.get(e)},e.prototype.getVariables=function(e,a){return(0,r.pi)((0,r.pi)({},this.transform(e).defaultVars),a)},e.prototype.watchQuery=function(e){void 0===(e=(0,r.pi)((0,r.pi)({},e),{variables:this.getVariables(e.query,e.variables)})).notifyOnNetworkStatusChange&&(e.notifyOnNetworkStatusChange=!1)
var a=new ue(this),n=new $({queryManager:this,queryInfo:a,options:e})
return this.queries.set(n.queryId,a),a.init({document:e.query,observableQuery:n,variables:e.variables}),n},e.prototype.query=function(e,a){var n=this
return void 0===a&&(a=this.generateQueryId()),__DEV__?(0,i.kG)(e.query,"query option is required. You must specify your GraphQL document in the query option."):(0,i.kG)(e.query,14),__DEV__?(0,i.kG)("Document"===e.query.kind,'You must wrap the query string in a "gql" tag.'):(0,i.kG)("Document"===e.query.kind,15),__DEV__?(0,i.kG)(!e.returnPartialData,"returnPartialData option only supported on watchQuery."):(0,i.kG)(!e.returnPartialData,16),__DEV__?(0,i.kG)(!e.pollInterval,"pollInterval option only supported on watchQuery."):(0,i.kG)(!e.pollInterval,17),this.fetchQuery(a,e).finally((function(){return n.stopQuery(a)}))},e.prototype.generateQueryId=function(){return String(this.queryIdCounter++)},e.prototype.generateRequestId=function(){return this.requestIdCounter++},e.prototype.generateMutationId=function(){return String(this.mutationIdCounter++)},e.prototype.stopQueryInStore=function(e){this.stopQueryInStoreNoBroadcast(e),this.broadcastQueries()},e.prototype.stopQueryInStoreNoBroadcast=function(e){var a=this.queries.get(e)
a&&a.stop()},e.prototype.clearStore=function(e){return void 0===e&&(e={discardWatches:!0}),this.cancelPendingFetches(__DEV__?new i.ej("Store reset while query was in flight (not completed in link chain)"):new i.ej(18)),this.queries.forEach((function(e){e.observableQuery?e.networkStatus=J.loading:e.stop()})),this.mutationStore&&(this.mutationStore=Object.create(null)),this.cache.reset(e)},e.prototype.getObservableQueries=function(e){var a=this
void 0===e&&(e="active")
var n=new Map,t=new Map,o=new Set
return Array.isArray(e)&&e.forEach((function(e){"string"==typeof e?t.set(e,!1):(0,K.JW)(e)?t.set(a.transform(e).document,!1):(0,R.s)(e)&&e.query&&o.add(e)})),this.queries.forEach((function(a,i){var r=a.observableQuery,o=a.document
if(r){if("all"===e)return void n.set(i,r)
var s=r.queryName
if("standby"===r.options.fetchPolicy||"active"===e&&!r.hasObservers())return;("active"===e||s&&t.has(s)||o&&t.has(o))&&(n.set(i,r),s&&t.set(s,!0),o&&t.set(o,!0))}})),o.size&&o.forEach((function(e){var t=(0,z.X)("legacyOneTimeQuery"),o=a.getQuery(t).init({document:e.query,variables:e.variables}),s=new $({queryManager:a,queryInfo:o,options:(0,r.pi)((0,r.pi)({},e),{fetchPolicy:"network-only"})});(0,i.kG)(s.queryId===t),o.setObservableQuery(s),n.set(t,s)})),__DEV__&&t.size&&t.forEach((function(e,a){e||__DEV__&&i.kG.warn("Unknown query ".concat("string"==typeof a?"named ":"").concat(JSON.stringify(a,null,2)," requested in refetchQueries options.include array"))})),n},e.prototype.reFetchObservableQueries=function(e){var a=this
void 0===e&&(e=!1)
var n=[]
return this.getObservableQueries(e?"all":"active").forEach((function(i,r){var t=i.options.fetchPolicy
i.resetLastResults(),(e||"standby"!==t&&"cache-only"!==t)&&n.push(i.refetch()),a.getQuery(r).setDiff(null)})),this.broadcastQueries(),Promise.all(n)},e.prototype.setObservableQuery=function(e){this.getQuery(e.queryId).setObservableQuery(e)},e.prototype.startGraphQLSubscription=function(e){var a=this,n=e.query,i=e.fetchPolicy,r=e.errorPolicy,t=e.variables,o=e.context,s=void 0===o?{}:o
n=this.transform(n).document,t=this.getVariables(n,t)
var l=function(e){return a.getObservableFromLink(n,s,e).map((function(t){if("no-cache"!==i&&(ce(t,r)&&a.cache.write({query:n,result:t.data,dataId:"ROOT_SUBSCRIPTION",variables:e}),a.broadcastQueries()),L(t))throw new U({graphQLErrors:t.errors})
return t}))}
if(this.transform(n).hasClientExports){var c=this.localState.addExportedVariables(n,t,s).then(l)
return new u.y((function(e){var a=null
return c.then((function(n){return a=n.subscribe(e)}),e.error),function(){return a&&a.unsubscribe()}}))}return l(t)},e.prototype.stopQuery=function(e){this.stopQueryNoBroadcast(e),this.broadcastQueries()},e.prototype.stopQueryNoBroadcast=function(e){this.stopQueryInStoreNoBroadcast(e),this.removeQuery(e)},e.prototype.removeQuery=function(e){this.fetchCancelFns.delete(e),this.getQuery(e).stop(),this.queries.delete(e)},e.prototype.broadcastQueries=function(){this.onBroadcast&&this.onBroadcast(),this.queries.forEach((function(e){return e.notify()}))},e.prototype.getLocalState=function(){return this.localState},e.prototype.getObservableFromLink=function(e,a,n,i){var t,s,l=this
void 0===i&&(i=null!==(t=null==a?void 0:a.queryDeduplication)&&void 0!==t?t:this.queryDeduplication)
var c=this.transform(e).serverQuery
if(c){var d=this.inFlightLinkObservables,h=this.link,p={query:c,variables:n,operationName:(0,D.rY)(c)||void 0,context:this.prepareContext((0,r.pi)((0,r.pi)({},a),{forceFetch:!i}))}
if(a=p.context,i){var m=d.get(c)||new Map
d.set(c,m)
var f=(0,N.B)(n)
if(!(s=m.get(f))){var v=new G([o(h,p)])
m.set(f,s=v),v.cleanup((function(){m.delete(f)&&m.size<1&&d.delete(c)}))}}else s=new G([o(h,p)])}else s=new G([u.y.of({data:{}})]),a=this.prepareContext(a)
var g=this.transform(e).clientQuery
return g&&(s=P(s,(function(e){return l.localState.runResolvers({document:g,remoteResult:e,context:a,variables:n})}))),s},e.prototype.getResultsFromLink=function(e,a,n){var i=e.lastRequestId=this.generateRequestId()
return P(this.getObservableFromLink(e.document,n.context,n.variables),(function(r){var t=(0,H.O)(r.errors)
if(i>=e.lastRequestId){if(t&&"none"===n.errorPolicy)throw e.markError(new U({graphQLErrors:r.errors}))
e.markResult(r,n,a),e.markReady()}var o={data:r.data,loading:!1,networkStatus:e.networkStatus||J.ready}
return t&&"ignore"!==n.errorPolicy&&(o.errors=r.errors),o}),(function(a){var n=F(a)?a:new U({networkError:a})
throw i>=e.lastRequestId&&e.markError(n),n}))},e.prototype.fetchQueryObservable=function(e,a,n){var i=this
void 0===n&&(n=J.loading)
var r=this.transform(a.query).document,t=this.getVariables(r,a.variables),o=this.getQuery(e),s=a.fetchPolicy,l=void 0===s?"cache-first":s,u=a.errorPolicy,c=void 0===u?"none":u,d=a.returnPartialData,h=void 0!==d&&d,p=a.notifyOnNetworkStatusChange,m=void 0!==p&&p,f=a.context,v=void 0===f?{}:f,g=Object.assign({},a,{query:r,variables:t,fetchPolicy:l,errorPolicy:c,returnPartialData:h,notifyOnNetworkStatusChange:m,context:v}),k=function(e){return g.variables=e,i.fetchQueryByPolicy(o,g,n)}
this.fetchCancelFns.set(e,(function(e){setTimeout((function(){return y.cancel(e)}))}))
var y=new G(this.transform(g.query).hasClientExports?this.localState.addExportedVariables(g.query,g.variables,g.context).then(k):k(g.variables))
return y.cleanup((function(){i.fetchCancelFns.delete(e),ae(a)})),y},e.prototype.refetchQueries=function(e){var a=this,n=e.updateCache,i=e.include,r=e.optimistic,t=void 0!==r&&r,o=e.removeOptimistic,s=void 0===o?t?(0,z.X)("refetchQueries"):void 0:o,l=e.onQueryUpdated,u=new Map
i&&this.getObservableQueries(i).forEach((function(e,n){u.set(n,{oq:e,lastDiff:a.getQuery(n).getDiff()})}))
var c=new Map
return n&&this.cache.batch({update:n,optimistic:t&&s||!1,removeOptimistic:s,onWatchUpdated:function(e,a,n){var i=e.watcher instanceof ue&&e.watcher.observableQuery
if(i){if(l){u.delete(i.queryId)
var r=l(i,a,n)
return!0===r&&(r=i.refetch()),!1!==r&&c.set(i,r),r}null!==l&&u.set(i.queryId,{oq:i,lastDiff:n,diff:a})}}}),u.size&&u.forEach((function(e,n){var i,r=e.oq,t=e.lastDiff,o=e.diff
if(l){if(!o){var s=r.queryInfo
s.reset(),o=s.getDiff()}i=l(r,o,t)}l&&!0!==i||(i=r.refetch()),!1!==i&&c.set(r,i),n.indexOf("legacyOneTimeQuery")>=0&&a.stopQueryNoBroadcast(n)})),s&&this.cache.removeOptimistic(s),c},e.prototype.fetchQueryByPolicy=function(e,a,n){var i=this,t=a.query,o=a.variables,s=a.fetchPolicy,l=a.refetchWritePolicy,c=a.errorPolicy,d=a.returnPartialData,h=a.context,p=a.notifyOnNetworkStatusChange,m=e.networkStatus
e.init({document:t,variables:o,networkStatus:n})
var f=function(){return e.getDiff(o)},v=function(a,n){void 0===n&&(n=e.networkStatus||J.loading)
var s=a.result
!__DEV__||d||(0,E.D)(s,{})||ee(a.missing)
var l=function(e){return u.y.of((0,r.pi)({data:e,loading:W(n),networkStatus:n},a.complete?null:{partial:!0}))}
return s&&i.transform(t).hasForcedResolvers?i.localState.runResolvers({document:t,remoteResult:{data:s},context:h,variables:o,onlyRunForcedResolvers:!0}).then((function(e){return l(e.data||void 0)})):l(s)},g="no-cache"===s?0:n===J.refetch&&"merge"!==l?1:2,k=function(){return i.getResultsFromLink(e,g,{variables:o,context:h,fetchPolicy:s,errorPolicy:c})},y=p&&"number"==typeof m&&m!==n&&W(n)
switch(s){default:case"cache-first":return(b=f()).complete?[v(b,e.markReady())]:d||y?[v(b),k()]:[k()]
case"cache-and-network":var b
return(b=f()).complete||d||y?[v(b),k()]:[k()]
case"cache-only":return[v(f(),e.markReady())]
case"network-only":return y?[v(f()),k()]:[k()]
case"no-cache":return y?[v(e.getDiff()),k()]:[k()]
case"standby":return[]}},e.prototype.getQuery=function(e){return e&&!this.queries.has(e)&&this.queries.set(e,new ue(this,e)),this.queries.get(e)},e.prototype.prepareContext=function(e){void 0===e&&(e={})
var a=this.localState.prepareContext(e)
return(0,r.pi)((0,r.pi)({},a),{clientAwareness:this.clientAwareness})},e}(),pe=!1
function me(e,a){return(0,s.o)(e,a,a.variables&&{variables:(0,r.pi)((0,r.pi)({},e.variables),a.variables)})}var fe=function(){function e(e){var a=this
this.defaultOptions={},this.resetStoreCallbacks=[],this.clearStoreCallbacks=[]
var n=e.uri,r=e.credentials,o=e.headers,s=e.cache,l=e.ssrMode,u=void 0!==l&&l,c=e.ssrForceFetchDelay,d=void 0===c?0:c,h=e.connectToDevTools,p=void 0===h?"object"==typeof window&&!window.__APOLLO_CLIENT__&&__DEV__:h,m=e.queryDeduplication,f=void 0===m||m,v=e.defaultOptions,g=e.assumeImmutableResults,k=void 0!==g&&g,y=e.resolvers,b=e.typeDefs,S=e.fragmentMatcher,A=e.name,M=e.version,T=e.link
if(T||(T=n?new j({uri:n,credentials:r,headers:o}):t.i.empty()),!s)throw __DEV__?new i.ej("To initialize Apollo Client, you must specify a 'cache' property in the options object. \nFor more information, please visit: https://go.apollo.dev/c/docs"):new i.ej(7)
if(this.link=T,this.cache=s,this.disableNetworkFetches=u||d>0,this.queryDeduplication=f,this.defaultOptions=v||{},this.typeDefs=b,d&&setTimeout((function(){return a.disableNetworkFetches=!1}),d),this.watchQuery=this.watchQuery.bind(this),this.query=this.query.bind(this),this.mutate=this.mutate.bind(this),this.resetStore=this.resetStore.bind(this),this.reFetchObservableQueries=this.reFetchObservableQueries.bind(this),p&&"object"==typeof window&&(window.__APOLLO_CLIENT__=this),!pe&&__DEV__&&(pe=!0,"undefined"!=typeof window&&window.document&&window.top===window.self&&!window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__)){var _=window.navigator,w=_&&_.userAgent,E=void 0
"string"==typeof w&&(w.indexOf("Chrome/")>-1?E="https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm":w.indexOf("Firefox/")>-1&&(E="https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/")),E&&__DEV__&&i.kG.log("Download the Apollo DevTools for a better development experience: "+E)}this.version="3.5.8",this.localState=new te({cache:s,client:this,resolvers:y,fragmentMatcher:S}),this.queryManager=new he({cache:this.cache,link:this.link,queryDeduplication:f,ssrMode:u,clientAwareness:{name:A,version:M},localState:this.localState,assumeImmutableResults:k,onBroadcast:p?function(){a.devToolsHookCb&&a.devToolsHookCb({action:{},state:{queries:a.queryManager.getQueryStore(),mutations:a.queryManager.mutationStore||{}},dataWithOptimisticResults:a.cache.extract(!0)})}:void 0})}return e.prototype.stop=function(){this.queryManager.stop()},e.prototype.watchQuery=function(e){return this.defaultOptions.watchQuery&&(e=me(this.defaultOptions.watchQuery,e)),!this.disableNetworkFetches||"network-only"!==e.fetchPolicy&&"cache-and-network"!==e.fetchPolicy||(e=(0,r.pi)((0,r.pi)({},e),{fetchPolicy:"cache-first"})),this.queryManager.watchQuery(e)},e.prototype.query=function(e){return this.defaultOptions.query&&(e=me(this.defaultOptions.query,e)),__DEV__?(0,i.kG)("cache-and-network"!==e.fetchPolicy,"The cache-and-network fetchPolicy does not work with client.query, because client.query can only return a single result. Please use client.watchQuery to receive multiple results from the cache and the network, or consider using a different fetchPolicy, such as cache-first or network-only."):(0,i.kG)("cache-and-network"!==e.fetchPolicy,8),this.disableNetworkFetches&&"network-only"===e.fetchPolicy&&(e=(0,r.pi)((0,r.pi)({},e),{fetchPolicy:"cache-first"})),this.queryManager.query(e)},e.prototype.mutate=function(e){return this.defaultOptions.mutate&&(e=me(this.defaultOptions.mutate,e)),this.queryManager.mutate(e)},e.prototype.subscribe=function(e){return this.queryManager.startGraphQLSubscription(e)},e.prototype.readQuery=function(e,a){return void 0===a&&(a=!1),this.cache.readQuery(e,a)},e.prototype.readFragment=function(e,a){return void 0===a&&(a=!1),this.cache.readFragment(e,a)},e.prototype.writeQuery=function(e){this.cache.writeQuery(e),this.queryManager.broadcastQueries()},e.prototype.writeFragment=function(e){this.cache.writeFragment(e),this.queryManager.broadcastQueries()},e.prototype.__actionHookForDevTools=function(e){this.devToolsHookCb=e},e.prototype.__requestRaw=function(e){return o(this.link,e)},e.prototype.resetStore=function(){var e=this
return Promise.resolve().then((function(){return e.queryManager.clearStore({discardWatches:!1})})).then((function(){return Promise.all(e.resetStoreCallbacks.map((function(e){return e()})))})).then((function(){return e.reFetchObservableQueries()}))},e.prototype.clearStore=function(){var e=this
return Promise.resolve().then((function(){return e.queryManager.clearStore({discardWatches:!0})})).then((function(){return Promise.all(e.clearStoreCallbacks.map((function(e){return e()})))}))},e.prototype.onResetStore=function(e){var a=this
return this.resetStoreCallbacks.push(e),function(){a.resetStoreCallbacks=a.resetStoreCallbacks.filter((function(a){return a!==e}))}},e.prototype.onClearStore=function(e){var a=this
return this.clearStoreCallbacks.push(e),function(){a.clearStoreCallbacks=a.clearStoreCallbacks.filter((function(a){return a!==e}))}},e.prototype.reFetchObservableQueries=function(e){return this.queryManager.reFetchObservableQueries(e)},e.prototype.refetchQueries=function(e){var a=this.queryManager.refetchQueries(e),n=[],r=[]
a.forEach((function(e,a){n.push(a),r.push(e)}))
var t=Promise.all(r)
return t.queries=n,t.results=r,t.catch((function(e){__DEV__&&i.kG.debug("In client.refetchQueries, Promise.all promise rejected with error ".concat(e))})),t},e.prototype.getObservableQueries=function(e){return void 0===e&&(e="active"),this.queryManager.getObservableQueries(e)},e.prototype.extract=function(e){return this.cache.extract(e)},e.prototype.restore=function(e){return this.cache.restore(e)},e.prototype.addResolvers=function(e){this.localState.addResolvers(e)},e.prototype.setResolvers=function(e){this.localState.setResolvers(e)},e.prototype.getResolvers=function(){return this.localState.getResolvers()},e.prototype.setLocalStateFragmentMatcher=function(e){this.localState.setFragmentMatcher(e)},e.prototype.setLink=function(e){this.link=this.queryManager.link=e},e}(),ve=n(2018),ge=n(2872),ke=n(3486),ye=n(550),be=n(8797),Se=t.i.empty,Ae=t.i.from,Me=t.i.split,Te=t.i.concat
function _e(e){var a=!1
return new Promise((function(n,r){e.subscribe({next:function(e){a?__DEV__&&i.kG.warn("Promise Wrapper does not support multiple results from Observable"):(a=!0,n(e))},error:r})}))}function we(e){return new u.y((function(a){e.then((function(e){a.next(e),a.complete()})).catch(a.error.bind(a))}))}var je=n(2279),Ee=n(4809);(0,je.U6)(i.Rk?"log":"silent")},6481:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{setContext:()=>o})
var i=n(2985),r=n(2050),t=n(9189)
function o(e){return new r.i((function(a,n){var r=(0,i._T)(a,[])
return new t.y((function(i){var t,o=!1
return Promise.resolve(r).then((function(n){return e(n,a.getContext())})).then(a.setContext).then((function(){o||(t=n(a).subscribe({next:i.next.bind(i),error:i.error.bind(i),complete:i.complete.bind(i)}))})).catch(i.error.bind(i)),function(){o=!0,t&&t.unsubscribe()}}))}))}},2050:(e,a,n)=>{"use strict"
n.d(a,{i:()=>d})
var i=n(2985),r=n(3199),t=n(9189),o=n(4250)
function s(e,a){return a?a(e):t.y.of()}function l(e){return"function"==typeof e?new d(e):e}function u(e){return e.request.length<=1}var c=function(e){function a(a,n){var i=e.call(this,a)||this
return i.link=n,i}return(0,i.ZT)(a,e),a}(Error),d=function(){function e(e){e&&(this.request=e)}return e.empty=function(){return new e((function(){return t.y.of()}))},e.from=function(a){return 0===a.length?e.empty():a.map(l).reduce((function(e,a){return e.concat(a)}))},e.split=function(a,n,i){var r=l(n),o=l(i||new e(s))
return u(r)&&u(o)?new e((function(e){return a(e)?r.request(e)||t.y.of():o.request(e)||t.y.of()})):new e((function(e,n){return a(e)?r.request(e,n)||t.y.of():o.request(e,n)||t.y.of()}))},e.execute=function(e,a){return e.request(function(e,a){var n=(0,i.pi)({},e)
return Object.defineProperty(a,"setContext",{enumerable:!1,value:function(e){n="function"==typeof e?(0,i.pi)((0,i.pi)({},n),e(n)):(0,i.pi)((0,i.pi)({},n),e)}}),Object.defineProperty(a,"getContext",{enumerable:!1,value:function(){return(0,i.pi)({},n)}}),a}(a.context,function(e){var a={variables:e.variables||{},extensions:e.extensions||{},operationName:e.operationName,query:e.query}
return a.operationName||(a.operationName="string"!=typeof a.query?(0,o.rY)(a.query)||void 0:""),a}(function(e){for(var a=["query","operationName","variables","extensions","context"],n=0,i=Object.keys(e);n<i.length;n++){var t=i[n]
if(a.indexOf(t)<0)throw __DEV__?new r.ej("illegal argument: ".concat(t)):new r.ej(24)}return e}(a))))||t.y.of()},e.concat=function(a,n){var i=l(a)
if(u(i))return __DEV__&&r.kG.warn(new c("You are calling concat on a terminating link, which will have no effect",i)),i
var o=l(n)
return u(o)?new e((function(e){return i.request(e,(function(e){return o.request(e)||t.y.of()}))||t.y.of()})):new e((function(e,a){return i.request(e,(function(e){return o.request(e,a)||t.y.of()}))||t.y.of()}))},e.prototype.split=function(a,n,i){return this.concat(e.split(a,n,i||new e(s)))},e.prototype.concat=function(a){return e.concat(this,a)},e.prototype.request=function(e,a){throw __DEV__?new r.ej("request is not implemented"):new r.ej(19)},e.prototype.onError=function(e,a){if(a&&a.error)return a.error(e),!1
throw e},e.prototype.setOnError=function(e){return this.onError=e,this},e}()},708:(e,a,n)=>{"use strict"
function i(e){return Array.isArray(e)&&e.length>0}n.d(a,{O:()=>i})},2414:(e,a,n)=>{"use strict"
n.d(a,{mr:()=>i,sy:()=>r,aS:()=>t})
var i="function"==typeof WeakMap&&!("object"==typeof navigator&&"ReactNative"===navigator.product),r="function"==typeof WeakSet,t="function"==typeof Symbol&&"function"==typeof Symbol.for},7948:(e,a,n)=>{"use strict"
n.d(a,{X:()=>r})
var i=Object.prototype.toString
function r(e){return t(e)}function t(e,a){switch(i.call(e)){case"[object Array]":if((a=a||new Map).has(e))return a.get(e)
var n=e.slice(0)
return a.set(e,n),n.forEach((function(e,i){n[i]=t(e,a)})),n
case"[object Object]":if((a=a||new Map).has(e))return a.get(e)
var r=Object.create(Object.getPrototypeOf(e))
return a.set(e,r),Object.keys(e).forEach((function(n){r[n]=t(e[n],a)})),r
default:return e}}},868:(e,a,n)=>{"use strict"
function i(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a]
var n=Object.create(null)
return e.forEach((function(e){e&&Object.keys(e).forEach((function(a){var i=e[a]
void 0!==i&&(n[a]=i)}))})),n}n.d(a,{o:()=>i})},3994:(e,a,n)=>{"use strict"
n.d(a,{X:()=>r})
var i=new Map
function r(e){var a=i.get(e)||1
return i.set(e,a+1),"".concat(e,":").concat(a,":").concat(Math.random().toString(36).slice(2))}},4741:(e,a,n)=>{"use strict"
n.d(a,{J:()=>r}),n(3199)
var i=n(1173)
function r(e){return __DEV__&&(a=new Set([e])).forEach((function(e){(0,i.s)(e)&&function(e){if(__DEV__&&!Object.isFrozen(e))try{Object.freeze(e)}catch(e){if(e instanceof TypeError)return null
throw e}return e}(e)===e&&Object.getOwnPropertyNames(e).forEach((function(n){(0,i.s)(e[n])&&a.add(e[n])}))})),e
var a}},509:(e,a,n)=>{"use strict"
n.d(a,{Ee:()=>o,bw:()=>s,w0:()=>u})
var i=n(2985),r=n(1173),t=Object.prototype.hasOwnProperty
function o(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a]
return s(e)}function s(e){var a=e[0]||{},n=e.length
if(n>1)for(var i=new u,r=1;r<n;++r)a=i.merge(a,e[r])
return a}var l=function(e,a,n){return this.merge(e[n],a[n])},u=function(){function e(e){void 0===e&&(e=l),this.reconciler=e,this.isObject=r.s,this.pastCopies=new Set}return e.prototype.merge=function(e,a){for(var n=this,o=[],s=2;s<arguments.length;s++)o[s-2]=arguments[s]
return(0,r.s)(a)&&(0,r.s)(e)?(Object.keys(a).forEach((function(r){if(t.call(e,r)){var s=e[r]
if(a[r]!==s){var l=n.reconciler.apply(n,(0,i.ev)([e,a,r],o,!1))
l!==s&&((e=n.shallowCopyForMerge(e))[r]=l)}}else(e=n.shallowCopyForMerge(e))[r]=a[r]})),e):a},e.prototype.shallowCopyForMerge=function(e){if((0,r.s)(e)){if(this.pastCopies.has(e)){if(!Object.isFrozen(e))return e
this.pastCopies.delete(e)}e=Array.isArray(e)?e.slice(0):(0,i.pi)({__proto__:Object.getPrototypeOf(e)},e),this.pastCopies.add(e)}return e},e}()},1173:(e,a,n)=>{"use strict"
function i(e){return null!==e&&"object"==typeof e}n.d(a,{s:()=>i})},3199:(e,a,n)=>{"use strict"
n.d(a,{Rk:()=>l,ej:()=>i.ej,kG:()=>i.kG,wY:()=>r})
var i=n(2279)
function r(e){try{return e()}catch(e){}}const t=r((function(){return globalThis}))||r((function(){return window}))||r((function(){return self}))||r((function(){return global}))||r((function(){return r.constructor("return this")()}))
var o="__",s=[o,o].join("DEV")
const l=function(){try{return Boolean(__DEV__)}catch(e){return Object.defineProperty(t,s,{value:"production"!==r((function(){return"production"})),enumerable:!1,configurable:!0,writable:!0}),t[s]}}()
function u(e){try{return e()}catch(e){}}var c=u((function(){return globalThis}))||u((function(){return window}))||u((function(){return self}))||u((function(){return global}))||u((function(){return u.constructor("return this")()})),d=!1
!c||u((function(){return"production"}))||u((function(){return process}))||(Object.defineProperty(c,"process",{value:{env:{NODE_ENV:"production"}},configurable:!0,enumerable:!1,writable:!0}),d=!0),n(6333).H,d&&(delete c.process,d=!1),__DEV__?(0,i.kG)("boolean"==typeof l,l):(0,i.kG)("boolean"==typeof l,36)},5252:(e,a,n)=>{"use strict"
n.d(a,{LZ:()=>t,FS:()=>o,mj:()=>s})
var i=n(3199),r=n(9485)
function t(e,a){var n=e.directives
return!n||!n.length||function(e){var a=[]
return e&&e.length&&e.forEach((function(e){if(function(e){var a=e.name.value
return"skip"===a||"include"===a}(e)){var n=e.arguments,r=e.name.value
__DEV__?(0,i.kG)(n&&1===n.length,"Incorrect number of arguments for the @".concat(r," directive.")):(0,i.kG)(n&&1===n.length,38)
var t=n[0]
__DEV__?(0,i.kG)(t.name&&"if"===t.name.value,"Invalid argument for the @".concat(r," directive.")):(0,i.kG)(t.name&&"if"===t.name.value,39)
var o=t.value
__DEV__?(0,i.kG)(o&&("Variable"===o.kind||"BooleanValue"===o.kind),"Argument for the @".concat(r," directive must be a variable or a boolean value.")):(0,i.kG)(o&&("Variable"===o.kind||"BooleanValue"===o.kind),40),a.push({directive:e,ifArgument:t})}})),a}(n).every((function(e){var n=e.directive,r=e.ifArgument,t=!1
return"Variable"===r.value.kind?(t=a&&a[r.value.name.value],__DEV__?(0,i.kG)(void 0!==t,"Invalid variable referenced in @".concat(n.name.value," directive.")):(0,i.kG)(void 0!==t,37)):t=r.value.value,"skip"===n.name.value?!t:t}))}function o(e,a){return function(e){var a=[]
return(0,r.Vn)(e,{Directive:function(e){a.push(e.name.value)}}),a}(a).some((function(a){return e.indexOf(a)>-1}))}function s(e){return e&&o(["client"],e)&&o(["export"],e)}},3669:(e,a,n)=>{"use strict"
n.d(a,{Yk:()=>t,F:()=>o,hi:()=>s})
var i=n(2985),r=n(3199)
function t(e,a){var n=a,t=[]
return e.definitions.forEach((function(e){if("OperationDefinition"===e.kind)throw __DEV__?new r.ej("Found a ".concat(e.operation," operation").concat(e.name?" named '".concat(e.name.value,"'"):"",". ")+"No operations are allowed when using a fragment as a query. Only fragments are allowed."):new r.ej(41)
"FragmentDefinition"===e.kind&&t.push(e)})),void 0===n&&(__DEV__?(0,r.kG)(1===t.length,"Found ".concat(t.length," fragments. `fragmentName` must be provided when there is not exactly 1 fragment.")):(0,r.kG)(1===t.length,42),n=t[0].name.value),(0,i.pi)((0,i.pi)({},e),{definitions:(0,i.ev)([{kind:"OperationDefinition",operation:"query",selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:n}}]}}],e.definitions,!0)})}function o(e){void 0===e&&(e=[])
var a={}
return e.forEach((function(e){a[e.name.value]=e})),a}function s(e,a){switch(e.kind){case"InlineFragment":return e
case"FragmentSpread":var n=a&&a[e.name.value]
return __DEV__?(0,r.kG)(n,"No fragment named ".concat(e.name.value,".")):(0,r.kG)(n,43),n
default:return null}}},4250:(e,a,n)=>{"use strict"
n.d(a,{A$:()=>t,$H:()=>o,rY:()=>s,kU:()=>l,iW:()=>u,pD:()=>c,p$:()=>d,O4:()=>h})
var i=n(3199),r=n(2411)
function t(e){__DEV__?(0,i.kG)(e&&"Document"===e.kind,'Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a "gql" tag? http://docs.apollostack.com/apollo-client/core.html#gql'):(0,i.kG)(e&&"Document"===e.kind,44)
var a=e.definitions.filter((function(e){return"FragmentDefinition"!==e.kind})).map((function(e){if("OperationDefinition"!==e.kind)throw __DEV__?new i.ej('Schema type definitions not allowed in queries. Found: "'.concat(e.kind,'"')):new i.ej(45)
return e}))
return __DEV__?(0,i.kG)(a.length<=1,"Ambiguous GraphQL document: contains ".concat(a.length," operations")):(0,i.kG)(a.length<=1,46),e}function o(e){return t(e),e.definitions.filter((function(e){return"OperationDefinition"===e.kind}))[0]}function s(e){return e.definitions.filter((function(e){return"OperationDefinition"===e.kind&&e.name})).map((function(e){return e.name.value}))[0]||null}function l(e){return e.definitions.filter((function(e){return"FragmentDefinition"===e.kind}))}function u(e){var a=o(e)
return __DEV__?(0,i.kG)(a&&"query"===a.operation,"Must contain a query definition."):(0,i.kG)(a&&"query"===a.operation,47),a}function c(e){__DEV__?(0,i.kG)("Document"===e.kind,'Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a "gql" tag? http://docs.apollostack.com/apollo-client/core.html#gql'):(0,i.kG)("Document"===e.kind,48),__DEV__?(0,i.kG)(e.definitions.length<=1,"Fragment must have exactly one definition."):(0,i.kG)(e.definitions.length<=1,49)
var a=e.definitions[0]
return __DEV__?(0,i.kG)("FragmentDefinition"===a.kind,"Must be a fragment definition."):(0,i.kG)("FragmentDefinition"===a.kind,50),a}function d(e){var a
t(e)
for(var n=0,r=e.definitions;n<r.length;n++){var o=r[n]
if("OperationDefinition"===o.kind){var s=o.operation
if("query"===s||"mutation"===s||"subscription"===s)return o}"FragmentDefinition"!==o.kind||a||(a=o)}if(a)return a
throw __DEV__?new i.ej("Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment."):new i.ej(51)}function h(e){var a=Object.create(null),n=e&&e.variableDefinitions
return n&&n.length&&n.forEach((function(e){e.defaultValue&&(0,r.vb)(a,e.variable.name,e.defaultValue)})),a}},2411:(e,a,n)=>{"use strict"
n.d(a,{kQ:()=>o,Yk:()=>s,JW:()=>l,vb:()=>u,vf:()=>c,PT:()=>h,NC:()=>f,u2:()=>v,qw:()=>g,My:()=>k,Ao:()=>y})
var i=n(3199),r=n(1173),t=n(3669)
function o(e){return{__ref:String(e)}}function s(e){return Boolean(e&&"object"==typeof e&&"string"==typeof e.__ref)}function l(e){return(0,r.s)(e)&&"Document"===e.kind&&Array.isArray(e.definitions)}function u(e,a,n,r){if(function(e){return"IntValue"===e.kind}(n)||function(e){return"FloatValue"===e.kind}(n))e[a.value]=Number(n.value)
else if(function(e){return"BooleanValue"===e.kind}(n)||function(e){return"StringValue"===e.kind}(n))e[a.value]=n.value
else if(function(e){return"ObjectValue"===e.kind}(n)){var t={}
n.fields.map((function(e){return u(t,e.name,e.value,r)})),e[a.value]=t}else if(function(e){return"Variable"===e.kind}(n)){var o=(r||{})[n.name.value]
e[a.value]=o}else if(function(e){return"ListValue"===e.kind}(n))e[a.value]=n.values.map((function(e){var n={}
return u(n,a,e,r),n[a.value]}))
else if(function(e){return"EnumValue"===e.kind}(n))e[a.value]=n.value
else{if(!function(e){return"NullValue"===e.kind}(n))throw __DEV__?new i.ej('The inline argument "'.concat(a.value,'" of kind "').concat(n.kind,'"')+"is not supported. Use variables instead of inline arguments to overcome this limitation."):new i.ej(52)
e[a.value]=null}}function c(e,a){var n=null
e.directives&&(n={},e.directives.forEach((function(e){n[e.name.value]={},e.arguments&&e.arguments.forEach((function(i){var r=i.name,t=i.value
return u(n[e.name.value],r,t,a)}))})))
var i=null
return e.arguments&&e.arguments.length&&(i={},e.arguments.forEach((function(e){var n=e.name,r=e.value
return u(i,n,r,a)}))),h(e.name.value,i,n)}var d=["connection","include","skip","client","rest","export"],h=Object.assign((function(e,a,n){if(a&&n&&n.connection&&n.connection.key){if(n.connection.filter&&n.connection.filter.length>0){var i=n.connection.filter?n.connection.filter:[]
i.sort()
var r={}
return i.forEach((function(e){r[e]=a[e]})),"".concat(n.connection.key,"(").concat(p(r),")")}return n.connection.key}var t=e
if(a){var o=p(a)
t+="(".concat(o,")")}return n&&Object.keys(n).forEach((function(e){-1===d.indexOf(e)&&(n[e]&&Object.keys(n[e]).length?t+="@".concat(e,"(").concat(p(n[e]),")"):t+="@".concat(e))})),t}),{setStringify:function(e){var a=p
return p=e,a}}),p=function(e){return JSON.stringify(e,m)}
function m(e,a){return(0,r.s)(a)&&!Array.isArray(a)&&(a=Object.keys(a).sort().reduce((function(e,n){return e[n]=a[n],e}),{})),a}function f(e,a){if(e.arguments&&e.arguments.length){var n={}
return e.arguments.forEach((function(e){var i=e.name,r=e.value
return u(n,i,r,a)})),n}return null}function v(e){return e.alias?e.alias.value:e.name.value}function g(e,a,n){if("string"==typeof e.__typename)return e.__typename
for(var i=0,r=a.selections;i<r.length;i++){var o=r[i]
if(k(o)){if("__typename"===o.name.value)return e[v(o)]}else{var s=g(e,(0,t.hi)(o,n).selectionSet,n)
if("string"==typeof s)return s}}}function k(e){return"Field"===e.kind}function y(e){return"InlineFragment"===e.kind}},1214:(e,a,n)=>{"use strict"
n.d(a,{Gw:()=>f,aL:()=>y,ob:()=>b,Fo:()=>g})
var i=n(2985),r=n(3199),t=n(9485),o=n(4250)
function s(e,a,n){var i=0
return e.forEach((function(n,r){a.call(this,n,r,e)&&(e[i++]=n)}),n),e.length=i,e}var l=n(2411),u=n(3669),c={kind:"Field",name:{kind:"Name",value:"__typename"}}
function d(e,a){return e.selectionSet.selections.every((function(e){return"FragmentSpread"===e.kind&&d(a[e.name.value],a)}))}function h(e){return d((0,o.$H)(e)||(0,o.pD)(e),(0,u.F)((0,o.kU)(e)))?null:e}function p(e){return function(a){return e.some((function(e){return e.name&&e.name===a.name.value||e.test&&e.test(a)}))}}function m(e,a){var n=Object.create(null),r=[],o=Object.create(null),l=[],u=h((0,t.Vn)(a,{Variable:{enter:function(e,a,i){"VariableDefinition"!==i.kind&&(n[e.name.value]=!0)}},Field:{enter:function(a){if(e&&a.directives&&e.some((function(e){return e.remove}))&&a.directives&&a.directives.some(p(e)))return a.arguments&&a.arguments.forEach((function(e){"Variable"===e.value.kind&&r.push({name:e.value.name.value})})),a.selectionSet&&k(a.selectionSet).forEach((function(e){l.push({name:e.name.value})})),null}},FragmentSpread:{enter:function(e){o[e.name.value]=!0}},Directive:{enter:function(a){if(p(e)(a))return null}}}))
return u&&s(r,(function(e){return!!e.name&&!n[e.name]})).length&&(u=function(e,a){var n=function(e){return function(a){return e.some((function(e){return a.value&&"Variable"===a.value.kind&&a.value.name&&(e.name===a.value.name.value||e.test&&e.test(a))}))}}(e)
return h((0,t.Vn)(a,{OperationDefinition:{enter:function(a){return(0,i.pi)((0,i.pi)({},a),{variableDefinitions:a.variableDefinitions?a.variableDefinitions.filter((function(a){return!e.some((function(e){return e.name===a.variable.name.value}))})):[]})}},Field:{enter:function(a){if(e.some((function(e){return e.remove}))){var i=0
if(a.arguments&&a.arguments.forEach((function(e){n(e)&&(i+=1)})),1===i)return null}}},Argument:{enter:function(e){if(n(e))return null}}}))}(r,u)),u&&s(l,(function(e){return!!e.name&&!o[e.name]})).length&&(u=function(e,a){function n(a){if(e.some((function(e){return e.name===a.name.value})))return null}return h((0,t.Vn)(a,{FragmentSpread:{enter:n},FragmentDefinition:{enter:n}}))}(l,u)),u}var f=Object.assign((function(e){return(0,t.Vn)((0,o.A$)(e),{SelectionSet:{enter:function(e,a,n){if(!n||"OperationDefinition"!==n.kind){var r=e.selections
if(r&&!r.some((function(e){return(0,l.My)(e)&&("__typename"===e.name.value||0===e.name.value.lastIndexOf("__",0))}))){var t=n
if(!((0,l.My)(t)&&t.directives&&t.directives.some((function(e){return"export"===e.name.value}))))return(0,i.pi)((0,i.pi)({},e),{selections:(0,i.ev)((0,i.ev)([],r,!0),[c],!1)})}}}}})}),{added:function(e){return e===c}}),v={test:function(e){var a="connection"===e.name.value
return a&&(e.arguments&&e.arguments.some((function(e){return"key"===e.name.value}))||__DEV__&&r.kG.warn("Removing an @connection directive even though it does not have a key. You may want to use the key parameter to specify a store key.")),a}}
function g(e){return m([v],(0,o.A$)(e))}function k(e){var a=[]
return e.selections.forEach((function(e){((0,l.My)(e)||(0,l.Ao)(e))&&e.selectionSet?k(e.selectionSet).forEach((function(e){return a.push(e)})):"FragmentSpread"===e.kind&&a.push(e)})),a}function y(e){return"query"===(0,o.p$)(e).operation?e:(0,t.Vn)(e,{OperationDefinition:{enter:function(e){return(0,i.pi)((0,i.pi)({},e),{operation:"query"})}}})}function b(e){(0,o.A$)(e)
var a=m([{test:function(e){return"client"===e.name.value},remove:!0}],e)
return a&&(a=(0,t.Vn)(a,{FragmentDefinition:{enter:function(e){if(e.selectionSet&&e.selectionSet.selections.every((function(e){return(0,l.My)(e)&&"__typename"===e.name.value})))return null}}})),a}},299:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{LifecycleResource:()=>d,Resource:()=>p,trackedFunction:()=>N,use:()=>D,useFunction:()=>C,useHelper:()=>R,useResource:()=>z,useTask:()=>b})
var i=n(6173),r=n(1292),t=n(9341),o=n(6283),s=n(3353),l=n(7219),u=n(8773),c=n(7456)
class d{static with(e){return[this,e]}constructor(e,a){this.args=a,(0,r.setOwner)(this,e)}}class h{constructor(e){this.capabilities=(0,o.capabilities)("3.23",{hasValue:!0,hasDestroyable:!0}),this.owner=e}createHelper(e,a){let n,r=this.owner,o=(0,i.createCache)((()=>(void 0===n?n=function(e,a,n,i){let r=new a(n,i)
return(0,t.associateDestroyableChild)(e,r),"setup"in r&&r.setup(),"teardown"in r&&(0,t.registerDestructor)(r,(()=>r.teardown())),r}(o,e,r,a):n.update(),n)))
return o}getValue(e){return(0,i.getValue)(e)}getDestroyable(e){return e}}(0,o.setHelperManager)((e=>new h(e)),d)
class p{static next(e,a){return new this((0,r.getOwner)(e),a,e)}static with(e){return[this,e]}constructor(e,a,n){this.args=a,(0,r.setOwner)(this,e)}}class m{constructor(e){this.capabilities=(0,o.capabilities)("3.23",{hasValue:!0,hasDestroyable:!0}),this.owner=e}createHelper(e,a){let n,r=this.owner,o=(0,i.createCache)((()=>{let i=new e(r,a,n)
return(0,t.associateDestroyableChild)(o,i),n&&(0,t.destroy)(n),n=i,n}))
return o}getValue(e){return(0,i.getValue)(e)}getDestroyable(e){return e}}(0,o.setHelperManager)((e=>new m(e)),p)
const f=Symbol("TASK")
class v extends d{get taskArgs(){return this.args.positional}get value(){return(0,l.get)(this.currentTask,"isRunning"),this.currentTask.value??this.lastTask?.value}setup(){this.update()}update(){this.currentTask&&(this.lastTask=this.currentTask),this.currentTask=this[f].perform(...this.taskArgs)}teardown(){this[f].cancelAll()}}const g=()=>[]
function k(e){if(!e)return{named:{},positional:[]}
let a=e()
return Array.isArray(a)?{named:{},positional:a}:a?"positional"in a||"named"in a?a:{named:a,positional:[]}:{named:{},positional:[]}}function y(e){return new Proxy(e,{get(e,a){const n=e.value,i=Reflect.get(n,a,n)
return"function"==typeof i?i.bind(n):i},ownKeys:e=>Reflect.ownKeys(e.value),getOwnPropertyDescriptor:(e,a)=>Reflect.getOwnPropertyDescriptor(e.value,a)})}function b(e,a,n){(0,s.assert)("Task does not have a perform method. Is it actually a task?","perform"in a)
let r=function(e,a,n){let r,t,s=S.get(a)
return s?t=s:(t=class extends v{constructor(){super(...arguments),this[f]=a}},S.set(a,t)),{get value(){return r||(r=(0,o.invokeHelper)(e,t,(()=>k(n)))),(0,i.getValue)(r)}}}(e,a,n||g)
return function(e){return new Proxy(e,{get(e,a){const n=e.value,i=n.currentTask
if("string"==typeof a&&((0,l.get)(n.currentTask,"isRunning"),(0,l.get)(n.currentTask,a)),"value"===a)return n.value
const r=Reflect.get(i,a,i)
return"function"==typeof r?r.bind(i):r},ownKeys:e=>Reflect.ownKeys(e.value),getOwnPropertyDescriptor:(e,a)=>Reflect.getOwnPropertyDescriptor(e.value,a)})}(r)}const S=new WeakMap,A=Symbol("FUNCTION TO RUN"),M=Symbol("INITIAL VALUE"),T=Symbol("HAS RUN"),_=Symbol("RUNNER"),w="___ Secret Value ___"
class j extends d{get value(){return(0,l.get)(this,w)}setup(){(0,c.waitForPromise)(this[_]())}update(){(0,c.waitForPromise)(this[_]())}async[_](){const{[A]:e}=this
if(void 0===e)return
let a=e(this[w])
await Promise.resolve(),(0,t.isDestroying)(this)||(0,t.isDestroyed)(this)||"object"==typeof a&&"then"in a&&(a=await a,(0,t.isDestroying)(this)||(0,t.isDestroyed)(this))||(this[w]=a,(0,l.notifyPropertyChange)(this,w))}}class E extends d{constructor(){super(...arguments),this[T]=!1}get value(){return(0,l.get)(this,w),!this[T]&&this[M]?this[M]:this[w]}get funArgs(){return this.args.positional}setup(){this.update()}update(){for(let n=0;n<this.funArgs.length;n++)this.funArgs[n]
const e=this[A],a=this[w];(0,c.waitForPromise)((async()=>{if(await new Promise((e=>(0,u.schedule)("afterRender",e,null))),(0,t.isDestroying)(this)||(0,t.isDestroyed)(this))return
const n=await e(a,...this.funArgs);(0,t.isDestroying)(this)||(0,t.isDestroyed)(this)||(this[w]=n,this[T]=!0,(0,l.notifyPropertyChange)(this,w))})())}}function N(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
let i,r,[t]=a;(0,s.assert)("Expected second argument to useFunction to either be an initialValue or the function to run",void 0!==a[1]),B(a)?r=a[1]:(i=a[1],r=a[2])
let o=L(t,i,r)
return y(o)}function B(e){return 2===e.length}const P=new WeakMap
function L(e,a,n){let r,t,s=P.get(n)
return s?t=s:(t=class extends j{constructor(){super(...arguments),this[w]=a,this[A]=n}},P.set(n,t)),{get value(){return r||(r=(0,o.invokeHelper)(e,t,(()=>{}))),(0,i.getValue)(r)}}}function D(e,a,n){if(!n)return;(0,s.assert)("@use can only be used with string-keys","string"==typeof a)
let r=new WeakMap,{initializer:t}=n
return{get(){let e=r.get(this)
if(!e){let n=t.call(this)
if(Array.isArray(n)){(0,s.assert)(`@use ${a} was given unexpected value. Make sure usage is '@use ${a} = MyResource.with(() => ...)'`,2===n.length&&"function"==typeof n[1])
let[i,t]=n
e={resource:(0,o.invokeHelper)(this,i,(()=>k(t))),type:"class"},r.set(this,e)}else if("function"==typeof n)throw new Error("Functions are not yet supported by @use")}switch((0,s.assert)("Resource could not be created",e),e.type){case"function":return(0,i.getValue)(e.resource).value
case"class":return(0,i.getValue)(e.resource)
default:(0,s.assert)("Resource value could not be extracted",!1)}}}}const x=new WeakMap
function C(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n]
let i,r,t,[o]=a
function l(e){return"function"==typeof e[1]}(0,s.assert)("Expected second argument to useFunction to either be an initialValue or the function to run",void 0!==a[1]),l(a)?(r=a[1],t=a[2]):(i=a[1],r=a[2],t=a[3])
let u=K(o,i,r,t||g)
return y(u)}function K(e,a,n,r){let t,s,l=x.get(n)
return l?s=l:(s=class extends E{constructor(){super(...arguments),this[M]=a,this[A]=n}},x.set(n,s)),{get value(){return t||(t=(0,o.invokeHelper)(e,s,(()=>k(r)))),(0,i.getValue)(t)}}}function R(e,a){let n,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:g
return{get value(){return n||(n=(0,o.invokeHelper)(e,a,(()=>k(r)))),(0,i.getValue)(n)}}}function z(e,a,n){(0,s.assert)("Expected second argument, klass, to be a Resource. This is different from the v1 series where useResource could be used for both functions and class-based Resources. If you intended to pass a function, you'll now (since v2) want to use useFunction instead",a.prototype instanceof d||a.prototype instanceof p)
let r=function(e,a,n){let r
return{get value(){return r||(r=(0,o.invokeHelper)(e,a,(()=>k(n)))),(0,i.getValue)(r)}}}(e,a,n||g)
return y(r)}},2496:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{add:()=>M,after:()=>K,ary:()=>ta,assign:()=>Za,assignIn:()=>$a,assignInWith:()=>en,assignWith:()=>nn,at:()=>zn,attempt:()=>Zn,before:()=>qn,bind:()=>Yn,bindAll:()=>$n,bindKey:()=>ei,camelCase:()=>qi,capitalize:()=>ki,castArray:()=>Qi,ceil:()=>er,chain:()=>ar,chunk:()=>rr,clamp:()=>or,clone:()=>at,cloneDeep:()=>nt,cloneDeepWith:()=>it,cloneWith:()=>rt,commit:()=>tt,compact:()=>ot,concat:()=>st,cond:()=>Ct,conforms:()=>Rt,conformsTo:()=>zt,constant:()=>xe,countBy:()=>Zt,create:()=>qt,curry:()=>Yt,curryRight:()=>Xt,debounce:()=>io,deburr:()=>Ti,default:()=>Yp,defaultTo:()=>ro,defaults:()=>lo,defaultsDeep:()=>ko,defer:()=>So,delay:()=>Mo,difference:()=>wo,differenceBy:()=>Eo,differenceWith:()=>No,divide:()=>Bo,drop:()=>Po,dropRight:()=>Lo,dropRightWhile:()=>xo,dropWhile:()=>Co,each:()=>Ro,eachRight:()=>Go,endsWith:()=>Ho,entries:()=>Jo,entriesIn:()=>Uo,eq:()=>sa,escape:()=>Qo,escapeRegExp:()=>Xo,every:()=>ns,extend:()=>$a,extendWith:()=>en,fill:()=>rs,filter:()=>os,find:()=>cs,findIndex:()=>us,findKey:()=>hs,findLast:()=>vs,findLastIndex:()=>fs,findLastKey:()=>gs,first:()=>ks,flatMap:()=>Ss,flatMapDeep:()=>As,flatMapDepth:()=>Ms,flatten:()=>Kn,flattenDeep:()=>Ts,flattenDepth:()=>_s,flip:()=>ws,floor:()=>js,flow:()=>Ns,flowRight:()=>Bs,forEach:()=>Ro,forEachRight:()=>Go,forIn:()=>Ps,forInRight:()=>Ls,forOwn:()=>Ds,forOwnRight:()=>xs,fromPairs:()=>Cs,functions:()=>Rs,functionsIn:()=>zs,get:()=>Bn,groupBy:()=>Is,gt:()=>Hs,gte:()=>Fs,has:()=>Ws,hasIn:()=>Bt,head:()=>ks,identity:()=>R,inRange:()=>Qs,includes:()=>al,indexOf:()=>il,initial:()=>rl,intersection:()=>ll,intersectionBy:()=>ul,intersectionWith:()=>cl,invert:()=>pl,invertBy:()=>gl,invoke:()=>bl,invokeMap:()=>Sl,isArguments:()=>_a,isArray:()=>k,isArrayBuffer:()=>Ml,isArrayLike:()=>fa,isArrayLikeObject:()=>co,isBoolean:()=>Tl,isBuffer:()=>Ba,isDate:()=>wl,isElement:()=>jl,isEmpty:()=>Nl,isEqual:()=>Bl,isEqualWith:()=>Pl,isError:()=>Un,isFinite:()=>Dl,isFunction:()=>z,isInteger:()=>xl,isLength:()=>ma,isMap:()=>Zr,isMatch:()=>Cl,isMatchWith:()=>Kl,isNaN:()=>zl,isNative:()=>Il,isNil:()=>Vl,isNull:()=>Gl,isNumber:()=>Rl,isObject:()=>E,isObjectLike:()=>m,isPlainObject:()=>Jn,isRegExp:()=>Fl,isSafeInteger:()=>Jl,isSet:()=>Qr,isString:()=>Ys,isSymbol:()=>f,isTypedArray:()=>za,isUndefined:()=>Ul,isWeakMap:()=>Wl,isWeakSet:()=>Zl,iteratee:()=>ql,join:()=>Yl,kebabCase:()=>$l,keyBy:()=>Xl,keys:()=>Ja,keysIn:()=>Qa,last:()=>jo,lastIndexOf:()=>nu,lodash:()=>we,lowerCase:()=>iu,lowerFirst:()=>ru,lt:()=>ou,lte:()=>su,map:()=>bs,mapKeys:()=>lu,mapValues:()=>uu,matches:()=>cu,matchesProperty:()=>du,max:()=>pu,maxBy:()=>mu,mean:()=>gu,meanBy:()=>ku,memoize:()=>Sn,merge:()=>bu,mergeWith:()=>go,method:()=>Su,methodOf:()=>Au,min:()=>Mu,minBy:()=>Tu,mixin:()=>_u,multiply:()=>wu,negate:()=>ju,next:()=>Bu,noop:()=>me,now:()=>eo,nth:()=>Lu,nthArg:()=>Du,omit:()=>Ku,omitBy:()=>Iu,once:()=>Vu,orderBy:()=>Fu,over:()=>Uu,overArgs:()=>Qu,overEvery:()=>Yu,overSome:()=>$u,pad:()=>vc,padEnd:()=>gc,padStart:()=>kc,parseInt:()=>Sc,partial:()=>Mc,partialRight:()=>_c,partition:()=>wc,pick:()=>jc,pickBy:()=>Ou,plant:()=>Ec,property:()=>Dt,propertyOf:()=>Nc,pull:()=>xc,pullAll:()=>Dc,pullAllBy:()=>Cc,pullAllWith:()=>Kc,pullAt:()=>Oc,random:()=>Uc,range:()=>Qc,rangeRight:()=>Yc,rearg:()=>Xc,reduce:()=>ad,reduceRight:()=>id,reject:()=>rd,remove:()=>td,repeat:()=>od,replace:()=>sd,rest:()=>ld,result:()=>ud,reverse:()=>dd,round:()=>hd,sample:()=>fd,sampleSize:()=>yd,set:()=>bd,setWith:()=>Sd,shuffle:()=>Td,size:()=>_d,slice:()=>wd,snakeCase:()=>jd,some:()=>Nd,sortBy:()=>Bd,sortedIndex:()=>Cd,sortedIndexBy:()=>Kd,sortedIndexOf:()=>Rd,sortedLastIndex:()=>zd,sortedLastIndexBy:()=>Od,sortedLastIndexOf:()=>Id,sortedUniq:()=>Gd,sortedUniqBy:()=>Hd,split:()=>Fd,spread:()=>Ud,startCase:()=>Wd,startsWith:()=>Zd,stubArray:()=>vr,stubFalse:()=>wa,stubObject:()=>qd,stubString:()=>Qd,stubTrue:()=>Yd,subtract:()=>$d,sum:()=>Xd,sumBy:()=>eh,tail:()=>ah,take:()=>nh,takeRight:()=>ih,takeRightWhile:()=>rh,takeWhile:()=>th,tap:()=>oh,template:()=>Ah,templateSettings:()=>ph,throttle:()=>Mh,thru:()=>Th,times:()=>jh,toArray:()=>Nu,toFinite:()=>x,toInteger:()=>C,toIterator:()=>Eh,toJSON:()=>Bh,toLength:()=>is,toLower:()=>Ph,toNumber:()=>D,toPairs:()=>Jo,toPairsIn:()=>Uo,toPath:()=>Lh,toPlainObject:()=>po,toSafeInteger:()=>Dh,toString:()=>wn,toUpper:()=>xh,transform:()=>Ch,trim:()=>zh,trimEnd:()=>Oh,trimStart:()=>Vh,truncate:()=>Hh,unary:()=>Fh,unescape:()=>Zh,union:()=>Yh,unionBy:()=>$h,unionWith:()=>Xh,uniq:()=>ep,uniqBy:()=>ap,uniqWith:()=>np,uniqueId:()=>rp,unset:()=>tp,unzip:()=>sp,unzipWith:()=>lp,update:()=>cp,updateWith:()=>dp,upperCase:()=>hp,upperFirst:()=>gi,value:()=>Bh,valueOf:()=>Bh,values:()=>Xs,valuesIn:()=>pp,without:()=>mp,words:()=>Ui,wrap:()=>fp,wrapperAt:()=>vp,wrapperChain:()=>gp,wrapperCommit:()=>tt,wrapperLodash:()=>we,wrapperNext:()=>Bu,wrapperPlant:()=>Ec,wrapperReverse:()=>kp,wrapperToIterator:()=>Eh,wrapperValue:()=>Bh,xor:()=>bp,xorBy:()=>Sp,xorWith:()=>Ap,zip:()=>Mp,zipObject:()=>_p,zipObjectDeep:()=>wp,zipWith:()=>jp})
const i="object"==typeof global&&global&&global.Object===Object&&global
var r="object"==typeof self&&self&&self.Object===Object&&self
const t=i||r||Function("return this")(),o=t.Symbol
var s=Object.prototype,l=s.hasOwnProperty,u=s.toString,c=o?o.toStringTag:void 0,d=Object.prototype.toString,h=o?o.toStringTag:void 0
const p=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":h&&h in Object(e)?function(e){var a=l.call(e,c),n=e[c]
try{e[c]=void 0
var i=!0}catch(e){}var r=u.call(e)
return i&&(a?e[c]=n:delete e[c]),r}(e):function(e){return d.call(e)}(e)},m=function(e){return null!=e&&"object"==typeof e},f=function(e){return"symbol"==typeof e||m(e)&&"[object Symbol]"==p(e)},v=function(e){return"number"==typeof e?e:f(e)?NaN:+e},g=function(e,a){for(var n=-1,i=null==e?0:e.length,r=Array(i);++n<i;)r[n]=a(e[n],n,e)
return r},k=Array.isArray
var y=o?o.prototype:void 0,b=y?y.toString:void 0
const S=function e(a){if("string"==typeof a)return a
if(k(a))return g(a,e)+""
if(f(a))return b?b.call(a):""
var n=a+""
return"0"==n&&1/a==-1/0?"-0":n},A=function(e,a){return function(n,i){var r
if(void 0===n&&void 0===i)return a
if(void 0!==n&&(r=n),void 0!==i){if(void 0===r)return i
"string"==typeof n||"string"==typeof i?(n=S(n),i=S(i)):(n=v(n),i=v(i)),r=e(n,i)}return r}},M=A((function(e,a){return e+a}),0)
var T=/\s/
const _=function(e){for(var a=e.length;a--&&T.test(e.charAt(a)););return a}
var w=/^\s+/
const j=function(e){return e?e.slice(0,_(e)+1).replace(w,""):e},E=function(e){var a=typeof e
return null!=e&&("object"==a||"function"==a)}
var N=/^[-+]0x[0-9a-f]+$/i,B=/^0b[01]+$/i,P=/^0o[0-7]+$/i,L=parseInt
const D=function(e){if("number"==typeof e)return e
if(f(e))return NaN
if(E(e)){var a="function"==typeof e.valueOf?e.valueOf():e
e=E(a)?a+"":a}if("string"!=typeof e)return 0===e?e:+e
e=j(e)
var n=B.test(e)
return n||P.test(e)?L(e.slice(2),n?2:8):N.test(e)?NaN:+e},x=function(e){return e?1/0===(e=D(e))||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0},C=function(e){var a=x(e),n=a%1
return a==a?n?a-n:a:0},K=function(e,a){if("function"!=typeof a)throw new TypeError("Expected a function")
return e=C(e),function(){if(--e<1)return a.apply(this,arguments)}},R=function(e){return e},z=function(e){if(!E(e))return!1
var a=p(e)
return"[object Function]"==a||"[object GeneratorFunction]"==a||"[object AsyncFunction]"==a||"[object Proxy]"==a},O=t["__core-js_shared__"]
var I,V=(I=/[^.]+$/.exec(O&&O.keys&&O.keys.IE_PROTO||""))?"Symbol(src)_1."+I:"",G=Function.prototype.toString
const H=function(e){if(null!=e){try{return G.call(e)}catch(e){}try{return e+""}catch(e){}}return""}
var F=/^\[object .+?Constructor\]$/,J=Function.prototype,U=Object.prototype,W=J.toString,Z=U.hasOwnProperty,q=RegExp("^"+W.call(Z).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$")
const Q=function(e){return!(!E(e)||function(e){return!!V&&V in e}(e))&&(z(e)?q:F).test(H(e))},Y=function(e,a){var n=function(e,a){return null==e?void 0:e[a]}(e,a)
return Q(n)?n:void 0},$=Y(t,"WeakMap"),X=$&&new $
var ee=X?function(e,a){return X.set(e,a),e}:R
const ae=ee
var ne=Object.create
const ie=function(){function e(){}return function(a){if(!E(a))return{}
if(ne)return ne(a)
e.prototype=a
var n=new e
return e.prototype=void 0,n}}(),re=function(e){return function(){var a=arguments
switch(a.length){case 0:return new e
case 1:return new e(a[0])
case 2:return new e(a[0],a[1])
case 3:return new e(a[0],a[1],a[2])
case 4:return new e(a[0],a[1],a[2],a[3])
case 5:return new e(a[0],a[1],a[2],a[3],a[4])
case 6:return new e(a[0],a[1],a[2],a[3],a[4],a[5])
case 7:return new e(a[0],a[1],a[2],a[3],a[4],a[5],a[6])}var n=ie(e.prototype),i=e.apply(n,a)
return E(i)?i:n}},te=function(e,a,n){switch(n.length){case 0:return e.call(a)
case 1:return e.call(a,n[0])
case 2:return e.call(a,n[0],n[1])
case 3:return e.call(a,n[0],n[1],n[2])}return e.apply(a,n)}
var oe=Math.max
const se=function(e,a,n,i){for(var r=-1,t=e.length,o=n.length,s=-1,l=a.length,u=oe(t-o,0),c=Array(l+u),d=!i;++s<l;)c[s]=a[s]
for(;++r<o;)(d||r<t)&&(c[n[r]]=e[r])
for(;u--;)c[s++]=e[r++]
return c}
var le=Math.max
const ue=function(e,a,n,i){for(var r=-1,t=e.length,o=-1,s=n.length,l=-1,u=a.length,c=le(t-s,0),d=Array(c+u),h=!i;++r<c;)d[r]=e[r]
for(var p=r;++l<u;)d[p+l]=a[l]
for(;++o<s;)(h||r<t)&&(d[p+n[o]]=e[r++])
return d},ce=function(e,a){for(var n=e.length,i=0;n--;)e[n]===a&&++i
return i},de=function(){}
function he(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}he.prototype=ie(de.prototype),he.prototype.constructor=he
const pe=he,me=function(){}
var fe=X?function(e){return X.get(e)}:me
const ve=fe,ge={}
var ke=Object.prototype.hasOwnProperty
const ye=function(e){for(var a=e.name+"",n=ge[a],i=ke.call(ge,a)?n.length:0;i--;){var r=n[i],t=r.func
if(null==t||t==e)return r.name}return a}
function be(e,a){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!a,this.__index__=0,this.__values__=void 0}be.prototype=ie(de.prototype),be.prototype.constructor=be
const Se=be,Ae=function(e,a){var n=-1,i=e.length
for(a||(a=Array(i));++n<i;)a[n]=e[n]
return a},Me=function(e){if(e instanceof pe)return e.clone()
var a=new Se(e.__wrapped__,e.__chain__)
return a.__actions__=Ae(e.__actions__),a.__index__=e.__index__,a.__values__=e.__values__,a}
var Te=Object.prototype.hasOwnProperty
function _e(e){if(m(e)&&!k(e)&&!(e instanceof pe)){if(e instanceof Se)return e
if(Te.call(e,"__wrapped__"))return Me(e)}return new Se(e)}_e.prototype=de.prototype,_e.prototype.constructor=_e
const we=_e,je=function(e){var a=ye(e),n=we[a]
if("function"!=typeof n||!(a in pe.prototype))return!1
if(e===n)return!0
var i=ve(n)
return!!i&&e===i[0]}
var Ee=Date.now
const Ne=function(e){var a=0,n=0
return function(){var i=Ee(),r=16-(i-n)
if(n=i,r>0){if(++a>=800)return arguments[0]}else a=0
return e.apply(void 0,arguments)}},Be=Ne(ae)
var Pe=/\{\n\/\* \[wrapped with (.+)\] \*/,Le=/,? & /,De=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/
const xe=function(e){return function(){return e}}
var Ce=function(){try{var e=Y(Object,"defineProperty")
return e({},"",{}),e}catch(e){}}()
const Ke=Ce
var Re=Ke?function(e,a){return Ke(e,"toString",{configurable:!0,enumerable:!1,value:xe(a),writable:!0})}:R
const ze=Ne(Re),Oe=function(e,a){for(var n=-1,i=null==e?0:e.length;++n<i&&!1!==a(e[n],n,e););return e},Ie=function(e,a,n,i){for(var r=e.length,t=n+(i?1:-1);i?t--:++t<r;)if(a(e[t],t,e))return t
return-1},Ve=function(e){return e!=e},Ge=function(e,a,n){return a==a?function(e,a,n){for(var i=n-1,r=e.length;++i<r;)if(e[i]===a)return i
return-1}(e,a,n):Ie(e,Ve,n)},He=function(e,a){return!(null==e||!e.length)&&Ge(e,a,0)>-1}
var Fe=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]]
const Je=function(e,a,n){var i=a+""
return ze(e,function(e,a){var n=a.length
if(!n)return e
var i=n-1
return a[i]=(n>1?"& ":"")+a[i],a=a.join(n>2?", ":" "),e.replace(De,"{\n/* [wrapped with "+a+"] */\n")}(i,function(e,a){return Oe(Fe,(function(n){var i="_."+n[0]
a&n[1]&&!He(e,i)&&e.push(i)})),e.sort()}(function(e){var a=e.match(Pe)
return a?a[1].split(Le):[]}(i),n)))},Ue=function(e,a,n,i,r,t,o,s,l,u){var c=8&a
a|=c?32:64,4&(a&=~(c?64:32))||(a&=-4)
var d=[e,a,r,c?t:void 0,c?o:void 0,c?void 0:t,c?void 0:o,s,l,u],h=n.apply(void 0,d)
return je(e)&&Be(h,d),h.placeholder=i,Je(h,e,a)},We=function(e){return e.placeholder}
var Ze=/^(?:0|[1-9]\d*)$/
const qe=function(e,a){var n=typeof e
return!!(a=null==a?9007199254740991:a)&&("number"==n||"symbol"!=n&&Ze.test(e))&&e>-1&&e%1==0&&e<a}
var Qe=Math.min
const Ye=function(e,a){for(var n=e.length,i=Qe(a.length,n),r=Ae(e);i--;){var t=a[i]
e[i]=qe(t,n)?r[t]:void 0}return e}
var $e="__lodash_placeholder__"
const Xe=function(e,a){for(var n=-1,i=e.length,r=0,t=[];++n<i;){var o=e[n]
o!==a&&o!==$e||(e[n]=$e,t[r++]=n)}return t},ea=function e(a,n,i,r,o,s,l,u,c,d){var h=128&n,p=1&n,m=2&n,f=24&n,v=512&n,g=m?void 0:re(a)
return function k(){for(var y=arguments.length,b=Array(y),S=y;S--;)b[S]=arguments[S]
if(f)var A=We(k),M=ce(b,A)
if(r&&(b=se(b,r,o,f)),s&&(b=ue(b,s,l,f)),y-=M,f&&y<d){var T=Xe(b,A)
return Ue(a,n,e,k.placeholder,i,b,T,u,c,d-y)}var _=p?i:this,w=m?_[a]:a
return y=b.length,u?b=Ye(b,u):v&&y>1&&b.reverse(),h&&c<y&&(b.length=c),this&&this!==t&&this instanceof k&&(w=g||re(w)),w.apply(_,b)}}
var aa="__lodash_placeholder__",na=Math.min,ia=Math.max
const ra=function(e,a,n,i,r,o,s,l){var u=2&a
if(!u&&"function"!=typeof e)throw new TypeError("Expected a function")
var c=i?i.length:0
if(c||(a&=-97,i=r=void 0),s=void 0===s?s:ia(C(s),0),l=void 0===l?l:C(l),c-=r?r.length:0,64&a){var d=i,h=r
i=r=void 0}var p=u?void 0:ve(e),m=[e,a,n,i,r,d,h,o,s,l]
if(p&&function(e,a){var n=e[1],i=a[1],r=n|i,t=r<131,o=128==i&&8==n||128==i&&256==n&&e[7].length<=a[8]||384==i&&a[7].length<=a[8]&&8==n
if(!t&&!o)return e
1&i&&(e[2]=a[2],r|=1&n?0:4)
var s=a[3]
if(s){var l=e[3]
e[3]=l?se(l,s,a[4]):s,e[4]=l?Xe(e[3],aa):a[4]}(s=a[5])&&(l=e[5],e[5]=l?ue(l,s,a[6]):s,e[6]=l?Xe(e[5],aa):a[6]),(s=a[7])&&(e[7]=s),128&i&&(e[8]=null==e[8]?a[8]:na(e[8],a[8])),null==e[9]&&(e[9]=a[9]),e[0]=a[0],e[1]=r}(m,p),e=m[0],a=m[1],n=m[2],i=m[3],r=m[4],!(l=m[9]=void 0===m[9]?u?0:e.length:ia(m[9]-c,0))&&24&a&&(a&=-25),a&&1!=a)f=8==a||16==a?function(e,a,n){var i=re(e)
return function r(){for(var o=arguments.length,s=Array(o),l=o,u=We(r);l--;)s[l]=arguments[l]
var c=o<3&&s[0]!==u&&s[o-1]!==u?[]:Xe(s,u)
return(o-=c.length)<n?Ue(e,a,ea,r.placeholder,void 0,s,c,void 0,void 0,n-o):te(this&&this!==t&&this instanceof r?i:e,this,s)}}(e,a,l):32!=a&&33!=a||r.length?ea.apply(void 0,m):function(e,a,n,i){var r=1&a,o=re(e)
return function a(){for(var s=-1,l=arguments.length,u=-1,c=i.length,d=Array(c+l),h=this&&this!==t&&this instanceof a?o:e;++u<c;)d[u]=i[u]
for(;l--;)d[u++]=arguments[++s]
return te(h,r?n:this,d)}}(e,a,n,i)
else var f=function(e,a,n){var i=1&a,r=re(e)
return function a(){return(this&&this!==t&&this instanceof a?r:e).apply(i?n:this,arguments)}}(e,a,n)
return Je((p?ae:Be)(f,m),e,a)},ta=function(e,a,n){return a=n?void 0:a,a=e&&null==a?e.length:a,ra(e,128,void 0,void 0,void 0,void 0,a)},oa=function(e,a,n){"__proto__"==a&&Ke?Ke(e,a,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[a]=n},sa=function(e,a){return e===a||e!=e&&a!=a}
var la=Object.prototype.hasOwnProperty
const ua=function(e,a,n){var i=e[a]
la.call(e,a)&&sa(i,n)&&(void 0!==n||a in e)||oa(e,a,n)},ca=function(e,a,n,i){var r=!n
n||(n={})
for(var t=-1,o=a.length;++t<o;){var s=a[t],l=i?i(n[s],e[s],s,n,e):void 0
void 0===l&&(l=e[s]),r?oa(n,s,l):ua(n,s,l)}return n}
var da=Math.max
const ha=function(e,a,n){return a=da(void 0===a?e.length-1:a,0),function(){for(var i=arguments,r=-1,t=da(i.length-a,0),o=Array(t);++r<t;)o[r]=i[a+r]
r=-1
for(var s=Array(a+1);++r<a;)s[r]=i[r]
return s[a]=n(o),te(e,this,s)}},pa=function(e,a){return ze(ha(e,a,R),e+"")},ma=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991},fa=function(e){return null!=e&&ma(e.length)&&!z(e)},va=function(e,a,n){if(!E(n))return!1
var i=typeof a
return!!("number"==i?fa(n)&&qe(a,n.length):"string"==i&&a in n)&&sa(n[a],e)},ga=function(e){return pa((function(a,n){var i=-1,r=n.length,t=r>1?n[r-1]:void 0,o=r>2?n[2]:void 0
for(t=e.length>3&&"function"==typeof t?(r--,t):void 0,o&&va(n[0],n[1],o)&&(t=r<3?void 0:t,r=1),a=Object(a);++i<r;){var s=n[i]
s&&e(a,s,i,t)}return a}))}
var ka=Object.prototype
const ya=function(e){var a=e&&e.constructor
return e===("function"==typeof a&&a.prototype||ka)},ba=function(e,a){for(var n=-1,i=Array(e);++n<e;)i[n]=a(n)
return i},Sa=function(e){return m(e)&&"[object Arguments]"==p(e)}
var Aa=Object.prototype,Ma=Aa.hasOwnProperty,Ta=Aa.propertyIsEnumerable
const _a=Sa(function(){return arguments}())?Sa:function(e){return m(e)&&Ma.call(e,"callee")&&!Ta.call(e,"callee")},wa=function(){return!1}
var ja="object"==typeof exports&&exports&&!exports.nodeType&&exports,Ea=ja&&"object"==typeof module&&module&&!module.nodeType&&module,Na=Ea&&Ea.exports===ja?t.Buffer:void 0
const Ba=(Na?Na.isBuffer:void 0)||wa
var Pa={}
Pa["[object Float32Array]"]=Pa["[object Float64Array]"]=Pa["[object Int8Array]"]=Pa["[object Int16Array]"]=Pa["[object Int32Array]"]=Pa["[object Uint8Array]"]=Pa["[object Uint8ClampedArray]"]=Pa["[object Uint16Array]"]=Pa["[object Uint32Array]"]=!0,Pa["[object Arguments]"]=Pa["[object Array]"]=Pa["[object ArrayBuffer]"]=Pa["[object Boolean]"]=Pa["[object DataView]"]=Pa["[object Date]"]=Pa["[object Error]"]=Pa["[object Function]"]=Pa["[object Map]"]=Pa["[object Number]"]=Pa["[object Object]"]=Pa["[object RegExp]"]=Pa["[object Set]"]=Pa["[object String]"]=Pa["[object WeakMap]"]=!1
const La=function(e){return function(a){return e(a)}}
var Da="object"==typeof exports&&exports&&!exports.nodeType&&exports,xa=Da&&"object"==typeof module&&module&&!module.nodeType&&module,Ca=xa&&xa.exports===Da&&i.process
const Ka=function(){try{return xa&&xa.require&&xa.require("util").types||Ca&&Ca.binding&&Ca.binding("util")}catch(e){}}()
var Ra=Ka&&Ka.isTypedArray
const za=Ra?La(Ra):function(e){return m(e)&&ma(e.length)&&!!Pa[p(e)]}
var Oa=Object.prototype.hasOwnProperty
const Ia=function(e,a){var n=k(e),i=!n&&_a(e),r=!n&&!i&&Ba(e),t=!n&&!i&&!r&&za(e),o=n||i||r||t,s=o?ba(e.length,String):[],l=s.length
for(var u in e)!a&&!Oa.call(e,u)||o&&("length"==u||r&&("offset"==u||"parent"==u)||t&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||qe(u,l))||s.push(u)
return s},Va=function(e,a){return function(n){return e(a(n))}},Ga=Va(Object.keys,Object)
var Ha=Object.prototype.hasOwnProperty
const Fa=function(e){if(!ya(e))return Ga(e)
var a=[]
for(var n in Object(e))Ha.call(e,n)&&"constructor"!=n&&a.push(n)
return a},Ja=function(e){return fa(e)?Ia(e):Fa(e)}
var Ua=Object.prototype.hasOwnProperty,Wa=ga((function(e,a){if(ya(a)||fa(a))ca(a,Ja(a),e)
else for(var n in a)Ua.call(a,n)&&ua(e,n,a[n])}))
const Za=Wa
var qa=Object.prototype.hasOwnProperty
const Qa=function(e){return fa(e)?Ia(e,!0):function(e){if(!E(e))return function(e){var a=[]
if(null!=e)for(var n in Object(e))a.push(n)
return a}(e)
var a=ya(e),n=[]
for(var i in e)("constructor"!=i||!a&&qa.call(e,i))&&n.push(i)
return n}(e)}
var Ya=ga((function(e,a){ca(a,Qa(a),e)}))
const $a=Ya
var Xa=ga((function(e,a,n,i){ca(a,Qa(a),e,i)}))
const en=Xa
var an=ga((function(e,a,n,i){ca(a,Ja(a),e,i)}))
const nn=an
var rn=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,tn=/^\w*$/
const on=function(e,a){if(k(e))return!1
var n=typeof e
return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!f(e))||tn.test(e)||!rn.test(e)||null!=a&&e in Object(a)},sn=Y(Object,"create")
var ln=Object.prototype.hasOwnProperty,un=Object.prototype.hasOwnProperty
function cn(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}cn.prototype.clear=function(){this.__data__=sn?sn(null):{},this.size=0},cn.prototype.delete=function(e){var a=this.has(e)&&delete this.__data__[e]
return this.size-=a?1:0,a},cn.prototype.get=function(e){var a=this.__data__
if(sn){var n=a[e]
return"__lodash_hash_undefined__"===n?void 0:n}return ln.call(a,e)?a[e]:void 0},cn.prototype.has=function(e){var a=this.__data__
return sn?void 0!==a[e]:un.call(a,e)},cn.prototype.set=function(e,a){var n=this.__data__
return this.size+=this.has(e)?0:1,n[e]=sn&&void 0===a?"__lodash_hash_undefined__":a,this}
const dn=cn,hn=function(e,a){for(var n=e.length;n--;)if(sa(e[n][0],a))return n
return-1}
var pn=Array.prototype.splice
function mn(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}mn.prototype.clear=function(){this.__data__=[],this.size=0},mn.prototype.delete=function(e){var a=this.__data__,n=hn(a,e)
return!(n<0||(n==a.length-1?a.pop():pn.call(a,n,1),--this.size,0))},mn.prototype.get=function(e){var a=this.__data__,n=hn(a,e)
return n<0?void 0:a[n][1]},mn.prototype.has=function(e){return hn(this.__data__,e)>-1},mn.prototype.set=function(e,a){var n=this.__data__,i=hn(n,e)
return i<0?(++this.size,n.push([e,a])):n[i][1]=a,this}
const fn=mn,vn=Y(t,"Map"),gn=function(e,a){var n,i,r=e.__data__
return("string"==(i=typeof(n=a))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof a?"string":"hash"]:r.map}
function kn(e){var a=-1,n=null==e?0:e.length
for(this.clear();++a<n;){var i=e[a]
this.set(i[0],i[1])}}kn.prototype.clear=function(){this.size=0,this.__data__={hash:new dn,map:new(vn||fn),string:new dn}},kn.prototype.delete=function(e){var a=gn(this,e).delete(e)
return this.size-=a?1:0,a},kn.prototype.get=function(e){return gn(this,e).get(e)},kn.prototype.has=function(e){return gn(this,e).has(e)},kn.prototype.set=function(e,a){var n=gn(this,e),i=n.size
return n.set(e,a),this.size+=n.size==i?0:1,this}
const yn=kn
function bn(e,a){if("function"!=typeof e||null!=a&&"function"!=typeof a)throw new TypeError("Expected a function")
var n=function(){var i=arguments,r=a?a.apply(this,i):i[0],t=n.cache
if(t.has(r))return t.get(r)
var o=e.apply(this,i)
return n.cache=t.set(r,o)||t,o}
return n.cache=new(bn.Cache||yn),n}bn.Cache=yn
const Sn=bn
var An=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Mn=/\\(\\)?/g,Tn=function(e){var a=Sn((function(e){var a=[]
return 46===e.charCodeAt(0)&&a.push(""),e.replace(An,(function(e,n,i,r){a.push(i?r.replace(Mn,"$1"):n||e)})),a}),(function(e){return 500===n.size&&n.clear(),e})),n=a.cache
return a}()
const _n=Tn,wn=function(e){return null==e?"":S(e)},jn=function(e,a){return k(e)?e:on(e,a)?[e]:_n(wn(e))},En=function(e){if("string"==typeof e||f(e))return e
var a=e+""
return"0"==a&&1/e==-1/0?"-0":a},Nn=function(e,a){for(var n=0,i=(a=jn(a,e)).length;null!=e&&n<i;)e=e[En(a[n++])]
return n&&n==i?e:void 0},Bn=function(e,a,n){var i=null==e?void 0:Nn(e,a)
return void 0===i?n:i},Pn=function(e,a){for(var n=-1,i=a.length,r=Array(i),t=null==e;++n<i;)r[n]=t?void 0:Bn(e,a[n])
return r},Ln=function(e,a){for(var n=-1,i=a.length,r=e.length;++n<i;)e[r+n]=a[n]
return e}
var Dn=o?o.isConcatSpreadable:void 0
const xn=function(e){return k(e)||_a(e)||!!(Dn&&e&&e[Dn])},Cn=function e(a,n,i,r,t){var o=-1,s=a.length
for(i||(i=xn),t||(t=[]);++o<s;){var l=a[o]
n>0&&i(l)?n>1?e(l,n-1,i,r,t):Ln(t,l):r||(t[t.length]=l)}return t},Kn=function(e){return null!=e&&e.length?Cn(e,1):[]},Rn=function(e){return ze(ha(e,void 0,Kn),e+"")},zn=Rn(Pn),On=Va(Object.getPrototypeOf,Object)
var In=Function.prototype,Vn=Object.prototype,Gn=In.toString,Hn=Vn.hasOwnProperty,Fn=Gn.call(Object)
const Jn=function(e){if(!m(e)||"[object Object]"!=p(e))return!1
var a=On(e)
if(null===a)return!0
var n=Hn.call(a,"constructor")&&a.constructor
return"function"==typeof n&&n instanceof n&&Gn.call(n)==Fn},Un=function(e){if(!m(e))return!1
var a=p(e)
return"[object Error]"==a||"[object DOMException]"==a||"string"==typeof e.message&&"string"==typeof e.name&&!Jn(e)}
var Wn=pa((function(e,a){try{return te(e,void 0,a)}catch(e){return Un(e)?e:new Error(e)}}))
const Zn=Wn,qn=function(e,a){var n
if("function"!=typeof a)throw new TypeError("Expected a function")
return e=C(e),function(){return--e>0&&(n=a.apply(this,arguments)),e<=1&&(a=void 0),n}}
var Qn=pa((function(e,a,n){var i=1
if(n.length){var r=Xe(n,We(Qn))
i|=32}return ra(e,i,a,n,r)}))
Qn.placeholder={}
const Yn=Qn,$n=Rn((function(e,a){return Oe(a,(function(a){a=En(a),oa(e,a,Yn(e[a],e))})),e}))
var Xn=pa((function(e,a,n){var i=3
if(n.length){var r=Xe(n,We(Xn))
i|=32}return ra(a,i,e,n,r)}))
Xn.placeholder={}
const ei=Xn,ai=function(e,a,n){var i=-1,r=e.length
a<0&&(a=-a>r?0:r+a),(n=n>r?r:n)<0&&(n+=r),r=a>n?0:n-a>>>0,a>>>=0
for(var t=Array(r);++i<r;)t[i]=e[i+a]
return t},ni=function(e,a,n){var i=e.length
return n=void 0===n?i:n,!a&&n>=i?e:ai(e,a,n)}
var ii=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]")
const ri=function(e){return ii.test(e)}
var ti="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",oi="\\ud83c[\\udffb-\\udfff]",si="[^\\ud800-\\udfff]",li="(?:\\ud83c[\\udde6-\\uddff]){2}",ui="[\\ud800-\\udbff][\\udc00-\\udfff]",ci="(?:"+ti+"|"+oi+")?",di="[\\ufe0e\\ufe0f]?",hi=di+ci+"(?:\\u200d(?:"+[si,li,ui].join("|")+")"+di+ci+")*",pi="(?:"+[si+ti+"?",ti,li,ui,"[\\ud800-\\udfff]"].join("|")+")",mi=RegExp(oi+"(?="+oi+")|"+pi+hi,"g")
const fi=function(e){return ri(e)?function(e){return e.match(mi)||[]}(e):function(e){return e.split("")}(e)},vi=function(e){return function(a){a=wn(a)
var n=ri(a)?fi(a):void 0,i=n?n[0]:a.charAt(0),r=n?ni(n,1).join(""):a.slice(1)
return i[e]()+r}},gi=vi("toUpperCase"),ki=function(e){return gi(wn(e).toLowerCase())},yi=function(e,a,n,i){var r=-1,t=null==e?0:e.length
for(i&&t&&(n=e[++r]);++r<t;)n=a(n,e[r],r,e)
return n},bi=function(e){return function(a){return null==e?void 0:e[a]}},Si=bi({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"})
var Ai=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Mi=RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]","g")
const Ti=function(e){return(e=wn(e))&&e.replace(Ai,Si).replace(Mi,"")}
var _i=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,wi=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,ji="a-z\\xdf-\\xf6\\xf8-\\xff",Ei="A-Z\\xc0-\\xd6\\xd8-\\xde",Ni="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Bi="["+Ni+"]",Pi="\\d+",Li="["+ji+"]",Di="[^\\ud800-\\udfff"+Ni+Pi+"\\u2700-\\u27bf"+ji+Ei+"]",xi="(?:\\ud83c[\\udde6-\\uddff]){2}",Ci="[\\ud800-\\udbff][\\udc00-\\udfff]",Ki="["+Ei+"]",Ri="(?:"+Li+"|"+Di+")",zi="(?:"+Ki+"|"+Di+")",Oi="(?:['’](?:d|ll|m|re|s|t|ve))?",Ii="(?:['’](?:D|LL|M|RE|S|T|VE))?",Vi="(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",Gi="[\\ufe0e\\ufe0f]?",Hi=Gi+Vi+"(?:\\u200d(?:"+["[^\\ud800-\\udfff]",xi,Ci].join("|")+")"+Gi+Vi+")*",Fi="(?:"+["[\\u2700-\\u27bf]",xi,Ci].join("|")+")"+Hi,Ji=RegExp([Ki+"?"+Li+"+"+Oi+"(?="+[Bi,Ki,"$"].join("|")+")",zi+"+"+Ii+"(?="+[Bi,Ki+Ri,"$"].join("|")+")",Ki+"?"+Ri+"+"+Oi,Ki+"+"+Ii,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Pi,Fi].join("|"),"g")
const Ui=function(e,a,n){return e=wn(e),void 0===(a=n?void 0:a)?function(e){return wi.test(e)}(e)?function(e){return e.match(Ji)||[]}(e):function(e){return e.match(_i)||[]}(e):e.match(a)||[]}
var Wi=RegExp("['’]","g")
const Zi=function(e){return function(a){return yi(Ui(Ti(a).replace(Wi,"")),e,"")}},qi=Zi((function(e,a,n){return a=a.toLowerCase(),e+(n?ki(a):a)})),Qi=function(){if(!arguments.length)return[]
var e=arguments[0]
return k(e)?e:[e]}
var Yi=t.isFinite,$i=Math.min
const Xi=function(e){var a=Math[e]
return function(e,n){if(e=D(e),(n=null==n?0:$i(C(n),292))&&Yi(e)){var i=(wn(e)+"e").split("e"),r=a(i[0]+"e"+(+i[1]+n))
return+((i=(wn(r)+"e").split("e"))[0]+"e"+(+i[1]-n))}return a(e)}},er=Xi("ceil"),ar=function(e){var a=we(e)
return a.__chain__=!0,a}
var nr=Math.ceil,ir=Math.max
const rr=function(e,a,n){a=(n?va(e,a,n):void 0===a)?1:ir(C(a),0)
var i=null==e?0:e.length
if(!i||a<1)return[]
for(var r=0,t=0,o=Array(nr(i/a));r<i;)o[t++]=ai(e,r,r+=a)
return o},tr=function(e,a,n){return e==e&&(void 0!==n&&(e=e<=n?e:n),void 0!==a&&(e=e>=a?e:a)),e},or=function(e,a,n){return void 0===n&&(n=a,a=void 0),void 0!==n&&(n=(n=D(n))==n?n:0),void 0!==a&&(a=(a=D(a))==a?a:0),tr(D(e),a,n)}
function sr(e){var a=this.__data__=new fn(e)
this.size=a.size}sr.prototype.clear=function(){this.__data__=new fn,this.size=0},sr.prototype.delete=function(e){var a=this.__data__,n=a.delete(e)
return this.size=a.size,n},sr.prototype.get=function(e){return this.__data__.get(e)},sr.prototype.has=function(e){return this.__data__.has(e)},sr.prototype.set=function(e,a){var n=this.__data__
if(n instanceof fn){var i=n.__data__
if(!vn||i.length<199)return i.push([e,a]),this.size=++n.size,this
n=this.__data__=new yn(i)}return n.set(e,a),this.size=n.size,this}
const lr=sr,ur=function(e,a){return e&&ca(a,Ja(a),e)}
var cr="object"==typeof exports&&exports&&!exports.nodeType&&exports,dr=cr&&"object"==typeof module&&module&&!module.nodeType&&module,hr=dr&&dr.exports===cr?t.Buffer:void 0,pr=hr?hr.allocUnsafe:void 0
const mr=function(e,a){if(a)return e.slice()
var n=e.length,i=pr?pr(n):new e.constructor(n)
return e.copy(i),i},fr=function(e,a){for(var n=-1,i=null==e?0:e.length,r=0,t=[];++n<i;){var o=e[n]
a(o,n,e)&&(t[r++]=o)}return t},vr=function(){return[]}
var gr=Object.prototype.propertyIsEnumerable,kr=Object.getOwnPropertySymbols
const yr=kr?function(e){return null==e?[]:(e=Object(e),fr(kr(e),(function(a){return gr.call(e,a)})))}:vr,br=Object.getOwnPropertySymbols?function(e){for(var a=[];e;)Ln(a,yr(e)),e=On(e)
return a}:vr,Sr=function(e,a,n){var i=a(e)
return k(e)?i:Ln(i,n(e))},Ar=function(e){return Sr(e,Ja,yr)},Mr=function(e){return Sr(e,Qa,br)},Tr=Y(t,"DataView"),_r=Y(t,"Promise"),wr=Y(t,"Set")
var jr="[object Map]",Er="[object Promise]",Nr="[object Set]",Br="[object WeakMap]",Pr="[object DataView]",Lr=H(Tr),Dr=H(vn),xr=H(_r),Cr=H(wr),Kr=H($),Rr=p;(Tr&&Rr(new Tr(new ArrayBuffer(1)))!=Pr||vn&&Rr(new vn)!=jr||_r&&Rr(_r.resolve())!=Er||wr&&Rr(new wr)!=Nr||$&&Rr(new $)!=Br)&&(Rr=function(e){var a=p(e),n="[object Object]"==a?e.constructor:void 0,i=n?H(n):""
if(i)switch(i){case Lr:return Pr
case Dr:return jr
case xr:return Er
case Cr:return Nr
case Kr:return Br}return a})
const zr=Rr
var Or=Object.prototype.hasOwnProperty
const Ir=t.Uint8Array,Vr=function(e){var a=new e.constructor(e.byteLength)
return new Ir(a).set(new Ir(e)),a}
var Gr=/\w*$/,Hr=o?o.prototype:void 0,Fr=Hr?Hr.valueOf:void 0
const Jr=function(e,a){var n=a?Vr(e.buffer):e.buffer
return new e.constructor(n,e.byteOffset,e.length)},Ur=function(e){return"function"!=typeof e.constructor||ya(e)?{}:ie(On(e))}
var Wr=Ka&&Ka.isMap
const Zr=Wr?La(Wr):function(e){return m(e)&&"[object Map]"==zr(e)}
var qr=Ka&&Ka.isSet
const Qr=qr?La(qr):function(e){return m(e)&&"[object Set]"==zr(e)}
var Yr="[object Arguments]",$r="[object Function]",Xr={}
Xr[Yr]=Xr["[object Array]"]=Xr["[object ArrayBuffer]"]=Xr["[object DataView]"]=Xr["[object Boolean]"]=Xr["[object Date]"]=Xr["[object Float32Array]"]=Xr["[object Float64Array]"]=Xr["[object Int8Array]"]=Xr["[object Int16Array]"]=Xr["[object Int32Array]"]=Xr["[object Map]"]=Xr["[object Number]"]=Xr["[object Object]"]=Xr["[object RegExp]"]=Xr["[object Set]"]=Xr["[object String]"]=Xr["[object Symbol]"]=Xr["[object Uint8Array]"]=Xr["[object Uint8ClampedArray]"]=Xr["[object Uint16Array]"]=Xr["[object Uint32Array]"]=!0,Xr["[object Error]"]=Xr[$r]=Xr["[object WeakMap]"]=!1
const et=function e(a,n,i,r,t,o){var s,l=1&n,u=2&n,c=4&n
if(i&&(s=t?i(a,r,t,o):i(a)),void 0!==s)return s
if(!E(a))return a
var d=k(a)
if(d){if(s=function(e){var a=e.length,n=new e.constructor(a)
return a&&"string"==typeof e[0]&&Or.call(e,"index")&&(n.index=e.index,n.input=e.input),n}(a),!l)return Ae(a,s)}else{var h=zr(a),p=h==$r||"[object GeneratorFunction]"==h
if(Ba(a))return mr(a,l)
if("[object Object]"==h||h==Yr||p&&!t){if(s=u||p?{}:Ur(a),!l)return u?function(e,a){return ca(e,br(e),a)}(a,function(e,a){return e&&ca(a,Qa(a),e)}(s,a)):function(e,a){return ca(e,yr(e),a)}(a,ur(s,a))}else{if(!Xr[h])return t?a:{}
s=function(e,a,n){var i,r,t,o=e.constructor
switch(a){case"[object ArrayBuffer]":return Vr(e)
case"[object Boolean]":case"[object Date]":return new o(+e)
case"[object DataView]":return function(e,a){var n=a?Vr(e.buffer):e.buffer
return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n)
case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return Jr(e,n)
case"[object Map]":case"[object Set]":return new o
case"[object Number]":case"[object String]":return new o(e)
case"[object RegExp]":return(t=new(r=e).constructor(r.source,Gr.exec(r))).lastIndex=r.lastIndex,t
case"[object Symbol]":return i=e,Fr?Object(Fr.call(i)):{}}}(a,h,l)}}o||(o=new lr)
var m=o.get(a)
if(m)return m
o.set(a,s),Qr(a)?a.forEach((function(r){s.add(e(r,n,i,r,a,o))})):Zr(a)&&a.forEach((function(r,t){s.set(t,e(r,n,i,t,a,o))}))
var f=d?void 0:(c?u?Mr:Ar:u?Qa:Ja)(a)
return Oe(f||a,(function(r,t){f&&(r=a[t=r]),ua(s,t,e(r,n,i,t,a,o))})),s},at=function(e){return et(e,4)},nt=function(e){return et(e,5)},it=function(e,a){return et(e,5,a="function"==typeof a?a:void 0)},rt=function(e,a){return et(e,4,a="function"==typeof a?a:void 0)},tt=function(){return new Se(this.value(),this.__chain__)},ot=function(e){for(var a=-1,n=null==e?0:e.length,i=0,r=[];++a<n;){var t=e[a]
t&&(r[i++]=t)}return r},st=function(){var e=arguments.length
if(!e)return[]
for(var a=Array(e-1),n=arguments[0],i=e;i--;)a[i-1]=arguments[i]
return Ln(k(n)?Ae(n):[n],Cn(a,1))}
function lt(e){var a=-1,n=null==e?0:e.length
for(this.__data__=new yn;++a<n;)this.add(e[a])}lt.prototype.add=lt.prototype.push=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this},lt.prototype.has=function(e){return this.__data__.has(e)}
const ut=lt,ct=function(e,a){for(var n=-1,i=null==e?0:e.length;++n<i;)if(a(e[n],n,e))return!0
return!1},dt=function(e,a){return e.has(a)},ht=function(e,a,n,i,r,t){var o=1&n,s=e.length,l=a.length
if(s!=l&&!(o&&l>s))return!1
var u=t.get(e),c=t.get(a)
if(u&&c)return u==a&&c==e
var d=-1,h=!0,p=2&n?new ut:void 0
for(t.set(e,a),t.set(a,e);++d<s;){var m=e[d],f=a[d]
if(i)var v=o?i(f,m,d,a,e,t):i(m,f,d,e,a,t)
if(void 0!==v){if(v)continue
h=!1
break}if(p){if(!ct(a,(function(e,a){if(!dt(p,a)&&(m===e||r(m,e,n,i,t)))return p.push(a)}))){h=!1
break}}else if(m!==f&&!r(m,f,n,i,t)){h=!1
break}}return t.delete(e),t.delete(a),h},pt=function(e){var a=-1,n=Array(e.size)
return e.forEach((function(e,i){n[++a]=[i,e]})),n},mt=function(e){var a=-1,n=Array(e.size)
return e.forEach((function(e){n[++a]=e})),n}
var ft=o?o.prototype:void 0,vt=ft?ft.valueOf:void 0,gt=Object.prototype.hasOwnProperty,kt="[object Arguments]",yt="[object Array]",bt="[object Object]",St=Object.prototype.hasOwnProperty
const At=function e(a,n,i,r,t){return a===n||(null==a||null==n||!m(a)&&!m(n)?a!=a&&n!=n:function(e,a,n,i,r,t){var o=k(e),s=k(a),l=o?yt:zr(e),u=s?yt:zr(a),c=(l=l==kt?bt:l)==bt,d=(u=u==kt?bt:u)==bt,h=l==u
if(h&&Ba(e)){if(!Ba(a))return!1
o=!0,c=!1}if(h&&!c)return t||(t=new lr),o||za(e)?ht(e,a,n,i,r,t):function(e,a,n,i,r,t,o){switch(n){case"[object DataView]":if(e.byteLength!=a.byteLength||e.byteOffset!=a.byteOffset)return!1
e=e.buffer,a=a.buffer
case"[object ArrayBuffer]":return!(e.byteLength!=a.byteLength||!t(new Ir(e),new Ir(a)))
case"[object Boolean]":case"[object Date]":case"[object Number]":return sa(+e,+a)
case"[object Error]":return e.name==a.name&&e.message==a.message
case"[object RegExp]":case"[object String]":return e==a+""
case"[object Map]":var s=pt
case"[object Set]":var l=1&i
if(s||(s=mt),e.size!=a.size&&!l)return!1
var u=o.get(e)
if(u)return u==a
i|=2,o.set(e,a)
var c=ht(s(e),s(a),i,r,t,o)
return o.delete(e),c
case"[object Symbol]":if(vt)return vt.call(e)==vt.call(a)}return!1}(e,a,l,n,i,r,t)
if(!(1&n)){var p=c&&St.call(e,"__wrapped__"),m=d&&St.call(a,"__wrapped__")
if(p||m){var f=p?e.value():e,v=m?a.value():a
return t||(t=new lr),r(f,v,n,i,t)}}return!!h&&(t||(t=new lr),function(e,a,n,i,r,t){var o=1&n,s=Ar(e),l=s.length
if(l!=Ar(a).length&&!o)return!1
for(var u=l;u--;){var c=s[u]
if(!(o?c in a:gt.call(a,c)))return!1}var d=t.get(e),h=t.get(a)
if(d&&h)return d==a&&h==e
var p=!0
t.set(e,a),t.set(a,e)
for(var m=o;++u<l;){var f=e[c=s[u]],v=a[c]
if(i)var g=o?i(v,f,c,a,e,t):i(f,v,c,e,a,t)
if(!(void 0===g?f===v||r(f,v,n,i,t):g)){p=!1
break}m||(m="constructor"==c)}if(p&&!m){var k=e.constructor,y=a.constructor
k==y||!("constructor"in e)||!("constructor"in a)||"function"==typeof k&&k instanceof k&&"function"==typeof y&&y instanceof y||(p=!1)}return t.delete(e),t.delete(a),p}(e,a,n,i,r,t))}(a,n,i,r,e,t))},Mt=function(e,a,n,i){var r=n.length,t=r,o=!i
if(null==e)return!t
for(e=Object(e);r--;){var s=n[r]
if(o&&s[2]?s[1]!==e[s[0]]:!(s[0]in e))return!1}for(;++r<t;){var l=(s=n[r])[0],u=e[l],c=s[1]
if(o&&s[2]){if(void 0===u&&!(l in e))return!1}else{var d=new lr
if(i)var h=i(u,c,l,e,a,d)
if(!(void 0===h?At(c,u,3,i,d):h))return!1}}return!0},Tt=function(e){return e==e&&!E(e)},_t=function(e){for(var a=Ja(e),n=a.length;n--;){var i=a[n],r=e[i]
a[n]=[i,r,Tt(r)]}return a},wt=function(e,a){return function(n){return null!=n&&n[e]===a&&(void 0!==a||e in Object(n))}},jt=function(e){var a=_t(e)
return 1==a.length&&a[0][2]?wt(a[0][0],a[0][1]):function(n){return n===e||Mt(n,e,a)}},Et=function(e,a){return null!=e&&a in Object(e)},Nt=function(e,a,n){for(var i=-1,r=(a=jn(a,e)).length,t=!1;++i<r;){var o=En(a[i])
if(!(t=null!=e&&n(e,o)))break
e=e[o]}return t||++i!=r?t:!!(r=null==e?0:e.length)&&ma(r)&&qe(o,r)&&(k(e)||_a(e))},Bt=function(e,a){return null!=e&&Nt(e,a,Et)},Pt=function(e,a){return on(e)&&Tt(a)?wt(En(e),a):function(n){var i=Bn(n,e)
return void 0===i&&i===a?Bt(n,e):At(a,i,3)}},Lt=function(e){return function(a){return null==a?void 0:a[e]}},Dt=function(e){return on(e)?Lt(En(e)):function(e){return function(a){return Nn(a,e)}}(e)},xt=function(e){return"function"==typeof e?e:null==e?R:"object"==typeof e?k(e)?Pt(e[0],e[1]):jt(e):Dt(e)},Ct=function(e){var a=null==e?0:e.length,n=xt
return e=a?g(e,(function(e){if("function"!=typeof e[1])throw new TypeError("Expected a function")
return[n(e[0]),e[1]]})):[],pa((function(n){for(var i=-1;++i<a;){var r=e[i]
if(te(r[0],this,n))return te(r[1],this,n)}}))},Kt=function(e,a,n){var i=n.length
if(null==e)return!i
for(e=Object(e);i--;){var r=n[i],t=a[r],o=e[r]
if(void 0===o&&!(r in e)||!t(o))return!1}return!0},Rt=function(e){return function(e){var a=Ja(e)
return function(n){return Kt(n,e,a)}}(et(e,1))},zt=function(e,a){return null==a||Kt(e,a,Ja(a))},Ot=function(e,a,n,i){for(var r=-1,t=null==e?0:e.length;++r<t;){var o=e[r]
a(i,o,n(o),e)}return i},It=function(e){return function(a,n,i){for(var r=-1,t=Object(a),o=i(a),s=o.length;s--;){var l=o[e?s:++r]
if(!1===n(t[l],l,t))break}return a}},Vt=It(),Gt=function(e,a){return e&&Vt(e,a,Ja)},Ht=function(e,a){return function(n,i){if(null==n)return n
if(!fa(n))return e(n,i)
for(var r=n.length,t=a?r:-1,o=Object(n);(a?t--:++t<r)&&!1!==i(o[t],t,o););return n}},Ft=Ht(Gt),Jt=function(e,a,n,i){return Ft(e,(function(e,r,t){a(i,e,n(e),t)})),i},Ut=function(e,a){return function(n,i){var r=k(n)?Ot:Jt,t=a?a():{}
return r(n,e,xt(i),t)}}
var Wt=Object.prototype.hasOwnProperty
const Zt=Ut((function(e,a,n){Wt.call(e,n)?++e[n]:oa(e,n,1)})),qt=function(e,a){var n=ie(e)
return null==a?n:ur(n,a)}
function Qt(e,a,n){var i=ra(e,8,void 0,void 0,void 0,void 0,void 0,a=n?void 0:a)
return i.placeholder=Qt.placeholder,i}Qt.placeholder={}
const Yt=Qt
function $t(e,a,n){var i=ra(e,16,void 0,void 0,void 0,void 0,void 0,a=n?void 0:a)
return i.placeholder=$t.placeholder,i}$t.placeholder={}
const Xt=$t,eo=function(){return t.Date.now()}
var ao=Math.max,no=Math.min
const io=function(e,a,n){var i,r,t,o,s,l,u=0,c=!1,d=!1,h=!0
if("function"!=typeof e)throw new TypeError("Expected a function")
function p(a){var n=i,t=r
return i=r=void 0,u=a,o=e.apply(t,n)}function m(e){return u=e,s=setTimeout(v,a),c?p(e):o}function f(e){var n=e-l
return void 0===l||n>=a||n<0||d&&e-u>=t}function v(){var e=eo()
if(f(e))return g(e)
s=setTimeout(v,function(e){var n=a-(e-l)
return d?no(n,t-(e-u)):n}(e))}function g(e){return s=void 0,h&&i?p(e):(i=r=void 0,o)}function k(){var e=eo(),n=f(e)
if(i=arguments,r=this,l=e,n){if(void 0===s)return m(l)
if(d)return clearTimeout(s),s=setTimeout(v,a),p(l)}return void 0===s&&(s=setTimeout(v,a)),o}return a=D(a)||0,E(n)&&(c=!!n.leading,t=(d="maxWait"in n)?ao(D(n.maxWait)||0,a):t,h="trailing"in n?!!n.trailing:h),k.cancel=function(){void 0!==s&&clearTimeout(s),u=0,i=l=r=s=void 0},k.flush=function(){return void 0===s?o:g(eo())},k},ro=function(e,a){return null==e||e!=e?a:e}
var to=Object.prototype,oo=to.hasOwnProperty,so=pa((function(e,a){e=Object(e)
var n=-1,i=a.length,r=i>2?a[2]:void 0
for(r&&va(a[0],a[1],r)&&(i=1);++n<i;)for(var t=a[n],o=Qa(t),s=-1,l=o.length;++s<l;){var u=o[s],c=e[u];(void 0===c||sa(c,to[u])&&!oo.call(e,u))&&(e[u]=t[u])}return e}))
const lo=so,uo=function(e,a,n){(void 0!==n&&!sa(e[a],n)||void 0===n&&!(a in e))&&oa(e,a,n)},co=function(e){return m(e)&&fa(e)},ho=function(e,a){if(("constructor"!==a||"function"!=typeof e[a])&&"__proto__"!=a)return e[a]},po=function(e){return ca(e,Qa(e))},mo=function e(a,n,i,r,t){a!==n&&Vt(n,(function(o,s){if(t||(t=new lr),E(o))!function(e,a,n,i,r,t,o){var s=ho(e,n),l=ho(a,n),u=o.get(l)
if(u)uo(e,n,u)
else{var c=t?t(s,l,n+"",e,a,o):void 0,d=void 0===c
if(d){var h=k(l),p=!h&&Ba(l),m=!h&&!p&&za(l)
c=l,h||p||m?k(s)?c=s:co(s)?c=Ae(s):p?(d=!1,c=mr(l,!0)):m?(d=!1,c=Jr(l,!0)):c=[]:Jn(l)||_a(l)?(c=s,_a(s)?c=po(s):E(s)&&!z(s)||(c=Ur(l))):d=!1}d&&(o.set(l,c),r(c,l,i,t,o),o.delete(l)),uo(e,n,c)}}(a,n,s,i,e,r,t)
else{var l=r?r(ho(a,s),o,s+"",a,n,t):void 0
void 0===l&&(l=o),uo(a,s,l)}}),Qa)},fo=function e(a,n,i,r,t,o){return E(a)&&E(n)&&(o.set(n,a),mo(a,n,void 0,e,o),o.delete(n)),a}
var vo=ga((function(e,a,n,i){mo(e,a,n,i)}))
const go=vo,ko=pa((function(e){return e.push(void 0,fo),te(go,void 0,e)})),yo=function(e,a,n){if("function"!=typeof e)throw new TypeError("Expected a function")
return setTimeout((function(){e.apply(void 0,n)}),a)}
var bo=pa((function(e,a){return yo(e,1,a)}))
const So=bo
var Ao=pa((function(e,a,n){return yo(e,D(a)||0,n)}))
const Mo=Ao,To=function(e,a,n){for(var i=-1,r=null==e?0:e.length;++i<r;)if(n(a,e[i]))return!0
return!1},_o=function(e,a,n,i){var r=-1,t=He,o=!0,s=e.length,l=[],u=a.length
if(!s)return l
n&&(a=g(a,La(n))),i?(t=To,o=!1):a.length>=200&&(t=dt,o=!1,a=new ut(a))
e:for(;++r<s;){var c=e[r],d=null==n?c:n(c)
if(c=i||0!==c?c:0,o&&d==d){for(var h=u;h--;)if(a[h]===d)continue e
l.push(c)}else t(a,d,i)||l.push(c)}return l},wo=pa((function(e,a){return co(e)?_o(e,Cn(a,1,co,!0)):[]})),jo=function(e){var a=null==e?0:e.length
return a?e[a-1]:void 0},Eo=pa((function(e,a){var n=jo(a)
return co(n)&&(n=void 0),co(e)?_o(e,Cn(a,1,co,!0),xt(n)):[]})),No=pa((function(e,a){var n=jo(a)
return co(n)&&(n=void 0),co(e)?_o(e,Cn(a,1,co,!0),void 0,n):[]})),Bo=A((function(e,a){return e/a}),1),Po=function(e,a,n){var i=null==e?0:e.length
return i?(a=n||void 0===a?1:C(a),ai(e,a<0?0:a,i)):[]},Lo=function(e,a,n){var i=null==e?0:e.length
return i?(a=n||void 0===a?1:C(a),ai(e,0,(a=i-a)<0?0:a)):[]},Do=function(e,a,n,i){for(var r=e.length,t=i?r:-1;(i?t--:++t<r)&&a(e[t],t,e););return n?ai(e,i?0:t,i?t+1:r):ai(e,i?t+1:0,i?r:t)},xo=function(e,a){return e&&e.length?Do(e,xt(a),!0,!0):[]},Co=function(e,a){return e&&e.length?Do(e,xt(a),!0):[]},Ko=function(e){return"function"==typeof e?e:R},Ro=function(e,a){return(k(e)?Oe:Ft)(e,Ko(a))},zo=function(e,a){for(var n=null==e?0:e.length;n--&&!1!==a(e[n],n,e););return e},Oo=It(!0),Io=function(e,a){return e&&Oo(e,a,Ja)},Vo=Ht(Io,!0),Go=function(e,a){return(k(e)?zo:Vo)(e,Ko(a))},Ho=function(e,a,n){e=wn(e),a=S(a)
var i=e.length,r=n=void 0===n?i:tr(C(n),0,i)
return(n-=a.length)>=0&&e.slice(n,r)==a},Fo=function(e){return function(a){var n,i,r,t=zr(a)
return"[object Map]"==t?pt(a):"[object Set]"==t?(n=a,i=-1,r=Array(n.size),n.forEach((function(e){r[++i]=[e,e]})),r):function(e,a){return g(a,(function(a){return[a,e[a]]}))}(a,e(a))}},Jo=Fo(Ja),Uo=Fo(Qa),Wo=bi({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"})
var Zo=/[&<>"']/g,qo=RegExp(Zo.source)
const Qo=function(e){return(e=wn(e))&&qo.test(e)?e.replace(Zo,Wo):e}
var Yo=/[\\^$.*+?()[\]{}|]/g,$o=RegExp(Yo.source)
const Xo=function(e){return(e=wn(e))&&$o.test(e)?e.replace(Yo,"\\$&"):e},es=function(e,a){for(var n=-1,i=null==e?0:e.length;++n<i;)if(!a(e[n],n,e))return!1
return!0},as=function(e,a){var n=!0
return Ft(e,(function(e,i,r){return n=!!a(e,i,r)})),n},ns=function(e,a,n){var i=k(e)?es:as
return n&&va(e,a,n)&&(a=void 0),i(e,xt(a))},is=function(e){return e?tr(C(e),0,4294967295):0},rs=function(e,a,n,i){var r=null==e?0:e.length
return r?(n&&"number"!=typeof n&&va(e,a,n)&&(n=0,i=r),function(e,a,n,i){var r=e.length
for((n=C(n))<0&&(n=-n>r?0:r+n),(i=void 0===i||i>r?r:C(i))<0&&(i+=r),i=n>i?0:is(i);n<i;)e[n++]=a
return e}(e,a,n,i)):[]},ts=function(e,a){var n=[]
return Ft(e,(function(e,i,r){a(e,i,r)&&n.push(e)})),n},os=function(e,a){return(k(e)?fr:ts)(e,xt(a))},ss=function(e){return function(a,n,i){var r=Object(a)
if(!fa(a)){var t=xt(n)
a=Ja(a),n=function(e){return t(r[e],e,r)}}var o=e(a,n,i)
return o>-1?r[t?a[o]:o]:void 0}}
var ls=Math.max
const us=function(e,a,n){var i=null==e?0:e.length
if(!i)return-1
var r=null==n?0:C(n)
return r<0&&(r=ls(i+r,0)),Ie(e,xt(a),r)},cs=ss(us),ds=function(e,a,n){var i
return n(e,(function(e,n,r){if(a(e,n,r))return i=n,!1})),i},hs=function(e,a){return ds(e,xt(a),Gt)}
var ps=Math.max,ms=Math.min
const fs=function(e,a,n){var i=null==e?0:e.length
if(!i)return-1
var r=i-1
return void 0!==n&&(r=C(n),r=n<0?ps(i+r,0):ms(r,i-1)),Ie(e,xt(a),r,!0)},vs=ss(fs),gs=function(e,a){return ds(e,xt(a),Io)},ks=function(e){return e&&e.length?e[0]:void 0},ys=function(e,a){var n=-1,i=fa(e)?Array(e.length):[]
return Ft(e,(function(e,r,t){i[++n]=a(e,r,t)})),i},bs=function(e,a){return(k(e)?g:ys)(e,xt(a))},Ss=function(e,a){return Cn(bs(e,a),1)},As=function(e,a){return Cn(bs(e,a),1/0)},Ms=function(e,a,n){return n=void 0===n?1:C(n),Cn(bs(e,a),n)},Ts=function(e){return null!=e&&e.length?Cn(e,1/0):[]},_s=function(e,a){return null!=e&&e.length?(a=void 0===a?1:C(a),Cn(e,a)):[]},ws=function(e){return ra(e,512)},js=Xi("floor"),Es=function(e){return Rn((function(a){var n=a.length,i=n,r=Se.prototype.thru
for(e&&a.reverse();i--;){var t=a[i]
if("function"!=typeof t)throw new TypeError("Expected a function")
if(r&&!o&&"wrapper"==ye(t))var o=new Se([],!0)}for(i=o?i:n;++i<n;){t=a[i]
var s=ye(t),l="wrapper"==s?ve(t):void 0
o=l&&je(l[0])&&424==l[1]&&!l[4].length&&1==l[9]?o[ye(l[0])].apply(o,l[3]):1==t.length&&je(t)?o[s]():o.thru(t)}return function(){var e=arguments,i=e[0]
if(o&&1==e.length&&k(i))return o.plant(i).value()
for(var r=0,t=n?a[r].apply(this,e):i;++r<n;)t=a[r].call(this,t)
return t}}))},Ns=Es(),Bs=Es(!0),Ps=function(e,a){return null==e?e:Vt(e,Ko(a),Qa)},Ls=function(e,a){return null==e?e:Oo(e,Ko(a),Qa)},Ds=function(e,a){return e&&Gt(e,Ko(a))},xs=function(e,a){return e&&Io(e,Ko(a))},Cs=function(e){for(var a=-1,n=null==e?0:e.length,i={};++a<n;){var r=e[a]
i[r[0]]=r[1]}return i},Ks=function(e,a){return fr(a,(function(a){return z(e[a])}))},Rs=function(e){return null==e?[]:Ks(e,Ja(e))},zs=function(e){return null==e?[]:Ks(e,Qa(e))}
var Os=Object.prototype.hasOwnProperty
const Is=Ut((function(e,a,n){Os.call(e,n)?e[n].push(a):oa(e,n,[a])})),Vs=function(e,a){return e>a},Gs=function(e){return function(a,n){return"string"==typeof a&&"string"==typeof n||(a=D(a),n=D(n)),e(a,n)}},Hs=Gs(Vs),Fs=Gs((function(e,a){return e>=a}))
var Js=Object.prototype.hasOwnProperty
const Us=function(e,a){return null!=e&&Js.call(e,a)},Ws=function(e,a){return null!=e&&Nt(e,a,Us)}
var Zs=Math.max,qs=Math.min
const Qs=function(e,a,n){return a=x(a),void 0===n?(n=a,a=0):n=x(n),function(e,a,n){return e>=qs(a,n)&&e<Zs(a,n)}(e=D(e),a,n)},Ys=function(e){return"string"==typeof e||!k(e)&&m(e)&&"[object String]"==p(e)},$s=function(e,a){return g(a,(function(a){return e[a]}))},Xs=function(e){return null==e?[]:$s(e,Ja(e))}
var el=Math.max
const al=function(e,a,n,i){e=fa(e)?e:Xs(e),n=n&&!i?C(n):0
var r=e.length
return n<0&&(n=el(r+n,0)),Ys(e)?n<=r&&e.indexOf(a,n)>-1:!!r&&Ge(e,a,n)>-1}
var nl=Math.max
const il=function(e,a,n){var i=null==e?0:e.length
if(!i)return-1
var r=null==n?0:C(n)
return r<0&&(r=nl(i+r,0)),Ge(e,a,r)},rl=function(e){return null!=e&&e.length?ai(e,0,-1):[]}
var tl=Math.min
const ol=function(e,a,n){for(var i=n?To:He,r=e[0].length,t=e.length,o=t,s=Array(t),l=1/0,u=[];o--;){var c=e[o]
o&&a&&(c=g(c,La(a))),l=tl(c.length,l),s[o]=!n&&(a||r>=120&&c.length>=120)?new ut(o&&c):void 0}c=e[0]
var d=-1,h=s[0]
e:for(;++d<r&&u.length<l;){var p=c[d],m=a?a(p):p
if(p=n||0!==p?p:0,!(h?dt(h,m):i(u,m,n))){for(o=t;--o;){var f=s[o]
if(!(f?dt(f,m):i(e[o],m,n)))continue e}h&&h.push(m),u.push(p)}}return u},sl=function(e){return co(e)?e:[]},ll=pa((function(e){var a=g(e,sl)
return a.length&&a[0]===e[0]?ol(a):[]})),ul=pa((function(e){var a=jo(e),n=g(e,sl)
return a===jo(n)?a=void 0:n.pop(),n.length&&n[0]===e[0]?ol(n,xt(a)):[]})),cl=pa((function(e){var a=jo(e),n=g(e,sl)
return(a="function"==typeof a?a:void 0)&&n.pop(),n.length&&n[0]===e[0]?ol(n,void 0,a):[]})),dl=function(e,a){return function(n,i){return function(e,a,n,i){return Gt(e,(function(e,r,t){a(i,n(e),r,t)})),i}(n,e,a(i),{})}}
var hl=Object.prototype.toString
const pl=dl((function(e,a,n){null!=a&&"function"!=typeof a.toString&&(a=hl.call(a)),e[a]=n}),xe(R))
var ml=Object.prototype,fl=ml.hasOwnProperty,vl=ml.toString
const gl=dl((function(e,a,n){null!=a&&"function"!=typeof a.toString&&(a=vl.call(a)),fl.call(e,a)?e[a].push(n):e[a]=[n]}),xt),kl=function(e,a){return a.length<2?e:Nn(e,ai(a,0,-1))},yl=function(e,a,n){a=jn(a,e)
var i=null==(e=kl(e,a))?e:e[En(jo(a))]
return null==i?void 0:te(i,e,n)},bl=pa(yl),Sl=pa((function(e,a,n){var i=-1,r="function"==typeof a,t=fa(e)?Array(e.length):[]
return Ft(e,(function(e){t[++i]=r?te(a,e,n):yl(e,a,n)})),t}))
var Al=Ka&&Ka.isArrayBuffer
const Ml=Al?La(Al):function(e){return m(e)&&"[object ArrayBuffer]"==p(e)},Tl=function(e){return!0===e||!1===e||m(e)&&"[object Boolean]"==p(e)}
var _l=Ka&&Ka.isDate
const wl=_l?La(_l):function(e){return m(e)&&"[object Date]"==p(e)},jl=function(e){return m(e)&&1===e.nodeType&&!Jn(e)}
var El=Object.prototype.hasOwnProperty
const Nl=function(e){if(null==e)return!0
if(fa(e)&&(k(e)||"string"==typeof e||"function"==typeof e.splice||Ba(e)||za(e)||_a(e)))return!e.length
var a=zr(e)
if("[object Map]"==a||"[object Set]"==a)return!e.size
if(ya(e))return!Fa(e).length
for(var n in e)if(El.call(e,n))return!1
return!0},Bl=function(e,a){return At(e,a)},Pl=function(e,a,n){var i=(n="function"==typeof n?n:void 0)?n(e,a):void 0
return void 0===i?At(e,a,void 0,n):!!i}
var Ll=t.isFinite
const Dl=function(e){return"number"==typeof e&&Ll(e)},xl=function(e){return"number"==typeof e&&e==C(e)},Cl=function(e,a){return e===a||Mt(e,a,_t(a))},Kl=function(e,a,n){return n="function"==typeof n?n:void 0,Mt(e,a,_t(a),n)},Rl=function(e){return"number"==typeof e||m(e)&&"[object Number]"==p(e)},zl=function(e){return Rl(e)&&e!=+e},Ol=O?z:wa,Il=function(e){if(Ol(e))throw new Error("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.")
return Q(e)},Vl=function(e){return null==e},Gl=function(e){return null===e}
var Hl=Ka&&Ka.isRegExp
const Fl=Hl?La(Hl):function(e){return m(e)&&"[object RegExp]"==p(e)},Jl=function(e){return xl(e)&&e>=-9007199254740991&&e<=9007199254740991},Ul=function(e){return void 0===e},Wl=function(e){return m(e)&&"[object WeakMap]"==zr(e)},Zl=function(e){return m(e)&&"[object WeakSet]"==p(e)},ql=function(e){return xt("function"==typeof e?e:et(e,1))}
var Ql=Array.prototype.join
const Yl=function(e,a){return null==e?"":Ql.call(e,a)},$l=Zi((function(e,a,n){return e+(n?"-":"")+a.toLowerCase()})),Xl=Ut((function(e,a,n){oa(e,n,a)}))
var eu=Math.max,au=Math.min
const nu=function(e,a,n){var i=null==e?0:e.length
if(!i)return-1
var r=i
return void 0!==n&&(r=(r=C(n))<0?eu(i+r,0):au(r,i-1)),a==a?function(e,a,n){for(var i=n+1;i--;)if(e[i]===a)return i
return i}(e,a,r):Ie(e,Ve,r,!0)},iu=Zi((function(e,a,n){return e+(n?" ":"")+a.toLowerCase()})),ru=vi("toLowerCase"),tu=function(e,a){return e<a},ou=Gs(tu),su=Gs((function(e,a){return e<=a})),lu=function(e,a){var n={}
return a=xt(a),Gt(e,(function(e,i,r){oa(n,a(e,i,r),e)})),n},uu=function(e,a){var n={}
return a=xt(a),Gt(e,(function(e,i,r){oa(n,i,a(e,i,r))})),n},cu=function(e){return jt(et(e,1))},du=function(e,a){return Pt(e,et(a,1))},hu=function(e,a,n){for(var i=-1,r=e.length;++i<r;){var t=e[i],o=a(t)
if(null!=o&&(void 0===s?o==o&&!f(o):n(o,s)))var s=o,l=t}return l},pu=function(e){return e&&e.length?hu(e,R,Vs):void 0},mu=function(e,a){return e&&e.length?hu(e,xt(a),Vs):void 0},fu=function(e,a){for(var n,i=-1,r=e.length;++i<r;){var t=a(e[i])
void 0!==t&&(n=void 0===n?t:n+t)}return n},vu=function(e,a){var n=null==e?0:e.length
return n?fu(e,a)/n:NaN},gu=function(e){return vu(e,R)},ku=function(e,a){return vu(e,xt(a))}
var yu=ga((function(e,a,n){mo(e,a,n)}))
const bu=yu,Su=pa((function(e,a){return function(n){return yl(n,e,a)}})),Au=pa((function(e,a){return function(n){return yl(e,n,a)}})),Mu=function(e){return e&&e.length?hu(e,R,tu):void 0},Tu=function(e,a){return e&&e.length?hu(e,xt(a),tu):void 0},_u=function(e,a,n){var i=Ja(a),r=Ks(a,i),t=!(E(n)&&"chain"in n&&!n.chain),o=z(e)
return Oe(r,(function(n){var i=a[n]
e[n]=i,o&&(e.prototype[n]=function(){var a=this.__chain__
if(t||a){var n=e(this.__wrapped__),r=n.__actions__=Ae(this.__actions__)
return r.push({func:i,args:arguments,thisArg:e}),n.__chain__=a,n}return i.apply(e,Ln([this.value()],arguments))})})),e},wu=A((function(e,a){return e*a}),1),ju=function(e){if("function"!=typeof e)throw new TypeError("Expected a function")
return function(){var a=arguments
switch(a.length){case 0:return!e.call(this)
case 1:return!e.call(this,a[0])
case 2:return!e.call(this,a[0],a[1])
case 3:return!e.call(this,a[0],a[1],a[2])}return!e.apply(this,a)}}
var Eu=o?o.iterator:void 0
const Nu=function(e){if(!e)return[]
if(fa(e))return Ys(e)?fi(e):Ae(e)
if(Eu&&e[Eu])return function(e){for(var a,n=[];!(a=e.next()).done;)n.push(a.value)
return n}(e[Eu]())
var a=zr(e)
return("[object Map]"==a?pt:"[object Set]"==a?mt:Xs)(e)},Bu=function(){void 0===this.__values__&&(this.__values__=Nu(this.value()))
var e=this.__index__>=this.__values__.length
return{done:e,value:e?void 0:this.__values__[this.__index__++]}},Pu=function(e,a){var n=e.length
if(n)return qe(a+=a<0?n:0,n)?e[a]:void 0},Lu=function(e,a){return e&&e.length?Pu(e,C(a)):void 0},Du=function(e){return e=C(e),pa((function(a){return Pu(a,e)}))},xu=function(e,a){return a=jn(a,e),null==(e=kl(e,a))||delete e[En(jo(a))]},Cu=function(e){return Jn(e)?void 0:e},Ku=Rn((function(e,a){var n={}
if(null==e)return n
var i=!1
a=g(a,(function(a){return a=jn(a,e),i||(i=a.length>1),a})),ca(e,Mr(e),n),i&&(n=et(n,7,Cu))
for(var r=a.length;r--;)xu(n,a[r])
return n})),Ru=function(e,a,n,i){if(!E(e))return e
for(var r=-1,t=(a=jn(a,e)).length,o=t-1,s=e;null!=s&&++r<t;){var l=En(a[r]),u=n
if("__proto__"===l||"constructor"===l||"prototype"===l)return e
if(r!=o){var c=s[l]
void 0===(u=i?i(c,l,s):void 0)&&(u=E(c)?c:qe(a[r+1])?[]:{})}ua(s,l,u),s=s[l]}return e},zu=function(e,a,n){for(var i=-1,r=a.length,t={};++i<r;){var o=a[i],s=Nn(e,o)
n(s,o)&&Ru(t,jn(o,e),s)}return t},Ou=function(e,a){if(null==e)return{}
var n=g(Mr(e),(function(e){return[e]}))
return a=xt(a),zu(e,n,(function(e,n){return a(e,n[0])}))},Iu=function(e,a){return Ou(e,ju(xt(a)))},Vu=function(e){return qn(2,e)},Gu=function(e,a){if(e!==a){var n=void 0!==e,i=null===e,r=e==e,t=f(e),o=void 0!==a,s=null===a,l=a==a,u=f(a)
if(!s&&!u&&!t&&e>a||t&&o&&l&&!s&&!u||i&&o&&l||!n&&l||!r)return 1
if(!i&&!t&&!u&&e<a||u&&n&&r&&!i&&!t||s&&n&&r||!o&&r||!l)return-1}return 0},Hu=function(e,a,n){a=a.length?g(a,(function(e){return k(e)?function(a){return Nn(a,1===e.length?e[0]:e)}:e})):[R]
var i=-1
return a=g(a,La(xt)),function(e,a){var n=e.length
for(e.sort(a);n--;)e[n]=e[n].value
return e}(ys(e,(function(e,n,r){return{criteria:g(a,(function(a){return a(e)})),index:++i,value:e}})),(function(e,a){return function(e,a,n){for(var i=-1,r=e.criteria,t=a.criteria,o=r.length,s=n.length;++i<o;){var l=Gu(r[i],t[i])
if(l)return i>=s?l:l*("desc"==n[i]?-1:1)}return e.index-a.index}(e,a,n)}))},Fu=function(e,a,n,i){return null==e?[]:(k(a)||(a=null==a?[]:[a]),k(n=i?void 0:n)||(n=null==n?[]:[n]),Hu(e,a,n))},Ju=function(e){return Rn((function(a){return a=g(a,La(xt)),pa((function(n){var i=this
return e(a,(function(e){return te(e,i,n)}))}))}))},Uu=Ju(g),Wu=pa
var Zu=Math.min,qu=Wu((function(e,a){var n=(a=1==a.length&&k(a[0])?g(a[0],La(xt)):g(Cn(a,1),La(xt))).length
return pa((function(i){for(var r=-1,t=Zu(i.length,n);++r<t;)i[r]=a[r].call(this,i[r])
return te(e,this,i)}))}))
const Qu=qu,Yu=Ju(es),$u=Ju(ct)
var Xu=Math.floor
const ec=function(e,a){var n=""
if(!e||a<1||a>9007199254740991)return n
do{a%2&&(n+=e),(a=Xu(a/2))&&(e+=e)}while(a)
return n},ac=Lt("length")
var nc="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",ic="[^\\ud800-\\udfff]",rc="(?:\\ud83c[\\udde6-\\uddff]){2}",tc="[\\ud800-\\udbff][\\udc00-\\udfff]",oc="(?:"+nc+"|\\ud83c[\\udffb-\\udfff])?",sc="[\\ufe0e\\ufe0f]?",lc=sc+oc+"(?:\\u200d(?:"+[ic,rc,tc].join("|")+")"+sc+oc+")*",uc="(?:"+[ic+nc+"?",nc,rc,tc,"[\\ud800-\\udfff]"].join("|")+")",cc=RegExp("\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|"+uc+lc,"g")
const dc=function(e){return ri(e)?function(e){for(var a=cc.lastIndex=0;cc.test(e);)++a
return a}(e):ac(e)}
var hc=Math.ceil
const pc=function(e,a){var n=(a=void 0===a?" ":S(a)).length
if(n<2)return n?ec(a,e):a
var i=ec(a,hc(e/dc(a)))
return ri(a)?ni(fi(i),0,e).join(""):i.slice(0,e)}
var mc=Math.ceil,fc=Math.floor
const vc=function(e,a,n){e=wn(e)
var i=(a=C(a))?dc(e):0
if(!a||i>=a)return e
var r=(a-i)/2
return pc(fc(r),n)+e+pc(mc(r),n)},gc=function(e,a,n){e=wn(e)
var i=(a=C(a))?dc(e):0
return a&&i<a?e+pc(a-i,n):e},kc=function(e,a,n){e=wn(e)
var i=(a=C(a))?dc(e):0
return a&&i<a?pc(a-i,n)+e:e}
var yc=/^\s+/,bc=t.parseInt
const Sc=function(e,a,n){return n||null==a?a=0:a&&(a=+a),bc(wn(e).replace(yc,""),a||0)}
var Ac=pa((function(e,a){var n=Xe(a,We(Ac))
return ra(e,32,void 0,a,n)}))
Ac.placeholder={}
const Mc=Ac
var Tc=pa((function(e,a){var n=Xe(a,We(Tc))
return ra(e,64,void 0,a,n)}))
Tc.placeholder={}
const _c=Tc,wc=Ut((function(e,a,n){e[n?0:1].push(a)}),(function(){return[[],[]]})),jc=Rn((function(e,a){return null==e?{}:function(e,a){return zu(e,a,(function(a,n){return Bt(e,n)}))}(e,a)})),Ec=function(e){for(var a,n=this;n instanceof de;){var i=Me(n)
i.__index__=0,i.__values__=void 0,a?r.__wrapped__=i:a=i
var r=i
n=n.__wrapped__}return r.__wrapped__=e,a},Nc=function(e){return function(a){return null==e?void 0:Nn(e,a)}},Bc=function(e,a,n,i){for(var r=n-1,t=e.length;++r<t;)if(i(e[r],a))return r
return-1}
var Pc=Array.prototype.splice
const Lc=function(e,a,n,i){var r=i?Bc:Ge,t=-1,o=a.length,s=e
for(e===a&&(a=Ae(a)),n&&(s=g(e,La(n)));++t<o;)for(var l=0,u=a[t],c=n?n(u):u;(l=r(s,c,l,i))>-1;)s!==e&&Pc.call(s,l,1),Pc.call(e,l,1)
return e},Dc=function(e,a){return e&&e.length&&a&&a.length?Lc(e,a):e},xc=pa(Dc),Cc=function(e,a,n){return e&&e.length&&a&&a.length?Lc(e,a,xt(n)):e},Kc=function(e,a,n){return e&&e.length&&a&&a.length?Lc(e,a,void 0,n):e}
var Rc=Array.prototype.splice
const zc=function(e,a){for(var n=e?a.length:0,i=n-1;n--;){var r=a[n]
if(n==i||r!==t){var t=r
qe(r)?Rc.call(e,r,1):xu(e,r)}}return e},Oc=Rn((function(e,a){var n=null==e?0:e.length,i=Pn(e,a)
return zc(e,g(a,(function(e){return qe(e,n)?+e:e})).sort(Gu)),i}))
var Ic=Math.floor,Vc=Math.random
const Gc=function(e,a){return e+Ic(Vc()*(a-e+1))}
var Hc=parseFloat,Fc=Math.min,Jc=Math.random
const Uc=function(e,a,n){if(n&&"boolean"!=typeof n&&va(e,a,n)&&(a=n=void 0),void 0===n&&("boolean"==typeof a?(n=a,a=void 0):"boolean"==typeof e&&(n=e,e=void 0)),void 0===e&&void 0===a?(e=0,a=1):(e=x(e),void 0===a?(a=e,e=0):a=x(a)),e>a){var i=e
e=a,a=i}if(n||e%1||a%1){var r=Jc()
return Fc(e+r*(a-e+Hc("1e-"+((r+"").length-1))),a)}return Gc(e,a)}
var Wc=Math.ceil,Zc=Math.max
const qc=function(e){return function(a,n,i){return i&&"number"!=typeof i&&va(a,n,i)&&(n=i=void 0),a=x(a),void 0===n?(n=a,a=0):n=x(n),function(e,a,n,i){for(var r=-1,t=Zc(Wc((a-e)/(n||1)),0),o=Array(t);t--;)o[i?t:++r]=e,e+=n
return o}(a,n,i=void 0===i?a<n?1:-1:x(i),e)}},Qc=qc(),Yc=qc(!0)
var $c=Rn((function(e,a){return ra(e,256,void 0,void 0,void 0,a)}))
const Xc=$c,ed=function(e,a,n,i,r){return r(e,(function(e,r,t){n=i?(i=!1,e):a(n,e,r,t)})),n},ad=function(e,a,n){var i=k(e)?yi:ed,r=arguments.length<3
return i(e,xt(a),n,r,Ft)},nd=function(e,a,n,i){var r=null==e?0:e.length
for(i&&r&&(n=e[--r]);r--;)n=a(n,e[r],r,e)
return n},id=function(e,a,n){var i=k(e)?nd:ed,r=arguments.length<3
return i(e,xt(a),n,r,Vo)},rd=function(e,a){return(k(e)?fr:ts)(e,ju(xt(a)))},td=function(e,a){var n=[]
if(!e||!e.length)return n
var i=-1,r=[],t=e.length
for(a=xt(a);++i<t;){var o=e[i]
a(o,i,e)&&(n.push(o),r.push(i))}return zc(e,r),n},od=function(e,a,n){return a=(n?va(e,a,n):void 0===a)?1:C(a),ec(wn(e),a)},sd=function(){var e=arguments,a=wn(e[0])
return e.length<3?a:a.replace(e[1],e[2])},ld=function(e,a){if("function"!=typeof e)throw new TypeError("Expected a function")
return a=void 0===a?a:C(a),pa(e,a)},ud=function(e,a,n){var i=-1,r=(a=jn(a,e)).length
for(r||(r=1,e=void 0);++i<r;){var t=null==e?void 0:e[En(a[i])]
void 0===t&&(i=r,t=n),e=z(t)?t.call(e):t}return e}
var cd=Array.prototype.reverse
const dd=function(e){return null==e?e:cd.call(e)},hd=Xi("round"),pd=function(e){var a=e.length
return a?e[Gc(0,a-1)]:void 0},md=function(e){return pd(Xs(e))},fd=function(e){return(k(e)?pd:md)(e)},vd=function(e,a){var n=-1,i=e.length,r=i-1
for(a=void 0===a?i:a;++n<a;){var t=Gc(n,r),o=e[t]
e[t]=e[n],e[n]=o}return e.length=a,e},gd=function(e,a){return vd(Ae(e),tr(a,0,e.length))},kd=function(e,a){var n=Xs(e)
return vd(n,tr(a,0,n.length))},yd=function(e,a,n){return a=(n?va(e,a,n):void 0===a)?1:C(a),(k(e)?gd:kd)(e,a)},bd=function(e,a,n){return null==e?e:Ru(e,a,n)},Sd=function(e,a,n,i){return i="function"==typeof i?i:void 0,null==e?e:Ru(e,a,n,i)},Ad=function(e){return vd(Ae(e))},Md=function(e){return vd(Xs(e))},Td=function(e){return(k(e)?Ad:Md)(e)},_d=function(e){if(null==e)return 0
if(fa(e))return Ys(e)?dc(e):e.length
var a=zr(e)
return"[object Map]"==a||"[object Set]"==a?e.size:Fa(e).length},wd=function(e,a,n){var i=null==e?0:e.length
return i?(n&&"number"!=typeof n&&va(e,a,n)?(a=0,n=i):(a=null==a?0:C(a),n=void 0===n?i:C(n)),ai(e,a,n)):[]},jd=Zi((function(e,a,n){return e+(n?"_":"")+a.toLowerCase()})),Ed=function(e,a){var n
return Ft(e,(function(e,i,r){return!(n=a(e,i,r))})),!!n},Nd=function(e,a,n){var i=k(e)?ct:Ed
return n&&va(e,a,n)&&(a=void 0),i(e,xt(a))},Bd=pa((function(e,a){if(null==e)return[]
var n=a.length
return n>1&&va(e,a[0],a[1])?a=[]:n>2&&va(a[0],a[1],a[2])&&(a=[a[0]]),Hu(e,Cn(a,1),[])}))
var Pd=Math.floor,Ld=Math.min
const Dd=function(e,a,n,i){var r=0,t=null==e?0:e.length
if(0===t)return 0
for(var o=(a=n(a))!=a,s=null===a,l=f(a),u=void 0===a;r<t;){var c=Pd((r+t)/2),d=n(e[c]),h=void 0!==d,p=null===d,m=d==d,v=f(d)
if(o)var g=i||m
else g=u?m&&(i||h):s?m&&h&&(i||!p):l?m&&h&&!p&&(i||!v):!p&&!v&&(i?d<=a:d<a)
g?r=c+1:t=c}return Ld(t,4294967294)},xd=function(e,a,n){var i=0,r=null==e?i:e.length
if("number"==typeof a&&a==a&&r<=2147483647){for(;i<r;){var t=i+r>>>1,o=e[t]
null!==o&&!f(o)&&(n?o<=a:o<a)?i=t+1:r=t}return r}return Dd(e,a,R,n)},Cd=function(e,a){return xd(e,a)},Kd=function(e,a,n){return Dd(e,a,xt(n))},Rd=function(e,a){var n=null==e?0:e.length
if(n){var i=xd(e,a)
if(i<n&&sa(e[i],a))return i}return-1},zd=function(e,a){return xd(e,a,!0)},Od=function(e,a,n){return Dd(e,a,xt(n),!0)},Id=function(e,a){if(null!=e&&e.length){var n=xd(e,a,!0)-1
if(sa(e[n],a))return n}return-1},Vd=function(e,a){for(var n=-1,i=e.length,r=0,t=[];++n<i;){var o=e[n],s=a?a(o):o
if(!n||!sa(s,l)){var l=s
t[r++]=0===o?0:o}}return t},Gd=function(e){return e&&e.length?Vd(e):[]},Hd=function(e,a){return e&&e.length?Vd(e,xt(a)):[]},Fd=function(e,a,n){return n&&"number"!=typeof n&&va(e,a,n)&&(a=n=void 0),(n=void 0===n?4294967295:n>>>0)?(e=wn(e))&&("string"==typeof a||null!=a&&!Fl(a))&&!(a=S(a))&&ri(e)?ni(fi(e),0,n):e.split(a,n):[]}
var Jd=Math.max
const Ud=function(e,a){if("function"!=typeof e)throw new TypeError("Expected a function")
return a=null==a?0:Jd(C(a),0),pa((function(n){var i=n[a],r=ni(n,0,a)
return i&&Ln(r,i),te(e,this,r)}))},Wd=Zi((function(e,a,n){return e+(n?" ":"")+gi(a)})),Zd=function(e,a,n){return e=wn(e),n=null==n?0:tr(C(n),0,e.length),a=S(a),e.slice(n,n+a.length)==a},qd=function(){return{}},Qd=function(){return""},Yd=function(){return!0},$d=A((function(e,a){return e-a}),0),Xd=function(e){return e&&e.length?fu(e,R):0},eh=function(e,a){return e&&e.length?fu(e,xt(a)):0},ah=function(e){var a=null==e?0:e.length
return a?ai(e,1,a):[]},nh=function(e,a,n){return e&&e.length?(a=n||void 0===a?1:C(a),ai(e,0,a<0?0:a)):[]},ih=function(e,a,n){var i=null==e?0:e.length
return i?(a=n||void 0===a?1:C(a),ai(e,(a=i-a)<0?0:a,i)):[]},rh=function(e,a){return e&&e.length?Do(e,xt(a),!1,!0):[]},th=function(e,a){return e&&e.length?Do(e,xt(a)):[]},oh=function(e,a){return a(e),e}
var sh=Object.prototype,lh=sh.hasOwnProperty
const uh=function(e,a,n,i){return void 0===e||sa(e,sh[n])&&!lh.call(i,n)?a:e}
var ch={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"}
const dh=function(e){return"\\"+ch[e]},hh=/<%=([\s\S]+?)%>/g,ph={escape:/<%-([\s\S]+?)%>/g,evaluate:/<%([\s\S]+?)%>/g,interpolate:hh,variable:"",imports:{_:{escape:Qo}}}
var mh=/\b__p \+= '';/g,fh=/\b(__p \+=) '' \+/g,vh=/(__e\(.*?\)|\b__t\)) \+\n'';/g,gh=/[()=,{}\[\]\/\s]/,kh=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,yh=/($^)/,bh=/['\n\r\u2028\u2029\\]/g,Sh=Object.prototype.hasOwnProperty
const Ah=function(e,a,n){var i=ph.imports._.templateSettings||ph
n&&va(e,a,n)&&(a=void 0),e=wn(e),a=en({},a,i,uh)
var r,t,o=en({},a.imports,i.imports,uh),s=Ja(o),l=$s(o,s),u=0,c=a.interpolate||yh,d="__p += '",h=RegExp((a.escape||yh).source+"|"+c.source+"|"+(c===hh?kh:yh).source+"|"+(a.evaluate||yh).source+"|$","g"),p=Sh.call(a,"sourceURL")?"//# sourceURL="+(a.sourceURL+"").replace(/\s/g," ")+"\n":""
e.replace(h,(function(a,n,i,o,s,l){return i||(i=o),d+=e.slice(u,l).replace(bh,dh),n&&(r=!0,d+="' +\n__e("+n+") +\n'"),s&&(t=!0,d+="';\n"+s+";\n__p += '"),i&&(d+="' +\n((__t = ("+i+")) == null ? '' : __t) +\n'"),u=l+a.length,a})),d+="';\n"
var m=Sh.call(a,"variable")&&a.variable
if(m){if(gh.test(m))throw new Error("Invalid `variable` option passed into `_.template`")}else d="with (obj) {\n"+d+"\n}\n"
d=(t?d.replace(mh,""):d).replace(fh,"$1").replace(vh,"$1;"),d="function("+(m||"obj")+") {\n"+(m?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(r?", __e = _.escape":"")+(t?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+d+"return __p\n}"
var f=Zn((function(){return Function(s,p+"return "+d).apply(void 0,l)}))
if(f.source=d,Un(f))throw f
return f},Mh=function(e,a,n){var i=!0,r=!0
if("function"!=typeof e)throw new TypeError("Expected a function")
return E(n)&&(i="leading"in n?!!n.leading:i,r="trailing"in n?!!n.trailing:r),io(e,a,{leading:i,maxWait:a,trailing:r})},Th=function(e,a){return a(e)}
var _h=4294967295,wh=Math.min
const jh=function(e,a){if((e=C(e))<1||e>9007199254740991)return[]
var n=_h,i=wh(e,_h)
a=Ko(a),e-=_h
for(var r=ba(i,a);++n<e;)a(n)
return r},Eh=function(){return this},Nh=function(e,a){var n=e
return n instanceof pe&&(n=n.value()),yi(a,(function(e,a){return a.func.apply(a.thisArg,Ln([e],a.args))}),n)},Bh=function(){return Nh(this.__wrapped__,this.__actions__)},Ph=function(e){return wn(e).toLowerCase()},Lh=function(e){return k(e)?g(e,En):f(e)?[e]:Ae(_n(wn(e)))},Dh=function(e){return e?tr(C(e),-9007199254740991,9007199254740991):0===e?e:0},xh=function(e){return wn(e).toUpperCase()},Ch=function(e,a,n){var i=k(e),r=i||Ba(e)||za(e)
if(a=xt(a),null==n){var t=e&&e.constructor
n=r?i?new t:[]:E(e)&&z(t)?ie(On(e)):{}}return(r?Oe:Gt)(e,(function(e,i,r){return a(n,e,i,r)})),n},Kh=function(e,a){for(var n=e.length;n--&&Ge(a,e[n],0)>-1;);return n},Rh=function(e,a){for(var n=-1,i=e.length;++n<i&&Ge(a,e[n],0)>-1;);return n},zh=function(e,a,n){if((e=wn(e))&&(n||void 0===a))return j(e)
if(!e||!(a=S(a)))return e
var i=fi(e),r=fi(a),t=Rh(i,r),o=Kh(i,r)+1
return ni(i,t,o).join("")},Oh=function(e,a,n){if((e=wn(e))&&(n||void 0===a))return e.slice(0,_(e)+1)
if(!e||!(a=S(a)))return e
var i=fi(e),r=Kh(i,fi(a))+1
return ni(i,0,r).join("")}
var Ih=/^\s+/
const Vh=function(e,a,n){if((e=wn(e))&&(n||void 0===a))return e.replace(Ih,"")
if(!e||!(a=S(a)))return e
var i=fi(e),r=Rh(i,fi(a))
return ni(i,r).join("")}
var Gh=/\w*$/
const Hh=function(e,a){var n=30,i="..."
if(E(a)){var r="separator"in a?a.separator:r
n="length"in a?C(a.length):n,i="omission"in a?S(a.omission):i}var t=(e=wn(e)).length
if(ri(e)){var o=fi(e)
t=o.length}if(n>=t)return e
var s=n-dc(i)
if(s<1)return i
var l=o?ni(o,0,s).join(""):e.slice(0,s)
if(void 0===r)return l+i
if(o&&(s+=l.length-s),Fl(r)){if(e.slice(s).search(r)){var u,c=l
for(r.global||(r=RegExp(r.source,wn(Gh.exec(r))+"g")),r.lastIndex=0;u=r.exec(c);)var d=u.index
l=l.slice(0,void 0===d?s:d)}}else if(e.indexOf(S(r),s)!=s){var h=l.lastIndexOf(r)
h>-1&&(l=l.slice(0,h))}return l+i},Fh=function(e){return ta(e,1)},Jh=bi({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"})
var Uh=/&(?:amp|lt|gt|quot|#39);/g,Wh=RegExp(Uh.source)
const Zh=function(e){return(e=wn(e))&&Wh.test(e)?e.replace(Uh,Jh):e},qh=wr&&1/mt(new wr([,-0]))[1]==1/0?function(e){return new wr(e)}:me,Qh=function(e,a,n){var i=-1,r=He,t=e.length,o=!0,s=[],l=s
if(n)o=!1,r=To
else if(t>=200){var u=a?null:qh(e)
if(u)return mt(u)
o=!1,r=dt,l=new ut}else l=a?[]:s
e:for(;++i<t;){var c=e[i],d=a?a(c):c
if(c=n||0!==c?c:0,o&&d==d){for(var h=l.length;h--;)if(l[h]===d)continue e
a&&l.push(d),s.push(c)}else r(l,d,n)||(l!==s&&l.push(d),s.push(c))}return s},Yh=pa((function(e){return Qh(Cn(e,1,co,!0))})),$h=pa((function(e){var a=jo(e)
return co(a)&&(a=void 0),Qh(Cn(e,1,co,!0),xt(a))})),Xh=pa((function(e){var a=jo(e)
return a="function"==typeof a?a:void 0,Qh(Cn(e,1,co,!0),void 0,a)})),ep=function(e){return e&&e.length?Qh(e):[]},ap=function(e,a){return e&&e.length?Qh(e,xt(a)):[]},np=function(e,a){return a="function"==typeof a?a:void 0,e&&e.length?Qh(e,void 0,a):[]}
var ip=0
const rp=function(e){var a=++ip
return wn(e)+a},tp=function(e,a){return null==e||xu(e,a)}
var op=Math.max
const sp=function(e){if(!e||!e.length)return[]
var a=0
return e=fr(e,(function(e){if(co(e))return a=op(e.length,a),!0})),ba(a,(function(a){return g(e,Lt(a))}))},lp=function(e,a){if(!e||!e.length)return[]
var n=sp(e)
return null==a?n:g(n,(function(e){return te(a,void 0,e)}))},up=function(e,a,n,i){return Ru(e,a,n(Nn(e,a)),i)},cp=function(e,a,n){return null==e?e:up(e,a,Ko(n))},dp=function(e,a,n,i){return i="function"==typeof i?i:void 0,null==e?e:up(e,a,Ko(n),i)},hp=Zi((function(e,a,n){return e+(n?" ":"")+a.toUpperCase()})),pp=function(e){return null==e?[]:$s(e,Qa(e))},mp=pa((function(e,a){return co(e)?_o(e,a):[]})),fp=function(e,a){return Mc(Ko(a),e)},vp=Rn((function(e){var a=e.length,n=a?e[0]:0,i=this.__wrapped__,r=function(a){return Pn(a,e)}
return!(a>1||this.__actions__.length)&&i instanceof pe&&qe(n)?((i=i.slice(n,+n+(a?1:0))).__actions__.push({func:Th,args:[r],thisArg:void 0}),new Se(i,this.__chain__).thru((function(e){return a&&!e.length&&e.push(void 0),e}))):this.thru(r)})),gp=function(){return ar(this)},kp=function(){var e=this.__wrapped__
if(e instanceof pe){var a=e
return this.__actions__.length&&(a=new pe(this)),(a=a.reverse()).__actions__.push({func:Th,args:[dd],thisArg:void 0}),new Se(a,this.__chain__)}return this.thru(dd)},yp=function(e,a,n){var i=e.length
if(i<2)return i?Qh(e[0]):[]
for(var r=-1,t=Array(i);++r<i;)for(var o=e[r],s=-1;++s<i;)s!=r&&(t[r]=_o(t[r]||o,e[s],a,n))
return Qh(Cn(t,1),a,n)},bp=pa((function(e){return yp(fr(e,co))})),Sp=pa((function(e){var a=jo(e)
return co(a)&&(a=void 0),yp(fr(e,co),xt(a))})),Ap=pa((function(e){var a=jo(e)
return a="function"==typeof a?a:void 0,yp(fr(e,co),void 0,a)})),Mp=pa(sp),Tp=function(e,a,n){for(var i=-1,r=e.length,t=a.length,o={};++i<r;){var s=i<t?a[i]:void 0
n(o,e[i],s)}return o},_p=function(e,a){return Tp(e||[],a||[],ua)},wp=function(e,a){return Tp(e||[],a||[],Ru)},jp=pa((function(e){var a=e.length,n=a>1?e[a-1]:void 0
return n="function"==typeof n?(e.pop(),n):void 0,lp(e,n)})),Ep={chunk:rr,compact:ot,concat:st,difference:wo,differenceBy:Eo,differenceWith:No,drop:Po,dropRight:Lo,dropRightWhile:xo,dropWhile:Co,fill:rs,findIndex:us,findLastIndex:fs,first:ks,flatten:Kn,flattenDeep:Ts,flattenDepth:_s,fromPairs:Cs,head:ks,indexOf:il,initial:rl,intersection:ll,intersectionBy:ul,intersectionWith:cl,join:Yl,last:jo,lastIndexOf:nu,nth:Lu,pull:xc,pullAll:Dc,pullAllBy:Cc,pullAllWith:Kc,pullAt:Oc,remove:td,reverse:dd,slice:wd,sortedIndex:Cd,sortedIndexBy:Kd,sortedIndexOf:Rd,sortedLastIndex:zd,sortedLastIndexBy:Od,sortedLastIndexOf:Id,sortedUniq:Gd,sortedUniqBy:Hd,tail:ah,take:nh,takeRight:ih,takeRightWhile:rh,takeWhile:th,union:Yh,unionBy:$h,unionWith:Xh,uniq:ep,uniqBy:ap,uniqWith:np,unzip:sp,unzipWith:lp,without:mp,xor:bp,xorBy:Sp,xorWith:Ap,zip:Mp,zipObject:_p,zipObjectDeep:wp,zipWith:jp},Np={countBy:Zt,each:Ro,eachRight:Go,every:ns,filter:os,find:cs,findLast:vs,flatMap:Ss,flatMapDeep:As,flatMapDepth:Ms,forEach:Ro,forEachRight:Go,groupBy:Is,includes:al,invokeMap:Sl,keyBy:Xl,map:bs,orderBy:Fu,partition:wc,reduce:ad,reduceRight:id,reject:rd,sample:fd,sampleSize:yd,shuffle:Td,size:_d,some:Nd,sortBy:Bd},Bp={now:eo},Pp={after:K,ary:ta,before:qn,bind:Yn,bindKey:ei,curry:Yt,curryRight:Xt,debounce:io,defer:So,delay:Mo,flip:ws,memoize:Sn,negate:ju,once:Vu,overArgs:Qu,partial:Mc,partialRight:_c,rearg:Xc,rest:ld,spread:Ud,throttle:Mh,unary:Fh,wrap:fp},Lp={castArray:Qi,clone:at,cloneDeep:nt,cloneDeepWith:it,cloneWith:rt,conformsTo:zt,eq:sa,gt:Hs,gte:Fs,isArguments:_a,isArray:k,isArrayBuffer:Ml,isArrayLike:fa,isArrayLikeObject:co,isBoolean:Tl,isBuffer:Ba,isDate:wl,isElement:jl,isEmpty:Nl,isEqual:Bl,isEqualWith:Pl,isError:Un,isFinite:Dl,isFunction:z,isInteger:xl,isLength:ma,isMap:Zr,isMatch:Cl,isMatchWith:Kl,isNaN:zl,isNative:Il,isNil:Vl,isNull:Gl,isNumber:Rl,isObject:E,isObjectLike:m,isPlainObject:Jn,isRegExp:Fl,isSafeInteger:Jl,isSet:Qr,isString:Ys,isSymbol:f,isTypedArray:za,isUndefined:Ul,isWeakMap:Wl,isWeakSet:Zl,lt:ou,lte:su,toArray:Nu,toFinite:x,toInteger:C,toLength:is,toNumber:D,toPlainObject:po,toSafeInteger:Dh,toString:wn},Dp={add:M,ceil:er,divide:Bo,floor:js,max:pu,maxBy:mu,mean:gu,meanBy:ku,min:Mu,minBy:Tu,multiply:wu,round:hd,subtract:$d,sum:Xd,sumBy:eh},xp={clamp:or,inRange:Qs,random:Uc},Cp={assign:Za,assignIn:$a,assignInWith:en,assignWith:nn,at:zn,create:qt,defaults:lo,defaultsDeep:ko,entries:Jo,entriesIn:Uo,extend:$a,extendWith:en,findKey:hs,findLastKey:gs,forIn:Ps,forInRight:Ls,forOwn:Ds,forOwnRight:xs,functions:Rs,functionsIn:zs,get:Bn,has:Ws,hasIn:Bt,invert:pl,invertBy:gl,invoke:bl,keys:Ja,keysIn:Qa,mapKeys:lu,mapValues:uu,merge:bu,mergeWith:go,omit:Ku,omitBy:Iu,pick:jc,pickBy:Ou,result:ud,set:bd,setWith:Sd,toPairs:Jo,toPairsIn:Uo,transform:Ch,unset:tp,update:cp,updateWith:dp,values:Xs,valuesIn:pp},Kp={at:vp,chain:ar,commit:tt,lodash:we,next:Bu,plant:Ec,reverse:kp,tap:oh,thru:Th,toIterator:Eh,toJSON:Bh,value:Bh,valueOf:Bh,wrapperChain:gp},Rp={camelCase:qi,capitalize:ki,deburr:Ti,endsWith:Ho,escape:Qo,escapeRegExp:Xo,kebabCase:$l,lowerCase:iu,lowerFirst:ru,pad:vc,padEnd:gc,padStart:kc,parseInt:Sc,repeat:od,replace:sd,snakeCase:jd,split:Fd,startCase:Wd,startsWith:Zd,template:Ah,templateSettings:ph,toLower:Ph,toUpper:xh,trim:zh,trimEnd:Oh,trimStart:Vh,truncate:Hh,unescape:Zh,upperCase:hp,upperFirst:gi,words:Ui},zp={attempt:Zn,bindAll:$n,cond:Ct,conforms:Rt,constant:xe,defaultTo:ro,flow:Ns,flowRight:Bs,identity:R,iteratee:ql,matches:cu,matchesProperty:du,method:Su,methodOf:Au,mixin:_u,noop:me,nthArg:Du,over:Uu,overEvery:Yu,overSome:$u,property:Dt,propertyOf:Nc,range:Qc,rangeRight:Yc,stubArray:vr,stubFalse:wa,stubObject:qd,stubString:Qd,stubTrue:Yd,times:jh,toPath:Lh,uniqueId:rp}
var Op,Ip,Vp=Math.max,Gp=Math.min,Hp=Math.min,Fp=4294967295,Jp=Array.prototype,Up=Object.prototype.hasOwnProperty,Wp=o?o.iterator:void 0,Zp=Math.max,qp=Math.min,Qp=(Op=_u,function(e,a,n){if(null==n){var i=E(a),r=i&&Ja(a),t=r&&r.length&&Ks(a,r);(t?t.length:i)||(n=a,a=e,e=this)}return Op(e,a,n)})
we.after=Pp.after,we.ary=Pp.ary,we.assign=Cp.assign,we.assignIn=Cp.assignIn,we.assignInWith=Cp.assignInWith,we.assignWith=Cp.assignWith,we.at=Cp.at,we.before=Pp.before,we.bind=Pp.bind,we.bindAll=zp.bindAll,we.bindKey=Pp.bindKey,we.castArray=Lp.castArray,we.chain=Kp.chain,we.chunk=Ep.chunk,we.compact=Ep.compact,we.concat=Ep.concat,we.cond=zp.cond,we.conforms=zp.conforms,we.constant=zp.constant,we.countBy=Np.countBy,we.create=Cp.create,we.curry=Pp.curry,we.curryRight=Pp.curryRight,we.debounce=Pp.debounce,we.defaults=Cp.defaults,we.defaultsDeep=Cp.defaultsDeep,we.defer=Pp.defer,we.delay=Pp.delay,we.difference=Ep.difference,we.differenceBy=Ep.differenceBy,we.differenceWith=Ep.differenceWith,we.drop=Ep.drop,we.dropRight=Ep.dropRight,we.dropRightWhile=Ep.dropRightWhile,we.dropWhile=Ep.dropWhile,we.fill=Ep.fill,we.filter=Np.filter,we.flatMap=Np.flatMap,we.flatMapDeep=Np.flatMapDeep,we.flatMapDepth=Np.flatMapDepth,we.flatten=Ep.flatten,we.flattenDeep=Ep.flattenDeep,we.flattenDepth=Ep.flattenDepth,we.flip=Pp.flip,we.flow=zp.flow,we.flowRight=zp.flowRight,we.fromPairs=Ep.fromPairs,we.functions=Cp.functions,we.functionsIn=Cp.functionsIn,we.groupBy=Np.groupBy,we.initial=Ep.initial,we.intersection=Ep.intersection,we.intersectionBy=Ep.intersectionBy,we.intersectionWith=Ep.intersectionWith,we.invert=Cp.invert,we.invertBy=Cp.invertBy,we.invokeMap=Np.invokeMap,we.iteratee=zp.iteratee,we.keyBy=Np.keyBy,we.keys=Ja,we.keysIn=Cp.keysIn,we.map=Np.map,we.mapKeys=Cp.mapKeys,we.mapValues=Cp.mapValues,we.matches=zp.matches,we.matchesProperty=zp.matchesProperty,we.memoize=Pp.memoize,we.merge=Cp.merge,we.mergeWith=Cp.mergeWith,we.method=zp.method,we.methodOf=zp.methodOf,we.mixin=Qp,we.negate=ju,we.nthArg=zp.nthArg,we.omit=Cp.omit,we.omitBy=Cp.omitBy,we.once=Pp.once,we.orderBy=Np.orderBy,we.over=zp.over,we.overArgs=Pp.overArgs,we.overEvery=zp.overEvery,we.overSome=zp.overSome,we.partial=Pp.partial,we.partialRight=Pp.partialRight,we.partition=Np.partition,we.pick=Cp.pick,we.pickBy=Cp.pickBy,we.property=zp.property,we.propertyOf=zp.propertyOf,we.pull=Ep.pull,we.pullAll=Ep.pullAll,we.pullAllBy=Ep.pullAllBy,we.pullAllWith=Ep.pullAllWith,we.pullAt=Ep.pullAt,we.range=zp.range,we.rangeRight=zp.rangeRight,we.rearg=Pp.rearg,we.reject=Np.reject,we.remove=Ep.remove,we.rest=Pp.rest,we.reverse=Ep.reverse,we.sampleSize=Np.sampleSize,we.set=Cp.set,we.setWith=Cp.setWith,we.shuffle=Np.shuffle,we.slice=Ep.slice,we.sortBy=Np.sortBy,we.sortedUniq=Ep.sortedUniq,we.sortedUniqBy=Ep.sortedUniqBy,we.split=Rp.split,we.spread=Pp.spread,we.tail=Ep.tail,we.take=Ep.take,we.takeRight=Ep.takeRight,we.takeRightWhile=Ep.takeRightWhile,we.takeWhile=Ep.takeWhile,we.tap=Kp.tap,we.throttle=Pp.throttle,we.thru=Th,we.toArray=Lp.toArray,we.toPairs=Cp.toPairs,we.toPairsIn=Cp.toPairsIn,we.toPath=zp.toPath,we.toPlainObject=Lp.toPlainObject,we.transform=Cp.transform,we.unary=Pp.unary,we.union=Ep.union,we.unionBy=Ep.unionBy,we.unionWith=Ep.unionWith,we.uniq=Ep.uniq,we.uniqBy=Ep.uniqBy,we.uniqWith=Ep.uniqWith,we.unset=Cp.unset,we.unzip=Ep.unzip,we.unzipWith=Ep.unzipWith,we.update=Cp.update,we.updateWith=Cp.updateWith,we.values=Cp.values,we.valuesIn=Cp.valuesIn,we.without=Ep.without,we.words=Rp.words,we.wrap=Pp.wrap,we.xor=Ep.xor,we.xorBy=Ep.xorBy,we.xorWith=Ep.xorWith,we.zip=Ep.zip,we.zipObject=Ep.zipObject,we.zipObjectDeep=Ep.zipObjectDeep,we.zipWith=Ep.zipWith,we.entries=Cp.toPairs,we.entriesIn=Cp.toPairsIn,we.extend=Cp.assignIn,we.extendWith=Cp.assignInWith,Qp(we,we),we.add=Dp.add,we.attempt=zp.attempt,we.camelCase=Rp.camelCase,we.capitalize=Rp.capitalize,we.ceil=Dp.ceil,we.clamp=xp.clamp,we.clone=Lp.clone,we.cloneDeep=Lp.cloneDeep,we.cloneDeepWith=Lp.cloneDeepWith,we.cloneWith=Lp.cloneWith,we.conformsTo=Lp.conformsTo,we.deburr=Rp.deburr,we.defaultTo=zp.defaultTo,we.divide=Dp.divide,we.endsWith=Rp.endsWith,we.eq=Lp.eq,we.escape=Rp.escape,we.escapeRegExp=Rp.escapeRegExp,we.every=Np.every,we.find=Np.find,we.findIndex=Ep.findIndex,we.findKey=Cp.findKey,we.findLast=Np.findLast,we.findLastIndex=Ep.findLastIndex,we.findLastKey=Cp.findLastKey,we.floor=Dp.floor,we.forEach=Np.forEach,we.forEachRight=Np.forEachRight,we.forIn=Cp.forIn,we.forInRight=Cp.forInRight,we.forOwn=Cp.forOwn,we.forOwnRight=Cp.forOwnRight,we.get=Cp.get,we.gt=Lp.gt,we.gte=Lp.gte,we.has=Cp.has,we.hasIn=Cp.hasIn,we.head=Ep.head,we.identity=R,we.includes=Np.includes,we.indexOf=Ep.indexOf,we.inRange=xp.inRange,we.invoke=Cp.invoke,we.isArguments=Lp.isArguments,we.isArray=k,we.isArrayBuffer=Lp.isArrayBuffer,we.isArrayLike=Lp.isArrayLike,we.isArrayLikeObject=Lp.isArrayLikeObject,we.isBoolean=Lp.isBoolean,we.isBuffer=Lp.isBuffer,we.isDate=Lp.isDate,we.isElement=Lp.isElement,we.isEmpty=Lp.isEmpty,we.isEqual=Lp.isEqual,we.isEqualWith=Lp.isEqualWith,we.isError=Lp.isError,we.isFinite=Lp.isFinite,we.isFunction=Lp.isFunction,we.isInteger=Lp.isInteger,we.isLength=Lp.isLength,we.isMap=Lp.isMap,we.isMatch=Lp.isMatch,we.isMatchWith=Lp.isMatchWith,we.isNaN=Lp.isNaN,we.isNative=Lp.isNative,we.isNil=Lp.isNil,we.isNull=Lp.isNull,we.isNumber=Lp.isNumber,we.isObject=E,we.isObjectLike=Lp.isObjectLike,we.isPlainObject=Lp.isPlainObject,we.isRegExp=Lp.isRegExp,we.isSafeInteger=Lp.isSafeInteger,we.isSet=Lp.isSet,we.isString=Lp.isString,we.isSymbol=Lp.isSymbol,we.isTypedArray=Lp.isTypedArray,we.isUndefined=Lp.isUndefined,we.isWeakMap=Lp.isWeakMap,we.isWeakSet=Lp.isWeakSet,we.join=Ep.join,we.kebabCase=Rp.kebabCase,we.last=jo,we.lastIndexOf=Ep.lastIndexOf,we.lowerCase=Rp.lowerCase,we.lowerFirst=Rp.lowerFirst,we.lt=Lp.lt,we.lte=Lp.lte,we.max=Dp.max,we.maxBy=Dp.maxBy,we.mean=Dp.mean,we.meanBy=Dp.meanBy,we.min=Dp.min,we.minBy=Dp.minBy,we.stubArray=zp.stubArray,we.stubFalse=zp.stubFalse,we.stubObject=zp.stubObject,we.stubString=zp.stubString,we.stubTrue=zp.stubTrue,we.multiply=Dp.multiply,we.nth=Ep.nth,we.noop=zp.noop,we.now=Bp.now,we.pad=Rp.pad,we.padEnd=Rp.padEnd,we.padStart=Rp.padStart,we.parseInt=Rp.parseInt,we.random=xp.random,we.reduce=Np.reduce,we.reduceRight=Np.reduceRight,we.repeat=Rp.repeat,we.replace=Rp.replace,we.result=Cp.result,we.round=Dp.round,we.sample=Np.sample,we.size=Np.size,we.snakeCase=Rp.snakeCase,we.some=Np.some,we.sortedIndex=Ep.sortedIndex,we.sortedIndexBy=Ep.sortedIndexBy,we.sortedIndexOf=Ep.sortedIndexOf,we.sortedLastIndex=Ep.sortedLastIndex,we.sortedLastIndexBy=Ep.sortedLastIndexBy,we.sortedLastIndexOf=Ep.sortedLastIndexOf,we.startCase=Rp.startCase,we.startsWith=Rp.startsWith,we.subtract=Dp.subtract,we.sum=Dp.sum,we.sumBy=Dp.sumBy,we.template=Rp.template,we.times=zp.times,we.toFinite=Lp.toFinite,we.toInteger=C,we.toLength=Lp.toLength,we.toLower=Rp.toLower,we.toNumber=Lp.toNumber,we.toSafeInteger=Lp.toSafeInteger,we.toString=Lp.toString,we.toUpper=Rp.toUpper,we.trim=Rp.trim,we.trimEnd=Rp.trimEnd,we.trimStart=Rp.trimStart,we.truncate=Rp.truncate,we.unescape=Rp.unescape,we.uniqueId=zp.uniqueId,we.upperCase=Rp.upperCase,we.upperFirst=Rp.upperFirst,we.each=Np.forEach,we.eachRight=Np.forEachRight,we.first=Ep.head,Qp(we,(Ip={},Gt(we,(function(e,a){Up.call(we.prototype,a)||(Ip[a]=e)})),Ip),{chain:!1}),we.VERSION="4.17.21",(we.templateSettings=Rp.templateSettings).imports._=we,Oe(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){we[e].placeholder=we})),Oe(["drop","take"],(function(e,a){pe.prototype[e]=function(n){n=void 0===n?1:Zp(C(n),0)
var i=this.__filtered__&&!a?new pe(this):this.clone()
return i.__filtered__?i.__takeCount__=qp(n,i.__takeCount__):i.__views__.push({size:qp(n,Fp),type:e+(i.__dir__<0?"Right":"")}),i},pe.prototype[e+"Right"]=function(a){return this.reverse()[e](a).reverse()}})),Oe(["filter","map","takeWhile"],(function(e,a){var n=a+1,i=1==n||3==n
pe.prototype[e]=function(e){var a=this.clone()
return a.__iteratees__.push({iteratee:xt(e),type:n}),a.__filtered__=a.__filtered__||i,a}})),Oe(["head","last"],(function(e,a){var n="take"+(a?"Right":"")
pe.prototype[e]=function(){return this[n](1).value()[0]}})),Oe(["initial","tail"],(function(e,a){var n="drop"+(a?"":"Right")
pe.prototype[e]=function(){return this.__filtered__?new pe(this):this[n](1)}})),pe.prototype.compact=function(){return this.filter(R)},pe.prototype.find=function(e){return this.filter(e).head()},pe.prototype.findLast=function(e){return this.reverse().find(e)},pe.prototype.invokeMap=pa((function(e,a){return"function"==typeof e?new pe(this):this.map((function(n){return yl(n,e,a)}))})),pe.prototype.reject=function(e){return this.filter(ju(xt(e)))},pe.prototype.slice=function(e,a){e=C(e)
var n=this
return n.__filtered__&&(e>0||a<0)?new pe(n):(e<0?n=n.takeRight(-e):e&&(n=n.drop(e)),void 0!==a&&(n=(a=C(a))<0?n.dropRight(-a):n.take(a-e)),n)},pe.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},pe.prototype.toArray=function(){return this.take(Fp)},Gt(pe.prototype,(function(e,a){var n=/^(?:filter|find|map|reject)|While$/.test(a),i=/^(?:head|last)$/.test(a),r=we[i?"take"+("last"==a?"Right":""):a],t=i||/^find/.test(a)
r&&(we.prototype[a]=function(){var a=this.__wrapped__,o=i?[1]:arguments,s=a instanceof pe,l=o[0],u=s||k(a),c=function(e){var a=r.apply(we,Ln([e],o))
return i&&d?a[0]:a}
u&&n&&"function"==typeof l&&1!=l.length&&(s=u=!1)
var d=this.__chain__,h=!!this.__actions__.length,p=t&&!d,m=s&&!h
if(!t&&u){a=m?a:new pe(this)
var f=e.apply(a,o)
return f.__actions__.push({func:Th,args:[c],thisArg:void 0}),new Se(f,d)}return p&&m?e.apply(this,o):(f=this.thru(c),p?i?f.value()[0]:f.value():f)})})),Oe(["pop","push","shift","sort","splice","unshift"],(function(e){var a=Jp[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",i=/^(?:pop|shift)$/.test(e)
we.prototype[e]=function(){var e=arguments
if(i&&!this.__chain__){var r=this.value()
return a.apply(k(r)?r:[],e)}return this[n]((function(n){return a.apply(k(n)?n:[],e)}))}})),Gt(pe.prototype,(function(e,a){var n=we[a]
if(n){var i=n.name+""
Up.call(ge,i)||(ge[i]=[]),ge[i].push({name:a,func:n})}})),ge[ea(void 0,2).name]=[{name:"wrapper",func:void 0}],pe.prototype.clone=function(){var e=new pe(this.__wrapped__)
return e.__actions__=Ae(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=Ae(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=Ae(this.__views__),e},pe.prototype.reverse=function(){if(this.__filtered__){var e=new pe(this)
e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1
return e},pe.prototype.value=function(){var e=this.__wrapped__.value(),a=this.__dir__,n=k(e),i=a<0,r=n?e.length:0,t=function(e,a,n){for(var i=-1,r=n.length;++i<r;){var t=n[i],o=t.size
switch(t.type){case"drop":e+=o
break
case"dropRight":a-=o
break
case"take":a=Gp(a,e+o)
break
case"takeRight":e=Vp(e,a-o)}}return{start:e,end:a}}(0,r,this.__views__),o=t.start,s=t.end,l=s-o,u=i?s:o-1,c=this.__iteratees__,d=c.length,h=0,p=Hp(l,this.__takeCount__)
if(!n||!i&&r==l&&p==l)return Nh(e,this.__actions__)
var m=[]
e:for(;l--&&h<p;){for(var f=-1,v=e[u+=a];++f<d;){var g=c[f],y=g.iteratee,b=g.type,S=y(v)
if(2==b)v=S
else if(!S){if(1==b)continue e
break e}}m[h++]=v}return m},we.prototype.at=Kp.at,we.prototype.chain=Kp.wrapperChain,we.prototype.commit=Kp.commit,we.prototype.next=Kp.next,we.prototype.plant=Kp.plant,we.prototype.reverse=Kp.reverse,we.prototype.toJSON=we.prototype.valueOf=we.prototype.value=Kp.value,we.prototype.first=we.prototype.head,Wp&&(we.prototype[Wp]=Kp.toIterator)
const Yp=we},9189:(e,a,n)=>{"use strict"
function i(e,a){(null==a||a>e.length)&&(a=e.length)
for(var n=0,i=new Array(a);n<a;n++)i[n]=e[n]
return i}function r(e,a){for(var n=0;n<a.length;n++){var i=a[n]
i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function t(e,a,n){return a&&r(e.prototype,a),n&&r(e,n),e}n.d(a,{y:()=>A})
var o=function(){return"function"==typeof Symbol},s=function(e){return o()&&Boolean(Symbol[e])},l=function(e){return s(e)?Symbol[e]:"@@"+e}
o()&&!s("observable")&&(Symbol.observable=Symbol("observable"))
var u=l("iterator"),c=l("observable"),d=l("species")
function h(e,a){var n=e[a]
if(null!=n){if("function"!=typeof n)throw new TypeError(n+" is not a function")
return n}}function p(e){var a=e.constructor
return void 0!==a&&null===(a=a[d])&&(a=void 0),void 0!==a?a:A}function m(e){m.log?m.log(e):setTimeout((function(){throw e}))}function f(e){Promise.resolve().then((function(){try{e()}catch(e){m(e)}}))}function v(e){var a=e._cleanup
if(void 0!==a&&(e._cleanup=void 0,a))try{if("function"==typeof a)a()
else{var n=h(a,"unsubscribe")
n&&n.call(a)}}catch(e){m(e)}}function g(e){e._observer=void 0,e._queue=void 0,e._state="closed"}function k(e,a,n){e._state="running"
var i=e._observer
try{var r=h(i,a)
switch(a){case"next":r&&r.call(i,n)
break
case"error":if(g(e),!r)throw n
r.call(i,n)
break
case"complete":g(e),r&&r.call(i)}}catch(e){m(e)}"closed"===e._state?v(e):"running"===e._state&&(e._state="ready")}function y(e,a,n){if("closed"!==e._state){if("buffering"!==e._state)return"ready"!==e._state?(e._state="buffering",e._queue=[{type:a,value:n}],void f((function(){return function(e){var a=e._queue
if(a){e._queue=void 0,e._state="ready"
for(var n=0;n<a.length&&(k(e,a[n].type,a[n].value),"closed"!==e._state);++n);}}(e)}))):void k(e,a,n)
e._queue.push({type:a,value:n})}}var b=function(){function e(e,a){this._cleanup=void 0,this._observer=e,this._queue=void 0,this._state="initializing"
var n=new S(this)
try{this._cleanup=a.call(void 0,n)}catch(e){n.error(e)}"initializing"===this._state&&(this._state="ready")}return e.prototype.unsubscribe=function(){"closed"!==this._state&&(g(this),v(this))},t(e,[{key:"closed",get:function(){return"closed"===this._state}}]),e}(),S=function(){function e(e){this._subscription=e}var a=e.prototype
return a.next=function(e){y(this._subscription,"next",e)},a.error=function(e){y(this._subscription,"error",e)},a.complete=function(){y(this._subscription,"complete")},t(e,[{key:"closed",get:function(){return"closed"===this._subscription._state}}]),e}(),A=function(){function e(a){if(!(this instanceof e))throw new TypeError("Observable cannot be called as a function")
if("function"!=typeof a)throw new TypeError("Observable initializer must be a function")
this._subscriber=a}var a=e.prototype
return a.subscribe=function(e){return"object"==typeof e&&null!==e||(e={next:e,error:arguments[1],complete:arguments[2]}),new b(e,this._subscriber)},a.forEach=function(e){var a=this
return new Promise((function(n,i){if("function"==typeof e)var r=a.subscribe({next:function(a){try{e(a,t)}catch(e){i(e),r.unsubscribe()}},error:i,complete:n})
else i(new TypeError(e+" is not a function"))
function t(){r.unsubscribe(),n()}}))},a.map=function(e){var a=this
if("function"!=typeof e)throw new TypeError(e+" is not a function")
return new(p(this))((function(n){return a.subscribe({next:function(a){try{a=e(a)}catch(e){return n.error(e)}n.next(a)},error:function(e){n.error(e)},complete:function(){n.complete()}})}))},a.filter=function(e){var a=this
if("function"!=typeof e)throw new TypeError(e+" is not a function")
return new(p(this))((function(n){return a.subscribe({next:function(a){try{if(!e(a))return}catch(e){return n.error(e)}n.next(a)},error:function(e){n.error(e)},complete:function(){n.complete()}})}))},a.reduce=function(e){var a=this
if("function"!=typeof e)throw new TypeError(e+" is not a function")
var n=p(this),i=arguments.length>1,r=!1,t=arguments[1],o=t
return new n((function(n){return a.subscribe({next:function(a){var t=!r
if(r=!0,!t||i)try{o=e(o,a)}catch(e){return n.error(e)}else o=a},error:function(e){n.error(e)},complete:function(){if(!r&&!i)return n.error(new TypeError("Cannot reduce an empty sequence"))
n.next(o),n.complete()}})}))},a.concat=function(){for(var e=this,a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
var r=p(this)
return new r((function(a){var i,t=0
return function e(o){i=o.subscribe({next:function(e){a.next(e)},error:function(e){a.error(e)},complete:function(){t===n.length?(i=void 0,a.complete()):e(r.from(n[t++]))}})}(e),function(){i&&(i.unsubscribe(),i=void 0)}}))},a.flatMap=function(e){var a=this
if("function"!=typeof e)throw new TypeError(e+" is not a function")
var n=p(this)
return new n((function(i){var r=[],t=a.subscribe({next:function(a){if(e)try{a=e(a)}catch(e){return i.error(e)}var t=n.from(a).subscribe({next:function(e){i.next(e)},error:function(e){i.error(e)},complete:function(){var e=r.indexOf(t)
e>=0&&r.splice(e,1),o()}})
r.push(t)},error:function(e){i.error(e)},complete:function(){o()}})
function o(){t.closed&&0===r.length&&i.complete()}return function(){r.forEach((function(e){return e.unsubscribe()})),t.unsubscribe()}}))},a[c]=function(){return this},e.from=function(a){var n="function"==typeof this?this:e
if(null==a)throw new TypeError(a+" is not an object")
var r=h(a,c)
if(r){var t=r.call(a)
if(Object(t)!==t)throw new TypeError(t+" is not an object")
return function(e){return e instanceof A}(t)&&t.constructor===n?t:new n((function(e){return t.subscribe(e)}))}if(s("iterator")&&(r=h(a,u)))return new n((function(e){f((function(){if(!e.closed){for(var n,t=function(e,a){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]
if(n)return(n=n.call(e)).next.bind(n)
if(Array.isArray(e)||(n=function(e,a){if(e){if("string"==typeof e)return i(e,a)
var n=Object.prototype.toString.call(e).slice(8,-1)
return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?i(e,a):void 0}}(e))){n&&(e=n)
var r=0
return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(r.call(a));!(n=t()).done;){var o=n.value
if(e.next(o),e.closed)return}e.complete()}}))}))
if(Array.isArray(a))return new n((function(e){f((function(){if(!e.closed){for(var n=0;n<a.length;++n)if(e.next(a[n]),e.closed)return
e.complete()}}))}))
throw new TypeError(a+" is not observable")},e.of=function(){for(var a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i]
var r="function"==typeof this?this:e
return new r((function(e){f((function(){if(!e.closed){for(var a=0;a<n.length;++a)if(e.next(n[a]),e.closed)return
e.complete()}}))}))},t(e,null,[{key:d,get:function(){return this}}]),e}()
o()&&Object.defineProperty(A,Symbol("extensions"),{value:{symbol:c,hostReportError:m},configurable:!0})},835:(e,a,n)=>{"use strict"
n.r(a),n.d(a,{$$iterator:()=>t,isIterable:()=>o,isArrayLike:()=>s,isCollection:()=>l,getIterator:()=>u,getIteratorMethod:()=>c,createIterator:()=>d,forEach:()=>p,$$asyncIterator:()=>f,isAsyncIterable:()=>v,getAsyncIterator:()=>g,getAsyncIteratorMethod:()=>k,createAsyncIterator:()=>y,forAwaitEach:()=>A})
var i="function"==typeof Symbol?Symbol:void 0,r=i&&i.iterator,t=r||"@@iterator"
function o(e){return!!c(e)}function s(e){var a=null!=e&&e.length
return"number"==typeof a&&a>=0&&a%1==0}function l(e){return Object(e)===e&&(s(e)||o(e))}function u(e){var a=c(e)
if(a)return a.call(e)}function c(e){if(null!=e){var a=r&&e[r]||e["@@iterator"]
if("function"==typeof a)return a}}function d(e){if(null!=e){var a=u(e)
if(a)return a
if(s(e))return new h(e)}}function h(e){this._o=e,this._i=0}function p(e,a,n){if(null!=e){if("function"==typeof e.forEach)return e.forEach(a,n)
var i=0,r=u(e)
if(r){for(var t;!(t=r.next()).done;)if(a.call(n,t.value,i++,e),i>9999999)throw new TypeError("Near-infinite iteration.")}else if(s(e))for(;i<e.length;i++)e.hasOwnProperty(i)&&a.call(n,e[i],i,e)}}h.prototype[t]=function(){return this},h.prototype.next=function(){return void 0===this._o||this._i>=this._o.length?(this._o=void 0,{value:void 0,done:!0}):{value:this._o[this._i++],done:!1}}
var m=i&&i.asyncIterator,f=m||"@@asyncIterator"
function v(e){return!!k(e)}function g(e){var a=k(e)
if(a)return a.call(e)}function k(e){if(null!=e){var a=m&&e[m]||e["@@asyncIterator"]
if("function"==typeof a)return a}}function y(e){if(null!=e){var a=g(e)
if(a)return a
var n=d(e)
if(n)return new b(n)}}function b(e){this._i=e}function S(e,a,n){var i
return new Promise((function(r){r((i=e[a](n)).value)})).then((function(e){return{value:e,done:i.done}}))}function A(e,a,n){var i=y(e)
if(i){var r=0
return new Promise((function(t,o){!function s(){return i.next().then((function(i){return i.done?t():Promise.resolve(a.call(n,i.value,r++,e)).then(s).catch(o),null})).catch(o),null}()}))}}b.prototype[f]=function(){return this},b.prototype.next=function(e){return S(this._i,"next",e)},b.prototype.return=function(e){return this._i.return?S(this._i,"return",e):Promise.resolve({value:e,done:!0})},b.prototype.throw=function(e){return this._i.throw?S(this._i,"throw",e):Promise.reject(e)}}}])
